.code32
.text
.globl main
main:
		jmp	_07f9e8_func

.data

_010003_data:
		.ascii  "\x90\x90\x90\x90\x90\x90\x90\x90"
		.ascii  "\x90\x90\x90\x90\x90"

.text



_010010_func:
		pusha  
		mov    $_0107bb_func,%edi
		add    $0x00005a,%edi
		mov    $0xfffffec0,%eax

	_01001e_jump:
		mov    %eax,(%edi)
		add    $0x000060,%edi
		add    $0x000004,%eax
		jne    _01001e_jump
		mov    $_090014_data,%edi
		mov    $0x0000c8,%cl

	_01002f_jump:
		movl   $0x00ffff,(%edi)
		movl   $0x000000,0x000004(%edi)
		add    $0x000020,%edi
		dec    %cl
		jne    _01002f_jump
		popa   
		ret    



_010045_func:
		pusha  
		mov    %eax,_09193e_data
		mov    %esi,%eax
		add    $0x000004,%eax
		mov    %eax,_091914_data
		mov    (%esi),%eax
		mov    %eax,_091922_data
		xor    %eax,%eax
		mov    0x00002a(%esi),%al
		sub    0x000024(%esi),%al
		mov    %eax,_09192e_data
		neg    %eax
		mov    %eax,_091932_data
		xor    %eax,%eax
		mov    0x000027(%esi),%al
		sub    0x000025(%esi),%al
		mov    %eax,_091936_data
		neg    %eax
		mov    %eax,_09193a_data
		mov    %esi,%ebx
		mov    $0x000003,%cl
		add    $0x000004,%ebx
		add    $0x000010,%esi
		mov    0x000004(%ebx),%eax
		mov    %eax,%edx

	_010093_jump:
		mov    (%esi),%edi
		cmp    %eax,%edi
		jge    _01009b_jump
		mov    %edi,%eax

	_01009b_jump:
		cmp    %edx,%edi
		jle    _0100a1_jump
		mov    %edi,%edx

	_0100a1_jump:
		add    $0x000008,%esi
		dec    %cl
		jne    _010093_jump
		cmp    $0x0000c8,%eax
		jge    _01263e_jump
		or     %edx,%edx
		js     _01263e_jump
		or     %eax,%eax
		jns    _0100c1_jump
		xor    %eax,%eax

	_0100c1_jump:
		mov    %eax,_090010_data
		cmp    $0x0000c8,%edx
		jb     _0100d3_jump
		mov    $0x0000c7,%edx

	_0100d3_jump:
		sub    %eax,%edx
		inc    %edx
		mov    %edx,_09194a_data
		mov    (%ebx),%esi
		mov    0x000004(%ebx),%ecx
		mov    0x000018(%ebx),%ebp
		mov    0x00001c(%ebx),%edi
		or     %ecx,%ecx
		jns    _0100f3_jump
		or     %edi,%edi
		js     _01022e_jump

	_0100f3_jump:
		cmp    $0x0000c8,%ecx
		jl     _010107_jump
		cmp    $0x0000c8,%edi
		jge    _01022e_jump

	_010107_jump:
		mov    0x000026(%ebx),%ah
		sub    %ebp,%esi
		mov    0x000027(%ebx),%al
		mov    _091932_data,%edx
		sub    %edi,%ecx
		jns    _010129_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000020(%ebx),%ah
		neg    %esi
		mov    0x000021(%ebx),%al
		neg    %edx

	_010129_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0101f9_func
		mov    %al,_010216_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_010223_jump
		mov    %ax,_010198_data
		or     %edx,%edx
		jns    _010162_jump
		sub    $0x000002,%edx

	_010162_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_01021a_jump
		mov    %ax,_0101b0_func
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _0101c6_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
		data16 		.byte 0x0000b8

.data

_010198_data:
		.ascii  "\xff\xff\xf7\xe7\x66\x89\xc2\xc1"
		.ascii  "\xe2\x10\xc1\xe8\x10\x00\xc7\x52"
		.ascii  "\x66\x89\xf0\xc1\xe0\x10\x66\xb8"

_0101b0_data:
		.ascii  "\xff\xff\xf7\xe7\x5a\x66\x89\xc2"
		.ascii  "\xc1\xe8\x10\x66\x01\xc5\x29\xf9"
		.ascii  "\x58\xbf\xac\x26\x00\x00"

_0101c6_data:
		.ascii  "\x57\x01\xcf\x81\xff\x74\x27\x00"
		.ascii  "\x00\x72\x08\x81\xef\x74\x27\x00"
		.ascii  "\x00\x29\xf9\x5f\xc1\xe7\x05"

_0101dd_data:
		.ascii  "\x66\x39\xaf"
		.long   _042a94_jump
		.ascii  "\x76\x14\x66\x89\xaf"
		.long   _042a94_jump
		.ascii  "\x88\xbf"
		.long   _042a9c_jump
		.ascii  "\xc6\x87"
		.long   _042aa4_jump

.text



_0101f9_func:
		add    %ah,0x000039(%esi)
		scas   %es:(%edi),%eax
		cwtl   
		sub    (%eax,%eax,1),%al
		jae    _010217_jump
		mov    %bp,_042a98_jump(%edi)
		mov    %bh,_042aa0_jump(%edi)
		movb   $0x000000,_042aa8_jump(%edi)

	_010217_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _0101dd_jump

	_01022e_jump:
		mov    _091914_data,%ebx
		mov    0x000018(%ebx),%esi
		mov    0x00001c(%ebx),%ecx
		mov    0x000010(%ebx),%ebp
		mov    0x000014(%ebx),%edi
		or     %ecx,%ecx
		jns    _01024c_jump
		or     %edi,%edi
		js     _010387_jump

	_01024c_jump:
		cmp    $0x0000c8,%ecx
		jl     _010260_jump
		cmp    $0x0000c8,%edi
		jge    _010387_jump

	_010260_jump:
		mov    0x000024(%ebx),%al
		sub    %ebp,%esi
		mov    0x000025(%ebx),%ah
		mov    _09193a_data,%edx
		sub    %edi,%ecx
		jns    _010282_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000026(%ebx),%al
		neg    %esi
		mov    0x000027(%ebx),%ah
		neg    %edx

	_010282_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_01034c_jump
		mov    %al,_010369_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_01037c_jump
		mov    %ax,_0102f1_jump
		or     %edx,%edx
		jns    _0102bb_jump
		sub    $0x000002,%edx

	_0102bb_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_010373_jump
		mov    %ax,_010309_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _01031f_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_0102f1_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_010309_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_01031f_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _010332_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_010332_jump:
		pop    %edi
		shl    $0x000005,%edi

	_010336_jump:
		cmp    %bp,_042a94_jump(%edi)
		jbe    _010353_jump
		mov    %bp,_042a94_jump(%edi)
		movb   $_0000ff_case,_042a9c_jump(%edi)
		mov    %bh,_042aa4_jump(%edi)

	_010353_jump:
		cmp    %bp,_042a98_jump(%edi)
		jae    _010370_jump
		mov    %bp,_042a98_jump(%edi)
		movb   $_0000ff_case,_042aa0_jump(%edi)
		mov    %bh,_042aa8_jump(%edi)

	_010370_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _010336_jump

	_010387_jump:
		mov    _091914_data,%ebx
		mov    0x000010(%ebx),%esi
		mov    0x000014(%ebx),%ecx
		mov    0x000008(%ebx),%ebp
		mov    0x00000c(%ebx),%edi
		or     %ecx,%ecx
		jns    _0103a5_jump
		or     %edi,%edi
		js     _0104e0_jump

	_0103a5_jump:
		cmp    $0x0000c8,%ecx
		jl     _0103b9_jump
		cmp    $0x0000c8,%edi
		jge    _0104e0_jump

	_0103b9_jump:
		mov    0x000023(%ebx),%al
		sub    %ebp,%esi
		mov    0x000022(%ebx),%ah
		mov    _09192e_data,%edx
		sub    %edi,%ecx
		jns    _0103db_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000025(%ebx),%al
		neg    %esi
		mov    0x000024(%ebx),%ah
		neg    %edx

	_0103db_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0104ab_jump
		mov    %al,_0104c8_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_0104d5_jump
		mov    %ax,_01044a_jump
		or     %edx,%edx
		jns    _010414_jump
		sub    $0x000002,%edx

	_010414_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_0104cc_jump
		mov    %ax,_010462_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _010478_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_01044a_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_010462_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_010478_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _01048b_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_01048b_jump:
		pop    %edi
		shl    $0x000005,%edi

	_01048f_jump:
		cmp    %bp,_042a94_jump(%edi)
		jbe    _0104ac_jump
		mov    %bp,_042a94_jump(%edi)
		mov    %bh,_042a9c_jump(%edi)
		movb   $_0000ff_case,_042aa4_jump(%edi)

	_0104ac_jump:
		cmp    %bp,_042a98_jump(%edi)
		jae    _0104c9_jump
		mov    %bp,_042a98_jump(%edi)
		mov    %bh,_042aa0_jump(%edi)
		movb   $_0000ff_case,_042aa8_jump(%edi)

	_0104c9_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _01048f_jump

	_0104e0_jump:
		mov    _091914_data,%ebx
		mov    (%ebx),%ebp
		mov    0x000004(%ebx),%edi
		mov    0x000008(%ebx),%esi
		mov    0x00000c(%ebx),%ecx
		or     %ecx,%ecx
		jns    _0104fd_jump
		or     %edi,%edi
		js     _010638_jump

	_0104fd_jump:
		cmp    $0x0000c8,%ecx
		jl     _010511_jump
		cmp    $0x0000c8,%edi
		jge    _010638_jump

	_010511_jump:
		mov    0x000020(%ebx),%al
		sub    %ebp,%esi
		mov    0x000021(%ebx),%ah
		mov    _091936_data,%edx
		sub    %edi,%ecx
		jns    _010533_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000022(%ebx),%al
		neg    %esi
		mov    0x000023(%ebx),%ah
		neg    %edx

	_010533_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0105fd_jump
		mov    %al,_01061a_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_01062d_jump
		mov    %ax,_0105a2_jump
		or     %edx,%edx
		jns    _01056c_jump
		sub    $0x000002,%edx

	_01056c_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_010624_jump
		mov    %ax,_0105ba_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _0105d0_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_0105a2_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_0105ba_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_0105d0_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _0105e3_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_0105e3_jump:
		pop    %edi
		shl    $0x000005,%edi

	_0105e7_jump:
		cmp    %bp,_042a94_jump(%edi)
		jbe    _010604_jump
		mov    %bp,_042a94_jump(%edi)
		movb   $0x000000,_042a9c_jump(%edi)
		mov    %bh,_042aa4_jump(%edi)

	_010604_jump:
		cmp    %bp,_042a98_jump(%edi)
		jae    _010621_jump
		mov    %bp,_042a98_jump(%edi)
		movb   $0x000000,_042aa0_jump(%edi)
		mov    %bh,_042aa8_jump(%edi)

	_010621_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _0105e7_jump

	_010638_jump:
		mov    _090010_data,%ebp
		mov    %ebp,%esi
		shl    $0x000002,%esi
		add    %ebp,%esi
		shl    $0x000006,%esi
		shl    $0x000005,%ebp
		add    _09193e_data,%esi
		mov    %esi,_091942_data
		mov    %ebp,_091946_data

	_01065d_jump:
		mov    _091946_data,%ebp
		mov    _090014_data(%ebp),%edi
		movw   $0x00ffff,_090014_data(%ebp)
		mov    _090018_data(%ebp),%ecx
		movw   $0x000000,_090018_data(%ebp)
		cmp    $0x007e40,%edi
		jae    _012621_jump
		cmp    $0x007d00,%ecx
		jb     _012621_jump
		sub    %edi,%ecx
		inc    %ecx
		mov    _090028_data(%ebp),%edx
		mov    _090024_data(%ebp),%esi
		shl    $0x000010,%ecx
		sub    %esi,%edx
		xor    %eax,%eax
		inc    %edx
		shl    $0x000008,%esi
		idiv   %ecx
		mov    %eax,%ebx
		mov    _090020_data(%ebp),%edx
		mov    _09001c_data(%ebp),%eax
		sub    %eax,%edx
		add    %eax,%esi
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,%dx
		shl    $0x000010,%edx
		mov    %bx,%ax
		rol    $0x000010,%eax
		shr    $0x000010,%ebx
		mov    %bl,%dl
		mov    %si,%bx
		xor    %esi,%esi
		shr    $0x000010,%ecx
		sub    $0x007d00,%edi
		jns    _01070b_jump
		mov    %eax,%ebp
		mov    %edx,%esi
		neg    %edi
		sub    %edi,%ecx
		mul    %edi
		add    %eax,%ebx
		adc    %dl,%bh
		mov    %esi,%eax
		mul    %edi
		add    %dl,%bl
		add    %al,%bh
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ebp,%eax
		xor    %edi,%edi

	_01070b_jump:
		mov    %edi,%ebp
		add    %ecx,%edi
		cmp    $0x000140,%edi
		jb     _01071f_jump
		sub    $0x000140,%edi
		sub    %edi,%ecx

	_01071f_jump:
		mov    %ebp,%edi
		add    _091942_data,%edi
		mov    %edi,%ebp
		and    $0x000003,%ebp
		sub    %bp,%cx
		jns    _010738_jump
		add    %bp,%cx
		mov    %ecx,%ebp
		xor    %ecx,%ecx

	_010738_jump:
		add    %ebp,%edi
		push   %ecx
		mov    %bp,%cx
		shl    $0x000005,%cx
		shl    $0x000003,%bp
		sub    %bp,%cx
		sub    $_01079b_func,%ecx
		neg    %ecx
		jmp    *%ecx



_01079b_func:
		pop    %ecx
		push   %ecx
		shr    $0x000002,%ecx
		lea    (%edi,%ecx,4),%edi
		mov    %cx,%bp
		shl    $0x000005,%bp
		shl    $0x000007,%cx
		sub    %bp,%cx
		sub    $_0125bb_jump,%ecx
		neg    %ecx
		jmp    *%ecx



_0107bb_func:
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh

	_0125bb_jump:
		pop    %ecx
		and    $0x000003,%ecx
		add    %ecx,%edi
		mov    %cx,%bp
		shl    $0x000005,%cx
		shl    $0x000003,%bp
		sub    %bp,%cx
		sub    $_012621_jump,%ecx
		neg    %ecx
		jmp    *%ecx

	_012621_jump:
		addl   $0x000140,_091942_data
		addl   $0x000020,_091946_data
		decl   _09194a_data
		jne    _01065d_jump

	_01263e_jump:
		popa   
		ret    



_01268a_func:
		pushaw 
		cld    
		sub    $0x000050,%ebx
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000001,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126a9_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126a9_jump
		pop    %esi
		add    %edx,%esi
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000002,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126d3_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126d3_jump
		pop    %esi
		add    %edx,%esi
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000004,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126fd_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126fd_jump
		pop    %esi
		add    %edx,%esi
		mov    $0x0ab000,%edi
		mov    $0x000008,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_012726_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _012726_jump
		popaw  
		ret    



_012748_func:
		pusha  
		mov    $0x000000,%ah
		int    $0x00001a
		shl    $0x000010,%ecx
		and    $0x00ffff,%edx
		add    %ecx,%edx
		mov    %edx,(%esi)
		popa   
		ret    



_012783_func:
		mov    $0x0003c4,%edx
		mov    $0x000f02,%eax
		out    %ax,(%dx)
		mov    $0x000fa0,%ecx
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		ret    

_012799_switch:
		.long   0

_01279d_switch:
		.long   0


	_0127a1_jump:
		add    %dl,-0x000077(%ebp)
		or     $_01279d_switch,%eax
		mov    %eax,%ebp
		mov    %edx,%ecx
		and    $_0000ff_case,%ecx
		mov    %ecx,_012799_switch
		and    $0x00ff00,%edx
		mov    %dh,_0127a1_jump
		mov    $0x000001,%ah
		mov    %edi,%ecx
		and    $0x000003,%ecx
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000001,%ch
		sub    _01279d_switch,%esi
		mov    $0x000002,%al
		out    %ax,(%dx)

	_0127de_jump:
		push   %ecx
		push   %edi
		add    _01279d_switch,%esi
		push   %esi
		push   %ebp

	_0127e8_jump:
		push   %edi
		push   %esi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %esi
		pop    %edi
		add    $0x000050,%edi
		add    _012799_switch,%esi
		dec    %ebp
		jne    _0127e8_jump
		pop    %ebp
		pop    %esi
		pop    %edi
		call   _012b30_func
		mov    _0127a1_jump,%ch
		shl    %ch
		cmp    $0x000010,%ch
		jne    _01282c_jump
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		inc    %esi
		mov    $0x000001,%ch

	_01282c_jump:
		mov    %ch,_0127a1_jump
		pop    %ecx
		shl    %ch
		cmp    $0x000010,%ch
		jne    _0127de_jump
		pop    %ebp
		ret    



_01283c_func:
		push   %dx
		mov    $0x0003c4,%dx
		and    $0x00ffff,%eax
		mov    %al,%ah
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %dx
		ret    



_012850_func:
		push   %ebp
		push   %ebp
		movl   $0x000000,(%esp)
		push   %ecx
		push   %ebx
		mov    %ecx,%ebx
		add    $0x004600,%ebx
		sub    $0x000080,%edx
		mov    $0x000000,%cl
		jmp    _01288b_jump

	_01286d_jump:
		addl   $0x000500,(%esp)
		cmp    %ebx,(%esp)
		jb     _012880_jump
		subl   $0x004600,(%esp)

	_012880_jump:
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _0129ce_jump

	_01288b_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000001,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		jmp    _0128a9_jump

	_0128a7_jump:
		inc    %cl

	_0128a9_jump:
		cmp    $0x000014,%cl
		jge    _0129be_jump
		mov    0x000004(%eax),%di
		and    $_0000ff_case,%di
		cmp    $0x000000,%di
		jne    _0129b0_jump
		cmp    $0x000000,%bx
		jne    _012933_jump
		push   %edi
		push   %ecx
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    0x000014(%esp),%ecx
		push   %edx
		mov    0x00001c(%esp),%edx
		push   %eax
		push   %ebx
		push   %edx
		mov    %edi,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		mov    %al,%bl
		mov    %ecx,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		cmp    %bl,%al
		je     _0128ff_jump
		stc    
		jmp    _012900_jump

	_0128ff_jump:
		clc    

	_012900_jump:
		pop    %edx
		pop    %ebx
		pop    %eax
		pop    %edx
		pop    %ecx
		pop    %edi
		jae    _012919_jump
		cmpl   $0x000050,0x000014(%esp)
		je     _01292a_jump
		movl   $0x000050,0x000014(%esp)
		jmp    _012980_jump

	_012919_jump:
		cmpl   $0x000000,0x000014(%esp)
		je     _01292a_jump
		movl   $0x000000,0x000014(%esp)
		jmp    _012980_jump

	_01292a_jump:
		incl   0x00000c(%edx,%ebp,1)
		jmp    _0129b0_jump

	_012933_jump:
		movl   $0x000000,0x000014(%esp)
		push   %edi
		push   %ecx
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    0x000014(%esp),%ecx
		push   %edx
		mov    0x00001c(%esp),%edx
		push   %eax
		push   %ebx
		push   %edx
		mov    %edi,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		mov    %al,%bl
		mov    %ecx,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		cmp    %bl,%al
		je     _01296f_jump
		stc    
		jmp    _012970_jump

	_01296f_jump:
		clc    

	_012970_jump:
		pop    %edx
		pop    %ebx
		pop    %eax
		pop    %edx
		pop    %ecx
		pop    %edi
		jae    _012980_jump
		movl   $0x000050,0x000014(%esp)

	_012980_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		sub    0x00001c(%esp),%edi
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		incl   0x00000c(%edx,%ebp,1)
		jmp    _0129b0_jump

	_0129b0_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _0128a7_jump

	_0129be_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		pop    %ebx
		pop    %ecx
		jmp    _01286d_jump

	_0129ce_jump:
		pop    %ebx
		pop    %ecx
		pop    %ebp
		pop    %ebp
		ret    



_0129d3_func:
		push   %ebp
		push   %ebx
		mov    %ecx,%ebx
		sub    $0x000080,%edx
		mov    $0x000000,%cl
		jmp    _0129ef_jump

	_0129e1_jump:
		add    %ebx,(%esp)
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _012a70_jump

	_0129ef_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000000,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		jmp    _012a0d_jump

	_012a0b_jump:
		inc    %cl

	_012a0d_jump:
		cmp    $0x000014,%cl
		jge    _012a60_jump
		mov    0x000004(%eax),%di
		and    $_0000ff_case,%di
		cmp    $0x000000,%di
		je     _012a55_jump
		cmp    $0x000000,%bx
		je     _012a2d_jump

	_012a27_jump:
		incl   0x00000c(%edx,%ebp,1)
		jmp    _012a55_jump

	_012a2d_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		jmp    _012a27_jump

	_012a55_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _012a0b_jump

	_012a60_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		pop    %ebx
		pop    %ecx
		jmp    _0129e1_jump

	_012a70_jump:
		pop    %ebx
		pop    %ebp
		ret    



_012a73_func:
		push   %ebp
		push   %ebx
		mov    %ecx,%ebx
		sub    $0x000080,%edx
		add    $0x000078,%eax
		add    %edi,%eax
		mov    $0x00000e,%cl
		jmp    _012a8e_jump

	_012a86_jump:
		dec    %cl
		je     _012b2d_jump

	_012a8e_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000000,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		add    $0x000006,%eax
		add    $0x000004,%esi
		addl   $0x000004,0x00000c(%esp)
		jmp    _012ab7_jump

	_012ab5_jump:
		inc    %cl

	_012ab7_jump:
		cmp    $0x000013,%cl
		jge    _012b15_jump
		mov    0x000004(%eax),%di
		and    $_0000ff_case,%di
		je     _012ad0_jump
		or     %bx,%bx
		je     _012ae0_jump
		incl   0x00000c(%edx,%ebp,1)

	_012ad0_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		addl   $0x000004,0x00000c(%esp)
		jmp    _012ab5_jump

	_012ae0_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		addl   $0x000004,0x000014(%esp)
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		incl   0x00000c(%edx,%ebp,1)
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _012ab5_jump

	_012b15_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		addl   $0x0004b0,0x000008(%esp)
		pop    %ebx
		pop    %ecx
		jmp    _012a86_jump

	_012b2d_jump:
		pop    %ebx
		pop    %ebp
		ret    



_012b30_func:
		shl    %ah
		cmp    $0x000010,%ah
		jne    _012b3a_jump
		inc    %edi
		mov    $0x000001,%ah

	_012b3a_jump:
		out    %ax,(%dx)
		ret    



_012b3d_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012b6d_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		mov    %esi,%edx
		mov    %dl,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012b9e_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000007,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012bce_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000008,(%edi)
		movb   $0x000007,0x000050(%edi)
		call   _012b30_func
		movb   $0x000007,(%edi)
		movb   $0x000006,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012c0e_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x000050(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000006,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012c5b_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000003,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012c8b_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000005,(%edi)
		movb   $0x000007,0x000050(%edi)
		movb   $0x000007,0x0000a0(%edi)
		movb   $0x000005,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000005,(%edi)
		movb   $0x000007,0x000050(%edi)
		movb   $0x000007,0x0000a0(%edi)
		movb   $0x000005,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000005,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012d07_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,0x000050(%edi)
		call   _012b30_func
		movb   $0x000004,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012d40_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000006,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012dbc_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000003,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000002,(%edi)
		movb   $0x000005,0x000050(%edi)
		movb   $0x000003,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000004,(%edi)
		movb   $0x000002,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012e13_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000007,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000007,0x000140(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000008,0x000140(%edi)
		movb   $0x000006,0x000190(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000008,0x000140(%edi)
		movb   $0x000006,0x000190(%edi)
		call   _012b30_func
		movb   $0x000007,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000007,0x000140(%edi)
		call   _012b30_func
		movb   $0x000006,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012eed_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000004,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000003,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		movb   $0x000004,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000002,(%edi)
		movb   $0x000004,0x000050(%edi)
		movb   $0x000003,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000003,(%edi)
		movb   $0x000002,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012fde_func:
		femms  
		or     $0x000008,%al

	_012fe2_jump:
		sgdtl  (%ebx)
		pop    %es



_012fe6_func:
		pusha  
		cmp    $0x000000,%ebx
		jle    _0130ac_jump
		cmp    $0x000000,%ecx
		jle    _0130ac_jump
		shl    $0x000004,%edx
		add    %edx,%edi
		shl    $0x000002,%edx
		add    %edx,%edi
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %edx
		add    %esi,%ecx
		mov    %esi,%eax
		shr    $0x000002,%esi
		and    $0x000003,%eax
		je     _013047_jump
		push   %edi
		push   %ebx
		mov    _012fde_func(%eax),%al
		mov    %ecx,%ebx
		shr    $0x000002,%ebx
		cmp    %esi,%ebx
		jne    _013036_jump
		mov    %ecx,%ebx
		and    $0x000003,%ebx
		mov    _012fe2_jump(%ebx),%ah
		and    %ah,%al

	_013036_jump:
		pop    %ebx
		out    %al,(%dx)
		add    %esi,%edi
		mov    %ebx,%eax

	_01303c_jump:
		movb   $0x000000,(%edi)
		add    $0x000050,%edi
		dec    %eax
		jne    _01303c_jump
		pop    %edi
		inc    %esi

	_013047_jump:
		mov    %ecx,%eax
		shr    $0x000002,%eax
		sub    %esi,%eax
		jl     _0130ac_jump
		je     _01308e_jump
		push   %edi
		push   %ecx
		push   %ebx
		add    %esi,%edi
		mov    %eax,%ecx
		mov    $0x000050,%esi
		mov    $0x00000f,%al
		sub    %ecx,%esi
		out    %al,(%dx)
		xor    %eax,%eax
		push   %edx
		mov    %ecx,%edx
		shr    $0x000002,%ecx
		and    $0x000003,%edx
		jne    _01307d_jump
		mov    %ecx,%edx

	_013072_jump:
		rep stos %eax,%es:(%edi)
		mov    %edx,%ecx
		add    %esi,%edi
		dec    %ebx
		jne    _013072_jump
		jmp    _01308a_jump

	_01307d_jump:
		push   %ecx
		rep stos %eax,%es:(%edi)
		mov    %edx,%ecx
		rep stos %al,%es:(%edi)
		pop    %ecx
		add    %esi,%edi
		dec    %ebx
		jne    _01307d_jump

	_01308a_jump:
		pop    %edx
		pop    %ebx
		pop    %ecx
		pop    %edi

	_01308e_jump:
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		and    $0x000003,%eax
		je     _0130ac_jump
		mov    _012fe2_jump(%eax),%al
		add    %ecx,%edi
		out    %al,(%dx)
		mov    %ebx,%eax

	_0130a3_jump:
		movb   $0x000000,(%edi)
		add    $0x000050,%edi
		dec    %eax
		jne    _0130a3_jump

	_0130ac_jump:
		popa   
		ret    



_0130ae_func:
		push   %ebp
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		pop    %ebp
		pop    %ecx
		push   %edi
		mov    %ecx,%ebx
		inc    %ebx

	_0130de_jump:
		movb   $_0000ff_case,(%edi)
		add    $0x000050,%edi
		dec    %ebx
		jne    _0130de_jump
		pop    %edi
		call   _012b30_func
		mov    %ecx,%ebx
		dec    %ebp
		push   %ecx
		mov    %ecx,%ebx
		shl    $0x000006,%ecx
		shl    $0x000004,%ebx
		add    %ecx,%ebx

	_0130fb_jump:
		movb   $_0000ff_case,(%edi)
		movb   $_0000ff_case,(%edi,%ebx,1)
		call   _012b30_func
		dec    %ebp
		jne    _0130fb_jump
		pop    %ecx
		inc    %ecx

	_01310c_jump:
		movb   $_0000ff_case,(%edi)
		add    $0x000050,%edi
		dec    %ecx
		jne    _01310c_jump
		pop    %edi
		pop    %ebp
		ret    



_0131a9_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		jmp    _0131d7_jump

	_0131c6_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _01372f_jump

	_0131d7_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_0131df_jump:
		cmp    $0x000000,%ecx
		je     _013728_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _0131f9_jump
		sub    0x000018(%esp),%esi

	_0131f9_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _0134dd_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _013405_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _013684_jump

	_013405_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _013684_jump

	_0134dd_jump:
		test   $0x000002,%edi
		je     _013684_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_013684_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _013718_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_013718_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _0131df_jump

	_013728_jump:
		pop    %ebp
		pop    %ecx
		jmp    _0131c6_jump

	_01372f_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_013736_func:
		push   %ebp
		mov    %esi,%ebp
		push   %edx
		push   %eax
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		and    $0x0000fc,%al
		or     $0x000001,%al
		out    %al,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		mov    $0x00000f,%ah
		out    %ax,(%dx)
		mov    %ecx,%edi
		mov    $0x0ab000,%esi
		add    $0x000502,%edi
		add    $0x000502,%esi
		mov    $0x0000b8,%ecx

	_01376e_jump:
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		add    $0x00004c,%edi
		add    $0x00004c,%esi
		dec    %ecx
		jne    _01376e_jump
		cli    
		xor    %ecx,%ecx
		jmp    _013791_jump

	_013780_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000c,%cl
		jge    _013850_jump

	_013791_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_013799_jump:
		cmp    $0x000000,%ecx
		je     _013849_jump
		push   %ecx
		mov    0x000000(%ebp),%esi
		mov    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		or     %ecx,%ecx
		je     _01383f_jump
		shl    $0x000002,%ecx
		add    $0x000001,%ecx
		mov    %ecx,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		mov    %eax,%edx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)

	_01383f_jump:
		pop    %ecx
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _013799_jump

	_013849_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013780_jump

	_013850_jump:
		push   %edx
		push   %eax
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		and    $0x0000fc,%al
		out    %al,(%dx)
		pop    %eax
		pop    %edx
		pop    %ebp
		sti    
		ret    



_013864_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		mov    $0x000000,%cl
		jmp    _013894_jump

	_013883_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _013dec_jump

	_013894_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_01389c_jump:
		cmp    $0x000000,%ecx
		je     _013de5_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _0138b6_jump
		sub    0x000018(%esp),%esi

	_0138b6_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _013b9a_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _013ac2_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _013d41_jump

	_013ac2_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _013d41_jump

	_013b9a_jump:
		test   $0x000002,%edi
		je     _013d41_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_013d41_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _013dd5_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_013dd5_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _01389c_jump

	_013de5_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013883_jump

	_013dec_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_013df3_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		mov    $0x000000,%cl
		jmp    _013e23_jump

	_013e12_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000c,%cl
		jge    _01437b_jump

	_013e23_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_013e2b_jump:
		cmp    $0x000000,%ecx
		je     _014374_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _013e45_jump
		sub    0x000018(%esp),%esi

	_013e45_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _014129_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _014051_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _0142d0_jump

	_014051_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _0142d0_jump

	_014129_jump:
		test   $0x000002,%edi
		je     _0142d0_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_0142d0_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _014364_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_014364_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _013e2b_jump

	_014374_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013e12_jump

	_01437b_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_014382_func:
		push   %ebp
		push   %ecx
		push   %ecx
		mov    %ecx,%ebp
		mov    %edx,%esi
		mov    $0x0000f0,%ecx
		movl   $0x00000e,0x000004(%esp)
		jmp    _0143a9_jump

	_014398_jump:
		decl   0x000004(%esp)
		je     _0143e1_jump
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _0143e1_jump
		add    0x000008(%ebx),%edi

	_0143a9_jump:
		push   %ebx
		push   %esi
		xor    %ebx,%ebx
		movl   $0x000014,0x000008(%esp)
		jmp    _0143c3_jump

	_0143b7_jump:
		add    $0x000006,%esi
		add    $0x000004,%edi
		decl   0x000008(%esp)
		je     _0143dd_jump

	_0143c3_jump:
		mov    0x000004(%esi),%bl
		cmp    $0x000002,%bl
		jne    _0143b7_jump
		mov    (%esi),%bx
		mov    0x000000(%ebp,%ebx,4),%edx
		cmp    $0x000000,%edx
		je     _0143b7_jump
		push   %edi
		call   *%edx
		pop    %edi
		jmp    _0143b7_jump

	_0143dd_jump:
		pop    %esi
		pop    %ebx
		jmp    _014398_jump

	_0143e1_jump:
		pop    %ecx
		pop    %ecx
		pop    %ebp
		ret    



_0143e5_func:
		push   %ebp
		push   %ecx
		push   %ecx
		mov    %ecx,%ebp
		mov    %edx,%esi
		mov    $0x0000f0,%ecx
		add    0x000008(%ebx),%edi
		add    $0x000050,%edi
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _014452_jump
		movl   $0x00000c,0x000004(%esp)
		jmp    _01441a_jump

	_014409_jump:
		decl   0x000004(%esp)
		je     _014452_jump
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _014452_jump
		add    0x000008(%ebx),%edi

	_01441a_jump:
		push   %ebx
		push   %esi
		xor    %ebx,%ebx
		movl   $0x000014,0x000008(%esp)
		jmp    _014434_jump

	_014428_jump:
		add    $0x000006,%esi
		add    $0x000004,%edi
		decl   0x000008(%esp)
		je     _01444e_jump

	_014434_jump:
		mov    0x000004(%esi),%bl
		cmp    $0x000002,%bl
		jne    _014428_jump
		mov    (%esi),%bx
		mov    0x000000(%ebp,%ebx,4),%edx
		cmp    $0x000000,%edx
		je     _014428_jump
		push   %edi
		call   *%edx
		pop    %edi
		jmp    _014428_jump

	_01444e_jump:
		pop    %esi
		pop    %ebx
		jmp    _014409_jump

	_014452_jump:
		pop    %ecx
		pop    %ecx
		pop    %ebp
		ret    



_014456_func:
		pusha  
		mov    $0x000f02,%eax
		mov    $0x0003c4,%edx
		sub    $0x000002,%edi
		out    %ax,(%dx)
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %edi,%esi
		mov    $0x000011,%ecx
		add    $0x000050,%esi

	_014477_jump:
		mov    %eax,(%edi)
		mov    %eax,(%esi)
		mov    %eax,0x0000a0(%edi)
		mov    %eax,0x0000a0(%esi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%esi,%ebx,1)
		mov    %eax,0x0000a0(%edi,%ebx,1)
		mov    %eax,0x0000a0(%esi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,(%esi,%ebx,2)
		mov    %eax,0x0000a0(%edi,%ebx,2)
		mov    %eax,0x0000a0(%esi,%ebx,2)
		add    $0x0003c0,%edi
		add    $0x0003c0,%esi
		dec    %ecx
		jne    _014477_jump
		popa   
		ret    



_0144c0_func:
		pusha  
		push   %edi
		mov    $0x000f02,%eax
		mov    $0x0003c4,%edx
		sub    $0x000002,%edi
		out    %ax,(%dx)
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %edi,%esi
		mov    $0x000011,%ecx
		add    $0x000050,%esi

	_0144e2_jump:
		mov    %eax,(%edi)
		mov    %eax,(%esi)
		mov    %eax,0x0000a0(%edi)
		mov    %eax,0x0000a0(%esi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%esi,%ebx,1)
		mov    %eax,0x0000a0(%edi,%ebx,1)
		mov    %eax,0x0000a0(%esi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,(%esi,%ebx,2)
		mov    %eax,0x0000a0(%edi,%ebx,2)
		mov    %eax,0x0000a0(%esi,%ebx,2)
		add    $0x0003c0,%edi
		add    $0x0003c0,%esi
		dec    %ecx
		jne    _0144e2_jump
		pop    %edi
		cld    
		xor    %eax,%eax
		mov    $0x000140,%ecx
		rep stos %eax,%es:(%edi)
		add    $0x003700,%edi
		mov    $0x0000a0,%ecx
		rep stos %eax,%es:(%edi)
		popa   
		ret    



_014543_func:
		push   %edx
		mov    $0x0003d4,%dx
		mov    $0x00000c,%al
		out    %ax,(%dx)
		pop    %edx
		ret    



_01455b_func:
		pusha  
		mov    $0x000013,%ax
		int    $0x000010
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196a_data
		mov    $0x0003ce,%dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196b_data
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196c_data
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196d_data
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196e_data
		mov    $0x0003d4,%dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196f_data
		popa   
		ret    



_0145be_func:
		pusha  
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196a_data,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196b_data,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196c_data,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196d_data,%al
		out    %al,(%dx)
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196e_data,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196f_data,%al
		out    %al,(%dx)
		popa   
		ret    



_014617_func:
		pusha  
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196a_data,%al
		and    $0x0000ef,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196b_data,%al
		and    $0x0000fd,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196c_data,%al
		and    $0x0000f7,%al
		or     $0x000004,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196d_data,%al
		out    %al,(%dx)
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196e_data,%al
		and    $0x0000bf,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196f_data,%al
		or     $0x000040,%al
		out    %al,(%dx)
		popa   
		ret    



_01467c_func:
		pusha  
		mov    $0x000000,%eax
		mov    $0x000050,%ebx
		mov    $0x000140,%ecx
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		popa   
		ret    



_0146c4_func:
		pusha  
		mov    $0x000050,%ebp
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		popa   
		ret    



_014746_func:
		pusha  
		mov    $0x000003,%ax
		int    $0x000010
		popa   
		ret    

_01474f_switch:
		.long   0

_014753_switch:
		.long   0

_014757_switch:
		.long   0

_01475b_switch:
		.long   0

_01475f_switch:
		.long   0

_014763_switch:
		.long   0

_014767_switch:
		.long   0

_01476b_switch:
		.long   0

_01476f_switch:
		.long   0

_014773_switch:
		.long   0

_014777_switch:
		.long   0

_01477b_switch:
		.long   0

_01477f_switch:
		.long   0

_014783_switch:
		.long   0




_014787_func:
		pusha  
		dec    %esi
		mov    %esi,_01476f_switch
		push   %ecx
		push   %edi
		mov    0x000020(%ecx),%ebx
		mov    0x000024(%ecx),%edx
		sar    $0x000002,%ebx
		mov    $0xa1a1a1a1,%eax
		inc    %ebx

	_0147a0_jump:
		mov    %ebx,%ecx
		rep stos %eax,%es:(%edi)
		dec    %edx
		jne    _0147a0_jump
		pop    %edi
		pop    %ecx
		mov    (%ecx),%eax
		mov    0x000004(%ecx),%ebx
		mov    %eax,_01474f_switch
		mov    %ebx,_014753_switch
		mov    0x000008(%ecx),%eax
		mov    0x00000c(%ecx),%ebx
		mov    %eax,_014757_switch
		mov    %ebx,_01475b_switch
		mov    0x000010(%ecx),%eax
		mov    0x000014(%ecx),%ebx
		mov    %eax,_01475f_switch
		mov    %ebx,_014763_switch
		mov    0x000018(%ecx),%eax
		mov    0x00001c(%ecx),%ebx
		mov    %eax,_014767_switch
		mov    %ebx,_01476b_switch
		mov    %ebx,%edx
		add    %eax,%edx
		mov    %edx,_014783_switch
		mov    0x00002c(%ecx),%ebx
		mov    0x000030(%ecx),%eax
		mov    %ebx,_01477f_switch
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _014783_switch
		mov    %eax,_01477b_switch
		mov    _01476f_switch,%esi
		add    0x000028(%ecx),%edi
		mov    _014757_switch,%eax
		mov    _01475b_switch,%ebx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %edx,%edx
		cmp    %ebx,%eax
		jbe    _01490b_jump
		mov    _01476b_switch,%ebx
		push   %eax
		mov    _01477f_switch,%eax
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _014757_switch
		mov    %eax,_014777_switch
		mov    %eax,_014773_switch
		pop    %eax
		xor    %edx,%edx

	_01485a_jump:
		push   %ecx
		push   %edi
		push   %ebp
		push   %ebx
		push   %edx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %ebx,%ebx

	_014865_jump:
		push   %ebx
		shr    $0x000010,%ebx
		mov    (%esi,%ebx,1),%edx
		inc    %ebp
		pop    %ebx
		cmpb   $0x0000a1,(%edi)
		jne    _014875_jump
		mov    %dh,(%edi)

	_014875_jump:
		add    _014777_switch,%ebx
		add    _01475b_switch,%ecx
		cmp    %eax,%ebp
		jge    _0148a1_jump
		add    _01474f_switch,%edi
		cmp    _014757_switch,%ecx
		jbe    _014865_jump
		add    _014753_switch,%edi
		sub    _014757_switch,%ecx
		jmp    _014865_jump

	_0148a1_jump:
		pop    %edx
		pop    %ebx
		pop    %ebp
		pop    %edi
		pop    %ecx
		inc    %ebp
		mov    _01476f_switch,%esi
		add    _014767_switch,%ecx
		add    _014763_switch,%edi
		add    _01477b_switch,%edx
		push   %edx
		shr    $0x000010,%edx

	_0148c3_jump:
		je     _0148ce_jump
		add    _01477f_switch,%esi
		dec    %edx
		jmp    _0148c3_jump

	_0148ce_jump:
		mov    _014773_switch,%edx
		mov    %edx,_014777_switch
		pop    %edx
		cmp    %ebx,%ebp
		jge    _0149e0_jump
		cmp    $0x000000,%ecx
		jle    _01485a_jump
		add    _01475f_switch,%edi
		dec    %ebp
		sub    _014783_switch,%ecx
		sub    _014763_switch,%edi
		subl   $0x000040,_014777_switch
		jmp    _01485a_jump

	_01490b_jump:
		mov    _01477f_switch,%eax
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _01475b_switch
		mov    %eax,_014777_switch
		mov    %eax,_014773_switch
		xor    %edx,%edx
		mov    _014767_switch,%ebx
		mov    _01475b_switch,%eax

	_014933_jump:
		push   %ecx
		push   %edi
		push   %ebp
		push   %ebx
		push   %edx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %ebx,%ebx

	_01493e_jump:
		push   %ebx
		shr    $0x000010,%ebx
		mov    (%esi,%ebx,1),%edx
		inc    %ebp
		pop    %ebx
		cmpb   $0x000081,(%edi)
		jne    _01494e_jump
		mov    %dh,(%edi)

	_01494e_jump:
		add    _014777_switch,%ebx
		add    _014757_switch,%ecx
		cmp    %eax,%ebp
		jge    _014977_jump
		add    _014753_switch,%edi
		cmp    $0x000000,%ecx
		jle    _01493e_jump
		add    _01474f_switch,%edi
		sub    _01475b_switch,%ecx
		jmp    _01493e_jump

	_014977_jump:
		pop    %edx
		pop    %ebx
		pop    %ebp
		pop    %edi
		pop    %ecx
		inc    %ebp
		mov    _01476f_switch,%esi
		add    _01476b_switch,%ecx
		add    _01475f_switch,%edi
		add    _01477b_switch,%edx
		push   %edx
		shr    $0x000010,%edx

	_014999_jump:
		je     _0149a4_jump
		add    _01477f_switch,%esi
		dec    %edx
		jmp    _014999_jump

	_0149a4_jump:
		mov    _014773_switch,%edx
		mov    %edx,_014777_switch
		pop    %edx
		cmp    %ebx,%ebp
		jge    _0149e0_jump
		cmp    _014767_switch,%ecx
		jle    _014933_jump
		add    _014763_switch,%edi
		dec    %ebp
		sub    _014783_switch,%ecx
		sub    _01475f_switch,%edi
		subl   $0x000040,_014777_switch
		jmp    _014933_jump

	_0149e0_jump:
		popa   
		ret    



_014a16_func:
		push   %ecx
		mov    $0x003e80,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %ecx
		ret    



_014a20_func:
		imul   $0x000180,%ebx,%ebx
		add    %ebx,%edi
		add    %eax,%edi
		movw   $0x000c00,0x000001(%edi)
		movl   $0xc0e0a00,0x000180(%edi)
		movl   $0x0a0900,0x000300(%edi)
		movw   $0x000000,0x000481(%edi)
		ret    



_014a4e_func:
		pusha  
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %eax,%edi
		mov    $0x000000,%eax
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_014a65_jump:
		push   %ecx
		mov    %edx,%ecx
		test   $0x000001,%ecx
		je     _014a72_jump
		stos   %al,%es:(%edi)
		dec    %ecx

	_014a72_jump:
		test   $0x000002,%ecx
		je     _014a7f_jump
		stos   %ax,%es:(%edi)
		sub    $0x000002,%ecx

	_014a7f_jump:
		sar    $0x000002,%ecx
		rep stos %eax,%es:(%edi)
		add    %ebx,%edi
		pop    %ecx
		loop   _014a65_jump
		popa   
		ret    



_014a8b_func:
		cmp    $0x000002,%eax
		je     _014ad0_jump
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %esi,%edi
		mov    %edi,%esi
		add    $0x000141,%esi
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_014aa9_jump:
		push   %ecx
		mov    %edx,%ecx

	_014aac_jump:
		mov    (%esi),%al
		mov    %al,%ah
		and    $0x0000e0,%ah
		sub    $0x000005,%al
		xor    %al,%ah
		and    $0x0000e0,%ah
		je     _014ac0_jump
		mov    %ah,%al
		and    $0x0000e0,%al

	_014ac0_jump:
		mov    %al,(%edi)
		inc    %edi
		inc    %esi
		dec    %ecx
		jne    _014aac_jump
		add    %ebx,%edi
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _014aa9_jump
		ret    

	_014ad0_jump:
		add    %ecx,%ebx
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %edx,%edi
		add    %esi,%edi
		sub    $0x000141,%edi
		mov    %edi,%esi
		sub    $0x000141,%esi
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_014af3_jump:
		push   %ecx
		mov    %edx,%ecx

	_014af6_jump:
		mov    (%esi),%al
		mov    %al,%ah
		and    $0x0000e0,%ah
		add    $0x000005,%al
		xor    %al,%ah
		and    $0x0000e0,%ah
		je     _014b0a_jump
		mov    %ah,%al
		or     $0x00001f,%al

	_014b0a_jump:
		mov    %al,(%edi)
		dec    %edi
		dec    %esi
		dec    %ecx
		jne    _014af6_jump
		sub    %ebx,%edi
		sub    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _014af3_jump
		ret    



_014b1a_func:
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %esi,%edi
		dec    %edx
		mov    %ecx,%ebx
		push   %edi

	_014b28_jump:
		mov    %al,(%edi)
		add    $0x000140,%edi
		dec    %ecx
		jne    _014b28_jump
		mov    %edx,%ecx
		sub    $0x000140,%edi
		inc    %edi
		xchg   %al,%ah
		rep stos %al,%es:(%edi)
		add    $0x00013f,%edi
		sub    %edx,%edi
		mov    %edx,%ecx
		inc    %ecx
		rep stos %al,%es:(%edi)
		pop    %edi
		xchg   %al,%ah
		mov    %edx,%ecx
		inc    %ecx
		rep stos %al,%es:(%edi)
		mov    %ebx,%ecx
		dec    %ecx
		mov    %ah,%al
		add    $0x00013f,%edi

	_014b60_jump:
		mov    %al,(%edi)
		mov    %al,-0x00013f(%edi)
		add    $0x000140,%edi
		dec    %ecx
		jne    _014b60_jump
		mov    %al,-0x00013f(%edi)
		ret    



_014b78_func:
		imul   0x000004(%esp),%ebx
		add    %ebx,%esi
		add    %eax,%esi
		imul   $0x000140,%edx,%edx
		add    %edx,%edi
		add    %ecx,%edi
		mov    $0x000140,%ebx
		sub    0x000008(%esp),%ebx
		mov    0x000004(%esp),%edx
		sub    0x000008(%esp),%edx
		mov    0x00000c(%esp),%eax

	_014ba0_jump:
		mov    0x000008(%esp),%ecx
		test   $0x000001,%ecx
		je     _014bae_jump
		movsb  %ds:(%esi),%es:(%edi)
		dec    %ecx

	_014bae_jump:
		test   $0x000002,%ecx
		je     _014bbb_jump
		movsw  %ds:(%esi),%es:(%edi)
		sub    $0x000002,%ecx

	_014bbb_jump:
		sar    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %ebx,%edi
		add    %edx,%esi
		dec    %eax
		jne    _014ba0_jump
		ret    $0x00000c



_014bca_func:
		push   %ecx
		push   %eax
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    %esi,%edi
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		pop    %eax
		pop    %ecx
		ret    

	_014be5_jump:
		inc    %eax
		add    %eax,(%eax)
	_014be9_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %al,0x000001(%eax)
		add    %al,(%eax)



_014bed_func:
		push   %ecx
		push   %eax
		mov    $0x003e80,%ecx
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		pop    %eax
		pop    %ecx
		ret    



_014bfb_func:
		pusha  
		sub    $0x000004,%esp
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_014c09_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _014be5_jump,%ebx
		add    _014be9_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _014c09_jump
		add    $0x000004,%esp
		popa   
		ret    



_014c26_func:
		pusha  
		mov    $0x000140,%ebx
		lea    0x000140(%edx),%eax
		shr    %ecx

	_014c34_jump:
		movl   $0x000000,(%edi)
		movl   $0x000000,(%edi,%edx,1)
		mov    %edi,%esi
		movl   $0x000000,(%edi,%ebx,1)
		movl   $0x000000,(%edi,%eax,1)
		dec    %ecx
		lea    (%esi,%ebx,2),%edi
		jne    _014c34_jump
		popa   
		ret    



_014c59_func:
		pusha  
		cmp    $0x000000,%ecx
		jle    _014cb2_jump
		cmp    $0x000000,%ebx
		jle    _014cb2_jump
		sub    $0x000008,%esp
		mov    %ebx,0x000004(%esp)
		mov    %edx,%eax
		mov    %ecx,(%esp)
		mov    %esi,%ebp
		shrl   $0x000003,(%esp)
		and    $0x000007,%ecx
		je     _014c7e_jump
		incl   (%esp)

	_014c7e_jump:
		mov    %edi,%ebx
		mov    (%esp),%ecx
		push   %ebx
		push   %edx

	_014c85_jump:
		mov    (%esi),%edx
		mov    0x000004(%esi),%ebx
		mov    %edx,(%edi)
		mov    %ebx,0x000004(%edi)
		add    $0x000008,%esi
		add    $0x000008,%edi
		sub    $0x000001,%ecx
		jne    _014c85_jump
		pop    %edx
		pop    %ebx
		lea    0x000000(%ebp,%edx,1),%esi
		lea    (%edx,%eax,1),%edx
		lea    0x000140(%ebx),%edi
		decl   0x000004(%esp)
		jne    _014c7e_jump
		add    $0x000008,%esp

	_014cb2_jump:
		popa   
		ret    



_014dc3_func:
		pusha  
		mov    0x000200(%esi),%eax
		sub    $0x000004,%esp
		movl   $0x000004,(%esp)

	_014dd4_jump:
		test   $0x40000000,%eax
		jne    _014e1f_jump
		test   $0x80000000,%eax
		jne    _014f32_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_014e1f_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		test   $0x10000000,%eax
		jne    _014e73_jump
		test   $0x20000000,%eax
		jne    _014f4d_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_014e73_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		test   $0x4000000,%eax
		jne    _014ec7_jump
		test   $0x8000000,%eax
		jne    _014f68_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_014ec7_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		test   $0x1000000,%eax
		jne    _014f1b_jump
		test   $0x2000000,%eax
		jne    _014f83_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_014f1b_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		shl    $0x000008,%eax
		decl   (%esp)
		jne    _014dd4_jump
		jmp    _014f9b_jump

	_014f32_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _014e1f_jump

	_014f4d_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _014e73_jump

	_014f68_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _014ec7_jump

	_014f83_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _014f1b_jump

	_014f9b_jump:
		add    $0x000004,%esp
		popa   
		ret    



_014fa0_func:
		pusha  
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		mov    0x000010(%esi),%ebx
		mov    0x000014(%esi),%ecx
		mov    0x000018(%esi),%edx
		mov    0x00001c(%esi),%ebp
		mov    %ebx,0x000140(%edi)
		mov    %ecx,0x000144(%edi)
		mov    %edx,0x000148(%edi)
		mov    %ebp,0x00014c(%edi)
		mov    0x000020(%esi),%ebx
		mov    0x000024(%esi),%ecx
		mov    0x000028(%esi),%edx
		mov    0x00002c(%esi),%ebp
		mov    %ebx,0x000280(%edi)
		mov    %ecx,0x000284(%edi)
		mov    %edx,0x000288(%edi)
		mov    %ebp,0x00028c(%edi)
		mov    0x000030(%esi),%ebx
		mov    0x000034(%esi),%ecx
		mov    0x000038(%esi),%edx
		mov    0x00003c(%esi),%ebp
		mov    %ebx,0x0003c0(%edi)
		mov    %ecx,0x0003c4(%edi)
		mov    %edx,0x0003c8(%edi)
		mov    %ebp,0x0003cc(%edi)
		mov    0x000040(%esi),%ebx
		mov    0x000044(%esi),%ecx
		mov    0x000048(%esi),%edx
		mov    0x00004c(%esi),%ebp
		mov    %ebx,0x000500(%edi)
		mov    %ecx,0x000504(%edi)
		mov    %edx,0x000508(%edi)
		mov    %ebp,0x00050c(%edi)
		mov    0x000050(%esi),%ebx
		mov    0x000054(%esi),%ecx
		mov    0x000058(%esi),%edx
		mov    0x00005c(%esi),%ebp
		mov    %ebx,0x000640(%edi)
		mov    %ecx,0x000644(%edi)
		mov    %edx,0x000648(%edi)
		mov    %ebp,0x00064c(%edi)
		mov    0x000060(%esi),%ebx
		mov    0x000064(%esi),%ecx
		mov    0x000068(%esi),%edx
		mov    0x00006c(%esi),%ebp
		mov    %ebx,0x000780(%edi)
		mov    %ecx,0x000784(%edi)
		mov    %edx,0x000788(%edi)
		mov    %ebp,0x00078c(%edi)
		mov    0x000070(%esi),%ebx
		mov    0x000074(%esi),%ecx
		mov    0x000078(%esi),%edx
		mov    0x00007c(%esi),%ebp
		mov    %ebx,0x0008c0(%edi)
		mov    %ecx,0x0008c4(%edi)
		mov    %edx,0x0008c8(%edi)
		mov    %ebp,0x0008cc(%edi)
		mov    0x000080(%esi),%ebx
		mov    0x000084(%esi),%ecx
		mov    0x000088(%esi),%edx
		mov    0x00008c(%esi),%ebp
		mov    %ebx,0x000a00(%edi)
		mov    %ecx,0x000a04(%edi)
		mov    %edx,0x000a08(%edi)
		mov    %ebp,0x000a0c(%edi)
		mov    0x000090(%esi),%ebx
		mov    0x000094(%esi),%ecx
		mov    0x000098(%esi),%edx
		mov    0x00009c(%esi),%ebp
		mov    %ebx,0x000b40(%edi)
		mov    %ecx,0x000b44(%edi)
		mov    %edx,0x000b48(%edi)
		mov    %ebp,0x000b4c(%edi)
		mov    0x0000a0(%esi),%ebx
		mov    0x0000a4(%esi),%ecx
		mov    0x0000a8(%esi),%edx
		mov    0x0000ac(%esi),%ebp
		mov    %ebx,0x000c80(%edi)
		mov    %ecx,0x000c84(%edi)
		mov    %edx,0x000c88(%edi)
		mov    %ebp,0x000c8c(%edi)
		mov    0x0000b0(%esi),%ebx
		mov    0x0000b4(%esi),%ecx
		mov    0x0000b8(%esi),%edx
		mov    0x0000bc(%esi),%ebp
		mov    %ebx,0x000dc0(%edi)
		mov    %ecx,0x000dc4(%edi)
		mov    %edx,0x000dc8(%edi)
		mov    %ebp,0x000dcc(%edi)
		mov    0x0000c0(%esi),%ebx
		mov    0x0000c4(%esi),%ecx
		mov    0x0000c8(%esi),%edx
		mov    0x0000cc(%esi),%ebp
		mov    %ebx,0x000f00(%edi)
		mov    %ecx,0x000f04(%edi)
		mov    %edx,0x000f08(%edi)
		mov    %ebp,0x000f0c(%edi)
		mov    0x0000d0(%esi),%ebx
		mov    0x0000d4(%esi),%ecx
		mov    0x0000d8(%esi),%edx
		mov    0x0000dc(%esi),%ebp
		mov    %ebx,0x001040(%edi)
		mov    %ecx,0x001044(%edi)
		mov    %edx,0x001048(%edi)
		mov    %ebp,0x00104c(%edi)
		mov    0x0000e0(%esi),%ebx
		mov    0x0000e4(%esi),%ecx
		mov    0x0000e8(%esi),%edx
		mov    0x0000ec(%esi),%ebp
		mov    %ebx,0x001180(%edi)
		mov    %ecx,0x001184(%edi)
		mov    %edx,0x001188(%edi)
		mov    %ebp,0x00118c(%edi)
		mov    0x0000f0(%esi),%ebx
		mov    0x0000f4(%esi),%ecx
		mov    0x0000f8(%esi),%edx
		mov    0x0000fc(%esi),%ebp
		mov    %ebx,0x0012c0(%edi)
		mov    %ecx,0x0012c4(%edi)
		mov    %edx,0x0012c8(%edi)
		mov    %ebp,0x0012cc(%edi)
		popa   
		ret    

_015235_switch:
		.long   0




_015239_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_015235_switch
		cmp    _0cca4c_data,%eax
		jl     _015288_jump
		add    %eax,%edx
		cmp    _0cca48_data,%edx
		ja     _015271_jump
		mov    $0x000004,%cl

	_015257_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0cca54_data,%ebx
		jl     _0152c1_jump

	_015263_jump:
		add    %ebx,%edx
		cmp    _0cca50_data,%edx
		ja     _0152ad_jump

	_01526d_jump:
		clc    
		ret    

	_01526f_jump:
		stc    
		ret    

	_015271_jump:
		cmp    _0cca48_data,%eax
		jae    _01526f_jump
		mov    _0cca48_data,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _01530e_jump

	_015288_jump:
		sub    _0cca4c_data,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _01526f_jump
		and    $0x00fffc,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		lea    (%esi,%eax,1),%esi
		lea    (%edi,%eax,1),%edi
		mov    _0cca4c_data,%eax
		shr    $0x000002,%cl
		jmp    _015257_jump

	_0152ad_jump:
		cmp    _0cca50_data,%ebx
		jae    _01526f_jump
		mov    _0cca50_data,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _01526d_jump

	_0152c1_jump:
		add    %ebx,%edx
		cmp    _0cca54_data,%edx
		jle    _01526f_jump
		xor    %edx,%edx
		sub    _0cca54_data,%ebx
		mov    %ch,%dl
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _015235_switch,%eax
		mul    %bx
		add    %eax,%esi
		mov    _014be5_jump,%eax
		mul    %bx
		add    %eax,%edi

	_0152f6_jump:
		shll   $0x000002,0x000008(%esp)
		dec    %ebx
		jne    _0152f6_jump
		pop    %eax
		mov    _0cca54_data,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _015263_jump

	_01530e_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		shr    $0x000002,%cl
		and    $0x000003,%edx
		je     _015257_jump
		inc    %cl
		jmp    _015257_jump



_015325_func:
		pusha  
		mov    $0x001010,%ecx
		sub    $0x000005,%esp
		mov    0x000200(%esi),%ebp
		mov    %ebp,(%esp)
		call   _015239_func
		jb     _0154b8_jump
		mov    (%esp),%eax
		mov    %ch,0x000004(%esp)
		cmp    $0x000003,%cl
		je     _0153da_jump
		cmp    $0x000002,%cl
		je     _01543b_jump
		cmp    $0x000001,%cl
		je     _015484_jump

	_015364_jump:
		test   $0x40000000,%eax
		jne    _015388_jump
		test   $0x80000000,%eax
		je     _01539f_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)

	_015388_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _015364_jump
		jmp    _0154b8_jump

	_01539f_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)
		jmp    _015388_jump

	_0153da_jump:
		test   $0x40000000,%eax
		jne    _0153f8_jump
		test   $0x80000000,%eax
		je     _01540f_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)

	_0153f8_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _0153da_jump
		jmp    _0154b8_jump

	_01540f_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x000008(%esi),%ebx
		and    %ecx,0x000008(%edi)
		or     %ebx,0x000008(%edi)
		jmp    _0153f8_jump

	_01543b_jump:
		test   $0x40000000,%eax
		jne    _015453_jump
		test   $0x80000000,%eax
		je     _015467_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)

	_015453_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _01543b_jump
		jmp    _0154b8_jump

	_015467_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		jmp    _015453_jump

	_015484_jump:
		test   $0x40000000,%eax
		jne    _015496_jump
		test   $0x80000000,%eax
		je     _0154aa_jump
		mov    (%esi),%ebx
		mov    %ebx,(%edi)

	_015496_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _015484_jump
		jmp    _0154b8_jump

	_0154aa_jump:
		mov    0x000100(%esi),%ecx
		mov    (%esi),%ebx
		and    %ecx,(%edi)
		or     %ebx,(%edi)
		jmp    _015496_jump

	_0154b8_jump:
		add    $0x000005,%esp
		popa   
		ret    



_0154bd_func:
		pusha  
		mov    $0x001010,%ecx
		sub    $0x000005,%esp
		movl   $0x000000,(%esp)
		call   _015239_func
		jb     _015563_jump
		mov    %ch,0x000004(%esp)
		cmp    $0x000003,%cl
		je     _015512_jump
		cmp    $0x000002,%cl
		je     _015533_jump
		cmp    $0x000001,%cl
		je     _01554e_jump

	_0154eb_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _0154eb_jump
		jmp    _015563_jump

	_015512_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _015512_jump
		jmp    _015563_jump

	_015533_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _015533_jump
		jmp    _015563_jump

	_01554e_jump:
		mov    (%esi),%ebx
		mov    %ebx,(%edi)
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _01554e_jump
		jmp    _015563_jump

	_015563_jump:
		add    $0x000005,%esp
		popa   
		ret    



_015568_func:
		pusha  
		add    _091b00_data(,%ebx,4),%eax
		mov    %esi,%edx
		mov    %dl,(%edi,%eax,1)
		popa   
		ret    

_015577_switch:
		.long   0

_01557b_switch:
		.long   0

_01557f_switch:
		.long   0

_015583_switch:
		.long   0




_015587_func:
		mov    %eax,_015577_switch
		mov    %ebx,_01557b_switch
		mov    %ecx,_01557f_switch
		mov    %edx,_015583_switch
		ret    



_01559f_func:
		push   %eax
		push   %edi
		cmp    _01557f_switch,%eax
		jl     _0155cc_jump
		cmp    _015583_switch,%eax
		ja     _0155cc_jump
		cmp    _015577_switch,%ebx
		jl     _0155cc_jump
		cmp    _01557b_switch,%ebx
		ja     _0155cc_jump
		add    _091b00_data(,%ebx,4),%eax
		movb   $0x000005,(%edi,%eax,1)

	_0155cc_jump:
		pop    %edi
		pop    %eax
		ret    



_0155cf_func:
		push   %eax
		push   %edi
		cmp    _01557f_switch,%eax
		jl     _0155fc_jump
		cmp    _015583_switch,%eax
		ja     _0155fc_jump
		cmp    _015577_switch,%ebx
		jl     _0155fc_jump
		cmp    _01557b_switch,%ebx
		ja     _0155fc_jump
		add    _091b00_data(,%ebx,4),%eax
		movb   $0x000007,(%edi,%eax,1)

	_0155fc_jump:
		pop    %edi
		pop    %eax
		ret    



_0155ff_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _015638_jump
		cmp    _015583_switch,%eax
		ja     _015638_jump
		cmp    _015577_switch,%ebx
		jl     _015638_jump
		cmp    _01557b_switch,%ebx
		ja     _015638_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000807,(%edi)
		movw   $0x000706,0x000140(%edi)

	_015638_jump:
		pop    %eax
		pop    %edi
		ret    



_01563b_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _015681_jump
		cmp    _015583_switch,%eax
		ja     _015681_jump
		cmp    _015577_switch,%ebx
		jl     _015681_jump
		cmp    _01557b_switch,%ebx
		ja     _015681_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000608,0x000140(%edi)
		movb   $0x000006,0x000142(%edi)
		movb   $0x000006,0x000001(%edi)
		movb   $0x000006,0x000281(%edi)

	_015681_jump:
		pop    %eax
		pop    %edi
		ret    



_015684_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _0156b1_jump
		cmp    _015583_switch,%eax
		ja     _0156b1_jump
		cmp    _015577_switch,%ebx
		jl     _0156b1_jump
		cmp    _01557b_switch,%ebx
		ja     _0156b1_jump
		add    _091b00_data(,%ebx,4),%eax
		movb   $0x000003,(%edi,%eax,1)

	_0156b1_jump:
		pop    %eax
		pop    %edi
		ret    



_0156b4_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _015702_jump
		cmp    _015583_switch,%eax
		ja     _015702_jump
		cmp    _015577_switch,%ebx
		jl     _015702_jump
		cmp    _01557b_switch,%ebx
		ja     _015702_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000505,0x000001(%edi)
		movl   $0x5070705,0x000140(%edi)
		movl   $0x5070705,0x000280(%edi)
		movw   $0x000505,0x0003c1(%edi)

	_015702_jump:
		pop    %eax
		pop    %edi
		ret    



_015705_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _01573b_jump
		cmp    _015583_switch,%eax
		ja     _01573b_jump
		cmp    _015577_switch,%ebx
		jl     _01573b_jump
		cmp    _01557b_switch,%ebx
		ja     _01573b_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movb   $0x000005,0x000140(%edi)
		movb   $0x000004,0x000001(%edi)

	_01573b_jump:
		pop    %eax
		pop    %edi
		ret    



_01573e_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _01578c_jump
		cmp    _015583_switch,%eax
		ja     _01578c_jump
		cmp    _015577_switch,%ebx
		jl     _01578c_jump
		cmp    _01557b_switch,%ebx
		ja     _01578c_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000606,0x000001(%edi)
		movl   $0x6080806,0x000140(%edi)
		movl   $0x6080806,0x000280(%edi)
		movw   $0x000606,0x0003c1(%edi)

	_01578c_jump:
		pop    %eax
		pop    %edi
		ret    



_01578f_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _0157d9_jump
		cmp    _015583_switch,%eax
		ja     _0157d9_jump
		cmp    _015577_switch,%ebx
		jl     _0157d9_jump
		cmp    _01557b_switch,%ebx
		ja     _0157d9_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000204,0x000001(%edi)
		movw   $0x000305,0x000140(%edi)
		movb   $0x000002,0x000142(%edi)
		movw   $0x000603,0x000280(%edi)

	_0157d9_jump:
		pop    %eax
		pop    %edi
		ret    



_0157dc_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _015850_jump
		cmp    _015583_switch,%eax
		ja     _015850_jump
		cmp    _015577_switch,%ebx
		jl     _015850_jump
		cmp    _01557b_switch,%ebx
		ja     _015850_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000606,0x000002(%edi)
		movl   $0x7080807,0x000141(%edi)
		movl   $0x8080806,0x000280(%edi)
		movl   $0x8080806,0x0003c0(%edi)
		movl   $0x7080807,0x000501(%edi)
		movw   $0x000606,0x000642(%edi)
		movw   $0x000608,0x000284(%edi)
		movw   $0x000608,0x0003c4(%edi)

	_015850_jump:
		pop    %eax
		pop    %edi
		ret    



_015853_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _0158ad_jump
		cmp    _015583_switch,%eax
		ja     _0158ad_jump
		cmp    _015577_switch,%ebx
		jl     _0158ad_jump
		cmp    _01557b_switch,%ebx
		ja     _0158ad_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000203,0x000002(%edi)
		movb   $0x000003,0x000141(%edi)
		movw   $0x000402,0x000142(%edi)
		movw   $0x000405,0x000280(%edi)
		movb   $0x000003,0x000282(%edi)
		movw   $0x000604,0x0003c0(%edi)

	_0158ad_jump:
		pop    %eax
		pop    %edi
		ret    

	_0158b0_jump:
		inc    %eax
		add    %eax,(%eax)
	_0158b4_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %al,0x000001(%eax)
		add    %al,(%eax)

_0158b8_switch:
		.long   0




_0158bc_func:
		pusha  
		cli    
		cld    
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0cf1ea_data
		sbbw   $0x000000,_0cf1ea_data
		shr    %al
		movw   $0x000001,_0cf1ec_data
		sbbw   $0x000000,_0cf1ec_data
		shr    %al
		movw   $0x000001,_0cf1e4_data
		sbbw   $0x000000,_0cf1e4_data
		shr    %al
		movw   $0x000001,_0cf1e6_data
		sbbw   $0x000000,_0cf1e6_data
		mov    _095e6c_data,%ax
		cmp    $0x000001,%ax
		je     _01598d_jump
		and    $0x000003,%ebx
		jne    _015971_jump
		movw   $0x000000,_0cf13e_data
		movw   $0x000000,_0cf13c_data
		mov    $0x0007d0,%ebx
		call   _016e50_func
		mov    %eax,_0158b8_switch
		mov    $_0000ff_case,%al
		out    %al,(%dx)

	_01594a_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0cf13e_data,%ax
		je     _015990_jump

	_015959_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0cf13c_data,%ax
		je     _0159a3_jump

	_015967_jump:
		dec    %ebx
		je     _015971_jump
		and    $0x000003,%ebp
		jne    _01594a_jump
		jmp    _01598d_jump

	_015971_jump:
		mov    _0cf144_data,%bx
		mov    %bx,_0cf13e_data
		mov    _0cf142_data,%bx
		mov    %bx,_0cf13c_data

	_01598d_jump:
		sti    
		popa   
		ret    

	_015990_jump:
		call   _016e50_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cf13e_data
		jmp    _015959_jump

	_0159a3_jump:
		call   _016e50_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cf13c_data
		jmp    _015967_jump



_0159b6_func:
		pusha  
		cli    
		cld    
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0cf1e4_data
		sbbw   $0x000000,_0cf1e4_data
		shr    %al
		movw   $0x000001,_0cf1e6_data
		sbbw   $0x000000,_0cf1e6_data
		shr    %al
		movw   $0x000001,_0cf1ea_data
		sbbw   $0x000000,_0cf1ea_data
		shr    %al
		movw   $0x000001,_0cf1ec_data
		sbbw   $0x000000,_0cf1ec_data
		mov    _095e6c_data,%ax
		cmp    $0x000001,%ax
		je     _01598d_jump
		and    $0x00000c,%ebx
		jne    _015a6f_jump
		movw   $0x000000,_0cf13e_data
		movw   $0x000000,_0cf13c_data
		mov    $0x0007d0,%ebx
		call   _016e50_func
		mov    %eax,_0158b8_switch
		mov    $_0000ff_case,%al
		out    %al,(%dx)

	_015a48_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0cf13e_data,%ax
		je     _015a8e_jump

	_015a57_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0cf13c_data,%ax
		je     _015aa1_jump

	_015a65_jump:
		dec    %ebx
		je     _015a6f_jump
		and    $0x00000c,%ebp
		jne    _015a48_jump
		jmp    _015a8b_jump

	_015a6f_jump:
		mov    _0cf144_data,%bx
		mov    %bx,_0cf13e_data
		mov    _0cf142_data,%bx
		mov    %bx,_0cf13c_data

	_015a8b_jump:
		sti    
		popa   
		ret    

	_015a8e_jump:
		call   _016e50_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cf13e_data
		jmp    _015a57_jump

	_015aa1_jump:
		call   _016e50_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cf13c_data
		jmp    _015a65_jump



_015ab4_func:
		pusha  
		cli    
		cld    
		movw   $0x000000,_0cf13e_data
		movw   $0x000000,_0cf13c_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0cf1ea_data
		sbbw   $0x000000,_0cf1ea_data
		shr    %al
		movw   $0x000001,_0cf1ec_data
		sbbw   $0x000000,_0cf1ec_data
		shr    %al
		movw   $0x000001,_0cf1e4_data
		sbbw   $0x000000,_0cf1e4_data
		shr    %al
		movw   $0x000001,_0cf1e6_data
		sbbw   $0x000000,_0cf1e6_data
		and    $0x000003,%ebx
		jne    _015b53_jump
		mov    $0x0007d0,%ebx
		mov    $_0000ff_case,%al
		out    %al,(%dx)

	_015b2c_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		je     _015b3b_jump
		incw   _0cf13e_data

	_015b3b_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		je     _015b49_jump
		incw   _0cf13c_data

	_015b49_jump:
		dec    %ebx
		je     _015b53_jump
		and    $0x000003,%ebp
		jne    _015b2c_jump
		jmp    _015b6f_jump

	_015b53_jump:
		mov    _0cf144_data,%bx
		mov    %bx,_0cf13e_data
		mov    _0cf142_data,%bx
		mov    %bx,_0cf13c_data

	_015b6f_jump:
		sti    
		popa   
		ret    



_015b72_func:
		pusha  
		cli    
		cld    
		movw   $0x000000,_0cf13e_data
		movw   $0x000000,_0cf13c_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0cf1e4_data
		sbbw   $0x000000,_0cf1e4_data
		shr    %al
		movw   $0x000001,_0cf1e6_data
		sbbw   $0x000000,_0cf1e6_data
		shr    %al
		movw   $0x000001,_0cf1ea_data
		sbbw   $0x000000,_0cf1ea_data
		shr    %al
		movw   $0x000001,_0cf1ec_data
		sbbw   $0x000000,_0cf1ec_data
		and    $0x00000c,%ebx
		jne    _015c1f_jump
		mov    $0x0007d0,%ebx
		mov    $_0000ff_case,%al
		out    %al,(%dx)

	_015bea_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0cf13e_data,%ax
		je     _015c00_jump
		incw   _0cf13e_data

	_015c00_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0cf13c_data,%ax
		je     _015c15_jump
		incw   _0cf13c_data

	_015c15_jump:
		dec    %ebx
		je     _015c1f_jump
		and    $0x00000c,%ebp
		jne    _015bea_jump
		jmp    _015c3b_jump

	_015c1f_jump:
		mov    _0cf144_data,%bx
		mov    %bx,_0cf13e_data
		mov    _0cf142_data,%bx
		mov    %bx,_0cf13c_data

	_015c3b_jump:
		sti    
		popa   
		ret    



_015c3e_func:
		pusha  
		cli    
		cld    
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx
		mov    $_0000ff_case,%al
		out    %al,(%dx)

	_015c4d_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%ebp
		je     _015c67_jump
		mov    %eax,%ebp
		and    $0x000002,%ebp
		je     _015c67_jump
		dec    %ebx
		jne    _015c4d_jump
		popa   
		mov    $0x000000,%eax
		jmp    _015c6d_jump

	_015c67_jump:
		popa   
		mov    $0x000001,%eax

	_015c6d_jump:
		sti    
		ret    



_015c6f_func:
		pusha  
		cli    
		cld    
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx
		mov    $_0000ff_case,%al
		out    %al,(%dx)

	_015c7e_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%ebp
		je     _015c98_jump
		mov    %eax,%ebp
		and    $0x000008,%ebp
		je     _015c98_jump
		dec    %ebx
		jne    _015c7e_jump
		popa   
		mov    $0x000000,%eax
		jmp    _015c9e_jump

	_015c98_jump:
		popa   
		mov    $0x000001,%eax

	_015c9e_jump:
		sti    
		ret    



_015ca0_func:
		pusha  
		cli    
		cld    
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		movw   $0x000000,_0cf13e_data
		movw   $0x000000,_0cf13c_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		shr    $0x000005,%al
		movw   $0x000001,_0cf1ea_data
		sbbw   $0x000000,_0cf1ea_data
		shr    %al
		movw   $0x000001,_0cf1ec_data
		sbbw   $0x000000,_0cf1ec_data
		shr    %al
		movw   $0x000001,_0cf1e4_data
		sbbw   $0x000000,_0cf1e4_data
		shr    %al
		movw   $0x000001,_0cf1e6_data
		sbbw   $0x000000,_0cf1e6_data
		mov    0x000004(%esp),%eax
		and    $0x000003,%ebp
		jne    _015dee_jump
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %eax,0x000004(%esp)
		call   _016e50_func
		mov    %eax,_0158b8_switch
		mov    $_0000ff_case,%al
		out    %al,(%dx)
		mov    0x000004(%esp),%eax
		mov    %esi,%ebx
		mov    %edi,%edx

	_015d3e_jump:
		mov    %edx,0x000008(%esp)
		mov    %eax,0x000004(%esp)
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0cf13e_data,%ax
		je     _015e32_jump

	_015d5d_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0cf13c_data,%ax
		je     _015e48_jump

	_015d6f_jump:
		mov    0x000008(%esp),%edx
		mov    0x000004(%esp),%eax
		and    $0x000003,%ebp
		je     _015e14_jump
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _0158b0_jump,%ebx
		add    _0158b4_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _015d3e_jump
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx

	_015da1_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0cf13e_data,%ax
		je     _015e5e_jump

	_015db4_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0cf13c_data,%ax
		je     _015e74_jump

	_015dc6_jump:
		dec    %ebx
		je     _015dd0_jump
		and    $0x000003,%ebp
		jne    _015da1_jump
		jmp    _015dec_jump

	_015dd0_jump:
		mov    _0cf144_data,%bx
		mov    %bx,_0cf13e_data
		mov    _0cf142_data,%bx
		mov    %bx,_0cf13c_data

	_015dec_jump:
		jmp    _015e2c_jump

	_015dee_jump:
		mov    _0cf144_data,%bx
		mov    %bx,_0cf13e_data
		mov    _0cf142_data,%bx
		mov    %bx,_0cf13c_data
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_015e14_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _0158b0_jump,%ebx
		add    _0158b4_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _015e14_jump

	_015e2c_jump:
		add    $0x00000c,%esp
		sti    
		popa   
		ret    

	_015e32_jump:
		call   _016e50_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cf13e_data
		jmp    _015d5d_jump

	_015e48_jump:
		call   _016e50_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cf13c_data
		jmp    _015d6f_jump

	_015e5e_jump:
		call   _016e50_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cf13e_data
		jmp    _015db4_jump

	_015e74_jump:
		call   _016e50_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cf13c_data
		jmp    _015dc6_jump



_015e8a_func:
		pusha  
		cli    
		cld    
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		movw   $0x000000,_0cf13e_data
		movw   $0x000000,_0cf13c_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		shr    $0x000005,%al
		movw   $0x000001,_0cf1ea_data
		sbbw   $0x000000,_0cf1ea_data
		shr    %al
		movw   $0x000001,_0cf1ec_data
		sbbw   $0x000000,_0cf1ec_data
		shr    %al
		movw   $0x000001,_0cf1e4_data
		sbbw   $0x000000,_0cf1e4_data
		shr    %al
		movw   $0x000001,_0cf1e6_data
		sbbw   $0x000000,_0cf1e6_data
		mov    0x000004(%esp),%eax
		and    $0x00000c,%ebp
		jne    _015fd8_jump
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %eax,0x000004(%esp)
		call   _016e50_func
		mov    %eax,_0158b8_switch
		mov    $_0000ff_case,%al
		out    %al,(%dx)
		mov    0x000004(%esp),%eax
		mov    %esi,%ebx
		mov    %edi,%edx

	_015f28_jump:
		mov    %edx,0x000008(%esp)
		mov    %eax,0x000004(%esp)
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0cf13e_data,%ax
		je     _01601c_jump

	_015f47_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0cf13c_data,%ax
		je     _016032_jump

	_015f59_jump:
		mov    0x000008(%esp),%edx
		mov    0x000004(%esp),%eax
		and    $0x00000c,%ebp
		je     _015ffe_jump
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _0158b0_jump,%ebx
		add    _0158b4_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _015f28_jump
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx

	_015f8b_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0cf13e_data,%ax
		je     _016048_jump

	_015f9e_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0cf13c_data,%ax
		je     _01605e_jump

	_015fb0_jump:
		dec    %ebx
		je     _015fba_jump
		and    $0x00000c,%ebp
		jne    _015f8b_jump
		jmp    _015fd6_jump

	_015fba_jump:
		mov    _0cf144_data,%bx
		mov    %bx,_0cf13e_data
		mov    _0cf142_data,%bx
		mov    %bx,_0cf13c_data

	_015fd6_jump:
		jmp    _016016_jump

	_015fd8_jump:
		mov    _0cf144_data,%bx
		mov    %bx,_0cf13e_data
		mov    _0cf142_data,%bx
		mov    %bx,_0cf13c_data
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_015ffe_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _0158b0_jump,%ebx
		add    _0158b4_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _015ffe_jump

	_016016_jump:
		add    $0x00000c,%esp
		sti    
		popa   
		ret    

	_01601c_jump:
		call   _016e50_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cf13e_data
		jmp    _015f47_jump

	_016032_jump:
		call   _016e50_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cf13c_data
		jmp    _015f59_jump

	_016048_jump:
		call   _016e50_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cf13e_data
		jmp    _015f9e_jump

	_01605e_jump:
		call   _016e50_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cf13c_data
		jmp    _015fb0_jump



_016074_func:
		push   %bx
		pushfw 
		mov    %sp,%ax
		and    $0x00fffc,%sp
		pushf  
		pushf  
		pop    %ebx
		or     $0x040000,%ebx
		push   %ebx
		popf   
		pushf  
		pop    %ebx
		popf   
		mov    %ax,%sp
		test   $0x040000,%ebx
		je     _0160ce_jump
		pushf  
		pop    %eax
		mov    %eax,%ebx
		xor    $0x200000,%eax
		push   %eax
		popf   
		pushf  
		pop    %eax
		push   %ebx
		popf   
		and    $0x200000,%eax
		and    $0x200000,%ebx
		cmp    %ebx,%eax
		je     _0160c7_jump
		mov    $0x000001,%eax
		cpuid  
		shr    $0x000008,%ax
		and    $0x00000f,%eax
		jmp    _0160d3_jump

	_0160c7_jump:
		mov    $0x000004,%eax
		jmp    _0160d3_jump

	_0160ce_jump:
		mov    $0x000003,%eax

	_0160d3_jump:
		popfw  
		pop    %bx
		ret    

	_0160d8_jump:
		or     %al,(%eax)
		add    %al,(%eax)

	_0160dc_jump:
		cmp    %al,(%ecx)
		add    %al,(%eax)

_0160e0_switch:
		.long   0


	_0160e4_jump:
		enter  $0x000000,$0x000000



_0160e8_func:
		movl   $0x000008,_0160d8_jump
		movl   $0x000138,_0160dc_jump
		movl   $0x000000,_0160e0_switch
		movl   $0x0000c8,_0160e4_jump
		ret    



_016111_func:
		push   %ebp
		push   %edi
		mov    _0160d8_jump,%ebp
		mov    %ebp,(%eax)
		mov    _0160dc_jump,%edi
		mov    %edi,(%ebx)
		mov    _0160e0_switch,%ebp
		mov    %ebp,(%ecx)
		mov    _0160e4_jump,%edi
		mov    %edi,(%edx)
		pop    %edi
		pop    %ebp
		ret    



_01614e_func:
		cmp    $0x000000,%eax
		jge    _016158_jump
		mov    $0x000000,%eax

	_016158_jump:
		cmp    $0x000140,%eax
		jle    _016164_jump
		mov    $0x000140,%eax

	_016164_jump:
		mov    %eax,_0160d8_jump
		cmp    $0x000000,%ebx
		jge    _016173_jump
		mov    $0x000000,%ebx

	_016173_jump:
		cmp    $0x000140,%ebx
		jle    _016180_jump
		mov    $0x000140,%ebx

	_016180_jump:
		mov    %ebx,_0160dc_jump
		cmp    $0x000000,%ecx
		jge    _016190_jump
		mov    $0x000000,%ecx

	_016190_jump:
		cmp    $0x0000c8,%ecx
		jle    _01619d_jump
		mov    $0x0000c8,%ecx

	_01619d_jump:
		mov    %ecx,_0160e0_switch
		cmp    $0x000000,%edx
		jge    _0161ad_jump
		mov    $0x000000,%edx

	_0161ad_jump:
		cmp    $0x0000c8,%edx
		jle    _0161ba_jump
		mov    $0x0000c8,%edx

	_0161ba_jump:
		mov    %edx,_0160e4_jump
		ret    



_0161c1_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		cmp    _0160d8_jump,%eax
		jl     _01620b_jump

	_0161d3_jump:
		add    %eax,%edx
		cmp    _0160dc_jump,%edx
		ja     _0161f7_jump

	_0161dd_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0160e0_switch,%ebx
		jl     _01623d_jump

	_0161e9_jump:
		add    %ebx,%edx
		cmp    _0160e4_jump,%edx
		ja     _016229_jump

	_0161f3_jump:
		clc    
		ret    

	_0161f5_jump:
		stc    
		ret    

	_0161f7_jump:
		cmp    _0160dc_jump,%eax
		jae    _0161f5_jump
		mov    _0160dc_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _0161dd_jump

	_01620b_jump:
		sub    _0160d8_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _0161f5_jump
		and    $0x00ffff,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		add    %eax,%esi
		mov    _0160d8_jump,%eax
		jmp    _0161d3_jump

	_016229_jump:
		cmp    _0160e4_jump,%ebx
		jae    _0161f5_jump
		mov    _0160e4_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _0161f3_jump

	_01623d_jump:
		add    %ebx,%edx
		cmp    _0160e0_switch,%edx
		jle    _0161f5_jump
		sub    _0160e0_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _092144_data,%eax
		mul    %bx
		add    %eax,%esi
		pop    %eax
		mov    _0160e0_switch,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _0161e9_jump



_016277_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		cmp    _0160d8_jump,%eax
		jl     _0162c8_jump

	_016289_jump:
		add    %eax,%edx
		cmp    _0160dc_jump,%edx
		ja     _0162ac_jump

	_016293_jump:
		movzbl %ch,%edx
		cmp    _0160e0_switch,%ebx
		jl     _0162f8_jump

	_01629e_jump:
		add    %ebx,%edx
		cmp    _0160e4_jump,%edx
		ja     _0162e4_jump

	_0162a8_jump:
		clc    
		ret    

	_0162aa_jump:
		stc    
		ret    

	_0162ac_jump:
		cmp    _0160dc_jump,%eax
		jae    _0162aa_jump
		mov    _0160dc_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		add    _092144_data,%esi
		sub    %edx,%esi
		jmp    _016293_jump

	_0162c8_jump:
		sub    _0160d8_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _0162aa_jump
		and    $0x00ffff,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		mov    _0160d8_jump,%eax
		jmp    _016289_jump

	_0162e4_jump:
		cmp    _0160e4_jump,%ebx
		jae    _0162aa_jump
		mov    _0160e4_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _0162a8_jump

	_0162f8_jump:
		add    %ebx,%edx
		cmp    _0160e0_switch,%edx
		jle    _0162aa_jump
		sub    _0160e0_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _092144_data,%eax
		mul    %bx
		add    %eax,%esi
		pop    %eax
		mov    _0160e0_switch,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _01629e_jump

_016332_switch:
		.long   0

_016336_switch:
		.long   0




_01633a_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		jmp    _016351_jump



_016346_func:
		call   _0161c1_func
		jb     _0164ac_jump

	_016351_jump:
		push   %ebp
		mov    _092144_data,%edx
		mov    %edx,_016332_switch
		add    _091e20_data(,%ebx,4),%edi
		movzbl %ch,%edx
		mov    _091e20_data(,%edx,4),%ebx
		add    %edi,%ebx
		and    $_0000ff_case,%ecx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0163d2_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016336_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi

	_0163ae_jump:
		xor    %ebp,%ebp

	_0163b0_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0163ba_jump
		mov    %ah,(%edi)

	_0163ba_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0163b0_jump
		add    _016336_switch,%edi
		add    _016332_switch,%esi
		cmp    %ebx,%edi
		jb     _0163ae_jump
		pop    %edi
		pop    %esi

	_0163d2_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01641d_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016336_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0163f6_jump
		inc    %edi
		mov    $0x000001,%al

	_0163f6_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_0163f9_jump:
		xor    %ebp,%ebp

	_0163fb_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016405_jump
		mov    %ah,(%edi)

	_016405_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0163fb_jump
		add    _016336_switch,%edi
		add    _016332_switch,%esi
		cmp    %ebx,%edi
		jb     _0163f9_jump
		pop    %edi
		pop    %esi

	_01641d_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016468_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016336_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016441_jump
		inc    %edi
		mov    $0x000001,%al

	_016441_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_016444_jump:
		xor    %ebp,%ebp

	_016446_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016450_jump
		mov    %ah,(%edi)

	_016450_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016446_jump
		add    _016336_switch,%edi
		add    _016332_switch,%esi
		cmp    %ebx,%edi
		jb     _016444_jump
		pop    %edi
		pop    %esi

	_016468_jump:
		pop    %ecx
		inc    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0164ab_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016336_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016488_jump
		inc    %edi
		mov    $0x000001,%al

	_016488_jump:
		out    %al,(%dx)

	_016489_jump:
		xor    %ebp,%ebp

	_01648b_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016495_jump
		mov    %ah,(%edi)

	_016495_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _01648b_jump
		add    _016336_switch,%edi
		add    _016332_switch,%esi
		cmp    %ebx,%edi
		jb     _016489_jump

	_0164ab_jump:
		pop    %ebp

	_0164ac_jump:
		ret    



_0164ad_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		jmp    _0164c4_jump



_0164b9_func:
		call   _016277_func
		jb     _01662a_jump

	_0164c4_jump:
		push   %ebp
		mov    _092144_data,%edx
		mov    %edx,_016332_switch
		add    _091e20_data(,%ebx,4),%edi
		movzbl %ch,%edx
		mov    _091e20_data(,%edx,4),%ebx
		add    %edi,%ebx
		and    $_0000ff_case,%ecx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		add    %ecx,%esi
		dec    %esi
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01654a_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016336_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi

	_016526_jump:
		xor    %ebp,%ebp

	_016528_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016532_jump
		mov    %ah,(%edi)

	_016532_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016528_jump
		add    _016336_switch,%edi
		add    _016332_switch,%esi
		cmp    %ebx,%edi
		jb     _016526_jump
		pop    %edi
		pop    %esi

	_01654a_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016597_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016336_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016570_jump
		inc    %edi
		mov    $0x000001,%al

	_016570_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_016573_jump:
		xor    %ebp,%ebp

	_016575_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01657f_jump
		mov    %ah,(%edi)

	_01657f_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016575_jump
		add    _016336_switch,%edi
		add    _016332_switch,%esi
		cmp    %ebx,%edi
		jb     _016573_jump
		pop    %edi
		pop    %esi

	_016597_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0165e4_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016336_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0165bd_jump
		inc    %edi
		mov    $0x000001,%al

	_0165bd_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_0165c0_jump:
		xor    %ebp,%ebp

	_0165c2_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0165cc_jump
		mov    %ah,(%edi)

	_0165cc_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0165c2_jump
		add    _016336_switch,%edi
		add    _016332_switch,%esi
		cmp    %ebx,%edi
		jb     _0165c0_jump
		pop    %edi
		pop    %esi

	_0165e4_jump:
		pop    %ecx
		dec    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016629_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016336_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016606_jump
		inc    %edi
		mov    $0x000001,%al

	_016606_jump:
		out    %al,(%dx)

	_016607_jump:
		xor    %ebp,%ebp

	_016609_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016613_jump
		mov    %ah,(%edi)

	_016613_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016609_jump
		add    _016336_switch,%edi
		add    _016332_switch,%esi
		cmp    %ebx,%edi
		jb     _016607_jump

	_016629_jump:
		pop    %ebp

	_01662a_jump:
		ret    

_01662b_switch:
		.long   0

_01662f_switch:
		.long   0




_016633_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092140_data
		call   _0161c1_func
		jb     _0167c9_jump
		push   %ebp
		mov    _092144_data,%edx
		mov    %edx,_01662b_switch
		xor    %edx,%edx
		add    _091e20_data(,%ebx,4),%edi
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		and    $_0000ff_case,%ecx
		add    %edi,%ebx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0166d6_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_01662f_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_0166af_jump:
		xor    %ebp,%ebp

	_0166b1_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0166bd_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0166bd_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0166b1_jump
		add    _01662f_switch,%edi
		add    _01662b_switch,%esi
		cmp    %ebx,%edi
		jb     _0166af_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_0166d6_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01672a_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_01662f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0166fa_jump
		inc    %edi
		mov    $0x000001,%al

	_0166fa_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_016703_jump:
		xor    %ebp,%ebp

	_016705_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016711_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016711_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016705_jump
		add    _01662f_switch,%edi
		add    _01662b_switch,%esi
		cmp    %ebx,%edi
		jb     _016703_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_01672a_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01677e_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_01662f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _01674e_jump
		inc    %edi
		mov    $0x000001,%al

	_01674e_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_016757_jump:
		xor    %ebp,%ebp

	_016759_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016765_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016765_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016759_jump
		add    _01662f_switch,%edi
		add    _01662b_switch,%esi
		cmp    %ebx,%edi
		jb     _016757_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_01677e_jump:
		pop    %ecx
		inc    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0167c8_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_01662f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _01679e_jump
		inc    %edi
		mov    $0x000001,%al

	_01679e_jump:
		out    %al,(%dx)

	_01679f_jump:
		xor    %ebp,%ebp
		mov    _092140_data,%eax

	_0167a6_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0167b2_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0167b2_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0167a6_jump
		add    _01662f_switch,%edi
		add    _01662b_switch,%esi
		cmp    %ebx,%edi
		jb     _01679f_jump

	_0167c8_jump:
		pop    %ebp

	_0167c9_jump:
		ret    



_0167ca_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092140_data
		call   _016277_func
		jb     _01696b_jump
		push   %ebp
		mov    _092144_data,%edx
		mov    %edx,_01662b_switch
		xor    %edx,%edx
		add    _091e20_data(,%ebx,4),%edi
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		and    $_0000ff_case,%ecx
		add    %edi,%ebx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		add    %ecx,%esi
		dec    %esi
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016872_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_01662f_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_01684b_jump:
		xor    %ebp,%ebp

	_01684d_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016859_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016859_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _01684d_jump
		add    _01662f_switch,%edi
		add    _01662b_switch,%esi
		cmp    %ebx,%edi
		jb     _01684b_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016872_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0168c8_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_01662f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016898_jump
		inc    %edi
		mov    $0x000001,%al

	_016898_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_0168a1_jump:
		xor    %ebp,%ebp

	_0168a3_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0168af_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0168af_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0168a3_jump
		add    _01662f_switch,%edi
		add    _01662b_switch,%esi
		cmp    %ebx,%edi
		jb     _0168a1_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_0168c8_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01691e_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_01662f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0168ee_jump
		inc    %edi
		mov    $0x000001,%al

	_0168ee_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_0168f7_jump:
		xor    %ebp,%ebp

	_0168f9_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016905_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016905_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0168f9_jump
		add    _01662f_switch,%edi
		add    _01662b_switch,%esi
		cmp    %ebx,%edi
		jb     _0168f7_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_01691e_jump:
		pop    %ecx
		dec    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01696a_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_01662f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016940_jump
		inc    %edi
		mov    $0x000001,%al

	_016940_jump:
		out    %al,(%dx)
		mov    _092140_data,%eax

	_016946_jump:
		xor    %ebp,%ebp

	_016948_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016954_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016954_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016948_jump
		add    _01662f_switch,%edi
		add    _01662b_switch,%esi
		cmp    %ebx,%edi
		jb     _016946_jump

	_01696a_jump:
		pop    %ebp

	_01696b_jump:
		ret    



_01696c_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		jmp    _016984_jump

	_016978_jump:
		call   _0161c1_func
		jb     _0169f0_jump
		cmp    $0x000000,%cl
		jbe    _0169f0_jump

	_016984_jump:
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $_0000ff_case,%ecx
		push   %ebp
		mov    _092144_data,%edx
		xor    %eax,%eax

	_0169b9_jump:
		xor    %ebp,%ebp

	_0169bb_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _0169d8_jump
		mov    %al,(%edi,%ebp,1)
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _0169bb_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _0169b9_jump
		pop    %ebp
		ret    

	_0169d8_jump:
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		cmp    %ecx,%ebp
		jl     _0169bb_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _0169b9_jump
		pop    %ebp

	_0169f0_jump:
		ret    



_0169f1_func:
		call   _0161c1_func
		jb     _016a4e_jump
		cmp    $0x000000,%cl
		jbe    _016a4e_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $_0000ff_case,%ecx
		push   %ebp
		mov    _092144_data,%edx

	_016a30_jump:
		xor    %ebp,%ebp

	_016a32_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x000000,%al
		je     _016a3c_jump
		mov    %al,(%edi,%ebp,1)

	_016a3c_jump:
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016a32_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016a30_jump
		pop    %ebp

	_016a4e_jump:
		ret    



_016a50_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		jmp    _016a68_jump

	_016a5c_jump:
		call   _016277_func
		jb     _016adb_jump
		cmp    $0x000000,%cl
		jbe    _016adb_jump

	_016a68_jump:
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $_0000ff_case,%ecx
		push   %ebp
		mov    _092144_data,%edx
		xor    %eax,%eax

	_016a9d_jump:
		xor    %ebp,%ebp
		push   %edi

	_016aa0_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016ac0_jump
		mov    %al,-0x000001(%edi,%ecx,1)
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _016aa0_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016a9d_jump
		pop    %ebp
		ret    

	_016ac0_jump:
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		sub    %eax,%edi
		cmp    %ecx,%ebp
		jl     _016aa0_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016a9d_jump
		pop    %ebp

	_016adb_jump:
		ret    



_016adc_func:
		call   _016277_func
		jb     _016b3d_jump
		cmp    $0x000000,%cl
		jbe    _016b3d_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $_0000ff_case,%ecx
		push   %ebp
		mov    _092144_data,%edx

	_016b1b_jump:
		xor    %ebp,%ebp
		push   %edi

	_016b1e_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x000000,%al
		je     _016b29_jump
		mov    %al,-0x000001(%edi,%ecx,1)

	_016b29_jump:
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _016b1e_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016b1b_jump
		pop    %ebp

	_016b3d_jump:
		ret    



_016b3e_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092140_data
		call   _0161c1_func
		jb     _016bdc_jump
		cmp    $0x000000,%cl
		jbe    _016bdc_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $_0000ff_case,%ecx
		push   %ebp
		mov    _092144_data,%edx
		mov    _092140_data,%ah

	_016b98_jump:
		xor    %ebp,%ebp

	_016b9a_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016bb9_jump
		or     %ah,%al
		mov    %al,(%edi,%ebp,1)
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016b9a_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016b98_jump
		pop    %ebp
		ret    

	_016bb9_jump:
		and    $_0000ff_case,%eax
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		mov    _092140_data,%ah
		cmp    %ecx,%ebp
		jl     _016b9a_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016b98_jump
		pop    %ebp

	_016bdc_jump:
		ret    



_016bdd_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092140_data
		call   _016277_func
		jb     _016c82_jump
		cmp    $0x000000,%cl
		jbe    _016c82_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $_0000ff_case,%ecx
		push   %ebp
		mov    _092144_data,%edx
		mov    _092140_data,%ah

	_016c37_jump:
		xor    %ebp,%ebp
		push   %edi

	_016c3a_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016c5c_jump
		or     %ah,%al
		mov    %al,-0x000001(%edi,%ecx,1)
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _016c3a_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016c37_jump
		pop    %ebp
		ret    

	_016c5c_jump:
		and    $_0000ff_case,%eax
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		sub    %eax,%edi
		mov    _092140_data,%ah
		cmp    %ecx,%ebp
		jl     _016c3a_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016c37_jump
		pop    %ebp

	_016c82_jump:
		ret    

_016c83_switch:
		.long   0




_016c87_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_016c83_switch
		cmp    _0160d8_jump,%eax
		jl     _016cd4_jump
		add    %eax,%edx
		cmp    _0160dc_jump,%edx
		ja     _016cc0_jump
		shr    $0x000002,%cl

	_016ca6_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0160e0_switch,%ebx
		jl     _016d0e_jump

	_016cb2_jump:
		add    %ebx,%edx
		cmp    _0160e4_jump,%edx
		ja     _016cfa_jump

	_016cbc_jump:
		clc    
		ret    

	_016cbe_jump:
		stc    
		ret    

	_016cc0_jump:
		cmp    _0160dc_jump,%eax
		jae    _016cbe_jump
		mov    _0160dc_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _016d48_jump

	_016cd4_jump:
		push   %eax
		sub    _0160d8_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _016cbe_jump
		and    $0x00fffc,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		mov    %eax,%edx
		pop    %eax
		add    %edx,%eax
		add    %edx,0x000004(%esp)
		add    %edx,%esi
		shr    $0x000002,%cl
		jmp    _016ca6_jump

	_016cfa_jump:
		cmp    _0160e4_jump,%ebx
		jae    _016cbe_jump
		mov    _0160e4_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _016cbc_jump

	_016d0e_jump:
		add    %ebx,%edx
		cmp    _0160e0_switch,%edx
		jle    _016cbe_jump
		sub    _0160e0_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _016c83_switch,%eax
		mul    %bx
		add    %eax,%esi
		add    %eax,0x000008(%esp)
		pop    %eax
		mov    _0160e0_switch,%ebx
		jmp    _016cb2_jump

	_016d48_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		shr    $0x000002,%cl
		and    $0x000003,%edx
		je     _016ca6_jump
		inc    %cl
		jmp    _016ca6_jump



_016d60_func:
		sub    $0x00000c,%esp
		mov    %edx,(%esp)
		call   _016c87_func
		jb     _016dd9_jump
		cmp    $0x000000,%cl
		jbe    _016dd9_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		mov    %ebx,0x000004(%esp)
		add    %eax,%edi
		mov    (%esp),%edx
		and    $_0000ff_case,%ecx
		push   %ebp
		xor    %ebx,%ebx

	_016da8_jump:
		xor    %ebp,%ebp

	_016daa_jump:
		mov    (%esi,%ebp,4),%eax
		cmp    $0x000000,%eax
		je     _016dbb_jump
		mov    (%edx,%ebp,4),%ebx
		and    %ebx,(%edi,%ebp,4)
		or     %eax,(%edi,%ebp,4)

	_016dbb_jump:
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016daa_jump
		add    $0x000140,%edi
		add    _016c83_switch,%esi
		add    _016c83_switch,%edx
		cmp    0x000008(%esp),%edi
		jb     _016da8_jump
		pop    %ebp

	_016dd9_jump:
		add    $0x00000c,%esp
		ret    



_016ddd_func:
		push   %edx
		push   %eax
		mov    $0x0003da,%dx

	_016de3_jump:
		in     (%dx),%al
		test   $0x000008,%ax
		je     _016de3_jump
		pop    %eax
		pop    %edx
		ret    



_016ded_func:
		push   %edx
		push   %eax
		mov    $0x0003da,%dx

	_016df3_jump:
		in     (%dx),%al
		test   $0x000008,%ax
		jne    _016df3_jump
		pop    %eax
		pop    %edx
		ret    



_016dfd_func:
		movl   $0x000000,_092158_data
		movl   $0x000000,_092154_data
		movl   $0x000000,_092150_data
		push   %eax
		in     $0x000061,%al
		or     $0x000003,%al
		out    %al,$0x000061
		movl   $0x00ffff,_092148_data
		mov    $0x0000b4,%al
		out    %al,$0x000043
		mov    _092148_data,%eax
		out    %al,$0x000042
		mov    %ah,%al
		out    %al,$0x000042
		pop    %eax
		ret    



_016e3d_func:
		push   %eax
		in     $0x000061,%al
		and    $0x0000fc,%al
		out    %al,$0x000061
		mov    $0x0000b4,%al
		out    %al,$0x000043
		mov    $0x000000,%al
		out    %al,$0x000042
		out    %al,$0x000042
		pop    %eax
		ret    



_016e50_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000080,%eax
		out    %al,$0x000043
		nop
		in     $0x000042,%al
		mov    %al,%ah
		in     $0x000042,%al
		xchg   %al,%ah
		mov    _092148_data,%ebx
		sub    %eax,%ebx
		mov    %ebx,%eax
		cmp    _092150_data,%eax
		jg     _016e9c_jump
		jne    _016e90_jump
		mov    _092158_data,%edx
		inc    %edx
		cmp    $0x000014,%edx
		jle    _016e90_jump
		movl   $0x000000,_092148_data
		xor    %edx,%edx

	_016e90_jump:
		mov    _092148_data,%ebx
		add    %ebx,_092154_data

	_016e9c_jump:
		mov    %eax,_092150_data
		add    _092154_data,%eax
		mov    %edx,_092158_data
		pop    %edx
		pop    %ebx
		ret    



_016eb0_func:
		mov    $0x000001,%ecx
		cmpl   $0x000000,_092148_data
		je     _016eca_jump
		dec    %ecx
		dec    %ecx

	_016ec0_jump:
		call   _016e50_func
		inc    %ecx
		cmp    %ebx,%eax
		jle    _016ec0_jump

	_016eca_jump:
		ret    



_016ecb_func:
		call   _016dfd_func
		ret    



_016ee0_func:
		push   %esi
		push   %edi
		mov    %ebx,%esi
		xor    %ah,%ah
		xor    %dh,%dh
		and    $0x00000f,%al
		and    $0x00000f,%dl
		mov    %ax,_0c1ed0_data
		mov    %dx,_0c1ed2_data
		mov    $0x000010,%eax
		mov    _0c1ed0_data,%edx
		mov    _0c1ece_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sub    %edx,%eax
		mov    %ebx,%edx
		lea    0x000000(,%eax,4),%edi
		sar    $0x00001f,%edx
		add    %eax,%edi
		mov    %ebx,%eax
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0cd154_data,%edx
		shl    $0x000004,%edi
		sub    %eax,%edx
		lea    -0x0004ff(%edx,%edi,1),%eax
		mov    %eax,_0c1ed4_data
		cmpb   $0x000000,_0cf40f_data
		je     _016f55_jump
		xor    %edx,%edx
		mov    %edx,_0c1ed8_data
		jmp    _016f62_jump

	_016f55_jump:
		movswl %si,%eax
		add    $0x000010,%eax
		sub    %ebx,%eax
		mov    %eax,_0c1ed8_data

	_016f62_jump:
		mov    _0c1ed0_data,%edx
		movswl %cx,%eax
		sar    $0x000010,%edx
		add    $0x000010,%eax
		sub    %edx,%eax
		mov    %eax,_0c1edc_data
		mov    _0c1ed8_data,%eax
		mov    %eax,%edx
		mov    $0x000004,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cd1d0_data,%ebx
		shr    $0x000002,%ebx
		imul   %edx,%ebx
		mov    _0c1ed8_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		add    _0cd1dc_data,%eax
		mov    _0cd1bc_data,%esi
		add    %eax,%ebx
		mov    _0c1edc_data,%eax
		imul   %esi,%eax
		add    %eax,%ebx
		mov    _0c1ed0_data,%ax
		xor    %ah,%ah
		and    $0x000003,%al
		movswl %ax,%ecx
		mov    $0x000003,%eax
		sub    %ecx,%eax
		mov    %eax,%ecx
		mov    $0x000001,%eax
		shl    %cl,%eax
		mov    %ebx,_0c1ee0_data
		mov    %eax,_0c1ee4_data
		pop    %edi
		pop    %esi
		ret    



_016fec_func:
		push   %edx
		mov    %al,%dl
		cmpb   $0x000000,_0cf410_data
		je     _017006_jump
		cmpb   $0x000001,_0cf453_data
		je     _017006_jump
		call   _0727e8_func

	_017006_jump:
		mov    $_0ca8b0_data,%eax
		call   _042434_func
		cmpb   $0x000000,_0cf453_data
		jne    _01702e_jump
		call   _059ea4_func
		cmpb   $0x000000,_0cf453_data
		jne    _017033_jump
		call   _05a02c_func
		jmp    _017033_jump

	_01702e_jump:
		call   _05aa24_func

	_017033_jump:
		call   _047c40_func
		test   %dl,%dl
		jne    _017046_jump
		mov    $_0c1fb0_data,%eax
		call   _05bcd4_func

	_017046_jump:
		pop    %edx
		ret    



_017048_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%ah
		xor    %dl,%dl
		mov    %ah,_0cf48a_data
		call   _05ab60_func
		mov    %dl,_0cf44a_data
		xor    %edx,%edx
		mov    %edx,_0cc988_data
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		mov    %dx,_0cf13a_data
		mov    _0cf444_data,%dh
		mov    %bx,_0cf138_data
		test   %dh,%dh
		je     _017095_jump
		call   _072ab8_func

	_017095_jump:
		cmpb   $0x000000,_0cf471_data
		je     _0175bb_jump
		cmpw   $0x000000,_0cf272_data
		jne    _0175bb_jump
		cmpw   $0x000000,_0cf288_data
		jne    _0175bb_jump
		cmpb   $0x000002,_0cf425_data
		je     _0175bb_jump
		call   _016ecb_func
		cmpb   $0x000000,_0cf442_data
		je     _0170de_jump
		call   _016ddd_func

	_0170de_jump:
		cmpb   $0x000000,_0cf43f_data
		je     _0170f0_jump
		call   _016e50_func
		mov    %eax,0x000004(%esp)

	_0170f0_jump:
		cmpb   $0x000000,_0cf43f_data
		je     _017106_jump
		mov    0x000004(%esp),%ebx
		movzwl _0cf1e8_data,%ebp
		add    %ebx,%ebp

	_017106_jump:
		call   _054e98_func
		cmpb   $0x000020,_0cf471_data
		jb     _017122_jump
		cmpb   $0x000000,_0cf453_data
		jne    _017122_jump
		call   _03d638_func

	_017122_jump:
		call   _03c7fc_func
		cmpw   $0x000000,_095e1e_data
		jne    _0171df_jump
		cmpw   $0x000000,_095e20_data
		jne    _0171df_jump
		mov    _0cca54_data,%edx
		mov    _0cca54_data,%eax
		shl    $0x000008,%edx
		shl    $0x000006,%eax
		mov    _0cca4c_data,%ecx
		add    %edx,%eax
		mov    _0cf417_data,%bh
		add    %ecx,%eax
		cmp    $0x000001,%bh
		jne    _0171af_jump
		cmpb   $0x000000,_095e6a_data
		je     _0171af_jump
		mov    _0cca50_data,%edx
		mov    _0cca54_data,%ebx
		mov    _0cca4c_data,%ecx
		mov    _095de0_data,%edi
		mov    _0ccae4_data,%esi
		sub    %ebx,%edx
		add    %eax,%edi
		mov    %edx,%ebx
		mov    _0cca48_data,%edx
		add    %eax,%esi
		sub    %ecx,%edx
		mov    %ebx,%eax
		mov    %edx,%ecx
		call   *_0ccab8_data
		jmp    _01722a_jump

	_0171af_jump:
		mov    _0cca50_data,%ebx
		mov    _0cca54_data,%esi
		mov    _0cca48_data,%ecx
		mov    _0cca4c_data,%edi
		sub    %esi,%ebx
		sub    %edi,%ecx
		mov    _095de0_data,%edi
		mov    _0ccae4_data,%esi
		add    %eax,%edi
		add    %eax,%esi
		mov    %ebx,%eax
		jmp    _017225_jump

	_0171df_jump:
		cmpb   $0x000001,_0cf417_data
		jne    _01720f_jump
		cmpb   $0x000000,_095e6a_data
		je     _01720f_jump
		mov    $0x000140,%ecx
		mov    _0cca50_data,%eax
		mov    _095de0_data,%edi
		mov    _0ccae4_data,%esi
		call   *_0ccab8_data
		jmp    _01722a_jump

	_01720f_jump:
		mov    $0x000140,%ecx
		mov    _0cca50_data,%eax
		mov    _095de0_data,%edi
		mov    _0ccae4_data,%esi

	_017225_jump:
		call   _014bfb_func

	_01722a_jump:
		cmpb   $0x000000,_0cf43f_data
		je     _017238_jump
		call   _016e50_func

	_017238_jump:
		cmpb   $0x000000,_0cf444_data
		je     _017246_jump
		call   _072ab8_func

	_017246_jump:
		cmpb   $0x000000,_0cf417_data
		jne    _017254_jump
		call   _0420e8_func

	_017254_jump:
		mov    _0cf1dc_data,%dl
		xor    %ebx,%ebx

	_01725c_jump:
		mov    %ebx,%eax
		call   _016fec_func
		mov    _0cf272_data,%cx
		cmp    %cx,%bx
		jne    _017284_jump
		cmp    _0cf288_data,%cx
		jne    _017284_jump
		cmp    _0cf46d_data,%cl
		jne    _017284_jump
		mov    $0x000001,%al
		jmp    _017286_jump

	_017284_jump:
		mov    %bl,%al

	_017286_jump:
		mov    %al,0x000008(%esp)
		test   %al,%al
		je     _017295_jump
		dec    %dl
		cmp    $_0000ff_case,%dl
		jne    _01725c_jump

	_017295_jump:
		cmpb   $0x000000,_0cf43f_data
		je     _0172a3_jump
		call   _016e50_func

	_0172a3_jump:
		call   _047cb8_func
		cmpb   $0x000000,_095e26_data
		je     _017315_jump
		cmpb   $0x000001,_0cf412_data
		jne    _017315_jump
		mov    _0cf2ac_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0cf1da_data,%bx
		mov    _0cf1d6_data,%dx
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		call   _078108_func
		xor    %eax,%eax
		mov    _0cca54_data,%cx
		mov    _0cca50_data,%ax
		xor    %ebx,%ebx
		push   %eax
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cca48_data,%ax
		mov    _0cca4c_data,%bx
		push   %eax
		xor    %eax,%eax
		mov    _0cf1da_data,%dx
		mov    _0cf1d6_data,%ax
		call   _0774d0_func
		jmp    _017327_jump

	_017315_jump:
		mov    _0cd154_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e88,%ecx
		rep stos %eax,%es:(%edi)

	_017327_jump:
		cmpw   $0x000000,_0cf1f8_data
		je     _017358_jump
		mov    _0cca48_data,%edx
		mov    _0cca4c_data,%ecx
		mov    _0cca50_data,%ebx
		mov    _0cca54_data,%eax
		sub    $0x000004,%edx
		sub    $0x000006,%ebx
		call   _015587_func
		call   _019aa4_func

	_017358_jump:
		mov    $_0c1fb0_data,%edx
		mov    _0ccae4_data,%eax
		call   _05c4a0_func
		call   _01aa90_func
		cmpb   $0x000000,_0cf43f_data
		je     _01737a_jump
		call   _016e50_func

	_01737a_jump:
		call   _0197a8_func
		cmpb   $0x000000,_0cf43f_data
		je     _01738d_jump
		call   _016e50_func

	_01738d_jump:
		call   _019e88_func
		xor    %eax,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    _0cca50_data,%ax
		xor    %edx,%edx
		push   %eax
		xor    %eax,%eax
		mov    _0cca54_data,%cx
		mov    _0cca48_data,%ax
		mov    _0cca4c_data,%bx
		push   %eax
		xor    %eax,%eax
		mov    _0cf1da_data,%dx
		mov    _0cf1d6_data,%ax
		call   _077dc8_func
		cmpw   $0x000000,_0cf1f8_data
		je     _0173db_jump
		call   _019c80_func

	_0173db_jump:
		mov    _0ccae4_data,%eax
		call   _048094_func
		mov    _0cca48_data,%eax
		mov    _0cca4c_data,%esi
		sub    %esi,%eax
		lea    0x000004(%eax),%edx
		mov    _0ccae4_data,%eax
		mov    _0cca54_data,%edi
		lea    (%esi,%eax,1),%ebx
		mov    %edi,%eax
		shl    $0x000008,%eax
		add    %ebx,%eax
		mov    %edi,%ebx
		shl    $0x000006,%ebx
		mov    _0cca50_data,%ecx
		add    %ebx,%eax
		sub    %edi,%ecx
		lea    -0x000004(%eax),%edi
		call   _014c26_func
		cmpb   $0x000000,_0cf448_data
		je     _017431_jump
		call   _01ab5c_func
		jmp    _01743b_jump

	_017431_jump:
		mov    _0cd2c8_data,%eax
		call   _01919c_func

	_01743b_jump:
		cmpb   $0x000000,_0cf41e_data
		je     _017449_jump
		call   _019160_func

	_017449_jump:
		mov    _0cd2c8_data,%eax
		call   _01b1ac_func
		cmpb   $0x000000,_0cf431_data
		je     _017461_jump
		call   _035598_func

	_017461_jump:
		mov    $0x000001,%eax
		call   _041c64_func
		test   %al,%al
		je     _01749c_jump
		cmpw   $0x000000,_0cf2d0_data
		jne    _01749c_jump
		cmpb   $0x000000,_095e1c_data
		jne    _01749c_jump
		cmpw   $0x000005,_0cf254_data
		je     _01749c_jump
		cmpb   $0x000000,_0cf425_data
		jne    _01749c_jump
		movb   $0x000001,_095e1c_data

	_01749c_jump:
		call   _0491c4_func
		call   _041d08_func
		test   %ax,%ax
		jne    _0174f1_jump
		call   _041c98_func
		test   %ax,%ax
		jne    _0174f1_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _0174f1_jump
		call   _041de8_func
		test   %ax,%ax
		jne    _0174f1_jump
		call   _041e58_func
		test   %ax,%ax
		jne    _0174f1_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _0174f1_jump
		call   _041f70_func
		test   %ax,%ax
		jne    _0174f1_jump
		call   _041ffc_func
		test   %ax,%ax
		je     _0174f9_jump

	_0174f1_jump:
		xor    %ecx,%ecx
		mov    %ecx,_0cc988_data

	_0174f9_jump:
		mov    _0cc988_data,%esi
		inc    %esi
		mov    %esi,_0cc988_data
		cmp    $0x005460,%esi
		jl     _017515_jump
		movb   $0x000001,_0cf441_data

	_017515_jump:
		cmpb   $0x000000,_0cf441_data
		je     _017545_jump
		mov    _095e1c_data,%ah
		test   %ah,%ah
		jne    _017545_jump
		cmpb   $0x000041,_0cf478_data
		jne    _01753f_jump
		call   _038880_func
		xor    %eax,%eax
		mov    %eax,_0cc988_data
		jmp    _017545_jump

	_01753f_jump:
		mov    %ah,_0cf441_data

	_017545_jump:
		mov    (%esp),%eax
		call   _036f40_func
		cmpb   $0x000000,_0cf43f_data
		je     _017095_jump
		cmpb   $0x000000,_0cf442_data
		je     _017095_jump
		cmpb   $0x000000,0x000008(%esp)
		je     _017095_jump
		mov    %ebp,%ebx
		call   _016eb0_func
		test   %ecx,%ecx
		jne    _017095_jump
		mov    $0x000001,%eax
		call   _016fec_func
		mov    _0ce098_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _01759f_jump
		incw   _0ce09a_data

	_01759f_jump:
		call   _048158_func
		cmpb   $0x000000,_0cf442_data
		je     _017095_jump
		call   _016ded_func
		jmp    _017095_jump

	_0175bb_jump:
		xor    %al,%al
		mov    %al,_0cf48a_data
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0175cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cf410_data
		je     _0175e7_jump
		cmpb   $0x000001,_0cf453_data
		je     _0175e7_jump
		call   _0727e8_func

	_0175e7_jump:
		mov    $_0ca8b0_data,%eax
		call   _042434_func
		cmpb   $0x000000,_0cf453_data
		jne    _01760f_jump
		call   _059ea4_func
		cmpb   $0x000000,_0cf453_data
		jne    _017614_jump
		call   _05a02c_func
		jmp    _017614_jump

	_01760f_jump:
		call   _05aa24_func

	_017614_jump:
		cmpb   $0x000000,_0cf453_data
		jne    _017645_jump
		mov    _0cf29c_data,%ecx
		mov    _0cf2a0_data,%ebx
		mov    _0cf2ae_data,%edx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03ba94_func

	_017645_jump:
		cmpb   $0x000001,_0cf412_data
		jne    _017672_jump
		call   _048984_func
		mov    _0cf1de_data,%bx
		test   %bx,%bx
		jge    _01767b_jump
		mov    _0cf1da_data,%ax
		mov    %ebx,%ecx
		add    %eax,%ecx
		mov    %cx,_0cf1de_data
		jmp    _01767b_jump

	_017672_jump:
		xor    %edx,%edx
		mov    %dx,_0cf1de_data

	_01767b_jump:
		cmpb   $0x000000,_095e26_data
		je     _0176cd_jump
		cmpb   $0x000001,_0cf412_data
		jne    _0176cd_jump
		mov    _0cf2ac_data,%esi
		sar    $0x000010,%esi
		mov    $0x000003,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %eax,%edx
		mov    _0cf1d6_data,%bx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cf1dc_data,%ecx
		sar    $0x000010,%ecx
		movswl %dx,%ebx
		mov    _0cf2ae_data,%edx
		mov    %esi,%eax
		sar    $0x000010,%edx
		jmp    _0176e2_jump

	_0176cd_jump:
		mov    _0cf2ae_data,%edx
		mov    _0cf2ac_data,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax

	_0176e2_jump:
		call   _016ee0_func
		mov    _0cf2ae_data,%edx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03c2f0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_017704_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,0x000004(%esp)
		mov    $0x000001,%dl
		xor    %ah,%ah
		xor    %ebx,%ebx
		mov    %ah,0x000008(%esp)
		mov    %dl,_0cf48a_data
		xor    %dh,%dh
		call   _05ab60_func
		mov    %dh,_0cf44a_data
		xor    %edx,%edx
		mov    %bx,_0cf138_data
		mov    %edx,_0cc988_data
		mov    $0x000001,%edx
		mov    _0cf444_data,%bl
		mov    %dx,_0cf13a_data
		test   %bl,%bl
		je     _017758_jump
		call   _072ab8_func

	_017758_jump:
		cmpb   $0x000000,_0cf471_data
		je     _017b9a_jump
		cmpw   $0x000000,_0cf272_data
		jne    _017b9a_jump
		cmpw   $0x000000,_0cf288_data
		jne    _017b9a_jump
		cmpb   $0x000002,_0cf425_data
		je     _017b9a_jump
		call   _016ecb_func
		call   _03b490_func
		cmpb   $0x000000,_0cf43f_data
		je     _0177a9_jump
		call   _016e50_func
		mov    %eax,(%esp)

	_0177a9_jump:
		cmpb   $0x000000,_0cf43f_data
		je     _0177be_jump
		mov    (%esp),%ebx
		movzwl _0cf1e8_data,%ebp
		add    %ebx,%ebp

	_0177be_jump:
		call   _054e98_func
		cmpb   $0x000020,_0cf471_data
		jb     _0177da_jump
		cmpb   $0x000000,_0cf453_data
		jne    _0177da_jump
		call   _03d638_func

	_0177da_jump:
		call   _03c7fc_func
		cmpb   $0x000000,_0cf444_data
		je     _0177ed_jump
		call   _072ab8_func

	_0177ed_jump:
		cmpl   $0x000001,_0cd2c4_data
		jne    _01780c_jump
		mov    _0cf2ae_data,%edx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03b754_func

	_01780c_jump:
		call   _0420e8_func
		mov    _0cf1dc_data,%dl
		xor    %ebx,%ebx

	_017819_jump:
		call   _0175cc_func
		mov    _0cf272_data,%di
		cmp    %di,%bx
		jne    _01783f_jump
		cmp    _0cf288_data,%di
		jne    _01783f_jump
		cmp    _0cf46d_data,%bl
		jne    _01783f_jump
		mov    $0x000001,%al
		jmp    _017841_jump

	_01783f_jump:
		mov    %bl,%al

	_017841_jump:
		mov    %al,0x00000c(%esp)
		test   %al,%al
		je     _017850_jump
		dec    %dl
		cmp    $_0000ff_case,%dl
		jne    _017819_jump

	_017850_jump:
		cmpb   $0x000000,_0cf43f_data
		je     _01785e_jump
		call   _016e50_func

	_01785e_jump:
		cmpb   $0x000000,_095e26_data
		je     _017888_jump
		cmpb   $0x000001,_0cf412_data
		jne    _017888_jump
		mov    _0cf2ae_data,%edx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03bd30_func
		jmp    _0178cf_jump

	_017888_jump:
		cmpb   $0x000000,_095e26_data
		je     _0178b2_jump
		cmpb   $0x000002,_0cf412_data
		jne    _0178b2_jump
		mov    _0cf2ae_data,%edx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03bd30_func
		jmp    _0178cf_jump

	_0178b2_jump:
		mov    _0cd154_data,%edi
		mov    $0x0003ce,%edx
		mov    $0x000a04,%ax
		out    %ax,(%dx)
		mov    $0x000000,%eax
		mov    $0x000fa0,%ecx
		rep stos %eax,%es:(%edi)

	_0178cf_jump:
		cmpw   $0x000000,_0cf1f8_data
		je     _0178de_jump
		call   _019aa4_func

	_0178de_jump:
		mov    _0cf2ae_data,%edx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03bdf8_func
		call   _01aa90_func
		cmpb   $0x000000,_0cf43f_data
		je     _017907_jump
		call   _016e50_func

	_017907_jump:
		call   _0197a8_func
		cmpb   $0x000000,_0cf43f_data
		je     _01791a_jump
		call   _016e50_func

	_01791a_jump:
		call   _019e88_func
		cmpw   $0x000000,_0cf1f8_data
		je     _01792e_jump
		call   _019c80_func

	_01792e_jump:
		cmpb   $0x000000,_0cf448_data
		je     _01793e_jump
		call   _01ab5c_func
		jmp    _017948_jump

	_01793e_jump:
		mov    _0cd2c8_data,%eax
		call   _01919c_func

	_017948_jump:
		cmpb   $0x000000,_0cf41e_data
		je     _017956_jump
		call   _019160_func

	_017956_jump:
		mov    _0cd2c8_data,%eax
		call   _01b1ac_func
		cmpb   $0x000000,_0cf40b_data
		je     _017976_jump
		mov    _0cd154_data,%edi
		call   _0144c0_func
		jmp    _017981_jump

	_017976_jump:
		mov    _0cd154_data,%edi
		call   _014456_func

	_017981_jump:
		cmpb   $0x000000,_0cf431_data
		je     _0179d4_jump
		call   _035598_func
		cmpb   $0x000000,_095e26_data
		je     _0179a8_jump
		cmpb   $0x000002,_0cf412_data
		jne    _0179a8_jump
		movb   $0x000001,0x000008(%esp)
		jmp    _0179d4_jump

	_0179a8_jump:
		cmpb   $0x000000,_095e26_data
		je     _0179d4_jump
		cmpb   $0x000001,_0cf40b_data
		jne    _0179d4_jump
		mov    _0cd1d0_data,%edx
		mov    _0cd1bc_data,%ebx
		mov    _0cd1dc_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func

	_0179d4_jump:
		mov    $0x000001,%eax
		call   _041c64_func
		test   %al,%al
		je     _017a1b_jump
		cmpw   $0x000000,_0cf2d0_data
		jne    _017a1b_jump
		cmpw   $0x000005,_0cf254_data
		je     _017a1b_jump
		cmpb   $0x000000,_0cf425_data
		jne    _017a1b_jump
		call   _0491c4_func
		cmpb   $0x000000,_095e26_data
		je     _017a1b_jump
		cmpb   $0x000002,_0cf412_data
		jne    _017a1b_jump
		movb   $0x000001,0x000008(%esp)

	_017a1b_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _017a8b_jump
		mov    _0cf40b_data,%eax
		sar    $0x000018,%eax
		mov    _0ce93d_data(%eax),%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		je     _017a85_jump
		call   _01cc5c_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _047508_func
		mov    %eax,_0cd22c_data
		mov    _0cf40b_data,%eax
		sar    $0x000018,%eax
		mov    _0ce93d_data(%eax),%eax
		sar    $0x000018,%eax
		call   _046f24_func
		mov    _0cd1d0_data,%edx
		mov    _0cd1bc_data,%ebx
		mov    _0cd1dc_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func
		xor    %esi,%esi
		mov    %esi,_0cd2ac_data

	_017a85_jump:
		xor    %bl,%bl
		mov    %bl,0x000008(%esp)

	_017a8b_jump:
		call   _041d08_func
		test   %ax,%ax
		jne    _017adb_jump
		call   _041c98_func
		test   %ax,%ax
		jne    _017adb_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _017adb_jump
		call   _041de8_func
		test   %ax,%ax
		jne    _017adb_jump
		call   _041e58_func
		test   %ax,%ax
		jne    _017adb_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _017adb_jump
		call   _041f70_func
		test   %ax,%ax
		jne    _017adb_jump
		call   _041ffc_func
		test   %ax,%ax
		je     _017ae3_jump

	_017adb_jump:
		xor    %edi,%edi
		mov    %edi,_0cc988_data

	_017ae3_jump:
		mov    _0cc988_data,%eax
		inc    %eax
		mov    %eax,_0cc988_data
		cmp    $0x005460,%eax
		jl     _017afc_jump
		movb   $0x000001,_0cf441_data

	_017afc_jump:
		cmpb   $0x000000,_0cf441_data
		je     _017b2d_jump
		mov    _095e1c_data,%ch
		test   %ch,%ch
		jne    _017b2d_jump
		cmpb   $0x000041,_0cf478_data
		jne    _017b27_jump
		xor    %ebx,%ebx
		call   _038880_func
		mov    %ebx,_0cc988_data
		jmp    _017b2d_jump

	_017b27_jump:
		mov    %ch,_0cf441_data

	_017b2d_jump:
		mov    0x000004(%esp),%eax
		call   _036f40_func
		cmpb   $0x000000,_0cf43f_data
		je     _017758_jump
		cmpb   $0x000000,_0cf442_data
		je     _017758_jump
		cmpb   $0x000000,0x00000c(%esp)
		je     _017758_jump
		mov    %ebp,%ebx
		call   _016eb0_func
		test   %ecx,%ecx
		jne    _017758_jump
		call   _0175cc_func
		mov    _0ce098_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _017b83_jump
		incw   _0ce09a_data

	_017b83_jump:
		cmpb   $0x000000,_0cf442_data
		je     _017758_jump
		call   _016ded_func
		jmp    _017758_jump

	_017b9a_jump:
		xor    %cl,%cl
		mov    %cl,_0cf48a_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_017bac_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,(%esp)
		mov    $_0cc98c_data,%edi
		mov    $_0c0430_data,%esi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x000001,%eax
		jle    _017cc3_jump
		mov    $0x000001,%ecx
		mov    %ecx,0x000004(%esp)
		cmp    %ecx,%eax
		jle    _017cc3_jump
		lea    0x000004(%edx),%ebp

	_017be1_jump:
		mov    $0x000004,%ebx
		mov    0x000000(%ebp),%eax
		mov    $_0c0434_data,%edx
		call   _07f466_func
		call   _07f48b_func
		test   %eax,%eax
		jne    _017c8f_jump
		mov    $0x00003d,%dl
		mov    0x000000(%ebp),%esi

	_017c05_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _017c1d_jump
		cmp    $0x000000,%al
		je     _017c1b_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _017c1d_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _017c05_jump

	_017c1b_jump:
		sub    %esi,%esi

	_017c1d_jump:
		test   %esi,%esi
		jne    _017c2b_jump
		mov    $_0c043c_data,%eax
		call   _01f474_func

	_017c2b_jump:
		mov    $0x00003d,%dl
		mov    0x000000(%ebp),%esi
		mov    $_0cc98c_data,%edi

	_017c35_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _017c4d_jump
		cmp    $0x000000,%al
		je     _017c4b_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _017c4d_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _017c35_jump

	_017c4b_jump:
		sub    %esi,%esi

	_017c4d_jump:
		inc    %esi
		push   %edi

	_017c4f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _017c67_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _017c4f_jump

	_017c67_jump:
		pop    %edi
		mov    $_0c0470_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_017c76_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _017c8e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _017c76_jump

	_017c8e_jump:
		pop    %edi

	_017c8f_jump:
		mov    0x000000(%ebp),%eax
		mov    $_0c0474_data,%edx
		call   _07f466_func
		call   _07f4c0_func
		test   %eax,%eax
		jne    _017cac_jump
		movb   $0x000046,_095e24_data

	_017cac_jump:
		mov    0x000004(%esp),%edi
		mov    (%esp),%edx
		inc    %edi
		add    $0x000004,%ebp
		mov    %edi,0x000004(%esp)
		cmp    %edx,%edi
		jl     _017be1_jump

	_017cc3_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_017ccc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		call   _07ec30_func
		mov    $0x3eb00000,%ecx
		mov    %eax,%esi
		xor    %ebx,%ebx
		call   _07f56f_func
		call   _07f75f_func
		push   %edx
		push   %eax
		push   $_0c047c_data
		call   _07f8fc_func
		mov    _0cf418_data,%al
		add    $0x00000c,%esp
		cmp    $0x000003,%al
		jb     _017d37_jump
		jbe    _017d0a_jump
		cmp    $0x000004,%al
		je     _017d30_jump
		jmp    _017d37_jump

	_017d0a_jump:
		push   $_0c04a0_data
		call   _07f8fc_func
		add    $0x000004,%esp
		push   $_0c04bc_data
		call   _07f8fc_func
		add    $0x000004,%esp
		mov    $0xffffffff,%eax
		call   _07f91f_func
		jmp    _017d6f_jump

	_017d30_jump:
		push   $_0c04dc_data
		jmp    _017d67_jump

	_017d37_jump:
		mov    _0cf418_data,%ah
		cmp    $0x000005,%ah
		jne    _017d49_jump
		push   $_0c04f8_data
		jmp    _017d67_jump

	_017d49_jump:
		jbe    _017d62_jump
		xor    %eax,%eax
		mov    _0cf418_data,%al
		push   %eax
		push   $_0c0518_data
		call   _07f8fc_func
		add    $0x000008,%esp
		jmp    _017d6f_jump

	_017d62_jump:
		push   $_0c053c_data

	_017d67_jump:
		call   _07f8fc_func
		add    $0x000004,%esp

	_017d6f_jump:
		mov    _0cf40a_data,%al
		cmp    $0x000081,%al
		jb     _017d87_jump
		jbe    _017da3_jump
		cmp    $0x000082,%al
		jbe    _017db2_jump
		cmp    $0x000083,%al
		je     _017dd0_jump
		jmp    _017e09_jump

	_017d87_jump:
		test   %al,%al
		jbe    _017d94_jump
		cmp    $0x000001,%al
		je     _017dc1_jump
		jmp    _017e09_jump

	_017d94_jump:
		push   $_0c055c_data
		call   _07f8fc_func
		add    $0x000004,%esp
		jmp    _017e09_jump

	_017da3_jump:
		push   $_0c0574_data
		call   _07f8fc_func
		add    $0x000004,%esp
		jmp    _017e09_jump

	_017db2_jump:
		push   $_0c0594_data
		call   _07f8fc_func
		add    $0x000004,%esp
		jmp    _017e09_jump

	_017dc1_jump:
		push   $_0c05b8_data
		call   _07f8fc_func
		add    $0x000004,%esp
		jmp    _017e09_jump

	_017dd0_jump:
		mov    _0cf408_data,%dh
		cmp    $0x000004,%dh
		jne    _017def_jump
		xor    %eax,%eax
		mov    _0cf407_data,%al
		push   %eax
		xor    %eax,%eax
		mov    %dh,%al
		push   %eax
		push   $_0c05d8_data
		jmp    _017e01_jump

	_017def_jump:
		xor    %eax,%eax
		mov    _0cf407_data,%al
		push   %eax
		xor    %eax,%eax
		mov    %dh,%al
		push   %eax
		push   $_0c05f0_data

	_017e01_jump:
		call   _07f8fc_func
		add    $0x00000c,%esp

	_017e09_jump:
		xor    %bl,%bl
		mov    %bl,_0cf40b_data
		cmp    $0x200000,%esi
		jae    _017e28_jump
		mov    $_0c060c_data,%eax
		call   _01f474_func
		jmp    _017ef5_jump

	_017e28_jump:
		cmp    $0x400000,%esi
		jae    _017e98_jump
		mov    $0x000002,%ah
		mov    $0x017400,%ebp
		mov    $0x062c00,%edx
		mov    %bl,_0cf426_data
		xor    %ch,%ch
		mov    $0x000001,%bl
		mov    %ch,_0cf411_data
		mov    %ah,_0cf412_data
		mov    %ebp,_0cd260_data
		mov    %edx,_0cd298_data
		mov    $_04d800_jump,%eax
		mov    $0x0d0c00,%ecx
		mov    %bl,_0cf424_data
		mov    %bl,_0cf410_data
		mov    %bl,_0cf40c_data
		mov    %bl,_0cf40b_data
		mov    $0x05e000,%ebx
		mov    %eax,_0cd294_data
		mov    %ecx,_0cd290_data
		mov    %ebx,_0cd28c_data
		jmp    _017ef5_jump

	_017e98_jump:
		mov    $0x000001,%bh
		mov    $0x022000,%edx
		mov    $0x0f4c00,%ecx
		mov    $0x087c00,%esi
		mov    $0x0df400,%edi
		mov    %bh,_0cf426_data
		mov    %bh,_0cf424_data
		mov    %bh,_0cf410_data
		mov    %bl,_0cf40c_data
		mov    %bh,_0cf411_data
		mov    %bh,_0cf412_data
		mov    %edx,_0cd260_data
		mov    %ecx,_0cd298_data
		mov    %esi,_0cd28c_data
		mov    $_04d800_jump,%ebx
		mov    %edi,_0cd290_data
		mov    %ebx,_0cd294_data

	_017ef5_jump:
		push   $_0c0620_data
		call   _07f8fc_func
		mov    _0cf426_data,%dl
		add    $0x000004,%esp
		test   %dl,%dl
		je     _017f13_jump
		push   $_0c0624_data
		jmp    _017f18_jump

	_017f13_jump:
		push   $_0c0644_data

	_017f18_jump:
		call   _07f8fc_func
		add    $0x000004,%esp
		cmpb   $0x000000,_0cf424_data
		je     _017f30_jump
		push   $_0c065c_data
		jmp    _017f35_jump

	_017f30_jump:
		push   $_0c0674_data

	_017f35_jump:
		call   _07f8fc_func
		add    $0x000004,%esp
		cmpb   $0x000000,_0cf410_data
		je     _017f5d_jump
		cmpb   $0x000000,_0cf444_data
		je     _017f56_jump
		push   $_0c0688_data
		jmp    _017f72_jump

	_017f56_jump:
		push   $_0c06a0_data
		jmp    _017f72_jump

	_017f5d_jump:
		cmpb   $0x000000,_0cf444_data
		je     _017f6d_jump
		push   $_0c06bc_data
		jmp    _017f72_jump

	_017f6d_jump:
		push   $_0c06d8_data

	_017f72_jump:
		call   _07f8fc_func
		add    $0x000004,%esp
		cmpb   $0x000000,_0cf412_data
		je     _017f92_jump
		push   $_0c06f0_data
		call   _07f8fc_func
		add    $0x000004,%esp
		jmp    _017f9f_jump

	_017f92_jump:
		push   $_0c0708_data
		call   _07f8fc_func
		add    $0x000004,%esp

	_017f9f_jump:
		push   $_0c0620_data
		call   _07f8fc_func
		add    $0x000004,%esp
		push   $_0cc98c_data
		push   $_0c0718_data
		xor    %edx,%edx
		call   _07f8fc_func
		add    $0x000008,%esp
		mov    $0x000064,%esi

	_017fc5_jump:
		mov    $0x000001,%eax
		call   _041c64_func
		test   %al,%al
		je     _017ff1_jump

	_017fd3_jump:
		call   _0426c0_func
		push   $_0c0620_data
		call   _07f8fc_func
		add    $0x000004,%esp
		call   _018000_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_017ff1_jump:
		mov    %esi,%eax
		inc    %edx
		call   _07f94e_func
		cmp    $0x000028,%edx
		jl     _017fc5_jump
		jmp    _017fd3_jump



_018000_func:
		push   %edx
		mov    $0x000300,%edx
		mov    $0x000010,%eax
		call   _07f43c_func
		mov    %eax,_0cd224_data
		test   %eax,%eax
		jne    _018023_jump
		mov    $_0c0728_data,%eax
		call   _01f474_func

	_018023_jump:
		mov    $0x000008,%edx
		mov    $0x000200,%eax
		call   _07f43c_func
		mov    %eax,_0cd2b4_data
		test   %eax,%eax
		jne    _018045_jump
		mov    $_0c0748_data,%eax
		call   _01f474_func

	_018045_jump:
		mov    _0cf426_data,%ah
		test   %ah,%ah
		sete   %al
		mov    %al,_095de5_data
		pop    %edx
		ret    



_018058_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		call   _03d8fc_func
		mov    $0x0b8000,%edx
		push   $_0c079c_data
		mov    $_0c0768_data,%ebx
		mov    $_0c0778_data,%ebp
		call   _07f8fc_func
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)
		add    $0x000004,%esp

	_01808a_jump:
		add    $0x000002,%edx
		movb   $0x00001e,-0x000001(%edx)
		cmp    $0x0b80a0,%edx
		jne    _01808a_jump
		mov    (%esp),%esi
		mov    0x000004(%esp),%ebx
		xor    %edx,%edx
		jmp    _0180ae_jump

	_0180a4_jump:
		add    $0x000002,%esi
		mov    (%ebx),%cl
		inc    %ebx
		inc    %edx
		mov    %cl,-0x000002(%esi)

	_0180ae_jump:
		mov    0x000004(%esp),%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmp    %ecx,%edx
		jb     _0180a4_jump
		mov    (%esp),%edx
		mov    %ebp,%esi
		xor    %ebx,%ebx
		jmp    _0180dc_jump

	_0180c9_jump:
		mov    (%esi),%cl
		mov    0x00005f(%edx),%ah
		add    $0x000002,%edx
		inc    %esi
		or     $0x000080,%ah
		mov    %cl,0x00005c(%edx)
		inc    %ebx
		mov    %ah,0x00005d(%edx)

	_0180dc_jump:
		mov    %ebp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmp    %ecx,%ebx
		jb     _0180c9_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0180f8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%ebx
		mov    $_0c07a0_data,%eax
		mov    $_0cf407_data,%edx
		call   _07f953_func
		call   _018058_func
		mov    $_0cf408_data,%eax
		call   _07eb00_func
		mov    %al,_0cf40a_data
		mov    $0x000001,%ah
		mov    %ebx,%edx
		mov    %ah,_095e6e_data
		mov    %ah,_0cf444_data
		call   _06ae60_func
		pushf  
		pop    %eax
		and    $0xfffefeff,%eax
		push   %eax
		popf   
		xor    %eax,%eax
		mov    %eax,%db0
		mov    %eax,%db1
		mov    %eax,%db2
		mov    %eax,%db3
		mov    %db6,%eax
		and    $0xffff1ff0,%eax
		mov    %eax,%db6
		mov    %db7,%eax
		and    $0x00de00,%eax
		mov    %eax,%db7
		mov    %ecx,%eax
		mov    $_0cf2ee_data,%edi
		call   _017bac_func
		mov    (%ebx),%esi
		mov    $0x00006e,%ecx
		push   %edi

	_018179_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _018191_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _018179_jump

	_018191_jump:
		pop    %edi
		mov    $0x000064,%eax
		mov    $_06b610_func,%esi
		jmp    _0181a3_jump

	_0181a1_jump:
		nop
		inc    %esi

	_0181a3_jump:
		cmpb   $0x000000,(%esi)
		jne    _0181a1_jump
		cmpb   $0x000000,0x000001(%esi)
		jne    _0181a1_jump
		cmpb   $0x000000,0x000002(%esi)
		jne    _0181a1_jump
		cmpb   $0x0000ed,0x000003(%esi)
		jne    _0181a1_jump
		cmpb   $0x0000f8,0x000004(%esi)
		jne    _0181a1_jump
		cmpb   $0x0000b8,0x000005(%esi)
		jne    _0181a1_jump

	_0181de_jump:
		mov    (%esi),%dl
		mov    0x000001(%esi),%dh
		xor    %dl,%dh
		sub    %dh,%al
		inc    %esi
		loop   _0181de_jump
		cmp    $0x000000,%eax
		je     _0181f9_jump
		mov    $0x004c00,%ax
		int    $0x000021

	_0181f9_jump:
		mov    %edi,%eax
		call   _06b868_func
		call   _01820c_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01820c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %ah,%ah
		mov    %ah,(%esp)
		call   _016074_func
		mov    %al,_0cf418_data
		call   _06af00_func
		call   _06af1c_func
		jmp    _018236_jump

	_018236_jump:
		mov    $0x00046c,%eax
		mov    %eax,%db0
		mov    %db7,%eax
		or     $0x030003,%eax
		mov    %eax,%db7
		sti    
		mov    $0x00046c,%esi
		mov    (%esi),%ah

	_018251_jump:
		mov    (%esi),%al
		cmp    %al,%ah
		je     _018251_jump
		sti    
		mov    $0x00046c,%esi
		mov    (%esi),%ah

	_01825f_jump:
		mov    (%esi),%al
		cmp    %al,%ah
		je     _01825f_jump
		mov    $0x000000,%eax
		mov    %eax,%db0
		mov    %db7,%eax
		and    $0x00de00,%eax
		mov    %eax,%db7
		jmp    _018280_jump

	_018280_jump:
		call   _06ae68_func
		mov    $0x000001,%eax
		call   _06b908_func
		push   $_0c07b0_data
		call   _07f8fc_func
		add    $0x000004,%esp
		mov    $0x000001,%dl
		call   _072c38_func
		mov    %dl,_0cf440_data
		call   _0426d8_func
		mov    $_03754c_func,%eax
		call   _07f9ab_func
		mov    _0cf444_data,%al
		mov    %al,_095e6e_data
		call   _06b040_func
		call   _06af40_func
		call   _06b134_func
		test   %al,%al
		je     _0182df_jump
		mov    _095e6e_data,%al
		mov    %al,_0cf444_data

	_0182df_jump:
		call   _017ccc_func
		call   _06ae68_func
		nop
		nop
		nop
		nop
		nop
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _01614e_func
		call   _059970_func
		call   _03630c_func
		call   _0713e4_func
		call   _035e28_func
		call   _0370b0_func
		call   _048ab8_func
		call   _0375a4_func
		mov    $0x000003,%dh
		call   _036230_func
		mov    %dh,_0cf435_data
		nop
		nop
		nop
		nop
		nop
		cmpb   $0x000000,_0cf444_data
		je     _018344_jump
		call   _01cc5c_func

	_018344_jump:
		mov    $0x0000c8,%ebp
		mov    $0x000001,%edi

	_01834e_jump:
		cmpb   $0x000000,_0cf46b_data
		jne    _018640_jump
		call   _036fb4_jump
		call   _067d80_func
		call   _05bdb0_func
		call   _048ff8_func
		cmpb   $0x000000,_0cf46b_data
		jne    _0183a4_jump
		cmpb   $0x000000,_0cf425_data
		jne    _0183a4_jump
		cmpb   $0x000046,_095e24_data
		je     _0183a4_jump
		mov    _0cf428_data,%al
		xor    %ebx,%ebx
		add    $0x000014,%al
		mov    $_0c07cc_data,%edx
		mov    %al,%bl
		mov    $_0cc98c_data,%eax
		call   _03b3b0_func

	_0183a4_jump:
		cmpb   $0x000000,_0cf46d_data
		jne    _018624_jump
		cmpw   $0x000000,_0ce94a_data
		jl     _018624_jump
		cmpw   $0x000000,_0cf288_data
		je     _018624_jump
		mov    $0x000001,%eax
		mov    $0x000140,%ebx
		call   _06b908_func
		call   _06a8bc_func
		call   _0160e8_func
		call   _035244_func
		mov    %ebp,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _01614e_func
		call   _036970_func
		cmpb   $0x000000,_0cf410_data
		je     _01841a_jump
		cmpb   $0x000000,_0cf40c_data
		jne    _01841a_jump
		mov    _0cf230_data,%eax
		sar    $0x000010,%eax
		call   _03e920_func

	_01841a_jump:
		cmpb   $0x000000,_0cf46d_data
		jne    _0185f8_jump
		cmpw   $0x000000,_0cf288_data
		jne    _0185f8_jump
		cmpw   $0x000000,_0cf272_data
		je     _0185f8_jump
		mov    $0x000005,%eax
		call   _03da44_func
		call   _016ecb_func
		call   _036ae4_func
		mov    %esp,%eax
		call   _0363c4_func
		mov    _0cf270_data,%eax
		sar    $0x000010,%eax
		call   _059ab0_func
		call   _03927c_func
		call   _07b8cc_func
		call   _03cea4_func
		cmpb   $0x000000,_0cf41c_data
		je     _018492_jump
		mov    $_0c7638_data,%edx
		mov    $0x000002,%eax
		call   _03c5f0_func

	_018492_jump:
		cmpb   $0x000000,_0cf46d_data
		jne    _0185e9_jump
		cmpw   $0x000000,_0cf272_data
		jne    _0185e9_jump
		cmpw   $0x000000,_0cf288_data
		jne    _0185e9_jump
		mov    $0x00000f,%eax
		call   _03da44_func
		call   _059d94_func
		call   _059ddc_func
		call   _035e5c_func
		call   _048e8c_func
		mov    _095de5_data,%bl
		mov    %al,_095e26_data
		test   %bl,%bl
		jne    _01852a_jump
		call   _048db0_func
		xor    %eax,%eax
		mov    _0cf43c_data,%al
		call   _03d90c_func
		xor    %eax,%eax
		mov    _095e24_data,%al
		xor    %esi,%esi
		call   _048cc8_func
		call   _05c820_func
		mov    %esp,%eax
		mov    %si,_095e6c_data
		call   _017048_func
		movw   $0x000001,_095e6c_data
		call   _05c890_func
		jmp    _018593_jump

	_01852a_jump:
		call   _0160e8_func
		xor    %eax,%eax
		mov    _0cf43c_data,%al
		call   _03d7e0_func
		xor    %eax,%eax
		mov    _095e24_data,%al
		call   _048cc8_func
		mov    _0cf2ae_data,%edx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03b754_func
		mov    _0cd1d0_data,%edx
		mov    _0cd1bc_data,%ebx
		mov    _0cd1dc_data,%esi
		shr    $0x000002,%edx
		mov    $0x000001,%ecx
		call   _01268a_func
		xor    %ebx,%ebx
		mov    %esp,%eax
		mov    %bx,_095e6c_data
		call   _017704_func
		mov    %cx,_095e6c_data

	_018593_jump:
		cmpb   $0x000000,_0cf410_data
		je     _0185a1_jump
		call   _0714c0_func

	_0185a1_jump:
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %ebp,%edx
		mov    _0cf43c_data,%al
		xor    %ecx,%ecx
		call   _03d90c_func
		xor    %eax,%eax
		call   _01614e_func
		call   _035e5c_func
		cmpb   $0x000000,_095e68_data
		jne    _0185d7_jump
		call   _0342e0_func
		call   _03595c_func
		jmp    _0185dc_jump

	_0185d7_jump:
		call   _069754_func

	_0185dc_jump:
		xor    %ch,%ch
		mov    %ch,_095e68_data
		jmp    _018492_jump

	_0185e9_jump:
		call   _059ca0_func
		call   _037020_func
		jmp    _01841a_jump

	_0185f8_jump:
		cmpb   $0x000000,_0cf444_data
		je     _018606_jump
		call   _01cc5c_func

	_018606_jump:
		call   _036fdc_func
		cmpb   $0x000000,_0cf425_data
		je     _0183a4_jump
		movb   $0x000001,_0cf46d_data
		jmp    _0183a4_jump

	_018624_jump:
		call   _036fb8_func
		cmpb   $0x000000,_0cf425_data
		je     _01834e_jump
		call   _035c64_func
		jmp    _01834e_jump

	_018640_jump:
		call   _023570_func
		cmpb   $0x000000,_0cf410_data
		je     _018658_jump
		call   _0714c0_func
		call   _03eb98_func

	_018658_jump:
		call   _037024_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018670_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%esi
		mov    %dl,0x000018(%esp)
		mov    %bl,0x000014(%esp)
		mov    %cl,0x000010(%esp)
		mov    _0cf250_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _01882f_jump
		mov    _0cf23a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _01882f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    _0cdfb8_data,%ebx
		movsbl (%eax,%edx,8),%edx
		mov    _0cdfb0_data,%eax
		add    %ebx,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x00000e,%edx
		sbb    %edx,%eax
		sar    $0x00000e,%eax
		mov    _0cf252_data,%di
		sub    0x000028(%esi),%di
		shl    $0x000004,%edi
		mov    0x00002c(%esi),%cx
		mov    %di,0x000008(%esp)
		mov    _0cf23c_data,%di
		sub    %ecx,%edi
		mov    %eax,%edx
		mov    0x000008(%esp),%eax
		shl    $0x000004,%edi
		test   %ax,%ax
		jne    _018716_jump
		test   %di,%di
		je     _01882f_jump

	_018716_jump:
		test   %edx,%edx
		je     _01882f_jump
		movswl %di,%ebp
		mov    %ebp,%eax
		test   %eax,%eax
		jge    _018729_jump
		neg    %eax

	_018729_jump:
		mov    %eax,%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _018738_jump
		neg    %eax

	_018738_jump:
		cmp    %ebx,%eax
		jge    _01873e_jump
		mov    %ebx,%eax

	_01873e_jump:
		mov    %eax,(%esp)
		mov    -0x000002(%esp),%eax
		mov    %edx,%ebx
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		cmp    %ebx,%eax
		jle    _018752_jump
		mov    %ebx,%eax

	_018752_jump:
		mov    %eax,0x000004(%esp)
		mov    (%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		mov    0x000004(%esp),%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    0x000008(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000004,%cl
		mov    %ax,0x00000c(%esp)
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _01883b_jump
		xor    %eax,%eax
		mov    $_0000ff_case,%ebx
		mov    0x000014(%esp),%al
		mov    0x00003e(%esi),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax
		imul   %eax,%edx
		xor    %ebx,%ebx
		mov    0x00000a(%esp),%eax
		mov    0x000014(%esp),%bl
		sar    $0x000010,%eax
		imul   %ebx,%eax
		add    %eax,%edx
		mov    $_0000ff_case,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x00006d(%esi),%dh
		mov    %ax,0x000040(%esi)
		cmp    $0x000002,%dh
		jne    _0187ef_jump
		cmp    0x000004(%esp),%ebp
		jg     _0187ef_jump
		movb   $_0000ff_case,0x000010(%esp)

	_0187ef_jump:
		xor    %eax,%eax
		mov    $_0000ff_case,%ebx
		mov    0x000010(%esp),%al
		mov    0x000040(%esi),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax
		mov    %edx,%ebx
		imul   %eax,%ebx
		xor    %eax,%eax
		movswl %di,%edx
		mov    0x000010(%esp),%al
		imul   %eax,%edx
		add    %ebx,%edx
		mov    $_0000ff_case,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_01882f_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_01883b_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_018844_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0cf250_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		cmp    $0xffff8300,%ebx
		jne    _018877_jump
		mov    _0cf23a_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffff8300,%ebx
		jne    _018877_jump
		cmpw   $0x000000,0x000048(%edx)
		jne    _01889c_jump
		jmp    _018897_jump

	_018877_jump:
		mov    _0cf250_data,%ebx
		mov    0x000028(%edx),%ecx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jne    _01889c_jump
		mov    _0cf23a_data,%ebx
		mov    0x00002c(%edx),%esi
		sar    $0x000010,%ebx
		cmp    %esi,%ebx
		jne    _01889c_jump

	_018897_jump:
		mov    $0x000001,%eax

	_01889c_jump:
		test   %ax,%ax
		je     _0188a8_jump
		movb   $0x000001,_0cf45e_data

	_0188a8_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0188b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ebx,%ebx
		mov    0x00002c(%eax),%cx
		mov    0x000069(%eax),%bl
		movzbw 0x000068(%eax),%si
		add    %ecx,%ebx
		mov    0x000028(%eax),%dx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%esi

	_0188d0_jump:
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e1b4_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_0924f4_data(%edx)
		jne    _01890d_jump
		mov    _0cf276_data,%edx
		sar    $0x000010,%edx
		movswl %bx,%ecx
		add    $0x0000c8,%edx
		cmp    %edx,%ecx
		jg     _01890d_jump
		add    $0x000010,%ebx
		movswl %bx,%eax
		sar    $0x000004,%eax
		jmp    _0188d0_jump

	_01890d_jump:
		and    $0x0000f0,%bl
		and    $0x00000f,%esi
		mov    %ebx,%ecx
		movswl %si,%edx
		and    $_0000ff_case,%eax
		xor    %ebx,%ebx
		call   _024c1c_func
		add    %ecx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01892c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf286_data,%dx
		mov    _0cf262_data,%bx
		mov    _0cf260_data,%cx
		mov    _0cf278_data,%di
		cmpb   $0x000000,_095de5_data
		jne    _0189b6_jump
		mov    _0cca4c_data,%eax
		neg    %eax
		movswl %cx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jge    _018973_jump
		mov    _0cca4c_data,%cx
		neg    %ecx
		add    $0x000008,%ecx

	_018973_jump:
		movswl %dx,%eax
		movswl %cx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jle    _018985_jump
		mov    %edx,%ecx
		add    $0x000008,%ecx

	_018985_jump:
		mov    _0cca4c_data,%eax
		neg    %eax
		movswl %bx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jge    _0189a2_jump
		mov    _0cca4c_data,%bx
		neg    %ebx
		add    $0x000008,%ebx

	_0189a2_jump:
		movswl %dx,%eax
		movswl %bx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jle    _0189d2_jump
		mov    %edx,%ebx
		add    $0x000008,%ebx
		jmp    _0189d2_jump

	_0189b6_jump:
		test   %cx,%cx
		jge    _0189bd_jump
		xor    %ecx,%ecx

	_0189bd_jump:
		cmp    %dx,%cx
		jle    _0189c4_jump
		mov    %edx,%ecx

	_0189c4_jump:
		test   %bx,%bx
		jge    _0189cb_jump
		xor    %ebx,%ebx

	_0189cb_jump:
		cmp    %dx,%bx
		jle    _0189d2_jump
		mov    %edx,%ebx

	_0189d2_jump:
		mov    _0cf25c_data,%eax
		mov    _0cca54_data,%esi
		sar    $0x000010,%eax
		neg    %esi
		cmp    %esi,%eax
		jge    _0189fd_jump
		mov    _0cca54_data,%ax
		mov    %eax,%esi
		mov    %ax,_0cf25e_data
		neg    %esi
		mov    %si,_0cf25e_data

	_0189fd_jump:
		mov    _0cf25e_data,%ax
		cmp    %di,%ax
		jle    _018a0f_jump
		mov    %di,_0cf25e_data

	_018a0f_jump:
		mov    _0cf262_data,%esi
		mov    _0cca54_data,%eax
		sar    $0x000010,%esi
		neg    %eax
		cmp    %eax,%esi
		jge    _018a37_jump
		mov    _0cca54_data,%ax
		mov    %ax,_0cf264_data
		neg    %eax
		mov    %ax,_0cf264_data

	_018a37_jump:
		mov    _0cf264_data,%ax
		cmp    %di,%ax
		jle    _018a49_jump
		mov    %di,_0cf264_data

	_018a49_jump:
		mov    %di,_0cf278_data
		mov    %cx,_0cf260_data
		mov    %bx,_0cf262_data
		mov    %dx,_0cf286_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018a6c_func:
		push   %edx
		mov    _0cf25a_data,%dx
		mov    %dx,_0cf260_data
		mov    _0cf268_data,%dx
		mov    %dx,_0cf262_data
		call   _0188b0_func
		mov    _0cca50_data,%dx
		sub    _0cca54_data,%dx
		mov    %ax,_0cf212_data
		sub    %edx,%eax
		sub    $0x000010,%eax
		mov    %ax,_0cf25e_data
		mov    _0cf278_data,%ax
		mov    %ax,_0cf264_data
		call   _01892c_func
		pop    %edx
		ret    



_018ac0_func:
		adc    $0x15181716,%eax
		sbb    %edx,(%esi)
		adc    $0x56525153,%eax
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ebp
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ebp),%eax
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		and    $0x00003f,%dh
		mov    %dx,0x000010(%esp)
		mov    0x00000e(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x00006b(%ebp),%dl
		imul   %ebx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    %eax,(%esp)
		xor    %edx,%edx
		mov    _0cd154_data,%eax
		mov    %edx,0x000014(%esp)
		mov    %eax,0x00000c(%esp)
		jmp    _018c6f_jump

	_018b26_jump:
		mov    (%esp),%edx
		xor    %eax,%eax
		mov    0x000038(%ebp),%bx
		mov    0x000002(%edx),%al
		add    %ebx,%eax
		movswl %ax,%edx
		mov    0x000058(%ebp),%eax
		sar    $0x000010,%eax
		call   _01d240_func
		mov    (%esp),%edx
		mov    %eax,%esi
		xor    %ah,%ah
		mov    0x000003(%edx),%al
		test   %ax,%ax
		je     _018c5d_jump
		and    $0x00ffff,%eax
		imul   $0x00000c,%eax,%eax
		mov    0x000000(%ebp),%ebx
		add    %eax,%ebx
		cmpb   $0x000000,0x000004(%ebx)
		je     _018c5d_jump
		testb  $0x000008,0x000081(%ebp)
		jne    _018b85_jump
		mov    (%esp),%edx
		xor    %eax,%eax
		mov    0x000036(%ebp),%cx
		mov    0x000001(%edx),%al
		add    %ecx,%eax
		jmp    _018bcd_jump

	_018b85_jump:
		cmpw   $0x000100,0x00005a(%ebp)
		jne    _018ba9_jump
		cmpw   $0x000005,0x000014(%esp)
		jne    _018ba9_jump
		mov    0x00006a(%ebp),%dh
		cmp    $0x000010,%dh
		ja     _018ba9_jump
		cmp    $0x00000e,%dh
		jb     _018ba9_jump
		mov    $0xfffffff0,%eax
		jmp    _018bab_jump

	_018ba9_jump:
		xor    %eax,%eax

	_018bab_jump:
		mov    (%esp),%edi
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x000068(%ebp),%dl
		mov    0x000001(%edi),%cl
		add    %edx,%edx
		sub    %ecx,%edx
		mov    %edx,%ecx
		xor    %edx,%edx
		mov    0x000005(%ebx),%dl
		sub    %edx,%ecx
		mov    0x000036(%ebp),%dx
		add    %ecx,%eax
		add    %edx,%eax

	_018bcd_jump:
		mov    0x000081(%ebp),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    (%esp),%edi
		xor    %ecx,%ecx
		and    $_0000ff_case,%edx
		mov    (%edi),%cl
		xor    %ecx,%edx
		jne    _018bf2_jump
		mov    _0cca9c_data,%edx
		jmp    _018bf8_jump

	_018bf2_jump:
		mov    _0ccab0_data,%edx

	_018bf8_jump:
		mov    %edx,0x000004(%esp)
		movswl %ax,%edx
		mov    0x000058(%ebp),%eax
		sar    $0x000010,%eax
		call   _01d204_func
		cwtl   
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000058(%ebp),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		movswl %si,%edi
		call   _01d19c_func
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		shl    $0x000008,%ecx
		call   _01d19c_func
		mov    0x000008(%ebp),%esi
		mov    (%ebx),%edx
		add    %ecx,%eax
		xor    %ecx,%ecx
		add    %edx,%esi
		mov    %ax,%cx
		mov    0x00000a(%ebx),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %edi,%ebx
		mov    0x00000c(%esp),%edi
		mov    %al,%dl
		mov    0x000008(%esp),%eax
		call   *0x000004(%esp)

	_018c5d_jump:
		mov    0x000014(%esp),%esi
		mov    (%esp),%ebx
		inc    %esi
		add    $0x000004,%ebx
		mov    %esi,0x000014(%esp)
		mov    %ebx,(%esp)

	_018c6f_jump:
		xor    %edx,%edx
		mov    0x00000e(%esp),%eax
		mov    0x000014(%esp),%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _018b26_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_018c8e_jump:
		ret    



_018c90_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		and    $_0000ff_case,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x00000b(%ebx),%al
		shl    $0x000005,%al
		shr    $0x000007,%al
		xor    %edx,%edx
		and    $_0000ff_case,%eax
		mov    0x00001c(%esp),%dl
		xor    %edx,%eax
		je     _018ccf_jump
		mov    _0cca9c_data,%eax
		jmp    _018cd4_jump

	_018ccf_jump:
		mov    _0ccab0_data,%eax

	_018cd4_jump:
		mov    %eax,(%esp)
		mov    0x000058(%esi),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d240_func
		movswl %ax,%ecx
		mov    0x000058(%esi),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		call   _01d204_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%esi),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d19c_func
		shl    $0x000008,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000058(%esi),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d19c_func
		add    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    _0cd154_data,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000008(%esi),%eax
		mov    (%ebx),%esi
		add    %eax,%esi
		mov    0x00000a(%ebx),%al
		shr    $0x000004,%al
		mov    %ecx,%ebx
		movzbl %al,%ebp
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %ebp,%edx
		mov    0x000004(%esp),%edi
		call   *(%esp)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_018d5c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		and    $_0000ff_case,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x00000b(%ebx),%al
		shl    $0x000005,%al
		shr    $0x000007,%al
		xor    %edx,%edx
		and    $_0000ff_case,%eax
		mov    0x00001c(%esp),%dl
		xor    %edx,%eax
		je     _018d9b_jump
		mov    _0cca88_data,%eax
		jmp    _018da0_jump

	_018d9b_jump:
		mov    _0ccaa4_data,%eax

	_018da0_jump:
		mov    %eax,(%esp)
		mov    0x000058(%esi),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d240_func
		movswl %ax,%ecx
		mov    0x000058(%esi),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		call   _01d204_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%esi),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d19c_func
		shl    $0x000008,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000058(%esi),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d19c_func
		add    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    _0cd154_data,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000008(%esi),%eax
		mov    (%ebx),%esi
		add    %eax,%esi
		mov    0x00000a(%ebx),%al
		shr    $0x000004,%al
		mov    %ecx,%ebx
		movzbl %al,%ebp
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %ebp,%edx
		mov    0x000004(%esp),%edi
		call   *(%esp)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_018e28_func:
		cmpb   $0x000000,_0ce172_data
		je     _018c8e_jump
		mov    _0ce0d0_data,%eax
		jmp    _018ac8_func



_018e40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    _0cf220_data,%eax
		mov    $0x000001,%edx
		sar    $0x000010,%eax
		mov    %dx,_0cf226_data
		cmp    $0xffffffff,%eax
		je     _018ed3_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %esi,%eax
		mov    _0cc7a0_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    0x00007f(%esi),%ah
		test   %ah,%ah
		jne    _018ed3_jump
		mov    $0x00003d,%edx
		mov    0x000068(%esi),%al
		lea    0x000004(%esp),%ecx
		sub    %eax,%edx
		mov    0x000074(%esi),%al
		mov    %dx,0x000036(%esi)
		mov    $0x000005,%edx
		lea    0x000008(%esp),%ebx
		sub    %eax,%edx
		lea    0x00000c(%esp),%eax
		mov    %dx,0x000038(%esi)
		mov    %esp,%edx
		call   _016111_func
		mov    $0x000064,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %edx,%ebx
		call   _01614e_func
		mov    %esi,%eax
		call   _018ac8_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _01614e_func

	_018ed3_jump:
		mov    _0cf238_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _018f57_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmpb   $0x000000,0x00007f(%esi)
		jne    _018f57_jump
		xor    %eax,%eax
		mov    $0x000042,%edx
		mov    0x000068(%esi),%al
		lea    0x000004(%esp),%ecx
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000036(%esi)
		mov    $0x00000e,%edx
		mov    0x000074(%esi),%al
		lea    0x000008(%esp),%ebx
		sub    %eax,%edx
		lea    0x00000c(%esp),%eax
		mov    %dx,0x000038(%esi)
		mov    %esp,%edx
		call   _016111_func
		mov    $0x000064,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %edx,%ebx
		call   _01614e_func
		mov    %esi,%eax
		call   _018ac8_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _01614e_func

	_018f57_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018f60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		cmpb   $0x000000,_095de5_data
		jne    _018f80_jump
		mov    $0x000004,%ebx
		xor    %esi,%esi
		mov    %ebx,0x000004(%esp)
		jmp    _018f9a_jump

	_018f80_jump:
		movl   $0x000008,0x000004(%esp)
		cmpb   $0x000001,_0cf40b_data
		jne    _018f98_jump
		mov    $0x000008,%esi
		jmp    _018f9a_jump

	_018f98_jump:
		xor    %esi,%esi

	_018f9a_jump:
		cmpb   $0x000000,_0cf45a_data
		je     _019154_jump
		mov    0x000076(%edi),%bl
		test   %bl,%bl
		je     _019154_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000077(%edi),%al
		mov    %bl,%dl
		mov    %eax,%ebx
		sub    %edx,%ebx
		imul   $0x000006,%ebx,%edx
		mov    $0x00001d,%ebx
		sub    %eax,%ebx
		imul   $0x000006,%ebx,%eax
		mov    %eax,(%esp)
		mov    _0cca50_data,%ax
		sub    $0x000013,%eax
		sub    %esi,%eax
		movswl %ax,%ecx
		mov    _0cca4c_data,%ax
		mov    0x000004(%esp),%ebx
		sub    $0x000004,%eax
		add    %ebx,%eax
		add    $0x000014,%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		push   $0x000001
		sub    %edx,%eax
		mov    $0x00003d,%edx
		movswl %ax,%ebx
		mov    _0ce0d0_data,%eax
		call   _018c90_func
		mov    _0cca50_data,%ax
		sub    $0x000014,%eax
		sub    %esi,%eax
		movswl %ax,%ecx
		mov    _0cca4c_data,%ax
		mov    0x000004(%esp),%ebx
		sub    $0x000004,%eax
		add    %ebx,%eax
		mov    (%esp),%edx
		add    $0x000015,%eax
		push   $0x000001
		sub    %edx,%eax
		mov    $0x00003c,%edx
		movswl %ax,%ebx
		mov    _0ce0d0_data,%eax
		call   _018c90_func
		mov    0x000060(%edi),%ax
		cmp    $0x0000bb,%ax
		jb     _0190b3_jump
		jbe    _0190fa_jump
		cmp    $0x0000da,%ax
		jb     _01908d_jump
		jbe    _019108_jump
		cmp    $0x0000e3,%ax
		jb     _01907e_jump
		jbe    _0190e5_jump
		cmp    $0x0000e7,%ax
		je     _019108_jump
		jmp    _019114_jump

	_01907e_jump:
		cmp    $0x0000df,%ax
		je     _019108_jump
		jmp    _019114_jump

	_01908d_jump:
		cmp    $0x0000d4,%ax
		jb     _0190a8_jump
		jbe    _019108_jump
		cmp    $0x0000d5,%ax
		je     _0190f3_jump
		jmp    _019114_jump

	_0190a8_jump:
		cmp    $0x0000c6,%ax
		je     _0190ec_jump
		jmp    _019114_jump

	_0190b3_jump:
		cmp    $0x00004a,%ax
		jb     _0190d7_jump
		jbe    _01910f_jump
		cmp    $0x000096,%ax
		jb     _0190cf_jump
		jbe    _019101_jump
		cmp    $0x0000b4,%ax
		je     _01910f_jump
		jmp    _019114_jump

	_0190cf_jump:
		cmp    $0x000062,%ax
		je     _0190f3_jump
		jmp    _019114_jump

	_0190d7_jump:
		cmp    $0x00002e,%ax
		jb     _019114_jump
		jbe    _0190ec_jump
		cmp    $0x000032,%ax
		jne    _019114_jump

	_0190e5_jump:
		movb   $0x00002c,0x000008(%esp)
		jmp    _019114_jump

	_0190ec_jump:
		movb   $0x00006c,0x000008(%esp)
		jmp    _019114_jump

	_0190f3_jump:
		movb   $0x00006e,0x000008(%esp)
		jmp    _019114_jump

	_0190fa_jump:
		movb   $0x000071,0x000008(%esp)
		jmp    _019114_jump

	_019101_jump:
		movb   $0x00006d,0x000008(%esp)
		jmp    _019114_jump

	_019108_jump:
		movb   $0x000070,0x000008(%esp)
		jmp    _019114_jump

	_01910f_jump:
		movb   $0x00006f,0x000008(%esp)

	_019114_jump:
		mov    _0cca50_data,%ax
		sub    $0x00001e,%eax
		sub    %esi,%eax
		mov    0x000004(%esp),%ebx
		movswl %ax,%ecx
		mov    _0cca4c_data,%ax
		push   $0x000001
		add    %ebx,%eax
		xor    %edx,%edx
		sub    $0x000004,%eax
		mov    0x00000c(%esp),%dl
		movswl %ax,%ebx
		mov    _0ce0d0_data,%eax
		call   _01f4b4_func
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0ce0d0_data,%eax
		call   _018c90_func

	_019154_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019160_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    $_0c07d8_data,%eax
		xor    %ecx,%ecx
		call   _01a168_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    $_0c07ec_data,%eax
		call   _01a168_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01919c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edi
		cmpw   $0x000005,_0cf254_data
		jne    _0191dd_jump
		mov    _0cf20a_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _0195d4_jump
		mov    %ecx,%esi
		shl    $0x000005,%esi
		add    %ecx,%esi
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%esi
		add    %esi,%eax
		call   _0286cc_func
		jmp    _0195d4_jump

	_0191dd_jump:
		call   _040284_func
		cmpb   $0x000040,_0cf471_data
		je     _0191fe_jump
		cmpw   $0x000000,_095e20_data
		jne    _0191fe_jump
		movw   $0x00012c,_095e20_data

	_0191fe_jump:
		mov    _095e20_data,%si
		test   %si,%si
		jle    _019288_jump
		cmp    $0x000001,%si
		jne    _019281_jump
		cmpb   $0x000000,_095de5_data
		jne    _019281_jump
		mov    _0cd158_data,%eax
		mov    _0cca46_data,%ecx
		mov    _0cca4a_data,%ebx
		mov    _0cca4e_data,%edx
		mov    %eax,_0cd154_data
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _0cca52_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024b3c_func
		mov    _0ccae4_data,%eax
		mov    _0cca46_data,%ecx
		mov    _0cca4a_data,%ebx
		mov    _0cca4e_data,%edx
		mov    %eax,_0cd154_data
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _0cca52_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024b3c_func

	_019281_jump:
		decw   _095e20_data

	_019288_jump:
		cmpw   $0x000000,_095e1e_data
		jne    _0192a4_jump
		cmpw   $0x000000,_095e20_data
		jne    _0192a4_jump
		test   %edi,%edi
		jne    _0195d4_jump

	_0192a4_jump:
		mov    $0x000023,%esi
		mov    _095de5_data,%dh
		mov    $0x00004d,%eax
		test   %dh,%dh
		jne    _0193f1_jump
		cmpl   $0x000010,_0cca4c_data
		jg     _0192d2_jump
		cmpl   $0x000005,_0cca54_data
		jle    _0193f1_jump

	_0192d2_jump:
		cmpw   $0x000000,_0cf226_data
		je     _0192ef_jump
		mov    $0x000055,%eax
		xor    %ebx,%ebx
		mov    $0x00002d,%esi
		mov    %bx,_0cf226_data

	_0192ef_jump:
		mov    _0cca54_data,%edx
		movswl %si,%ecx
		sub    $0x000005,%edx
		cmp    %ecx,%edx
		jge    _01934b_jump
		push   $0x000000
		mov    _0cca52_data,%ecx
		movswl %ax,%ebx
		xor    %edx,%edx
		push   $_0000ff_case
		mov    $0x00000d,%eax
		sar    $0x000010,%ecx
		add    $0x000005,%esi
		call   _019f3c_func
		push   $0x000000
		mov    _0cca54_data,%cx
		mov    _0cca4c_data,%ax
		mov    _0cca52_data,%edx
		push   $_0000ff_case
		sub    $0x00000f,%eax
		sub    %ecx,%esi
		sar    $0x000010,%edx
		movswl %si,%ecx
		movswl %ax,%ebx
		jmp    _019357_jump

	_01934b_jump:
		push   $0x000000
		movswl %ax,%ebx
		push   $_0000ff_case
		xor    %edx,%edx

	_019357_jump:
		mov    $0x00000d,%eax
		call   _019f3c_func
		mov    _0cca54_data,%eax
		sub    $0x000005,%eax
		cmp    $0x000017,%eax
		jge    _0193d1_jump
		push   $0x000000
		mov    $0x000044,%ebx
		mov    _0cca54_data,%ax
		mov    $0x000004,%edx
		sub    $0x000004,%eax
		push   $_0000ff_case
		movswl %ax,%ecx
		mov    $0x0000f1,%eax
		call   _019f3c_func
		mov    $0x00001c,%eax
		mov    _0cca54_data,%si
		push   $0x000000
		sub    %esi,%eax
		mov    _0cca48_data,%dx
		movswl %ax,%ecx
		mov    $0x000138,%eax
		push   $_0000ff_case
		sub    %edx,%eax
		mov    _0cca52_data,%edx
		movswl %ax,%ebx
		mov    _0cca46_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		jmp    _0193ec_jump

	_0193d1_jump:
		push   $0x000000
		mov    $0x000017,%ecx
		mov    $0x000044,%ebx
		push   $_0000ff_case
		mov    $0x000004,%edx
		mov    $0x0000f1,%eax

	_0193ec_jump:
		call   _019f3c_func

	_0193f1_jump:
		mov    _0cf298_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		cmp    $0xfffffffe,%edi
		jne    _019531_jump
		mov    _095de5_data,%bl
		cmp    $0x000001,%bl
		jne    _01942d_jump
		cmp    _0cf40b_data,%bl
		jne    _01942d_jump
		mov    $0x000010,%eax
		jmp    _01942f_jump

	_01942d_jump:
		xor    %eax,%eax

	_01942f_jump:
		push   $0x000001
		mov    %eax,0x000004(%esp)
		add    $0x000005,%eax
		mov    $0x000010,%ebx
		movswl %ax,%edi
		mov    $0x00001b,%edx
		mov    %edi,%ecx
		mov    %esi,%eax
		call   _018d5c_func
		push   $0x000001
		mov    $0x0000f4,%ebx
		mov    $0x000038,%edx
		mov    %edi,%ecx
		mov    %esi,%eax
		call   _018d5c_func
		push   $0x000001
		mov    $0x000037,%ebx
		mov    _0ce94c_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d5c_func
		push   $0x000001
		mov    $0x000046,%ebx
		mov    _0ce94d_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d5c_func
		cmpb   $_0000ff_case,_0ce0ba_data
		je     _0194f7_jump
		cmpb   $0x000000,_0cf46d_data
		jne    _0194f7_jump
		mov    (%esp),%eax
		push   $0x000001
		add    $0x00001b,%eax
		mov    $0x000023,%ebx
		movswl %ax,%edi
		mov    _0ce94f_data,%al
		xor    %edx,%edx
		add    $0x000011,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d5c_func
		cmpb   $0x000004,_0ce953_data
		jne    _0194f7_jump
		push   $0x000001
		mov    $0x00003b,%ebx
		mov    _0ce94e_data,%al
		xor    %edx,%edx
		add    $0x000014,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d5c_func

	_0194f7_jump:
		mov    (%esp),%eax
		push   $0x000001
		add    $0x000005,%eax
		mov    $0x000114,%ebx
		movswl %ax,%edi
		mov    _0ce951_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d5c_func
		push   $0x000001
		mov    $0x000122,%ebx
		mov    _0ce952_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		jmp    _0195ac_jump

	_019531_jump:
		mov    _0cca50_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0cca4c_data,%ax
		push   $0x000001
		add    $0x00000e,%eax
		mov    $0x000038,%edx
		movswl %ax,%ebx
		mov    %esi,%eax
		call   _018d5c_func
		mov    _0cca50_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0cca4c_data,%ax
		add    $0x00002e,%eax
		movswl %ax,%ebx
		mov    _0ce951_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d5c_func
		mov    _0cca50_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0cca4c_data,%ax
		add    $0x00003c,%eax
		movswl %ax,%ebx
		mov    _0ce952_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001

	_0195ac_jump:
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d5c_func
		mov    _0cf220_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0195cf_jump
		mov    _0cf238_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0195d4_jump

	_0195cf_jump:
		call   _018e40_func

	_0195d4_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0195e0_func:
		push   %ebx
		push   %edi
		mov    _0cd1e0_data,%edi
		movswl %dx,%ebx
		cwtl   
		sub    $0x000002,%ebx
		call   _014a20_func
		pop    %edi
		pop    %ebx
		ret    



_019640_func:
		push   %esi
		mov    0x000006(%esp),%esi
		sar    $0x000010,%esi
		push   %esi
		movswl %cx,%ecx
		push   $0x000007
		add    $0x000008,%ebx
		add    $0x000008,%eax
		push   %ecx
		movswl %bx,%ecx
		movswl %dx,%ebx
		movswl %ax,%edx
		mov    $_0195e0_func,%eax
		call   _01f00c_func
		pop    %esi
		ret    $0x000004



_019670_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%ebp),%edx
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		xor    %ecx,%ecx
		and    $0x00003f,%dh
		mov    %dx,%cx
		xor    %edx,%edx
		mov    0x00006b(%ebp),%dl
		imul   %ecx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    %eax,0x000004(%esp)
		test   %bl,%bl
		jne    _0196c5_jump
		mov    $0x000005,%ebx
		mov    $0x000003,%eax
		mov    %ebx,0x000010(%esp)
		jmp    _0196d0_jump

	_0196c5_jump:
		mov    $0x000002,%edx
		xor    %eax,%eax
		mov    %edx,0x000010(%esp)

	_0196d0_jump:
		mov    0x000010(%esp),%ecx
		mov    %eax,0x00000c(%esp)
		cmp    %cx,%ax
		ja     _0197a0_jump

	_0196e1_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%ax
		mov    0x000004(%esp),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %ecx,%ecx
		mov    0x000002(%eax),%cl
		add    0x000038(%ebp),%cx
		xor    %edx,%edx
		mov    0x000003(%eax),%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000000(%ebp),%ebx
		add    %edx,%ebx
		cmpb   $0x000000,0x000004(%ebx)
		je     _01978a_jump
		mov    0x000001(%eax),%al
		mov    0x000036(%ebp),%si
		xor    %ah,%ah
		add    %eax,%esi
		mov    0x000058(%ebp),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d240_func
		movswl %ax,%ecx
		mov    0x000058(%ebp),%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		call   _01d204_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d19c_func
		mov    %eax,%esi
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		shl    $0x000008,%esi
		call   _01d19c_func
		add    %esi,%eax
		and    $0x00ffff,%eax
		mov    (%ebx),%esi
		mov    %eax,0x000008(%esp)
		add    0x000008(%ebp),%esi
		mov    0x00000a(%ebx),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %ecx,%ebx
		mov    0x000008(%esp),%ecx
		mov    %al,%dl
		mov    %edi,%eax
		mov    (%esp),%edi
		call   *_0cca9c_data

	_01978a_jump:
		mov    0x00000c(%esp),%esi
		inc    %esi
		mov    0x000010(%esp),%edi
		mov    %esi,0x00000c(%esp)
		cmp    %di,%si
		jbe    _0196e1_jump

	_0197a0_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0197a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		movl   $0x000007,0x000010(%esp)
		mov    $0x001000,%ebp

	_0197be_jump:
		mov    _0ce952_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%esi
		add    %eax,%esi
		mov    _0cea1c_data,%ax
		xor    %edi,%edi
		test   %ax,%ax
		jle    _019947_jump

	_0197e5_jump:
		cmpw   $0x000001,0x000010(%esp)
		jne    _019804_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000080,_092534_data(,%eax,4)
		je     _019804_jump
		mov    %esi,%eax
		call   _018f60_func

	_019804_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%ebx
		mov    0x00007e(%esi),%al
		cmp    %bx,%ax
		jne    _01991c_jump
		cmpw   $0x00009d,0x000060(%esi)
		jne    _019844_jump
		cmpw   $0x000005,_0cf282_data
		jne    _019844_jump
		cmpw   $0x000008,_0cf270_data
		jne    _019844_jump
		cmpl   $0x00012c,0x000028(%esi)
		jl     _01991c_jump
		jmp    _019915_jump

	_019844_jump:
		mov    0x000060(%esi),%bx
		cmp    $0x000051,%bx
		jne    _019865_jump
		mov    $0x000001,%ebx
		mov    _0cd154_data,%edx
		mov    %esi,%eax
		call   _019670_func
		jmp    _01991c_jump

	_019865_jump:
		cmp    $0x0000fe,%bx
		jne    _0198ba_jump
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _019878_jump
		neg    %eax

	_019878_jump:
		mov    _094a32_data(,%eax,2),%edx
		mov    0x000073(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		shl    $0x000009,%edx
		cmp    $0x000000,%eax
		je     _019899_jump
		mov    $0x000001,%eax
		jg     _019899_jump
		neg    %eax

	_019899_jump:
		neg    %eax
		imul   %eax,%edx
		mov    $0x000168,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ebp,%ecx
		movswl %ax,%edx
		mov    %ebp,%ebx
		mov    %esi,%eax
		call   _01b804_func
		jmp    _01991c_jump

	_0198ba_jump:
		cmp    $0x0000fc,%bx
		je     _0198cf_jump
		cmp    $0x0000fb,%bx
		je     _0198cf_jump
		cmp    $0x0000ad,%bx
		jne    _019915_jump

	_0198cf_jump:
		mov    %esp,%edx
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		lea    0x000004(%esp),%eax
		call   _016111_func
		mov    $0x0000a0,%edx
		mov    0x00000c(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x000004(%esp),%eax
		call   _01614e_func
		mov    %esi,%eax
		call   _018ac8_func
		mov    (%esp),%edx
		mov    0x00000c(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x000004(%esp),%eax
		call   _01614e_func
		jmp    _01991c_jump

	_019915_jump:
		mov    %esi,%eax
		call   _018ac8_func

	_01991c_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0ce952_data(,%eax,2),%esi
		sar    $0x000010,%esi
		imul   $0x000084,%esi,%esi
		mov    _0cc7a0_data,%eax
		mov    _0cea1c_data,%cx
		add    %eax,%esi
		cmp    %cx,%di
		jl     _0197e5_jump

	_019947_jump:
		mov    0x000010(%esp),%esi
		cmp    $0x000003,%si
		jne    _0199c7_jump
		cmpb   $0x000000,_0cf453_data
		jne    _0199a0_jump
		mov    _0cf1da_data,%ebx
		mov    _0ce098_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		lea    0x000000(,%ebx,2),%ecx
		mov    %edx,%eax
		add    $0x000002,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		cmp    %ebx,%edx
		jle    _0199a0_jump
		cmpw   $0x00005a,_0ce09a_data
		jle    _019a15_jump
		testb  $0x000080,_0cf221_data
		jne    _019a15_jump

	_0199a0_jump:
		testb  $0x000004,_0ce0c5_data
		je     _019a15_jump
		cmpl   $0x000000,_0ce068_data
		je     _019a15_jump
		mov    $_0ce044_data,%eax
		call   _018ac8_func
		call   _018e28_func
		jmp    _019a15_jump

	_0199c7_jump:
		cmp    $0x000002,%si
		jne    _019a15_jump
		cmpb   $0x000000,_0cf46c_data
		je     _019a15_jump
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    _019a09_jump

	_0199dc_jump:
		movswl %cx,%eax
		mov    _0cdfce_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%edx
		mov    _0cc7a0_data,%eax
		add    %edx,%eax
		cmp    0x000024(%eax),%esi
		je     _019a08_jump
		mov    _0cd154_data,%edx
		mov    %esi,%ebx
		call   _019670_func

	_019a08_jump:
		inc    %ecx

	_019a09_jump:
		xor    %eax,%eax
		mov    _0cf46c_data,%al
		cmp    %ax,%cx
		jl     _0199dc_jump

	_019a15_jump:
		mov    0x000010(%esp),%ebx
		dec    %ebx
		mov    %ebx,0x000010(%esp)
		cmp    $0x000001,%bx
		jge    _0197be_jump
		mov    _0ce952_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cea1c_data,%si
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		xor    %edi,%edi
		add    %edx,%eax
		test   %si,%si
		jle    _019a8a_jump

	_019a50_jump:
		cmpb   $0x000000,0x00007e(%eax)
		jne    _019a65_jump
		cmpw   $0x0000f5,0x000060(%eax)
		jne    _019a65_jump
		call   _018ac8_func
		jmp    _019a8a_jump

	_019a65_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0ce952_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%edx
		add    %edx,%eax
		cmp    _0cea1c_data,%di
		jl     _019a50_jump

	_019a8a_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_019a94_switch:
		.long   _019bbf_case
		.long   _019bb7_case
		.long   _019baf_case
		.long   _019ba7_case




_019aa4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000028,%esp
		mov    $0x0000aa,%edx
		mov    $0x000003,%ebx
		mov    $0x000020,%ecx
		mov    _0cf230_data,%ax
		mov    $0x000004,%esi
		mov    %eax,0x00000c(%esp)
		mov    _0cf22e_data,%ax
		mov    %bx,0x000014(%esp)
		mov    %eax,0x000010(%esp)
		mov    $0x0000a0,%eax
		mov    %cx,0x000004(%esp)
		call   _01d18c_func
		mov    $0x000006,%edx
		mov    %esi,0x000008(%esp)
		mov    %edx,0x000018(%esp)

	_019af5_jump:
		mov    0x000002(%esp),%ebx
		mov    $0x010000,%eax
		sar    $0x000010,%ebx
		mov    %eax,%edx
		add    $0x000100,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000024(%esp)
		mov    0x000022(%esp),%eax
		mov    _0cf22e_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    %eax,%ebx
		imul   %edx,%ebx
		sar    $0x000008,%ebx
		sub    %ebx,%edx
		mov    %dx,0x000020(%esp)
		mov    _0cf22c_data,%edx
		sar    $0x000010,%edx
		imul   %edx,%eax
		mov    0x000008(%esp),%ecx
		mov    0x000018(%esp),%esi
		mov    _0cf282_data,%di
		dec    %ecx
		dec    %esi
		sar    $0x000008,%eax
		mov    0x000012(%esp),%ebx
		sub    %eax,%edx
		sar    $0x000010,%ebx
		mov    %dx,0x00001c(%esp)
		mov    _0ca8c6_data(,%ebx,2),%edx
		mov    %esi,0x000018(%esp)
		sar    $0x000010,%edx
		mov    _0cd2b4_data,%eax
		shl    $0x000003,%edx
		mov    _0ca908_data(,%ebx,2),%si
		add    %eax,%edx
		mov    _0ca8c8_data(,%ebx,2),%ax
		mov    %ecx,0x000008(%esp)
		add    %eax,%esi
		cmp    $0x000001,%di
		je     _019bcf_jump
		cmp    $0x000003,%cx
		ja     _019bc7_jump
		xor    %ebx,%ebx
		mov    %cx,%bx
		jmp    *%cs:_019a94_switch(,%ebx,4)

	_019ba7_case:
		mov    _0ccacc_data,%ebx
		jmp    _019bf5_jump

	_019baf_case:
		mov    _0ccad0_data,%ebx
		jmp    _019bf5_jump

	_019bb7_case:
		mov    _0cca98_data,%ebx
		jmp    _019bf5_jump

	_019bbf_case:
		mov    _0ccaa0_data,%ebx
		jmp    _019bf5_jump

	_019bc7_jump:
		mov    _0cca94_data,%ebx
		jmp    _019bf5_jump

	_019bcf_jump:
		mov    0x000018(%esp),%ebx
		cmp    $0x000005,%bx
		jne    _019be1_jump
		mov    _0ccad4_data,%ebx
		jmp    _019bf5_jump

	_019be1_jump:
		cmp    $0x000002,%bx
		jle    _019bef_jump
		mov    _0ccac8_data,%ebx
		jmp    _019bf5_jump

	_019bef_jump:
		mov    _0ccac4_data,%ebx

	_019bf5_jump:
		mov    %ebx,(%esp)
		mov    %eax,%ecx
		cmp    %si,%ax
		jge    _019c3e_jump

	_019bff_jump:
		mov    (%edx),%ebx
		mov    0x000022(%esp),%edi
		sar    $0x000010,%ebx
		sar    $0x000010,%edi
		imul   %edi,%ebx
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000008,%ebx
		add    %eax,%ebx
		movswl (%edx),%eax
		imul   %eax,%edi
		mov    0x00001e(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    $0x000008,%edx
		add    %edi,%eax
		mov    _0cd154_data,%edi
		inc    %ecx
		call   *(%esp)
		cmp    %si,%cx
		jl     _019bff_jump

	_019c3e_jump:
		mov    0x000014(%esp),%edi
		mov    0x000004(%esp),%eax
		inc    %edi
		add    $0x000020,%eax
		mov    %di,0x000014(%esp)
		mov    %ax,0x000004(%esp)
		cmp    $0x0000c0,%ax
		jl     _019af5_jump
		mov    0x00000c(%esp),%eax
		mov    %ax,_0cf230_data
		mov    0x000010(%esp),%eax
		mov    %ax,_0cf22e_data
		add    $0x000028,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019c80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    _0cf230_data,%ax
		mov    %eax,0x00001c(%esp)
		mov    _0cf22e_data,%ax
		mov    $0x0000aa,%edx
		mov    %eax,0x000020(%esp)
		mov    $0x0000a0,%eax
		mov    $0xffffffc0,%ebx
		call   _01d18c_func
		xor    %edx,%edx
		mov    %bx,0x000008(%esp)
		mov    %dx,(%esp)
		mov    $0x010000,%ebp

	_019cc1_jump:
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		mov    _0ca8c6_data(,%ebx,2),%eax
		sar    $0x000010,%eax
		mov    _0cd2b4_data,%ecx
		shl    $0x000003,%eax
		add    %eax,%ecx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    %ebp,%edx
		lea    0x000100(%eax),%edi
		sar    $0x00001f,%edx
		mov    %ebp,%eax
		idiv   %edi
		mov    %eax,%esi
		movswl %ax,%edi
		mov    _0cf22e_data,%eax
		mov    %edi,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		sar    $0x000008,%edx
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    _0cf22c_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%edi
		sar    $0x000008,%edi
		sub    %edi,%eax
		mov    _0ca908_data(,%ebx,2),%dx
		mov    %ax,0x000010(%esp)
		mov    _0ca8c8_data(,%ebx,2),%ax
		mov    _0cf282_data,%bx
		add    %eax,%edx
		cmp    $0x000001,%bx
		je     _019dfc_jump
		cmpw   $0x000000,(%esp)
		jne    _019da7_jump
		mov    %eax,0x000018(%esp)
		cmp    %dx,%ax
		jge    _019e4b_jump

	_019d5b_jump:
		mov    (%ecx),%ebx
		movswl %si,%eax
		sar    $0x000010,%ebx
		imul   %eax,%ebx
		mov    0x00000e(%esp),%edi
		sar    $0x000010,%edi
		sar    $0x000008,%ebx
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %eax,%edi
		mov    0x00000a(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0cd154_data,%edi
		call   *_0ccaa8_data
		mov    0x000018(%esp),%ebx
		inc    %ebx
		add    $0x000008,%ecx
		mov    %ebx,0x000018(%esp)
		cmp    %bx,%dx
		jle    _019e4b_jump
		jmp    _019d5b_jump

	_019da7_jump:
		mov    %eax,0x000014(%esp)
		cmp    %dx,%ax
		jge    _019e4b_jump

	_019db4_jump:
		mov    (%ecx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %edi,%eax
		mov    0x00000a(%esp),%edi
		sar    $0x000008,%eax
		sar    $0x000010,%edi
		add    %edi,%eax
		mov    _0cd154_data,%edi
		call   *_0ccaac_data
		mov    0x000014(%esp),%edi
		inc    %edi
		add    $0x000008,%ecx
		mov    %edi,0x000014(%esp)
		cmp    %di,%dx
		jle    _019e4b_jump
		jmp    _019db4_jump

	_019dfc_jump:
		mov    %eax,0x000004(%esp)
		cmp    %dx,%ax
		jge    _019e4b_jump

	_019e05_jump:
		mov    (%ecx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %eax,%edi
		mov    0x00000a(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0cd154_data,%edi
		call   *_0ccac0_data
		mov    0x000004(%esp),%eax
		inc    %eax
		add    $0x000008,%ecx
		mov    %eax,0x000004(%esp)
		cmp    %ax,%dx
		jg     _019e05_jump

	_019e4b_jump:
		mov    (%esp),%ecx
		mov    0x000008(%esp),%esi
		inc    %ecx
		add    $0x000020,%esi
		mov    %cx,(%esp)
		mov    %si,0x000008(%esp)
		cmp    $0x000020,%si
		jl     _019cc1_jump
		mov    0x00001c(%esp),%eax
		mov    %ax,_0cf230_data
		mov    0x000020(%esp),%eax
		mov    %ax,_0cf22e_data
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019e88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    %dx,(%esp)

	_019e96_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000282,%edx,%edx
		cmpw   $0x000000,_0c96a0_data(%edx)
		je     _019f20_jump
		add    $_0c9420_data,%edx
		xor    %ecx,%ecx

	_019eb9_jump:
		mov    0x000009(%edx),%bl
		cmp    $0x000080,%bl
		jb     _019f16_jump
		mov    (%edx),%esi
		mov    _0cca30_data,%eax
		sar    $0x000010,%esi
		shl    $0x000006,%eax
		cmp    %eax,%esi
		jle    _019f16_jump
		xor    %eax,%eax
		mov    0x000006(%edx),%al
		test   %eax,%eax
		jge    _019edd_jump
		neg    %eax

	_019edd_jump:
		cmp    $0x000080,%ax
		jl     _019ee7_jump
		mov    $0x000058,%al
		jmp    _019ef9_jump

	_019ee7_jump:
		and    $0x00007f,%bl
		cwtl   
		and    $_0000ff_case,%ebx
		sar    $0x000005,%eax
		add    $0x000004,%ebx
		add    %ebx,%eax

	_019ef9_jump:
		mov    _0cd154_data,%edi
		mov    (%edx),%ebx
		movzbl %al,%esi
		sar    $0x000010,%ebx
		movswl (%edx),%eax
		sar    $0x000006,%ebx
		sar    $0x000006,%eax
		call   *_0cca90_data

	_019f16_jump:
		inc    %ecx
		add    $0x00000a,%edx
		cmp    $0x000040,%cx
		jl     _019eb9_jump

	_019f20_jump:
		mov    (%esp),%ebx
		inc    %ebx
		mov    %bx,(%esp)
		cmp    $0x000008,%bx
		jl     _019e96_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019f3c_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %ax,0x00000c(%esp)
		mov    %dx,(%esp)
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000008(%esp)
		test   %ax,%ax
		jge    _019f6b_jump
		mov    %ebx,%esi
		xor    %edi,%edi
		add    %eax,%esi
		mov    %di,0x00000c(%esp)
		mov    %si,0x000004(%esp)
		jmp    _019f78_jump

	_019f6b_jump:
		cmp    $0x000140,%ax
		jle    _019f78_jump
		movw   $0x000140,0x00000c(%esp)

	_019f78_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0x000140,%eax
		jle    _019f9f_jump
		mov    $0x000140,%eax
		mov    0x00000c(%esp),%edx
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)

	_019f9f_jump:
		mov    (%esp),%ebx
		test   %bx,%bx
		jge    _019fbc_jump
		mov    0x000008(%esp),%edi
		mov    %ebx,%eax
		add    %ebx,%edi
		xor    %ebx,%eax
		mov    %di,0x000008(%esp)
		mov    %ax,(%esp)
		jmp    _019fc9_jump

	_019fbc_jump:
		cmp    $0x0000c8,%bx
		jle    _019fc9_jump
		movw   $0x0000c8,(%esp)

	_019fc9_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0x0000c8,%eax
		jle    _019fef_jump
		mov    $0x0000c8,%eax
		mov    (%esp),%edx
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)

	_019fef_jump:
		cmpw   $0x000000,0x000004(%esp)
		jle    _01a15d_jump
		cmpw   $0x000000,0x000008(%esp)
		jle    _01a15d_jump
		cmpb   $_0000ff_case,0x00001c(%esp)
		jne    _01a0a0_jump
		cmpb   $0x000001,_095de4_data
		jne    _01a044_jump
		mov    0x000002(%esp),%ecx
		mov    0x000006(%esp),%ebx
		mov    -0x000002(%esp),%edx
		mov    0x00000a(%esp),%esi
		mov    _0cd154_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%esi
		call   _012fe6_func
		jmp    _01a0a0_jump

	_01a044_jump:
		mov    0x000020(%esp),%dh
		test   %dh,%dh
		je     _01a079_jump
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%esi
		xor    %eax,%eax
		mov    _0cd154_data,%edi
		mov    %dh,%al
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		call   _014a8b_func
		jmp    _01a0a0_jump

	_01a079_jump:
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    _0cd154_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _014a4e_func

	_01a0a0_jump:
		mov    0x000020(%esp),%bl
		cmp    $0x000001,%bl
		jne    _01a0f4_jump
		cmp    _095de4_data,%bl
		jne    _01a0dd_jump
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    _0cd154_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _0130ae_func
		jmp    _01a15d_jump

	_01a0dd_jump:
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%esi
		mov    $0x002026,%eax
		jmp    _01a146_jump

	_01a0f4_jump:
		cmp    $0x000002,%bl
		jne    _01a15d_jump
		cmpb   $0x000001,_095de4_data
		jne    _01a131_jump
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    _0cd154_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _0130ae_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_01a131_jump:
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%esi
		mov    $0x002620,%eax

	_01a146_jump:
		mov    _0cd154_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		call   _014b1a_func

	_01a15d_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01a168_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,(%esp)
		mov    %dx,0x00001c(%esp)
		mov    %cl,0x000024(%esp)
		cmp    $0x000002,%cl
		jne    _01a19e_jump
		mov    $0x00000f,%ecx
		mov    $0x000001,%esi
		mov    $0x000008,%edi
		mov    %ecx,0x000014(%esp)
		mov    %si,0x000010(%esp)
		mov    %di,0x000008(%esp)
		jmp    _01a1df_jump

	_01a19e_jump:
		cmp    $0x000001,%cl
		jne    _01a1c2_jump
		mov    $0x000017,%edi
		mov    $0x000003,%eax
		mov    $0x00000a,%edx
		mov    %edi,0x000014(%esp)
		mov    %ax,0x000010(%esp)
		mov    %dx,0x000008(%esp)
		jmp    _01a1df_jump

	_01a1c2_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%ecx
		mov    $0x00000c,%esi
		mov    %edx,0x000014(%esp)
		mov    %cx,0x000010(%esp)
		mov    %si,0x000008(%esp)

	_01a1df_jump:
		mov    0x00001c(%esp),%eax
		mov    %ax,0x000018(%esp)
		mov    (%esp),%eax
		mov    (%eax),%dh
		mov    %ebx,0x00000c(%esp)
		test   %dh,%dh
		je     _01a394_jump
		xor    %eax,%eax
		mov    %ax,0x000020(%esp)
		jmp    _01a37e_jump

	_01a205_jump:
		cmp    $0x00002f,%bl
		jne    _01a24f_jump
		mov    0x00000e(%esp),%ecx
		xor    %eax,%eax
		mov    0x000006(%esp),%ebx
		mov    0x000024(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    0x000004(%esp),%eax
		call   _01ecbc_func
		cwtl   
		mov    0x00001a(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000020(%esp),%ebx
		mov    %dx,0x000018(%esp)
		cmp    $0x000001,%bx
		jle    _01a24b_jump
		mov    0x000014(%esp),%eax
		add    %eax,0x00000c(%esp)

	_01a24b_jump:
		xor    %bl,%bl
		jmp    _01a275_jump

	_01a24f_jump:
		cmp    $0x000020,%bl
		jne    _01a267_jump
		mov    0x000008(%esp),%eax
		mov    0x000018(%esp),%edx
		add    %eax,%edx
		xor    %bl,%bl
		mov    %dx,0x000018(%esp)
		jmp    _01a275_jump

	_01a267_jump:
		mov    %bl,%al
		and    $_0000ff_case,%eax
		call   _01ebac_func
		mov    %al,%bl

	_01a275_jump:
		test   %bl,%bl
		je     _01a379_jump
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %bl,%cl
		mov    0x000024(%esp),%al
		mov    %ecx,%edx
		call   _01eae4_func
		mov    %eax,%edx
		mov    0x000024(%esp),%bh
		cmp    $0x000001,%bh
		jbe    _01a2a3_jump
		cmp    $0x000002,%bh
		je     _01a2fb_jump
		jmp    _01a34f_jump

	_01a2a3_jump:
		jne    _01a2a8_jump
		add    $0x000029,%bl

	_01a2a8_jump:
		xor    %eax,%eax
		mov    %bl,%al
		imul   $0x00000c,%eax,%eax
		mov    _0ce7c0_data,%ebp
		add    %eax,%ebp
		xor    %eax,%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000006(%ebp),%al
		sub    %eax,%ebx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000004(%esp)
		xor    %ah,%ah
		mov    _0cd154_data,%edi
		mov    0x000006(%ebp),%al
		xor    %ecx,%ecx
		shl    $0x000008,%eax
		mov    0x000000(%ebp),%esi
		add    %edx,%eax
		movswl %bx,%ebx
		mov    %ax,%cx
		xor    %edx,%edx
		mov    _0ce7c4_data,%eax
		mov    0x000038(%esp),%dl
		add    %eax,%esi
		mov    0x000004(%esp),%eax
		jmp    _01a349_jump

	_01a2fb_jump:
		imul   $0x00000c,%ecx,%ecx
		mov    _0ce0d4_data,%ebp
		add    %ecx,%ebp
		xor    %eax,%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		mov    0x000016(%esp),%edx
		sar    $0x000010,%edx
		mov    _0cd154_data,%edi
		mov    %edx,0x000004(%esp)
		xor    %dh,%dh
		mov    _0ce0d8_data,%esi
		mov    0x000006(%ebp),%dl
		xor    %ecx,%ecx
		shl    $0x000008,%edx
		movswl %bx,%ebx
		add    %edx,%eax
		mov    0x000000(%ebp),%edx
		mov    %ax,%cx
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x000004(%esp),%eax
		mov    0x000038(%esp),%dl

	_01a349_jump:
		call   *_0cca8c_data

	_01a34f_jump:
		mov    0x000009(%ebp),%al
		and    $0x00000f,%al
		xor    %edx,%edx
		and    $_0000ff_case,%eax
		mov    0x000007(%ebp),%dl
		add    %edx,%eax
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000018(%esp)

	_01a379_jump:
		incw   0x000020(%esp)

	_01a37e_jump:
		mov    0x00001e(%esp),%edx
		mov    (%esp),%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    (%eax),%bl
		test   %bl,%bl
		jne    _01a205_jump

	_01a394_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01a3a0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%ebp
		mov    %dx,0x000014(%esp)
		mov    %cl,0x00001c(%esp)
		xor    %ah,%ah
		mov    %ah,0x000018(%esp)
		cmp    $0x000002,%cl
		jne    _01a3da_jump
		mov    $0x00000f,%edi
		mov    $0x000001,%eax
		mov    $0x000008,%edx
		mov    %edi,0x000004(%esp)
		mov    %ax,(%esp)
		mov    %dx,0x00000c(%esp)
		jmp    _01a419_jump

	_01a3da_jump:
		cmp    $0x000001,%cl
		jne    _01a3fd_jump
		mov    $0x000017,%eax
		mov    $0x000003,%edx
		mov    $0x00000a,%ecx
		mov    %eax,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %cx,0x00000c(%esp)
		jmp    _01a419_jump

	_01a3fd_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%ecx
		mov    $0x00000c,%edi
		mov    %edx,0x000004(%esp)
		mov    %cx,(%esp)
		mov    %di,0x00000c(%esp)

	_01a419_jump:
		mov    %ebx,0x000010(%esp)
		mov    0x000000(%ebp),%bl
		mov    0x000014(%esp),%edi
		test   %bl,%bl
		je     _01a59c_jump
		xor    %ebx,%ebx
		mov    %bx,0x000008(%esp)
		jmp    _01a588_jump

	_01a438_jump:
		cmp    $0x00002f,%bh
		jne    _01a481_jump
		mov    -0x000002(%esp),%ecx
		xor    %eax,%eax
		mov    0x00000a(%esp),%ebx
		mov    0x00001c(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    %ebp,%eax
		call   _01ecbc_func
		cwtl   
		mov    0x000012(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000008(%esp),%eax
		mov    %edx,%edi
		cmp    $0x000001,%ax
		jle    _01a479_jump
		mov    0x000004(%esp),%eax
		add    %eax,0x000010(%esp)

	_01a479_jump:
		xor    %ah,%ah
		mov    %ah,0x000018(%esp)
		jmp    _01a4a4_jump

	_01a481_jump:
		cmp    $0x000020,%bh
		jne    _01a494_jump
		xor    %al,%al
		mov    0x00000c(%esp),%ecx
		mov    %al,0x000018(%esp)
		add    %ecx,%edi
		jmp    _01a4a4_jump

	_01a494_jump:
		mov    %bh,%al
		and    $_0000ff_case,%eax
		call   _01ebac_func
		mov    %al,0x000018(%esp)

	_01a4a4_jump:
		cmpb   $0x000000,0x000018(%esp)
		je     _01a583_jump
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00001c(%esp),%bl
		mov    0x000018(%esp),%dl
		mov    %ebx,%eax
		call   _01eae4_func
		lea    0x000018(%esp),%edx
		mov    %ebx,%eax
		call   _01ecb4_func
		cmp    $0x000001,%bl
		jbe    _01a4dc_jump
		cmp    $0x000002,%bl
		je     _01a51e_jump
		jmp    _01a565_jump

	_01a4dc_jump:
		movzbl 0x000018(%esp),%esi
		imul   $0x00000c,%esi,%esi
		mov    _0ce7c0_data,%eax
		add    %eax,%esi
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00001c(%esp),%edx
		mov    0x000006(%esi),%al
		sub    %eax,%edx
		movswl %di,%ebx
		movswl %dx,%ecx
		mov    %esi,%eax
		mov    _0ce7c4_data,%edx
		jmp    _01a560_jump

	_01a51e_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    _0ce0d4_data,%esi
		add    %eax,%esi
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00001c(%esp),%edx
		mov    0x000006(%esi),%al
		sub    %eax,%edx
		movswl %di,%ebx
		movswl %dx,%ecx
		mov    %esi,%eax
		mov    _0ce0d8_data,%edx

	_01a560_jump:
		call   _01bae8_func

	_01a565_jump:
		mov    0x000009(%esi),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		add    %edx,%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		movswl %di,%edi
		sub    %edx,%eax
		add    %eax,%edi

	_01a583_jump:
		incw   0x000008(%esp)

	_01a588_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		lea    (%edx,%ebp,1),%eax
		mov    (%eax),%bh
		test   %bh,%bh
		jne    _01a438_jump

	_01a59c_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000010



_01a5a8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,0x000004(%esp)
		mov    %dx,0x00000c(%esp)
		xor    %ah,%ah
		mov    0x00003c(%esp),%dl
		mov    %ah,0x000028(%esp)
		cmp    $0x000002,%dl
		jne    _01a5e5_jump
		mov    $0x00000f,%edi
		mov    $0x000001,%eax
		mov    $0x000008,%edx
		mov    %edi,0x000020(%esp)
		mov    %ax,0x000010(%esp)
		mov    %dx,0x000014(%esp)
		jmp    _01a626_jump

	_01a5e5_jump:
		cmp    $0x000001,%dl
		jne    _01a609_jump
		mov    $0x000017,%eax
		mov    $0x000003,%edx
		mov    $0x00000a,%esi
		mov    %eax,0x000020(%esp)
		mov    %dx,0x000010(%esp)
		mov    %si,0x000014(%esp)
		jmp    _01a626_jump

	_01a609_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%esi
		mov    $0x00000c,%edi
		mov    %edx,0x000020(%esp)
		mov    %si,0x000010(%esp)
		mov    %di,0x000014(%esp)

	_01a626_jump:
		mov    0x00000c(%esp),%eax
		mov    %ax,0x000008(%esp)
		mov    0x000004(%esp),%eax
		mov    %ebx,0x000024(%esp)
		cmpb   $0x000000,(%eax)
		je     _01a815_jump
		xor    %ebx,%ebx
		mov    %cx,0x000018(%esp)
		mov    %bx,0x00001c(%esp)
		jmp    _01a7fe_jump

	_01a651_jump:
		cmp    $0x00002f,%cl
		jne    _01a69f_jump
		mov    0x00000e(%esp),%ecx
		xor    %eax,%eax
		mov    0x000012(%esp),%ebx
		mov    0x00003c(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    0x000008(%esp),%eax
		call   _01ecbc_func
		cwtl   
		mov    0x00000a(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x00001c(%esp),%esi
		mov    %dx,0x000008(%esp)
		cmp    $0x000001,%si
		jle    _01a697_jump
		mov    0x000020(%esp),%eax
		add    %eax,0x000024(%esp)

	_01a697_jump:
		xor    %dl,%dl
		mov    %dl,0x000028(%esp)
		jmp    _01a6c8_jump

	_01a69f_jump:
		cmp    $0x000020,%cl
		jne    _01a6bb_jump
		mov    0x000014(%esp),%eax
		mov    0x000008(%esp),%ecx
		add    %eax,%ecx
		xor    %ah,%ah
		mov    %cx,0x000008(%esp)
		mov    %ah,0x000028(%esp)
		jmp    _01a6c8_jump

	_01a6bb_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _01ebac_func
		mov    %al,0x000028(%esp)

	_01a6c8_jump:
		cmpb   $0x000000,0x000028(%esp)
		je     _01a7e6_jump
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00003c(%esp),%bl
		mov    0x000028(%esp),%dl
		mov    %ebx,%eax
		call   _01eae4_func
		lea    0x000028(%esp),%edx
		mov    %eax,%esi
		mov    %ebx,%eax
		call   _01ecb4_func
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000005,%cl
		call   _05d230_func
		test   %ax,%ax
		js     _01a70b_jump
		sar    %cl,%ax
		jmp    _01a714_jump

	_01a70b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01a714_jump:
		cmp    $0x000001,%bl
		jbe    _01a723_jump
		cmp    $0x000002,%bl
		je     _01a764_jump
		jmp    _01a7bd_jump

	_01a723_jump:
		movzbl 0x000028(%esp),%ebp
		imul   $0x00000c,%ebp,%ebp
		mov    _0ce7c0_data,%edx
		add    %edx,%ebp
		xor    %edx,%edx
		mov    0x000024(%esp),%ebx
		mov    0x000006(%ebp),%dl
		mov    _0cd154_data,%edi
		sub    %edx,%ebx
		xor    %dh,%dh
		xor    %ecx,%ecx
		shl    $0x000008,%edx
		add    %ebx,%eax
		add    %esi,%edx
		movswl %ax,%ebx
		mov    %dx,%cx
		mov    0x000000(%ebp),%esi
		mov    _0ce7c4_data,%edx
		mov    0x000006(%esp),%eax
		jmp    _01a7ac_jump

	_01a764_jump:
		movzbl 0x000028(%esp),%ebp
		imul   $0x00000c,%ebp,%ebp
		mov    _0ce0d4_data,%edx
		add    %edx,%ebp
		xor    %edx,%edx
		mov    0x000024(%esp),%ebx
		mov    0x000006(%ebp),%dl
		mov    _0cd154_data,%edi
		sub    %edx,%ebx
		xor    %ecx,%ecx
		mov    %ebx,%edx
		add    %ebx,%eax
		xor    %bh,%dh
		cwtl   
		mov    0x000006(%ebp),%dl
		mov    %eax,(%esp)
		shl    $0x000008,%edx
		mov    0x000006(%esp),%eax
		add    %esi,%edx
		mov    _0ce0d8_data,%esi
		mov    %dx,%cx
		mov    0x000000(%ebp),%edx
		mov    (%esp),%ebx

	_01a7ac_jump:
		add    %edx,%esi
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000040(%esp),%dl
		call   *_0cca8c_data

	_01a7bd_jump:
		mov    0x000009(%ebp),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%ebp),%al
		add    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %dx,0x000008(%esp)

	_01a7e6_jump:
		mov    0x000018(%esp),%eax
		mov    0x00001c(%esp),%edx
		add    $0x000020,%eax
		inc    %edx
		mov    %ax,0x000018(%esp)
		mov    %dx,0x00001c(%esp)

	_01a7fe_jump:
		mov    0x00001a(%esp),%edx
		mov    0x000004(%esp),%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		mov    (%ebx),%cl
		test   %cl,%cl
		jne    _01a651_jump

	_01a815_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01a820_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    0x0000c8(%eax),%ax
		mov    0x0000ca(%esi),%dx
		mov    0x0000cc(%esi),%bx
		mov    0x0000ce(%esi),%cx
		sub    $0x000003,%eax
		sub    $0x000003,%edx
		add    $0x000006,%ebx
		add    $0x000006,%ecx
		cmpb   $0x000000,0x0000d5(%esi)
		je     _01a8e8_jump
		movzbl 0x0000d6(%esi),%edi
		movswl %cx,%ecx
		push   %edi
		movswl %bx,%ebx
		push   $_0000ff_case
		movswl %dx,%edx
		cwtl   
		call   _019f3c_func
		mov    0x0000d6(%esi),%ah
		cmp    $0x000001,%ah
		jne    _01a8af_jump
		xor    %eax,%eax
		mov    0x0000d7(%esi),%al
		push   %eax
		mov    0x0000d2(%esi),%ax
		dec    %eax
		movswl %ax,%ebx
		mov    0x0000d0(%esi),%ax
		xor    %ecx,%ecx
		dec    %eax
		mov    0x0000d4(%esi),%cl
		movswl %ax,%edx
		jmp    _01a930_jump

	_01a8af_jump:
		cmp    $0x000002,%ah
		jne    _01a90d_jump
		xor    %eax,%eax
		mov    0x0000d7(%esi),%al
		push   %eax
		mov    0x0000d2(%esi),%ax
		inc    %eax
		movswl %ax,%ebx
		mov    0x0000d0(%esi),%ax
		xor    %ecx,%ecx
		inc    %eax
		mov    0x0000d4(%esi),%cl
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01a168_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01a8e8_jump:
		cmpb   $0x000000,0x0000d6(%esi)
		je     _01a90d_jump
		movzbl 0x0000d6(%esi),%edi
		movswl %cx,%ecx
		push   %edi
		movswl %bx,%ebx
		push   $0x0000fe
		movswl %dx,%edx
		cwtl   
		call   _019f3c_func

	_01a90d_jump:
		mov    0x0000d0(%esi),%ebx
		mov    0x0000ce(%esi),%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x0000d7(%esi),%al
		sar    $0x000010,%edx
		push   %eax
		mov    0x0000d4(%esi),%cl

	_01a930_jump:
		mov    %esi,%eax
		call   _01a168_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01a940_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpb   $0x000001,_095de4_data
		jne    _01a962_jump
		mov    $0x003e80,%ecx
		mov    _0cd154_data,%edi
		call   _012783_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01a962_jump:
		mov    $0x00fa00,%ebx
		mov    _0ccae4_data,%eax
		xor    %edx,%edx
		call   _07fcc0_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01a978_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,0x000008(%esp)
		mov    %edx,%ecx
		mov    _0cf1f2_data,%eax
		mov    %esp,%edi
		sar    $0x000010,%eax
		mov    $_0c93a8_data,%edx
		shl    $0x000002,%eax
		mov    $_018ac0_func,%esi
		add    %eax,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    (%edx),%ah
		mov    %edx,%esi
		inc    %ah
		mov    0x000001(%edx),%bl
		mov    %ah,(%edx)
		cmp    %bl,%ah
		jbe    _01a9d2_jump
		mov    $0x000007,%eax
		call   _06b8d0_func
		mov    %eax,%ebx
		mov    $0x000005,%eax
		movb   $0x000000,(%edx)
		call   _06b8d0_func
		mov    %al,0x000001(%edx)
		mov    %bl,0x000002(%edx)
		mov    %bl,0x000003(%edx)

	_01a9d2_jump:
		mov    0x000008(%esp),%edx
		mov    _0cf2ae_data,%bx
		mov    0x000002(%esi),%al
		sub    %ebx,%edx
		mov    _0cf2b0_data,%di
		xor    %ah,%ah
		sub    %edi,%ecx
		add    %eax,%edx
		add    %ecx,%eax
		test   %dx,%dx
		jle    _01aa70_jump
		movswl %dx,%ecx
		mov    $0x000140,%edx
		sub    %ecx,%edx
		test   %edx,%edx
		jle    _01aa70_jump
		test   %ax,%ax
		jle    _01aa70_jump
		movswl %ax,%ebx
		mov    $0x0000c8,%eax
		sub    %ebx,%eax
		test   %eax,%eax
		jle    _01aa70_jump
		xor    %eax,%eax
		mov    0x000003(%esi),%al
		mov    (%esp,%eax,1),%al
		and    $_0000ff_case,%eax
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		mov    _0ce0d0_data,%eax
		shl    $0x000002,%esi
		mov    (%eax),%edx
		add    %esi,%edx
		movzbw 0x000006(%edx),%si
		movzbw 0x000005(%edx),%di
		shl    $0x000008,%esi
		add    %edi,%esi
		mov    0x000008(%eax),%eax
		movzwl %si,%ebp
		mov    (%edx),%esi
		add    %eax,%esi
		mov    0x00000a(%edx),%al
		shr    $0x000004,%al
		xor    %edx,%edx
		mov    _0cd154_data,%edi
		mov    %al,%dl
		mov    %ecx,%eax
		mov    %ebp,%ecx
		call   *_0cca9c_data

	_01aa70_jump:
		mov    _0cf1f4_data,%ax
		cmp    $0x00001e,%ax
		jge    _01aa86_jump
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0cf1f4_data

	_01aa86_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01aa90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		cmpb   $0x000007,_0ce0b1_data
		jne    _01ab52_jump
		testb  $0x000004,_0ce0c5_data
		je     _01ab52_jump
		mov    _0cf234_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    %esp,%ecx
		add    %ebx,%eax
		mov    _0cc7a0_data,%esi
		shl    $0x000002,%eax
		xor    %edx,%edx
		add    %eax,%esi
		lea    0x000004(%esp),%eax
		mov    %dx,_0cf1f4_data
		push   %eax
		lea    0x00000c(%esp),%eax
		mov    $0x000001,%edx
		push   %eax
		lea    0x000014(%esp),%ebx
		mov    $_0ce044_data,%eax
		call   _01d7e0_func
		mov    0x000006(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    0x000028(%esi),%cx
		mov    %eax,%edi
		mov    0x000002(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		xor    %ebx,%ebx
		add    %edx,%eax
		mov    0x000068(%esi),%bl
		sub    $0x000006,%eax
		add    %ecx,%ebx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000074(%esi),%al
		push   $0x000080
		add    %ecx,%eax
		push   $0x000005
		cwtl   
		movswl %bx,%ecx
		push   %eax
		movswl %dx,%ebx
		mov    $_01a978_func,%eax
		movswl %di,%edx
		call   _01f00c_func

	_01ab52_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ab5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000d8,%esp
		push   $0x000000
		mov    $0x000010,%ecx
		mov    $0x000140,%ebx
		push   $_0000ff_case
		xor    %edx,%edx
		xor    %eax,%eax
		call   _019f3c_func
		push   $0x000000
		mov    $0x000028,%ecx
		mov    $0x000140,%ebx
		push   $_0000ff_case
		mov    $0x0000a0,%edx
		xor    %eax,%eax
		call   _019f3c_func
		cmpb   $_0000ff_case,_0cf451_data
		je     _01acc6_jump
		mov    _0cf212_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cc7a0_data,%ebp
		add    %edx,%eax
		xor    %edx,%edx
		shl    $0x000002,%eax
		mov    _0cf451_data,%dl
		add    %eax,%ebp
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    $_0cbf28_data,%esi
		sub    %edx,%eax
		mov    $0x0000d8,%ecx
		shl    $0x000003,%eax
		mov    %esp,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01acc6_jump
		testb  $0x000004,0x000081(%ebp)
		je     _01acbf_jump
		xor    %eax,%eax
		mov    $0x0000be,%edx
		mov    0x000069(%ebp),%al
		sub    %eax,%edx
		xor    %ebx,%ebx
		mov    %dx,0x000038(%ebp)
		mov    0x000068(%ebp),%bl
		add    0x000036(%ebp),%bx
		mov    0x0000c6(%esp),%eax
		movswl %bx,%esi
		sar    $0x000010,%eax
		lea    -0x000008(%esi),%edx
		cmp    %eax,%edx
		jle    _01ac68_jump
		mov    0x0000ca(%esp),%edi
		sar    $0x000010,%edi
		add    %eax,%edi
		cmp    %edi,%esi
		jge    _01ac68_jump
		sub    %eax,%edx
		mov    $0x000007,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cwtl   
		xor    %cl,%cl
		mov    %cl,(%esp,%eax,1)
		jmp    _01ac85_jump

	_01ac68_jump:
		mov    0x0000c6(%esp),%eax
		mov    0x0000ca(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		movswl %bx,%eax
		cmp    %edx,%eax
		jl     _01ac8c_jump

	_01ac85_jump:
		mov    %esp,%eax
		call   _01a820_func

	_01ac8c_jump:
		xor    %eax,%eax
		mov    0x000038(%ebp),%cx
		mov    0x000069(%ebp),%al
		push   $0x000000
		add    %ecx,%eax
		push   $_0000ff_case
		sub    $0x000014,%eax
		mov    $0x000012,%ecx
		movswl %ax,%edx
		movswl %bx,%eax
		mov    $0x00001e,%ebx
		call   _019f3c_func
		mov    %ebp,%eax
		call   _018ac8_func
		jmp    _01acc6_jump

	_01acbf_jump:
		mov    %esp,%eax
		call   _01a820_func

	_01acc6_jump:
		mov    _0cf44d_data,%ch
		cmp    $_0000ff_case,%ch
		je     _01ad11_jump
		xor    %edx,%edx
		mov    %ch,%dl
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    $_0cbf28_data,%esi
		sub    %edx,%eax
		mov    %esp,%edi
		shl    $0x000003,%eax
		mov    $0x0000d8,%ecx
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01ad11_jump
		mov    %esp,%eax
		call   _01a820_func

	_01ad11_jump:
		add    $0x0000d8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ad20_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		movswl %dx,%ebp
		shl    $0x000002,%ebp
		xor    %ebx,%ebx
		mov    _0cd2b8_data(%ebp),%bl
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%eax
		mov    %ebx,%edx
		mov    %ax,(%esp)
		sar    $0x00001f,%edx
		mov    %ebx,%eax
		idiv   %ecx
		mov    _0cf198_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		add    $0x00001c,%edx
		mov    %dx,0x000004(%esp)
		mov    _0cf1b4_data,%dx
		push   $0x000001
		add    %edx,%eax
		movswl %si,%ebx
		sub    $0x000017,%eax
		mov    $0x00001b,%edx
		movswl %ax,%ecx
		mov    $_0ce0e0_data,%eax
		call   _018c90_func
		mov    _0ce0e0_data,%eax
		mov    0x000149(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cf198_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cf1b4_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000004(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0ce0e0_data,%eax
		call   _018c90_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0ce0e0_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cf198_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cf1b4_data,%cx
		xor    %edx,%edx
		add    %ecx,%eax
		mov    0x000008(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0ce0e0_data,%eax
		call   _018c90_func
		xor    %edx,%edx
		mov    _0cd2bb_data(%ebp),%dl
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x00001c,%edx
		mov    %dx,0x000004(%esp)
		mov    _0ce0e0_data,%eax
		mov    0x000155(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cf198_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cf1b4_data,%dx
		add    $0x00000a,%esi
		add    %edx,%eax
		movswl %si,%ebx
		sub    $0x000017,%eax
		mov    $0x000039,%edx
		movswl %ax,%ecx
		mov    $_0cd2cc_data,%eax
		call   _018c90_func
		mov    _0cd2cc_data,%edx
		xor    %eax,%eax
		mov    0x0002b1(%edx),%al
		add    %eax,%esi
		mov    _0cf198_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cf1b4_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000008(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0ce0e0_data,%eax
		call   _018c90_func
		xor    %edx,%edx
		mov    _0cd2ba_data(%ebp),%dl
		lea    0x000000(,%edx,4),%ebx
		sub    %edx,%ebx
		shl    $0x000003,%ebx
		add    %ebx,%edx
		shl    $0x000002,%edx
		mov    $0x000066,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %ax,%ebx
		mov    $0x000064,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x00000a,%ecx
		add    $0x00001c,%eax
		mov    %ebx,%edx
		mov    %ax,0x000008(%esp)
		sar    $0x00001f,%edx
		mov    %ebx,%eax
		idiv   %ecx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%edx
		mov    %dx,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%edx
		mov    _0ce0e0_data,%eax
		mov    %dx,0x000004(%esp)
		mov    0x0001c1(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cf198_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		xor    %edx,%edx
		mov    _0cf1b4_data,%cx
		mov    0x00000c(%esp),%dl
		add    %ecx,%eax
		add    $0x00000a,%esi
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0ce0e0_data,%eax
		call   _018c90_func
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce0e0_data,%edx
		mov    0x000005(%edx,%eax,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cf198_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cf1b4_data,%dx
		movswl %si,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    $0x000017,%eax
		mov    0x000004(%esp),%dl
		movswl %ax,%ecx
		mov    $_0ce0e0_data,%eax
		call   _018c90_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0ce0e0_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cf198_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cf1b4_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000008(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0ce0e0_data,%eax
		call   _018c90_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0ce0e0_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cf198_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000002
		mov    _0cf1b4_data,%cx
		movswl %si,%edx
		add    %ecx,%eax
		mov    $0x000001,%ecx
		movswl %ax,%ebx
		mov    $_0c0808_data,%eax
		call   _01a168_func
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01b064_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cf1ac_data,%cx
		mov    _0cf198_data,%ax
		dec    %ecx
		add    $0x000017,%eax
		imul   %ecx,%eax
		mov    _0cf1b4_data,%dx
		push   $0x000000
		add    %edx,%eax
		mov    $0x00000a,%ebx
		sub    $0x000017,%eax
		mov    $0x000002,%edx
		movswl %ax,%ecx
		mov    $_0cd2cc_data,%eax
		call   _018c90_func
		mov    _0cf1b2_data,%bx
		test   %bx,%bx
		je     _01b0e5_jump
		mov    %ebx,%ecx
		mov    _0cf198_data,%ax
		dec    %ecx
		add    $0x000017,%eax
		imul   %eax,%ecx
		push   $0x000000
		mov    _0cf1b4_data,%si
		mov    $0x000001,%edx
		add    %esi,%ecx
		mov    $0x00000a,%ebx
		sub    $0x000017,%ecx
		mov    $_0cd2cc_data,%eax
		movswl %cx,%ecx
		call   _018c90_func

	_01b0e5_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b1ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000024,%esp
		mov    %eax,%ebx
		mov    _0cf298_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmp    $0xfffffffe,%ebx
		je     _01b3d0_jump
		mov    $0x00003c,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x00000a,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000258,%ecx
		mov    %dl,0x000018(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x00000a,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x001770,%ecx
		mov    %dl,0x000014(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x00000a,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ah,%ah
		mov    %ah,0x00001c(%esp)
		mov    _0cca50_data,%ax
		sub    $0x000020,%eax
		push   $0x000005
		movswl %ax,%ebx
		mov    _0cca48_data,%ax
		mov    $0x000002,%ecx
		sub    $0x000034,%eax
		mov    %dl,0x000024(%esp)
		movswl %ax,%edx
		mov    _0c2ad4_data,%eax
		call   _01a168_func
		mov    0x000020(%esp),%dl
		test   %dl,%dl
		je     _01b299_jump
		mov    _0cca50_data,%ax
		sub    $0x00001e,%eax
		movswl %ax,%ecx
		mov    _0cca48_data,%ax
		sub    $0x000032,%eax
		movswl %ax,%ebx
		mov    %dl,%al
		add    $0x00001c,%al
		xor    %edx,%edx
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018c90_func
		movb   $0x00000f,0x00001c(%esp)

	_01b299_jump:
		mov    _0cca50_data,%ax
		sub    $0x00001e,%eax
		movswl %ax,%ecx
		mov    _0cca48_data,%ax
		movzbw 0x00001c(%esp),%di
		sub    $0x000032,%eax
		add    %edi,%eax
		movswl %ax,%ebx
		mov    0x000014(%esp),%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018c90_func
		mov    _0cca50_data,%ax
		sub    $0x00001e,%eax
		movswl %ax,%ecx
		mov    _0cca48_data,%ax
		sub    $0x000023,%eax
		add    %edi,%eax
		movswl %ax,%ebx
		mov    0x000018(%esp),%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018c90_func
		mov    _0cd2c4_data,%edx
		cmp    $0x000064,%edx
		jg     _01b3a1_jump
		xor    %eax,%eax
		mov    _0cf447_data,%al
		push   %eax
		mov    _0c2ac8_data,%edi
		push   %edi
		lea    0x000008(%esp),%eax
		xor    %esi,%esi
		push   %eax
		mov    %esi,_0ce068_data
		call   _07fceb_func
		mov    _0cf3f5_data,%bl
		add    $0x00000c,%esp
		cmp    $0x000004,%bl
		jae    _01b3d0_jump
		mov    _095e79_data,%al
		mov    _095e78_data,%bh
		add    %al,%bh
		mov    %bh,_095e78_data
		cmp    $0x000005,%bh
		jbe    _01b366_jump
		mov    %al,%dl
		neg    %dl
		mov    %dl,_095e79_data
		movb   $0x000005,_095e78_data
		jmp    _01b378_jump

	_01b366_jump:
		test   %bh,%bh
		jne    _01b378_jump
		neg    %al
		mov    %al,_095e79_data
		movb   $0x000001,_095e78_data

	_01b378_jump:
		xor    %eax,%eax
		mov    $0x000002,%ecx
		mov    _095e78_data,%al
		mov    $0x000064,%ebx
		push   %eax
		mov    $0x0000a0,%edx
		lea    0x000004(%esp),%eax
		call   _01a168_func
		add    $0x000024,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01b3a1_jump:
		cmp    $0x0000a0,%edx
		jg     _01b3d0_jump
		cmp    $0x000078,%edx
		jle    _01b3d0_jump
		mov    %esp,%edi
		push   $0x000005
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    $_0c080c_data,%esi
		lea    0x000004(%esp),%eax
		xor    %ecx,%ecx
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   _01a168_func

	_01b3d0_jump:
		add    $0x000024,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b3dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000008,%esp
		cmpw   $_0000ff_case,_0cf218_data
		jne    _01b42c_jump
		cmpb   $0x000000,_0cf428_data
		je     _01b411_jump
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b6,%ebx
		mov    $0x0000b5,%edx
		mov    $_0c0814_data,%eax
		jmp    _01b550_jump

	_01b411_jump:
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b6,%ebx
		mov    $0x0000b5,%edx
		mov    $_0c0824_data,%eax
		jmp    _01b550_jump

	_01b42c_jump:
		push   $0x000001
		mov    $0x0000a2,%ecx
		mov    $0x000092,%ebx
		mov    $0x00001b,%edx
		mov    $_0ce0e0_data,%eax
		call   _018c90_func
		push   $0x000000
		mov    $0x000022,%ecx
		mov    $0x000016,%ebx
		push   $_0000ff_case
		mov    $0x0000a2,%edx
		mov    $0x000092,%eax
		call   _019f3c_func
		xor    %ebx,%ebx
		mov    _0cf434_data,%bl
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ax,0x000004(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		mov    $0x0000bc,%ebx
		mov    0x000008(%esp),%al
		mov    %dx,0x000004(%esp)
		add    $0x00001c,%al
		xor    %edx,%edx
		mov    $0x0000a2,%ecx
		mov    %al,%dl
		mov    $_0ce0e0_data,%eax
		call   _018c90_func
		push   $0x000001
		mov    0x000004(%esp),%al
		mov    $0x0000a2,%ecx
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x0000cb,%ebx
		mov    %al,%dl
		mov    $_0ce0e0_data,%eax
		call   _018c90_func
		mov    _0cf216_data,%ebx
		sar    $0x000010,%ebx
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ax,0x000004(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		mov    $0x000034,%ebx
		mov    0x000008(%esp),%al
		mov    %dx,0x000004(%esp)
		add    $0x00001c,%al
		xor    %edx,%edx
		mov    $0x0000a2,%ecx
		mov    %al,%dl
		mov    $_0ce0e0_data,%eax
		call   _018c90_func
		push   $0x000001
		mov    0x000004(%esp),%al
		mov    $0x0000a2,%ecx
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x000043,%ebx
		mov    %al,%dl
		mov    $_0ce0e0_data,%eax
		call   _018c90_func
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b8,%ebx
		mov    $0x000058,%edx
		mov    $_0c0830_data,%eax

	_01b550_jump:
		call   _01a168_func
		mov    $_0ce044_data,%eax
		call   _018ac8_func
		mov    $_0ce73c_data,%eax
		call   _018ac8_func
		testb  $0x000004,_0cd34d_data
		je     _01b57c_jump
		mov    $_0cd2cc_data,%eax
		call   _018ac8_func

	_01b57c_jump:
		add    $0x000008,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b584_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    0x000078(%esp),%esi
		mov    %eax,0x000054(%esp)
		mov    %edx,0x00003c(%esp)
		mov    0x00007c(%esp),%eax
		mov    0x000088(%esp),%edi
		mov    %ebx,%edx
		mov    %di,0x000060(%esp)
		cmp    %bx,%si
		jge    _01b5bb_jump
		mov    0x000080(%esp),%edi
		mov    %esi,%edx
		mov    %di,0x000060(%esp)

	_01b5bb_jump:
		mov    0x000080(%esp),%edi
		cmp    %di,%dx
		jle    _01b5ce_jump
		mov    %edi,%edx
		mov    %si,0x000060(%esp)

	_01b5ce_jump:
		mov    0x000088(%esp),%edi
		cmp    %di,%dx
		jle    _01b5e1_jump
		mov    %edi,%edx
		mov    %bx,0x000060(%esp)

	_01b5e1_jump:
		mov    0x00008c(%esp),%edi
		mov    %cx,0x00005c(%esp)
		mov    %di,0x000064(%esp)
		cmp    %cx,%ax
		jge    _01b608_jump
		mov    0x000084(%esp),%edi
		mov    %ax,0x00005c(%esp)
		mov    %di,0x000064(%esp)

	_01b608_jump:
		mov    0x000084(%esp),%edi
		cmp    0x00005c(%esp),%di
		jge    _01b620_jump
		mov    %di,0x00005c(%esp)
		mov    %ax,0x000064(%esp)

	_01b620_jump:
		mov    0x00008c(%esp),%edi
		cmp    0x00005c(%esp),%di
		jge    _01b638_jump
		mov    %di,0x00005c(%esp)
		mov    %cx,0x000064(%esp)

	_01b638_jump:
		mov    0x00005e(%esp),%edi
		sar    $0x000010,%edi
		cwtl   
		mov    %edi,0x000034(%esp)
		movswl %si,%esi
		mov    0x000034(%esp),%ebp
		movswl %dx,%edi
		mov    %eax,0x000034(%esp)
		sub    %edi,%ebp
		movswl %cx,%eax
		mov    %ebp,%edi
		mov    0x000034(%esp),%ebp
		mov    %esi,0x000034(%esp)
		sub    %eax,%ebp
		movswl %bx,%esi
		mov    %ebp,%eax
		mov    0x000034(%esp),%ebp
		sub    %esi,%ebp
		mov    %ebp,0x000058(%esp)
		test   %eax,%eax
		jge    _01b686_jump
		mov    %edi,%esi
		mov    %edi,0x000048(%esp)
		neg    %esi
		neg    %eax
		mov    %esi,0x000048(%esp)
		jmp    _01b68a_jump

	_01b686_jump:
		mov    %edi,0x000048(%esp)

	_01b68a_jump:
		cmpl   $0x000000,0x000058(%esp)
		jge    _01b6a6_jump
		mov    0x000058(%esp),%esi
		mov    $0xffffffff,%ebp
		neg    %esi
		mov    %ebp,0x000040(%esp)
		mov    %esi,0x000058(%esp)
		jmp    _01b6ae_jump

	_01b6a6_jump:
		movl   $0x000001,0x000040(%esp)

	_01b6ae_jump:
		mov    0x000082(%esp),%esi
		sar    $0x000010,%esi
		mov    %esi,0x000034(%esp)
		mov    0x000034(%esp),%ebp
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi
		mov    0x00007e(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,0x000034(%esp)
		movswl %bx,%ebp
		mov    %ebp,0x000038(%esp)
		mov    0x000034(%esp),%ebp
		sub    0x000038(%esp),%ebp
		mov    %ebp,0x000050(%esp)
		test   %esi,%esi
		jge    _01b6f9_jump
		mov    %edi,%ebp
		mov    %edi,0x000044(%esp)
		neg    %ebp
		neg    %esi
		mov    %ebp,0x000044(%esp)
		jmp    _01b6fd_jump

	_01b6f9_jump:
		mov    %edi,0x000044(%esp)

	_01b6fd_jump:
		cmpl   $0x000000,0x000050(%esp)
		jge    _01b712_jump
		movl   $0xffffffff,0x00004c(%esp)
		negl   0x000050(%esp)
		jmp    _01b71a_jump

	_01b712_jump:
		movl   $0x000001,0x00004c(%esp)

	_01b71a_jump:
		test   %eax,%eax
		jne    _01b71f_jump
		inc    %eax

	_01b71f_jump:
		test   %esi,%esi
		jne    _01b724_jump
		inc    %esi

	_01b724_jump:
		mov    0x000040(%esp),%ebp
		mov    %eax,0x00000c(%esp)
		mov    0x00004c(%esp),%eax
		mov    %ebp,(%esp)
		mov    0x000048(%esp),%ebp
		mov    %eax,0x000010(%esp)
		mov    0x000044(%esp),%eax
		mov    %ebp,0x000004(%esp)
		mov    0x000058(%esp),%ebp
		mov    %eax,0x000014(%esp)
		mov    0x000050(%esp),%eax
		mov    %ebp,0x000008(%esp)
		mov    0x00005a(%esp),%ebp
		mov    %eax,0x000018(%esp)
		mov    0x000062(%esp),%eax
		sar    $0x000010,%ebp
		sar    $0x000010,%eax
		sub    %ebp,%eax
		mov    %eax,0x000024(%esp)
		movswl %cx,%eax
		sub    %ebp,%eax
		mov    %edi,0x000020(%esp)
		imul   %eax,%edi
		movswl %dx,%ecx
		movswl %bx,%eax
		mov    %esi,0x00001c(%esp)
		sub    %ecx,%eax
		mov    %ecx,0x000038(%esp)
		add    %edi,%eax
		mov    0x000054(%esp),%ecx
		mov    %eax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000005(%ecx),%al
		mov    %eax,0x00002c(%esp)
		xor    %eax,%eax
		mov    0x000006(%ecx),%al
		mov    %eax,0x000030(%esp)
		mov    0x00003c(%esp),%esi
		mov    (%ecx),%ecx
		mov    _0cd1a8_data,%edi
		add    %ecx,%esi
		mov    %esp,%ecx
		mov    0x00005c(%esp),%ebx
		call   _014787_func
		mov    0x000064(%esp),%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000060(%esp),%eax
		shl    $0x000008,%ebx
		sub    %edx,%eax
		xor    %ecx,%ecx
		add    %ebx,%eax
		mov    %ax,%cx
		mov    0x000054(%esp),%eax
		mov    _0cd154_data,%edi
		mov    _0cd1a8_data,%esi
		mov    0x00000a(%eax),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %ebp,%ebx
		mov    %al,%dl
		mov    0x000038(%esp),%eax
		call   *_0cca9c_data
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000018



_01b804_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000060,%esp
		mov    %eax,0x000008(%esp)
		mov    %dx,0x00005c(%esp)
		mov    %bx,0x000028(%esp)
		mov    %cx,0x000054(%esp)
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000008(%esp),%edx
		shl    $0x000002,%eax
		mov    0x000004(%edx),%edx
		add    %eax,%edx
		mov    0x000008(%edx),%ax
		mov    %edx,0x00000c(%esp)
		and    $0x00003f,%ah
		xor    %edx,%edx
		mov    0x000008(%esp),%ebx
		mov    %ax,%dx
		xor    %eax,%eax
		mov    0x00006b(%ebx),%al
		imul   %edx,%eax
		mov    0x00000c(%esp),%edx
		shl    $0x000002,%eax
		mov    (%edx),%edx
		add    %eax,%edx
		mov    %edx,(%esp)
		testb  $0x000020,0x000081(%ebx)
		je     _01b8cb_jump
		lea    0x000010(%esp),%eax
		lea    0x00001c(%esp),%ecx
		xor    %edx,%edx
		push   %eax
		lea    0x000018(%esp),%eax
		mov    0x000075(%ebx),%dl
		push   %eax
		mov    %ebx,%eax
		lea    0x000028(%esp),%ebx
		call   _01d7e0_func
		mov    0x00001e(%esp),%edx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000012(%esp),%edx
		mov    0x000008(%esp),%ebx
		sar    $0x000010,%edx
		add    $0x000008,%eax
		sar    %edx
		mov    _0cf2b0_data,%cx
		add    %edx,%eax
		mov    0x00001c(%esp),%edx
		mov    %eax,0x000030(%esp)
		xor    %eax,%eax
		sub    %ecx,%edx
		mov    0x000074(%ebx),%al
		add    %eax,%edx
		mov    %edx,0x000018(%esp)
		jmp    _01b937_jump

	_01b8cb_jump:
		lea    0x000034(%esp),%eax
		lea    0x000038(%esp),%ecx
		lea    0x00003c(%esp),%ebx
		push   %eax
		lea    0x000044(%esp),%edx
		mov    0x00000c(%esp),%eax
		call   _01d364_func
		mov    0x000040(%esp),%eax
		sub    _0cf2ae_data,%ax
		mov    0x00003c(%esp),%ebx
		add    $0x000008,%eax
		mov    0x000036(%esp),%edx
		mov    %ax,0x000040(%esp)
		mov    _0cf2b0_data,%ax
		sar    $0x000010,%edx
		sub    %eax,%ebx
		mov    0x00003e(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %bx,0x00003c(%esp)
		mov    %eax,0x000030(%esp)
		mov    0x000032(%esp),%eax
		mov    0x00003a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    %eax,0x000018(%esp)

	_01b937_jump:
		xor    %esi,%esi
		mov    %si,0x000024(%esp)
		jmp    _01bac0_jump

	_01b943_jump:
		mov    (%esp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x000003(%esi),%al
		test   %ax,%ax
		je     _01babb_jump
		cwtl   
		imul   $0x00000c,%eax,%eax
		mov    0x000008(%esp),%ebp
		mov    0x000008(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    0x000000(%ebp),%ebp
		mov    0x000036(%edx),%di
		xor    %edx,%edx
		mov    0x000038(%ebx),%cx
		mov    0x000002(%esi),%dl
		xor    %ebx,%ebx
		add    %ecx,%edx
		add    %eax,%ebp
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    0x000001(%esi),%al
		mov    0x000005(%ebp),%bl
		add    %edi,%eax
		mov    0x000030(%esp),%edi
		mov    %eax,%esi
		mov    0x000006(%ebp),%cl
		sub    %edi,%esi
		add    %ebx,%eax
		mov    %si,0x00002c(%esp)
		mov    %si,0x000048(%esp)
		sub    %edi,%eax
		mov    0x000018(%esp),%esi
		mov    0x000026(%esp),%edi
		mov    %ax,0x000058(%esp)
		mov    %edx,%eax
		sar    $0x000010,%edi
		sub    %esi,%eax
		add    %ecx,%edx
		mov    %ax,0x000050(%esp)
		mov    %ax,0x00004c(%esp)
		mov    %edi,%ecx
		sub    %esi,%edx
		mov    0x000052(%esp),%eax
		mov    0x00005a(%esp),%esi
		mov    %dx,0x000044(%esp)
		lea    0x000050(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		mov    %eax,0x000004(%esp)
		push   %eax
		mov    %esi,%ebx
		lea    0x000030(%esp),%eax
		call   _01bc70_func
		mov    0x000004(%esp),%ebx
		lea    0x00004c(%esp),%edx
		lea    0x000058(%esp),%eax
		push   %ebx
		mov    %edi,%ecx
		mov    %esi,%ebx
		call   _01bc70_func
		mov    0x000004(%esp),%ecx
		lea    0x000044(%esp),%edx
		lea    0x000048(%esp),%eax
		push   %ecx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _01bc70_func
		mov    0x000030(%esp),%eax
		mov    0x00002c(%esp),%edx
		mov    0x000058(%esp),%ebx
		mov    0x000048(%esp),%ecx
		mov    0x000050(%esp),%esi
		mov    0x00004c(%esp),%edi
		add    %eax,%edx
		add    %eax,%ebx
		add    %eax,%ecx
		mov    0x000018(%esp),%eax
		mov    %dx,0x00002c(%esp)
		mov    %bx,0x000058(%esp)
		mov    0x000044(%esp),%edx
		add    %eax,%esi
		add    %eax,%edi
		add    %eax,%edx
		mov    %di,0x00004c(%esp)
		mov    %dx,0x000044(%esp)
		mov    %ebx,%eax
		mov    %edi,%edx
		mov    0x000044(%esp),%edi
		sub    %esi,%edx
		mov    0x00002c(%esp),%ebx
		add    %edi,%edx
		sub    %ebx,%eax
		movswl %dx,%edx
		add    %ecx,%eax
		push   %edx
		cwtl   
		push   %eax
		mov    0x00004a(%esp),%eax
		sar    $0x000010,%eax
		mov    %cx,0x000050(%esp)
		push   %eax
		mov    0x000052(%esp),%eax
		mov    %si,0x00005c(%esp)
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ebx
		push   %eax
		mov    0x00005a(%esp),%eax
		mov    0x00005e(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00006a(%esp),%eax
		mov    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x000008(%edx),%edx
		mov    %ebp,%eax
		call   _01b584_func

	_01babb_jump:
		incw   0x000024(%esp)

	_01bac0_jump:
		mov    0x00000c(%esp),%eax
		mov    0x000008(%eax),%ax
		xor    %edx,%edx
		and    $0x00003f,%ah
		mov    %ax,%dx
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _01b943_jump
		add    $0x000060,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_01bae8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    0x000009(%eax),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		movswl %bx,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		sar    %eax
		add    %edx,%eax
		mov    %eax,0x000024(%esp)
		mov    0x000009(%esi),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %al,%dl
		movswl %cx,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000008(%esi),%dl
		inc    %eax
		sar    %edx
		add    %edx,%eax
		mov    0x000024(%esp),%edx
		mov    %eax,0x000020(%esp)
		mov    %ebx,%eax
		sub    %edx,%eax
		mov    %ax,0x00001c(%esp)
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		add    %ebx,%eax
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)
		mov    0x00001c(%esp),%eax
		mov    0x000020(%esp),%edi
		mov    %ax,0x000018(%esp)
		mov    %ecx,%eax
		mov    0x000036(%esp),%ebp
		sub    %edi,%eax
		sar    $0x000010,%ebp
		mov    %ax,0x000010(%esp)
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    %ebp,%ebx
		mov    0x000006(%esi),%al
		lea    0x000010(%esp),%edx
		add    %eax,%ecx
		mov    0x00003e(%esp),%eax
		sub    %edi,%ecx
		mov    0x00003a(%esp),%edi
		sar    $0x000010,%eax
		mov    %cx,0x000014(%esp)
		mov    %eax,0x000004(%esp)
		push   %eax
		sar    $0x000010,%edi
		lea    0x000020(%esp),%eax
		mov    %edi,%ecx
		call   _01bc70_func
		mov    0x000004(%esp),%ebx
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%eax
		push   %ebx
		mov    %edi,%ecx
		mov    %ebp,%ebx
		call   _01bc70_func
		mov    0x000004(%esp),%ecx
		lea    0x000014(%esp),%edx
		lea    0x000018(%esp),%eax
		push   %ecx
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _01bc70_func
		mov    0x000024(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    0x000018(%esp),%ecx
		mov    0x000010(%esp),%edi
		add    %eax,%edx
		add    %eax,%ebx
		add    %eax,%ecx
		mov    0x000020(%esp),%eax
		mov    %dx,0x00001c(%esp)
		mov    %bx,0x000008(%esp)
		mov    %cx,0x000018(%esp)
		mov    0x00000c(%esp),%edx
		mov    0x000014(%esp),%ebx
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %eax,%edx
		add    %eax,%ebx
		mov    0x000008(%esp),%eax
		mov    %dx,0x00000c(%esp)
		mov    0x000018(%esp),%edx
		sub    %ecx,%eax
		add    %eax,%edx
		mov    0x00000c(%esp),%eax
		sub    %edi,%eax
		add    %ebx,%eax
		cwtl   
		push   %eax
		movswl %dx,%eax
		mov    %bx,0x000018(%esp)
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		mov    %di,0x00001c(%esp)
		push   %eax
		mov    0x00001a(%esp),%eax
		mov    0x00001e(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x00001a(%esp),%eax
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01b584_func
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_01bc70_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		movswl %cx,%edx
		movswl (%eax),%eax
		imul   %edx,%eax
		sar    $0x00000c,%eax
		mov    0x000016(%esp),%edx
		mov    %eax,%ecx
		sar    $0x000010,%edx
		movswl (%esi),%eax
		imul   %edx,%eax
		sar    $0x00000c,%eax
		lea    0x000008(%esp),%edx
		mov    %ax,(%esp)
		movswl %bx,%eax
		lea    0x000004(%esp),%ebx
		call   _05d2ac_func
		mov    0x000002(%esp),%ebx
		movswl %cx,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		imul   %eax,%ecx
		sub    %ecx,%ebx
		sar    $0x000009,%ebx
		mov    %bx,(%edi)
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   %edx,%eax
		add    %ebx,%eax
		sar    $0x000009,%eax
		mov    %ax,(%esi)
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01bd00_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    0x000010(%esp),%ebp
		movzbl 0x00006d(%eax),%esi
		lea    0x000000(,%esi,4),%edi
		mov    0x00000c(%eax),%esi
		add    %esi,%edi
		movzbl 0x00006c(%eax),%esi
		mov    (%edi),%edi
		shl    $0x000003,%esi
		add    %edi,%esi
		testb  $0x000040,0x000007(%esi)
		je     _01bd4b_jump
		mov    0x000028(%eax),%si
		add    $0x000045,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000026,%eax
		mov    %ax,(%ebx)
		movw   $0x000015,(%ecx)
		movw   $0x00001e,0x000000(%ebp)
		jmp    _01bd99_jump

	_01bd4b_jump:
		testb  $0x000080,0x000007(%esi)
		je     _01bd78_jump
		mov    0x000028(%eax),%si
		add    $0x000045,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000056,%eax
		mov    %ax,(%ebx)
		movw   $0x000022,(%ecx)
		movw   $0x00000a,0x000000(%ebp)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_01bd78_jump:
		mov    0x000028(%eax),%si
		add    $0x000047,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000047,%eax
		mov    %ax,(%ebx)
		movw   $0x00001d,(%ecx)
		movw   $0x000013,0x000000(%ebp)

	_01bd99_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01bda0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%edi
		call   _01d450_func
		mov    %ax,0x000018(%esp)
		mov    %edi,%eax
		call   _01d580_func
		mov    %ax,0x00001c(%esp)
		cmpb   $0x000000,0x00006d(%edi)
		jne    _01bddd_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x00001b,%dl
		je     _01bdf1_jump
		cmp    $0x000018,%dl
		je     _01bdf1_jump
		cmp    $0x00001e,%dl
		je     _01bdf1_jump
		cmp    $0x00000b,%dl
		je     _01bdf1_jump

	_01bddd_jump:
		cmpb   $0x000001,0x00006d(%edi)
		jne    _01bea4_jump
		cmpb   $0x000002,0x00006c(%edi)
		jne    _01bea4_jump

	_01bdf1_jump:
		cmpb   $0x000000,_0ce172_data
		je     _01bec5_jump
		mov    _0ce0d0_data,%esi
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%bx
		mov    0x00002c(%esi),%dx
		add    %eax,%ebx
		mov    %edx,%ecx
		mov    %bx,0x000010(%esp)
		xor    %eax,%eax
		xor    %edx,%ecx
		mov    0x000069(%esi),%al
		xor    %ebx,%ebx
		mov    0x000068(%edi),%cl
		mov    0x000074(%esi),%bl
		mov    0x000028(%edi),%si
		add    %edx,%eax
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    %si,0x000014(%esp)
		mov    0x000069(%edi),%cl
		mov    0x00002c(%edi),%si
		add    %edx,%ebx
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    0x00002c(%edi),%dx
		mov    0x000074(%edi),%cl
		add    %edx,%ecx
		add    $0x000005,%esi
		sub    $0x000005,%ecx
		cmp    %si,%ax
		jle    _01be62_jump
		cmp    %si,%bx
		jg     _01bec5_jump

	_01be62_jump:
		cmp    %cx,%ax
		jge    _01be6c_jump
		cmp    %cx,%bx
		jl     _01bec5_jump

	_01be6c_jump:
		mov    0x000012(%esp),%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		lea    0x00003c(%ecx),%esi
		cmp    %esi,%ebx
		jg     _01bec5_jump
		sub    $0x00003c,%ecx
		cmp    %ecx,%ebx
		jl     _01bec5_jump
		mov    $0x000019,%ebx
		mov    %edi,%eax
		movw   $0x000000,0x000040(%edi)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%edi)
		call   _01d444_func
		jmp    _01bec5_jump

	_01bea4_jump:
		cmpb   $0x000000,0x00006d(%edi)
		jne    _01bec5_jump
		cmpb   $0x00001a,0x00006c(%edi)
		jne    _01bec5_jump
		cmpb   $0x000000,_0ce172_data
		jne    _01bec5_jump
		mov    $0x00001b,%edx
		mov    %edi,%eax
		call   _01d434_func

	_01bec5_jump:
		cmpb   $0x000001,0x00006d(%edi)
		jne    _01bf45_jump
		cmpb   $0x000002,0x00006c(%edi)
		jne    _01bf45_jump
		mov    %edi,%eax
		call   _0552b4_func
		xor    %edx,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _024f68_func
		mov    %al,%bl
		testb  $0x000001,_0924f4_data(%ebx)
		je     _01bf3e_jump
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		xor    %ebx,%ebx
		shr    $0x000007,%al
		mov    $0x000001,%ecx
		mov    %al,%bl
		sub    %ebx,%ecx
		mov    %cl,%al
		mov    0x000081(%edi),%ch
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		xor    %edx,%edx
		mov    %ch,%ah
		mov    %ch,0x000081(%edi)
		or     %al,%ah
		mov    $0x000018,%ebx
		mov    %ah,0x000081(%edi)
		mov    %edi,%eax
		call   _01d444_func
		mov    %edi,%eax
		call   _0552b4_func

	_01bf3e_jump:
		mov    %edi,%eax
		call   _025590_func

	_01bf45_jump:
		mov    0x00001a(%esp),%esi
		mov    0x000016(%esp),%ecx
		mov    %edi,%eax
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		mov    %esi,%ebx
		mov    %ecx,%edx
		call   _01d6f4_func
		test   %ax,%ax
		je     _01c01d_jump
		mov    %esi,%ebx
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _02f310_func
		test   %ax,%ax
		je     _01c01d_jump
		cmpb   $0x000001,0x00006d(%edi)
		jne    _01bfdd_jump
		cmpb   $0x000002,0x00006c(%edi)
		jne    _01bfdd_jump
		mov    $0x000015,%ebx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		xor    %ebx,%ebx
		shr    $0x000007,%al
		mov    $0x000001,%ecx
		mov    %al,%bl
		sub    %ebx,%ecx
		movw   $0x000000,0x000040(%edi)
		mov    %cl,%al
		mov    0x000081(%edi),%cl
		and    $0x000001,%al
		and    $0x0000f7,%cl
		shl    $0x000003,%al
		mov    %cl,0x000081(%edi)
		mov    %cl,%ch
		movw   $0x000000,0x000042(%edi)
		or     %al,%ch
		mov    %ch,0x000081(%edi)
		jmp    _01c17e_jump

	_01bfdd_jump:
		mov    0x00006d(%edi),%dl
		cmp    $0x000002,%dl
		jne    _01c17e_jump
		mov    0x00006c(%edi),%dh
		cmp    $0x000003,%dh
		je     _01bffe_jump
		cmp    $0x000001,%dh
		je     _01bffe_jump
		cmp    %dl,%dh
		jne    _01c17e_jump

	_01bffe_jump:
		mov    $0x00000c,%ebx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000040(%edi)
		movw   $0x000000,0x000042(%edi)
		jmp    _01c17e_jump

	_01c01d_jump:
		cmpb   $0x000002,0x00006d(%edi)
		jne    _01c040_jump
		cmpb   $0x000001,0x00006c(%edi)
		jne    _01c040_jump
		cmpb   $0x000000,0x00006b(%edi)
		jne    _01c040_jump
		movw   $0x000000,0x000040(%edi)
		movw   $0x00fff6,0x000042(%edi)
		jmp    _01c17e_jump

	_01c040_jump:
		cmpb   $0x000000,0x00006d(%edi)
		jne    _01c17e_jump
		cmpb   $0x000014,0x00006c(%edi)
		jne    _01c17e_jump
		cmpb   $0x00001b,0x00006b(%edi)
		jne    _01c17e_jump
		mov    _0cc7a0_data,%esi
		mov    _0cc7a4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _01c17e_jump

	_01c076_jump:
		cmpw   $0x0000c4,0x000060(%esi)
		jne    _01c16e_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _01c16e_jump
		lea    0x000004(%esp),%ebx
		lea    0x000008(%esp),%ecx
		push   %ebx
		lea    0x000004(%esp),%ebx
		mov    $0x000002,%edx
		push   %ebx
		mov    %edi,%eax
		lea    0x000014(%esp),%ebx
		call   _01d7e0_func
		andb   $0x0000f7,0x000081(%esi)
		xor    %ebx,%ebx
		mov    0x00000a(%esp),%ecx
		mov    0x000068(%esi),%bl
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		sar    %ebx
		add    %ebx,%ecx
		mov    %ecx,0x000028(%esi)
		mov    %ecx,%ebx
		mov    %cx,0x00003c(%esi)
		xor    %ecx,%ebx
		mov    0x000006(%esp),%ecx
		mov    0x000069(%esi),%bl
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x000081(%esi),%ah
		mov    %ecx,%ebx
		mov    0x000002(%esp),%ecx
		movw   $0x000000,0x000040(%esi)
		or     $0x000004,%ah
		movw   $0x000020,0x000042(%esi)
		sar    $0x000010,%ecx
		movl   $0x000001,0x000024(%esi)
		sar    %ecx
		mov    %ah,0x000081(%esi)
		add    %ecx,%ebx
		mov    %ebx,0x00002c(%esi)
		mov    %esi,%eax
		mov    %bx,0x00003e(%esi)
		call   _01f3d4_func
		mov    _0ce050_data,%ecx
		mov    0x000081(%esi),%dl
		xor    %ebx,%ebx
		movw   $0x00ffff,0x000046(%esi)
		mov    _0ce0b1_data,%bl
		movw   $0x000000,0x000048(%esi)
		shl    $0x000002,%ebx
		or     $0x000010,%dl
		add    %ecx,%ebx
		mov    %dl,0x000081(%esi)
		xor    %ecx,%ecx
		mov    (%ebx),%ebx
		mov    _0ce0b0_data,%cl
		mov    0x000007(%ebx,%ecx,8),%dh
		test   $0x000040,%dh
		setne  %al
		mov    %al,_0cf490_data
		mov    %esi,%eax
		call   _01c39c_func
		jmp    _01c17e_jump

	_01c16e_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jl     _01c076_jump

	_01c17e_jump:
		cmpb   $0x000000,0x00006d(%edi)
		jne    _01c1bc_jump
		mov    0x00006c(%edi),%bh
		cmp    $0x000014,%bh
		je     _01c196_jump
		cmp    $0x00000d,%bh
		je     _01c196_jump
		cmp    $0x000017,%bh
		jne    _01c1bc_jump

	_01c196_jump:
		mov    _0ce06c_data,%ebx
		mov    0x000028(%edi),%esi
		lea    0x000081(%edi),%ecx
		cmp    %esi,%ebx
		setg   %al
		and    $0x000001,%al
		mov    (%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,(%ecx)
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,(%ecx)

	_01c1bc_jump:
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c1c8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    0x000076(%eax),%ah
		dec    %ah
		mov    %ah,0x000076(%ecx)
		jne    _01c247_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01c1f7_jump
		mov    0x00006c(%ecx),%dh
		cmp    $0x00000c,%dh
		je     _01c215_jump
		cmp    $0x00000d,%dh
		je     _01c215_jump
		cmp    $0x000017,%dh
		je     _01c215_jump
		cmp    $0x000014,%dh
		je     _01c215_jump

	_01c1f7_jump:
		mov    0x00006d(%ecx),%ah
		cmp    $0x000002,%ah
		jne    _01c21c_jump
		mov    0x00006c(%ecx),%dl
		cmp    %ah,%dl
		je     _01c215_jump
		cmp    $0x000003,%dl
		je     _01c215_jump
		cmp    $0x00001c,%dl
		je     _01c215_jump
		cmp    $0x000007,%dl
		jne    _01c21c_jump

	_01c215_jump:
		mov    $0x000013,%ebx
		jmp    _01c221_jump

	_01c21c_jump:
		mov    $0x000012,%ebx

	_01c221_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%al
		mov    %al,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01c247_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _01c253_jump
		cmpb   $0x000002,0x00006c(%ecx)
		je     _01c278_jump

	_01c253_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01c297_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000b,%al
		je     _01c278_jump
		cmp    $0x00001d,%al
		je     _01c278_jump
		cmp    $0x00001a,%al
		je     _01c278_jump
		cmp    $0x000019,%al
		je     _01c278_jump
		cmp    $0x00001b,%al
		je     _01c278_jump
		cmp    $0x000018,%al
		je     _01c278_jump
		cmp    $0x00001e,%al
		jne    _01c297_jump

	_01c278_jump:
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000042(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01c297_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01c2dd_jump
		mov    0x00006c(%ecx),%dl
		cmp    $0x00000c,%dl
		je     _01c2b4_jump
		cmp    $0x00000d,%dl
		je     _01c2b4_jump
		cmp    $0x000017,%dl
		je     _01c2b4_jump
		cmp    $0x000014,%dl
		jne    _01c2dd_jump

	_01c2b4_jump:
		mov    _0ce06c_data,%edx
		cmp    0x000028(%ecx),%edx
		jle    _01c2c8_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _01c2cf_jump

	_01c2c8_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_01c2cf_jump:
		mov    $0x000011,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func

	_01c2dd_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01c2e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _01c304_jump
		mov    0x00006c(%eax),%dh
		cmp    $0x00000d,%dh
		je     _01c2f6_jump
		cmp    $0x00000c,%dh
		jne    _01c304_jump

	_01c2f6_jump:
		mov    $0x000014,%edx
		call   _01d434_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c304_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _01c310_jump
		cmpb   $0x00000b,0x00006c(%eax)
		je     _01c328_jump

	_01c310_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _01c31c_jump
		cmpb   $0x00001e,0x00006c(%eax)
		je     _01c328_jump

	_01c31c_jump:
		cmpb   $0x000001,0x00006d(%eax)
		jne    _01c396_jump
		cmpb   $0x000002,0x00006c(%eax)
		jne    _01c396_jump

	_01c328_jump:
		mov    _0ce06c_data,%edx
		mov    0x000028(%eax),%ebx
		cmp    %ebx,%edx
		setg   %dl
		mov    %dl,%dh
		mov    0x000081(%eax),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		cmp    %dh,%dl
		setne  %dl
		and    $_0000ff_case,%edx
		je     _01c396_jump
		mov    _0ce06c_data,%ebx
		mov    0x000028(%eax),%ecx
		lea    0x000081(%eax),%edx
		cmp    %ecx,%ebx
		setg   %bl
		and    $_0000ff_case,%ebx
		and    $0x000001,%bl
		mov    (%edx),%bh
		and    $0x0000f7,%bh
		mov    %bh,(%edx)
		shl    $0x000003,%bl
		mov    %bh,%cl
		or     %bl,%cl
		mov    %cl,(%edx)
		mov    $0x000018,%ebx
		movw   $0x000000,0x000040(%eax)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%eax)
		call   _01d444_func

	_01c396_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c39c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000001,0x000070(%eax)
		je     _01c608_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%di
		mov    0x000068(%esi),%al
		add    %eax,%edi
		xor    %eax,%eax
		mov    _0ce06c_data,%dx
		mov    _0ce0ac_data,%al
		add    %edx,%eax
		sub    %edi,%eax
		mov    _0cf490_data,%bl
		mov    %eax,%edi
		test   %bl,%bl
		je     _01c3fa_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0ce070_data,%cx
		mov    _0ce0ad_data,%bl
		add    %ecx,%ebx
		sub    %eax,%ebx
		jmp    _01c419_jump

	_01c3fa_jump:
		xor    %eax,%eax
		mov    _0ce0ad_data,%al
		mov    _0ce070_data,%edx
		sar    %eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%al
		add    %ebp,%eax
		sub    %eax,%edx
		mov    %edx,%ebx

	_01c419_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _01c422_jump
		neg    %eax

	_01c422_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _01c42d_jump
		neg    %eax

	_01c42d_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    0x000069(%esi),%dl
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x00002c(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0ce070_data,%ecx
		mov    _0ce0ad_data,%al
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01c5cd_jump
		mov    _0ce06c_data,%ecx
		mov    0x000028(%esi),%ebp
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%dl
		mov    _0ce0ac_data,%al
		add    %ebp,%edx
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01c483_jump
		testb  $0x000008,0x000081(%esi)
		je     _01c4b2_jump

	_01c483_jump:
		mov    _0ce06c_data,%ecx
		mov    0x000028(%esi),%ebp
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000068(%esi),%al
		mov    _0ce0ac_data,%dl
		add    %ebp,%eax
		add    %ecx,%edx
		cmp    %eax,%edx
		jge    _01c5cd_jump
		testb  $0x000008,0x000081(%esi)
		je     _01c5cd_jump

	_01c4b2_jump:
		cmpw   $0x000000,(%esp)
		jle    _01c4e0_jump
		mov    $0x000005,%cl
		mov    %edi,%eax
		mov    -0x000002(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000005,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_01c4e0_jump:
		mov    0x000040(%esi),%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    $0x000020,%ebx
		cmp    $0x000000,%eax
		je     _01c4fe_jump
		mov    $0x000001,%eax
		jg     _01c4fe_jump
		neg    %eax

	_01c4fe_jump:
		add    %edx,%eax
		cmp    %ebx,%eax
		jle    _01c506_jump
		mov    %ebx,%eax

	_01c506_jump:
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jge    _01c50e_jump
		mov    %ebx,%eax

	_01c50e_jump:
		mov    %ax,0x000042(%esi)
		test   %ax,%ax
		je     _01c551_jump
		mov    0x00003e(%esi),%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    $0x000020,%ebx
		cmp    $0x000000,%eax
		je     _01c535_jump
		mov    $0x000001,%eax
		jg     _01c535_jump
		neg    %eax

	_01c535_jump:
		add    %edx,%eax
		cmp    %ebx,%eax
		jle    _01c53d_jump
		mov    %ebx,%eax

	_01c53d_jump:
		mov    $0xffffffe0,%ebx
		cmp    %ebx,%eax
		jge    _01c548_jump
		mov    %ebx,%eax

	_01c548_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c637_jump

	_01c551_jump:
		testb  $0x000008,0x000081(%esi)
		je     _01c595_jump
		mov    $0xffffffe0,%edx
		mov    0x000040(%esi),%cx
		mov    $0x000020,%ebx
		cmp    %cx,%di
		setg   %al
		mov    %eax,%ecx
		mov    0x00003e(%esi),%eax
		and    $_0000ff_case,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		cmp    %ebx,%eax
		jle    _01c584_jump
		mov    %ebx,%eax

	_01c584_jump:
		mov    %edx,%ebx
		cmp    %ebx,%eax
		jge    _01c58c_jump
		mov    %ebx,%eax

	_01c58c_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c637_jump

	_01c595_jump:
		mov    $0xffffffe0,%edx
		mov    0x000040(%esi),%cx
		mov    $0x000020,%ebx
		cmp    %cx,%di
		setl   %al
		mov    %eax,%ecx
		mov    0x00003e(%esi),%eax
		and    $_0000ff_case,%ecx
		sar    $0x000010,%eax
		add    %ecx,%eax
		cmp    %ebx,%eax
		jle    _01c5bf_jump
		mov    %ebx,%eax

	_01c5bf_jump:
		mov    %edx,%ebx
		cmp    %ebx,%eax
		jge    _01c5c7_jump
		mov    %ebx,%eax

	_01c5c7_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c637_jump

	_01c5cd_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		mov    $0x000020,%ebx
		add    %eax,%eax
		cmp    %ebx,%eax
		jle    _01c5e0_jump
		mov    %ebx,%eax

	_01c5e0_jump:
		mov    $0xffffffe0,%ebx
		cmp    %ebx,%eax
		jge    _01c5eb_jump
		mov    %ebx,%eax

	_01c5eb_jump:
		mov    %ax,0x000040(%esi)
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		mov    $0x000020,%ebx
		add    %eax,%eax
		cmp    %ebx,%eax
		jle    _01c602_jump
		mov    %ebx,%eax

	_01c602_jump:
		mov    %ax,0x000042(%esi)
		jmp    _01c637_jump

	_01c608_jump:
		mov    _0ce06c_data,%ecx
		mov    0x000028(%esi),%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%dl
		mov    _0ce0ac_data,%al
		add    %ebx,%edx
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01c62e_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _01c637_jump

	_01c62e_jump:
		jge    _01c637_jump
		orb    $0x000008,0x000081(%esi)

	_01c637_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _01c65e_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _01c65e_jump
		testb  $0x000008,0x000081(%esi)
		je     _01c655_jump
		mov    $0xffffffff,%eax
		jmp    _01c65a_jump

	_01c655_jump:
		mov    $0x000001,%eax

	_01c65a_jump:
		mov    %ax,0x000040(%esi)

	_01c65e_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01c66a_jump
		neg    %eax

	_01c66a_jump:
		movswl %ax,%edx
		mov    0x000040(%esi),%ebx
		lea    0x000000(,%edx,4),%edi
		sar    $0x000010,%ebx
		sub    %edx,%edi
		cmp    %ebx,%edi
		jge    _01c686_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _01c6bb_jump

	_01c686_jump:
		lea    0x000000(,%ebx,4),%eax
		lea    0x000000(,%edx,4),%ecx
		sub    %ebx,%eax
		cmp    %eax,%ecx
		jge    _01c6a0_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _01c6bb_jump

	_01c6a0_jump:
		shl    $0x000002,%ebx
		cmp    %ebx,%edi
		jge    _01c6ad_jump
		movb   $0x00000b,0x00006b(%esi)
		jmp    _01c6bb_jump

	_01c6ad_jump:
		cmp    %eax,%edx
		jge    _01c6b7_jump
		movb   $0x00000a,0x00006b(%esi)
		jmp    _01c6bb_jump

	_01c6b7_jump:
		movb   $0x000009,0x00006b(%esi)

	_01c6bb_jump:
		cmpw   $0x000000,0x000040(%esi)
		jle    _01c6da_jump
		mov    0x000081(%esi),%dl
		test   $0x000008,%dl
		je     _01c6da_jump
		mov    %dl,%bh
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%esi)
		jmp    _01c6f7_jump

	_01c6da_jump:
		cmpw   $0x000000,0x000040(%esi)
		jge    _01c6f7_jump
		mov    0x000081(%esi),%dh
		test   $0x000008,%dh
		jne    _01c6f7_jump
		mov    %dh,%bl
		or     $0x000008,%bl
		mov    %bl,0x000081(%esi)

	_01c6f7_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c704_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000007,0x00006c(%eax)
		jne    _01c72e_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c72e_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01c740_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _01c740_jump
		movw   $0x000000,0x000052(%ecx)

	_01c740_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000001,%al
		jbe    _01c753_jump
		cmp    $0x000002,%al
		je     _01c7fd_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c753_jump:
		test   %al,%al
		jne    _01c760_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _01c767_jump

	_01c760_jump:
		orb    $0x000008,0x000081(%ecx)

	_01c767_jump:
		mov    %ecx,%eax
		call   _0552b4_func
		mov    0x00006d(%ecx),%dh
		movw   $0x000001,0x000050(%ecx)
		test   %dh,%dh
		jne    _01c789_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d444_func

	_01c789_jump:
		mov    0x00006d(%ecx),%bl
		cmp    $0x000001,%bl
		jne    _01c85f_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024f68_func
		and    $_0000ff_case,%eax
		test   %bl,_0924f4_data(%eax)
		je     _01c7eb_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _01c7ce_jump
		mov    0x000081(%ecx),%dl
		mov    $0x000001,%ebx
		or     $0x000008,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    $0x000002,%edx
		jmp    _01c7e6_jump

	_01c7ce_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		and    $0x0000f7,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax

	_01c7e6_jump:
		call   _060460_func

	_01c7eb_jump:
		mov    %ecx,%eax
		call   _0552b4_func
		mov    %ecx,%eax
		call   _025590_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c7fd_jump:
		mov    0x00006d(%ecx),%al
		test   %al,%al
		jbe    _01c80c_jump
		cmp    $0x000001,%al
		je     _01c829_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c80c_jump:
		cmpb   $0x000004,0x00006c(%ecx)
		jne    _01c818_jump
		movw   $0x000000,0x000052(%ecx)

	_01c818_jump:
		cmpb   $0x000008,0x00006c(%ecx)
		jne    _01c85f_jump
		mov    %ecx,%eax
		call   _0250f8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c829_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024f68_func
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		jne    _01c852_jump
		mov    %ecx,%eax
		call   _0552b4_func
		mov    %ecx,%eax
		call   _025590_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c852_jump:
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		call   _025590_func

	_01c85f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c864_func:
		push   %edx
		mov    %eax,%edx
		call   _01c704_func
		cmpb   $0x000000,0x00006d(%edx)
		jne    _01c88c_jump
		cmpb   $0x000003,0x00006c(%edx)
		jne    _01c88c_jump
		cmpw   $0x000000,0x000052(%edx)
		jne    _01c88c_jump
		mov    %edx,%eax
		call   _01c890_func
		movw   $0x000001,0x000052(%edx)

	_01c88c_jump:
		pop    %edx
		ret    



_01c890_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0cc7a0_data,%esi
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _01c9e5_jump

	_01c8b2_jump:
		cmpw   $0x000042,0x000060(%esi)
		jne    _01c9d5_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _01c9d5_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		mov    0x000081(%esi),%dh
		movw   $0x000000,0x000042(%esi)
		test   $0x000008,%dh
		je     _01c900_jump
		mov    $0xfffffffd,%eax
		jmp    _01c905_jump

	_01c900_jump:
		mov    $0x000003,%eax

	_01c905_jump:
		mov    %ax,0x000040(%esi)
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %edi,%eax
		call   _01d7e0_func
		mov    0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    $0x000001,%ebx
		mov    0x000081(%esi),%al
		movb   $0x000004,0x00007e(%esi)
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		movb   $0x000000,0x00006d(%esi)
		mov    %al,%dl
		mov    %esi,%eax
		movb   $0x000009,0x00006c(%esi)
		call   _060460_func
		mov    %esi,%eax
		call   _01dc5c_func
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f3d4_func
		mov    0x000081(%esi),%bh
		movb   $0x000009,0x00006b(%esi)
		and    $0x0000bf,%bh
		mov    %bh,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c9d5_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _01c8b2_jump

	_01c9e5_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c9f0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e7ac_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _01ca23_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    0x000081(%ecx),%dh
		movb   $0x000000,0x00006b(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01ca23_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01ca44_jump
		mov    0x00006c(%ecx),%dh
		cmp    $0x000002,%dh
		je     _01ca40_jump
		cmp    $0x000003,%dh
		je     _01ca40_jump
		cmp    $0x000004,%dh
		je     _01ca40_jump
		cmp    $0x000005,%dh
		jne    _01ca44_jump

	_01ca40_jump:
		movb   $_0000ff_case,0x00007c(%ecx)

	_01ca44_jump:
		mov    _0ce0d0_data,%eax
		movw   $0x000000,0x000050(%ecx)
		cmpw   $0x000000,0x000040(%eax)
		jle    _01ca70_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _060460_func
		orb    $0x000008,0x000081(%ecx)
		jmp    _01ca85_jump

	_01ca70_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _060460_func
		andb   $0x0000f7,0x000081(%ecx)

	_01ca85_jump:
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _060500_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		movb   $0x000000,0x00006b(%ecx)
		call   _060500_func
		pop    %ecx
		pop    %ebx
		ret    



_01cab0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000001,0x00006d(%eax)
		jne    _01cb1a_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _01cb1a_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _01cb1a_jump
		mov    0x000081(%ecx),%dh
		movb   $0x000000,0x00006b(%ecx)
		test   $0x000008,%dh
		jne    _01caf0_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		or     $0x000008,%bh
		mov    $0x000003,%edx
		mov    %bh,0x000081(%ecx)
		mov    $0x000001,%ebx
		jmp    _01cb04_jump

	_01caf0_jump:
		mov    %dh,%bl
		and    $0x0000f7,%bl
		mov    %bl,0x000081(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_01cb04_jump:
		call   _060460_func
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _060500_func

	_01cb1a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cb20_func:
		push   %ebx
		cmpl   $0x0000b4,_0cf494_data
		jle    _01cb35_jump
		xor    %ebx,%ebx
		mov    %ebx,_0cf494_data

	_01cb35_jump:
		cmpb   $0x000000,_0cf444_data
		je     _01cb55_jump
		cmpl   $0x000000,_0cf494_data
		jne    _01cb55_jump
		call   _01cc80_func
		test   %al,%al
		jne    _01cb55_jump
		call   _01cb60_func

	_01cb55_jump:
		incl   _0cf494_data
		pop    %ebx
		ret    



_01cb60_func:
		push   %edx
		cmpb   $0x000000,_0cf41e_data
		je     _01cb72_jump
		xor    %dl,%dl
		mov    %dl,_0cf444_data

	_01cb72_jump:
		cmpb   $0x000000,_0cf444_data
		je     _01cb85_jump
		mov    $0x000012,%eax
		call   _02a868_func

	_01cb85_jump:
		pop    %edx
		ret    



_01cb88_func:
		push   %edx
		cmpb   $0x000000,_0cf41e_data
		je     _01cb9a_jump
		xor    %dl,%dl
		mov    %dl,_0cf444_data

	_01cb9a_jump:
		cmpb   $0x000000,_0cf444_data
		je     _01cbad_jump
		mov    $0x00000c,%eax
		call   _02a868_func

	_01cbad_jump:
		pop    %edx
		mov    %eax,%eax



_01cbb0_func:
		ret    



_01cbb4_func:
		cmpb   $0x000000,_0cf410_data
		je     _01cbb0_func
		mov    $0x000008,%eax
		jmp    _072a4c_jump



_01cbc8_func:
		push   %ebx
		cmpl   $0x0000b4,_0cf494_data
		jle    _01cbdd_jump
		xor    %ebx,%ebx
		mov    %ebx,_0cf494_data

	_01cbdd_jump:
		cmpb   $0x000000,_0cf444_data
		je     _01cbfd_jump
		cmpl   $0x000000,_0cf494_data
		jne    _01cbfd_jump
		call   _01cc80_func
		test   %al,%al
		jne    _01cbfd_jump
		call   _01cc08_func

	_01cbfd_jump:
		incl   _0cf494_data
		pop    %ebx
		ret    



_01cc08_func:
		push   %edx
		cmpb   $0x000000,_0cf41e_data
		je     _01cc1a_jump
		xor    %dl,%dl
		mov    %dl,_0cf444_data

	_01cc1a_jump:
		cmpb   $0x000000,_0cf444_data
		je     _01cc2d_jump
		mov    $0x000013,%eax
		call   _02a868_func

	_01cc2d_jump:
		pop    %edx
		ret    



_01cc30_func:
		push   %edx
		cmpb   $0x000000,_0cf41e_data
		je     _01cc42_jump
		xor    %dl,%dl
		mov    %dl,_0cf444_data

	_01cc42_jump:
		cmpb   $0x000000,_0cf444_data
		je     _01cc55_jump
		mov    $0x00000a,%eax
		call   _02a868_func

	_01cc55_jump:
		pop    %edx
		mov    %eax,%eax



_01cc58_func:
		ret    



_01cc5c_func:
		push   %edx
		cmpb   $0x000000,_0cf444_data
		je     _01cc75_jump
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a710_func

	_01cc75_jump:
		xor    %edx,%edx
		mov    %edx,_0cd2ac_data
		pop    %edx
		ret    



_01cc80_func:
		cmpb   $0x000000,_0cf444_data
		je     _01cc98_jump
		call   _029530_func
		and    $_0000ff_case,%eax
		jmp    _0296e4_jump

	_01cc98_jump:
		xor    %al,%al
		ret    



_01cca0_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		mov    (%ebx),%ecx
		shl    $0x000003,%edx
		add    %edx,%ecx
		testb  $0x000010,0x000007(%ecx)
		je     _01ccc8_jump
		cmpb   $0x000000,0x00006b(%eax)
		jmp    _01ccef_jump

	_01ccc8_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x00000a(%ebx,%edx,4),%dx
		and    $0x00ffff,%edx
		mov    0x00006b(%eax),%al
		and    $_0000ff_case,%eax
		dec    %edx
		cmp    %edx,%eax

	_01ccef_jump:
		sete   %al
		and    $_0000ff_case,%eax
		je     _01cd12_jump
		mov    0x000005(%ecx),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _01cd12_jump
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01cd12_jump:
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cd18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cc7a2_data,%eax
		mov    _0cc7a0_data,%esi
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		mov    %eax,(%esp)
		test   %eax,%eax
		jle    _01cd7d_jump

	_01cd37_jump:
		mov    %ecx,%edx
		and    $0x00000f,%edx
		mov    %ecx,%edi
		mov    0x000081(%esi),%dh
		mov    0x000024(%esi),%eax
		shl    $0x000005,%dh
		xor    %ebx,%ebx
		shr    $0x000007,%dh
		add    %eax,%eax
		mov    %dh,%bl
		sar    $0x000004,%edi
		add    %eax,%ebx
		lea    0x000000(,%edi,4),%eax
		and    $_0000ff_case,%edx
		add    $_0cc948_data,%eax
		inc    %ecx
		call   _05d160_func
		mov    (%esp),%ebx
		add    $0x000084,%esi
		cmp    %ebx,%ecx
		jl     _01cd37_jump

	_01cd7d_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cd88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0cc7a2_data,%ebp
		mov    _0cc7a0_data,%esi
		sar    $0x000010,%ebp
		xor    %edi,%edi
		test   %ebp,%ebp
		jle    _01ce03_jump

	_01cda6_jump:
		cmpw   $0x00003a,0x000060(%esi)
		je     _01cdf8_jump
		mov    %edi,%eax
		mov    %edi,%edx
		sar    $0x000004,%eax
		and    $0x00000f,%edx
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		shl    $0x000002,%eax
		and    $_0000ff_case,%edx
		add    $_0cc948_data,%eax
		call   _05d194_func
		mov    0x000004(%esp),%eax
		mov    %eax,0x000024(%esi)
		mov    (%esp),%al
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%esi)
		shl    $0x000002,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)

	_01cdf8_jump:
		inc    %edi
		add    $0x000084,%esi
		cmp    %ebp,%edi
		jl     _01cda6_jump

	_01ce03_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01ce10_switch:
		.long   _01d04b_case
		.long   _01d05c_case
		.long   _01d065_case
		.long   _01d051_case

_01ce20_switch:
		.long   _01d0b6_case
		.long   _01d0c7_case
		.long   _01d0d0_case
		.long   _01d0bc_case




_01ce30_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %bl,0x000024(%esp)
		mov    %ecx,0x000018(%esp)
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		shl    $0x000002,%eax
		mov    0x00000c(%edx),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%edi),%al
		mov    (%edx),%ebp
		shl    $0x000003,%eax
		add    %eax,%ebp
		xor    %edx,%edx
		mov    0x000002(%ebp),%dl
		mov    0x000005(%ebp),%al
		mov    %dx,0x000008(%esp)
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x00006b(%edi),%dl
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _01cf14_jump
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%edi),%ebx
		mov    0x00000a(%ebx,%eax,4),%bl
		testb  $0x000010,0x000007(%ebp)
		je     _01cea5_jump
		mov    $0xffffffff,%eax
		jmp    _01ceaa_jump

	_01cea5_jump:
		mov    $0x000001,%eax

	_01ceaa_jump:
		xor    %ecx,%ecx
		movswl %dx,%edx
		mov    %bl,%cl
		add    %eax,%edx
		dec    %ecx
		movswl %dx,%eax
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jl     _01cec8_jump
		cmp    %ecx,%eax
		jg     _01cec8_jump
		mov    $0x000001,%eax
		jmp    _01ceca_jump

	_01cec8_jump:
		xor    %eax,%eax

	_01ceca_jump:
		test   %eax,%eax
		jne    _01cf14_jump
		mov    0x000003(%ebp),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000004(%ebp),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000002(%edx),%al
		mov    %al,%bl
		mov    %ax,0x000008(%esp)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%edi),%ebx
		mov    0x000007(%edx),%cl
		mov    0x00000a(%ebx,%eax,4),%al
		test   $0x000010,%cl
		je     _01cf12_jump
		xor    %edx,%edx
		mov    %al,%dl
		dec    %edx
		jmp    _01cf14_jump

	_01cf12_jump:
		xor    %edx,%edx

	_01cf14_jump:
		xor    %eax,%eax
		mov    0x00006b(%edi),%al
		mov    %ax,0x000010(%esp)
		xor    %eax,%eax
		mov    0x00006a(%edi),%al
		lea    0x000014(%esp),%ecx
		mov    %ax,0x000020(%esp)
		mov    0x000008(%esp),%al
		lea    0x00000c(%esp),%ebx
		mov    %al,0x00006a(%edi)
		lea    0x000004(%esp),%eax
		mov    %dl,0x00006b(%edi)
		push   %eax
		lea    0x000020(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x00002c(%esp),%dl
		mov    %edi,%eax
		call   _01d7e0_func
		mov    0x000020(%esp),%al
		mov    %al,0x00006a(%edi)
		mov    0x000010(%esp),%al
		mov    %al,0x00006b(%edi)
		mov    0x000018(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000028(%esi),%cx
		add    %edx,%ebx
		sub    %ecx,%ebx

	_01cf6f_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _01cf7a_jump
		neg    %eax

	_01cf7a_jump:
		cmp    $0x000010,%eax
		jl     _01cfb1_jump
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _01cf8f_jump
		mov    $0x000001,%eax
		jg     _01cf8f_jump
		neg    %eax

	_01cf8f_jump:
		shl    $0x000004,%eax
		mov    0x000028(%esi),%ecx
		add    %eax,%ecx
		mov    %edx,%eax
		mov    %ecx,0x000028(%esi)
		cmp    $0x000000,%eax
		je     _01cfaa_jump
		mov    $0x000001,%eax
		jg     _01cfaa_jump
		neg    %eax

	_01cfaa_jump:
		shl    $0x000004,%eax
		sub    %eax,%ebx
		jmp    _01cf6f_jump

	_01cfb1_jump:
		mov    0x000014(%esp),%ecx
		mov    0x000038(%esp),%eax
		mov    0x00002c(%esi),%dx
		add    %eax,%ecx
		sub    %edx,%ecx

	_01cfc1_jump:
		movswl %cx,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _01cfcc_jump
		neg    %eax

	_01cfcc_jump:
		cmp    $0x000010,%eax
		jl     _01d003_jump
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _01cfe1_jump
		mov    $0x000001,%eax
		jg     _01cfe1_jump
		neg    %eax

	_01cfe1_jump:
		shl    $0x000004,%eax
		mov    0x00002c(%esi),%ebp
		add    %eax,%ebp
		mov    %edx,%eax
		mov    %ebp,0x00002c(%esi)
		cmp    $0x000000,%eax
		je     _01cffc_jump
		mov    $0x000001,%eax
		jg     _01cffc_jump
		neg    %eax

	_01cffc_jump:
		shl    $0x000004,%eax
		sub    %eax,%ecx
		jmp    _01cfc1_jump

	_01d003_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		mov    _092535_data(,%eax,4),%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		mov    _092535_data(,%eax,4),%al
		shl    $0x000003,%dl
		shl    $0x000003,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		and    $_0000ff_case,%eax
		add    %eax,%eax
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp
		mov    %dl,%al
		add    %ebp,%eax
		cmp    $0x000003,%eax
		ja     _01d072_jump
		jmp    *%cs:_01ce10_switch(,%eax,4)

	_01d04b_case:
		add    0x000040(%edi),%bx
		jmp    _01d072_jump

	_01d051_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%ebx
		jmp    _01d06b_jump

	_01d05c_case:
		add    0x000040(%edi),%bx
		shl    $0x000004,%ebx
		jmp    _01d072_jump

	_01d065_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax

	_01d06b_jump:
		call   _055230_func
		add    %eax,%ebx

	_01d072_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		mov    _092535_data(,%eax,4),%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		mov    _092535_data(,%eax,4),%al
		shl    $0x000002,%dl
		shl    $0x000002,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		and    $_0000ff_case,%eax
		add    %eax,%eax
		and    $_0000ff_case,%edx
		add    %edx,%eax
		cmp    $0x000003,%eax
		ja     _01d0dd_jump
		jmp    *%cs:_01ce20_switch(,%eax,4)

	_01d0b6_case:
		add    0x000042(%edi),%cx
		jmp    _01d0dd_jump

	_01d0bc_case:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%ecx
		jmp    _01d0d6_jump

	_01d0c7_case:
		add    0x000042(%edi),%cx
		shl    $0x000004,%ecx
		jmp    _01d0dd_jump

	_01d0d0_case:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax

	_01d0d6_jump:
		call   _055230_func
		add    %eax,%ecx

	_01d0dd_jump:
		mov    %bx,0x000040(%esi)
		mov    %cx,0x000042(%esi)
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01d0f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cc7a0_data,%eax
		mov    _0cc7a4_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _01d119_jump

	_01d108_jump:
		cmp    0x000060(%eax),%cx
		je     _01d119_jump
		inc    %edx
		add    $0x000084,%eax
		cmp    %bx,%dx
		jl     _01d108_jump

	_01d119_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01d154_func:
		push   %esi
		push   %edi
		mov    %eax,%esi
		add    (%ecx),%dx
		mov    0x00002c(%eax),%ax
		and    $0x00000f,%dh
		mov    0x00003e(%esi),%di
		mov    %eax,%esi
		movswl %dx,%eax
		sar    $0x000003,%eax
		cwtl   
		sub    %edi,%esi
		call   _05d270_func
		movswl %ax,%edi
		movswl %bx,%eax
		imul   %edi,%eax
		sar    $0x000009,%eax
		mov    %dx,(%ecx)
		sub    %esi,%eax
		pop    %edi
		pop    %esi
		ret    



_01d18c_func:
		mov    %ax,_0cf230_data
		mov    %dx,_0cf22e_data
		ret    



_01d19c_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cmpb   $0x000000,_0cf454_data
		jne    _01d1ae_jump
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_01d1ae_jump:
		movswl %ax,%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		add    $0x000100,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d1dc_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		movswl %ax,%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		add    $0x000100,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%ecx
		imul   %ecx,%eax
		sar    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d204_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0cf22e_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d240_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0cf22c_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d27c_func:
		mov    %al,_0cf454_data
		ret    



_01d284_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0cf22e_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		shl    $0x000008,%edx
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d2bc_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0cf22c_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		shl    $0x000008,%edx
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d2f4_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%ecx
		shl    $0x000002,%eax
		lea    (%ecx,%eax,1),%esi
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		lea    0x000000(,%eax,8),%ecx
		mov    (%esi),%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    0x000004(%ebx),%ebx
		mov    0x000002(%eax),%cl
		mov    0x000005(%eax),%dh
		lea    0x000000(,%ecx,4),%eax
		and    $0x00000f,%dh
		sub    %ecx,%eax
		movzbw %dh,%si
		imul   0x00000a(%ebx,%eax,4),%si
		xor    %ebx,%ebx
		mov    %dl,%bl
		imul   %esi,%ebx
		xor    %eax,%eax
		mov    %dh,%al
		mov    _0cf3ed_data(%eax),%al
		xor    %ah,%ah
		sub    %eax,%ebx
		mov    %ebx,%eax
		inc    %eax
		test   %ax,%ax
		jle    _01d35a_jump
		cwtl   
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_01d35a_jump:
		mov    $0x000001,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01d364_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %edx,%esi
		mov    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x000004(%ebx,%edx,4),%edx
		xor    %ebx,%ebx
		mov    0x00006b(%eax),%bl
		shl    $0x000002,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000002(%edx),%bl
		mov    %bx,(%ecx)
		xor    %ebx,%ebx
		mov    0x000018(%esp),%ebp
		mov    0x000003(%edx),%bl
		mov    %bx,0x000000(%ebp)
		testb  $0x000008,0x000081(%eax)
		jne    _01d3b7_jump
		xor    %ebx,%ebx
		mov    0x000028(%eax),%cx
		mov    (%edx),%bl
		add    %ebx,%ecx
		jmp    _01d3e7_jump

	_01d3b7_jump:
		xor    %ebx,%ebx
		mov    0x000068(%eax),%bl
		add    %ebx,%ebx
		mov    %ebx,(%esp)
		mov    0x000028(%eax),%bx
		add    (%esp),%ebx
		mov    %ebx,(%esp)
		xor    %ebx,%ebx
		mov    (%edx),%bl
		mov    %ebx,0x000004(%esp)
		mov    (%esp),%ebx
		sub    0x000004(%esp),%ebx
		mov    %ebx,0x000004(%esp)
		mov    (%ecx),%bx
		mov    0x000004(%esp),%ecx
		sub    %ebx,%ecx

	_01d3e7_jump:
		mov    %cx,(%esi)
		mov    0x000001(%edx),%dl
		mov    0x00002c(%eax),%ax
		xor    %dh,%dh
		add    %edx,%eax
		mov    %ax,(%edi)
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01d434_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006c(%eax)
		ret    



_01d43c_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006d(%eax)
		ret    



_01d444_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006d(%eax)
		mov    %bl,0x00006c(%eax)
		ret    



_01d450_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x00008a,%ax
		jb     _01d4cc_jump
		jbe    _01d56a_jump
		cmp    $0x0000ae,%ax
		jb     _01d4a3_jump
		jbe    _01d563_jump
		cmp    $0x0000bd,%ax
		jb     _01d494_jump
		jbe    _01d543_jump
		cmp    $0x0000e1,%ax
		jb     _01d578_jump
		cmp    $0x0000e2,%ax
		jbe    _01d563_jump
		jmp    _01d578_jump

	_01d494_jump:
		cmp    $0x0000b8,%ax
		je     _01d563_jump
		jmp    _01d578_jump

	_01d4a3_jump:
		cmp    $0x00008c,%ax
		jb     _01d578_jump
		jbe    _01d571_jump
		cmp    $0x00009a,%ax
		jb     _01d578_jump
		cmp    $0x00009b,%ax
		jbe    _01d56a_jump
		jmp    _01d578_jump

	_01d4cc_jump:
		cmp    $0x000031,%ax
		jb     _01d4f9_jump
		jbe    _01d551_jump
		cmp    $0x00006a,%ax
		jb     _01d578_jump
		jbe    _01d54a_jump
		cmp    $0x00007b,%ax
		je     _01d558_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d4f9_jump:
		cmp    $0x000016,%ax
		jb     _01d578_jump
		jbe    _01d512_jump
		cmp    $0x00002d,%ax
		je     _01d531_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d512_jump:
		mov    _0cf282_data,%ax
		cmp    $0x000001,%ax
		jb     _01d578_jump
		jbe    _01d578_jump
		cmp    $0x000002,%ax
		jne    _01d578_jump
		mov    $0x000040,%eax
		pop    %edx
		ret    

	_01d531_jump:
		mov    _0cf282_data,%ax
		cmp    $0x000001,%ax
		jb     _01d543_jump
		jbe    _01d543_jump
		cmp    $0x000002,%ax

	_01d543_jump:
		mov    $0x000012,%eax
		pop    %edx
		ret    

	_01d54a_jump:
		mov    $0x000046,%eax
		pop    %edx
		ret    

	_01d551_jump:
		mov    $0x000080,%eax
		pop    %edx
		ret    

	_01d558_jump:
		mov    0x000075(%edx),%al
		cmp    $0x000005,%al
		jb     _01d578_jump
		cmp    $0x000007,%al
		ja     _01d578_jump

	_01d563_jump:
		mov    $0x000050,%eax
		pop    %edx
		ret    

	_01d56a_jump:
		mov    $0x000068,%eax
		pop    %edx
		ret    

	_01d571_jump:
		mov    $0x000024,%eax
		pop    %edx
		ret    

	_01d578_jump:
		mov    $0x000028,%eax
		pop    %edx
		ret    



_01d580_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000060(%eax),%ax
		cmp    $0x00008c,%ax
		jb     _01d5f7_jump
		jbe    _01d6c9_jump
		cmp    $0x0000b8,%ax
		jb     _01d5d4_jump
		jbe    _01d6d3_jump
		cmp    $0x0000c3,%ax
		jb     _01d5c5_jump
		jbe    _01d6dd_jump
		cmp    $0x0000e1,%ax
		jb     _01d6e7_jump
		cmp    $0x0000e2,%ax
		jbe    _01d6d3_jump
		jmp    _01d6e7_jump

	_01d5c5_jump:
		cmp    $0x0000bd,%ax
		je     _01d683_jump
		jmp    _01d6e7_jump

	_01d5d4_jump:
		cmp    $0x00009a,%ax
		jb     _01d6e7_jump
		cmp    $0x00009b,%ax
		jbe    _01d6bf_jump
		cmp    $0x0000ae,%ax
		je     _01d6d3_jump
		jmp    _01d6e7_jump

	_01d5f7_jump:
		cmp    $0x000031,%ax
		jb     _01d631_jump
		jbe    _01d6a1_jump
		cmp    $0x00007b,%ax
		jb     _01d623_jump
		jbe    _01d68d_jump
		cmp    $0x00008a,%ax
		je     _01d6bf_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d623_jump:
		cmp    $0x00006a,%ax
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d631_jump:
		cmp    $0x000016,%ax
		jb     _01d6e7_jump
		jbe    _01d64d_jump
		cmp    $0x00002d,%ax
		je     _01d671_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d64d_jump:
		mov    _0cf282_data,%ax
		cmp    $0x000001,%ax
		jb     _01d6e7_jump
		jbe    _01d6e7_jump
		cmp    $0x000002,%ax
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d671_jump:
		mov    _0cf282_data,%ax
		cmp    $0x000001,%ax
		jb     _01d683_jump
		jbe    _01d683_jump
		cmp    $0x000002,%ax

	_01d683_jump:
		mov    $0x000012,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d68d_jump:
		mov    0x000075(%ebx),%al
		cmp    $0x000005,%al
		jb     _01d6ec_jump
		jbe    _01d6b5_jump
		cmp    $0x000007,%al
		ja     _01d6ec_jump
		cmpw   $0x000000,0x000042(%ebx)
		jle    _01d6ab_jump

	_01d6a1_jump:
		mov    $0x000040,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d6ab_jump:
		mov    $0x00004e,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d6b5_jump:
		mov    $0x000048,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d6bf_jump:
		mov    $0x000068,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d6c9_jump:
		mov    $0x000020,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d6d3_jump:
		mov    $0x000060,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d6dd_jump:
		mov    $0x00005a,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d6e7_jump:
		mov    $0x000028,%edx

	_01d6ec_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_01d6f4_func:
		push   %ecx
		push   %esi
		movswl %bx,%ebx
		movswl %dx,%edx
		mov    0x00002c(%eax),%ecx
		mov    0x000028(%eax),%esi
		add    %ecx,%ebx
		add    %esi,%edx
		sar    $0x000004,%ebx
		sar    $0x000004,%edx
		movswl %bx,%ebx
		movswl %dx,%eax
		mov    %ebx,%edx
		call   _01e1b4_func
		and    $_0000ff_case,%eax
		mov    _0924f4_data(%eax),%al
		shl    $0x000002,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		pop    %esi
		pop    %ecx
		ret    



_01d730_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %ebx,%edx
		mov    0x000008(%esi),%bx
		and    $0x00003f,%bh
		xor    %ecx,%ecx
		and    $0x00ffff,%ebx
		mov    0x00006b(%eax),%cl
		imul   %ecx,%ebx
		lea    0x000000(,%ebx,4),%ecx
		mov    (%esi),%ebx
		mov    0x000008(%edx),%si
		and    $0x003fff,%esi
		movzwl %si,%ebp
		movswl %di,%esi
		imul   %ebp,%esi
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    0x000075(%eax),%cl
		mov    (%edx),%edx
		shl    $0x000002,%ecx
		shl    $0x000002,%esi
		add    %ecx,%ebx
		add    %esi,%edx
		movzbl 0x000003(%ebx),%esi
		add    %edx,%ecx
		lea    0x000000(,%esi,4),%edx
		sub    %esi,%edx
		mov    (%eax),%esi
		movzbw 0x000005(%esi,%edx,4),%si
		testb  $0x000008,0x000081(%eax)
		je     _01d7ba_jump
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		add    %edx,%edx
		sub    %esi,%edx
		mov    %edx,%edi
		movzbw 0x000001(%ecx),%si
		sub    %esi,%edi
		mov    %edi,%esi
		movzbw 0x000001(%ebx),%di
		sub    %edi,%edx
		jmp    _01d7c4_jump

	_01d7ba_jump:
		xor    %edx,%edx
		movzbw 0x000001(%ecx),%si
		mov    0x000001(%ebx),%dl

	_01d7c4_jump:
		mov    0x000002(%ebx),%bl
		mov    0x000002(%ecx),%cl
		xor    %bh,%bh
		xor    %ch,%ch
		sub    %esi,%edx
		sub    %ecx,%ebx
		mov    %dx,0x00004e(%eax)
		mov    %bx,0x00004c(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_01d7e0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %dx,0x000004(%esp)
		mov    %ebx,%esi
		mov    %ecx,%edi
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		shl    $0x000002,%edx
		mov    0x000004(%eax),%ebx
		add    %ebx,%edx
		mov    0x000008(%edx),%bx
		xor    %ecx,%ecx
		and    $0x00003f,%bh
		mov    %bx,%cx
		xor    %ebx,%ebx
		mov    0x00006b(%eax),%bl
		imul   %ecx,%ebx
		mov    (%edx),%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %ecx,%ecx
		mov    0x000003(%ebx),%dl
		mov    %dl,%cl
		mov    %dl,0x000008(%esp)
		lea    0x000000(,%ecx,4),%edx
		sub    %ecx,%edx
		shl    $0x000002,%edx
		mov    (%eax),%ecx
		add    %ecx,%edx
		cmpb   $0x000000,0x000008(%esp)
		je     _01d91b_jump
		cmpb   $0x000000,0x000004(%edx)
		je     _01d91b_jump
		xor    %ecx,%ecx
		mov    0x000007(%edx),%cl
		mov    0x000020(%esp),%ebp
		mov    %cx,0x000000(%ebp)
		xor    %ecx,%ecx
		mov    0x000024(%esp),%ebp
		mov    0x000008(%edx),%cl
		mov    %cx,0x000000(%ebp)
		mov    0x000081(%eax),%cl
		shl    $0x000004,%cl
		shr    $0x000007,%cl
		movzbl %cl,%ebp
		mov    0x00000b(%edx),%cl
		shl    $0x000005,%cl
		shr    $0x000007,%cl
		mov    %cl,0x00000c(%esp)
		xor    %ecx,%ecx
		mov    0x00000c(%esp),%cl
		xor    %ebp,%ecx
		je     _01d8d2_jump
		xor    %ecx,%ecx
		mov    0x000001(%ebx),%cl
		mov    %ecx,(%esp)
		mov    0x000009(%edx),%cl
		and    $0x00000f,%cl
		mov    (%esp),%ebp
		and    $_0000ff_case,%ecx
		add    %ecx,%ebp
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		add    %ecx,%ecx
		sub    %ebp,%ecx
		mov    %ecx,(%esp)
		xor    %ecx,%ecx
		mov    (%esp),%ebp
		mov    0x000005(%edx),%cl
		sub    %ecx,%ebp
		mov    %ebp,%ecx
		mov    0x000028(%eax),%ebp
		jmp    _01d8e6_jump

	_01d8d2_jump:
		mov    0x000001(%ebx),%cl
		mov    0x000028(%eax),%ebp
		add    %ecx,%ebp
		mov    0x000009(%edx),%cl
		and    $0x00000f,%cl
		and    $_0000ff_case,%ecx

	_01d8e6_jump:
		add    %ecx,%ebp
		mov    %ebp,(%esp)
		mov    (%esp),%ecx
		mov    %cx,(%esi)
		mov    0x000002(%ebx),%bl
		mov    0x000009(%edx),%dl
		and    $_0000ff_case,%ebx
		shr    $0x000004,%dl
		and    $_0000ff_case,%edx
		add    %ebx,%edx
		add    0x00002c(%eax),%edx
		mov    $0x000001,%al
		mov    %dx,(%edi)
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_01d91b_jump:
		xor    %al,%al
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01d928_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    0x000018(%esp),%ebp
		mov    %eax,%esi
		mov    %edx,%edi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		shl    $0x000002,%eax
		mov    %eax,(%esp)
		mov    (%esp),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%edx),%eax
		add    (%esp),%eax
		testb  $0x000040,0x000007(%eax)
		je     _01d987_jump
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000040,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x00000e,0x000000(%ebp)
		jmp    _01da43_jump

	_01d987_jump:
		mov    0x00006d(%esi),%dh
		cmp    $0x000005,%dh
		jne    _01d9b7_jump
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x00002e,0x000000(%ebp)
		jmp    _01da43_jump

	_01d9b7_jump:
		cmp    $0x000007,%dh
		jne    _01da20_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000020,%ax
		jle    _01d9ca_jump
		sub    $0x000020,%eax

	_01d9ca_jump:
		cmp    $0x000009,%ax
		jle    _01d9fb_jump
		cmp    $0x000017,%ax
		jge    _01d9fb_jump
		mov    0x000028(%esi),%ax
		add    $0x000040,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000036,%eax
		mov    %ax,(%ebx)
		movw   $0x000024,(%ecx)
		movw   $0x000014,0x000000(%ebp)
		jmp    _01da43_jump

	_01d9fb_jump:
		mov    0x000028(%esi),%ax
		add    $0x000046,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%ebx)
		movw   $0x000014,(%ecx)
		movw   $0x000028,0x000000(%ebp)
		jmp    _01da43_jump

	_01da20_jump:
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000018,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x000036,0x000000(%ebp)

	_01da43_jump:
		cmpw   $0x000000,0x00005a(%esi)
		je     _01dae3_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    %eax,0x000004(%esp)
		mov    0x000028(%esi),%ax
		add    0x000004(%esp),%eax
		mov    %ax,0x000004(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		call   _01d18c_func
		mov    0x000058(%esi),%eax
		movswl (%edi),%edx
		sar    $0x000010,%eax
		call   _01d204_func
		mov    %ax,(%edi)
		mov    0x000058(%esi),%eax
		movswl (%ebx),%edx
		sar    $0x000010,%eax
		call   _01d240_func
		mov    %ax,(%ebx)
		mov    0x000058(%esi),%eax
		movswl (%ecx),%edx
		sar    $0x000010,%eax
		call   _01d1dc_func
		mov    %ax,(%ecx)
		mov    0x000058(%esi),%eax
		movswl 0x000000(%ebp),%edx
		sar    $0x000010,%eax
		call   _01d1dc_func
		mov    %ax,0x000000(%ebp)
		xor    %eax,%eax
		mov    0x000038(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000036(%esi),%cx
		mov    0x000068(%esi),%al
		add    %ecx,%eax
		cwtl   
		call   _01d18c_func

	_01dae3_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01daec_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,(%esp)
		movw   $0x000006,0x000008(%esp)
		lea    0x000004(%esp),%edx
		push   %edx
		mov    %edi,%edx
		call   _01d364_func
		cmpb   $0x000002,0x00006d(%esi)
		jne    _01db27_jump
		mov    0x00006c(%esi),%dl
		test   %dl,%dl
		je     _01db20_jump
		cmp    $0x000004,%dl
		jne    _01db27_jump

	_01db20_jump:
		movw   $0x000003,0x000008(%esp)

	_01db27_jump:
		mov    0x00001c(%esp),%edx
		mov    (%esp),%ebx
		mov    %ebp,%ecx
		push   %edx
		mov    %esi,%eax
		mov    0x00000a(%esp),%edx
		push   %ebx
		sar    $0x000010,%edx
		mov    %edi,%ebx
		call   _01d7e0_func
		mov    (%edi),%ax
		mov    0x000020(%esp),%edx
		sub    $0x000007,%eax
		mov    %ax,(%edx)
		mov    0x00001c(%esp),%edx
		mov    0x000000(%ebp),%ax
		mov    (%edx),%cx
		mov    0x000024(%esp),%edx
		add    %ecx,%eax
		mov    %ax,(%edx)
		mov    (%esp),%eax
		mov    (%eax),%ax
		mov    0x000028(%esp),%edx
		add    $0x00000e,%eax
		mov    %ax,(%edx)
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    0x00002c(%esp),%eax
		sar    %edx
		mov    %dx,(%eax)
		mov    (%edi),%ax
		add    $0x000004,%eax
		mov    (%esp),%edx
		mov    %ax,(%edi)
		subw   $0x000008,(%edx)
		mov    0x000000(%ebp),%cx
		add    $0x000004,%ecx
		mov    0x00001c(%esp),%edx
		mov    %cx,0x000000(%ebp)
		subw   $0x000008,(%edx)
		cmpb   $0x000000,0x00006d(%esi)
		jne    _01dbb6_jump
		cmpb   $0x000010,0x00006c(%esi)
		je     _01dbc2_jump

	_01dbb6_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _01dbd8_jump
		cmpb   $0x000013,0x00006c(%esi)
		jne    _01dbd8_jump

	_01dbc2_jump:
		mov    0x00001c(%esp),%ecx
		mov    (%esp),%eax
		push   %ecx
		mov    %edi,%ebx
		xor    %edx,%edx
		push   %eax
		mov    %ebp,%ecx
		mov    %esi,%eax
		call   _01d7e0_func

	_01dbd8_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000014



_01dbe4_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0ce06c_data,%ebx
		mov    _0ce0ac_data,%dl
		mov    0x000028(%eax),%ecx
		add    %ebx,%edx
		xor    %ebx,%ebx
		sub    %ecx,%edx
		mov    0x000068(%eax),%bl
		sub    %ebx,%edx
		test   %edx,%edx
		jle    _01dc12_jump
		orb    $0x000008,0x000081(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01dc12_jump:
		andb   $0x0000f7,0x000081(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01dc20_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x000009,%ax
		jb     _01dc3f_jump
		jbe    _01dc45_jump
		cmp    $0x000090,%ax
		jb     _01dc50_jump
		jbe    _01dc45_jump
		cmp    $0x0000a5,%ax
		je     _01dc45_jump
		jmp    _01dc50_jump

	_01dc3f_jump:
		cmp    $0x000003,%ax
		jne    _01dc50_jump

	_01dc45_jump:
		cmpb   $0x000001,0x00007b(%edx)
		sete   %al
		xor    %ah,%ah
		pop    %edx
		ret    

	_01dc50_jump:
		cmpb   $0x000001,0x00007b(%edx)
		setae  %al
		xor    %ah,%ah
		pop    %edx
		ret    



_01dc5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf2b0_data,%bx
		mov    0x00002c(%eax),%dx
		sub    %ebx,%edx
		mov    %dx,0x000038(%eax)
		mov    _0cf2ae_data,%cx
		mov    0x000028(%eax),%dx
		sub    %ecx,%edx
		add    $0x000008,%edx
		mov    %dx,0x000036(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01dc88_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		movb   $_0000ff_case,(%esp)
		mov    0x000060(%ecx),%ax
		cmp    $0x000046,%ax
		jb     _01dd04_jump
		jbe    _01df5b_jump
		cmp    $0x00009c,%ax
		jb     _01dcda_jump
		jbe    _01e0b2_jump
		cmp    $0x0000c3,%ax
		jb     _01dccb_jump
		jbe    _01e0e9_jump
		cmp    $0x0000d9,%ax
		je     _01e01c_jump
		jmp    _01e161_jump

	_01dccb_jump:
		cmp    $0x0000a5,%ax
		je     _01de36_jump
		jmp    _01e161_jump

	_01dcda_jump:
		cmp    $0x00007b,%ax
		jb     _01dcf5_jump
		jbe    _01dd63_jump
		cmp    $0x000098,%ax
		je     _01e05f_jump
		jmp    _01e161_jump

	_01dcf5_jump:
		cmp    $0x000064,%ax
		je     _01e03f_jump
		jmp    _01e161_jump

	_01dd04_jump:
		cmp    $0x000023,%ax
		jb     _01dd3e_jump
		jbe    _01df1a_jump
		cmp    $0x00003c,%ax
		jb     _01dd2f_jump
		cmp    $0x00003d,%ax
		jbe    _01dfb0_jump
		cmp    $0x000041,%ax
		je     _01dff5_jump
		jmp    _01e161_jump

	_01dd2f_jump:
		cmp    $0x00002b,%ax
		je     _01df1a_jump
		jmp    _01e161_jump

	_01dd3e_jump:
		cmp    $0x000009,%ax
		jb     _01dd59_jump
		jbe    _01de36_jump
		cmp    $0x000014,%ax
		je     _01dec9_jump
		jmp    _01e161_jump

	_01dd59_jump:
		test   %ax,%ax
		je     _01ddbf_jump
		jmp    _01e161_jump

	_01dd63_jump:
		mov    0x000075(%ecx),%dh
		cmp    $0x000001,%dh
		je     _01dd7e_jump
		cmp    $0x000002,%dh
		je     _01dd7e_jump
		cmp    $0x000004,%dh
		je     _01dd7e_jump
		cmp    $0x000007,%dh
		jne    _01e161_jump

	_01dd7e_jump:
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01dd9d_jump
		mov    0x000081(%ecx),%al
		mov    $0x000003,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e161_jump

	_01dd9d_jump:
		cmp    $0x000001,%ah
		jne    _01e161_jump
		mov    0x000081(%ecx),%bl
		mov    $0x000002,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e161_jump

	_01ddbf_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01ddf5_jump
		mov    0x00006c(%ecx),%dl
		cmp    $0x000003,%dl
		je     _01e161_jump
		cmp    $0x000001,%dl
		je     _01e161_jump
		cmp    $0x000005,%dl
		je     _01e161_jump
		cmp    $0x000004,%dl
		je     _01e161_jump
		cmp    $0x000006,%dl
		je     _01e161_jump

	_01ddf5_jump:
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01de14_jump
		mov    0x000081(%ecx),%al
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e161_jump

	_01de14_jump:
		cmp    $0x000001,%ah
		jne    _01e161_jump
		mov    0x000081(%ecx),%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e161_jump

	_01de36_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01de51_jump
		mov    0x00006c(%ecx),%bl
		cmp    $0x000003,%bl
		je     _01e161_jump
		cmp    $0x000001,%bl
		je     _01e161_jump

	_01de51_jump:
		mov    0x000081(%ecx),%al
		test   $0x000010,%al
		je     _01de92_jump
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01de74_jump
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e161_jump

	_01de74_jump:
		cmp    $0x000001,%ah
		jne    _01e161_jump
		mov    %al,%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e161_jump

	_01de92_jump:
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01deab_jump
		mov    $0x000006,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e161_jump

	_01deab_jump:
		cmp    $0x000001,%ah
		jne    _01e161_jump
		mov    %al,%bl
		mov    $0x000005,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e161_jump

	_01dec9_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01ded9_jump
		cmpb   $0x000003,0x00006c(%ecx)
		je     _01e161_jump

	_01ded9_jump:
		mov    0x000070(%ecx),%dh
		test   %dh,%dh
		jne    _01def9_jump
		mov    0x000081(%ecx),%dl
		mov    $0x000001,%ah
		or     $0x000008,%dl
		mov    %ah,(%esp)
		mov    %dl,0x000081(%ecx)
		jmp    _01e161_jump

	_01def9_jump:
		cmp    $0x000001,%dh
		jne    _01e161_jump
		mov    0x000081(%ecx),%al
		xor    %bh,%bh
		and    $0x0000f7,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e161_jump

	_01df1a_jump:
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01df39_jump
		mov    0x000081(%ecx),%al
		mov    $0x000005,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e161_jump

	_01df39_jump:
		cmp    $0x000001,%ah
		jne    _01e161_jump
		mov    0x000081(%ecx),%bl
		mov    $0x000004,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e161_jump

	_01df5b_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01df6b_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _01e161_jump

	_01df6b_jump:
		mov    0x000081(%ecx),%al
		test   $0x000010,%al
		je     _01e161_jump
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01df92_jump
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e161_jump

	_01df92_jump:
		cmp    $0x000001,%ah
		jne    _01e161_jump
		mov    %al,%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e161_jump

	_01dfb0_jump:
		mov    0x000081(%ecx),%al
		test   $0x000010,%al
		je     _01e161_jump
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01dfd7_jump
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e161_jump

	_01dfd7_jump:
		cmp    $0x000001,%ah
		jne    _01e161_jump
		mov    %al,%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e161_jump

	_01dff5_jump:
		cmpb   $0x000000,0x000070(%ecx)
		jne    _01e00b_jump
		orb    $0x000008,0x000081(%ecx)
		movb   $0x000002,(%esp)
		jmp    _01e161_jump

	_01e00b_jump:
		andb   $0x0000f7,0x000081(%ecx)
		xor    %dh,%dh
		mov    %dh,(%esp)
		jmp    _01e161_jump

	_01e01c_jump:
		mov    0x000081(%ecx),%dl
		test   $0x000008,%dl
		jne    _01e034_jump
		mov    %dl,%bl
		or     $0x000008,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _01e03f_jump

	_01e034_jump:
		mov    %dl,%dh
		and    $0x0000f7,%dh
		mov    %dh,0x000081(%ecx)

	_01e03f_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e04f_jump
		cmpb   $0x000003,0x00006c(%ecx)
		je     _01e161_jump

	_01e04f_jump:
		mov    $0x000003,%dh
		movw   $0x000000,0x00004a(%ecx)
		mov    %dh,(%esp)
		jmp    _01e161_jump

	_01e05f_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e06f_jump
		cmpb   $0x000002,0x00006c(%ecx)
		je     _01e161_jump

	_01e06f_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d444_func
		mov    0x000081(%ecx),%bl
		test   $0x000008,%bl
		jne    _01e09d_jump
		mov    %bl,%ah
		mov    $0x000003,%dl
		or     $0x000008,%ah
		mov    %dl,(%esp)
		mov    %ah,0x000081(%ecx)
		jmp    _01e161_jump

	_01e09d_jump:
		mov    %bl,%bh
		mov    $0x000002,%al
		and    $0x0000f7,%bh
		mov    %al,(%esp)
		mov    %bh,0x000081(%ecx)
		jmp    _01e161_jump

	_01e0b2_jump:
		mov    0x000070(%ecx),%dl
		test   %dl,%dl
		jne    _01e0c9_jump
		movb   $0x000002,(%esp)
		orb    $0x000008,0x000081(%ecx)
		jmp    _01e161_jump

	_01e0c9_jump:
		cmp    $0x000001,%dl
		jne    _01e161_jump
		mov    0x000081(%ecx),%bh
		and    $0x0000f7,%bh
		mov    %dl,(%esp)
		mov    %bh,0x000081(%ecx)
		jmp    _01e161_jump

	_01e0e9_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e0f5_jump
		cmpb   $0x000018,0x00006c(%ecx)
		je     _01e161_jump

	_01e0f5_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e101_jump
		cmpb   $0x000012,0x00006c(%ecx)
		je     _01e161_jump

	_01e101_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e10d_jump
		cmpb   $0x000013,0x00006c(%ecx)
		je     _01e161_jump

	_01e10d_jump:
		mov    $0x000018,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $_0000ff_case,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		movw   $0x000000,0x000042(%ecx)
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)

	_01e161_jump:
		cmpb   $_0000ff_case,(%esp)
		je     _01e1ad_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000010,_092535_data(,%eax,4)
		je     _01e188_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		call   _055230_func
		cwtl   
		sub    %eax,0x000028(%ecx)
		jmp    _01e196_jump

	_01e188_jump:
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)

	_01e196_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    (%esp),%dl
		movw   $0x000000,0x000040(%ecx)
		call   _060460_func

	_01e1ad_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e1b4_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    _0ce036_data,%ecx
		movswl %ax,%esi
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    %esi,%eax
		dec    %ecx
		cmp    %ebx,%eax
		jl     _01e1d7_jump
		cmp    %ecx,%eax
		jg     _01e1d7_jump
		mov    $0x000001,%eax
		jmp    _01e1d9_jump

	_01e1d7_jump:
		xor    %eax,%eax

	_01e1d9_jump:
		test   %eax,%eax
		je     _01e22c_jump
		mov    _0ce038_data,%ecx
		movswl %dx,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		dec    %ecx
		cmp    %ebx,%eax
		jl     _01e1fd_jump
		cmp    %ecx,%eax
		jg     _01e1fd_jump
		mov    $0x000001,%eax
		jmp    _01e1ff_jump

	_01e1fd_jump:
		xor    %eax,%eax

	_01e1ff_jump:
		test   %eax,%eax
		je     _01e22c_jump
		mov    _0ce036_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		add    %esi,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $_0000ff_case,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_01e22c_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01e234_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		cmpw   $0x000017,0x000060(%eax)
		jne    _01e257_jump
		testb  $0x000002,_0cf221_data
		je     _01e253_jump
		mov    $0x000004,%dl
		jmp    _01e259_jump

	_01e253_jump:
		mov    $0x000008,%dl
		jmp    _01e259_jump

	_01e257_jump:
		mov    $0x000010,%dl

	_01e259_jump:
		movzbw 0x000068(%esi),%di
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%edi
		mov    0x00002c(%esi),%bx
		add    %eax,%ebx
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    %ebx,0x000010(%esp)
		test   %ax,%ax
		js     _01e281_jump
		sar    %cl,%ax
		jmp    _01e28a_jump

	_01e281_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e28a_jump:
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %ax,0x000014(%esp)
		mov    %edi,%eax
		test   %ax,%ax
		js     _01e29f_jump
		sar    %cl,%ax
		jmp    _01e2a8_jump

	_01e29f_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e2a8_jump:
		mov    %ax,0x00000c(%esp)
		mov    %ax,0x000008(%esp)
		mov    %edi,%eax
		xor    %dh,%dh
		mov    $0x000004,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _01e2c4_jump
		sar    %cl,%ax
		jmp    _01e2cd_jump

	_01e2c4_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e2cd_jump:
		mov    %ax,(%esp)
		mov    %edi,%eax
		mov    $0x000004,%cl
		add    %edx,%eax
		test   %ax,%ax
		js     _01e2e1_jump
		sar    %cl,%ax
		jmp    _01e2ea_jump

	_01e2e1_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e2ea_jump:
		mov    %ax,0x000004(%esp)
		mov    %ebx,%eax
		mov    0x00000a(%esp),%ecx
		dec    %eax
		sar    $0x000010,%ecx
		movswl %ax,%edx
		mov    %ecx,%eax
		movswl %bx,%ebx
		call   _01e1b4_func
		mov    %al,0x000065(%esi)
		mov    -0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		call   _01e1b4_func
		mov    0x00006d(%esi),%dl
		mov    %al,0x000063(%esi)
		cmp    $0x000002,%dl
		jne    _01e34d_jump
		mov    0x000010(%esp),%eax
		xor    %ah,%ah
		and    $0x00000f,%edi
		and    $0x00000f,%al
		mov    %ebx,%edx
		movswl %ax,%ebp
		mov    %ecx,%eax
		movswl %di,%edi
		call   _01e1b4_func
		and    $_0000ff_case,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _024c38_func
		cwtl   
		jmp    _01e35b_jump

	_01e34d_jump:
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _01e1b4_func
		and    $_0000ff_case,%eax

	_01e35b_jump:
		mov    0x000012(%esp),%edx
		mov    %al,0x000062(%esi)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _01e1b4_func
		mov    %al,0x000064(%esi)
		mov    0x000014(%esp),%eax
		inc    %eax
		movswl %ax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		call   _01e1b4_func
		mov    %al,0x000066(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e3bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		call   _01e234_func
		movzbw 0x000068(%ebx),%si
		mov    0x000028(%ebx),%dx
		movzbw 0x000069(%ebx),%di
		mov    0x00002c(%ebx),%cx
		mov    0x000060(%ebx),%ax
		add    %edx,%esi
		add    %ecx,%edi
		cmp    $0x000017,%ax
		jne    _01e442_jump
		mov    $0xffffffff,%edx
		mov    _0ce0a6_data,%cl
		mov    %dx,_0ce094_data
		cmp    $0x00000c,%cl
		jb     _01e427_jump
		jbe    _01e431_jump
		cmp    $0x000012,%cl
		jb     _01e41b_jump
		cmp    $0x000017,%cl
		jbe    _01e43a_jump
		cmp    $0x000019,%cl
		jbe    _01e442_jump
		cmp    $0x00001e,%cl
		je     _01e43a_jump
		jmp    _01e442_jump

	_01e41b_jump:
		cmp    $0x00000e,%cl
		jb     _01e442_jump
		cmp    $0x00000f,%cl
		jbe    _01e431_jump
		jmp    _01e442_jump

	_01e427_jump:
		cmp    $0x000002,%cl
		jb     _01e442_jump
		cmp    $0x000007,%cl
		ja     _01e442_jump

	_01e431_jump:
		movb   $0x000001,_0cf46a_data
		jmp    _01e442_jump

	_01e43a_jump:
		xor    %ah,%ah
		mov    %ah,_0cf46a_data

	_01e442_jump:
		xor    %eax,%eax
		mov    0x000062(%ebx),%al
		testb  $0x000002,_0924f4_data(%eax)
		jne    _01e6c9_jump
		cmpw   $0x000017,0x000060(%ebx)
		jne    _01e479_jump
		mov    _0ce096_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		jmp    _01e48e_jump

	_01e479_jump:
		movswl %di,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e1b4_func

	_01e48e_jump:
		mov    0x00006d(%ebx),%cl
		cmp    $0x000002,%cl
		jne    _01e4ba_jump
		xor    %edx,%edx
		mov    %al,%dl
		test   %cl,_0924f4_data(%edx)
		jne    _01e4ba_jump
		movswl %di,%eax
		add    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e1b4_func

	_01e4ba_jump:
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_0924f4_data(%edx)
		je     _01e4ce_jump
		xor    %ah,%ah
		jmp    _01e6ce_jump

	_01e4ce_jump:
		xor    %eax,%eax
		mov    0x000064(%ebx),%al
		mov    _0924f4_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		and    $_0000ff_case,%eax
		lea    0x000000(,%eax,2),%edx
		xor    %eax,%eax
		mov    0x000063(%ebx),%al
		mov    _0924f4_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		and    $_0000ff_case,%eax
		add    %edx,%eax
		mov    %al,%cl
		cmp    $0x000003,%al
		jne    _01e51b_jump
		mov    %esi,%eax
		xor    %ah,%ah
		and    $0x00000f,%al
		cmp    $0x000008,%ax
		jge    _01e519_jump
		mov    $0x000001,%cl
		jmp    _01e51b_jump

	_01e519_jump:
		mov    $0x000002,%cl

	_01e51b_jump:
		test   %cl,%cl
		je     _01e6c9_jump
		mov    0x000060(%ebx),%ax
		dec    %cl
		cmp    $0x000017,%ax
		jne    _01e5bd_jump
		cmpb   $0x000001,_0cf46a_data
		jne    _01e6c9_jump
		test   %cl,%cl
		je     _01e549_jump
		add    $0x000010,%esi
		jmp    _01e54c_jump

	_01e549_jump:
		sub    $0x000010,%esi

	_01e54c_jump:
		movswl %di,%eax
		sub    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e1b4_func
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		jne    _01e6c9_jump
		cmpb   $0x000002,_0ce0b1_data
		je     _01e59c_jump
		mov    _0ce0c5_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%cl
		je     _01e596_jump
		movw   $0x000000,0x000050(%ebx)
		jmp    _01e59c_jump

	_01e596_jump:
		movw   $0x000001,0x000050(%ebx)

	_01e59c_jump:
		test   %cl,%cl
		setne  %al
		and    $_0000ff_case,%eax
		inc    %eax
		mov    _0ce0a6_data(%eax),%al
		mov    %al,_0ce0a6_data
		xor    %eax,%eax
		mov    0x000062(%ebx),%al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01e5bd_jump:
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _01e6c9_jump
		cmpb   $0x000002,0x00006d(%ebx)
		setne  %al
		and    $_0000ff_case,%eax
		je     _01e6c9_jump
		cmpw   $0x000000,0x000060(%ebx)
		jne    _01e5f7_jump
		testb  $0x000010,0x000081(%ebx)
		jne    _01e6be_jump

	_01e5f7_jump:
		mov    0x000060(%ebx),%cx
		cmp    $0x000009,%cx
		je     _01e6be_jump
		cmp    $0x0000a5,%cx
		je     _01e6be_jump
		cmp    $0x000014,%cx
		je     _01e6be_jump
		cmp    $0x000023,%cx
		je     _01e6be_jump
		cmp    $0x00002b,%cx
		je     _01e6be_jump
		cmp    $0x00003c,%cx
		je     _01e6be_jump
		cmp    $0x00003d,%cx
		je     _01e6be_jump
		cmp    $0x000041,%cx
		jne    _01e653_jump
		cmpw   $0x000000,0x000050(%ebx)
		jne    _01e6be_jump

	_01e653_jump:
		mov    0x000060(%ebx),%dx
		cmp    $0x000046,%dx
		je     _01e6be_jump
		cmp    $0x000064,%dx
		je     _01e6be_jump
		cmp    $0x0000d9,%dx
		je     _01e6be_jump
		cmp    $0x000098,%dx
		je     _01e6be_jump
		cmp    $0x00009c,%dx
		je     _01e6be_jump
		cmp    $0x0000c3,%dx
		je     _01e6be_jump
		cmp    $0x00007b,%dx
		jne    _01e6c9_jump
		mov    0x000075(%ebx),%cl
		cmp    $0x000001,%cl
		je     _01e6a5_jump
		cmp    $0x000004,%cl
		je     _01e6a5_jump
		cmp    $0x000007,%cl
		jne    _01e6c9_jump
		cmpb   $0x000002,0x00007d(%ebx)
		jne    _01e6c9_jump

	_01e6a5_jump:
		cmpb   $0x000000,0x00006d(%ebx)
		jne    _01e6b1_jump
		cmpb   $0x000004,0x00006c(%ebx)
		je     _01e6b8_jump

	_01e6b1_jump:
		mov    $0x000001,%eax
		jmp    _01e6ba_jump

	_01e6b8_jump:
		xor    %eax,%eax

	_01e6ba_jump:
		test   %eax,%eax
		je     _01e6c9_jump

	_01e6be_jump:
		mov    %ebx,%eax
		call   _01dc88_func
		movb   $0x00000f,0x000062(%ebx)

	_01e6c9_jump:
		xor    %eax,%eax
		mov    0x000062(%ebx),%al

	_01e6ce_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e6d4_func:
		movb   $0x000000,0x000071(%eax)
		movb   $0x000000,0x000072(%eax)
		ret    



_01e6e0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _01e6ff_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01e6f6_jump
		neg    %eax

	_01e6f6_jump:
		cmp    $0x000020,%eax
		jge    _01e6ff_jump
		add    %dx,0x000040(%ecx)

	_01e6ff_jump:
		cmpw   $0x000006,0x000060(%ecx)
		jne    _01e71d_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _01e712_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _01e73f_jump

	_01e712_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		jmp    _01e733_jump

	_01e71d_jump:
		mov    0x00006d(%ecx),%dl
		cmp    $0x000002,%dl
		jne    _01e72a_jump
		cmp    0x00006c(%ecx),%dl
		je     _01e73f_jump

	_01e72a_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_01e733_jump:
		call   _01d444_func
		mov    %ecx,%eax
		call   _01e6d4_func

	_01e73f_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01e744_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%edx
		call   _01cca0_func
		test   %al,%al
		je     _01e7a7_jump
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    _0cf254_data,%bx
		mov    %ah,0x000081(%edx)
		cmp    $0x000005,%bx
		jne    _01e77d_jump
		cmpw   $0x0000a1,0x000060(%edx)
		je     _01e788_jump

	_01e77d_jump:
		mov    0x000032(%edx),%eax
		sar    $0x000010,%eax
		call   _01f404_func

	_01e788_jump:
		mov    0x000060(%edx),%si
		cmp    $0x0000aa,%si
		je     _01e799_jump
		cmp    $0x00004b,%si
		jne    _01e7a7_jump

	_01e799_jump:
		movl   $0xffff8300,0x000028(%edx)
		movl   $0xffff8300,0x00002c(%edx)

	_01e7a7_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_01e7ac_func:
		push   %ebx
		push   %edx
		mov    0x000076(%eax),%dl
		mov    _0ce173_data,%dh
		cmp    %dh,%dl
		jae    _01e7c2_jump
		movb   $0x000000,0x000076(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_01e7c2_jump:
		mov    %dl,%bl
		sub    %dh,%bl
		mov    %bl,0x000076(%eax)
		pop    %edx
		pop    %ebx
		ret    



_01e7cc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %cx,0x000014(%esp)
		movw   $0x000000,(%edx)
		xor    %eax,%eax
		movw   $0x000000,(%ebx)
		mov    _0ce0ac_data,%al
		mov    0x00004e(%esi),%dx
		mov    0x000028(%esi),%bx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %ax,0x000010(%esp)
		xor    %eax,%eax
		mov    0x00004c(%esi),%cx
		mov    _0ce0ad_data,%al
		mov    0x00002c(%esi),%dx
		add    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00000e(%esp),%ebx
		mov    0x000069(%esi),%al
		sar    $0x000010,%ebx
		sub    %eax,%edx
		mov    %ebx,%eax
		mov    %dx,0x00000c(%esp)
		test   %eax,%eax
		jge    _01e836_jump
		neg    %eax

	_01e836_jump:
		mov    0x00000a(%esp),%ecx
		mov    %eax,%edx
		sar    $0x000010,%ecx
		mov    %ax,0x000018(%esp)
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _01e84c_jump
		neg    %eax

	_01e84c_jump:
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    %ax,0x00001c(%esp)
		cmpw   $0x000000,0x000010(%esp)
		je     _01e985_jump
		cmpw   $0x000000,0x00000c(%esp)
		je     _01e985_jump
		cmp    (%esp),%dx
		jle    _01e918_jump
		mov    -0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		sar    $0x00001f,%edx
		mov    %eax,0x000004(%esp)
		mov    %ebx,%eax
		idivl  0x000004(%esp)
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %eax,%ecx
		cmpw   $0x000000,0x000010(%esp)
		jle    _01e8af_jump
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01e8b8_jump

	_01e8af_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01e8b8_jump:
		mov    0x00002e(%esp),%edx
		mov    %ax,(%edi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %ax,0x000000(%ebp)
		test   %ax,%ax
		jne    _01e9f2_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _01e8ff_jump
		movl   $0x000010,0x000008(%esp)
		jmp    _01e907_jump

	_01e8ff_jump:
		movl   $0xfffffff0,0x000008(%esp)

	_01e907_jump:
		mov    0x000008(%esp),%eax
		movswl (%edi),%edx
		add    %eax,%edx
		mov    %dx,(%edi)
		jmp    _01e9f2_jump

	_01e918_jump:
		movswl %dx,%eax
		mov    %eax,0x000004(%esp)
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %eax,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    0x00000c(%esp),%edx
		mov    %eax,%ebx
		test   %dx,%dx
		jle    _01e94b_jump
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01e954_jump

	_01e94b_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01e954_jump:
		mov    0x000012(%esp),%edx
		mov    %ax,0x000000(%ebp)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %ax,(%edi)
		jmp    _01e9f2_jump

	_01e985_jump:
		mov    0x00000c(%esp),%edx
		test   %dx,%dx
		jne    _01e9c3_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _01e9a1_jump
		mov    0x000012(%esp),%edx
		sar    $0x000010,%edx
		neg    %edx
		jmp    _01e9a8_jump

	_01e9a1_jump:
		mov    0x000012(%esp),%edx
		sar    $0x000010,%edx

	_01e9a8_jump:
		mov    %dx,(%edi)
		cmpw   $0x000000,0x000010(%esp)
		jle    _01e9ba_jump
		mov    $0x000001,%ebx
		jmp    _01e9bf_jump

	_01e9ba_jump:
		mov    $0xffffffff,%ebx

	_01e9bf_jump:
		xor    %ecx,%ecx
		jmp    _01e9f2_jump

	_01e9c3_jump:
		jle    _01e9ce_jump
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01e9d7_jump

	_01e9ce_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01e9d7_jump:
		mov    0x00000c(%esp),%ecx
		xor    %ebx,%ebx
		mov    %ax,0x000000(%ebp)
		test   %cx,%cx
		jle    _01e9ed_jump
		mov    $0x000001,%ecx
		jmp    _01e9f2_jump

	_01e9ed_jump:
		mov    $0xffffffff,%ecx

	_01e9f2_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _01ea01_jump
		cmpw   $0x000000,(%edi)
		jg     _01ea10_jump

	_01ea01_jump:
		testb  $0x000008,0x000081(%esi)
		je     _01ea20_jump
		cmpw   $0x000000,(%edi)
		jge    _01ea20_jump

	_01ea10_jump:
		negw   (%edi)
		cmpw   $0x000000,0x000000(%ebp)
		jne    _01ea20_jump
		movw   $0x000002,0x000000(%ebp)

	_01ea20_jump:
		mov    0x00004e(%esi),%ax
		mov    0x00004c(%esi),%dx
		add    %ebx,%ebx
		add    %ecx,%ecx
		add    %ebx,%eax
		add    %ecx,%edx
		mov    %ax,0x00004e(%esi)
		mov    %dx,0x00004c(%esi)
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01eae4_func:
		push   %ebx
		cmp    $0x000001,%al
		jbe    _01eaef_jump
		cmp    $0x000002,%al
		je     _01eb09_jump
		jmp    _01eb21_jump

	_01eaef_jump:
		jne    _01eaf4_jump
		add    $0x000029,%dl

	_01eaf4_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0ce7c0_data,%ebx
		jmp    _01eb1c_jump

	_01eb09_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0ce0d4_data,%ebx

	_01eb1c_jump:
		shl    $0x000002,%eax
		add    %eax,%ebx

	_01eb21_jump:
		xor    %eax,%eax
		mov    0x000005(%ebx),%al
		pop    %ebx
		ret    



_01eb28_func:
		push   %ebx
		cmp    $0x000001,%al
		jbe    _01eb33_jump
		cmp    $0x000002,%al
		je     _01eb4d_jump
		jmp    _01eb65_jump

	_01eb33_jump:
		jne    _01eb38_jump
		add    $0x000029,%dl

	_01eb38_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0ce7c0_data,%ebx
		jmp    _01eb60_jump

	_01eb4d_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0ce0d4_data,%ebx

	_01eb60_jump:
		shl    $0x000002,%eax
		add    %eax,%ebx

	_01eb65_jump:
		mov    0x000009(%ebx),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x000007(%ebx),%dl
		and    $_0000ff_case,%eax
		add    %edx,%eax
		pop    %ebx
		ret    



_01eb78_func:
		push   %ebx
		push   %edx
		mov    _0c0834_data,%dh
		xor    %eax,%eax

	_01eb82_jump:
		add    $0x0000d8,%eax
		mov    %dh,%dl
		xor    %bl,%bl
		mov    %dh,_0cbe50_data(%eax)
		mov    %bl,_0cbf26_data(%eax)
		xor    %dh,%dl
		mov    %dl,_0cbf25_data(%eax)
		cmp    $0x000870,%eax
		jne    _01eb82_jump
		pop    %edx
		pop    %ebx
		ret    



_01ebac_func:
		push   %edx
		xor    %ah,%ah
		cmp    $0x000061,%al
		jb     _01ebbc_jump
		cmp    $0x00007a,%al
		ja     _01ebbc_jump
		mov    %al,%ah
		sub    $0x00005d,%ah

	_01ebbc_jump:
		cmp    $0x000030,%al
		jb     _01ebc9_jump
		cmp    $0x000039,%al
		ja     _01ebc9_jump
		mov    %al,%ah
		sub    $0x000012,%ah

	_01ebc9_jump:
		mov    %al,%dl
		cmp    $0x00003f,%al
		jb     _01ec31_jump
		jbe    _01ec63_jump
		cmp    $0x000081,%al
		jb     _01ec0f_jump
		jbe    _01eca5_jump
		cmp    $0x000094,%al
		jb     _01ec03_jump
		jbe    _01ec9f_jump
		cmp    $0x00009c,%al
		jb     _01ecad_jump
		jbe    _01ecab_jump
		cmp    $0x0000f8,%al
		je     _01ec8d_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec03_jump:
		cmp    $0x000084,%al
		je     _01ecab_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec0f_jump:
		cmp    $0x00007c,%al
		jb     _01ec25_jump
		jbe    _01ec99_jump
		cmp    $0x00007e,%al
		je     _01ec87_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec25_jump:
		cmp    $0x00005e,%al
		je     _01ec87_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec31_jump:
		cmp    $0x000027,%al
		jb     _01ec4d_jump
		jbe    _01ec7b_jump
		cmp    $0x00002e,%al
		jb     _01ec45_jump
		jbe    _01ec6f_jump
		cmp    $0x00003a,%al
		je     _01ec75_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec45_jump:
		cmp    $0x00002a,%al
		je     _01ec93_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec4d_jump:
		cmp    $0x000023,%al
		jb     _01ec5b_jump
		jbe    _01ec81_jump
		cmp    $0x000025,%al
		je     _01ec8d_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec5b_jump:
		cmp    $0x000021,%al
		je     _01ec69_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec63_jump:
		mov    $0x000001,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec69_jump:
		mov    $0x000002,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec6f_jump:
		mov    $0x000003,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec75_jump:
		mov    $0x000028,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec7b_jump:
		mov    $0x000029,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec81_jump:
		mov    $0x00002f,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec87_jump:
		mov    $0x00002e,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec8d_jump:
		mov    $0x00002d,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec93_jump:
		mov    $0x000030,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec99_jump:
		mov    $0x000031,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ec9f_jump:
		mov    $0x00002b,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01eca5_jump:
		mov    $0x00002c,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ecab_jump:
		mov    $0x00002a,%ah

	_01ecad_jump:
		mov    %ah,%al
		pop    %edx
		ret    



_01ecb4_func:
		cmp    $0x000001,%al
		jne    _01ecbb_jump
		addb   $0x000029,(%edx)

	_01ecbb_jump:
		ret    



_01ecbc_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    %ecx,(%esp)
		mov    %edx,%ecx
		xor    %ebx,%ebx
		jmp    _01ed00_jump

	_01ecce_jump:
		cmp    $0x00002f,%dl
		je     _01ed0c_jump
		cmp    $0x000020,%dl
		jne    _01ecdc_jump
		add    %esi,%ebx
		jmp    _01ed00_jump

	_01ecdc_jump:
		mov    %dl,%al
		and    $_0000ff_case,%eax
		call   _01ebac_func
		test   %al,%al
		je     _01ed00_jump
		xor    %edx,%edx
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		call   _01eb28_func
		sub    (%esp),%eax
		add    %eax,%ebx

	_01ed00_jump:
		inc    %ecx
		movswl %cx,%eax
		add    %edi,%eax
		mov    (%eax),%dl
		test   %dl,%dl
		jne    _01ecce_jump

	_01ed0c_jump:
		mov    %ebx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01ed18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000ec,%esp
		mov    %eax,%ebp
		mov    0x0000d4(%eax),%al
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,0x0000d4(%esp)
		mov    %edx,0x0000c8(%esp)
		mov    %edx,0x0000e4(%esp)
		mov    %edx,0x0000e0(%esp)
		mov    %edx,0x0000d0(%esp)
		mov    %al,0x0000e8(%esp)
		cmp    $0x000002,%al
		jne    _01ed85_jump
		mov    $0x00000f,%edx
		mov    $0x000001,%ecx
		mov    $0x000008,%esi
		mov    %edx,0x0000d8(%esp)
		mov    %ecx,0x0000dc(%esp)
		mov    %esi,0x0000cc(%esp)
		jmp    _01edd3_jump

	_01ed85_jump:
		cmp    $0x000001,%al
		jne    _01edaf_jump
		mov    $0x000017,%esi
		mov    $0x000003,%edi
		mov    $0x00000a,%eax
		mov    %esi,0x0000d8(%esp)
		mov    %edi,0x0000dc(%esp)
		mov    %eax,0x0000cc(%esp)
		jmp    _01edd3_jump

	_01edaf_jump:
		mov    $0x000024,%eax
		mov    $0x000003,%edx
		mov    $0x00000c,%ecx
		mov    %eax,0x0000d8(%esp)
		mov    %edx,0x0000dc(%esp)
		mov    %ecx,0x0000cc(%esp)

	_01edd3_jump:
		mov    $0x0000c8,%ecx
		mov    %esp,%edi
		mov    %ebp,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01ef6f_jump
		xor    %ecx,%ecx
		jmp    _01eeb9_jump

	_01edfd_jump:
		cmp    $0x00002f,%dl
		jne    _01ee5b_jump
		mov    $0x000001,%esi
		mov    0x0000c8(%esp),%edi
		mov    0x0000d4(%esp),%eax
		add    %esi,%edi
		mov    %esi,0x0000d0(%esp)
		mov    %edi,0x0000c8(%esp)
		cmp    %ax,%bx
		jle    _01ee32_jump
		mov    %bx,0x0000d4(%esp)

	_01ee32_jump:
		mov    0x0000e0(%esp),%eax
		mov    0x0000e4(%esp),%edx
		xor    %ebx,%ebx
		cmp    %dx,%ax
		jle    _01ee4e_jump
		mov    %eax,0x0000e4(%esp)

	_01ee4e_jump:
		xor    %esi,%esi
		xor    %al,%al
		mov    %esi,0x0000e0(%esp)
		jmp    _01ee88_jump

	_01ee5b_jump:
		cmp    $0x000020,%dl
		jne    _01ee7c_jump
		mov    0x0000cc(%esp),%edi
		mov    0x0000e0(%esp),%edx
		xor    %al,%al
		inc    %edx
		add    %edi,%ebx
		mov    %edx,0x0000e0(%esp)
		jmp    _01ee88_jump

	_01ee7c_jump:
		mov    %dl,%al
		and    $_0000ff_case,%eax
		call   _01ebac_func

	_01ee88_jump:
		test   %al,%al
		je     _01eeb8_jump
		xor    %edx,%edx
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x0000e8(%esp),%al
		mov    0x0000e0(%esp),%edi
		call   _01eb28_func
		mov    0x0000dc(%esp),%edx
		inc    %edi
		sub    %edx,%eax
		mov    %edi,0x0000e0(%esp)
		add    %eax,%ebx

	_01eeb8_jump:
		inc    %ecx

	_01eeb9_jump:
		movswl %cx,%eax
		mov    (%esp,%eax,1),%dl
		test   %dl,%dl
		jne    _01edfd_jump
		mov    0x0000c8(%esp),%edi
		test   %di,%di
		jne    _01eee9_jump
		mov    $0x000001,%edx
		mov    %bx,0x0000d4(%esp)
		mov    %edx,0x0000c8(%esp)
		jmp    _01eef3_jump

	_01eee9_jump:
		mov    %edi,%eax
		dec    %eax
		mov    %eax,0x0000c8(%esp)

	_01eef3_jump:
		cmpw   $0x000000,0x0000d0(%esp)
		je     _01ef1e_jump
		mov    0x0000d2(%esp),%eax
		mov    0x0000ce(%ebp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,0x0000c8(%ebp)
		jmp    _01ef2c_jump

	_01ef1e_jump:
		mov    0x0000d0(%ebp),%ax
		mov    %ax,0x0000c8(%ebp)

	_01ef2c_jump:
		mov    0x0000d4(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,0x0000cc(%ebp)
		mov    0x0000d8(%esp),%ecx
		mov    0x0000d2(%ebp),%ax
		sub    %ecx,%eax
		add    $0x000002,%eax
		mov    %ax,0x0000ca(%ebp)
		mov    0x0000c8(%esp),%eax
		imul   %ecx,%eax
		sub    $0x000002,%eax
		mov    %ax,0x0000ce(%ebp)

	_01ef6f_jump:
		add    $0x0000ec,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01ef7c_switch:
		.long   _01efce_case
		.long   _01efd8_case
		.long   _01efe2_case
		.long   _01efec_case




_01ef8c_func:
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		cmp    $_0000ff_case,%bx
		jne    _01efb4_jump
		xor    %al,%al
		jmp    _01efa8_jump

	_01ef9d_jump:
		cmp    $0x000024,%ah
		jne    _01efa6_jump
		xor    %ebx,%ebx
		mov    %al,%bl

	_01efa6_jump:
		inc    %al

	_01efa8_jump:
		xor    %edx,%edx
		mov    %al,%dl
		add    %ecx,%edx
		mov    (%edx),%ah
		test   %ah,%ah
		jne    _01ef9d_jump

	_01efb4_jump:
		cmp    $_0000ff_case,%bx
		je     _01eff3_jump
		cmp    $0x000003,%si
		ja     _01eff3_jump
		xor    %edx,%edx
		mov    %si,%dx
		jmp    *%cs:_01ef7c_switch(,%edx,4)

	_01efce_case:
		movswl %bx,%edx
		movb   $0x000061,(%ecx,%edx,1)
		pop    %esi
		pop    %ecx
		ret    

	_01efd8_case:
		movswl %bx,%edx
		movb   $0x000062,(%ecx,%edx,1)
		pop    %esi
		pop    %ecx
		ret    

	_01efe2_case:
		movswl %bx,%edx
		movb   $0x000063,(%ecx,%edx,1)
		pop    %esi
		pop    %ecx
		ret    

	_01efec_case:
		movswl %bx,%edx
		movb   $0x000064,(%ecx,%edx,1)

	_01eff3_jump:
		pop    %esi
		pop    %ecx
		ret    



_01eff8_func:
		push   %ebx
		push   %ecx
		mov    (%eax),%bx
		mov    (%edx),%cx
		mov    %bx,(%edx)
		mov    %cx,(%eax)
		pop    %ecx
		pop    %ebx
		ret    



_01f00c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,0x000008(%esp)
		mov    %dx,0x000014(%esp)
		mov    %bx,0x000024(%esp)
		mov    %cx,0x00001c(%esp)
		mov    0x000040(%esp),%eax
		mov    0x000012(%esp),%ecx
		mov    %eax,0x000018(%esp)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		mov    0x000022(%esp),%edi
		mov    %eax,%ecx
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%edi
		sar    $0x000010,%eax
		sub    %edi,%eax
		xor    %esi,%esi
		mov    %eax,%edi
		test   %ecx,%ecx
		je     _01f070_jump
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %eax,%eax
		jge    _01f064_jump
		neg    %eax

	_01f064_jump:
		cmp    $0x000001,%eax
		jge    _01f070_jump
		mov    $0x000001,%ebx
		jmp    _01f072_jump

	_01f070_jump:
		xor    %ebx,%ebx

	_01f072_jump:
		cmp    $0x000001,%bx
		jne    _01f1ee_jump
		test   %ecx,%ecx
		jge    _01f0a2_jump
		lea    0x00001c(%esp),%edx
		lea    0x000014(%esp),%eax
		mov    %ebx,%esi
		call   _01eff8_func
		neg    %ecx
		lea    0x00003c(%esp),%edx
		lea    0x000024(%esp),%eax
		neg    %edi
		call   _01eff8_func
		jmp    _01f0b9_jump

	_01f0a2_jump:
		jne    _01f0b9_jump
		test   %edi,%edi
		jge    _01f0b9_jump
		lea    0x00003c(%esp),%edx
		lea    0x000024(%esp),%eax
		mov    %ebx,%esi
		call   _01eff8_func
		neg    %edi

	_01f0b9_jump:
		test   %edi,%edi
		jle    _01f0c7_jump
		movl   $0x000001,0x000004(%esp)
		jmp    _01f0d9_jump

	_01f0c7_jump:
		jge    _01f0d3_jump
		movl   $0xffffffff,0x000004(%esp)
		jmp    _01f0d9_jump

	_01f0d3_jump:
		xor    %ebp,%ebp
		mov    %ebp,0x000004(%esp)

	_01f0d9_jump:
		mov    %edi,%eax
		test   %eax,%eax
		jge    _01f0e1_jump
		neg    %eax

	_01f0e1_jump:
		mov    %eax,%edi
		lea    (%eax,%eax,1),%ebp
		add    %edi,%edi
		sub    %ecx,%eax
		mov    %di,0x00000c(%esp)
		add    %eax,%eax
		sub    %ecx,%ebp
		mov    %ax,0x000010(%esp)
		test   %si,%si
		je     _01f17c_jump
		mov    0x00001a(%esp),%esi
		mov    0x000012(%esp),%eax
		mov    0x000042(%esp),%edx
		sar    $0x000010,%esi
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %esi,%eax
		imul   %edx,%eax
		negl   0x000004(%esp)
		mov    $0x000007,%cl
		mov    0x00003a(%esp),%edi
		test   %eax,%eax
		je     _01f12d_jump
		sar    %cl,%eax
		jmp    _01f133_jump

	_01f12d_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f133_jump:
		mov    0x00001a(%esp),%esi
		sar    $0x000010,%esi
		lea    (%esi,%eax,1),%ecx
		inc    %esi
		sar    $0x000010,%edi

	_01f141_jump:
		cmp    %ecx,%esi
		jl     _01f363_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f15d_jump
		mov    0x00000e(%esp),%eax
		mov    0x000004(%esp),%edx
		sar    $0x000010,%eax
		add    %edx,%edi
		jmp    _01f164_jump

	_01f15d_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax

	_01f164_jump:
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01f179_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01f179_jump:
		dec    %esi
		jmp    _01f141_jump

	_01f17c_jump:
		mov    0x000012(%esp),%esi
		mov    0x00001a(%esp),%edx
		mov    0x000042(%esp),%eax
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %esi,%edx
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x000022(%esp),%edi
		test   %eax,%eax
		je     _01f1a4_jump
		sar    %cl,%eax
		jmp    _01f1aa_jump

	_01f1a4_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f1aa_jump:
		mov    0x000012(%esp),%esi
		sar    $0x000010,%esi
		lea    (%esi,%eax,1),%ecx
		inc    %esi
		sar    $0x000010,%edi

	_01f1b8_jump:
		cmp    %ecx,%esi
		jg     _01f363_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f1cf_jump
		add    0x000004(%esp),%edi
		mov    0x00000e(%esp),%eax
		jmp    _01f1d3_jump

	_01f1cf_jump:
		mov    0x00000a(%esp),%eax

	_01f1d3_jump:
		sar    $0x000010,%eax
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01f1eb_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01f1eb_jump:
		inc    %esi
		jmp    _01f1b8_jump

	_01f1ee_jump:
		test   %edi,%edi
		jge    _01f217_jump
		lea    0x00001c(%esp),%edx
		lea    0x000014(%esp),%eax
		mov    $0x000001,%esi
		call   _01eff8_func
		neg    %ecx
		lea    0x00003c(%esp),%edx
		lea    0x000024(%esp),%eax
		neg    %edi
		call   _01eff8_func
		jmp    _01f231_jump

	_01f217_jump:
		jne    _01f231_jump
		test   %ecx,%ecx
		jge    _01f231_jump
		lea    0x00001c(%esp),%edx
		lea    0x000014(%esp),%eax
		mov    $0x000001,%esi
		call   _01eff8_func
		neg    %ecx

	_01f231_jump:
		test   %ecx,%ecx
		jle    _01f23e_jump
		movl   $0x000001,(%esp)
		jmp    _01f24e_jump

	_01f23e_jump:
		jge    _01f249_jump
		movl   $0xffffffff,(%esp)
		jmp    _01f24e_jump

	_01f249_jump:
		xor    %edx,%edx
		mov    %edx,(%esp)

	_01f24e_jump:
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _01f256_jump
		neg    %eax

	_01f256_jump:
		mov    %eax,%ecx
		lea    (%eax,%eax,1),%ebp
		add    %ecx,%ecx
		sub    %edi,%eax
		mov    %cx,0x000020(%esp)
		add    %eax,%eax
		sub    %edi,%ebp
		mov    %ax,0x000028(%esp)
		test   %si,%si
		je     _01f2f4_jump
		mov    0x00003a(%esp),%edi
		mov    (%esp),%edx
		mov    0x000022(%esp),%eax
		sar    $0x000010,%edi
		neg    %edx
		sar    $0x000010,%eax
		mov    %edx,(%esp)
		mov    0x000042(%esp),%edx
		sub    %edi,%eax
		sar    $0x000010,%edx
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x00001a(%esp),%esi
		test   %eax,%eax
		je     _01f2a6_jump
		sar    %cl,%eax
		jmp    _01f2ac_jump

	_01f2a6_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f2ac_jump:
		mov    0x00003a(%esp),%edi
		sar    $0x000010,%edi
		lea    (%edi,%eax,1),%ecx
		inc    %edi
		sar    $0x000010,%esi

	_01f2ba_jump:
		cmp    %ecx,%edi
		jl     _01f363_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f2d5_jump
		mov    0x000026(%esp),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		add    %edx,%esi
		jmp    _01f2dc_jump

	_01f2d5_jump:
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax

	_01f2dc_jump:
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01f2f1_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01f2f1_jump:
		dec    %edi
		jmp    _01f2ba_jump

	_01f2f4_jump:
		mov    0x000022(%esp),%edi
		mov    0x00003a(%esp),%eax
		mov    0x000042(%esp),%edx
		sar    $0x000010,%edi
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edi,%eax
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x000012(%esp),%esi
		test   %eax,%eax
		je     _01f31c_jump
		sar    %cl,%eax
		jmp    _01f322_jump

	_01f31c_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f322_jump:
		mov    0x000022(%esp),%edi
		sar    $0x000010,%edi
		lea    (%edi,%eax,1),%ecx
		inc    %edi
		sar    $0x000010,%esi
		cmp    %ecx,%edi
		jg     _01f363_jump

	_01f334_jump:
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f342_jump
		add    (%esp),%esi
		mov    0x000026(%esp),%eax
		jmp    _01f346_jump

	_01f342_jump:
		mov    0x00001e(%esp),%eax

	_01f346_jump:
		sar    $0x000010,%eax
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01f35e_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01f35e_jump:
		inc    %edi
		cmp    %ecx,%edi
		jle    _01f334_jump

	_01f363_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_01f36c_func:
		push   %edx
		mov    _0cf228_data,%ah
		mov    _0cf229_data,%dl
		and    $0x000000,%ah
		and    $0x0000f0,%dl
		mov    %ah,_0cf228_data
		mov    %dl,_0cf229_data
		pop    %edx
		ret    



_01f390_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ce050_data,%eax
		mov    (%eax),%edx
		mov    0x00000c(%eax),%ebx
		mov    0x000002(%edx),%cl
		mov    0x0001c2(%edx),%dl
		mov    %dl,0x0000a2(%ebx)
		mov    (%eax),%edx
		mov    0x0001c2(%edx),%bl
		mov    %bl,0x000002(%edx)
		mov    (%eax),%eax
		mov    %cl,0x0001c2(%eax)
		mov    $0x000001,%al
		mov    _0cf462_data,%ah
		sub    %ah,%al
		mov    %al,_0cf462_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f3d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cc7ac_data,%dx
		movswl %dx,%ebx
		lea    0x000000(,%ebx,2),%ecx
		inc    %edx
		mov    _0cc7a8_data,%ebx
		mov    0x000034(%eax),%ax
		mov    %dx,_0cc7ac_data
		mov    %ax,(%ecx,%ebx,1)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f404_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    _0cc7ac_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _01f43b_jump

	_01f418_jump:
		movswl %ax,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    _0cc7a8_data,%edx
		cmp    (%edx,%ebx,1),%cx
		je     _01f43b_jump
		mov    _0cc7ac_data,%bx
		inc    %eax
		cmp    %bx,%ax
		jl     _01f418_jump

	_01f43b_jump:
		mov    _0cc7ac_data,%di
		cmp    %di,%ax
		jge    _01f46f_jump
		mov    %edi,%edx
		dec    %edx
		mov    %dx,_0cc7ac_data
		mov    _0cc7aa_data,%ebx
		sar    $0x000010,%ebx
		mov    _0cc7a8_data,%edx
		add    %ebx,%ebx
		lea    (%edx,%ebx,1),%ecx
		movswl %ax,%ebx
		mov    (%ecx),%ax
		mov    %ax,(%edx,%ebx,2)

	_01f46f_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f474_func:
		push   %edx
		mov    %eax,%edx
		call   _03d8fc_func
		push   %edx
		push   $_0c0838_data
		call   _07f8fc_func
		mov    _0cf440_data,%ah
		add    $0x000008,%esp
		cmp    $0x000001,%ah
		je     _01f4a7_jump
		push   $_0c0858_data
		call   _07f8fc_func
		add    $0x000004,%esp
		call   _07fd1b_func

	_01f4a7_jump:
		mov    $0xffffffff,%eax
		call   _07f91f_func
		pop    %edx
		ret    



_01f4b4_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    %dl,(%esp)
		xor    %eax,%eax
		jmp    _01f4d1_jump

	_01f4c2_jump:
		imul   $0x00000c,%edx,%ecx
		mov    (%ebx),%edx
		mov    0x000004(%ecx,%edx,1),%dl
		cmp    (%esp),%dl
		je     _01f4e0_jump
		inc    %eax

	_01f4d1_jump:
		xor    %ecx,%ecx
		movswl %ax,%edx
		mov    0x000044(%ebx),%cx
		cmp    %ecx,%edx
		jl     _01f4c2_jump
		xor    %al,%al

	_01f4e0_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_01f4f0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    _0cf24c_data,%eax
		mov    _0cf248_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %di,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0cf268_data,%eax
		mov    _0cf24a_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %eax,%ebx
		movswl %si,%eax
		sub    %eax,%ebx
		test   %dx,%dx
		setg   %al
		mov    %al,0x000004(%esp)
		test   %bx,%bx
		setg   %al
		mov    %al,(%esp)
		cmpb   $0x000000,0x000004(%esp)
		jne    _01f54d_jump
		neg    %edx

	_01f54d_jump:
		cmpb   $0x000000,(%esp)
		jne    _01f555_jump
		neg    %ebx

	_01f555_jump:
		cmp    $0x0000c8,%dx
		jle    _01f58e_jump
		mov    $0x000001,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _01f56a_jump
		sar    %cl,%ax
		jmp    _01f573_jump

	_01f56a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01f573_jump:
		mov    $0x000001,%cl
		mov    %eax,%edx
		mov    %ebx,%eax
		test   %ax,%ax
		js     _01f583_jump
		sar    %cl,%ax
		jmp    _01f58c_jump

	_01f583_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01f58c_jump:
		mov    %eax,%ebx

	_01f58e_jump:
		test   %bx,%bx
		jne    _01f5bd_jump
		cmpb   $0x000000,0x000004(%esp)
		je     _01f5a4_jump
		mov    $0x00001b,%eax
		jmp    _01f65a_jump

	_01f5a4_jump:
		test   %dx,%dx
		je     _01f5b3_jump
		mov    $0x000009,%eax
		jmp    _01f65a_jump

	_01f5b3_jump:
		mov    $0xffffffff,%eax
		jmp    _01f65a_jump

	_01f5bd_jump:
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cmpb   $0x000000,0x000004(%esp)
		je     _01f61c_jump
		cmpb   $0x000000,(%esp)
		je     _01f607_jump
		cmp    $_0000ff_case,%ax
		jle    _01f5f7_jump
		mov    $0x00001b,%eax
		jmp    _01f65a_jump

	_01f5f7_jump:
		cwtl   
		mov    _094a54_data(%eax),%al
		xor    %ah,%ah
		add    $0x00001b,%eax
		jmp    _01f65a_jump

	_01f607_jump:
		cmp    $_0000ff_case,%ax
		jle    _01f611_jump
		xor    %eax,%eax
		jmp    _01f65a_jump

	_01f611_jump:
		cwtl   
		mov    _094a54_data(%eax),%al
		xor    %ah,%ah
		jmp    _01f65a_jump

	_01f61c_jump:
		cmpb   $0x000000,(%esp)
		je     _01f63f_jump
		cmp    $_0000ff_case,%ax
		jle    _01f62f_jump
		mov    $0x000012,%eax
		jmp    _01f65a_jump

	_01f62f_jump:
		cwtl   
		mov    _094a54_data(%eax),%al
		xor    %ah,%ah
		add    $0x000012,%eax
		jmp    _01f65a_jump

	_01f63f_jump:
		cmp    $_0000ff_case,%ax
		jle    _01f64c_jump
		mov    $0x000009,%eax
		jmp    _01f65a_jump

	_01f64c_jump:
		cwtl   
		mov    _094a54_data(%eax),%al
		xor    %ah,%ah
		add    $0x000009,%eax

	_01f65a_jump:
		movswl %ax,%ebx
		movswl %si,%edx
		movswl %di,%eax
		call   _07b240_func
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01f670_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x000008(%esp),%edx
		push   %edx
		lea    0x000004(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %edx
		lea    0x000014(%esp),%ebx
		mov    $0x00000e,%edx
		call   _01d7e0_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %ebx,%eax
		cwtl   
		call   _01f4f0_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f6c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x000008(%esp),%edx
		push   %edx
		lea    0x000004(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %edx
		lea    0x000014(%esp),%ebx
		mov    $0x00000e,%edx
		call   _01d7e0_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %ebx,%eax
		cwtl   
		call   _01f4f0_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f720_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x00000f,%edx
		mov    %esi,%eax
		call   _01d7e0_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    0x000002(%esp),%ebx
		add    %edx,%eax
		sar    $0x000010,%ebx
		movswl %ax,%edx
		mov    0x000006(%esp),%eax
		sar    %ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		cwtl   
		call   _01f4f0_func
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x00000e,%edx
		mov    %esi,%eax
		call   _01d7e0_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %ebx,%eax
		cwtl   
		call   _01f4f0_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f7c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0ce06c_data,%ebx
		mov    _0ce0ac_data,%dl
		mov    0x000028(%eax),%ecx
		add    %ebx,%edx
		mov    0x000068(%eax),%al
		sub    %ecx,%edx
		and    $_0000ff_case,%eax
		sub    %eax,%edx
		test   %edx,%edx
		setg   %al
		xor    %ah,%ah
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01f958_switch:
		.long   _01fa14_case
		.long   _01fa8d_case
		.long   _01fa8d_case
		.long   _01fa36_case
		.long   _01facd_case
		.long   _01facd_case
		.long   _01fb64_case
		.long   _01fbe4_case
		.long   _01fbe4_case
		.long   _01fba4_case
		.long   _01fbe4_case
		.long   _01fbe4_case
		.long   _01fcc3_case
		.long   _01fcd8_case
		.long   _01fcff_case

_01f994_switch:
		.long   _01fc1c_case
		.long   _01fc02_case
		.long   _01fc2c_case
		.long   _01fc1c_case
		.long   _01fc02_case

_01f9a8_switch:
		.long   _01fc9c_case
		.long   _01fc8f_case
		.long   _01fd52_case
		.long   _01fcb6_case
		.long   _01fca9_case




_01f9bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		movzbw 0x00006c(%eax),%si
		shl    $0x000002,%edx
		mov    0x00000c(%eax),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		mov    _0cf3ed_data(%eax),%al
		mov    %esi,%edx
		test   %al,%al
		sete   %al
		sub    $0x000002,%edx
		mov    %al,%ah
		cmp    $0x00000e,%dx
		ja     _01fd52_case
		and    $0x00ffff,%edx
		jmp    *%cs:_01f958_switch(,%edx,4)

	_01fa14_case:
		cmpb   $0x00000e,0x00006b(%ecx)
		jne    _01fd52_case
		test   %al,%al
		je     _01fd52_case
		mov    %ecx,%eax
		call   _01f720_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fa36_case:
		cmpb   $0x000016,0x00006b(%ecx)
		jne    _01fd52_case
		cmpb   $0x000000,0x000076(%ecx)
		jne    _01fa60_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _060460_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fa60_jump:
		mov    $0x000001,%eax
		call   _06b8d0_func
		test   %ax,%ax
		jne    _01fb4a_jump

	_01fa73_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _060460_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fa8d_case:
		cmpb   $0x000013,0x00006b(%ecx)
		jne    _01fd52_case
		test   %ah,%ah
		je     _01fd52_case
		incw   _0cf20a_data
		cmp    $0x000004,%si
		jne    _01fab3_jump
		mov    %ecx,%eax
		call   _01f6c8_func

	_01fab3_jump:
		cmp    $0x000003,%si
		jne    _01fd52_case
		mov    %ecx,%eax
		call   _01f670_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01facd_case:
		cmpb   $0x000014,0x00006b(%ecx)
		jne    _01fd52_case
		cmpb   $0x000000,0x000076(%ecx)
		jne    _01faf7_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _060460_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01faf7_jump:
		mov    _0cf20a_data,%ax
		cmp    $0x000001,%ax
		jb     _01fb40_jump
		jbe    _01fb0d_jump
		cmp    $0x000003,%ax
		je     _01fb22_jump
		jmp    _01fb40_jump

	_01fb0d_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _01d434_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fb22_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ecx,%ecx
		call   _01d434_func
		mov    %cx,_0cf20a_data
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fb40_jump:
		cmp    $0x000006,%si
		jne    _01fa73_jump

	_01fb4a_jump:
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _060460_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fb64_case:
		mov    %ecx,%eax
		call   _01f7c4_func
		test   %ax,%ax
		je     _01fb8a_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _060460_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fb8a_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _060460_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fba4_case:
		mov    %ecx,%eax
		call   _01f7c4_func
		test   %ax,%ax
		je     _01fbca_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _060460_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fbca_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _060460_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fbe4_case:
		cmpb   $0x000014,0x000070(%ecx)
		jne    _01fc34_jump
		mov    %esi,%eax
		sub    $0x000009,%eax
		cmp    $0x000004,%ax
		ja     _01fc2c_case
		and    $0x00ffff,%eax
		jmp    *%cs:_01f994_switch(,%eax,4)

	_01fc02_case:
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01fc0e_jump
		neg    %eax

	_01fc0e_jump:
		mov    %eax,%ebx
		mov    %ax,0x000040(%ecx)
		neg    %ebx
		mov    %bx,0x000040(%ecx)
		jmp    _01fc2c_case

	_01fc1c_case:
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01fc28_jump
		neg    %eax

	_01fc28_jump:
		mov    %ax,0x000040(%ecx)

	_01fc2c_case:
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_01fc34_jump:
		xor    %eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000069(%ecx),%al
		mov    0x000068(%ecx),%dl
		mov    %ax,(%esp)
		mov    %al,%bl
		mov    %ecx,%eax
		movzbw 0x000068(%ecx),%di
		call   _02f310_func
		test   %ax,%ax
		je     _01fd52_case
		mov    -0x000002(%esp),%ebx
		movswl %di,%edx
		mov    %ecx,%eax
		sar    $0x000010,%ebx
		call   _01d6f4_func
		test   %ax,%ax
		je     _01fd52_case
		sub    $0x000009,%esi
		cmp    $0x000004,%si
		ja     _01fd52_case
		xor    %eax,%eax
		mov    %si,%ax
		jmp    *%cs:_01f9a8_switch(,%eax,4)

	_01fc8f_case:
		movb   $0x000009,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fc9c_case:
		movb   $0x00000a,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fca9_case:
		movb   $0x00000c,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fcb6_case:
		movb   $0x00000d,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fcc3_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fcd8_case:
		mov    0x00006b(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x00001d,%dl
		jae    _01fced_jump
		mov    $0xfffffffc,%eax
		jmp    _01fcf2_jump

	_01fced_jump:
		mov    $0xfffffff8,%eax

	_01fcf2_jump:
		mov    %ax,0x000042(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fcff_case:
		mov    %ecx,%eax
		movw   $0x00fff8,0x000042(%ecx)
		call   _01cca0_func
		test   %al,%al
		je     _01fd52_case
		mov    _0cf2ae_data,%eax
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebx
		mov    0x000069(%ecx),%dl
		sar    $0x000010,%eax
		add    %ebx,%edx
		cmp    %eax,%edx
		jge    _01fd52_case
		mov    0x000081(%ecx),%ah
		and    $0x0000fb,%ah
		mov    $0x000001,%edx
		mov    %ah,0x000081(%ecx)
		mov    $_0ce044_data,%eax
		movl   $0x000000,0x000024(%ecx)
		call   _079d94_func
		mov    %dx,_0cf272_data

	_01fd52_case:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01fd5c_func:
		push   %ebx
		push   %edx
		mov    0x00006c(%eax),%dl
		test   %dl,%dl
		jne    _01fd89_jump
		xor    %dh,%dh
		mov    %dx,_0cf20a_data
		mov    0x000081(%eax),%dh
		and    $0x0000f7,%dh
		mov    $0x000001,%ebx
		mov    %dh,0x000081(%eax)
		mov    %ebx,%edx
		call   _060460_func

	_01fd89_jump:
		pop    %edx
		pop    %ebx
		ret    



_01fd8c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmp    $0x000002,%dx
		jne    _01fdee_jump
		call   _01f7c4_func
		mov    0x00006c(%ebx),%cl
		mov    %eax,%edx
		cmp    $0x000005,%cl
		je     _01fdbb_jump
		cmp    $0x000006,%cl
		jne    _01fdaf_jump
		test   %ax,%ax
		je     _01fdbb_jump

	_01fdaf_jump:
		cmpb   $0x000007,0x00006c(%ebx)
		jne    _01fdee_jump
		cmp    $0x000001,%dx
		jne    _01fdee_jump

	_01fdbb_jump:
		mov    0x000076(%ebx),%dl
		dec    %dl
		mov    _0ce0d0_data,%eax
		mov    %dl,0x000076(%ebx)
		xor    %edx,%edx
		mov    0x000036(%eax),%bx
		mov    0x000068(%eax),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000038(%eax),%cx
		mov    0x000069(%eax),%dl
		call   _07af48_func
		add    %ecx,%edx
		movswl %bx,%eax
		movswl %dx,%edx
		call   _07b640_func

	_01fdee_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01fdf4_func:
		movw   $0x000028,_0ce09a_data
		call   _01f7c4_func
		test   %ax,%ax
		je     _01fe0d_jump
		mov    $0x000001,%eax
		ret    

	_01fe0d_jump:
		mov    $0xffffffff,%eax
		ret    



_01fe20_func:
		push   %ebx
		push   %edx
		mov    _0cf498_data,%dx
		cmp    $0x000002,%dx
		jb     _01fe4e_jump
		jbe    _01fe39_jump
		cmp    $0x000003,%dx
		je     _01fe42_jump
		jmp    _01fe4e_jump

	_01fe39_jump:
		mov    $0x000001,%ebx
		mov    %ebx,%edx
		jmp    _01fe55_jump

	_01fe42_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		jmp    _01fe55_jump

	_01fe4e_jump:
		mov    $0x000001,%edx
		xor    %ebx,%ebx

	_01fe55_jump:
		call   _01d444_func
		pop    %edx
		pop    %ebx
		ret    



_01fe60_func:
		push   %ebx
		mov    %eax,%ebx
		cmp    $0x000006,%dx
		jne    _01febd_jump
		cmpw   $0x000000,0x000050(%eax)
		jne    _01febd_jump
		mov    _0ce0d0_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jle    _01fe93_jump
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d434_func
		mov    0x00003a(%ebx),%eax
		sar    $0x000010,%eax
		add    $0x000047,%eax
		jmp    _01fea8_jump

	_01fe93_jump:
		mov    $0x000005,%edx
		mov    %ebx,%eax
		call   _01d434_func
		mov    0x00003a(%ebx),%eax
		sar    $0x000010,%eax
		sub    $0x000055,%eax

	_01fea8_jump:
		mov    %eax,0x000028(%ebx)
		movw   $0x000000,0x000056(%ebx)
		movw   $_0000ff_case,0x000050(%ebx)
		movb   $_0000ff_case,0x00006b(%ebx)
		pop    %ebx
		ret    

	_01febd_jump:
		cmp    $0x000001,%dx
		jle    _01fee2_jump
		mov    _0ce0d0_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jle    _01fed6_jump
		mov    $0x000007,%edx
		jmp    _01fedb_jump

	_01fed6_jump:
		mov    $0x000006,%edx

	_01fedb_jump:
		mov    %ebx,%eax
		call   _01d434_func

	_01fee2_jump:
		pop    %ebx
		ret    

_01fee4_switch:
		.long   _0200f7_case
		.long   _020008_case
		.long   _020039_case
		.long   _02006a_case
		.long   _02009b_case
		.long   _0200c9_case




_01fefc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ebp
		mov    0x000050(%eax),%dx
		dec    %edx
		mov    %dx,0x000050(%eax)
		test   %dx,%dx
		jge    _01ff1b_jump
		movw   $0x000000,0x000050(%eax)

	_01ff1b_jump:
		cmpb   $0x000003,_0cf49c_data
		jne    _020148_jump
		mov    _0cc7a0_data,%esi
		mov    0x000081(%ebp),%al
		movl   $0x000000,0x000024(%ebp)
		and    $0x0000fb,%al
		mov    _0cc7a4_data,%dx
		mov    %al,0x000081(%ebp)
		xor    %eax,%eax
		test   %dx,%dx
		jle    _02032a_jump

	_01ff55_jump:
		cmpw   $0x0000d3,0x000060(%esi)
		jne    _02012e_jump
		xor    %edi,%edi

	_01ff63_jump:
		lea    0x000004(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		movswl %di,%edx
		mov    %ebp,%eax
		call   _01d7e0_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		test   %di,%di
		jne    _01ffb6_jump
		mov    %di,0x000040(%esi)
		mov    %di,0x000042(%esi)
		jmp    _01ffe9_jump

	_01ffb6_jump:
		mov    $0x000004,%eax
		mov    $0x000002,%edx
		call   _06b8d0_func
		sub    %ax,%dx
		mov    %dx,0x000040(%esi)
		jne    _01ffd4_jump
		movw   $0x000001,0x000040(%esi)

	_01ffd4_jump:
		mov    $0x000003,%eax
		mov    $0xfffffffc,%edx
		call   _06b8d0_func
		sub    %eax,%edx
		mov    %dx,0x000042(%esi)

	_01ffe9_jump:
		movb   $0x000000,0x000071(%esi)
		movb   $0x000005,0x000072(%esi)
		cmp    $0x000005,%di
		ja     _020118_jump
		xor    %eax,%eax
		mov    %di,%ax
		jmp    *%cs:_01fee4_switch(,%eax,4)

	_020008_case:
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d444_func
		movb   $0x00002b,0x000069(%esi)
		movb   $0x000019,0x000068(%esi)
		mov    0x000081(%esi),%cl
		movb   $0x00001f,0x00006a(%esi)
		and    $0x0000f7,%cl
		mov    %cl,0x000081(%esi)
		jmp    _020118_jump

	_020039_case:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d444_func
		movb   $0x000011,0x000069(%esi)
		movb   $0x00000c,0x000068(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x000021,0x00006a(%esi)
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%esi)
		jmp    _020118_jump

	_02006a_case:
		mov    $0x00000b,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d444_func
		movb   $0x000007,0x000069(%esi)
		movb   $0x000007,0x000068(%esi)
		mov    0x000081(%esi),%bl
		movb   $0x000022,0x00006a(%esi)
		and    $0x0000f7,%bl
		mov    %bl,0x000081(%esi)
		jmp    _020118_jump

	_02009b_case:
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d444_func
		movb   $0x00001c,0x000069(%esi)
		movb   $0x000011,0x000068(%esi)
		mov    0x000081(%esi),%dh
		movb   $0x000020,0x00006a(%esi)
		and    $0x0000f7,%dh
		mov    %dh,0x000081(%esi)
		jmp    _020118_jump

	_0200c9_case:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d444_func
		movb   $0x000011,0x000069(%esi)
		movb   $0x00000c,0x000068(%esi)
		mov    0x000081(%esi),%dl
		movb   $0x000021,0x00006a(%esi)
		or     $0x000008,%dl
		mov    %dl,0x000081(%esi)
		jmp    _020118_jump

	_0200f7_case:
		mov    $0x000015,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    0x000081(%esi),%ch
		movb   $0x000025,0x00006a(%esi)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%esi)

	_020118_jump:
		inc    %edi
		add    $0x000084,%esi
		cmp    $0x000006,%di
		jge    _02032a_jump
		jmp    _01ff63_jump

	_02012e_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _01ff55_jump
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020148_jump:
		mov    0x00006c(%ebp),%dl
		cmp    $0x000007,%dl
		je     _02032a_jump
		cmp    $0x000006,%dl
		je     _02032a_jump
		cmp    $0x000003,%dl
		je     _02032a_jump
		lea    0x000004(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %ebp,%eax
		call   _01d7e0_func
		push   $0x000020
		mov    0x00000c(%esp),%ecx
		mov    0x000004(%esp),%esi
		mov    0x000010(%esp),%edi
		mov    _0cf4a2_data,%eax
		push   $0x000020
		sar    $0x000010,%eax
		add    $0x000005,%ecx
		add    $0x000005,%esi
		sub    $0x00000a,%edi
		push   %eax
		mov    %cx,0x000014(%esp)
		mov    %si,0x00000c(%esp)
		mov    _0cf4a0_data,%eax
		mov    %di,0x000018(%esp)
		sar    $0x000010,%eax
		mov    0x000016(%esp),%ebx
		push   %eax
		mov    0x000014(%esp),%eax
		mov    0x00000e(%esp),%edx
		sub    $0x00000a,%eax
		sar    $0x000010,%ebx
		mov    %ax,0x000014(%esp)
		sar    $0x000010,%edx
		mov    0x000012(%esp),%ecx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		call   _02b560_func
		test   %ax,%ax
		je     _02022d_jump
		cmpb   $0x000000,_0cf49c_data
		jne    _02022d_jump
		mov    $0x000001,%cl
		mov    _0cf4ae_data,%dx
		movw   $0x000004,0x000056(%ebp)
		inc    %edx
		mov    %cl,_0cf49c_data
		mov    %dx,_0cf4ae_data
		cmp    $0x000006,%dx
		jl     _020224_jump
		mov    %edx,%ecx
		dec    %ecx
		mov    %cx,_0cf4ae_data

	_020224_jump:
		xor    %esi,%esi
		mov    %si,_0cf4aa_data

	_02022d_jump:
		xor    %edx,%edx
		mov    0x00006a(%ebp),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ebp),%eax
		mov    0x00000a(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebp),%dl
		cmp    %eax,%edx
		jne    _02028c_jump
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		mov    0x00000c(%ebp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ebp),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _02028c_jump
		mov    $0x000001,%al
		jmp    _02028e_jump

	_02028c_jump:
		xor    %al,%al

	_02028e_jump:
		mov    0x00006c(%ebp),%ah
		cmp    $0x000004,%ah
		jb     _02032a_jump
		jbe    _0202ab_jump
		cmp    $0x000005,%ah
		je     _0202e0_jump
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0202ab_jump:
		test   %al,%al
		je     _02032a_jump
		mov    0x000056(%ebp),%dx
		inc    %edx
		mov    %dx,0x000056(%ebp)
		cmp    $0x000004,%dx
		jge    _0202d9_jump
		mov    $0x000005,%edx
		mov    %ebp,%eax
		call   _01d434_func
		mov    0x00003a(%ebp),%eax
		sar    $0x000010,%eax
		sub    $0x000055,%eax
		jmp    _020327_jump

	_0202d9_jump:
		mov    $0x000006,%edx
		jmp    _02031a_jump

	_0202e0_jump:
		test   %al,%al
		je     _02032a_jump
		mov    0x000056(%ebp),%di
		inc    %edi
		mov    %di,0x000056(%ebp)
		cmp    $0x000004,%di
		jge    _020315_jump
		mov    $0x000004,%edx
		mov    %ebp,%eax
		call   _01d434_func
		mov    0x00003a(%ebp),%eax
		sar    $0x000010,%eax
		add    $0x000047,%eax
		mov    %eax,0x000028(%ebp)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020315_jump:
		mov    $0x000007,%edx

	_02031a_jump:
		mov    %ebp,%eax
		call   _01d434_func
		mov    0x00003a(%ebp),%eax
		sar    $0x000010,%eax

	_020327_jump:
		mov    %eax,0x000028(%ebp)

	_02032a_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020334_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		cmpw   $0x000000,0x000042(%eax)
		jle    _02038b_jump
		xor    %eax,%eax
		mov    0x00002c(%ebx),%edx
		mov    0x000069(%ebx),%al
		add    %edx,%eax
		cmp    $0x000108,%eax
		jle    _02038b_jump
		mov    0x00003e(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,0x000040(%ebx)
		mov    0x000040(%ebx),%edx
		sar    $0x000010,%edx
		neg    %edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,0x000042(%ebx)
		test   %ax,%ax
		jne    _020381_jump
		movb   $_0000ff_case,0x000072(%ebx)

	_020381_jump:
		mov    $0x000005,%al
		mov    0x000071(%ebx),%ah
		sub    %ah,%al
		mov    %al,0x000071(%ebx)

	_02038b_jump:
		pop    %edx
		pop    %ebx
		ret    



_020390_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    $0x000054,%eax
		call   _072210_func
		mov    0x000028(%edx),%ebx
		movw   $0x00ffff,0x000040(%edx)
		add    $0x000014,%ebx
		mov    %edx,%eax
		mov    %ebx,0x000028(%edx)
		call   _07cc7c_func
		mov    0x000028(%edx),%ecx
		movw   $0x000001,0x000040(%edx)
		sub    $0x000028,%ecx
		mov    %edx,%eax
		mov    %ecx,0x000028(%edx)
		call   _07cc7c_func
		mov    0x000028(%edx),%esi
		add    $0x000014,%esi
		mov    %edx,%eax
		mov    %esi,0x000028(%edx)
		call   _07abbc_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0203e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000032(%eax),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		mov    0x000050(%ecx),%ax
		cmp    $0x000002,%ax
		jb     _020410_jump
		jbe    _02042e_jump
		cmp    $0x000004,%ax
		je     _020460_jump
		jmp    _0204aa_jump

	_020410_jump:
		test   %ax,%ax
		jne    _0204aa_jump
		mov    $0x000003,%al
		mov    0x000071(%ecx),%bl
		movw   $0x00fffb,0x000042(%ecx)
		sub    %bl,%al
		mov    %al,0x000071(%ecx)
		jmp    _0204aa_jump

	_02042e_jump:
		mov    $0x000003,%al
		mov    0x000071(%ecx),%dl
		movw   $0x00fffb,0x000042(%ecx)
		sub    %dl,%al
		mov    0x000081(%ecx),%dh
		mov    %al,0x000071(%ecx)
		test   $0x000008,%dh
		je     _020450_jump
		mov    $0xffffff7e,%eax
		jmp    _020455_jump

	_020450_jump:
		mov    $0x000019,%eax

	_020455_jump:
		add    0x000028(%ecx),%eax
		mov    %ax,_0cf4b6_data
		jmp    _0204aa_jump

	_020460_jump:
		mov    %ecx,%eax
		call   _020390_func
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0ce08e_data,%dx
		jne    _0204aa_jump
		movw   $0x00ffff,_0ce08e_data
		mov    $0x000002,%ebx
		mov    $_0ce044_data,%eax
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d444_func

	_0204aa_jump:
		mov    %ecx,%eax
		call   _0258a0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0204b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0205d2_jump

	_0204d5_jump:
		cmpw   $0x00007a,0x000060(%ecx)
		jne    _0205c2_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0205c2_jump
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		mov    _0cf4b0_data,%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		test   $0x000001,%al
		jne    _02051d_jump
		mov    0x000081(%ecx),%al
		or     $0x000008,%al
		mov    $0xffffffec,%edx
		mov    %al,0x000081(%ecx)
		jmp    _020531_jump

	_02051d_jump:
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    $0x000104,%edx
		mov    %ah,0x000081(%ecx)

	_020531_jump:
		mov    %ecx,%eax
		call   _05dc2c_func
		movswl %dx,%eax
		movw   $0x00ffff,0x000046(%ecx)
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%ebx),%eax
		sub    $0x000014,%eax
		mov    %eax,0x00002c(%ecx)
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f3d4_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		mov    0x000081(%ecx),%dl
		movb   $0x000002,0x00006d(%ecx)
		and    $0x0000bf,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000081(%ecx),%dh
		movb   $0x000002,0x00006c(%ecx)
		test   $0x000008,%dh
		je     _02059b_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		jmp    _0205a4_jump

	_02059b_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_0205a4_jump:
		call   _060460_func
		mov    %ecx,%eax
		call   _01dc5c_func
		cmpw   $0x000000,_095e7c_data
		jne    _0205d2_jump
		movb   $0x000001,0x000076(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0205c2_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _0204d5_jump

	_0205d2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0205d8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,0x000004(%esp)
		mov    _0cc7a0_data,%esi
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0208e1_jump

	_0205fd_jump:
		cmpw   $0x000061,0x000060(%esi)
		jne    _0208d1_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _0208d1_jump
		cmpw   $0x000004,0x000004(%esp)
		jne    _020623_jump
		andb   $0x0000df,0x000081(%esi)
		jmp    _02062a_jump

	_020623_jump:
		orb    $0x000020,0x000081(%esi)

	_02062a_jump:
		cmpw   $0x000000,0x000004(%esp)
		sete   %al
		lea    0x000010(%esp),%ecx
		xor    %ah,%ah
		mov    0x000081(%esi),%bl
		mov    %eax,%edx
		and    $0x0000f7,%bl
		lea    0x000008(%esp),%eax
		add    $0x000008,%edx
		mov    %bl,0x000081(%esi)
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		movswl %dx,%edx
		mov    %edi,%eax
		call   _01d7e0_func
		mov    0x000004(%esp),%ebx
		cmp    $0x000001,%bx
		jne    _0206fc_jump
		mov    -0x000002(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		mov    0x000081(%edi),%bl
		add    %eax,%edx
		test   $0x000008,%bl
		je     _0206a0_jump
		mov    $0x000040,%eax
		jmp    _0206a5_jump

	_0206a0_jump:
		mov    $0xffffffc0,%eax

	_0206a5_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000028,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _0206c7_jump
		mov    $0x00000c,%eax
		jmp    _0206cc_jump

	_0206c7_jump:
		mov    $0xfffffff4,%eax

	_0206cc_jump:
		movw   $0x000000,0x000042(%esi)
		mov    %ax,0x000040(%esi)
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000081(%esi)
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _020850_jump

	_0206fc_jump:
		test   %bx,%bx
		jne    _02078c_jump
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		mov    0x000081(%edi),%ch
		add    %eax,%edx
		test   $0x000008,%ch
		je     _020730_jump
		mov    $0x000009,%eax
		jmp    _020735_jump

	_020730_jump:
		mov    $0xfffffff7,%eax

	_020735_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000028,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _020757_jump
		mov    $0x000002,%eax
		jmp    _02075c_jump

	_020757_jump:
		mov    $0xfffffffe,%eax

	_02075c_jump:
		movw   $0x00fffb,0x000042(%esi)
		mov    %ax,0x000040(%esi)
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _020850_jump

	_02078c_jump:
		cmp    $0x000003,%bx
		jne    _0207c2_jump
		testb  $0x000008,0x000081(%edi)
		je     _0207a2_jump
		mov    $0x000078,%edx
		jmp    _0207a7_jump

	_0207a2_jump:
		mov    $0xffffffdc,%edx

	_0207a7_jump:
		mov    0x000028(%edi),%eax
		add    %edx,%eax
		mov    %eax,0x000028(%esi)
		mov    0x00002c(%edi),%eax
		sub    $0x0000b9,%eax
		movw   $0x000004,0x000042(%esi)
		jmp    _020847_jump

	_0207c2_jump:
		cmp    $0x00000a,%bx
		jge    _0207ee_jump
		mov    _0ce06c_data,%eax
		mov    %eax,0x000028(%esi)
		cmp    $0x000028,%eax
		jge    _0207dc_jump
		movl   $0x000028,0x000028(%esi)

	_0207dc_jump:
		cmpl   $0x0000c8,0x000028(%esi)
		jle    _020839_jump
		movl   $0x0000c8,0x000028(%esi)
		jmp    _020839_jump

	_0207ee_jump:
		testb  $0x000008,0x000081(%edi)
		je     _02081b_jump
		xor    %edx,%edx
		mov    _0cf4a6_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    $0x0000f0,%edx
		add    %eax,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		jmp    _020839_jump

	_02081b_jump:
		xor    %edx,%edx
		mov    _0cf4a6_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		add    %eax,%eax
		sub    $0x000014,%eax
		mov    %eax,0x000028(%esi)

	_020839_jump:
		mov    0x00002c(%edi),%eax
		sub    $0x0000c8,%eax
		movw   $0x000000,0x000042(%esi)

	_020847_jump:
		mov    %eax,0x00002c(%esi)
		movw   $0x000000,0x000040(%esi)

	_020850_jump:
		mov    0x000004(%esp),%ebx
		movw   $0x000026,0x000056(%esi)
		cmp    $0x000003,%bx
		je     _020866_jump
		movb   $0x00000a,0x000072(%esi)
		jmp    _02086a_jump

	_020866_jump:
		movb   $0x000007,0x000072(%esi)

	_02086a_jump:
		cmpw   $0x000000,0x000004(%esp)
		jne    _020876_jump
		movb   $0x000003,0x000072(%esi)

	_020876_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		movb   $0x000002,0x00006d(%esi)
		mov    %ebx,%edx
		movb   $0x000006,0x00006c(%esi)
		call   _060460_func
		mov    %esi,%eax
		call   _01dc5c_func
		mov    0x000081(%esi),%al
		or     $0x000004,%al
		mov    0x000004(%esp),%edi
		mov    %al,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f3d4_func
		movb   $0x000000,0x000071(%esi)
		cmp    $0x00000a,%di
		jge    _0208c3_jump
		mov    %di,0x000050(%esi)
		jmp    _0208e1_jump

	_0208c3_jump:
		movw   $0x000004,0x000050(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0208d1_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _0205fd_jump

	_0208e1_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0208ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0209b6_jump

	_020907_jump:
		cmpw   $0x000061,0x000060(%ecx)
		jne    _0209a6_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0209a6_jump
		movl   $0xffffffd8,0x000028(%ecx)
		movl   $0x0000a0,0x00002c(%ecx)
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%ax
		movw   $0x000026,0x000056(%ecx)
		add    $0x000019,%eax
		movb   $0x000003,0x000072(%ecx)
		mov    %ax,_0cf4b6_data
		mov    0x000081(%ecx),%ah
		movb   $0x000002,0x00006d(%ecx)
		and    $0x0000f7,%ah
		mov    %ebx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movb   $0x000006,0x00006c(%ecx)
		call   _060460_func
		mov    %ecx,%eax
		call   _01dc5c_func
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000024,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f3d4_func
		movb   $0x000000,0x000071(%ecx)
		movw   $0x000002,0x000050(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0209a6_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _020907_jump

	_0209b6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0209bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		call   _01dc5c_func
		movl   $0x000000,0x000024(%edx)
		mov    $0x00000a,%bl
		movw   $0x000000,0x000050(%edx)
		mov    $0x000001,%cl
		mov    0x000081(%edx),%ah
		movb   $0x00000a,0x000072(%edx)
		xor    %esi,%esi
		or     $0x000004,%ah
		mov    %bl,_0cf486_data
		mov    %cl,_0cf4a6_data
		mov    %si,_0cf4b2_data
		mov    %si,_0cf240_data
		xor    %ebx,%ebx
		mov    %ah,0x000081(%edx)
		mov    $0xffffffff,%eax
		mov    %bx,_0cf4a8_data
		mov    %bx,_0cf4ae_data
		mov    %bx,_0cf4aa_data
		mov    %bx,_0cf4b0_data
		mov    %bx,_0cf498_data
		xor    %dl,%dl
		mov    %bx,_0cf4a0_data
		mov    %dl,_0cf483_data
		mov    %dl,_0cf47e_data
		mov    %ax,_0cf49a_data
		xor    %bh,%bh
		mov    $0x00270f,%edx
		mov    %bh,_0cf49c_data
		mov    %dx,_0cf4b6_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020a68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpw   $0x000000,_0cf4a8_data
		je     _020ad8_jump
		call   _020390_func
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000034(%ecx),%bx
		cmp    _0ce08e_data,%bx
		jne    _020ac4_jump
		mov    $0xffffffff,%esi
		mov    $0x000002,%ebx
		mov    $_0ce044_data,%eax
		mov    %si,_0ce08e_data
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d444_func

	_020ac4_jump:
		xor    %edi,%edi
		mov    $0x00270f,%eax
		mov    %di,_0cf4a8_data
		mov    %ax,_0cf4b6_data

	_020ad8_jump:
		cmpw   $0x000003,0x000050(%ecx)
		jne    _020b01_jump
		mov    0x000056(%ecx),%bx
		dec    %bx
		mov    %bx,0x000056(%ecx)
		jne    _020b01_jump
		mov    0x000081(%ecx),%dl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)

	_020b01_jump:
		mov    0x000040(%ecx),%di
		mov    $0x000014,%eax
		test   %di,%di
		jge    _020b14_jump
		mov    $0xffffffec,%eax

	_020b14_jump:
		xor    %edx,%edx
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%dl
		cwtl   
		add    %ebx,%edx
		add    %edx,%eax
		mov    0x00002c(%ecx),%edx
		mov    _0ce036_data,%ebx
		add    $0x000028,%edx
		sar    $0x000010,%ebx
		sar    $0x000004,%edx
		imul   %ebx,%edx
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000010,_0924f4_data(%eax)
		je     _020ca2_jump
		mov    0x000050(%ecx),%ax
		test   %ax,%ax
		jbe    _020c86_jump
		cmp    $0x000001,%ax
		jne    _020ca2_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020b96_jump
		neg    %eax

	_020b96_jump:
		cmp    $0x00000c,%eax
		jne    _020bbd_jump
		cmpw   $0x000000,0x000040(%ecx)
		jle    _020ba9_jump
		mov    $0xfffffff3,%eax
		jmp    _020bae_jump

	_020ba9_jump:
		mov    $0x00000d,%eax

	_020bae_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		jmp    _020ca2_jump

	_020bbd_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020bc9_jump
		neg    %eax

	_020bc9_jump:
		cmp    $0x00000d,%eax
		jne    _020bf1_jump
		cmpw   $0x000000,0x000040(%ecx)
		jle    _020bdc_jump
		mov    $0xfffffff2,%eax
		jmp    _020be1_jump

	_020bdc_jump:
		mov    $0x00000e,%eax

	_020be1_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020bf1_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020bfd_jump
		neg    %eax

	_020bfd_jump:
		cmp    $0x00000e,%eax
		jne    _020c25_jump
		cmpw   $0x000000,0x000040(%ecx)
		jle    _020c10_jump
		mov    $0xfffffff1,%eax
		jmp    _020c15_jump

	_020c10_jump:
		mov    $0x00000f,%eax

	_020c15_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020c25_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020c31_jump
		neg    %eax

	_020c31_jump:
		cmp    $0x00000f,%eax
		jne    _020ca2_jump
		mov    %ecx,%eax
		call   _020390_func
		mov    0x000081(%ecx),%bl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0ce08e_data,%dx
		jne    _020ca2_jump
		movw   $0x00ffff,_0ce08e_data
		mov    $0x000002,%ebx
		mov    $_0ce044_data,%eax
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d444_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020c86_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000002,0x000050(%ecx)

	_020ca2_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020ca8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0cc7a0_data,%esi
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _020dff_jump

	_020cca_jump:
		cmpw   $0x000079,0x000060(%esi)
		jne    _020def_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _020def_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		movw   $0x000000,0x000042(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbw (%edx,%eax,8),%ax
		testb  $0x000008,0x000081(%esi)
		je     _020d2b_jump
		cwtl   
		jmp    _020d2e_jump

	_020d2b_jump:
		cwtl   
		neg    %eax

	_020d2e_jump:
		mov    %ax,0x000040(%esi)
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x00000a,%edx
		mov    %edi,%eax
		call   _01d7e0_func
		mov    0x000006(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    0x000081(%edi),%bl
		mov    %eax,%edx
		test   $0x000008,%bl
		je     _020d7b_jump
		mov    $0x000010,%eax
		jmp    _020d80_jump

	_020d7b_jump:
		mov    $0xfffffff0,%eax

	_020d80_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _060460_func
		mov    %esi,%eax
		call   _01dc5c_func
		mov    0x000081(%esi),%bh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f3d4_func
		mov    %esi,%eax
		call   _07abbc_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020def_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _020cca_jump

	_020dff_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020e08_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0cc7a0_data,%esi
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _02102b_jump

	_020e2a_jump:
		cmpw   $0x000087,0x000060(%esi)
		jne    _02101b_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _02101b_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		mov    0x000081(%esi),%dh
		movw   $0x000000,0x000042(%esi)
		test   $0x000008,%dh
		jne    _020e7a_jump
		movw   $0x000007,0x000040(%esi)
		jmp    _020e80_jump

	_020e7a_jump:
		movw   $0x00fff9,0x000040(%esi)

	_020e80_jump:
		lea    0x000004(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000010(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000003,%edx
		call   _01d7e0_func
		testb  $0x000008,0x000081(%edi)
		jne    _020eac_jump
		xor    %ecx,%ecx
		mov    %cx,0x000008(%esp)

	_020eac_jump:
		mov    0x00000a(%esp),%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%edx
		mov    0x000028(%esi),%ax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%esi)
		sub    $0x000008,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _060460_func
		mov    %esi,%eax
		call   _01dc5c_func
		mov    0x000081(%esi),%bh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f3d4_func
		mov    0x000105(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000105(%esi)
		mov    %cl,%ch
		add    $0x000084,%esi
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		mov    0x000081(%esi),%al
		movw   $0x000000,0x000042(%esi)
		test   $0x000008,%al
		jne    _020f62_jump
		movw   $0x000007,0x000040(%esi)
		jmp    _020f68_jump

	_020f62_jump:
		movw   $0x00fff9,0x000040(%esi)

	_020f68_jump:
		lea    0x000004(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000010(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000002,%edx
		call   _01d7e0_func
		testb  $0x000008,0x000081(%edi)
		jne    _020f94_jump
		xor    %edi,%edi
		mov    %di,0x000008(%esp)

	_020f94_jump:
		mov    0x00000a(%esp),%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%edx
		mov    0x000028(%esi),%ax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%esi)
		sub    $0x000008,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _060460_func
		mov    %esi,%eax
		call   _01dc5c_func
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f3d4_func
		mov    %esi,%eax
		call   _07abbc_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02101b_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _020e2a_jump

	_02102b_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_021050_switch:
		.long   _021092_case
		.long   _0210ab_case
		.long   _0210c4_case
		.long   _0210de_case
		.long   _0210f8_case
		.long   _021111_case
		.long   _02112a_case
		.long   _021154_case




_021070_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cf4ac_data,%ax
		cmp    $0x000007,%ax
		ja     _021169_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_021050_switch(,%eax,4)

	_021092_case:
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		movb   $0x000001,_0cf483_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0210ab_case:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		movb   $0x000002,_0cf483_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0210c4_case:
		mov    $0x000006,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000003,%ch
		call   _01d444_func
		mov    %ch,_0cf483_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0210de_case:
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000004,%cl
		call   _01d444_func
		mov    %cl,_0cf483_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0210f8_case:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		movb   $0x000005,_0cf483_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021111_case:
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		movb   $0x00000c,_0cf483_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02112a_case:
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d444_func
		movb   $0x00000b,_0cf483_data
		mov    $0x000001,%dh
		movw   $0x000023,0x000056(%ecx)
		mov    %dh,_0cf4a6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021154_case:
		mov    $0x000016,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		movb   $0x00000d,_0cf483_data

	_021169_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021170_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf4aa_data,%cx
		mov    %eax,%edx
		inc    %ecx
		cmp    $0x000007,%cx
		jge    _0211af_jump
		mov    _0cf4ac_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		lea    0x000000(,%eax,4),%ebx
		movswl %cx,%eax
		mov    _095e7e_data(%ebx,%eax,4),%ax
		mov    %ax,_0cf4ac_data
		jmp    _0211b8_jump

	_0211af_jump:
		movw   $_0000ff_case,_0cf4ac_data

	_0211b8_jump:
		cmpw   $_0000ff_case,_0cf4ac_data
		jne    _0211e5_jump
		mov    _0cf4ac_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		mov    _095e7e_data(,%eax,4),%ax
		xor    %ecx,%ecx
		mov    %ax,_0cf4ac_data

	_0211e5_jump:
		mov    _0cf4ac_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		lea    0x000000(,%eax,4),%ebx
		movswl %cx,%eax
		mov    _095e80_data(%ebx,%eax,4),%al
		mov    %al,_0cf486_data
		mov    %edx,%eax
		mov    %cx,_0cf4aa_data
		call   _021070_func
		mov    _0cf4aa_data,%cx
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021228_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,_0cf486_data
		je     _02125a_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _060460_func
		movb   $0x000006,_0cf483_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02125a_jump:
		mov    %ecx,%eax
		call   _021170_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021268_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		movw   $0x000000,0x000042(%eax)
		mov    $0x000006,%edx
		movw   $0x000000,0x000040(%eax)
		call   _0258a0_func
		mov    %ebx,%eax
		call   _01d434_func
		mov    %ebx,%eax
		mov    $0x000001,%edx
		call   _055148_func
		mov    %dx,_0cf23e_data
		pop    %edx
		pop    %ebx
		ret    

_0212a0_switch:
		.long   _021615_case
		.long   _021683_case
		.long   _0216f3_case
		.long   _021810_case
		.long   _021880_case
		.long   _0218e8_case
		.long   _02195d_case
		.long   _02198a_case
		.long   _021a40_case
		.long   _021ab8_case
		.long   _021b59_case
		.long   _021b9b_case
		.long   _021c5a_case
		.long   _021ceb_case




_0212d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    $0x000001,%ah
		mov    _0cf4b2_data,%dx
		mov    %ah,_0cf45a_data
		test   %dx,%dx
		je     _021324_jump
		mov    _0cf4b4_data,%bx
		dec    %ebx
		mov    %bx,_0cf4b4_data
		test   %bx,%bx
		jge    _021324_jump
		mov    $0x000032,%edi
		mov    %esi,%eax
		mov    %di,_0cf4b4_data
		call   _0204b8_func
		decw   _0cf4b2_data

	_021324_jump:
		mov    %esp,%eax
		mov    $_0cf4a4_data,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $_0cf4a2_data,%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %esi,%eax
		call   _01d7e0_func
		mov    0x000028(%esi),%ax
		mov    %eax,0x000004(%esp)
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %eax,(%esp)
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _0213a7_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _0213a7_jump
		movb   $0x000001,_0cf482_data
		jmp    _0213af_jump

	_0213a7_jump:
		xor    %dh,%dh
		mov    %dh,_0cf482_data

	_0213af_jump:
		cmpb   $0x000002,_0cf49c_data
		jne    _02140f_jump
		cmpb   $0x000000,_0cf482_data
		je     _02140f_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000077(%esi),%al
		mov    0x000076(%esi),%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _0213e9_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		mov    $0x000007,%ch
		call   _060460_func
		mov    %ch,_0cf483_data

	_0213e9_jump:
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0cf49e_data,%bl
		mov    _0cf49d_data,%dl
		call   _01d444_func
		movb   $0x000001,_0cf486_data
		mov    _0cf4a0_data,%al
		mov    %al,0x000070(%esi)

	_02140f_jump:
		cmpb   $0x000001,_0cf49c_data
		jne    _021498_jump
		mov    0x00006d(%esi),%al
		mov    $0x000009,%ebx
		mov    %al,_0cf49d_data
		mov    0x00006c(%esi),%al
		xor    %edx,%edx
		mov    %al,_0cf49e_data
		mov    %esi,%eax
		call   _01d444_func
		mov    $0x000002,%dl
		mov    0x000076(%esi),%bl
		xor    %eax,%eax
		mov    %dl,_0cf49c_data
		dec    %bl
		mov    0x000070(%esi),%al
		movw   $0x000000,0x000040(%esi)
		xor    %dh,%dh
		mov    %bl,0x000076(%esi)
		mov    %dh,_0cf482_data
		mov    %ax,_0cf4a0_data
		cmp    $0x000001,%bl
		jae    _021498_jump
		mov    $0x000003,%cl
		mov    $0x000014,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    %cl,_0cf49c_data
		call   _01d444_func
		mov    $0x0001a4,%edx
		movw   $0x000000,0x000040(%esi)
		mov    $0x000001,%ch
		mov    %dx,_0cf4a0_data
		mov    %ch,_0cf467_data

	_021498_jump:
		cmpb   $0x000003,_0cf49c_data
		jne    _0214df_jump
		mov    _0cf4a0_data,%ax
		dec    %eax
		mov    %ax,_0cf4a0_data
		cmp    $0x000001,%ax
		jge    _021db7_jump
		movb   $0x000001,_0cf465_data
		mov    _0cf228_data,%ch
		mov    $0x0003e7,%ebx
		or     $0x000008,%ch
		mov    %bx,_0cf4a0_data
		mov    %ch,_0cf228_data
		jmp    _021db7_jump

	_0214df_jump:
		mov    0x000070(%esi),%al
		cmp    $0x000001,%al
		jb     _0214f5_jump
		jbe    _021504_jump
		cmp    $0x000002,%al
		je     _0215fb_jump
		jmp    _021d9d_jump

	_0214f5_jump:
		test   %al,%al
		jne    _021d9d_jump
		andb   $0x0000f7,0x000081(%esi)

	_021504_jump:
		cmpb   $0x000001,0x000070(%esi)
		jne    _021511_jump
		orb    $0x000008,0x000081(%esi)

	_021511_jump:
		mov    %esi,%eax
		call   _0552b4_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _024f68_func
		and    $_0000ff_case,%eax
		testb  $0x000010,_0924f4_data(%eax)
		je     _02156d_jump
		mov    0x000081(%esi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    $0x000006,%edx
		mov    %bh,(%eax)
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000008,%cl
		call   _060460_func
		mov    %cl,_0cf483_data

	_02156d_jump:
		cmpb   $0x000007,_0cf483_data
		jne    _0215ef_jump
		testb  $0x000008,0x000081(%esi)
		je     _02158a_jump
		mov    $0x00000a,%eax
		jmp    _02158f_jump

	_02158a_jump:
		mov    $0xfffffff6,%eax

	_02158f_jump:
		mov    _0cf4b4_data,%edx
		sar    $0x000010,%edx
		add    $0x000004,%edx
		add    %edx,%eax
		cmp    0x000028(%esi),%eax
		jle    _0215ef_jump
		testb  $0x000008,0x000081(%esi)
		je     _0215b2_jump
		mov    $0x00000a,%eax
		jmp    _0215b7_jump

	_0215b2_jump:
		mov    $0xfffffff6,%eax

	_0215b7_jump:
		mov    _0cf4b4_data,%edx
		sar    $0x000010,%edx
		sub    $0x000004,%edx
		mov    0x000028(%esi),%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jge    _0215ef_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		movb   $0x000009,_0cf483_data

	_0215ef_jump:
		mov    %esi,%eax
		call   _025590_func
		jmp    _021d9d_jump

	_0215fb_jump:
		mov    _0cf483_data,%al
		cmp    $0x00000d,%al
		ja     _021d9d_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_0212a0_switch(,%eax,4)

	_021615_case:
		cmpb   $0x000000,_0cf4a6_data
		je     _021633_jump
		mov    $0x000001,%dl
		call   _0208ec_func
		mov    %dl,_0cf47e_data
		xor    %dh,%dh
		mov    %dh,_0cf4a6_data

	_021633_jump:
		cmpb   $0x000000,_0cf482_data
		je     _021d9d_jump
		cmpb   $0x000000,_0cf47e_data
		je     _021d9d_jump
		movb   $0x000000,0x00006b(%esi)
		mov    _095e80_data,%al
		xor    %ecx,%ecx
		mov    %al,_0cf486_data
		mov    _095e7e_data,%ax
		mov    %cx,_0cf4ae_data
		mov    %ax,_0cf4ac_data
		mov    %esi,%eax
		mov    %cx,_0cf4aa_data
		call   _021070_func
		jmp    _021d9d_jump

	_021683_case:
		mov    0x00006c(%esi),%bh
		cmp    $0x000004,%bh
		jne    _0216da_jump
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _0216da_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %bh,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _0216da_jump
		cmpw   $0x000000,_0cf240_data
		jne    _0216da_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		mov    %bx,_0cf240_data
		call   _0205d8_func

	_0216da_jump:
		cmpb   $0x000000,_0cf482_data
		je     _021d9d_jump
		mov    %esi,%eax
		call   _021228_func
		jmp    _021d9d_jump

	_0216f3_case:
		cmpb   $0x00000b,0x00006c(%esi)
		jne    _021733_jump
		cmpb   $0x000017,0x00006b(%esi)
		jne    _021733_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _021733_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0205d8_func

	_021733_jump:
		cmpb   $0x000003,0x00006c(%esi)
		jne    _0217b9_jump
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _0217b9_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _0217b9_jump
		cmpw   $0x000000,_0cf240_data
		jne    _0217b9_jump
		mov    $0x000001,%edi
		mov    $0x000003,%edx
		mov    %esi,%eax
		mov    %di,_0cf240_data
		call   _0205d8_func
		cmpw   $0x000000,_095e7c_data
		jne    _0217a6_jump
		mov    $0x000003,%edx
		jmp    _0217ab_jump

	_0217a6_jump:
		mov    $0x000001,%edx

	_0217ab_jump:
		xor    %eax,%eax
		mov    _0cf486_data,%al
		add    %edx,%eax
		mov    %al,_0cf486_data

	_0217b9_jump:
		cmpb   $0x00000a,0x00006c(%esi)
		jne    _0217e6_jump
		cmpb   $0x000000,_0cf482_data
		je     _0217e6_jump
		mov    _0cf486_data,%al
		dec    %al
		mov    %al,_0cf486_data
		je     _0217e6_jump
		mov    $0x00000a,%edx
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01d434_func

	_0217e6_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x00000b,%dl
		jne    _021d9d_jump
		cmpb   $0x000000,_0cf482_data
		je     _021d9d_jump
		mov    %dl,_0cf483_data
		movw   $0x000023,0x000056(%esi)
		jmp    _021d9d_jump

	_021810_case:
		mov    0x00006c(%esi),%bl
		cmp    $0x000006,%bl
		jne    _021867_jump
		cmpb   $0x000040,0x00006b(%esi)
		jne    _021867_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %bl,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _021867_jump
		cmpw   $0x000000,_095e7c_data
		setne  %al
		and    $_0000ff_case,%eax
		xor    %ebx,%ebx
		add    $0x000003,%eax
		mov    %bx,_0cf4b4_data
		mov    %ax,_0cf4b2_data

	_021867_jump:
		cmpb   $0x000000,_0cf482_data
		je     _021d9d_jump
		mov    %esi,%eax
		call   _021228_func
		jmp    _021d9d_jump

	_021880_case:
		cmpb   $0x000007,0x00006c(%esi)
		jne    _0218cf_jump
		cmpb   $0x00002c,0x00006b(%esi)
		jne    _0218cf_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _0218cf_jump
		mov    %esi,%eax
		call   _020e08_func
		mov    0x000032(%esi),%edx
		mov    $0x000072,%eax
		sar    $0x000010,%edx
		call   _071b3c_func

	_0218cf_jump:
		cmpb   $0x000000,_0cf482_data
		je     _021d9d_jump
		mov    %esi,%eax
		call   _021228_func
		jmp    _021d9d_jump

	_0218e8_case:
		cmpb   $0x000002,0x00006c(%esi)
		jne    _021933_jump
		cmpb   $0x000015,0x00006b(%esi)
		jne    _021933_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _021933_jump
		mov    %esi,%eax
		call   _020ca8_func
		mov    0x000032(%esi),%edx
		mov    $0x000072,%eax
		sar    $0x000010,%edx
		call   _071b3c_func

	_021933_jump:
		cmpb   $0x000000,_0cf482_data
		je     _021d9d_jump
		mov    $0x000001,%edx
		mov    $0x00000a,%ch
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01d434_func
		mov    %ch,_0cf483_data
		jmp    _021d9d_jump

	_02195d_case:
		cmpb   $0x000000,_0cf482_data
		je     _021d9d_jump
		mov    _0cf486_data,%ah
		dec    %ah
		mov    %ah,_0cf486_data
		jne    _021d9d_jump
		mov    %esi,%eax
		call   _021170_func
		jmp    _021d9d_jump

	_02198a_case:
		cmpb   $0x000008,0x00006c(%esi)
		jne    _0219cc_jump
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _0219cc_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _0219cc_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0205d8_func
		jmp    _021d9d_jump

	_0219cc_jump:
		cmpb   $0x000000,_0cf482_data
		je     _021d9d_jump
		mov    _0cf486_data,%bh
		dec    %bh
		mov    %bh,_0cf486_data
		jne    _021a2f_jump
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d444_func
		testb  $0x000008,0x000081(%esi)
		je     _021a19_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _060460_func
		jmp    _021d9d_jump

	_021a19_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _060460_func
		jmp    _021d9d_jump

	_021a2f_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d434_func
		jmp    _021d9d_jump

	_021a40_case:
		cmpb   $0x000000,_0cf482_data
		je     _021d9d_jump
		cmpb   $0x000009,0x00006c(%esi)
		setne  %al
		and    $_0000ff_case,%eax
		je     _021d9d_jump
		cmpb   $0x000000,_0cf4a6_data
		jne    _021aaa_jump
		mov    _0cf4ac_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		xor    %edi,%edi
		mov    _095e80_data(,%eax,4),%dl
		mov    _095e7e_data(,%eax,4),%ax
		mov    %di,_0cf4aa_data
		mov    %ax,_0cf4ac_data
		mov    %esi,%eax
		mov    %dl,_0cf486_data
		call   _021070_func
		jmp    _021d9d_jump

	_021aaa_jump:
		mov    %esi,%eax
		call   _021170_func
		xor    %al,%al
		jmp    _021d98_jump

	_021ab8_case:
		cmpb   $0x000014,0x00006b(%esi)
		jne    _021afd_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _021afd_jump
		cmpb   $0x000009,0x00006c(%esi)
		setne  %al
		and    $_0000ff_case,%eax
		je     _021afd_jump
		movw   $0x000001,_0cf4a8_data

	_021afd_jump:
		cmpb   $0x000000,_0cf482_data
		je     _021d9d_jump
		cmpb   $0x000002,_0cf49c_data
		je     _021d9d_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		testb  $0x000008,0x000081(%esi)
		je     _021b3a_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		jmp    _021b44_jump

	_021b3a_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx

	_021b44_jump:
		mov    %esi,%eax
		call   _060460_func
		xor    %esi,%esi
		mov    %si,_0cf4a8_data
		jmp    _021d9d_jump

	_021b59_case:
		cmpb   $0x000000,_0cf482_data
		je     _021d9d_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		movb   $0x000000,0x00006b(%esi)
		call   _01d444_func
		testb  $0x000008,0x000081(%esi)
		je     _021a19_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _060460_func
		jmp    _021d9d_jump

	_021b9b_case:
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%al
		jb     _021bb1_jump
		jbe    _021bb9_jump
		cmp    $0x000006,%al
		je     _021c1c_jump
		jmp    _021d9d_jump

	_021bb1_jump:
		test   %al,%al
		jne    _021d9d_jump

	_021bb9_jump:
		mov    0x000056(%esi),%dx
		dec    %edx
		mov    %dx,0x000056(%esi)
		cmp    $0x000001,%dx
		jle    _021bf2_jump
		movw   $0x00fff8,0x000042(%esi)
		mov    0x000081(%esi),%dh
		movb   $0x000000,0x000071(%esi)
		test   $0x000008,%dh
		je     _021be4_jump
		mov    $0x000004,%eax
		jmp    _021be9_jump

	_021be4_jump:
		mov    $0xfffffffc,%eax

	_021be9_jump:
		mov    %ax,0x000040(%esi)
		jmp    _021d9d_jump

	_021bf2_jump:
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _01d434_func
		testb  $0x000008,0x000081(%esi)
		je     _021c0e_jump
		mov    $0x000002,%eax
		jmp    _021c13_jump

	_021c0e_jump:
		mov    $0xfffffffe,%eax

	_021c13_jump:
		mov    %ax,0x000040(%esi)
		jmp    _021d9d_jump

	_021c1c_jump:
		cmpb   $0x000000,_0cf482_data
		je     _021d9d_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		testb  $0x000008,0x000081(%esi)
		je     _021a19_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _060460_func
		jmp    _021d9d_jump

	_021c5a_case:
		cmpb   $0x000004,0x00006c(%esi)
		jne    _021cbd_jump
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _021cbd_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _021cbd_jump
		cmpw   $0x000000,_0cf240_data
		jne    _021cbd_jump
		movw   $0x000001,_0cf240_data
		xor    %eax,%eax
		mov    _0cf4a6_data,%al
		add    $0x00000a,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _0205d8_func
		incb   _0cf4a6_data

	_021cbd_jump:
		cmpb   $0x000000,_0cf482_data
		je     _021d9d_jump
		cmpb   $0x000003,_0cf4a6_data
		jne    _021d9d_jump
		xor    %ch,%ch
		mov    %esi,%eax
		mov    %ch,_0cf4a6_data
		call   _021228_func
		jmp    _021d9d_jump

	_021ceb_case:
		cmpb   $0x000016,0x00006c(%esi)
		jne    _021d9d_jump
		cmpb   $0x00003f,0x00006b(%esi)
		jne    _021d2f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _021d2f_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0205d8_func

	_021d2f_jump:
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _021d7f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _021d7f_jump
		cmpw   $0x000000,_0cf240_data
		jne    _021d7f_jump
		mov    $0x000001,%ecx
		mov    $0x000003,%edx
		mov    %esi,%eax
		mov    %cx,_0cf240_data
		call   _0205d8_func

	_021d7f_jump:
		cmpb   $0x000000,_0cf482_data
		je     _021d9d_jump
		mov    $0x00000b,%ch
		mov    $0x000001,%al
		movw   $0x000023,0x000056(%esi)
		mov    %ch,_0cf483_data

	_021d98_jump:
		mov    %al,_0cf4a6_data

	_021d9d_jump:
		cmpb   $0x000000,_0cf482_data
		je     _021db7_jump
		cmpb   $0x000002,_0cf49c_data
		jne    _021db7_jump
		xor    %bh,%bh
		mov    %bh,_0cf49c_data

	_021db7_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021dc0_func:
		push   %ebx
		mov    %eax,%ebx
		cmp    $0x000009,%dx
		jne    _021de7_jump
		mov    $0x000008,%edx
		call   _01d434_func
		mov    $0x000007,%ah
		mov    $0x000002,%dl
		movb   $0x000000,0x00006b(%ebx)
		mov    %ah,_0cf483_data
		mov    %dl,_0cf486_data

	_021de7_jump:
		pop    %ebx
		ret    

_021dec_switch:
		.long   _022013_case
		.long   _0220d9_case
		.long   _022166_case
		.long   _022203_case
		.long   _02241d_case
		.long   _0225af_case




_021e04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		movzbw 0x000068(%eax),%di
		mov    0x000028(%eax),%dx
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000074(%esi),%al
		add    %edx,%edi
		add    %ebx,%eax
		xor    %edx,%edx
		add    $0x000040,%eax
		mov    0x00006a(%esi),%dl
		mov    %ax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _021e84_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _021e84_jump
		movb   $0x000001,_0cf482_data
		jmp    _021e8c_jump

	_021e84_jump:
		xor    %dh,%dh
		mov    %dh,_0cf482_data

	_021e8c_jump:
		cmpb   $0x000002,_0cf483_data
		jae    _021f03_jump
		cmpb   $0x000002,0x00006d(%esi)
		setne  %al
		and    $_0000ff_case,%eax
		je     _021f03_jump
		mov    _0cf248_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		mov    $0x000010,%ecx
		sub    %eax,%edx
		mov    $0xfffffff0,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _021ecc_jump
		cmp    %ecx,%eax
		jg     _021ecc_jump
		mov    $0x000001,%eax
		jmp    _021ece_jump

	_021ecc_jump:
		xor    %eax,%eax

	_021ece_jump:
		test   %eax,%eax
		je     _021f03_jump
		mov    -0x000002(%esp),%eax
		mov    _0cf24a_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000020,%eax
		cmp    %eax,%edx
		jge    _021f03_jump
		mov    $0x000010,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_021f03_jump:
		mov    0x00006d(%esi),%ch
		cmp    $0x000001,%ch
		jne    _021f54_jump
		cmpb   $0x000000,_0cf483_data
		jne    _021f1a_jump
		mov    %ch,_0cf483_data

	_021f1a_jump:
		mov    %esi,%eax
		call   _0552b4_func
		cmpb   $0x000004,_0cf483_data
		jae    _021f31_jump
		mov    %esi,%eax
		call   _025590_func

	_021f31_jump:
		cmpb   $0x000000,_0cf482_data
		je     _021f54_jump
		xor    %eax,%eax
		mov    _0cf496_data,%edx
		mov    0x00006c(%esi),%al
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		je     _021f54_jump
		mov    %esi,%eax
		call   _01fe20_func

	_021f54_jump:
		cmpw   $0x000008,_0cf49a_data
		jge    _021fed_jump
		mov    _0cf483_data,%bl
		test   %bl,%bl
		je     _021fed_jump
		cmp    $0x000005,%bl
		je     _021fed_jump
		mov    _0cf268_data,%ax
		cmp    _0cf286_data,%ax
		jne    _021fa1_jump
		mov    _0cf2ac_data,%eax
		movswl %di,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _021f99_jump
		mov    %ebx,%eax

	_021f99_jump:
		mov    %ax,_0cf268_data
		jmp    _021faf_jump

	_021fa1_jump:
		cmp    %ax,%di
		jle    _021faf_jump
		movw   $0x000001,_0cf4a0_data

	_021faf_jump:
		cmpw   $0x000000,_0cf4a0_data
		je     _021ff9_jump
		cmpb   $0x000001,0x00006d(%esi)
		jne    _021fd7_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    _0cf268_data,%bx
		inc    %eax
		add    %eax,%ebx
		mov    %bx,_0cf268_data
		jmp    _021ff9_jump

	_021fd7_jump:
		mov    _0cf268_data,%dx
		mov    0x000040(%esi),%ax
		add    %eax,%edx
		mov    %dx,_0cf268_data
		jmp    _021ff9_jump

	_021fed_jump:
		mov    _0cf286_data,%ax
		mov    %ax,_0cf268_data

	_021ff9_jump:
		mov    _0cf483_data,%al
		cmp    $0x000005,%al
		ja     _0227e0_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_021dec_switch(,%eax,4)

	_022013_case:
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000002,_0924f4_data(%eax)
		jne    _022025_jump
		mov    $0x00003c,%al
		jmp    _022027_jump

	_022025_jump:
		mov    $0x000028,%al

	_022027_jump:
		xor    %edx,%edx
		mov    0x000062(%esi),%dl
		testb  $0x000002,_0924f4_data(%edx)
		jne    _022091_jump
		xor    %edx,%edx
		movswl %di,%ebx
		mov    %al,%dl
		mov    _0cf248_data,%eax
		add    %ebx,%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jle    _0227e0_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0227e0_jump
		cmpw   $0x000000,_0cf498_data
		je     _0227e0_jump
		mov    0x000081(%esi),%bh
		mov    $0x000002,%edx
		or     $0x000008,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		mov    $0x000001,%ebx
		call   _01d444_func
		movw   $0x000002,0x000042(%esi)
		jmp    _0227e0_jump

	_022091_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0227e0_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _0227e0_jump
		movswl %di,%edx
		and    $_0000ff_case,%eax
		add    %edx,%eax
		mov    _0cf248_data,%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jle    _0227e0_jump
		mov    $0x000001,%dh
		mov    %esi,%eax
		mov    %dh,_0cf483_data
		call   _01fe20_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0220d9_case:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _0227e0_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		lea    0x000008(%eax),%edx
		mov    _0ce036_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		add    %ecx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0ce040_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		jne    _0227e0_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d444_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fff8,0x000042(%esi)
		movw   $0x000003,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022166_case:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _0227e0_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		mov    _0ce036_data,%ebx
		add    $0x000008,%eax
		sar    $0x000010,%ebx
		sar    $0x000004,%eax
		imul   %eax,%ebx
		mov    0x000028(%esi),%edx
		xor    %eax,%eax
		sub    $0x000008,%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0ce040_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		jne    _0227e0_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d444_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    $0xffffffff,%ecx
		movw   $0x000000,0x000042(%esi)
		mov    %cx,_0cf49a_data
		movw   $0x000000,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022203_case:
		mov    _0cf266_data,%eax
		mov    $0x0015cc,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _022216_jump
		mov    %ebx,%eax

	_022216_jump:
		mov    _0cf248_data,%edx
		mov    %ax,_0cf268_data
		movswl %di,%eax
		sar    $0x000010,%edx
		add    $0x000020,%eax
		cmp    %eax,%edx
		jle    _0222da_jump
		mov    _0cf498_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0222da_jump
		mov    (%esp),%edx
		cmp    _0cf24c_data,%dx
		jge    _0222da_jump
		mov    _0cf496_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _022273_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01fe20_func
		mov    %bx,_0cf49a_data
		jmp    _0222da_jump

	_022273_jump:
		mov    0x000050(%esi),%bx
		cmp    $0x0000c8,%bx
		jge    _0222ae_jump
		mov    %ebx,%ecx
		inc    %ecx
		mov    %cx,0x000050(%esi)
		cmp    $0x0000c8,%cx
		jne    _0222ae_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		mov    %dx,_0cf498_data
		call   _01fe20_func
		mov    %bx,_0cf49a_data
		movw   $_0000ff_case,0x000050(%esi)

	_0222ae_jump:
		mov    _0cf2ae_data,%ax
		mov    %ax,_0cf268_data
		cmp    %ax,%di
		jle    _0222da_jump
		mov    _0ce082_data,%ebx
		mov    $0x000001,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _0222d3_jump
		mov    %ebx,%eax

	_0222d3_jump:
		add    %ax,_0cf268_data

	_0222da_jump:
		cmpb   $0x000000,_0cf482_data
		je     _0222f6_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0222f6_jump
		cmpb   $0x000010,0x00006c(%esi)
		jne    _0222f6_jump
		mov    %esi,%eax
		call   _01fe20_func

	_0222f6_jump:
		cmpb   $0x000000,_0cf482_data
		je     _022312_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _022312_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _022312_jump
		mov    %esi,%eax
		call   _01fe20_func

	_022312_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _0227e0_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%al
		add    %ebp,%eax
		mov    _0ce036_data,%ebx
		add    $0x000008,%eax
		sar    $0x000010,%ebx
		sar    $0x000004,%eax
		imul   %eax,%ebx
		mov    0x000028(%esi),%edx
		xor    %eax,%eax
		sub    $0x000008,%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0ce040_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		jne    _022395_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movw   $0x00fffa,0x000042(%esi)
		mov    %esi,%eax
		movw   $0x000003,0x000040(%esi)
		call   _01d444_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)

	_022395_jump:
		cmpb   $0x000002,0x00006d(%esi)
		setne  %al
		and    $_0000ff_case,%eax
		je     _0227e0_jump
		mov    _0cf248_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		mov    $0x000010,%ecx
		sub    %eax,%edx
		mov    $0xfffffff0,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _0223d0_jump
		cmp    %ecx,%eax
		jg     _0223d0_jump
		mov    $0x000001,%eax
		jmp    _0223d2_jump

	_0223d0_jump:
		xor    %eax,%eax

	_0223d2_jump:
		test   %eax,%eax
		je     _0227e0_jump
		mov    -0x000002(%esp),%edx
		mov    _0cf24a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    $0x000020,%edx
		cmp    %edx,%eax
		jge    _0223f7_jump
		mov    $0x000010,%ebx
		jmp    _0223fc_jump

	_0223f7_jump:
		mov    $0x000001,%ebx

	_0223fc_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000042(%esi)
		mov    0x000042(%esi),%ax
		mov    %ax,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02241d_case:
		mov    _0cf266_data,%ax
		cmp    _0cf4a4_data,%ax
		jle    _022436_jump
		mov    %eax,%ecx
		dec    %ecx
		mov    %cx,_0cf266_data

	_022436_jump:
		cmpb   $0x000000,_0cf482_data
		je     _0224bb_jump
		mov    0x00006d(%esi),%ah
		cmp    $0x000002,%ah
		jne    _022465_jump
		cmp    0x00006c(%esi),%ah
		jne    _022465_jump
		mov    $0x000001,%ecx
		mov    %esi,%eax
		mov    %cx,_0cf498_data
		call   _01fe20_func
		jmp    _0224bb_jump

	_022465_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0224bb_jump
		cmpb   $0x000005,0x00006c(%esi)
		jne    _0224bb_jump
		mov    _0cf4a2_data,%ax
		inc    %eax
		mov    %ax,_0cf4a2_data
		cmp    $0x000003,%ax
		jge    _022499_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %bx,_0cf498_data
		call   _01fe20_func
		jmp    _0224bb_jump

	_022499_jump:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000005,%bh
		mov    _0cf2b0_data,%ax
		mov    %bh,_0cf483_data
		mov    %ax,_0cf4a4_data

	_0224bb_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _02257d_jump
		testb  $0x000008,0x000081(%esi)
		je     _0224d5_jump
		mov    $0x000010,%eax
		jmp    _0224da_jump

	_0224d5_jump:
		mov    $0xfffffff0,%eax

	_0224da_jump:
		mov    0x000028(%esi),%ebx
		mov    0x00002c(%esi),%ecx
		xor    %edx,%edx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%esi),%dl
		mov    0x000069(%esi),%al
		add    %edx,%ebx
		add    %ecx,%eax
		mov    _0ce036_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ebx
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		jne    _02257d_jump
		mov    0x000081(%esi),%al
		movw   $0x000000,0x000042(%esi)
		shl    $0x000004,%al
		movw   $0x000000,0x000040(%esi)
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $_0000ff_case,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,0x000081(%esi)
		or     %al,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		mov    $0x000005,%ebx
		call   _01d444_func

	_02257d_jump:
		mov    _0cf24c_data,%eax
		mov    _0cf248_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %di,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _02259f_jump
		neg    %eax

	_02259f_jump:
		cmp    $0x0000fa,%eax
		jle    _0227e0_jump
		jmp    _0227a4_jump

	_0225af_case:
		mov    _0cf49a_data,%cx
		test   %cx,%cx
		jge    _0225e5_jump
		mov    %ecx,%eax
		inc    %ax
		mov    %ax,_0cf49a_data
		jne    _0225cf_jump
		mov    _0cf278_data,%ax
		jmp    _0225df_jump

	_0225cf_jump:
		xor    %edx,%edx
		mov    _0cf4a4_data,%ax
		mov    _0cf3f2_data,%dl
		sub    %edx,%eax

	_0225df_jump:
		mov    %ax,_0cf266_data

	_0225e5_jump:
		cmpb   $0x000000,_0cf482_data
		je     _02260d_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02260d_jump
		cmpb   $0x000005,0x00006c(%esi)
		jne    _02260d_jump
		mov    $0x000003,%ebx
		mov    %esi,%eax
		mov    %bx,_0cf498_data
		call   _01fe20_func

	_02260d_jump:
		mov    0x00006d(%esi),%dl
		test   %dl,%dl
		jne    _02266b_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _02266b_jump
		cmpb   $0x000000,_0cf482_data
		je     _022635_jump
		movw   $0x000002,_0cf498_data
		mov    %esi,%eax
		call   _01fe20_func
		jmp    _02266b_jump

	_022635_jump:
		cmpb   $0x000015,0x00006b(%esi)
		jne    _02266b_jump
		xor    %eax,%eax
		mov    %dl,%al
		shl    $0x000002,%eax
		mov    0x00000c(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _02266b_jump
		movw   $0x00ffe2,_0cf49a_data

	_02266b_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _02277b_jump
		testb  $0x000008,0x000081(%esi)
		je     _022685_jump
		mov    $0x000010,%eax
		jmp    _02268a_jump

	_022685_jump:
		mov    $0xfffffff0,%eax

	_02268a_jump:
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		lea    (%eax,%edx,1),%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		add    $0x000008,%eax
		mov    _0ce036_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		imul   %edx,%eax
		sar    $0x000004,%ebx
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		jne    _02277b_jump
		cmpw   $0x000003,_0cf498_data
		jne    _022729_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d444_func
		movw   $0x00fffe,0x000042(%esi)
		movw   $0x000004,0x000040(%esi)
		mov    _0cf278_data,%ax
		movb   $_0000ff_case,0x000072(%esi)
		mov    %ax,_0cf266_data
		mov    _0cf286_data,%ax
		movb   $0x000000,0x000071(%esi)
		mov    %ax,_0cf268_data
		jmp    _02277b_jump

	_022729_jump:
		mov    0x000081(%esi),%al
		movw   $0x000000,0x000042(%esi)
		shl    $0x000004,%al
		movw   $0x000000,0x000040(%esi)
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $_0000ff_case,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,0x000081(%esi)
		or     %al,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		mov    $0x000005,%ebx
		call   _01d444_func

	_02277b_jump:
		mov    _0cf24c_data,%eax
		mov    _0cf248_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %di,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _02279d_jump
		neg    %eax

	_02279d_jump:
		cmp    $0x000190,%eax
		jle    _0227e0_jump

	_0227a4_jump:
		mov    _0cf278_data,%ax
		mov    0x000081(%esi),%cl
		xor    %bh,%bh
		movl   $0x000000,0x000024(%esi)
		mov    %bh,_0cf488_data
		and    $0x0000fb,%cl
		mov    %bh,_0cf483_data
		mov    %ax,_0cf266_data
		mov    _0cf286_data,%ax
		mov    %cl,0x000081(%esi)
		mov    %ax,_0cf268_data

	_0227e0_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0227ec_func:
		mov    0x000076(%eax),%al
		xor    %ah,%ah
		mov    %ax,_0cf498_data
		ret    

_0227f8_switch:
		.long   _022845_case
		.long   _022857_case
		.long   _022876_case
		.long   _0228ab_case




_022808_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpw   $0x000001,0x000042(%eax)
		jle    _022915_jump
		movw   $0x000000,0x000042(%eax)
		movw   $0x000000,0x000040(%eax)
		call   _0258a0_func
		mov    _0cf483_data,%al
		cmp    $0x000003,%al
		ja     _022915_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_0227f8_switch(,%eax,4)

	_022845_case:
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d434_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022857_case:
		mov    %ebx,%eax
		mov    $0x000002,%dh
		call   _01fe20_func
		mov    _0cf498_data,%ax
		mov    %dh,_0cf483_data
		mov    %ax,0x000040(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022876_case:
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d434_func
		mov    $0x000003,%dl
		mov    $0xffffffff,%ecx
		mov    %dl,_0cf483_data
		mov    0x000028(%ebx),%edx
		movw   $0x000000,0x000050(%ebx)
		sub    $0x000020,%edx
		mov    %cx,_0cf498_data
		mov    %edx,0x000028(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0228ab_case:
		mov    $0x000002,%edx
		mov    $0x0002b3,%esi
		movb   $0x000005,0x000072(%ebx)
		mov    _0cf49a_data,%cx
		movb   $0x000000,0x000071(%ebx)
		mov    %ebx,%eax
		movw   $0x000002,0x000040(%ebx)
		inc    %ecx
		xor    %edi,%edi
		mov    %cx,_0cf49a_data
		call   _01d434_func
		mov    _0cf2b0_data,%ax
		mov    %si,_0cf4a4_data
		mov    %di,_0cf4a2_data
		movw   $0x000000,0x000040(%ebx)
		mov    %ax,_0cf266_data
		cmp    %si,%ax
		jge    _022907_jump
		mov    %si,_0cf266_data

	_022907_jump:
		mov    $0x000004,%ah
		movw   $0x000000,0x000042(%ebx)
		mov    %ah,_0cf483_data

	_022915_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02291c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jne    _022978_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _022978_jump
		movb   $0x000001,_0cf482_data
		jmp    _022980_jump

	_022978_jump:
		xor    %dh,%dh
		mov    %dh,_0cf482_data

	_022980_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _0229b7_jump
		mov    %ecx,%eax
		call   _0552b4_func
		mov    %ecx,%eax
		call   _025590_func
		cmpb   $0x000000,_0cf482_data
		je     _0229b7_jump
		xor    %eax,%eax
		mov    _0cf496_data,%edx
		mov    0x00006c(%ecx),%al
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		je     _0229b7_jump
		mov    %ecx,%eax
		call   _01fe20_func

	_0229b7_jump:
		mov    _0cf483_data,%al
		test   %al,%al
		jbe    _0229cd_jump
		cmp    $0x000001,%al
		je     _022a8f_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0229cd_jump:
		andb   $0x0000f7,0x000081(%ecx)
		cmpb   $0x000002,0x00006d(%ecx)
		je     _0229e1_jump
		mov    %ecx,%eax
		call   _025590_func

	_0229e1_jump:
		cmpb   $0x000000,_0cf482_data
		je     _022a03_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _022a03_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		mov    %dx,_0cf498_data
		call   _01fe20_func

	_022a03_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _022b04_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%esi
		mov    0x000069(%ecx),%al
		add    %esi,%eax
		mov    _0ce036_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		mov    0x000028(%ecx),%ebx
		xor    %edx,%edx
		sub    $0x000008,%ebx
		mov    0x000068(%ecx),%dl
		add    %ebx,%edx
		sar    $0x000004,%edx
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0ce040_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		jne    _022b04_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d444_func
		movb   $0x000005,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		movw   $0x00fffe,0x000040(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022a8f_jump:
		cmp    0x00006d(%ecx),%al
		jne    _022b04_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %eax,%edx
		add    $0x000008,%edx
		mov    _0ce036_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		jne    _022b04_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000042(%ecx)
		mov    $0x000002,%dh
		movw   $0x000000,0x000040(%ecx)
		mov    %dh,_0cf483_data

	_022b04_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022b0c_func:
		push   %edx
		mov    %eax,%edx
		cmpw   $0x000001,0x000042(%eax)
		jle    _022b3e_jump
		movw   $0x000000,0x000042(%eax)
		movw   $0x000000,0x000040(%eax)
		call   _025590_func
		mov    _0cf483_data,%al
		test   %al,%al
		jne    _022b3e_jump
		mov    %edx,%eax
		call   _01fe20_func
		movb   $0x000001,_0cf483_data

	_022b3e_jump:
		pop    %edx
		ret    



_022b40_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x000081(%eax),%ah
		xor    %edx,%edx
		or     $0x000008,%ah
		mov    0x00006a(%ebx),%dl
		mov    %ah,0x000081(%ebx)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ebx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebx),%dl
		cmp    %eax,%edx
		jne    _022bb1_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		lea    0x000000(,%eax,8),%ecx
		mov    (%edx),%eax
		mov    0x000005(%ecx,%eax,1),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _022bb1_jump
		movb   $0x000001,_0cf482_data
		jmp    _022bb9_jump

	_022bb1_jump:
		xor    %dh,%dh
		mov    %dh,_0cf482_data

	_022bb9_jump:
		mov    0x00006d(%ebx),%ch
		test   %ch,%ch
		jne    _022c15_jump
		cmpb   $0x000007,0x00006c(%ebx)
		jne    _022bfa_jump
		cmpb   $0x00002c,0x00006b(%ebx)
		jne    _022bfa_jump
		xor    %eax,%eax
		mov    %ch,%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ebx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _022bfa_jump
		mov    %ebx,%eax
		call   _020e08_func

	_022bfa_jump:
		cmpb   $0x000000,_0cf482_data
		je     _022c15_jump
		cmpb   $0x000000,0x00006c(%ebx)
		jne    _022c15_jump
		mov    $0x000007,%edx
		mov    %ebx,%eax
		call   _01d434_func

	_022c15_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022c1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		test   %al,%al
		jbe    _022c30_jump
		cmp    $0x000001,%al
		je     _022c37_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022c30_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_022c37_jump:
		cmpb   $0x000001,0x000070(%ecx)
		jne    _022c44_jump
		orb    $0x000008,0x000081(%ecx)

	_022c44_jump:
		mov    %ecx,%eax
		call   _0552b4_func
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %eax,%edx
		mov    _0ce036_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		cwtl   
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0ce040_data,%eax
		movw   $0x000000,0x000042(%ecx)
		mov    0x000002(%eax,%edx,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000020,_0924f4_data(%eax)
		je     _022d75_jump
		mov    _0cc7a0_data,%edx
		mov    _0cc7a4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _022d5f_jump

	_022cb5_jump:
		cmpw   $0x000073,0x000060(%edx)
		jne    _022d4f_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _022d4f_jump
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movw   $0x000000,0x000040(%edx)
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%edx)
		mov    0x000028(%ecx),%eax
		sub    $0x000020,%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		sub    $0x000030,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		call   _01dc5c_func
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f3d4_func
		movw   $_0000ff_case,0x000056(%edx)
		movw   $0x00001e,0x000050(%edx)
		movw   $0x00001e,0x000052(%edx)
		movb   $0x000000,0x00006d(%edx)
		movb   $0x000004,0x00006c(%edx)
		movb   $0x000000,0x00006b(%edx)
		movw   $0x00ffff,0x000046(%edx)
		movw   $0x000000,0x000048(%edx)
		jmp    _022d5f_jump

	_022d4f_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _022cb5_jump

	_022d5f_jump:
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)

	_022d75_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022d7c_func:
		push   %edx
		mov    0x000070(%eax),%dl
		cmp    $0x000002,%dl
		jb     _022d9a_jump
		jbe    _022d94_jump
		cmp    $0x000003,%dl
		jne    _022d9a_jump
		movw   $0x00ffff,0x000042(%eax)
		pop    %edx
		ret    

	_022d94_jump:
		movw   $0x000000,0x000042(%eax)

	_022d9a_jump:
		pop    %edx
		ret    



_022da0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    _0cc798_data,%ecx
		movswl (%ecx),%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0cc7a0_data,%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		mov    _0cc79c_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _022e86_jump
		mov    _0cc79c_data,%si

	_022dda_jump:
		cmpw   $0x000082,0x000060(%ecx)
		jne    _022e5a_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _022e5a_jump
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000028(%ebx),%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%ebx),%edx
		movw   $0x000000,0x000042(%ecx)
		mov    %edx,0x00002c(%ecx)
		xor    %ebx,%ebx
		mov    0x000042(%ecx),%ax
		xor    %edx,%edx
		mov    0x00006e(%ecx),%bl
		mov    0x00006f(%ecx),%dl
		mov    %ax,0x000040(%ecx)
		mov    %ecx,%eax
		call   _01d444_func
		mov    %ecx,%eax
		call   _01dc5c_func
		mov    %ecx,%eax
		call   _01dbe4_func
		movw   $0x00ffff,0x000046(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000048(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f3d4_func
		andb   $0x0000bf,0x000081(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022e5a_jump:
		inc    %eax
		movswl %ax,%ecx
		lea    0x000000(,%ecx,2),%edx
		mov    _0cc798_data,%ecx
		movswl (%ecx,%edx,1),%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0cc7a0_data,%edx
		add    %edx,%ecx
		cmp    %si,%ax
		jl     _022dda_jump

	_022e86_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022e8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		testb  $0x000004,0x00007d(%eax)
		je     _022f0f_jump
		mov    %ecx,%eax
		call   _01d450_func
		mov    %eax,%esi
		mov    %ecx,%eax
		call   _01d580_func
		movswl %si,%esi
		movswl %ax,%edi
		mov    %esi,%edx
		mov    %edi,%ebx
		mov    %ecx,%eax
		call   _01d6f4_func
		test   %ax,%ax
		je     _022ee4_jump
		mov    %edi,%ebx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _02f310_func
		test   %ax,%ax
		je     _022ee4_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _060460_func

	_022ee4_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    0x000040(%ecx),%dx
		mov    %ax,0x000042(%ecx)
		test   %dx,%dx
		jle    _022f06_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _022f0f_jump

	_022f06_jump:
		jge    _022f0f_jump
		andb   $0x0000f7,0x000081(%ecx)

	_022f0f_jump:
		testb  $0x000008,0x00007d(%ecx)
		je     _022f25_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_022f25_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022f2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $_0000ff_case,%dl
		mov    0x000070(%eax),%dh
		test   %dh,%dh
		jne    _022f4b_jump
		mov    0x000081(%eax),%cl
		or     $0x000008,%cl
		mov    $0x000003,%dl
		mov    %cl,0x000081(%eax)
		jmp    _022f61_jump

	_022f4b_jump:
		cmp    $0x000001,%dh
		jne    _022f61_jump
		mov    0x000081(%eax),%bh
		and    $0x0000f7,%bh
		mov    $0x000002,%dl
		mov    %bh,0x000081(%eax)

	_022f61_jump:
		cmp    $_0000ff_case,%dl
		je     _022f76_jump
		mov    $0x000001,%ebx
		and    $_0000ff_case,%edx
		call   _060460_func

	_022f76_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022f7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		cmpb   $0x000000,0x00006d(%eax)
		jne    _022f9f_jump
		cmpb   $0x000004,0x00006c(%esi)
		jne    _022f9f_jump
		mov    %esi,%eax
		call   _0552b4_func
		negw   0x000040(%esi)
		jmp    _0230ba_jump

	_022f9f_jump:
		cmpb   $0x000000,0x000070(%esi)
		jne    _022fae_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _022fb5_jump

	_022fae_jump:
		orb    $0x000008,0x000081(%esi)

	_022fb5_jump:
		testb  $0x000002,0x00007d(%esi)
		je     _023002_jump
		mov    %esi,%eax
		call   _0552b4_func
		xor    %edx,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   _024f68_func
		mov    %al,%cl
		testb  $0x000001,_0924f4_data(%ecx)
		je     _022ffb_jump
		cmpb   $0x000000,0x000070(%esi)
		jne    _022fea_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _022ff4_jump

	_022fea_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_022ff4_jump:
		mov    %esi,%eax
		call   _060460_func

	_022ffb_jump:
		mov    %esi,%eax
		call   _025590_func

	_023002_jump:
		testb  $0x000001,0x00007d(%esi)
		je     _0230a7_jump
		mov    $0x000028,%ebx
		lea    0x00004a(%esi),%ecx
		mov    $0x000030,%edx
		mov    %esi,%eax
		call   _01d154_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01d450_func
		mov    %eax,%ecx
		mov    %esi,%eax
		call   _01d580_func
		movswl %cx,%ecx
		movswl %ax,%edi
		mov    %ecx,%edx
		mov    %edi,%ebx
		mov    %esi,%eax
		call   _01d6f4_func
		test   %ax,%ax
		je     _0230a0_jump
		mov    %edi,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _02f310_func
		test   %ax,%ax
		je     _0230a0_jump
		mov    0x00003e(%esi),%ecx
		mov    0x000028(%esi),%edx
		sar    $0x000010,%ecx
		sub    %ecx,%edx
		mov    %edx,0x000028(%esi)
		cmpb   $0x000000,0x000070(%esi)
		jne    _023088_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _060460_func
		orb    $0x000008,0x000081(%esi)
		jmp    _0230a0_jump

	_023088_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _060460_func
		andb   $0x0000f7,0x000081(%esi)

	_0230a0_jump:
		mov    %esi,%eax
		call   _0552b4_func

	_0230a7_jump:
		testb  $0x000010,0x00007d(%esi)
		je     _0230ba_jump
		mov    %esi,%eax
		call   _0552b4_func
		movw   $0x000000,0x000042(%esi)

	_0230ba_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0230c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		testb  $0x000010,0x00007d(%eax)
		je     _023178_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0230dc_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _0230f0_jump

	_0230dc_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _023178_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _023178_jump

	_0230f0_jump:
		mov    0x00007f(%esi),%cl
		cmp    $_0000ff_case,%cl
		jne    _02312b_jump
		mov    0x00002c(%esi),%ecx
		mov    0x000040(%esi),%ebx
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _023118_jump
		cmp    %ecx,%eax
		jg     _023118_jump
		mov    $0x000001,%eax
		jmp    _02311a_jump

	_023118_jump:
		xor    %eax,%eax

	_02311a_jump:
		test   %eax,%eax
		jne    _023125_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _023178_jump

	_023125_jump:
		movb   $0x00003c,0x00007f(%esi)
		jmp    _023178_jump

	_02312b_jump:
		test   %cl,%cl
		jne    _02316b_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		testb  $0x000008,0x000081(%esi)
		je     _023152_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _02315c_jump

	_023152_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_02315c_jump:
		mov    %esi,%eax
		call   _060460_func
		movw   $0x000000,0x000042(%esi)
		jmp    _023178_jump

	_02316b_jump:
		mov    %cl,%al
		movw   $0x000000,0x000042(%esi)
		dec    %al
		mov    %al,0x00007f(%esi)

	_023178_jump:
		cmpb   $0x000004,0x000075(%esi)
		jne    _0231ed_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02318e_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _02319a_jump

	_02318e_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _0231ed_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _0231ed_jump

	_02319a_jump:
		cmpb   $0x000000,0x00007b(%esi)
		je     _0231dc_jump
		mov    0x00002c(%esi),%ecx
		mov    0x000040(%esi),%ebx
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _0231c0_jump
		cmp    %ecx,%eax
		jg     _0231c0_jump
		mov    $0x000001,%eax
		jmp    _0231c2_jump

	_0231c0_jump:
		xor    %eax,%eax

	_0231c2_jump:
		test   %eax,%eax
		je     _0231ed_jump
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000042(%esi)
		jmp    _0231ed_jump

	_0231dc_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d444_func

	_0231ed_jump:
		testb  $0x000002,0x00007d(%esi)
		je     _023234_jump
		cmpw   $0x000000,0x000040(%esi)
		je     _023234_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _024f68_func
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _023234_jump
		cmpb   $0x000000,0x000070(%esi)
		jne    _023223_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _02322d_jump

	_023223_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_02322d_jump:
		mov    %esi,%eax
		call   _060460_func

	_023234_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02323c_func:
		push   %edx
		mov    0x000070(%eax),%dl
		cmp    $0x000002,%dl
		jb     _02325c_jump
		jbe    _023268_jump
		cmp    $0x000014,%dl
		jb     _023268_jump
		jbe    _023255_jump
		cmp    $0x00001e,%dl
		je     _023263_jump
		pop    %edx
		ret    

	_023255_jump:
		call   _022e8c_func
		pop    %edx
		ret    

	_02325c_jump:
		call   _022f7c_func
		pop    %edx
		ret    

	_023263_jump:
		call   _0230c0_func

	_023268_jump:
		pop    %edx
		ret    



_02326c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e7ac_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _0232f2_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    _0ce0d0_data,%eax
		movw   $0x000000,0x000042(%ecx)
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jl     _0232be_jump
		jle    _0232ac_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _0232c5_jump

	_0232ac_jump:
		testb  $0x000008,0x000081(%eax)
		je     _0232be_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _0232c5_jump

	_0232be_jump:
		orb    $0x000008,0x000081(%ecx)

	_0232c5_jump:
		mov    %ecx,%eax
		call   _022da0_func
		testb  $0x000008,0x000081(%ecx)
		je     _0232e1_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _0232eb_jump

	_0232e1_jump:
		mov    $0x000001,%ebx
		mov    $0x000003,%edx

	_0232eb_jump:
		mov    %ecx,%eax
		call   _060460_func

	_0232f2_jump:
		pop    %ecx
		pop    %ebx
		ret    

_0232f8_switch:
		.long   _023521_case
		.long   _023499_case
		.long   _023378_case
		.long   _023565_case
		.long   _023565_case
		.long   _023334_case




_023310_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000075(%eax),%al
		sub    $0x000002,%al
		cmp    $0x000005,%al
		ja     _023565_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_0232f8_switch(,%eax,4)

	_023334_case:
		mov    0x00006d(%esi),%ah
		cmp    $0x000001,%ah
		jne    _023565_case
		cmp    0x00006c(%esi),%ah
		jne    _023565_case
		cmpb   $0x000002,_0ce0b1_data
		setne  %al
		and    $_0000ff_case,%eax
		je     _023565_case
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _060460_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023378_case:
		cmpb   $0x000002,_0ce0b1_data
		je     _023565_case
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x00007a(%esi),%al
		mov    0x000004(%esp),%ebx
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		mov    %eax,%ecx
		add    %eax,%ecx
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000008(%esp)
		xor    %eax,%eax
		mov    (%esp),%edi
		mov    0x00007a(%esi),%al
		add    %eax,%edi
		mov    %di,(%esp)
		cmpb   $0x000001,0x00006d(%esi)
		jne    _023565_case
		cmpb   $0x000000,0x00006c(%esi)
		jne    _023565_case
		mov    _0cf268_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0cf24c_data,%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    _0cf24a_data,%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%edx
		push   %eax
		mov    _0cf248_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b560_func
		test   %ax,%ax
		je     _023565_case
		xor    %edx,%edx
		mov    _0cf24c_data,%ax
		mov    0x000074(%esi),%dl
		sub    %edx,%eax
		mov    %ax,0x000050(%esi)
		mov    0x00002c(%esi),%edx
		mov    0x00004e(%esi),%eax
		sub    $0x000010,%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _023565_case
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000004,%edx
		call   _01dbe4_func
		mov    %esi,%eax
		call   _060460_func
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%edx
		movb   $0x000006,0x000072(%esi)
		dec    %edx
		mov    %edx,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023499_case:
		mov    0x00006d(%esi),%ch
		test   %ch,%ch
		jne    _023565_case
		cmpb   $0x000000,0x00006c(%esi)
		jne    _023565_case
		cmpb   $0x000002,_0ce0b1_data
		setne  %al
		and    $_0000ff_case,%eax
		je     _023565_case
		mov    %esi,%eax
		call   _01dbe4_func
		xor    %eax,%eax
		mov    _0ce070_data,%dx
		mov    _0ce0b8_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		mov    %dx,0x000050(%esi)
		mov    0x00002c(%esi),%eax
		mov    0x00004e(%esi),%edx
		sub    $0x000010,%eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jge    _023565_case
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _060460_func
		movb   $0x000006,0x000072(%esi)
		movb   $_0000ff_case,0x00007f(%esi)
		mov    0x00002c(%esi),%ebx
		mov    %ch,0x000071(%esi)
		dec    %ebx
		mov    %ebx,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023521_case:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _023565_case
		cmpb   $0x000000,0x00006c(%esi)
		jne    _023565_case
		cmpb   $0x000002,_0ce0b1_data
		setne  %al
		and    $_0000ff_case,%eax
		je     _023565_case
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000004,%edx
		call   _01dbe4_func
		mov    %esi,%eax
		call   _060460_func
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ecx
		movb   $0x000006,0x000072(%esi)
		dec    %ecx
		mov    %ecx,0x00002c(%esi)

	_023565_case:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023570_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    $0x000001,%eax
		call   _06b908_func
		xor    %ebp,%ebp
		xor    %eax,%eax

	_023587_jump:
		add    $0x000004,%eax
		xor    %edx,%edx
		mov    %edx,_0cf504_data(%eax)
		cmp    $0x000500,%eax
		jne    _023587_jump
		xor    %ebx,%ebx
		mov    $0x00009f,%esi
		mov    $0x000001,%ecx

	_0235a5_jump:
		mov    %esi,%eax
		call   _06b8d0_func
		cwtl   
		mov    %eax,_0cf4e0_data(%ebx)
		mov    %ecx,%eax
		call   _06b8d0_func
		cwtl   
		add    $0x000002,%eax
		imul   $0x000140,%eax,%eax
		add    $0x000004,%ebx
		mov    %eax,_0cf4b4_data(%ebx)
		cmp    $0x000028,%ebx
		jne    _0235a5_jump

	_0235d2_jump:
		test   %ebp,%ebp
		jne    _023760_jump
		mov    $0x000001,%ebp
		xor    %edi,%edi

	_0235e1_jump:
		mov    _0cf4e0_data(%edi),%eax
		mov    _0cf4b8_data(%edi),%ebx
		mov    _0cf508_data(,%eax,4),%ecx
		add    %ebx,%ecx
		mov    %ecx,_0cf508_data(,%eax,4)
		cmp    $0x00fa00,%ecx
		jge    _023607_jump
		xor    %ebp,%ebp

	_023607_jump:
		mov    _0cf4e0_data(%edi),%esi
		dec    %esi
		test   %esi,%esi
		jge    _023662_jump
		jmp    _023679_jump

	_023614_jump:
		mov    $0x000140,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%ecx
		mov    _0cf50c_data(%ebx),%eax
		mov    %eax,%edx
		movl   $0x000140,(%esp)
		sar    $0x00001f,%edx
		idivl  (%esp)
		sub    %ecx,%eax
		cwtl   
		call   _06b8d0_func
		cwtl   
		add    %eax,%ecx
		imul   $0x000140,%ecx,%ecx
		mov    %ecx,_0cf508_data(%ebx)
		cmp    $0x00fa00,%ecx
		jge    _023658_jump
		xor    %ebp,%ebp

	_023658_jump:
		sub    $0x000004,%ebx
		dec    %esi
		test   %ebx,%ebx
		jge    _023669_jump
		jmp    _023679_jump

	_023662_jump:
		lea    0x000000(,%esi,4),%ebx

	_023669_jump:
		mov    _0cf50c_data(%ebx),%eax
		mov    _0cf508_data(%ebx),%edx
		cmp    %edx,%eax
		jge    _023614_jump

	_023679_jump:
		mov    _0cf4e0_data(%edi),%esi
		inc    %esi
		cmp    $0x0000a0,%esi
		jl     _0236db_jump
		jmp    _0236f2_jump

	_02368a_jump:
		mov    $0x000140,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%ecx
		mov    _0cf504_data(%ebx),%eax
		mov    %eax,%edx
		movl   $0x000140,(%esp)
		sar    $0x00001f,%edx
		idivl  (%esp)
		sub    %ecx,%eax
		cwtl   
		call   _06b8d0_func
		cwtl   
		add    %ecx,%eax
		imul   $0x000140,%eax,%eax
		mov    %eax,_0cf508_data(%ebx)
		cmp    $0x00fa00,%eax
		jge    _0236cd_jump
		xor    %ebp,%ebp

	_0236cd_jump:
		add    $0x000004,%ebx
		inc    %esi
		cmp    $0x000280,%ebx
		jl     _0236e2_jump
		jmp    _0236f2_jump

	_0236db_jump:
		lea    0x000000(,%esi,4),%ebx

	_0236e2_jump:
		mov    _0cf504_data(%ebx),%eax
		mov    _0cf508_data(%ebx),%edx
		cmp    %edx,%eax
		jge    _02368a_jump

	_0236f2_jump:
		add    $0x000004,%edi
		cmp    $0x000028,%edi
		jne    _0235e1_jump
		test   %ebp,%ebp
		jne    _0235d2_jump
		call   _016ddd_func
		mov    $_0cf508_data,%ebx
		mov    _0cd158_data,%edi
		mov    _0ccae4_data,%esi
		mov    %edi,%edx
		mov    $0x0000c8,%ecx

	_023723_jump:
		push   %ecx
		mov    $0x000140,%ecx

	_023729_jump:
		mov    (%ebx),%eax
		add    %edx,%eax
		cmp    %edi,%eax
		jge    _02373e_jump
		mov    (%ebx),%eax
		neg    %eax
		mov    (%esi,%eax,1),%ax
		mov    %ax,(%edi)
		jmp    _023743_jump

	_02373e_jump:
		movw   $0x000000,(%edi)

	_023743_jump:
		add    $0x000004,%ebx
		add    $0x000002,%edi
		add    $0x000002,%esi
		sub    $0x000002,%ecx
		jne    _023729_jump
		pop    %ecx
		sub    $0x000280,%ebx
		dec    %ecx
		jne    _023723_jump
		jmp    _0235d2_jump

	_023760_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023770_func:
		push   %edx
		mov    _0cf280_data,%edx
		mov    _0cf26e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		shl    $0x000005,%edx
		dec    %eax
		sub    $0x000020,%edx
		add    %edx,%eax
		mov    _0ca938_data(,%eax,2),%ax
		pop    %edx
		ret    



_023798_func:
		push   %ebx
		push   %edx
		push   %edi
		push   %ebp
		cmpw   $0x000000,_0cf1fc_data
		je     _023861_jump
		mov    _0cf280_data,%eax
		mov    _0cf26e_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000005,%eax
		dec    %edx
		sub    $0x000020,%eax
		mov    _0cd2c4_data,%ebx
		add    %eax,%edx
		cmp    $0x000001,%ebx
		jne    _0237f2_jump
		mov    _0ca936_data(,%edx,2),%eax
		sar    $0x000010,%eax
		mov    %eax,_0cd2c8_data
		cmp    $0xfffffffe,%eax
		je     _0237f2_jump
		mov    %eax,%ebx
		shl    $0x000004,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		mov    %eax,_0cd2c8_data

	_0237f2_jump:
		mov    _0ca936_data(,%edx,2),%edx
		sar    $0x000010,%edx
		cmp    $0xfffffffe,%edx
		je     _023861_jump
		cmpl   $0x000000,_0cd2c8_data
		je     _023861_jump
		mov    _0cd2c4_data,%edi
		cmp    $0x000078,%edi
		jle    _023861_jump
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    $0x000001,%ebp
		shl    $0x000002,%eax
		lea    -0x000078(%edi),%edx
		mov    %ebp,_0ce068_data
		sub    %edx,%eax
		mov    %eax,_0cd2c8_data
		jne    _023861_jump
		cmpb   $0x000000,_0cf447_data
		je     _023861_jump
		mov    _0cd2b0_data,%al
		xor    %ebx,%ebx
		mov    %al,_0ce950_data
		mov    $_0ce044_data,%eax
		mov    %bx,_0cf292_data
		call   _079d94_func
		call   _03ca10_func

	_023861_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    



_023868_func:
		dec    %eax
		dec    %edx
		shl    $0x000005,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    $_0caad0_data,%eax
		jmp    _05d208_jump



_023880_func:
		dec    %eax
		dec    %edx
		shl    $0x000005,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    $_0caad0_data,%eax
		jmp    _05d1c8_jump



_023898_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf446_data,%ah
		test   %ah,%ah
		jbe    _0238f6_jump
		cmpw   $0x000000,_0cf1fc_data
		jne    _0238f6_jump
		cmpb   $0x000000,_0cf3f1_data
		jne    _0238f6_jump
		mov    %ah,%dh
		mov    _0ce950_data,%bl
		dec    %dh
		inc    %bl
		mov    %dh,_0cf446_data
		mov    %bl,_0ce950_data
		cmp    $0x000063,%bl
		jbe    _0238f6_jump
		mov    %bl,%cl
		sub    $0x000064,%cl
		mov    %cl,_0ce950_data
		call   _07b158_func
		mov    %ax,_0cf222_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _0238f6_jump
		call   _057a14_func

	_0238f6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0238fc_func:
		push   %edx
		xor    %eax,%eax

	_0238ff_jump:
		inc    %eax
		xor    %dl,%dl
		mov    %dl,_0caacf_data(%eax)
		cmp    $0x000018,%eax
		jl     _0238ff_jump
		pop    %edx
		ret    



_023910_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000001,%eax
		call   _054868_func
		call   _0420e8_func
		cmpw   $0x000000,_0cf206_data
		jne    _023990_jump
		call   _03c9c0_func
		mov    $0x00003c,%ebx
		mov    _0cf282_data,%cx
		mov    _0cf270_data,%ax
		mov    _0cd2c4_data,%edx
		dec    %ecx
		dec    %eax
		shl    $0x000005,%ecx
		sub    $0x000078,%edx
		add    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %cx,%eax
		mov    _0ca936_data(,%eax,2),%ebx
		mov    _0cd2c8_data,%eax
		push   %edx
		mov    %eax,%edx
		mov    $0x00003c,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		sar    $0x000010,%ebx
		dec    %ebx
		sub    %eax,%ebx
		push   %ebx
		push   $_0c0870_data
		push   $_0cfa08_data
		call   _07fceb_func
		add    $0x000010,%esp

	_023990_jump:
		mov    _0cf26e_data,%edx
		mov    _0cf280_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _023868_func
		test   %al,%al
		je     _023a4b_jump
		cmpw   $0x000000,_0cf2d0_data
		jne    _0239d2_jump
		cmpb   $0x000000,_0cf3f1_data
		jne    _0239d2_jump
		mov    $0x0000bf,%ebx
		mov    $0x000080,%edx
		xor    %eax,%eax
		call   _03c6a4_func

	_0239d2_jump:
		cmpw   $0x000000,_0cf2d0_data
		jne    _0239f6_jump
		cmpb   $0x000000,_0cf3f3_data
		jne    _0239f6_jump
		mov    $0x0000ef,%ebx
		mov    $0x0000c0,%edx
		xor    %eax,%eax
		call   _03c6a4_func

	_0239f6_jump:
		call   _03cd2c_func
		push   $0x000005
		mov    $0x00003c,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2acc_data,%eax
		xor    %ecx,%ecx
		call   _01a168_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x00006e,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2ad0_data,%eax
		call   _01a168_func
		push   $0x000005
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    $_0cfa08_data,%eax
		xor    %ecx,%ecx
		call   _01a168_func
		jmp    _023af7_jump

	_023a4b_jump:
		cmpw   $0x000000,_0cf2d0_data
		jne    _023a6f_jump
		cmpb   $0x000000,_0cf3f1_data
		jne    _023a6f_jump
		mov    $0x0000bf,%ebx
		mov    $0x000080,%edx
		xor    %eax,%eax
		call   _03c6a4_func

	_023a6f_jump:
		cmpw   $0x000000,_0cf2d0_data
		jne    _023a93_jump
		cmpb   $0x000000,_0cf3f3_data
		jne    _023a93_jump
		mov    $0x0000ef,%ebx
		mov    $0x0000c0,%edx
		xor    %eax,%eax
		call   _03c6a4_func

	_023a93_jump:
		call   _03cd2c_func
		cmpw   $0x00000f,_0cf206_data
		jne    _023ac9_jump
		call   _07ae8c_func
		movw   $0x00004b,0x000036(%eax)
		movw   $0x000032,0x000038(%eax)
		mov    %eax,_0cfa1c_data
		movl   $0x000001,0x000024(%eax)
		call   _055b7c_func
		call   _057a14_func

	_023ac9_jump:
		cmpw   $0x000014,_0cf206_data
		jle    _023af7_jump
		mov    _0cfa1c_data,%eax
		call   _055b7c_func
		mov    _0cfa1c_data,%eax
		call   _01e744_func
		mov    _0cfa1c_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _023af7_jump
		call   _018ac8_func

	_023af7_jump:
		mov    _0cf206_data,%bx
		xor    %edx,%edx
		cmp    $0x0001f4,%bx
		je     _023b39_jump
		call   _041e58_func
		test   %ax,%ax
		jne    _023b2f_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _023b2f_jump
		call   _041f70_func
		test   %ax,%ax
		jne    _023b2f_jump
		call   _041ffc_func
		test   %ax,%ax
		je     _023b48_jump

	_023b2f_jump:
		cmpw   $0x000032,_0cf206_data
		jle    _023b48_jump

	_023b39_jump:
		mov    $_0ce044_data,%eax
		mov    $0x000001,%edx
		call   _079d94_func

	_023b48_jump:
		mov    _0cf206_data,%si
		inc    %esi
		mov    %edx,%eax
		mov    %si,_0cf206_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023b60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf206_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jge    _023c95_jump
		mov    %edx,%ecx
		inc    %ecx
		mov    %cx,_0cf206_data
		mov    _0cf204_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _023c95_jump
		mov    _095de4_data,%ah
		mov    %ecx,%edi
		xor    %esi,%esi
		inc    %edi
		mov    %si,_0cf292_data
		mov    %di,_0cf206_data
		cmp    $0x000001,%ah
		jne    _023bc1_jump
		xor    %eax,%eax
		mov    _0cf43c_data,%al
		mov    $0x000001,%ebx
		call   _03d90c_func

	_023bc1_jump:
		mov    $0x00fa00,%edx
		mov    $_0cd29c_data,%eax
		call   _07f050_func
		mov    _0cf26e_data,%edx
		mov    _0cf280_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _023868_func
		test   %al,%al
		je     _023bf6_jump
		mov    $_0cd29c_data,%eax
		call   _0366cc_func
		jmp    _023c00_jump

	_023bf6_jump:
		mov    $_0cd29c_data,%eax
		call   _0366dc_func

	_023c00_jump:
		mov    $_0c7638_data,%eax
		call   _03cc18_func
		call   _03ca38_func
		call   _01cbb0_func
		cmpb   $0x000000,_0cf410_data
		je     _023c2c_jump
		call   _0714c0_func
		mov    $0x000006,%eax
		call   _072a4c_jump

	_023c2c_jump:
		mov    $_023910_func,%eax
		call   _03ca88_func
		cmpb   $0x000000,_0cf410_data
		je     _023c44_jump
		call   _03eec4_func

	_023c44_jump:
		call   _03ca10_func
		mov    _0cd2b0_data,%al
		xor    %edx,%edx
		mov    %al,_0ce950_data
		mov    %edx,_0cd2b0_data
		mov    _0cf26e_data,%edx
		mov    _0cf280_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _023880_func
		test   %ebx,%ebx
		je     _023c81_jump
		xor    %eax,%eax
		mov    _0cf43c_data,%al
		call   _03d7e0_func

	_023c81_jump:
		call   _03ca38_func
		call   _03cc8c_func
		mov    $_0cd29c_data,%eax
		call   _07f35c_func

	_023c95_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023ca0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    %dx,(%esp)

	_023caf_jump:
		xor    %esi,%esi

	_023cb1_jump:
		mov    $0x000040,%eax
		movswl %si,%edi
		sub    %edi,%eax
		imul   %eax,%eax
		mov    -0x000002(%esp),%ebp
		mov    $0x000040,%edx
		sar    $0x000010,%ebp
		sub    %ebp,%edx
		imul   %edx,%edx
		add    %edx,%eax
		call   _07f562_func
		call   _07fd4a_func
		call   _07fdb0_func
		mov    $0xbca1af28,%ebx
		mov    $0x3fbaf286,%ecx
		and    $_0000ff_case,%eax
		shl    $0x000007,%ebp
		call   _07f56f_func
		call   _07f75f_func
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		call   _08006a_func
		call   _07f5a8_func
		mov    $0x40440000,%ecx
		xor    %ebx,%ebx
		inc    %esi
		call   _07f75f_func
		call   _07fdb0_func
		mov    %al,_0d9e30_data(%edi,%ebp,1)
		cmp    $0x000080,%si
		jl     _023cb1_jump
		mov    (%esp),%ebx
		inc    %ebx
		mov    %bx,(%esp)
		cmp    $0x000080,%bx
		jl     _023caf_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023d4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %al,%ch
		cmpb   $0x000000,_0cf429_data
		jne    _023d65_jump
		movb   $0x00004a,_0de130_data
		jmp    _023d6c_jump

	_023d65_jump:
		movb   $0x000070,_0de130_data

	_023d6c_jump:
		movzbl _0de130_data,%edi
		xor    %eax,%eax

	_023d75_jump:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%edx
		add    %edi,%ebx
		lea    (%ebx,%ebx,2),%ebx
		mov    _095f2a_data(%edx),%cl
		mov    %cl,_0c7938_data(%ebx)
		mov    _095f29_data(%edx),%cl
		mov    _095f28_data(%edx),%dl
		mov    %cl,_0c7939_data(%ebx)
		inc    %eax
		mov    %dl,_0c793a_data(%ebx)
		cmp    $0x000010,%ax
		jl     _023d75_jump
		test   %ch,%ch
		je     _023dd1_jump
		lea    0x00000f(%edi),%ecx
		mov    $_0c7938_data,%esi
		mov    %edi,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_023dd1_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023dd8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %ebx,%edi
		mov    %cx,0x00000c(%esp)
		mov    %esp,%ebp
		mov    _0cd154_data,%ebx
		movswl %dx,%edx
		movswl %ax,%ecx
		lea    0x000000(,%edx,4),%eax
		add    %ebx,%ecx
		add    %edx,%eax
		mov    0x000030(%esp),%bl
		shl    $0x000006,%eax
		mov    %bl,(%esp)
		mov    0x000038(%esp),%bl
		lea    (%ecx,%eax,1),%edx
		mov    $0x000140,%eax
		mov    %bl,0x000001(%esp)
		mov    0x000040(%esp),%bl
		sub    %edi,%eax
		mov    %bl,0x000002(%esp)
		mov    0x000048(%esp),%bl
		mov    %eax,0x000014(%esp)
		mov    %bl,0x000003(%esp)
		xor    %ebx,%ebx
		lea    0x000004(%esp),%eax
		mov    %ebx,0x000010(%esp)
		jmp    _023f4c_jump

	_023e3d_jump:
		mov    0x000000(%ebp),%esi
		add    $0x1010101,%esi
		mov    %esi,%ebx
		mov    %esi,0x000000(%ebp)
		and    $0x7f7f7f7f,%ebx
		mov    %ebx,0x000000(%ebp)
		mov    0x00002c(%esp),%bl
		mov    %bl,0x000004(%esp)
		mov    0x000034(%esp),%bl
		mov    %bl,0x000005(%esp)
		mov    0x00003c(%esp),%bl
		mov    %bl,0x000006(%esp)
		mov    0x000044(%esp),%bl
		mov    %bl,0x000007(%esp)
		xor    %ebx,%ebx
		jmp    _023f2a_jump

	_023e7b_jump:
		mov    (%eax),%ecx
		add    $0x1010101,%ecx
		mov    %ecx,%esi
		mov    %ecx,(%eax)
		and    $0x7f7f7f7f,%esi
		xor    %ecx,%ecx
		mov    %esi,(%eax)
		mov    (%esp),%cl
		movzbl 0x000004(%esp),%esi
		shl    $0x000007,%ecx
		mov    _0d9e30_data(%ecx,%esi,1),%cl
		mov    0x00004c(%esp),%ch
		add    %ch,%cl
		mov    %cl,0x000018(%esp)
		xor    %ecx,%ecx
		mov    0x000001(%esp),%cl
		movzbl 0x000005(%esp),%esi
		shl    $0x000007,%ecx
		add    %ecx,%esi
		mov    0x000018(%esp),%cl
		mov    _0d9e30_data(%esi),%ch
		add    %ch,%cl
		mov    %cl,0x000018(%esp)
		xor    %ecx,%ecx
		mov    0x000002(%esp),%cl
		mov    %ecx,%esi
		xor    %ecx,%ecx
		shl    $0x000007,%esi
		mov    0x000006(%esp),%cl
		add    %ecx,%esi
		mov    0x000018(%esp),%cl
		add    _0d9e30_data(%esi),%cl
		movzbl 0x000003(%esp),%esi
		mov    %cl,0x000018(%esp)
		xor    %ecx,%ecx
		shl    $0x000007,%esi
		mov    0x000007(%esp),%cl
		add    %ecx,%esi
		mov    0x000018(%esp),%cl
		add    _0d9e30_data(%esi),%cl
		mov    %ecx,%esi
		xor    %ecx,%ecx
		and    $_0000ff_case,%esi
		mov    _0de130_data,%cl
		sar    $0x000004,%esi
		add    %ecx,%esi
		mov    %esi,0x000008(%esp)
		inc    %edx
		mov    0x000008(%esp),%cl
		inc    %ebx
		mov    %cl,-0x000001(%edx)

	_023f2a_jump:
		xor    %esi,%esi
		movswl %di,%ecx
		mov    %bx,%si
		cmp    %ecx,%esi
		jl     _023e7b_jump
		mov    0x000010(%esp),%esi
		xor    %ecx,%ecx
		inc    %esi
		mov    0x000014(%esp),%cx
		mov    %esi,0x000010(%esp)
		add    %ecx,%edx

	_023f4c_jump:
		xor    %ecx,%ecx
		mov    0x00000a(%esp),%esi
		mov    0x000010(%esp),%cx
		sar    $0x000010,%esi
		cmp    %esi,%ecx
		jl     _023e3d_jump
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000024



_023f6c_func:
		push   %esi
		push   %edi
		mov    %eax,%esi
		cmpb   $0x000000,0x00000c(%esp)
		je     _024099_jump
		incw   _095f58_data
		subw   $0x000002,_095f5a_data
		incw   _095f5c_data
		subw   $0x000002,_095f5e_data
		addw   $0x000003,_095f60_data
		subw   $0x000002,_095f62_data
		incw   _095f64_data
		subw   $0x000003,_095f66_data
		mov    _095f68_data,%di
		mov    _095f56_data,%eax
		add    $0x000005,%edi
		sar    $0x000010,%eax
		mov    %di,_095f68_data
		call   _05d270_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0de13c_data
		mov    _095f58_data,%eax
		sar    $0x000010,%eax
		call   _05d230_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0de13a_data
		mov    _095f5a_data,%eax
		sar    $0x000010,%eax
		call   _05d230_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0de140_data
		mov    _095f5c_data,%eax
		sar    $0x000010,%eax
		call   _05d270_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0de13e_data
		mov    _095f5e_data,%eax
		sar    $0x000010,%eax
		call   _05d230_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0de138_data
		mov    _095f60_data,%eax
		sar    $0x000010,%eax
		call   _05d270_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0de136_data
		mov    _095f62_data,%eax
		sar    $0x000010,%eax
		call   _05d230_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0de134_data
		mov    _095f64_data,%eax
		sar    $0x000010,%eax
		call   _05d270_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0de132_data

	_024099_jump:
		sub    $0x000003,%esi
		sub    $0x000003,%edx
		add    $0x000006,%ebx
		add    $0x000006,%ecx
		test   %si,%si
		jge    _0240b0_jump
		add    %esi,%ebx
		xor    %esi,%esi
		jmp    _0240c6_jump

	_0240b0_jump:
		movswl %si,%eax
		movswl %bx,%edi
		add    %edi,%eax
		cmp    $0x000140,%eax
		jle    _0240c6_jump
		mov    $0x000140,%ebx
		sub    %esi,%ebx

	_0240c6_jump:
		test   %dx,%dx
		jge    _0240d1_jump
		xor    %edx,%edx
		add    %esi,%ecx
		jmp    _0240e7_jump

	_0240d1_jump:
		movswl %dx,%edi
		movswl %cx,%eax
		add    %edi,%eax
		cmp    $0x000140,%eax
		jle    _0240e7_jump
		mov    $0x0000c8,%ecx
		sub    %edx,%ecx

	_0240e7_jump:
		mov    _095f66_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0de130_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0de132_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0de134_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0de136_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0de138_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0de13a_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0de13c_data,%eax
		sar    $0x000010,%eax
		movswl %cx,%ecx
		push   %eax
		mov    _0de13e_data,%eax
		movswl %bx,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		push   %eax
		movswl %si,%eax
		call   _023dd8_func
		pop    %edi
		pop    %esi
		ret    $0x000004



_024150_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    $0x000001,%eax
		call   _06b908_func
		cmpb   $0x000000,_0cf429_data
		jne    _024174_jump
		movb   $0x00004a,_0de130_data
		jmp    _02417b_jump

	_024174_jump:
		movb   $0x000070,_0de130_data

	_02417b_jump:
		xor    %eax,%eax

	_02417d_jump:
		movswl %ax,%edx
		lea    (%edx,%edx,2),%ebx
		movzbl _095f6a_data(%ebx),%edi
		sar    $0x000002,%edi
		mov    %edi,(%esp)
		movzbl _0de130_data,%edi
		add    %edi,%edx
		lea    (%edx,%edx,2),%edx
		mov    (%esp),%cl
		mov    %cl,_0c7938_data(%edx)
		xor    %ecx,%ecx
		mov    _095f6c_data(%ebx),%cl
		sar    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%cl
		mov    _095f6b_data(%ebx),%bl
		mov    %cl,_0c7939_data(%edx)
		and    $_0000ff_case,%ebx
		sar    $0x000002,%ebx
		inc    %eax
		mov    %bl,_0c793a_data(%edx)
		cmp    $0x000010,%ax
		jl     _02417d_jump
		lea    0x00000f(%edi),%ecx
		mov    $_0c7938_data,%esi
		mov    %edi,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		xor    %esi,%esi

	_0241fc_jump:
		xor    %eax,%eax

	_0241fe_jump:
		movswl %si,%edx
		imul   $0x000258,%edx,%ebx
		xor    %ecx,%ecx
		mov    _0de130_data,%cl
		movswl %ax,%edx
		inc    %eax
		mov    %cx,_0cfa20_data(%ebx,%edx,2)
		cmp    $0x00012c,%ax
		jl     _0241fe_jump
		inc    %esi
		cmp    $0x000046,%si
		jl     _0241fc_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_024234_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %cx,0x00000c(%esp)
		mov    _0cd154_data,%esi
		cwtl   
		movswl %dx,%ecx
		add    %eax,%esi
		lea    0x000000(,%ecx,4),%eax
		xor    %edi,%edi
		add    %ecx,%eax
		xor    %edx,%edx
		shl    $0x000006,%eax
		mov    _0de130_data,%dl
		add    %eax,%esi
		xor    %eax,%eax
		mov    %esi,0x000008(%esp)
		call   _06b908_func
		test   %bx,%bx
		jle    _0242c7_jump

	_024273_jump:
		mov    $0x00000a,%eax
		call   _06b8d0_func
		cmp    $0x000005,%ax
		jge    _02429a_jump
		mov    $0x000001,%eax
		call   _06b8d0_func
		imul   $0x00000f,%eax,%eax
		xor    %edx,%edx
		mov    _0de130_data,%dl
		add    %eax,%edx

	_02429a_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000258,%eax,%esi
		inc    %eax
		imul   $0x000258,%eax,%eax
		movswl %di,%ecx
		mov    %dx,_0cfa20_data(%esi,%ecx,2)
		inc    %edi
		mov    %dx,_0cfa20_data(%eax,%ecx,2)
		cmp    %bx,%di
		jl     _024273_jump

	_0242c7_jump:
		mov    $0x000001,%edi
		jmp    _024434_jump

	_0242d1_jump:
		xor    %edx,%edx
		test   %bx,%bx
		jle    _024433_jump

	_0242dc_jump:
		test   %dx,%dx
		jne    _024352_jump
		movswl %di,%eax
		lea    -0x000001(%eax),%ecx
		imul   $0x000258,%ecx,%ecx
		mov    %ecx,0x000004(%esp)
		movswl %bx,%ecx
		mov    0x000004(%esp),%esi
		add    %ecx,%ecx
		add    %esi,%ecx
		imul   $0x000258,%eax,%esi
		inc    %eax
		imul   $0x000258,%eax,%eax
		mov    _0cfa1c_data(%ecx),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,(%esp)
		movswl %dx,%ecx
		add    %ecx,%ecx
		mov    _0cfa1e_data(%ecx,%esi,1),%ebp
		sar    $0x000010,%ebp
		mov    _0cfa20_data(%ecx,%esi,1),%esi
		sar    $0x000010,%esi
		add    (%esp),%ebp
		mov    _0cfa1e_data(%ecx,%eax,1),%eax
		add    %ebp,%esi
		sar    $0x000010,%eax
		add    %esi,%eax
		add    0x000004(%esp),%ecx
		sar    $0x000002,%eax
		mov    %ax,_0cfa20_data(%ecx)
		jmp    _024429_jump

	_024352_jump:
		movswl %bx,%eax
		movswl %dx,%ecx
		lea    -0x000001(%eax),%esi
		lea    0x000000(,%ecx,2),%eax
		cmp    %esi,%ecx
		jne    _0243cd_jump
		movswl %di,%ecx
		imul   $0x000258,%ecx,%esi
		mov    _0cfa1c_data(%esi,%eax,1),%ebp
		mov    _0cfa1e_data(%esi,%eax,1),%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		add    %esi,%ebp
		lea    0x000001(%ecx),%esi
		imul   $0x000258,%esi,%esi
		dec    %ecx
		imul   $0x000258,%ecx,%ecx
		mov    %ebp,(%esp)
		mov    _0cfa1e_data(%esi),%ebp
		sar    $0x000010,%ebp
		mov    _0cfa1e_data(%esi,%eax,1),%esi
		mov    %ebp,0x000004(%esp)
		mov    (%esp),%ebp
		sar    $0x000010,%esi
		add    0x000004(%esp),%ebp
		add    %ebp,%esi
		sar    $0x000002,%esi
		mov    %esi,0x000004(%esp)
		mov    0x000004(%esp),%esi
		mov    %si,_0cfa20_data(%ecx,%eax,1)
		jmp    _024429_jump

	_0243cd_jump:
		movswl %di,%esi
		imul   $0x000258,%esi,%ecx
		mov    _0cfa1c_data(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,(%esp)
		mov    _0cfa1e_data(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		mov    _0cfa20_data(%ecx,%eax,1),%ecx
		add    (%esp),%ebp
		sar    $0x000010,%ecx
		add    %ecx,%ebp
		lea    0x000001(%esi),%ecx
		imul   $0x000258,%ecx,%ecx
		dec    %esi
		imul   $0x000258,%esi,%esi
		mov    _0cfa1e_data(%ecx,%eax,1),%ecx
		sar    $0x000010,%ecx
		add    %ebp,%ecx
		sar    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%ecx
		mov    %cx,_0cfa20_data(%esi,%eax,1)

	_024429_jump:
		inc    %edx
		cmp    %bx,%dx
		jl     _0242dc_jump

	_024433_jump:
		inc    %edi

	_024434_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		movswl %di,%ecx
		add    $0x000002,%eax
		cmp    %eax,%ecx
		jl     _0242d1_jump
		mov    0x00000c(%esp),%edx
		xor    %edi,%edi
		test   %dx,%dx
		jle    _02449f_jump

	_024454_jump:
		xor    %eax,%eax
		test   %bx,%bx
		jle    _024481_jump

	_02445b_jump:
		movswl %di,%ecx
		imul   $0x000258,%ecx,%ecx
		movswl %ax,%esi
		mov    _0cfa20_data(%ecx,%esi,2),%dl
		mov    0x000008(%esp),%ecx
		mov    %dl,(%ecx)
		lea    0x000001(%ecx),%edx
		inc    %eax
		mov    %edx,0x000008(%esp)
		cmp    %bx,%ax
		jl     _02445b_jump

	_024481_jump:
		mov    $0x000140,%ecx
		movswl %bx,%eax
		mov    0x000008(%esp),%ebp
		sub    %eax,%ecx
		inc    %edi
		add    %ecx,%ebp
		mov    0x00000c(%esp),%ecx
		mov    %ebp,0x000008(%esp)
		cmp    %cx,%di
		jl     _024454_jump

	_02449f_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0244a8_func:
		push   %esi
		push   %edi
		sub    $0x000003,%eax
		sub    $0x000003,%edx
		add    $0x000006,%ebx
		add    $0x000006,%ecx
		test   %ax,%ax
		jge    _0244c1_jump
		add    %eax,%ebx
		xor    %eax,%eax
		jmp    _0244d8_jump

	_0244c1_jump:
		movswl %ax,%edi
		movswl %bx,%esi
		add    %edi,%esi
		cmp    $0x000140,%esi
		jle    _0244d8_jump
		mov    $0x000140,%ebx
		sub    %eax,%ebx

	_0244d8_jump:
		test   %dx,%dx
		jge    _0244e3_jump
		xor    %edx,%edx
		add    %eax,%ecx
		jmp    _0244fa_jump

	_0244e3_jump:
		movswl %dx,%edi
		movswl %cx,%esi
		add    %edi,%esi
		cmp    $0x000140,%esi
		jle    _0244fa_jump
		mov    $0x0000c8,%ecx
		sub    %edx,%ecx

	_0244fa_jump:
		movswl %cx,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		cwtl   
		call   _024234_func
		pop    %edi
		pop    %esi
		ret    



_02450c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf474_data,%ch
		xor    %eax,%eax

	_024517_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		imul   $0x000300,%edx,%ebx
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		mov    _0c7938_data(%edx,%ebx,1),%cl
		mov    %cl,_0dde30_data(%edx)
		mov    _0c7939_data(%edx,%ebx,1),%cl
		mov    _0c793a_data(%edx,%ebx,1),%bl
		mov    %cl,_0dde31_data(%edx)
		inc    %eax
		mov    %bl,_0dde32_data(%edx)
		cmp    $0x000050,%ax
		jl     _024517_jump
		mov    $0x000046,%eax
		mov    %al,%dl
		add    %al,%dl
		mov    %dl,%bl
		sub    $0x00008c,%bl
		mov    %dl,%bh
		neg    %bh
		add    $0x00000a,%bh

	_02456a_jump:
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		xor    %cl,%cl
		mov    %bh,_0dde30_data(%edx)
		inc    %eax
		mov    %bl,_0dde31_data(%edx)
		add    $0x000002,%bl
		mov    %cl,_0dde32_data(%edx)
		sub    $0x000002,%bh
		cmp    $0x000066,%ax
		jl     _02456a_jump
		mov    $0x000066,%eax

	_024596_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		imul   $0x000300,%edx,%ebx
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		mov    _0c7938_data(%edx,%ebx,1),%cl
		mov    %cl,_0dde30_data(%edx)
		mov    _0c7939_data(%edx,%ebx,1),%cl
		mov    _0c793a_data(%edx,%ebx,1),%bl
		mov    %cl,_0dde31_data(%edx)
		inc    %eax
		mov    %bl,_0dde32_data(%edx)
		cmp    $0x000070,%ax
		jl     _024596_jump
		mov    $0x000070,%eax

	_0245d9_jump:
		movswl %ax,%ebx
		lea    -0x000070(%ebx),%edx
		lea    (%edx,%edx,2),%edx
		lea    (%ebx,%ebx,2),%ebx
		mov    _095f2a_data(%edx),%cl
		mov    %cl,_0dde30_data(%ebx)
		mov    _095f29_data(%edx),%cl
		mov    _095f28_data(%edx),%dl
		mov    %cl,_0dde31_data(%ebx)
		inc    %eax
		mov    %dl,_0dde32_data(%ebx)
		cmp    $0x000080,%ax
		jl     _0245d9_jump
		mov    $0x000080,%eax
		mov    %al,%dl
		sub    $0x000080,%dl

	_02461a_jump:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%ebx
		mov    %dl,_0dde30_data(%ebx)
		mov    %dl,_0dde31_data(%ebx)
		inc    %eax
		mov    %dl,_0dde32_data(%ebx)
		inc    %dl
		cmp    $0x0000c0,%ax
		jl     _02461a_jump
		mov    $0x0000c0,%eax
		xor    %cl,%cl

	_024642_jump:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%edx
		mov    %cl,_0dde30_data(%edx)
		mov    %cl,_0dde31_data(%edx)
		lea    -0x0000c0(%ebx),%edx
		cmp    $0x000003,%edx
		jg     _024664_jump
		mov    $0x000003,%edx

	_024664_jump:
		mov    %dl,%bl
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		inc    %eax
		mov    %bl,_0dde32_data(%edx)
		cmp    $0x000100,%ax
		jl     _024642_jump
		cmpb   $0x000000,_0cf445_data
		je     _0246b2_jump
		mov    $0x000010,%ah
		mov    $0x00000e,%dl
		mov    $0x000031,%bl
		mov    $0x00002d,%cl
		mov    %ah,_0dde90_data
		mov    %dl,_0dde91_data
		mov    %bl,_0ddea2_data
		mov    %cl,_0ddea4_data
		mov    $0x00000d,%dh
		mov    $0x00002f,%bh
		mov    %dh,_0dde92_data
		mov    %bh,_0ddea3_data

	_0246b2_jump:
		mov    %ch,_0cf474_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0246bc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,(%esp)
		mov    %dl,0x000008(%esp)
		cmpb   $0x000001,_095de4_data
		jne    _024777_jump
		xor    %ebx,%ebx
		mov    %bx,0x000004(%esp)
		mov    $0x000003,%ebp

	_0246e4_jump:
		mov    (%esp),%esi
		mov    0x000004(%esp),%ah
		xor    %ebx,%ebx
		mov    _0ccad8_data,%edx
		mov    0x000004(%esp),%bx
		xor    %ecx,%ecx
		add    %edx,%ebx
		mov    $0x0003ce,%edx
		mov    $0x000004,%al
		out    %ax,(%dx)

	_024705_jump:
		mov    0x000008(%esp),%dh
		mov    (%esi),%al
		test   %dh,%dh
		je     _024750_jump
		movzbl _0cf474_data,%edi
		imul   $0x000300,%edi,%edi
		xor    %edx,%edx
		mov    %al,%dl
		lea    (%edx,%edx,2),%edx
		add    %edi,%edx
		xor    %eax,%eax
		mov    _0c7939_data(%edx),%al
		movzbl _0c7938_data(%edx),%edi
		mov    _0c793a_data(%edx),%dl
		add    %edi,%eax
		and    $_0000ff_case,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		add    $0x000080,%eax

	_024750_jump:
		mov    %al,(%ebx)
		inc    %ecx
		add    $0x000004,%ebx
		inc    %esi
		cmp    $0x003e80,%cx
		jb     _024705_jump
		mov    0x000004(%esp),%edx
		inc    %edx
		mov    %dx,0x000004(%esp)
		cmp    $0x000004,%dx
		jae    _0247ff_jump
		jmp    _0246e4_jump

	_024777_jump:
		mov    (%esp),%esi
		mov    _0ccad8_data,%edi
		test   %dl,%dl
		je     _0247ea_jump
		xor    %edx,%edx
		mov    %dx,0x000004(%esp)

	_02478b_jump:
		xor    %edx,%edx
		mov    _0cf474_data,%dl
		imul   $0x000300,%edx,%edx
		mov    (%esi),%al
		and    $_0000ff_case,%eax
		lea    (%eax,%eax,2),%eax
		add    %edx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0c7938_data(%eax),%bl
		mov    _0c7939_data(%eax),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0c793a_data(%eax),%dl
		add    %ebx,%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000004(%esp),%ecx
		inc    %edi
		inc    %esi
		inc    %ecx
		add    $0x000080,%eax
		mov    %cx,0x000004(%esp)
		mov    %al,-0x000001(%edi)
		cmp    $0x00fa00,%cx
		jae    _0247ff_jump
		jmp    _02478b_jump

	_0247ea_jump:
		mov    $0x00fa00,%ecx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_0247ff_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_024808_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %ax,0x000008(%esp)
		mov    %dx,0x000004(%esp)
		mov    %ecx,%esi
		xor    %ah,%ah
		mov    $0x000004,%edx
		and    $0x000003,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000008(%esp),%edx
		add    %eax,%edx
		mov    %ebx,%eax
		mov    %dx,0x000008(%esp)
		xor    %bh,%ah
		mov    $0x000004,%edx
		and    $0x000003,%al
		sub    %eax,%edx
		add    %edx,%ebx
		mov    $0x000140,%edx
		movswl %bx,%eax
		mov    0x000006(%esp),%ecx
		sub    %eax,%edx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		add    _0cd154_data,%ecx
		mov    0x000002(%esp),%edx
		sar    $0x000002,%eax
		sar    $0x000010,%edx
		mov    %ax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    %bx,(%esp)
		shl    $0x000006,%eax
		sar    $0x000002,%bx
		add    %ecx,%eax
		xor    %ecx,%ecx
		test   %si,%si
		jle    _0248be_jump

	_024886_jump:
		xor    %edx,%edx
		test   %bx,%bx
		jle    _0248ac_jump

	_02488d_jump:
		mov    (%eax),%edi
		test   %edi,%edi
		je     _02489d_jump
		lea    0x40404040(%edi),%ebp
		mov    %ebp,(%eax)
		jmp    _0248a3_jump

	_02489d_jump:
		movl   $0xc8c8c8c8,(%eax)

	_0248a3_jump:
		inc    %edx
		add    $0x000004,%eax
		cmp    %bx,%dx
		jl     _02488d_jump

	_0248ac_jump:
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000002,%edx
		inc    %ecx
		add    %edx,%eax
		cmp    %si,%cx
		jl     _024886_jump

	_0248be_jump:
		mov    -0x000002(%esp),%edx
		mov    0x000002(%esp),%ebx
		mov    $0x002026,%eax
		mov    _0cd154_data,%edi
		movswl %si,%ecx
		mov    0x000006(%esp),%esi
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		call   _014b1a_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0248f0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%esi
		cmpb   $0x000000,0x00001c(%esp)
		je     _024908_jump
		movw   $0x002026,0x000008(%esp)
		jmp    _02490f_jump

	_024908_jump:
		movw   $0x002620,0x000008(%esp)

	_02490f_jump:
		movswl %bx,%edi
		movswl %si,%esi
		movswl %ax,%ebp
		mov    %edi,(%esp)
		mov    %esi,%ebx
		movswl %cx,%edi
		mov    %ebp,%eax
		mov    %edi,0x000004(%esp)
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    _0cd154_data,%edi
		call   _014a4e_func
		mov    0x000006(%esp),%eax
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    _0cd154_data,%edi
		mov    %esi,%ebx
		sar    $0x000010,%eax
		mov    %ebp,%esi
		call   _014b1a_func
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_024960_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf474_data,%bh
		cmpb   $0x000000,_0cf429_data
		je     _0249b7_jump
		cmpb   $0x000000,_095e1b_data
		jne    _0249b7_jump
		xor    %al,%al
		mov    $0x00003f,%ah

	_02497f_jump:
		mov    %al,%bl
		xor    %edx,%edx
		add    %al,%bl
		mov    %bh,%dl
		imul   $0x000300,%edx,%ecx
		xor    %edx,%edx
		mov    %al,%dl
		add    $0x000046,%edx
		lea    (%edx,%edx,2),%edx
		mov    %ah,_0c7938_data(%ecx,%edx,1)
		mov    %bl,_0c7939_data(%ecx,%edx,1)
		sub    $0x000002,%ah
		xor    %bl,%bl
		inc    %al
		mov    %bl,_0c793a_data(%ecx,%edx,1)
		cmp    $0x000020,%al
		jb     _02497f_jump

	_0249b7_jump:
		mov    %bh,_0cf474_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0249c4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    0x000030(%esp),%edi
		mov    %eax,%esi
		mov    %dx,0x00000c(%esp)
		mov    %bx,0x000010(%esp)
		mov    %cx,0x000018(%esp)
		mov    0x00002c(%esp),%ecx
		mov    0x000034(%esp),%edx
		mov    _0cd154_data,%ebp
		cwtl   
		add    %eax,%ebp
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		inc    %eax
		lea    0x000000(,%eax,4),%ebx
		add    %eax,%ebx
		inc    %ebp
		shl    $0x000006,%ebx
		add    %ebx,%ebp
		cmp    %di,%dx
		jle    _024a10_jump
		mov    %edi,%edx
		jmp    _024a19_jump

	_024a10_jump:
		cmp    %cx,%dx
		jge    _024a19_jump
		xor    %edx,%edx
		jmp    _024a1b_jump

	_024a19_jump:
		sub    %ecx,%edx

	_024a1b_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000008,%ebx
		sar    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _024a30_jump
		mov    %ebx,%eax

	_024a30_jump:
		mov    0x000010(%esp),%ebx
		sub    %eax,%ebx
		mov    %ax,0x000008(%esp)
		mov    %ebx,%eax
		sub    $0x000003,%eax
		movswl %dx,%edx
		cwtl   
		imul   %eax,%edx
		movswl %di,%ebx
		movswl %cx,%eax
		sub    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000016(%esp),%ecx
		mov    _0cd154_data,%edi
		sar    $0x000010,%ecx
		movswl %si,%edx
		mov    0x00000a(%esp),%ebx
		inc    %edx
		sar    $0x000010,%ebx
		movswl %si,%esi
		add    %edx,%eax
		mov    0x00000e(%esp),%edx
		mov    %ax,0x000014(%esp)
		mov    $0x002026,%eax
		sar    $0x000010,%edx
		call   _014b1a_func
		xor    %dh,%dh
		xor    %ah,%ah
		jmp    _024ad2_jump

	_024a8f_jump:
		xor    %dl,%dl
		xor    %al,%al
		jmp    _024ab1_jump

	_024a95_jump:
		mov    %ah,%cl
		add    $0x000046,%cl
		mov    %cl,0x000000(%ebp)
		xor    %ecx,%ecx
		sar    $0x000005,%ebx
		mov    %al,%cl
		cmp    %ebx,%ecx
		jle    _024aac_jump
		xor    %al,%al
		inc    %ah

	_024aac_jump:
		inc    %dl
		inc    %ebp
		inc    %al

	_024ab1_jump:
		mov    0x00000e(%esp),%ecx
		sar    $0x000010,%ecx
		movzbl %dl,%esi
		lea    -0x000002(%ecx),%ebx
		cmp    %ebx,%esi
		jl     _024a95_jump
		mov    $0x000140,%ebx
		sub    %ecx,%ebx
		inc    %dh
		add    $0x000002,%ebx
		xor    %ah,%ah
		add    %ebx,%ebp

	_024ad2_jump:
		mov    0x000016(%esp),%esi
		xor    %ebx,%ebx
		sar    $0x000010,%esi
		mov    %dh,%bl
		lea    -0x000002(%esi),%ecx
		cmp    %ecx,%ebx
		jl     _024a8f_jump
		mov    0x000006(%esp),%eax
		mov    _0cd154_data,%edi
		lea    -0x000003(%esi),%ebp
		sar    $0x000010,%eax
		mov    0x000012(%esp),%esi
		mov    %eax,0x000004(%esp)
		mov    0x00000a(%esp),%eax
		mov    %ebp,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		inc    %eax
		mov    0x000004(%esp),%edx
		mov    %eax,(%esp)
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _014a4e_func
		mov    $0x000308,%eax
		mov    0x000004(%esp),%edx
		mov    (%esp),%ebx
		mov    _0cd154_data,%edi
		mov    %ebp,%ecx
		call   _014b1a_func
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_024b3c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %ax,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %ebx,%esi
		mov    %ecx,%edi
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		mov    _0cd154_data,%ecx
		add    %ebx,%eax
		mov    _0cd154_data,%ebp
		shl    $0x000006,%eax
		xor    %edx,%edx
		mov    %eax,%ebx
		add    %eax,%ecx
		mov    %ebp,%eax
		call   _07fcc0_func
		mov    -0x000002(%esp),%ebx
		mov    $0x0000c8,%ebp
		sar    $0x000010,%ebx
		sub    %ebx,%ebp
		lea    0x000000(,%ebp,4),%eax
		add    %eax,%ebp
		lea    0x000000(,%ebx,4),%eax
		mov    _0cd154_data,%edx
		add    %ebx,%eax
		shl    $0x000006,%ebp
		shl    $0x000006,%eax
		mov    %ebp,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _07fcc0_func
		mov    0x000004(%esp),%edx
		cmp    (%esp),%dx
		jge    _024bf4_jump
		movswl %si,%ebx

	_024bbf_jump:
		xor    %eax,%eax
		test   %si,%si
		jle    _024bd0_jump

	_024bc6_jump:
		inc    %eax
		movb   $0x000000,(%ecx)
		inc    %ecx
		cmp    %si,%ax
		jl     _024bc6_jump

	_024bd0_jump:
		movswl %di,%eax
		sub    %ebx,%eax
		add    %eax,%ecx
		mov    %edi,%eax
		cmp    $0x000140,%di
		jge    _024beb_jump

	_024be0_jump:
		inc    %eax
		movb   $0x000000,(%ecx)
		inc    %ecx
		cmp    $0x000140,%ax
		jl     _024be0_jump

	_024beb_jump:
		mov    (%esp),%eax
		inc    %edx
		cmp    %ax,%dx
		jl     _024bbf_jump

	_024bf4_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_024c00_func:
		movswl %dx,%edx
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx
		cwtl   
		call   _01e1b4_func
		cmp    $0x00000f,%al
		sete   %al
		xor    %ah,%ah
		ret    



_024c1c_func:
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		movswl %ax,%esi
		movswl %bx,%edx
		movswl %cx,%eax
		call   *_0c2758_data(,%esi,4)
		sub    %ebx,%eax
		pop    %esi
		pop    %ecx
		ret    



_024c38_func:
		push   %ecx
		mov    %eax,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		cwtl   
		call   _024c1c_func
		test   %ax,%ax
		jg     _024c50_jump
		mov    %ecx,%eax
		pop    %ecx
		ret    

	_024c50_jump:
		xor    %eax,%eax
		pop    %ecx
		ret    

_024c54_switch:
		.long   _024d96_case
		.long   _024d96_case
		.long   _024da6_case
		.long   _024db9_case
		.long   _024dcc_case
		.long   _024dcc_case
		.long   _024de3_case
		.long   _024de3_case
		.long   _024d96_case
		.long   _024df2_case
		.long   _024d96_case
		.long   _024ebf_case
		.long   _024ebf_case
		.long   _024ebf_case
		.long   _024df2_case
		.long   _024df2_case
		.long   _024ebf_case
		.long   _024ebf_case
		.long   _024da6_case
		.long   _024db9_case
		.long   _024dcc_case
		.long   _024dcc_case
		.long   _024de3_case
		.long   _024de3_case
		.long   _024d96_case
		.long   _024d96_case
		.long   _024ebf_case
		.long   _024ebf_case
		.long   _024ebf_case
		.long   _024ebf_case
		.long   _024df2_case




_024cd0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %dl,0x000008(%esp)
		xor    %edx,%edx
		mov    %edx,(%esp)
		mov    0x000060(%eax),%dx
		xor    %ebx,%ebx
		cmp    $0x000017,%dx
		jne    _024d4d_jump
		testb  $0x000002,_0cf221_data
		je     _024d4d_jump
		xor    %eax,%eax
		mov    $0x000001,%cl
		mov    0x000008(%esp),%al
		xor    %edx,%edx
		test   %ax,%ax
		js     _024d0b_jump
		sar    %cl,%ax
		jmp    _024d14_jump

	_024d0b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024d14_jump:
		mov    _0ce0b1_data,%dl
		mov    _0ce050_data,%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    (%ecx),%ecx
		mov    _0ce0b0_data,%dl
		mov    %al,0x000008(%esp)
		testb  $0x000040,0x000007(%ecx,%edx,8)
		jne    _024d4d_jump
		test   %al,%al
		je     _024d44_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    _024d49_jump

	_024d44_jump:
		mov    $0x000001,%edx

	_024d49_jump:
		mov    %dl,0x000008(%esp)

	_024d4d_jump:
		xor    %eax,%eax
		mov    0x00002c(%edi),%dx
		mov    0x000069(%edi),%al
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		mov    0x000002(%esp),%eax
		movzbw 0x000068(%edi),%si
		sar    $0x000010,%eax
		mov    0x000028(%edi),%cx
		sar    $0x000004,%eax
		add    %ecx,%esi
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e1b4_func
		cmp    $0x00001e,%al
		ja     _024ebf_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_024c54_switch(,%eax,4)

	_024d96_case:
		mov    $0x000008,%eax
		sub    0x000042(%edi),%ax
		add    %eax,%ebx
		jmp    _024ebf_case

	_024da6_case:
		cmpw   $0x000000,0x000040(%edi)
		jl     _024ebf_case
		add    $0x000011,%ebx
		jmp    _024ebf_case

	_024db9_case:
		cmpw   $0x000000,0x000040(%edi)
		jg     _024ebf_case
		add    $0x000011,%ebx
		jmp    _024ebf_case

	_024dcc_case:
		cmpw   $0x000000,0x000040(%edi)
		jl     _024ddb_jump
		add    $0x000011,%ebx
		jmp    _024ebf_case

	_024ddb_jump:
		add    $0x000002,%ebx
		jmp    _024ebf_case

	_024de3_case:
		cmpw   $0x000000,0x000040(%edi)
		jg     _024ddb_jump
		add    $0x000011,%ebx
		jmp    _024ebf_case

	_024df2_case:
		mov    0x000062(%edi),%al
		cmp    $0x000002,%al
		jb     _024e08_jump
		cmp    $0x000003,%al
		jbe    _024e05_jump
		cmp    $0x000012,%al
		jb     _024e08_jump
		cmp    $0x000013,%al
		ja     _024e08_jump

	_024e05_jump:
		add    $0x000008,%ebx

	_024e08_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e1b4_func
		cmp    $0x00000a,%al
		jb     _024e64_jump
		jbe    _024e7c_jump
		cmp    $0x000013,%al
		jb     _024e4d_jump
		jbe    _024e8d_jump
		cmp    $0x000016,%al
		jb     _024e99_jump
		cmp    $0x000017,%al
		jbe    _024ea9_jump
		cmp    $0x000019,%al
		jbe    _024e7c_jump
		jmp    _024ebc_jump

	_024e4d_jump:
		cmp    $0x00000c,%al
		jb     _024ebc_jump
		jbe    _024eb9_jump
		cmp    $0x000012,%al
		je     _024e81_jump
		jmp    _024ebc_jump

	_024e64_jump:
		cmp    $0x000003,%al
		jb     _024e78_jump
		jbe    _024e8d_jump
		cmp    $0x000006,%al
		jb     _024e99_jump
		cmp    $0x000007,%al
		jbe    _024ea9_jump
		cmp    $0x000008,%al
		je     _024e7c_jump
		jmp    _024ebc_jump

	_024e78_jump:
		cmp    $0x000001,%al
		ja     _024e81_jump

	_024e7c_jump:
		add    $0x000009,%ebx
		jmp    _024ebf_case

	_024e81_jump:
		cmpw   $0x000000,0x000040(%edi)
		jl     _024ebf_case
		add    $0x000019,%ebx
		jmp    _024ebf_case

	_024e8d_jump:
		cmpw   $0x000000,0x000040(%edi)
		jg     _024ebf_case
		add    $0x000019,%ebx
		jmp    _024ebf_case

	_024e99_jump:
		cmpw   $0x000000,0x000040(%edi)
		jl     _024ddb_jump
		add    $0x000011,%ebx
		jmp    _024ebf_case

	_024ea9_jump:
		cmpw   $0x000000,0x000040(%edi)
		jg     _024ddb_jump
		add    $0x000011,%ebx
		jmp    _024ebf_case

	_024eb9_jump:
		inc    %ebx
		jmp    _024ebf_case

	_024ebc_jump:
		add    $0x000008,%ebx

	_024ebf_case:
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    0x000008(%esp),%dl
		test   %ax,%ax
		js     _024ed1_jump
		sar    %cl,%ax
		jmp    _024eda_jump

	_024ed1_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024eda_jump:
		sub    %al,%dl
		mov    %dl,0x000008(%esp)
		cmp    $0x000080,%dl
		jbe    _024eeb_jump
		xor    %cl,%cl
		mov    %cl,0x000008(%esp)

	_024eeb_jump:
		mov    $0x000004,%cl
		mov    %esi,%eax
		mov    0x000004(%esp),%edi
		test   %ax,%ax
		js     _024efd_jump
		sar    %cl,%ax
		jmp    _024f06_jump

	_024efd_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024f06_jump:
		sub    %ebx,%edi
		mov    $0x000004,%cl
		mov    %edi,%eax
		test   %ax,%ax
		js     _024f16_jump
		sar    %cl,%ax
		jmp    _024f1f_jump

	_024f16_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024f1f_jump:
		xor    %ebx,%ebx
		xor    %cl,%cl
		jmp    _024f47_jump

	_024f25_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		sub    %ebx,%eax
		mov    %edi,%edx
		shl    $0x000004,%eax
		sub    %eax,%edx
		movswl %dx,%edx
		movswl %si,%eax
		call   _024c00_func
		test   %ax,%ax
		je     _024f46_jump
		inc    %cl

	_024f46_jump:
		inc    %ebx

	_024f47_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		cmp    %eax,%ebx
		jle    _024f25_jump
		test   %cl,%cl
		je     _024f5c_jump
		movl   $0x00000f,(%esp)

	_024f5c_jump:
		mov    (%esp),%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_024f68_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _024f85_jump
		mov    $0x000001,%eax
		jg     _024f85_jump
		neg    %eax

	_024f85_jump:
		mov    %eax,%ecx
		test   %ax,%ax
		je     _0250eb_jump
		cmpw   $0x000017,0x000060(%esi)
		jne    _024fc8_jump
		mov    _0cf221_data,%ah
		mov    $0x000004,%dh
		test   $0x000002,%ah
		je     _024fad_jump
		mov    $0x000008,%eax
		mov    $0x000002,%dh
		jmp    _024fb2_jump

	_024fad_jump:
		mov    $0x00000e,%eax

	_024fb2_jump:
		mov    _0ce092_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _024fcd_jump
		xor    %ebx,%ebx
		mov    %dh,%bl
		sub    %ebx,%eax
		jmp    _024fcd_jump

	_024fc8_jump:
		mov    $0x00000e,%eax

	_024fcd_jump:
		test   %cx,%cx
		jge    _024fd4_jump
		neg    %eax

	_024fd4_jump:
		test   %dl,%dl
		je     _024fda_jump
		neg    %eax

	_024fda_jump:
		cwtl   
		mov    0x000028(%esi),%ebx
		add    %eax,%ebx
		mov    0x000028(%esi),%di
		mov    %ebx,0x000028(%esi)
		test   %dl,%dl
		jne    _02501a_jump
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		mov    _092535_data(,%edx,4),%bl
		mov    0x000040(%esi),%ax
		test   $0x000010,%bl
		je     _025016_jump
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _02500d_jump
		sar    %cl,%ax
		jmp    _025016_jump

	_02500d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_025016_jump:
		cwtl   
		sub    %eax,0x000028(%esi)

	_02501a_jump:
		testb  $0x000020,0x000081(%esi)
		je     _025043_jump
		lea    0x000010(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d7e0_func
		jmp    _025049_jump

	_025043_jump:
		xor    %ecx,%ecx
		mov    %ecx,0x000008(%esp)

	_025049_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000074(%esi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %eax,%edx
		mov    $0x000004,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _025069_jump
		sar    %cl,%ax
		jmp    _025072_jump

	_025069_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_025072_jump:
		mov    0x000060(%esi),%bx
		mov    %eax,%edx
		cmp    $0x000017,%bx
		jne    _0250c8_jump
		xor    %ebx,%ebx
		mov    _0ce0b1_data,%bl
		mov    _0ce050_data,%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    _0ce0b0_data,%bl
		mov    %ecx,(%esp)
		lea    0x000000(,%ebx,8),%ecx
		mov    (%esp),%ebx
		mov    (%ebx),%ebx
		testb  $0x000040,0x000007(%ecx,%ebx,1)
		je     _0250c8_jump
		xor    %eax,%eax
		mov    $0x000001,%cl
		mov    %dl,%al
		test   %ax,%ax
		js     _0250bf_jump
		sar    %cl,%ax
		jmp    _0250c8_jump

	_0250bf_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0250c8_jump:
		test   %al,%al
		je     _0250ce_jump
		dec    %al

	_0250ce_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _024cd0_func
		mov    %al,%dl
		movswl %di,%eax
		mov    %eax,0x000028(%esi)
		mov    %dl,%al
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0250eb_jump:
		xor    %dl,%dl
		mov    %dl,%al
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0250f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000002,_0924f4_data(%eax)
		jne    _02543d_jump
		mov    0x000060(%ecx),%ax
		cmp    $0x000028,%ax
		jb     _02516a_jump
		jbe    _0253a7_jump
		cmp    $0x00007a,%ax
		jb     _02514b_jump
		jbe    _0253a7_jump
		cmp    $0x0000a5,%ax
		jb     _02541f_jump
		jbe    _025394_jump
		cmp    $0x0000ac,%ax
		je     _025400_jump
		jmp    _02541f_jump

	_02514b_jump:
		cmp    $0x000041,%ax
		jb     _02541f_jump
		jbe    _0253cf_jump
		cmp    $0x000064,%ax
		je     _0253c4_jump
		jmp    _02541f_jump

	_02516a_jump:
		cmp    $0x000003,%ax
		jb     _025191_jump
		jbe    _025341_jump
		cmp    $0x000009,%ax
		jb     _02541f_jump
		jbe    _025394_jump
		cmp    $0x000017,%ax
		je     _02519f_jump
		jmp    _02541f_jump

	_025191_jump:
		test   %ax,%ax
		je     _025360_jump
		jmp    _02541f_jump

	_02519f_jump:
		call   _06baa8_func
		cmpb   $0x00000c,_0cf46f_data
		je     _02541f_jump
		cmpb   $0x00000c,_0cf473_data
		je     _02541f_jump
		cmpb   $0x00000c,_0cf472_data
		je     _02541f_jump
		cmpb   $0x000005,_0ce0b1_data
		je     _02541f_jump
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce0b0_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _025223_jump
		xor    %edx,%edx
		mov    _0ce07c_data,%bx
		mov    %dx,_0ce086_data
		mov    _0ce070_data,%edx
		add    $0x000010,%ebx
		add    $0x000010,%edx
		mov    %bx,_0ce07c_data
		mov    %edx,_0ce070_data

	_025223_jump:
		cmpb   $0x000000,_0cf44b_data
		je     _02525c_jump
		cmpb   $0x000000,_0ce0b1_data
		jne    _02524d_jump
		cmpb   $0x000028,_0ce0b0_data
		jne    _02524d_jump
		mov    $0x00001a,%ebx
		mov    $0x000002,%edx
		jmp    _025303_jump

	_02524d_jump:
		mov    $0x00001c,%ebx
		mov    $0x000002,%edx
		jmp    _025303_jump

	_02525c_jump:
		cmpb   $0x000001,_0ce0b1_data
		jne    _02529b_jump
		mov    _0ce0b0_data,%ah
		cmp    $0x000009,%ah
		je     _025275_jump
		cmp    $0x00000b,%ah
		jne    _02529b_jump

	_025275_jump:
		mov    _0ce0c5_data,%dh
		test   $0x000008,%dh
		sete   %al
		mov    %dh,%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,_0ce0c5_data
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,_0ce0c5_data

	_02529b_jump:
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0252a9_jump
		neg    %eax

	_0252a9_jump:
		cmp    $0x000002,%eax
		jg     _0252ef_jump
		xor    %eax,%eax
		call   _06c468_func
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce0b0_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _0252e3_jump
		mov    $0x000018,%ebx
		mov    $0x000002,%edx
		jmp    _025303_jump

	_0252e3_jump:
		mov    $0x000021,%ebx
		mov    $0x000002,%edx
		jmp    _025303_jump

	_0252ef_jump:
		mov    $0x000001,%eax
		mov    $0x000020,%ebx
		mov    $0x000002,%edx
		call   _06c468_func

	_025303_jump:
		mov    %ecx,%eax
		call   _01d444_func
		xor    %esi,%esi
		mov    _0cf46a_data,%ah
		mov    %si,_0cf296_data
		test   %ah,%ah
		je     _025327_jump
		cmpw   $0x000000,_0cf276_data
		je     _025335_jump

	_025327_jump:
		movw   $0x000001,_0ce08c_data
		jmp    _02541f_jump

	_025335_jump:
		mov    %si,_0ce08c_data
		jmp    _02541f_jump

	_025341_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		jmp    _02541a_jump

	_025360_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d43c_func
		cmpb   $0x000002,0x00006c(%ecx)
		je     _025383_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d434_func
		jmp    _02541f_jump

	_025383_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d434_func
		jmp    _02541f_jump

	_025394_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d444_func
		jmp    _02541f_jump

	_0253a7_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _060460_func
		movb   $0x000007,0x000072(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _02541f_jump

	_0253c4_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		jmp    _02541a_jump

	_0253cf_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		movb   $_0000ff_case,0x00007c(%ecx)
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _060460_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _02541f_jump

	_025400_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d444_func
		mov    $0x00000f,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx

	_02541a_jump:
		call   _060460_func

	_02541f_jump:
		movw   $0x000000,0x000052(%ecx)
		mov    0x000060(%ecx),%bx
		movb   $0x000000,0x000071(%ecx)
		cmp    $0x000028,%bx
		je     _02543d_jump
		cmp    $0x00007a,%bx
		je     _02543d_jump
		movb   $0x000000,0x000072(%ecx)

	_02543d_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025444_func:
		push   %ecx
		push   %edx
		xor    %dl,%dl
		cmpb   $0x000009,0x000062(%eax)
		jne    _025472_jump
		cmpw   $0x000000,0x000042(%eax)
		jl     _025472_jump
		mov    0x000060(%eax),%cx
		cmp    $0x000017,%cx
		je     _025470_jump
		mov    %ecx,%eax
		and    $0x00ffff,%eax
		testb  $0x000008,_092536_data(,%eax,4)
		je     _025472_jump

	_025470_jump:
		mov    $0x000001,%dl

	_025472_jump:
		mov    %dl,%al
		pop    %edx
		pop    %ecx
		ret    



_025478_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    0x000062(%eax),%dl
		xor    %cl,%cl
		cmp    $0x000009,%dl
		jne    _025509_jump
		cmpw   $0x000000,0x000042(%eax)
		jl     _025509_jump
		mov    0x000060(%eax),%bx
		cmp    $0x000017,%bx
		jne    _0254f3_jump
		mov    $0x000001,%cl
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %cl,_0cf470_data
		call   _01d444_func
		call   _06c6b0_func
		mov    $0xffffffff,%edx
		mov    $0x0000f9,%eax
		mov    $0x00000c,%esi
		call   _071b3c_func
		mov    _0ce086_data,%di
		mov    $_0ce044_data,%eax
		sub    $0x000003,%edi
		mov    %si,_0cf296_data
		mov    %di,_0ce086_data
		call   _07bb74_func
		jmp    _025509_jump

	_0254f3_jump:
		xor    %edx,%edx
		mov    %bx,%dx
		testb  $0x000008,_092536_data(,%edx,4)
		je     _025509_jump
		call   _02f354_func
		mov    $0x000001,%cl

	_025509_jump:
		mov    %cl,%al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_025514_switch:
		.long   _025750_case
		.long   _025750_case
		.long   _025706_case
		.long   _025712_case
		.long   _025719_case
		.long   _02572a_case
		.long   _02573b_case
		.long   _025744_case
		.long   _025750_case
		.long   _0256b6_case
		.long   _025750_case
		.long   _025750_case
		.long   _0257a8_case
		.long   _025750_case
		.long   _0256b6_case
		.long   _0256b6_case
		.long   _025750_case
		.long   _025750_case
		.long   _025706_case
		.long   _025712_case
		.long   _025719_case
		.long   _02572a_case
		.long   _02573b_case
		.long   _025744_case
		.long   _025750_case
		.long   _025750_case
		.long   _025750_case
		.long   _025750_case
		.long   _025750_case
		.long   _025750_case
		.long   _0256b6_case




_025590_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000001,_092536_data(,%eax,4)
		jne    _0255b5_jump
		cmp    $0x000017,%ax
		jne    _025893_jump

	_0255b5_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000010,_092535_data(,%eax,4)
		je     _0255da_jump
		cmp    $0x000017,%ax
		je     _0255da_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		call   _055230_func
		mov    %eax,%edi
		jmp    _0255de_jump

	_0255da_jump:
		mov    0x000040(%ecx),%di

	_0255de_jump:
		xor    %eax,%eax
		mov    0x000028(%ecx),%dx
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000008(%esp)
		mov    0x000069(%ecx),%al
		mov    0x00002c(%ecx),%dx
		mov    0x000060(%ecx),%si
		add    %eax,%edx
		mov    0x000008(%esp),%eax
		mov    %dx,0x000010(%esp)
		mov    %edx,%ebx
		xor    %ah,%ah
		xor    %dh,%bh
		and    $0x00000f,%al
		and    $0x00000f,%bl
		add    %edi,%eax
		cmp    $0x000017,%si
		jne    _025651_jump
		mov    _0ce092_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _025651_jump
		test   %di,%di
		jle    _025633_jump
		mov    $0x00000f,%eax
		jmp    _025637_jump

	_025633_jump:
		jge    _025637_jump
		xor    %eax,%eax

	_025637_jump:
		xor    %edx,%edx
		mov    0x000062(%ecx),%dl
		lea    0x000000(,%edx,4),%esi
		cwtl   
		movswl %bx,%edx
		call   *_0c2558_data(%esi)
		mov    %eax,%ebx
		jmp    _025667_jump

	_025651_jump:
		xor    %edx,%edx
		mov    0x000062(%ecx),%dl
		lea    0x000000(,%edx,4),%esi
		cwtl   
		movswl %bx,%edx
		call   *_0c2558_data(%esi)

	_025667_jump:
		sub    %ebx,%eax
		mov    0x000010(%esp),%ebx
		add    %eax,%ebx
		mov    %ax,0x00000c(%esp)
		movswl %bx,%eax
		mov    0x000008(%esp),%esi
		sar    $0x000004,%eax
		add    %edi,%esi
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		mov    %eax,(%esp)
		xor    %bh,%bh
		mov    (%esp),%eax
		and    $0x00000f,%bl
		cwtl   
		and    $0x00000f,%esi
		call   _01e1b4_func
		mov    %al,0x000014(%esp)
		cmp    $0x00001e,%al
		ja     _025750_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_025514_switch(,%eax,4)

	_0256b6_case:
		mov    0x00000e(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		sub    $0x000010,%eax
		mov    0x000006(%esp),%ebp
		sar    $0x000004,%eax
		sar    $0x000010,%ebp
		movswl %ax,%edx
		movswl %di,%eax
		add    %ebp,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e1b4_func
		and    $_0000ff_case,%eax
		lea    0x000000(,%eax,4),%edi
		movswl %bx,%edx
		movswl %si,%eax
		call   *_0c2658_data(%edi)
		mov    %ebx,%edx
		sub    $0x000010,%edx
		jmp    _0257ae_jump

	_025706_case:
		mov    $0x00000f,%edx
		sub    %esi,%edx
		jmp    _0257b0_jump

	_025712_case:
		mov    %esi,%edx
		jmp    _0257b0_jump

	_025719_case:
		movswl %si,%eax
		mov    $0x00000f,%edx
		sar    %eax
		sub    %eax,%edx
		jmp    _0257b0_jump

	_02572a_case:
		movswl %si,%eax
		mov    $0x000007,%edx
		sar    %eax
		sub    %eax,%edx
		jmp    _0257b0_jump

	_02573b_case:
		movswl %si,%eax
		sar    %eax
		mov    %eax,%edx
		jmp    _0257b0_jump

	_025744_case:
		movswl %si,%eax
		sar    %eax
		add    $0x000008,%eax
		mov    %eax,%edx
		jmp    _0257b0_jump

	_025750_case:
		mov    0x000010(%esp),%eax
		mov    0x00000c(%esp),%esi
		mov    0x000008(%esp),%edx
		add    %esi,%eax
		add    %edx,%edi
		add    $0x000010,%eax
		mov    %edi,%edx
		mov    %eax,%esi
		xor    %dh,%dh
		cwtl   
		and    $0x00000f,%dl
		sar    $0x000004,%eax
		mov    %dx,0x000004(%esp)
		movswl %ax,%edx
		movswl %di,%eax
		sar    $0x000004,%eax
		and    $0x00000f,%esi
		cwtl   
		sub    $0x000010,%esi
		call   _01e1b4_func
		movzbl %al,%edi
		mov    0x000002(%esp),%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		call   *_0c2758_data(,%edi,4)
		sub    %esi,%eax
		cmp    $0x000002,%ax
		jle    _0257ac_jump

	_0257a8_case:
		mov    %ebx,%edx
		jmp    _0257b0_jump

	_0257ac_jump:
		mov    %ebx,%edx

	_0257ae_jump:
		add    %eax,%edx

	_0257b0_jump:
		mov    %ecx,%eax
		call   _025478_func
		test   %al,%al
		jne    _025893_jump
		mov    0x000060(%ecx),%di
		cmp    $0x000017,%di
		jne    _025880_jump
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _025840_jump
		cmpb   $0x000002,_0ce0b1_data
		setne  %al
		and    $_0000ff_case,%eax
		je     _025840_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0257f7_jump
		neg    %eax

	_0257f7_jump:
		cmp    $0x000002,%eax
		jle    _025840_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _025808_jump
		neg    %eax

	_025808_jump:
		cmp    $0x000010,%eax
		jge    _025840_jump
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		testb  $0x000002,_0924f4_data(%eax)
		jne    _025840_jump
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000042(%ecx),%si
		call   _01d444_func
		movb   $0x000001,_0cf470_data
		call   _06c6b0_func
		mov    %si,0x000042(%ecx)
		jmp    _025893_jump

	_025840_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _025852_jump
		cmpb   $0x000020,_0ce0b0_data
		je     _025859_jump

	_025852_jump:
		mov    $0x000001,%eax
		jmp    _02585b_jump

	_025859_jump:
		xor    %eax,%eax

	_02585b_jump:
		test   %eax,%eax
		je     _025893_jump
		cmpb   $0x000003,_0ce0b1_data
		jne    _025871_jump
		cmpb   $0x000016,_0ce0b0_data
		je     _025878_jump

	_025871_jump:
		mov    $0x000001,%eax
		jmp    _02587a_jump

	_025878_jump:
		xor    %eax,%eax

	_02587a_jump:
		test   %eax,%eax
		je     _025893_jump
		jmp    _025882_jump

	_025880_jump:
		je     _025893_jump

	_025882_jump:
		add    0x00000c(%esp),%edx
		sub    %ebx,%edx
		mov    %ecx,%eax
		mov    %dx,0x000042(%ecx)
		call   _0250f8_func

	_025893_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0258a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		mov    0x000028(%ebx),%dx
		mov    0x00002c(%ebx),%si
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    0x000069(%ebx),%cl
		mov    0x000068(%ebx),%al
		add    %esi,%ecx
		add    %edx,%eax
		mov    %ecx,%esi
		mov    %eax,%edi
		movswl %cx,%edx
		and    $0x00fff0,%esi
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx
		cwtl   
		and    $0x00000f,%edi
		call   _01e1b4_func
		and    $_0000ff_case,%eax
		lea    0x000000(,%eax,4),%ebp
		xor    %edx,%edx
		movswl %di,%eax
		call   *_0c2458_data(%ebp)
		cmpw   $0x000017,0x000060(%ebx)
		je     _02590e_jump
		movswl %si,%edx
		cwtl   
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%ebx),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%ebx)
		jmp    _025916_jump

	_02590e_jump:
		add    %esi,%eax
		sub    %ecx,%eax
		mov    %ax,0x000042(%ebx)

	_025916_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025920_func:
		mov    %edx,%eax
		inc    %eax
		ret    



_025924_func:
		mov    $0x00000f,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		lea    0x000000(%eax),%eax

	_025930_jump:
		ret    



_025934_func:
		cwtl   
		mov    $0x00000f,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		ret    



_025944_func:
		cwtl   
		mov    $0x000007,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		ret    



_025954_func:
		cwtl   
		sar    %eax
		ret    



_025958_func:
		cwtl   
		sar    %eax
		add    $0x000008,%eax
		ret    

	_025960_jump:
		mov    %edx,%eax
		ret    

	_025964_jump:
		xor    %eax,%eax
		ret    



_025968_func:
		mov    $0x000010,%eax
		ret    

_025970_switch:
		.long   _025b8b_case
		.long   _025b8b_case
		.long   _025a1c_case
		.long   _025a49_case
		.long   _025a76_case
		.long   _025aa7_case
		.long   _025add_case
		.long   _025b13_case
		.long   _025b8b_case
		.long   _025b55_case
		.long   _025b8b_case
		.long   _025b8b_case
		.long   _025b44_case
		.long   _025b8b_case
		.long   _025b55_case
		.long   _025b55_case
		.long   _025b8b_case
		.long   _025b8b_case
		.long   _025a1c_case
		.long   _025a49_case
		.long   _025a76_case
		.long   _025aa7_case
		.long   _025add_case
		.long   _025b13_case
		.long   _025b8b_case
		.long   _025b8b_case
		.long   _025b8b_case
		.long   _025b8b_case
		.long   _025b8b_case
		.long   _025b8b_case
		.long   _025b55_case




_0259ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_025924_func,%esi
		mov    $_025930_jump,%edi
		mov    $_025934_func,%ecx
		xor    %al,%al
		mov    $_025958_func,%ebx

	_025a08_jump:
		cmp    $0x00001e,%al
		ja     _025b8b_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_025970_switch(,%edx,4)

	_025a1c_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,_0c2558_data(,%edx,4)
		mov    %esi,_0c2658_data(,%edx,4)
		mov    %esi,_0c2758_data(,%edx,4)
		mov    %esi,_0c2458_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025a08_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025a49_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edi,_0c2558_data(,%edx,4)
		mov    %edi,_0c2658_data(,%edx,4)
		mov    %edi,_0c2758_data(,%edx,4)
		mov    %edi,_0c2458_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025a08_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025a76_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ecx,_0c2558_data(,%edx,4)
		mov    %ecx,_0c2658_data(,%edx,4)
		mov    %ecx,_0c2758_data(,%edx,4)
		mov    %ecx,_0c2458_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025a08_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025aa7_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_025944_func,%ebp
		mov    %ebp,_0c2558_data(,%edx,4)
		mov    %ebp,_0c2658_data(,%edx,4)
		mov    %ebp,_0c2758_data(,%edx,4)
		mov    %ebp,_0c2458_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025a08_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025add_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_025954_func,%ebp
		mov    %ebp,_0c2558_data(,%edx,4)
		mov    %ebp,_0c2658_data(,%edx,4)
		mov    %ebp,_0c2758_data(,%edx,4)
		mov    %ebp,_0c2458_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025a08_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025b13_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebx,_0c2558_data(,%edx,4)
		mov    %ebx,_0c2658_data(,%edx,4)
		mov    %ebx,_0c2758_data(,%edx,4)
		mov    %ebx,_0c2458_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025a08_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025b44_case:
		xor    %edx,%edx
		mov    %al,%dl
		movl   $_025960_jump,_0c2558_data(,%edx,4)
		jmp    _025b9a_jump

	_025b55_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_025964_jump,%ebp
		mov    %ebp,_0c2558_data(,%edx,4)
		mov    %ebp,_0c2658_data(,%edx,4)
		mov    %ebp,_0c2758_data(,%edx,4)
		mov    %ebp,_0c2458_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025a08_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025b8b_case:
		xor    %edx,%edx
		mov    %al,%dl
		movl   $_025920_func,_0c2558_data(,%edx,4)

	_025b9a_jump:
		movl   $_025968_func,_0c2658_data(,%edx,4)
		movl   $_025960_jump,_0c2758_data(,%edx,4)
		movl   $_025964_jump,_0c2458_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025a08_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025bd0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000044,%esp
		mov    %eax,%ecx
		mov    _0de150_data,%eax
		mov    %eax,0x000010(%esp)
		call   _010010_func
		mov    0x000010(%esp),%eax
		movw   $0x000000,0x000006(%eax)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _025c02_jump
		mov    %ebx,%eax

	_025c02_jump:
		mov    0x000010(%esp),%ebx
		mov    %ax,0x000008(%ebx)
		test   %dx,%dx
		jl     _025c1f_jump
		mov    $0x000001,%eax
		movswl %dx,%ebx
		cmp    %ebx,%eax
		jge    _025c1d_jump
		mov    %ebx,%eax

	_025c1d_jump:
		jmp    _025c31_jump

	_025c1f_jump:
		movswl %dx,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _025c2f_jump
		mov    %ebx,%eax

	_025c2f_jump:
		neg    %eax

	_025c31_jump:
		mov    0x000010(%esp),%edx
		mov    %ax,0x00000a(%edx)
		xor    %eax,%eax
		mov    $0x000046,%ebx
		mov    %cx,%ax
		cmp    %ebx,%eax
		jle    _025c49_jump
		mov    %ebx,%eax

	_025c49_jump:
		mov    %eax,%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jge    _025c56_jump
		mov    %ebx,%eax

	_025c56_jump:
		mov    %al,0x00000c(%edx)
		xor    %eax,%eax
		mov    0x000001(%edx),%al
		call   _07f56f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54524550,%eax
		mov    $0x400921fb,%edx
		call   _0800d8_func
		mov    %edx,0x000014(%esp)
		mov    0x000010(%esp),%edx
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%edx),%al
		call   _07f56f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54524550,%eax
		mov    $0x401921fb,%edx
		call   _0800d8_func
		mov    $0xbff921fb,%ebx
		mov    %eax,0x000020(%esp)
		mov    0x000010(%esp),%eax
		mov    %edx,0x000008(%esp)
		mov    $0x54524550,%edx
		mov    0x000020(%eax),%eax
		mov    %ebx,0x00001c(%esp)
		mov    %eax,0x000018(%esp)
		xor    %ah,%ah
		mov    %edx,0x000004(%esp)
		mov    %ah,0x000034(%esp)

	_025cc8_jump:
		mov    0x000010(%esp),%edx
		xor    %eax,%eax
		mov    0x00000c(%edx),%al
		call   _07f56f_func
		mov    %eax,%edi
		mov    %edx,%esi
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		call   _08006a_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07f75f_func
		mov    %eax,0x000024(%esp)
		mov    %edx,0x00002c(%esp)
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		call   _080091_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07f75f_func
		mov    %eax,0x000028(%esp)
		mov    %edx,0x000030(%esp)
		xor    %edi,%edi
		xor    %bh,%bh
		xor    %esi,%esi
		mov    %bh,0x000040(%esp)

	_025d28_jump:
		mov    0x000028(%esp),%eax
		mov    0x000030(%esp),%edx
		call   _0802de_func
		mov    %eax,0x00000c(%esp)
		mov    %edx,%ebp
		mov    %edi,%eax
		mov    %esi,%edx
		call   _08006a_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00000c(%esp),%eax
		mov    %ebp,%edx
		call   _07f75f_func
		call   _07fdac_func
		mov    0x000018(%esp),%edx
		mov    %ax,(%edx)
		mov    0x000024(%esp),%eax
		mov    0x00002c(%esp),%edx
		call   _07fdac_func
		mov    0x000018(%esp),%edx
		mov    %ax,0x000002(%edx)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _080091_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00000c(%esp),%eax
		mov    %ebp,%edx
		call   _07f75f_func
		call   _07fdac_func
		mov    0x000018(%esp),%edx
		mov    0x000020(%esp),%ebx
		lea    0x00000a(%edx),%ecx
		mov    %ax,0x000004(%edx)
		mov    %ecx,0x000018(%esp)
		mov    %edi,%eax
		mov    %esi,%edx
		mov    0x000008(%esp),%ecx
		call   _07f5a8_func
		mov    %eax,%edi
		mov    0x000040(%esp),%al
		mov    %edx,%esi
		inc    %al
		mov    0x000010(%esp),%edx
		mov    %al,0x000040(%esp)
		cmp    (%edx),%al
		jbe    _025d28_jump
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    (%esp),%ebx
		mov    0x000014(%esp),%ecx
		call   _07f5a8_func
		mov    %edx,0x00001c(%esp)
		mov    0x000034(%esp),%dl
		inc    %dl
		mov    %eax,0x000004(%esp)
		mov    %dl,0x000034(%esp)
		mov    %dl,%al
		mov    0x000010(%esp),%edx
		cmp    0x000001(%edx),%al
		jbe    _025cc8_jump
		mov    0x000010(%esp),%eax
		mov    0x000010(%esp),%ebx
		xor    %ecx,%ecx
		mov    0x000002(%eax),%dx
		mov    0x000024(%ebx),%ebx
		test   %dx,%dx
		jbe    _025e60_jump

	_025e16_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%esi
		mov    %cx,%dx
		movzbl (%esi),%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ecx,%edx
		add    %eax,%edx
		mov    %edx,%eax
		mov    %dx,(%ebx)
		inc    %edx
		mov    0x000010(%esp),%esi
		mov    %dx,0x000002(%ebx)
		xor    %dh,%dh
		mov    (%esi),%dl
		add    %eax,%edx
		add    $0x000002,%edx
		mov    %dx,0x000004(%ebx)
		xor    %dh,%dh
		mov    (%esi),%dl
		add    %edx,%eax
		inc    %eax
		mov    %ax,0x000006(%ebx)
		inc    %ecx
		mov    0x000002(%esi),%si
		add    $0x000034,%ebx
		cmp    %si,%cx
		jb     _025e16_jump

	_025e60_jump:
		mov    0x000010(%esp),%eax
		mov    _0de152_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    (%eax),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0de154_data,%edx
		mov    %al,0x00003c(%esp)
		xor    %ebx,%ebx
		mov    0x000010(%esp),%eax
		sar    $0x000010,%edx
		mov    0x000001(%eax),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %cl,%cl
		mov    0x000010(%esp),%edx
		mov    %al,%bh
		mov    0x000010(%esp),%eax
		mov    %cl,0x000038(%esp)
		mov    0x000001(%edx),%ch
		mov    0x000024(%eax),%eax
		test   %ch,%ch
		jbe    _025f5f_jump

	_025eb3_jump:
		mov    0x000010(%esp),%edx
		mov    (%edx),%cl
		xor    %bl,%bl
		test   %cl,%cl
		jbe    _025f48_jump

	_025ec3_jump:
		xor    %dh,%dh
		xor    %ch,%ch
		mov    0x00003c(%esp),%dl
		mov    %bl,%cl
		imul   %ecx,%edx
		movzbw 0x000038(%esp),%si
		mov    %bh,%cl
		imul   %esi,%ecx
		cmpw   $0x000100,_0de154_data
		jg     _025eef_jump
		mov    0x000010(%esp),%esi
		mov    0x000018(%esi),%esi
		jmp    _025f0c_jump

	_025eef_jump:
		cmp    $0x0000a0,%dx
		jae    _025eff_jump
		mov    0x000010(%esp),%esi
		mov    0x000018(%esi),%esi
		jmp    _025f0c_jump

	_025eff_jump:
		mov    0x000010(%esp),%esi
		mov    0x00001c(%esi),%esi
		sub    $0x0000a0,%edx

	_025f0c_jump:
		mov    %esi,0x000008(%eax)
		mov    %dl,0x00002e(%eax)
		mov    %dl,0x00002c(%eax)
		mov    %cl,%dh
		mov    %cl,0x000033(%eax)
		add    %bh,%dh
		mov    %cl,0x00002d(%eax)
		dec    %dh
		mov    %dh,0x000031(%eax)
		mov    0x00003c(%esp),%ch
		mov    %dh,0x00002f(%eax)
		add    %ch,%dl
		dec    %dl
		mov    %dl,0x000032(%eax)
		mov    %dl,0x000030(%eax)
		mov    0x000010(%esp),%edx
		inc    %bl
		mov    (%edx),%cl
		add    $0x000034,%eax
		cmp    %cl,%bl
		jb     _025ec3_jump

	_025f48_jump:
		mov    0x000038(%esp),%dl
		inc    %dl
		mov    0x000010(%esp),%ecx
		mov    %dl,0x000038(%esp)
		cmp    0x000001(%ecx),%dl
		jb     _025eb3_jump

	_025f5f_jump:
		mov    0x000010(%esp),%eax
		movb   $0x000001,0x00000d(%eax)
		add    $0x000044,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_025f70_case:
		push   %edx
		mov    _0de150_data,%edx
		test   %edx,%edx
		je     _025faa_jump
		cmpl   $0x000000,0x000020(%edx)
		je     _025f89_jump
		lea    0x000020(%edx),%eax
		call   _07f44c_func

	_025f89_jump:
		cmpl   $0x000000,0x000024(%edx)
		je     _025f97_jump
		lea    0x000024(%edx),%eax
		call   _07f44c_func

	_025f97_jump:
		cmpl   $0x000000,_0de150_data
		je     _025faa_jump
		mov    $_0de150_data,%eax
		call   _07f44c_func

	_025faa_jump:
		pop    %edx
		ret    



_025fac_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,(%esp)
		mov    %edx,%edi
		mov    %ebx,0x000008(%esp)
		mov    %cx,0x000004(%esp)
		mov    $0x000100,%edx
		mov    $0x0000c8,%ebx
		mov    $0x000020,%eax
		xor    %cl,%cl
		mov    %dx,_0de154_data
		xor    %edx,%edx
		mov    %bx,_0de156_data
		mov    %dx,_0de15a_data
		mov    0x00001c(%esp),%edx
		mov    %ax,_0de158_data
		test   %edx,%edx
		je     _0260d2_jump
		cmpl   $0x000000,0x000020(%esp)
		je     _0260d2_jump
		mov    $0x00003c,%eax
		call   _07f434_func
		mov    %eax,%edx
		mov    %eax,_0de150_data
		test   %eax,%eax
		je     _0260d2_jump
		xor    %ebx,%ebx
		mov    %eax,%esi
		mov    (%esp),%bx
		mov    $0x000002,%eax
		cmp    %ebx,%eax
		jge    _026030_jump
		mov    %ebx,%eax

	_026030_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    $0x000001,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _026042_jump
		mov    %ebx,%eax

	_026042_jump:
		mov    %al,0x000001(%edx)
		mov    (%esp),%eax
		imul   %edi,%eax
		mov    %ax,0x000002(%edx)
		mov    (%esp),%eax
		inc    %edi
		inc    %eax
		imul   %edi,%eax
		mov    %ax,0x000004(%edx)
		mov    0x00001c(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x000010(%edx)
		mov    0x000020(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000014(%edx)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		call   _07f434_func
		mov    %eax,0x000024(%edx)
		test   %eax,%eax
		je     _0260d2_jump
		xor    %ebx,%ebx
		mov    0x000004(%edx),%bx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		call   _07f434_func
		mov    %eax,0x000020(%edx)
		test   %eax,%eax
		je     _0260d2_jump
		mov    _0ccad8_data,%eax
		mov    _0de154_data,%bx
		mov    %eax,0x000018(%edx)
		cmp    $0x000100,%bx
		jg     _0260c8_jump
		movl   $0x000000,0x00001c(%edx)
		jmp    _0260d0_jump

	_0260c8_jump:
		add    $0x00c800,%eax
		mov    %eax,0x00001c(%edx)

	_0260d0_jump:
		mov    $0x000001,%cl

	_0260d2_jump:
		test   %cl,%cl
		je     _026163_jump
		cmpw   $0x000100,_0de154_data
		jg     _02611a_jump
		mov    _0de158_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		shl    $0x000006,%eax
		mov    0x000010(%esi),%ebx
		mov    _0de152_data,%edi
		add    %ebx,%eax
		mov    _0de156_data,%ebx
		mov    0x000018(%esi),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edi
		add    %ebx,%eax
		mov    %edi,%ebx
		jmp    _02613a_jump

	_02611a_jump:
		mov    $0x0000a0,%ebx
		mov    0x000018(%esi),%edx
		mov    0x000010(%esi),%eax
		call   _07dc80_func
		mov    $0x0000a0,%ebx
		mov    0x000010(%esi),%eax
		mov    0x00001c(%esi),%edx
		add    $0x0000a0,%eax

	_02613a_jump:
		call   _07dc80_func
		mov    0x000002(%esp),%edx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000018(%esp),%bx
		mov    0x000008(%esp),%ax
		sar    $0x000010,%edx
		call   _025bd0_func
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c

	_026163_jump:
		call   _025f70_case
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_026174_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    _0de150_data,%esi
		mov    0x00000d(%esi),%ah
		mov    0x000020(%esi),%ecx
		cmp    $0x000001,%ah
		jne    _026316_jump
		cmpw   $0x000000,0x00000a(%esi)
		jl     _0261a5_jump
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		mov    %eax,0x00000c(%esp)
		jmp    _0261b7_jump

	_0261a5_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000008(%esi),%dx
		mov    0x000006(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x00000c(%esp)

	_0261b7_jump:
		mov    _0de152_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    (%esi),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0de154_data,%edx
		mov    %al,0x000038(%esp)
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000001(%esi),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %al,0x000024(%esp)
		mov    _0de158_data,%eax
		sar    $0x000010,%eax
		xor    %bl,%bl
		sub    $0x000064,%eax
		mov    %bl,0x000034(%esp)
		mov    %eax,0x000010(%esp)

	_0261fd_jump:
		mov    _0de156_data,%ebp
		xor    %dl,%dl
		sar    $0x000010,%ebp
		mov    %dl,0x000030(%esp)
		sub    $0x0000a0,%ebp

	_026212_jump:
		mov    0x000002(%ecx),%edi
		movswl (%ecx),%edx
		sar    $0x000010,%edi
		shl    $0x000009,%edx
		add    $0x000200,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    (%ecx),%edx
		sar    $0x000010,%edx
		shl    $0x000009,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%edi
		mov    %ebp,%edx
		mov    0x00000c(%esp),%eax
		sub    %ebx,%edx
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000008(%esi),%ax
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		add    $0x0000a0,%ebx
		mov    0x000010(%esp),%edx
		add    %ebx,%eax
		mov    0x00000c(%esp),%ebx
		sub    %edi,%edx
		imul   %ebx,%edx
		mov    %ax,0x000006(%ecx)
		mov    %edx,%eax
		xor    %ebx,%ebx
		sar    $0x00001f,%edx
		mov    0x000008(%esi),%bx
		idiv   %ebx
		add    $0x00000a,%ecx
		add    $0x000064,%edi
		mov    0x000030(%esp),%dh
		add    %edi,%eax
		inc    %dh
		mov    %ax,-0x000002(%ecx)
		xor    %eax,%eax
		mov    %dh,0x000030(%esp)
		mov    0x000038(%esp),%al
		mov    (%esi),%bl
		add    %eax,%ebp
		cmp    %bl,%dh
		jbe    _026212_jump
		mov    0x000010(%esp),%edx
		mov    0x000034(%esp),%bh
		xor    %eax,%eax
		inc    %bh
		mov    0x000024(%esp),%al
		mov    %bh,0x000034(%esp)
		add    %eax,%edx
		mov    0x000001(%esi),%ah
		mov    %edx,0x000010(%esp)
		cmp    %ah,%bh
		jbe    _0261fd_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0262d9_jump
		neg    %eax

	_0262d9_jump:
		mov    0x000006(%esi),%di
		add    %eax,%edi
		mov    0x000008(%esi),%dx
		mov    %di,0x000006(%esi)
		cmp    %dx,%di
		jbe    _026626_jump
		cmpw   $0x000000,0x00000a(%esi)
		jge    _026300_jump
		movb   $0x000002,0x00000d(%esi)
		jmp    _026626_jump

	_026300_jump:
		movw   $0x000000,0x000006(%esi)
		mov    0x000006(%esi),%bx
		mov    %ebx,%eax
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026316_jump:
		cmp    $0x000002,%ah
		jne    _026363_jump
		movw   $0x0000a0,0x000028(%esi)
		movw   $0x000064,0x00002a(%esi)
		movw   $0x000008,0x00002c(%esi)
		movw   $0x00000a,0x00002e(%esi)
		movb   $0x000000,0x000034(%esi)
		movb   $0x000000,0x000035(%esi)
		movb   $0x000000,0x000036(%esi)
		movw   $0x000000,0x000030(%esi)
		movw   $0x000000,0x000032(%esi)
		movb   $0x000000,0x00000d(%esi)
		movw   $0x000000,0x000006(%esi)
		movw   $0x0003e8,0x000008(%esi)
		movb   $0x000000,0x000037(%esi)
		movb   $0x000000,0x000038(%esi)

	_026363_jump:
		cmpb   $0x000000,0x000036(%esi)
		je     _02637c_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _026375_jump
		neg    %eax

	_026375_jump:
		shl    $0x000002,%eax
		add    %ax,0x000032(%esi)

	_02637c_jump:
		xor    %eax,%eax
		mov    0x00000c(%esi),%al
		mov    $0x000140,%edx
		add    $0x000004,%eax
		sub    %eax,%edx
		mov    0x00002e(%esi),%bx
		mov    %edx,%eax
		xor    %edx,%edx
		inc    %ebx
		mov    0x000028(%esi),%dx
		mov    %bx,0x00002e(%esi)
		cmp    %eax,%edx
		jle    _0263c6_jump
		cmpb   $0x000000,0x000035(%esi)
		jne    _0263c6_jump
		mov    0x00002c(%esi),%ax
		neg    %eax
		inc    %eax
		mov    %ax,0x00002c(%esi)
		mov    0x000038(%esi),%al
		movb   $0x000001,0x000035(%esi)
		test   %al,%al
		je     _0263c0_jump
		movb   $0x000001,0x000037(%esi)

	_0263c0_jump:
		movb   $0x000001,0x000038(%esi)
		jmp    _026410_jump

	_0263c6_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x00000c(%esi),%al
		mov    0x000028(%esi),%dx
		add    $0x000004,%eax
		cmp    %eax,%edx
		jge    _0263ef_jump
		cmpb   $0x000000,0x000035(%esi)
		jne    _0263ef_jump
		mov    0x00002c(%esi),%ax
		neg    %eax
		movb   $0x000001,0x000035(%esi)
		dec    %eax
		mov    %ax,0x00002c(%esi)
		jmp    _026410_jump

	_0263ef_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00000c(%esi),%dl
		mov    0x000028(%esi),%ax
		add    $0x000004,%edx
		cmp    %edx,%eax
		jg     _02640c_jump
		mov    $0x000140,%ebx
		sub    %edx,%ebx
		cmp    %ebx,%eax
		jge    _026410_jump

	_02640c_jump:
		movb   $0x000000,0x000035(%esi)

	_026410_jump:
		xor    %eax,%eax
		mov    0x00000c(%esi),%al
		mov    $0x0000c8,%edx
		add    $0x000003,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		xor    %edx,%edx
		mov    0x00002a(%esi),%dx
		cmp    %eax,%edx
		jle    _026450_jump
		cmpb   $0x000000,0x000034(%esi)
		jne    _026450_jump
		cmpb   $0x000000,0x000037(%esi)
		jne    _026450_jump
		mov    0x00002e(%esi),%ax
		movb   $0x000001,0x000034(%esi)
		neg    %eax
		movb   $0x000001,0x000036(%esi)
		add    $0x000002,%eax
		mov    %ax,0x00002e(%esi)
		jmp    _026483_jump

	_026450_jump:
		xor    %edx,%edx
		mov    0x00000c(%esi),%dl
		mov    $0x0000c8,%eax
		lea    0x000003(%edx),%ebx
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002a(%esi),%ax
		cmp    %ebx,%eax
		jg     _026471_jump
		movb   $0x000000,0x000034(%esi)
		jmp    _026483_jump

	_026471_jump:
		add    $0x0000cb,%edx
		cmp    %edx,%eax
		jl     _026483_jump
		mov    0x000008(%esi),%ax
		mov    %ax,0x000006(%esi)

	_026483_jump:
		mov    0x00002a(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0264a4_jump
		neg    %eax

	_0264a4_jump:
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ax
		add    %edx,%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%edx
		mov    %ax,0x000028(%esi)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0264d4_jump
		neg    %eax

	_0264d4_jump:
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x00002a(%esi),%ax
		add    %edx,%eax
		mov    %ax,0x00002a(%esi)
		lea    0x000020(%esp),%ebx
		mov    0x00002e(%esi),%eax
		lea    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		call   _05d2ac_func
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000008(%esp)
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000020(%esp),%ebx
		mov    %eax,0x000018(%esp)
		mov    0x000030(%esi),%eax
		lea    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		call   _05d2ac_func
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000014(%esp)
		mov    0x00001e(%esp),%eax
		xor    %dh,%dh
		sar    $0x000010,%eax
		mov    %dh,0x00002c(%esp)
		mov    %eax,0x000004(%esp)

	_02653b_jump:
		xor    %dl,%dl
		mov    %dl,0x000028(%esp)

	_026541_jump:
		mov    0x000014(%esp),%ebx
		movswl (%ecx),%eax
		imul   %eax,%ebx
		mov    (%ecx),%edx
		mov    0x000004(%esp),%ebp
		sar    $0x000010,%edx
		imul   %edx,%ebp
		add    %ebp,%ebx
		imul   0x000004(%esp),%eax
		imul   0x000014(%esp),%edx
		mov    0x000002(%ecx),%edi
		sar    $0x000010,%edi
		neg    %edi
		sub    %edx,%eax
		mov    0x000008(%esp),%edx
		imul   %edi,%edx
		sar    $0x000009,%eax
		mov    %edx,(%esp)
		mov    0x000018(%esp),%edx
		imul   %eax,%edx
		add    (%esp),%edx
		imul   0x000018(%esp),%edi
		imul   0x000008(%esp),%eax
		sub    %eax,%edi
		sar    $0x000009,%edi
		mov    %edx,%eax
		add    $0x000200,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		movzwl 0x000028(%esi),%ebp
		mov    %ebx,%edx
		add    %ebp,%eax
		sar    $0x00001f,%edx
		mov    %ax,0x000006(%ecx)
		mov    %ebx,%eax
		idiv   %edi
		movzwl 0x00002a(%esi),%ebp
		add    $0x00000a,%ecx
		add    %ebp,%eax
		mov    0x000028(%esp),%dh
		mov    %ax,-0x000002(%ecx)
		inc    %dh
		mov    (%esi),%bl
		mov    %dh,0x000028(%esp)
		cmp    %bl,%dh
		jbe    _026541_jump
		mov    0x00002c(%esp),%bh
		inc    %bh
		mov    0x000001(%esi),%ah
		mov    %bh,0x00002c(%esp)
		cmp    %ah,%bh
		jbe    _02653b_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0265f5_jump
		neg    %eax

	_0265f5_jump:
		mov    0x000030(%esi),%dx
		add    %eax,%eax
		add    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		mov    %dx,0x000030(%esi)
		test   %eax,%eax
		jge    _02660d_jump
		neg    %eax

	_02660d_jump:
		mov    0x000006(%esi),%bx
		add    %eax,%ebx
		mov    0x000008(%esi),%cx
		mov    %bx,0x000006(%esi)
		cmp    %cx,%bx
		jbe    _026626_jump
		movw   $0x000000,0x000006(%esi)

	_026626_jump:
		mov    0x000006(%esi),%bx
		mov    %ebx,%eax
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026638_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    _0de150_data,%eax
		xor    %edi,%edi
		mov    %eax,0x00000c(%esp)
		mov    0x000020(%eax),%ecx
		mov    0x000002(%eax),%bx
		mov    0x000024(%eax),%edx
		test   %bx,%bx
		jbe    _02677a_jump
		lea    0x000008(%edx),%ebx

	_026662_jump:
		xor    %eax,%eax
		mov    (%edx),%ax
		imul   $0x00000a,%eax,%eax
		mov    0x000004(%ecx,%eax,1),%esi
		mov    0x000006(%ecx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000020(%esp)
		xor    %eax,%eax
		mov    0x000006(%edx),%ax
		imul   $0x00000a,%eax,%eax
		sar    $0x000010,%esi
		mov    %esi,0x000014(%esp)
		lea    (%ecx,%eax,1),%esi
		mov    0x000004(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000004(%edx),%ax
		imul   $0x00000a,%eax,%eax
		mov    0x000004(%ecx,%eax,1),%ebp
		mov    0x000006(%ecx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00001c(%esp)
		xor    %eax,%eax
		mov    0x000002(%edx),%ax
		imul   $0x00000a,%eax,%eax
		sar    $0x000010,%ebp
		dec    %ebp
		mov    %ebp,0x000018(%esp)
		mov    0x000004(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		mov    0x000006(%esi),%esi
		dec    %ebp
		sar    $0x000010,%esi
		mov    %ebp,0x000010(%esp)
		mov    0x000014(%esp),%ebp
		mov    0x000006(%ecx,%eax,1),%eax
		sub    0x000018(%esp),%ebp
		sar    $0x000010,%eax
		mov    %ebp,0x000004(%esp)
		mov    %esi,%ebp
		sub    %eax,%ebp
		mov    %ebp,(%esp)
		mov    0x000004(%esp),%ebp
		imul   (%esp),%ebp
		mov    %ebp,0x000004(%esp)
		mov    0x000020(%esp),%ebp
		sub    0x00001c(%esp),%ebp
		mov    %ebp,(%esp)
		mov    0x000024(%esp),%ebp
		sub    0x000010(%esp),%ebp
		mov    %ebp,0x000008(%esp)
		mov    (%esp),%ebp
		imul   0x000008(%esp),%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x000004(%esp),%ebp
		cmp    0x000008(%esp),%ebp
		jge    _026762_jump
		mov    %esi,0x000018(%edx)
		mov    0x000014(%esp),%ebp
		mov    %eax,0x000028(%edx)
		mov    0x000018(%esp),%esi
		mov    %ebp,0x00000c(%edx)
		mov    0x000020(%esp),%ebp
		mov    %esi,0x00001c(%edx)
		mov    0x00001c(%esp),%esi
		mov    %ebp,0x000010(%edx)
		mov    0x000024(%esp),%ebp
		mov    %esi,0x000020(%edx)
		mov    0x000010(%esp),%esi
		mov    %ebp,0x000014(%edx)
		mov    0x00000c(%esp),%eax
		mov    %esi,0x000024(%edx)
		mov    %ebx,%esi
		mov    0x000014(%eax),%eax
		call   _010045_func

	_026762_jump:
		mov    0x00000c(%esp),%eax
		add    $0x000034,%ebx
		inc    %edi
		mov    0x000002(%eax),%si
		add    $0x000034,%edx
		cmp    %si,%di
		jb     _026662_jump

	_02677a_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026790_func:
		mov    _096271_data,%al
		ret    



_026798_func:
		movb   $0x000001,_096271_data
		ret    



_0267a0_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_096271_data
		je     _0267e2_jump
		mov    $0x000016,%edx
		mov    _0cf224_data,%ax
		mov    $0x000001,%ebx
		mov    %ax,_0de210_data
		mov    %dx,_0cf224_data
		mov    _0cf232_data,%ax
		mov    %bx,_0cf282_data
		mov    %ax,_0de204_data
		mov    %bx,_0cf232_data

	_0267e2_jump:
		pop    %edx
		pop    %ebx
		ret    



_0267e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_095de5_data
		jne    _026850_jump
		mov    _0cca4c_data,%ax
		mov    %ax,_0de20c_data
		mov    _0cca48_data,%ax
		mov    $0x0000c8,%ecx
		mov    %ax,_0de20a_data
		mov    _0cca54_data,%ax
		mov    $0x000140,%edx
		mov    %ax,_0de208_data
		mov    _0cca50_data,%ax
		xor    %ebx,%ebx
		mov    %ax,_0de206_data
		mov    $0x000004,%eax
		call   _05c124_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		mov    $0x000004,%eax
		xor    %ecx,%ecx
		call   _01614e_func

	_026850_jump:
		xor    %dl,%dl
		mov    %dl,_09626e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02685c_func:
		mov    _0de210_data,%ax
		mov    %ax,_0cf224_data
		mov    _0de204_data,%ax
		mov    %ax,_0cf232_data
		xor    %ah,%ah
		mov    %ah,_096271_data
		ret    



_026880_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_095de5_data
		jne    _0268d0_jump
		mov    _0de204_data,%ecx
		mov    _0de206_data,%ebx
		mov    _0de208_data,%edx
		mov    _0de20a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05c124_func
		mov    _0cca50_data,%edx
		mov    _0cca54_data,%ecx
		mov    _0cca48_data,%ebx
		mov    _0cca4c_data,%eax
		call   _01614e_func

	_0268d0_jump:
		movw   $0x000007,_0cf282_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0268e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _096256_data,%dx
		mov    _096258_data,%cl
		mov    _09625a_data,%si
		mov    _09625c_data,%di
		test   %dx,%dx
		jge    _02690a_jump
		add    $0x000048,%edx
		jmp    _026913_jump

	_02690a_jump:
		cmp    $0x000048,%dx
		jle    _026913_jump
		sub    $0x000048,%edx

	_026913_jump:
		mov    $0x000012,%ebx
		movswl %dx,%eax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jl     _02694b_jump
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095fd2_data(%eax),%si
		mov    _095fd4_data(%eax),%ax
		mov    %eax,%edi
		jmp    _0269ec_jump

	_02694b_jump:
		mov    $0x000024,%ebx
		sub    %edx,%ebx
		test   %bx,%bx
		jl     _026980_jump
		movswl %bx,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095fd2_data(%eax),%si
		mov    _095fd4_data(%eax),%ax
		neg    %esi
		mov    %eax,%edi
		jmp    _0269ec_jump

	_026980_jump:
		mov    $0x000036,%ebx
		sub    %eax,%ebx
		test   %ebx,%ebx
		jl     _0269b9_jump
		mov    %edx,%eax
		sub    $0x000024,%eax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    %cl,%bl
		add    %eax,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    _095fd2_data(%eax),%si
		mov    _095fd4_data(%eax),%ax
		mov    %eax,%edi
		neg    %esi
		jmp    _0269ea_jump

	_0269b9_jump:
		mov    $0x000048,%eax
		sub    %edx,%eax
		test   %ax,%ax
		jl     _0269ec_jump
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095fd2_data(%eax),%si
		mov    _095fd4_data(%eax),%ax
		mov    %eax,%edi

	_0269ea_jump:
		neg    %edi

	_0269ec_jump:
		mov    %di,_09625c_data
		mov    %si,_09625a_data
		mov    %cl,_096258_data
		mov    %dx,_096256_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026a10_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_096256_data
		mov    %ah,_096258_data
		mov    %dx,_09625c_data
		mov    %dx,_09625a_data
		pop    %edx
		ret    



_026a40_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000012,%edx
		xor    %ah,%ah
		mov    %dx,_096256_data
		mov    %ah,_096258_data
		call   _0268e0_func
		pop    %edx
		ret    



_026a6c_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    _096258_data,%ah
		inc    %ah
		mov    %ah,_096258_data
		cmp    $0x000007,%ah
		jbe    _026a95_jump
		movb   $0x000007,_096258_data

	_026a95_jump:
		call   _0268e0_func
		pop    %edx
		ret    



_026a9c_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000024,%eax
		mov    _096256_data,%dx
		sub    %edx,%eax
		mov    %ax,_096256_data
		call   _0268e0_func
		pop    %edx
		ret    



_026ac8_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000048,%eax
		mov    _096256_data,%dx
		sub    %edx,%eax
		mov    %ax,_096256_data
		call   _0268e0_func
		pop    %edx
		ret    



_026af4_func:
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%eax
		movswl %bx,%edx
		mov    %eax,0x000028(%ecx)
		mov    %edx,0x00002c(%ecx)
		mov    $0x000008,%cl
		shl    %cl,%eax
		mov    $0x000008,%cl
		mov    %eax,_096260_data
		mov    %edx,%eax
		shl    %cl,%eax
		mov    %eax,_096264_data
		pop    %ecx
		ret    



_026b94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _09626f_data,%cl
		xor    %ebx,%ebx
		xor    %eax,%eax
		cmp    $0x000005,%cl
		ja     _026bb2_jump
		cmpb   $0x000000,_096270_data
		je     _026bed_jump

	_026bb2_jump:
		cmpb   $0x000005,_09626f_data
		jbe    _026bc3_jump
		xor    %ah,%ah
		mov    %ah,_09626f_data

	_026bc3_jump:
		mov    $0x000101,%eax
		call   _06b8d0_func
		xor    %cl,%cl
		mov    %eax,%ebx
		mov    $0x000101,%eax
		sub    $0x000080,%ebx
		call   _06b8d0_func
		sub    $0x000080,%eax
		mov    %cl,_096270_data

	_026bed_jump:
		mov    _096258_data,%ecx
		movswl %bx,%ebx
		sar    $0x000010,%ecx
		add    %ecx,%ebx
		mov    _096260_data,%ecx
		add    %ebx,%ecx
		mov    _09625a_data,%ebx
		cwtl   
		sar    $0x000010,%ebx
		mov    _096264_data,%esi
		add    %ebx,%eax
		mov    %ecx,_096260_data
		add    %eax,%esi
		mov    %ecx,%eax
		mov    $0x000008,%cl
		mov    %esi,_096264_data
		test   %eax,%eax
		je     _026c2f_jump
		sar    %cl,%eax
		jmp    _026c35_jump

	_026c2f_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_026c35_jump:
		cwtl   
		mov    $0x000008,%cl
		mov    %eax,0x000028(%edx)
		mov    _096264_data,%eax
		test   %eax,%eax
		je     _026c48_jump
		sar    %cl,%eax
		jmp    _026c4e_jump

	_026c48_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_026c4e_jump:
		cwtl   
		mov    %eax,0x00002c(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026c58_func:
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		movswl %dx,%edx
		cwtl   
		xor    %ch,%ch
		lea    0x000000(,%edx,4),%esi
		sar    $0x000002,%eax
		add    %edx,%esi
		and    $0x000003,%cl
		shl    $0x000004,%esi
		movswl %cx,%ecx
		add    %eax,%esi
		mov    $0x000001,%eax
		shl    %cl,%eax
		mov    $0x0003c4,%edx
		mov    %eax,%ecx
		mov    $0x000002,%al
		out    %al,(%dx)
		mov    $0x0003c5,%edx
		mov    %cl,%al
		out    %al,(%dx)
		add    _0cd158_data,%esi
		mov    %bl,(%esi)
		pop    %esi
		pop    %ecx
		ret    



_026ca0_func:
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		shl    $0x000006,%edx
		movswl %cx,%eax
		add    %edx,%eax
		add    _0cd158_data,%eax
		mov    %bl,(%eax)
		pop    %ecx
		ret    



_026cc4_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bx,(%esp)
		mov    %cl,0x000004(%esp)
		test   %dx,%dx
		jle    _026d2c_jump
		cmp    $0x0000c8,%dx
		jge    _026d2c_jump
		mov    %eax,%ecx
		jmp    _026d19_jump

	_026ce5_jump:
		test   %cx,%cx
		jle    _026d18_jump
		cmp    $0x000140,%cx
		jge    _026d18_jump
		cmpb   $0x000000,_095de5_data
		je     _026d0a_jump
		xor    %ebx,%ebx
		movswl %si,%edx
		mov    0x000004(%esp),%bl
		call   _026c58_func
		jmp    _026d18_jump

	_026d0a_jump:
		xor    %ebx,%ebx
		movswl %si,%edx
		mov    0x000004(%esp),%bl
		call   _026ca0_func

	_026d18_jump:
		inc    %ecx

	_026d19_jump:
		mov    -0x000002(%esp),%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		movswl %cx,%eax
		cmp    %edx,%eax
		jl     _026ce5_jump

	_026d2c_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_026d34_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %bx,(%esp)
		mov    %cl,0x000004(%esp)
		test   %ax,%ax
		jle    _026d9b_jump
		cmp    $0x000140,%ax
		jge    _026d9b_jump
		mov    %edx,%ecx
		jmp    _026d88_jump

	_026d54_jump:
		test   %cx,%cx
		jle    _026d87_jump
		cmp    $0x0000c8,%cx
		jge    _026d87_jump
		cmpb   $0x000000,_095de5_data
		je     _026d79_jump
		xor    %ebx,%ebx
		movswl %si,%eax
		mov    0x000004(%esp),%bl
		call   _026c58_func
		jmp    _026d87_jump

	_026d79_jump:
		xor    %ebx,%ebx
		movswl %si,%eax
		mov    0x000004(%esp),%bl
		call   _026ca0_func

	_026d87_jump:
		inc    %ecx

	_026d88_jump:
		mov    -0x000002(%esp),%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		movswl %cx,%edx
		cmp    %eax,%edx
		jl     _026d54_jump

	_026d9b_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_026da4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %ax,0x000004(%esp)
		mov    %dx,0x000010(%esp)
		mov    %bx,0x000008(%esp)
		mov    %ecx,0x00000c(%esp)
		movzbl 0x000024(%esp),%esi
		mov    0x000006(%esp),%eax
		mov    0x00000e(%esp),%ebp
		mov    0x000002(%esp),%edi
		sar    $0x000010,%eax
		sar    $0x000010,%ebp
		sar    $0x000010,%edi
		mov    %esi,%ecx
		mov    %eax,(%esp)
		mov    %eax,%ebx
		mov    %ebp,%edx
		mov    %edi,%eax
		call   _026cc4_func
		mov    0x000010(%esp),%eax
		add    0x00000c(%esp),%eax
		mov    (%esp),%ebx
		dec    %eax
		mov    %esi,%ecx
		movswl %ax,%edx
		mov    %edi,%eax
		call   _026cc4_func
		mov    0x00000c(%esp),%eax
		dec    %eax
		mov    %esi,%ecx
		cwtl   
		mov    %ebp,%edx
		mov    %eax,(%esp)
		mov    %eax,%ebx
		mov    %edi,%eax
		call   _026d34_func
		mov    0x000004(%esp),%eax
		mov    0x000008(%esp),%ebx
		mov    %esi,%ecx
		add    %ebx,%eax
		mov    %ebp,%edx
		dec    %eax
		mov    (%esp),%ebx
		cwtl   
		call   _026d34_func
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_026e38_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x000013,%eax
		call   _06b8d0_func
		mov    %al,%cl
		xor    %ah,%ah

	_026e49_jump:
		mov    %ah,%al
		add    %cl,%al
		cmp    $0x000014,%al
		jb     _026e53_jump
		sub    $0x000014,%al

	_026e53_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0de166_data(,%edx,8),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0cc7a0_data,%edx
		add    %ebx,%edx
		cmp    _095fa0_data,%al
		je     _026eb0_jump
		mov    0x000050(%edx),%bx
		cmp    $0x000002,%bx
		je     _026e8d_jump
		cmp    $0x000001,%bx
		je     _026e8d_jump
		cmp    $0x000003,%bx
		jne    _026eb0_jump

	_026e8d_jump:
		mov    $0x000002,%bh
		movb   $0x00000a,0x000076(%edx)
		mov    %al,_095fa0_data
		mov    0x000050(%edx),%al
		mov    %bh,_095f9f_data
		mov    %al,_095fa1_data
		movw   $0x000006,0x000050(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026eb0_jump:
		inc    %ah
		cmp    $0x000014,%ah
		jb     _026e49_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026ebc_func:
		push   %edx
		cmpb   $0x000005,_095fa3_data
		jb     _026ee4_jump
		mov    _095f9f_data,%dl
		cmp    $0x000001,%dl
		jne    _026ed8_jump
		call   _026e38_func
		pop    %edx
		ret    

	_026ed8_jump:
		cmp    $0x000002,%dl
		je     _026ee4_jump
		movb   $0x000001,_095f9f_data

	_026ee4_jump:
		pop    %edx
		ret    

_026ee8_switch:
		.long   _026fbb_case
		.long   _026fb6_case
		.long   _026fc0_case
		.long   _026fca_case
		.long   _026fc5_case
		.long   _026fd4_case
		.long   _026fd4_case
		.long   _026fd4_case
		.long   _026fd4_case
		.long   _026fd4_case
		.long   _026fd4_case
		.long   _026fcf_case




_026f18_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    %ecx,%ebp
		mov    %edx,%eax
		mov    0x000020(%esp),%edx
		mov    0x000004(%esi),%ebx
		mov    0x000020(%ebx),%cx
		and    $0x00003f,%ch
		mov    %ecx,0x000008(%esp)
		xor    %ecx,%ecx
		mov    0x000008(%esp),%cx
		mov    %ecx,(%esp)
		mov    _095fc0_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,0x000004(%esp)
		mov    (%esp),%ecx
		imul   0x000004(%esp),%ecx
		add    $0x000018,%ebx
		cwtl   
		mov    (%ebx),%ebx
		shl    $0x000002,%ecx
		shl    $0x000002,%eax
		add    %ecx,%ebx
		add    %eax,%ebx
		xor    %ecx,%ecx
		mov    0x000003(%ebx),%al
		mov    %al,%cl
		mov    %al,0x00000c(%esp)
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		mov    (%esi),%ecx
		add    %ecx,%eax
		cmpb   $0x000000,0x00000c(%esp)
		je     _026fdb_jump
		cmpb   $0x000000,0x000004(%eax)
		je     _026fdb_jump
		xor    %ecx,%ecx
		mov    0x000001(%ebx),%cl
		mov    %cx,(%edi)
		mov    0x000002(%ebx),%bl
		xor    %bh,%bh
		mov    %bx,0x000000(%ebp)
		mov    0x000004(%eax),%al
		sub    $0x000027,%al
		cmp    $0x00000b,%al
		ja     _026fd4_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_026ee8_switch(,%eax,4)

	_026fb6_case:
		movb   $0x000002,(%edx)
		jmp    _026fd7_jump

	_026fbb_case:
		movb   $0x000001,(%edx)
		jmp    _026fd7_jump

	_026fc0_case:
		movb   $0x000003,(%edx)
		jmp    _026fd7_jump

	_026fc5_case:
		movb   $0x000004,(%edx)
		jmp    _026fd7_jump

	_026fca_case:
		movb   $0x000005,(%edx)
		jmp    _026fd7_jump

	_026fcf_case:
		movb   $0x000007,(%edx)
		jmp    _026fd7_jump

	_026fd4_case:
		movb   $0x000000,(%edx)

	_026fd7_jump:
		mov    $0x000001,%al
		jmp    _026fdd_jump

	_026fdb_jump:
		xor    %al,%al

	_026fdd_jump:
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

_026fe8_switch:
		.long   _027028_case
		.long   _027042_case
		.long   _02704b_case
		.long   _027054_case
		.long   _02705d_case
		.long   _02706f_case
		.long   _02707b_case
		.long   _027075_case




_027008_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000050(%eax),%ax
		cmp    $0x000007,%ax
		ja     _0270c1_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_026fe8_switch(,%eax,4)

	_027028_case:
		mov    0x000081(%edx),%al
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%edx)
		jmp    _0270c1_jump

	_027042_case:
		movb   $0x000001,0x00006b(%edx)
		jmp    _0270c1_jump

	_02704b_case:
		movb   $0x000000,0x00006b(%edx)
		jmp    _0270c1_jump

	_027054_case:
		movb   $0x000002,0x00006b(%edx)
		jmp    _0270c1_jump

	_02705d_case:
		cmpb   $0x000005,0x000076(%edx)
		ja     _027069_jump
		movb   $0x000007,0x00006b(%edx)
		jmp    _0270c1_jump

	_027069_jump:
		movb   $0x000003,0x00006b(%edx)
		jmp    _0270c1_jump

	_02706f_case:
		movb   $0x000004,0x00006b(%edx)
		jmp    _0270c1_jump

	_027075_case:
		movb   $0x000005,0x00006b(%edx)
		jmp    _0270c1_jump

	_02707b_case:
		mov    0x000004(%edx),%eax
		mov    0x000016(%eax),%ax
		and    $0x00ffff,%eax
		xor    %ebx,%ebx
		dec    %eax
		mov    0x00006b(%edx),%bl
		cmp    %eax,%ebx
		jne    _0270b1_jump
		mov    0x000076(%edx),%bh
		movb   $0x000000,0x00006b(%edx)
		dec    %bh
		mov    %bh,0x000076(%edx)
		jne    _0270c1_jump
		xor    %eax,%eax
		mov    _095fa1_data,%al
		mov    %ax,0x000050(%edx)
		call   _026e38_func
		jmp    _0270c1_jump

	_0270b1_jump:
		mov    _0cf3f1_data,%ah
		cmp    $0x000001,%ah
		jne    _0270c1_jump
		add    %ah,%bl
		mov    %bl,0x00006b(%edx)

	_0270c1_jump:
		cmpw   $0x000000,0x000050(%edx)
		je     _027126_jump
		mov    0x000054(%edx),%eax
		sar    $0x000010,%eax
		mov    _0cf2ac_data,%ebx
		mov    _0de162_data(,%eax,8),%ecx
		mov    _095fc6_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %eax,%ebx
		xor    %eax,%eax
		add    %ecx,%ebx
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		mov    0x000054(%edx),%eax
		mov    %ebx,0x000028(%edx)
		sar    $0x000010,%eax
		mov    _0cf2ae_data,%ebx
		mov    _0de164_data(,%eax,8),%ecx
		mov    _095fc8_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %eax,%ebx
		xor    %eax,%eax
		add    %ecx,%ebx
		mov    0x000069(%edx),%al
		sub    %eax,%ebx
		mov    %ebx,0x00002c(%edx)

	_027126_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02712c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0cc7a0_data,%esi
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0271da_jump

	_02714e_jump:
		cmpw   $0x00000b,0x000060(%esi)
		jne    _0271ca_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _0271ca_jump
		mov    %esp,%edx
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		lea    0x000010(%esp),%edx
		call   _01d364_func
		movb   $0x000000,0x00006b(%esi)
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    0x000081(%esi),%ah
		mov    0x000006(%esp),%ebx
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%esi)
		add    %edx,%ebx
		xor    %edx,%edx
		or     $0x000004,%ah
		mov    0x000069(%esi),%dl
		mov    %ah,0x000081(%esi)
		sub    %edx,%ebx
		mov    %esi,%eax
		mov    %ebx,0x00002c(%esi)
		call   _01f3d4_func
		jmp    _0271da_jump

	_0271ca_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _02714e_jump

	_0271da_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0271e4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %bl,(%esp)
		mov    %cl,0x000004(%esp)
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _0272bc_jump

	_02720b_jump:
		cmp    0x000060(%ecx),%dx
		jne    _0272ac_jump
		mov    0x000024(%ecx),%edi
		test   %edi,%edi
		jne    _0272ac_jump
		mov    0x000028(%esi),%ebp
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%dl
		mov    0x000068(%ecx),%bl
		add    %ebp,%edx
		sub    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x000028(%ecx)
		xor    %edx,%edx
		mov    0x00002c(%esi),%eax
		mov    0x000069(%esi),%dl
		mov    0x000069(%ecx),%bl
		add    %eax,%edx
		mov    %ecx,%eax
		sub    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x00002c(%ecx)
		xor    %edx,%edx
		mov    0x000004(%esp),%bl
		mov    (%esp),%dl
		call   _01d444_func
		mov    0x000081(%ecx),%ah
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebx
		mov    0x000068(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		add    %ebx,%edx
		mov    _0cf2ae_data,%ebx
		movw   $0x000000,0x000040(%ecx)
		sar    $0x000010,%ebx
		or     $0x000004,%ah
		sub    %ebx,%edx
		mov    %ah,0x000081(%ecx)
		cmp    $0x000064,%edx
		setl   %al
		movb   $0x000001,0x00007e(%ecx)
		movw   $0x000000,0x00005e(%ecx)
		xor    %ah,%ah
		mov    %edi,0x000030(%ecx)
		inc    %eax
		mov    %ax,0x000042(%ecx)
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_0272ac_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jl     _02720b_jump

	_0272bc_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0272c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    $0x000001,%ah
		mov    _0ce953_data,%dl
		mov    %ah,_095f9f_data
		cmp    $0x000004,%dl
		je     _0272e8_jump
		mov    $0x000052,%edx
		mov    $0x000006,%bl
		mov    $0x000002,%al
		jmp    _02732d_jump

	_0272e8_jump:
		mov    _0ce0d0_data,%eax
		mov    0x00006e(%eax),%dh
		cmp    $0x000001,%dh
		je     _0272ff_jump
		cmp    $0x000003,%dh
		je     _0272ff_jump
		cmp    $0x000005,%dh
		jne    _02730a_jump

	_0272ff_jump:
		mov    $0x00005f,%edx
		mov    $0x000005,%bl
		mov    $0x000007,%al
		jmp    _02732d_jump

	_02730a_jump:
		cmp    $0x00000c,%dh
		je     _02731a_jump
		mov    $0x00005f,%edx
		mov    $0x000005,%bl
		mov    $0x00000e,%al
		jmp    _02732d_jump

	_02731a_jump:
		mov    $0x0000a1,%edx
		mov    $0x000007,%eax
		mov    $0x000005,%bl
		call   _06b8d0_func
		add    $0x000018,%al

	_02732d_jump:
		xor    %ecx,%ecx
		mov    %al,%cl
		and    $_0000ff_case,%ebx
		and    $0x00ffff,%edx
		mov    %esi,%eax
		call   _0271e4_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_02734c_switch:
		.long   _027504_case
		.long   _027530_case
		.long   _02755d_case
		.long   _0275b0_case
		.long   _0275f8_case
		.long   _02755d_case
		.long   _02761d_case




_027368_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,0x000004(%esp)
		xor    %ah,%ah
		mov    %ah,0x000020(%esp)
		mov    %ah,0x000024(%esp)
		mov    0x000004(%esp),%eax
		mov    _0cf2ae_data,%dx
		mov    0x000028(%eax),%ax
		sub    %edx,%eax
		mov    0x000004(%esp),%esi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		add    %edx,%eax
		mov    _0cf2b0_data,%bx
		add    $0x000008,%eax
		xor    %edx,%edx
		mov    %ax,0x000008(%esp)
		mov    0x00002c(%esi),%ax
		mov    0x000069(%esi),%dl
		sub    %ebx,%eax
		add    %edx,%eax
		xor    %dh,%dh
		mov    %ax,0x000018(%esp)
		mov    %dh,_0de224_data
		mov    %dh,0x00001c(%esp)

	_0273cc_jump:
		cmpb   $0x000001,_0de224_data
		jae    _027788_jump
		xor    %eax,%eax
		mov    0x00001c(%esp),%al
		mov    _0de166_data(,%eax,8),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%esi
		add    %eax,%esi
		cmpw   $0x000000,0x000050(%esi)
		je     _027775_jump
		mov    0x00001c(%esp),%cl
		cmp    _095fc0_data,%cl
		je     _027775_jump
		mov    _0cf2ae_data,%di
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		sub    %edi,%edx
		mov    %eax,%ecx
		add    %edx,%ecx
		mov    0x000006(%esp),%eax
		add    $0x000008,%ecx
		sar    $0x000010,%eax
		movswl %cx,%edx
		sub    %edx,%eax
		mov    %eax,%edi
		cwtl   
		test   %eax,%eax
		jge    _027440_jump
		neg    %eax

	_027440_jump:
		mov    %eax,%edx
		mov    %eax,0x000010(%esp)
		cmp    $0x000015,%ax
		jg     _027775_jump
		mov    _0cf2b0_data,%bx
		mov    0x00002c(%esi),%ax
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000016(%esp),%ebp
		mov    0x000069(%esi),%bl
		sar    $0x000010,%ebp
		add    %eax,%ebx
		movswl %bx,%eax
		sub    %eax,%ebp
		mov    %ebp,(%esp)
		mov    (%esp),%eax
		mov    %ax,0x000014(%esp)
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _027488_jump
		neg    %eax

	_027488_jump:
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    %eax,0x00000c(%esp)
		cmp    $0x000015,%dx
		jg     _027775_jump
		cmpb   $0x000000,_09626d_data
		je     _0274bf_jump
		push   $0x000041
		sub    $0x000009,%ecx
		sub    $0x000009,%ebx
		movswl %cx,%eax
		mov    $0x000012,%ecx
		movswl %bx,%edx
		mov    %ecx,%ebx
		call   _026da4_func

	_0274bf_jump:
		movswl %di,%edx
		imul   %edx,%edx
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		imul   %eax,%eax
		mov    _096268_data,%ebx
		add    %eax,%edx
		cmp    %ebx,%edx
		jg     _027775_jump
		mov    0x00001c(%esp),%al
		mov    %al,_095fc0_data
		mov    0x000050(%esi),%ax
		dec    %eax
		cmp    $0x000006,%ax
		ja     _027654_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_02734c_switch(,%eax,4)

	_027504_case:
		xor    %cl,%cl
		mov    $0x0000c1,%eax
		mov    %cl,_09626f_data
		mov    _095fa3_data,%ch
		movw   $0x000002,0x000050(%esi)
		inc    %ch
		mov    %ax,_095f9c_data
		mov    %ch,_095fa3_data
		jmp    _027654_jump

	_027530_case:
		xor    %bl,%bl
		movw   $0x000003,0x000050(%esi)
		mov    %bl,_09626f_data
		mov    _095fa3_data,%bh
		mov    $0x0000c1,%esi
		inc    %bh
		mov    %si,_095f9c_data
		mov    %bh,_095fa3_data
		jmp    _027654_jump

	_02755d_case:
		mov    %esi,%eax
		call   _07af48_func
		mov    _095fa2_data,%ah
		mov    _095fa3_data,%dl
		mov    0x000050(%esi),%bx
		dec    %ah
		inc    %dl
		mov    %ah,_095fa2_data
		mov    %dl,_095fa3_data
		cmp    $0x000006,%bx
		jne    _027591_jump
		mov    %esi,%eax
		call   _0272c4_func

	_027591_jump:
		mov    $0x00000e,%ecx
		xor    %dh,%dh
		movw   $0x000000,0x000050(%esi)
		mov    %dh,_09626f_data
		mov    %cx,_095f9c_data
		jmp    _027654_jump

	_0275b0_case:
		mov    $0x0000d6,%eax
		mov    _09626f_data,%bh
		mov    0x000076(%esi),%cl
		inc    %bh
		mov    %ax,_095f9c_data
		mov    %bh,_09626f_data
		dec    %cl
		mov    %cl,0x000076(%esi)
		jne    _027654_jump
		mov    %esi,%eax
		mov    $0x00000e,%edx
		call   _07af48_func
		mov    %cl,_09626f_data
		mov    %dx,_095f9c_data
		movw   $0x000000,0x000050(%esi)
		jmp    _027654_jump

	_0275f8_case:
		mov    0x000004(%esp),%eax
		call   _026a6c_func
		mov    _09626f_data,%bl
		mov    $0x000036,%esi
		inc    %bl
		mov    %si,_095f9c_data
		mov    %bl,_09626f_data
		jmp    _027654_jump

	_02761d_case:
		mov    $0x000001,%edx
		mov    $0x000036,%ebx
		mov    _095fca_data,%cx
		mov    %dx,_095fc6_data
		mov    %bx,_095f9c_data
		mov    _09626f_data,%dh
		sub    $0x000005,%ecx
		inc    %dh
		mov    %cx,_095fca_data
		mov    %dh,_09626f_data

	_027654_jump:
		xor    %eax,%eax
		mov    _0de224_data,%al
		xor    %dl,%dl
		mov    %dl,_0de160_data(,%eax,8)
		mov    %dl,_0de161_data(,%eax,8)
		mov    0x000010(%esp),%eax
		cmp    0x00000c(%esp),%ax
		jl     _0276cd_jump
		mov    _096258_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _02768c_jump
		mov    $0x000001,%eax
		jg     _02768c_jump
		neg    %eax

	_02768c_jump:
		mov    %eax,%edx
		movswl %di,%eax
		cmp    $0x000000,%eax
		je     _02769f_jump
		mov    $0x000001,%eax
		jg     _02769f_jump
		neg    %eax

	_02769f_jump:
		cmp    %eax,%edx
		jne    _0276b9_jump
		xor    %eax,%eax
		mov    _0de224_data,%al
		mov    $0x000001,%cl
		mov    %cl,_0de161_data(,%eax,8)
		add    %cl,0x000024(%esp)
		jmp    _0276cd_jump

	_0276b9_jump:
		xor    %eax,%eax
		mov    _0de224_data,%al
		mov    $0x000001,%bl
		mov    %bl,_0de160_data(,%eax,8)
		add    %bl,0x000020(%esp)

	_0276cd_jump:
		mov    0x000010(%esp),%eax
		cmp    0x00000c(%esp),%ax
		jg     _027733_jump
		mov    _09625a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _0276ee_jump
		mov    $0x000001,%eax
		jg     _0276ee_jump
		neg    %eax

	_0276ee_jump:
		mov    %eax,%edx
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _027705_jump
		mov    $0x000001,%eax
		jg     _027705_jump
		neg    %eax

	_027705_jump:
		cmp    %eax,%edx
		jne    _02771f_jump
		xor    %eax,%eax
		mov    _0de224_data,%al
		mov    $0x000001,%bl
		mov    %bl,_0de160_data(,%eax,8)
		add    %bl,0x000020(%esp)
		jmp    _027733_jump

	_02771f_jump:
		xor    %eax,%eax
		mov    _0de224_data,%al
		mov    $0x000001,%dl
		mov    %dl,_0de161_data(,%eax,8)
		add    %dl,0x000024(%esp)

	_027733_jump:
		xor    %eax,%eax
		mov    _0de224_data,%al
		mov    0x00001c(%esp),%dl
		mov    %dl,_0de162_data(,%eax,8)
		mov    %al,%cl
		mov    %di,_0de15c_data(,%eax,8)
		inc    %cl
		mov    0x000014(%esp),%edx
		mov    %cl,_0de224_data
		mov    _09626c_data,%ch
		mov    %dx,_0de15e_data(,%eax,8)
		cmp    %ch,%cl
		jbe    _027788_jump
		mov    %cl,_09626c_data
		jmp    _027788_jump

	_027775_jump:
		mov    0x00001c(%esp),%ah
		inc    %ah
		mov    %ah,0x00001c(%esp)
		cmp    $0x000014,%ah
		jb     _0273cc_jump

	_027788_jump:
		cmpb   $0x000000,_0de224_data
		je     _0277be_jump
		cmpb   $0x000000,0x000020(%esp)
		je     _0277a1_jump
		mov    0x000004(%esp),%eax
		call   _026a9c_func

	_0277a1_jump:
		cmpb   $0x000000,0x000024(%esp)
		je     _0277b1_jump
		mov    0x000004(%esp),%eax
		call   _026ac8_func

	_0277b1_jump:
		mov    _095f9a_data,%eax
		sar    $0x000010,%eax
		call   _072210_func

	_0277be_jump:
		mov    _0de224_data,%al
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0277d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000018,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,0x000014(%esp)
		mov    %esi,%eax
		call   _01dc5c_func
		xor    %eax,%eax
		mov    0x000036(%esi),%dx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sub    $0x000008,%eax
		mov    %ax,0x000010(%esp)
		xor    %eax,%eax
		mov    0x000038(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		sub    $0x000008,%eax
		mov    $0x000002,%edx
		mov    %ax,0x000004(%esp)
		mov    $_0ce044_data,%eax
		mov    %dx,(%esp)
		call   _01dc5c_func
		movzbw _0ce0ac_data,%di
		mov    _0ce07a_data,%cx
		mov    _0ce07c_data,%ax
		mov    _0ce0b1_data,%dl
		mov    %ax,0x000008(%esp)
		mov    $0x00002e,%eax
		add    %ecx,%edi
		mov    %ax,0x00000c(%esp)
		test   %dl,%dl
		jne    _027859_jump
		cmpb   $0x000004,_0ce0b0_data
		je     _02786c_jump

	_027859_jump:
		mov    _0ce0b1_data,%bl
		cmp    $0x000001,%bl
		jne    _027893_jump
		cmp    _0ce0b0_data,%bl
		jne    _027893_jump

	_02786c_jump:
		mov    0x000008(%esp),%eax
		mov    _095fc0_data,%cl
		add    $0x000020,%eax
		sub    $0x000016,%edi
		mov    %ax,0x000008(%esp)
		cmp    $0x000019,%cl
		je     _0278f4_jump
		movb   $0x000019,0x000014(%esp)
		jmp    _0278f4_jump

	_027893_jump:
		cmpb   $0x000000,_0ce0b1_data
		jne    _0278a5_jump
		cmpb   $0x000014,_0ce0b0_data
		je     _0278c9_jump

	_0278a5_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _0278b7_jump
		cmpb   $0x000011,_0ce0b0_data
		je     _0278c9_jump

	_0278b7_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _0278f4_jump
		cmpb   $0x000012,_0ce0b0_data
		jne    _0278f4_jump

	_0278c9_jump:
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%ecx
		sub    $0x000026,%edi
		add    $0x00004a,%ebx
		add    $0x000020,%ecx
		mov    %bx,0x000008(%esp)
		mov    _095fc0_data,%bl
		mov    %cx,0x00000c(%esp)
		cmp    $0x00001a,%bl
		je     _0278f4_jump
		movb   $0x00001a,0x000014(%esp)

	_0278f4_jump:
		cmpb   $0x000000,0x000014(%esp)
		je     _027a3f_jump
		cmpb   $0x000000,_09626d_data
		je     _027927_jump
		push   $0x000041
		mov    0x000002(%esp),%ecx
		mov    0x00000e(%esp),%ebx
		mov    0x00000a(%esp),%edx
		movswl %di,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _026da4_func

	_027927_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		mov    $0x000010,%ecx
		push   %eax
		movswl %di,%eax
		sar    $0x000010,%edx
		push   %eax
		mov    0x00001e(%esp),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		call   _02b560_func
		test   %ax,%ax
		je     _027a3f_jump
		cmpw   $0x000000,_09625c_data
		jl     _027a3f_jump
		cmpb   $0x000005,_095fa2_data
		ja     _027990_jump
		cmpw   $0x000003,_095fc2_data
		je     _027990_jump
		movb   $0x000001,_096258_data
		jmp    _027998_jump

	_027990_jump:
		xor    %dh,%dh
		mov    %dh,_096258_data

	_027998_jump:
		mov    0x000010(%esp),%eax
		add    $0x000010,%eax
		sub    %edi,%eax
		movswl %ax,%edx
		mov    %edx,%eax
		mov    0x00000c(%esp),%ecx
		shl    $0x000004,%eax
		add    $0x00000f,%ecx
		sub    %edx,%eax
		mov    %cx,0x00000c(%esp)
		lea    0x000000(,%eax,8),%edx
		mov    0x00000a(%esp),%ebx
		neg    %edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x4062c000,%ecx
		xor    %ebx,%ebx
		call   _07f562_func
		call   _07f5a8_func
		mov    $0x9999999a,%ebx
		mov    $0x3fc99999,%ecx
		call   _07f75f_func
		call   _07fdac_func
		mov    %ax,_096256_data
		call   _0268e0_func
		mov    %esi,%eax
		call   _02712c_func
		mov    $0x00002c,%eax
		mov    0x000014(%esp),%bh
		call   _072210_func
		cmp    $0x000019,%bh
		jne    _027a2e_jump
		mov    $0x000032,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func

	_027a2e_jump:
		mov    0x000014(%esp),%al
		xor    %cl,%cl
		mov    %al,_095fc0_data
		mov    %cl,_09626f_data

	_027a3f_jump:
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027a48_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _095fca_data,%dx
		mov    _095fce_data,%bx
		mov    _095fc6_data,%cx
		cmpb   $0x000001,_095f9e_data
		jne    _027aba_jump
		dec    %cx
		jne    _027aba_jump
		add    %ebx,%edx
		mov    _0de212_data,%bx
		mov    $0x0001f4,%ecx
		cmp    %bx,%dx
		jl     _027a8f_jump
		mov    %ebx,%edx
		xor    %ebx,%ebx
		mov    %bx,_095fcc_data
		jmp    _027aba_jump

	_027a8f_jump:
		mov    _0de20e_data,%si
		cmp    %si,%dx
		jg     _027aac_jump
		mov    $0x000001,%ebx
		xor    %eax,%eax
		mov    %esi,%edx
		mov    %ax,_095fcc_data
		jmp    _027aba_jump

	_027aac_jump:
		xor    %edi,%edi
		mov    $0x000001,%ebx
		mov    %di,_095fcc_data

	_027aba_jump:
		mov    %cx,_095fc6_data
		mov    %bx,_095fce_data
		mov    %dx,_095fca_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_027ad8_switch:
		.long   _027e12_case
		.long   _027e12_case
		.long   _027e12_case
		.long   _027e23_case
		.long   _027e27_case
		.long   _027e27_case
		.long   _027e1a_case




_027af4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		mov    $0xfffffec0,%edx
		mov    $0xffffff38,%ebx
		mov    $0x000140,%ecx
		mov    $0x0000c8,%esi
		xor    %ah,%ah
		mov    %edx,(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %esi,0x000010(%esp)
		mov    %ah,_095f9e_data
		mov    %ah,_095f9f_data
		mov    $0x000014,%dh
		xor    %al,%al
		mov    %dh,_095fa0_data
		xor    %ebx,%ebx

	_027b3c_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %bx,_0de164_data(,%edx,8)
		mov    %bx,_0de166_data(,%edx,8)
		mov    %bl,_0de16a_data(,%edx,8)
		inc    %al
		mov    %bx,_0de168_data(,%edx,8)
		cmp    $0x000014,%al
		jb     _027b3c_jump
		mov    _0cc7a0_data,%edi
		mov    _0cc7a4_data,%ax
		movw   $0x000064,0x000056(%ebp)
		xor    %bl,%bl
		xor    %esi,%esi
		mov    %bl,0x00001c(%esp)
		mov    %eax,0x000008(%esp)
		test   %ax,%ax
		jle    _027c70_jump

	_027b8c_jump:
		mov    0x00001c(%esp),%bh
		cmp    $0x000014,%bh
		jae    _027c70_jump
		cmpw   $0x000100,0x000060(%edi)
		jne    _027c5c_jump
		lea    0x000020(%esp),%eax
		lea    0x000014(%esp),%ecx
		xor    %edx,%edx
		push   %eax
		mov    %bh,%dl
		lea    0x00001c(%esp),%ebx
		mov    %ebp,%eax
		call   _026f18_func
		test   %ax,%ax
		jne    _027bd5_jump
		mov    $0x000080,%edx
		mov    %eax,0x000014(%esp)
		xor    %ah,%ah
		mov    %edx,0x000018(%esp)
		mov    %ah,0x000020(%esp)

	_027bd5_jump:
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		mov    0x000018(%esp),%eax
		shl    $0x000003,%edx
		add    $0x00002a,%eax
		mov    %ax,_0de164_data(%edx)
		mov    0x000014(%esp),%eax
		add    $0x000009,%eax
		mov    %ax,_0de166_data(%edx)
		mov    0x000020(%esp),%al
		mov    %al,_0de16a_data(%edx)
		mov    (%esp),%ecx
		mov    _0de164_data(%edx),%ax
		mov    %si,_0de168_data(%edx)
		cmp    %cx,%ax
		jle    _027c23_jump
		mov    %eax,(%esp)
		jmp    _027c2e_jump

	_027c23_jump:
		cmp    0x000004(%esp),%ax
		jge    _027c2e_jump
		mov    %eax,0x000004(%esp)

	_027c2e_jump:
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		shl    $0x000003,%edx
		mov    0x00000c(%esp),%ecx
		mov    _0de166_data(%edx),%ax
		cmp    %cx,%ax
		jle    _027c4d_jump
		mov    %eax,0x00000c(%esp)
		jmp    _027c58_jump

	_027c4d_jump:
		cmp    0x000010(%esp),%ax
		jge    _027c58_jump
		mov    %eax,0x000010(%esp)

	_027c58_jump:
		incb   0x00001c(%esp)

	_027c5c_jump:
		mov    0x000008(%esp),%edx
		inc    %esi
		add    $0x000084,%edi
		cmp    %dx,%si
		jl     _027b8c_jump

	_027c70_jump:
		mov    0x000004(%esp),%ebx
		cmp    $0x00000c,%bx
		jg     _027c85_jump
		xor    %esi,%esi
		mov    %si,_0de21c_data
		jmp    _027c92_jump

	_027c85_jump:
		mov    $0x00000c,%eax
		sub    %ebx,%eax
		mov    %ax,_0de21c_data

	_027c92_jump:
		mov    (%esp),%edi
		cmp    $0x000124,%di
		jle    _027ca7_jump
		xor    %ebx,%ebx
		mov    %bx,_0de222_data
		jmp    _027cb4_jump

	_027ca7_jump:
		mov    $0x000124,%eax
		sub    %edi,%eax
		mov    %ax,_0de222_data

	_027cb4_jump:
		mov    0x000010(%esp),%ecx
		cmp    $0x000008,%cx
		jg     _027cc9_jump
		xor    %edi,%edi
		mov    %di,_0de20e_data
		jmp    _027cd6_jump

	_027cc9_jump:
		mov    $0x000008,%eax
		sub    %ecx,%eax
		mov    %ax,_0de20e_data

	_027cd6_jump:
		cmpw   $0x000078,0x00000c(%esp)
		jle    _027ce9_jump
		xor    %ebx,%ebx
		mov    %bx,_0de212_data
		jmp    _027cfa_jump

	_027ce9_jump:
		mov    $0x000078,%eax
		mov    0x00000c(%esp),%edx
		sub    %edx,%eax
		mov    %ax,_0de212_data

	_027cfa_jump:
		mov    _095fc0_data,%eax
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		add    %eax,%eax
		mov    %cx,_095fca_data
		mov    _095fa4_data(%eax),%dx
		mov    _095de5_data,%cl
		mov    %dx,_095fc8_data
		cmp    $0x000001,%cl
		jne    _027d43_jump
		mov    %edx,%esi
		sub    $0x000008,%esi
		mov    _0cf40b_data,%ch
		mov    %si,_095fc8_data
		cmp    %cl,%ch
		jne    _027d43_jump
		mov    %dx,_095fca_data

	_027d43_jump:
		xor    %al,%al
		xor    %bl,%bl
		mov    %al,_095fa2_data
		mov    $0x000004,%bh
		xor    %esi,%esi

	_027d50_jump:
		xor    %eax,%eax
		mov    %bl,%al
		mov    _0de166_data(,%eax,8),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc7a0_data,%ecx
		mov    _0de162_data(,%eax,8),%edi
		add    %ecx,%edx
		mov    _0cf2ac_data,%ecx
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		add    %edi,%ecx
		movzbl 0x000068(%edx),%edi
		sub    %edi,%ecx
		mov    %ecx,%edi
		mov    _095fc6_data,%ecx
		sar    $0x000010,%ecx
		add    %ecx,%edi
		mov    %edi,0x000028(%edx)
		mov    _0de164_data(,%eax,8),%ecx
		mov    _0cf2ae_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%edi
		add    %edi,%ecx
		movzbl 0x000069(%edx),%edi
		sub    %edi,%ecx
		mov    _095fc8_data,%edi
		sar    $0x000010,%edi
		add    %edi,%ecx
		mov    %ecx,0x00002c(%edx)
		mov    _0de16a_data(,%eax,8),%al
		movl   $0x000001,0x000024(%edx)
		xor    %ah,%ah
		mov    0x000081(%edx),%cl
		mov    %ax,0x000050(%edx)
		mov    %bl,%al
		or     %bh,%cl
		mov    %ax,0x000056(%edx)
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _01f3d4_func
		mov    %bh,0x00007e(%edx)
		mov    0x000050(%edx),%ax
		mov    %si,0x000040(%edx)
		dec    %eax
		mov    %si,0x000042(%edx)
		cmp    $0x000006,%ax
		ja     _027e27_case
		and    $0x00ffff,%eax
		jmp    *%cs:_027ad8_switch(,%eax,4)

	_027e12_case:
		incb   _095fa2_data
		jmp    _027e27_case

	_027e1a_case:
		movb   $0x000002,_095f9e_data
		jmp    _027e27_case

	_027e23_case:
		movb   $0x000014,0x000076(%edx)

	_027e27_case:
		mov    %edx,%eax
		inc    %bl
		call   _027008_func
		cmp    $0x000014,%bl
		jb     _027d50_jump
		xor    %ah,%ah
		mov    %ah,_095fa3_data
		mov    %ah,_096270_data
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027e54_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %al,%al

	_027e59_jump:
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    _0de166_data(,%ebx,8),%ecx
		sar    $0x000010,%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0cc7a0_data,%edx
		andb   $0x0000fb,0x000081(%ecx,%edx,1)
		mov    _0de166_data(,%ebx,8),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		inc    %al
		movl   $0x000000,0x000024(%edx,%ebx,1)
		cmp    $0x000014,%al
		jb     _027e59_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027ea0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		movw   $0x000005,_0cf254_data
		call   _02685c_func
		call   _0267e8_func
		mov    _0cf2ae_data,%ax
		mov    %ax,_0cf268_data
		mov    %ax,_0cf25a_data
		mov    _095fc0_data,%eax
		mov    $0x000018,%ebx
		sar    $0x000010,%eax
		mov    %bx,_0cf2b0_data
		add    %eax,%eax
		mov    %bx,_0cf266_data
		mov    %bx,_0cf25c_data
		mov    _095fa4_data(%eax),%dx
		mov    $0x000020,%ebx
		mov    %dx,_095fc8_data
		xor    %edx,%edx
		mov    %bx,_0de220_data
		mov    %dx,_095fca_data
		mov    %dx,_0de21e_data
		mov    $0x000038,%edx
		mov    %bx,_0de216_data
		mov    %dx,_0de218_data
		xor    %edx,%edx
		mov    $0x000038,%ebx
		mov    _0ce0ac_data,%dl
		sub    %edx,%ebx
		sub    $0x000008,%ebx
		mov    %bx,_0de214_data
		mov    $0x000108,%ebx
		sub    %edx,%ebx
		mov    %ebx,%edx
		sub    $0x000008,%edx
		mov    %dx,_0de21a_data
		cmpb   $0x000000,_095de5_data
		jne    _027f6f_jump
		addw   $0x000008,_0cf2ae_data
		jmp    _027ff2_jump

	_027f6f_jump:
		mov    _095fc8_data,%bx
		sub    $0x000008,%ebx
		mov    _0cf40b_data,%dh
		mov    %bx,_095fc8_data
		cmp    $0x000001,%dh
		jne    _027fa4_jump
		mov    _095fb2_data(%eax),%ax
		mov    $0x00000a,%esi
		mov    %ax,_095fca_data
		mov    %si,_0de21e_data

	_027fa4_jump:
		mov    $0xfffffff8,%edi
		mov    _0de220_data,%ax
		mov    _0de216_data,%dx
		mov    _0de214_data,%bx
		mov    _0de21a_data,%si
		mov    %di,_0de218_data
		sub    $0x000008,%eax
		add    $0x000008,%edx
		sub    $0x000008,%ebx
		sub    $0x000008,%esi
		mov    %ax,_0de220_data
		mov    %dx,_0de216_data
		mov    %bx,_0de214_data
		mov    %si,_0de21a_data

	_027ff2_jump:
		mov    %ecx,%eax
		movb   $0x000000,0x00007e(%ecx)
		call   _026a10_func
		mov    _0cf2ae_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0ce0ad_data,%dl
		add    $0x0000c0,%eax
		sub    %edx,%eax
		mov    _0cd2c4_data,%edx
		mov    %eax,_0ce070_data
		cmp    $0x000002,%edx
		jne    _02805a_jump
		mov    0x000004(%ecx),%eax
		mov    0x000022(%eax),%ax
		dec    %eax
		mov    $0x000001,%ebx
		cwtl   
		mov    $0x000003,%edx
		call   _06b8d0_func
		mov    %ax,_095fc2_data
		mov    %ax,_095fc4_data
		mov    %ecx,%eax
		movb   $0x000003,0x000076(%ecx)
		call   _027af4_func
		mov    $_0ce044_data,%eax
		jmp    _028068_jump

	_02805a_jump:
		cmp    $0x000032,%edx
		jne    _02806d_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_028068_jump:
		call   _01d444_func

	_02806d_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028074_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		mov    _0ce0b1_data,%ah
		mov    %dx,_095fce_data
		mov    %dx,_095fcc_data
		test   %ah,%ah
		jne    _0280a1_jump
		cmpb   $0x000004,_0ce0b0_data
		je     _0280bc_jump

	_0280a1_jump:
		mov    _0ce0b1_data,%dh
		cmp    $0x000001,%dh
		jne    _0281d7_jump
		cmp    _0ce0b0_data,%dh
		jne    _0281d7_jump

	_0280bc_jump:
		mov    %esi,%eax
		call   _026a10_func
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		call   _01d7e0_func
		testb  $0x000008,_0ce0c5_data
		jne    _0280f9_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000002,%eax
		jmp    _0280fb_jump

	_0280f9_jump:
		xor    %eax,%eax

	_0280fb_jump:
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		mov    0x000008(%esp),%ecx
		add    $0x000005,%eax
		sub    %eax,%ecx
		mov    0x000002(%esp),%edx
		mov    %cx,0x000008(%esp)
		sar    $0x000010,%edx
		mov    0x000006(%esp),%ebx
		mov    %esi,%eax
		sar    $0x000010,%ebx
		call   _026af4_func
		cmpb   $0x000000,0x00007e(%esi)
		jne    _028153_jump
		mov    %esi,%eax
		call   _07af48_func
		mov    $0x0000c2,%eax
		call   _072210_func

	_028153_jump:
		movb   $0x000002,0x00007e(%esi)
		mov    0x000081(%esi),%ch
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ch
		mov    %ch,0x000081(%esi)
		call   _041e58_func
		test   %ax,%ax
		je     _0281d7_jump
		mov    %esi,%eax
		mov    $0x000002,%ebx
		call   _026a40_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d444_func
		mov    $0x000032,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		cmpb   $0x000002,_095f9e_data
		jne    _0281c8_jump
		mov    $0x000001,%dl
		mov    $0x000001,%edi
		xor    %esi,%esi
		mov    %dl,_095f9e_data
		mov    %si,_095fcc_data
		mov    %di,_095fce_data
		jmp    _0281d0_jump

	_0281c8_jump:
		xor    %ah,%ah
		mov    %ah,_095f9e_data

	_0281d0_jump:
		movb   $0x000014,_095fc0_data

	_0281d7_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0281e0_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0ce07a_data,%bx
		mov    _0ce0ac_data,%dl
		add    %ebx,%edx
		sub    %edx,%eax
		testb  $0x000008,_0ce0c5_data
		je     _028203_jump
		test   %ax,%ax
		jge    _028211_jump

	_028203_jump:
		testb  $0x000008,_0ce0c5_data
		jne    _028216_jump
		test   %ax,%ax
		jg     _028216_jump

	_028211_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    

	_028216_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_02821c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    _095fa2_data,%ah
		test   %ah,%ah
		jne    _0282db_jump
		mov    0x000056(%esi),%cx
		mov    %ah,0x00007e(%esi)
		dec    %ecx
		mov    %esi,%eax
		mov    %cx,0x000056(%esi)
		call   _026a10_func
		mov    0x000056(%esi),%di
		test   %di,%di
		jne    _0285b4_jump
		call   _027e54_func
		mov    0x000004(%esi),%eax
		mov    0x000022(%eax),%ax
		incw   _095fc2_data
		and    $0x00ffff,%eax
		mov    _095fc0_data,%edx
		dec    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jle    _028281_jump
		mov    %di,_095fc2_data

	_028281_jump:
		mov    _095fc2_data,%ax
		cmp    _095fc4_data,%ax
		jne    _0282b3_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		movw   $0x000064,0x000056(%esi)
		call   _01d444_func
		mov    $0x00006b,%eax
		call   _072210_func
		jmp    _0285b4_jump

	_0282b3_jump:
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _027af4_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d444_func
		mov    $0x000069,%eax
		call   _072210_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0282db_jump:
		mov    _0cf2ae_data,%dx
		mov    0x000028(%esi),%ax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		add    %edx,%eax
		add    $0x000008,%eax
		mov    _0cf2b0_data,%bx
		mov    %ax,(%esp)
		mov    0x00002c(%esi),%ax
		movzbw 0x000069(%esi),%di
		sub    %ebx,%eax
		mov    _09626d_data,%dl
		add    %eax,%edi
		test   %dl,%dl
		je     _028403_jump
		mov    %edi,%eax
		sub    $0x000008,%eax
		push   $0x000041
		movswl %ax,%edx
		mov    0x000004(%esp),%eax
		mov    $0x000010,%ecx
		sub    $0x000008,%eax
		mov    %ecx,%ebx
		cwtl   
		call   _026da4_func
		mov    _0de214_data,%eax
		mov    $0x000140,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    _0de21e_data,%edx
		sar    $0x000010,%edx
		mov    $0x000041,%ecx
		add    %edx,%eax
		mov    $0x0000c8,%ebx
		sar    %eax
		xor    %edx,%edx
		cwtl   
		call   _026d34_func
		mov    $0x000140,%eax
		mov    $0x0000c8,%ebx
		mov    _0de216_data,%cx
		xor    %edx,%edx
		sub    %ecx,%eax
		mov    $0x000041,%ecx
		cwtl   
		call   _026d34_func
		mov    $0x000041,%ecx
		mov    $0x0000c8,%ebx
		mov    _0de21e_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		call   _026d34_func
		mov    $_0ce044_data,%eax
		mov    $0x000041,%ecx
		mov    $0x000140,%ebx
		call   _01dc5c_func
		mov    _0de21c_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		call   _026cc4_func
		mov    $0x000041,%ecx
		mov    _0ce07c_data,%ax
		mov    $0x000140,%ebx
		add    $0x000040,%eax
		xor    %edx,%edx
		cwtl   
		call   _026cc4_func
		mov    $0x0000c8,%eax
		mov    _0de21e_data,%dx
		mov    $0x000041,%ecx
		sub    %edx,%eax
		mov    $0x000140,%ebx
		cwtl   
		xor    %edx,%edx
		call   _026cc4_func

	_028403_jump:
		mov    -0x000002(%esp),%eax
		mov    _0de214_data,%edx
		mov    $0x000140,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %edx,%ebx
		lea    0x000008(%eax),%edx
		cmp    %ebx,%edx
		jl     _028454_jump
		cmpb   $0x000016,_095fc0_data
		je     _0285a8_jump
		mov    %esi,%eax
		mov    $0x000016,%dl
		call   _026a9c_func
		mov    %dl,_095fc0_data
		xor    %dh,%dh
		mov    $0x00002d,%eax
		mov    %dh,_09626f_data
		call   _072210_func
		jmp    _0285a8_jump

	_028454_jump:
		mov    _0de21e_data,%ebx
		lea    -0x000008(%eax),%edx
		sar    $0x000010,%ebx
		cmp    %ebx,%edx
		jg     _028496_jump
		cmpb   $0x000015,_095fc0_data
		je     _0285a8_jump
		mov    %esi,%eax
		call   _026a9c_func
		xor    %al,%al
		mov    $0x000015,%ch
		mov    %al,_09626f_data
		mov    $0x00002d,%eax
		mov    %ch,_095fc0_data
		call   _072210_func
		jmp    _0285a8_jump

	_028496_jump:
		mov    _0de21c_data,%ecx
		movswl %di,%edx
		sar    $0x000010,%ecx
		lea    -0x000008(%edx),%ebx
		cmp    %ecx,%ebx
		jg     _0284f0_jump
		cmpb   $0x000017,_095fc0_data
		je     _0285a8_jump
		mov    %esi,%eax
		mov    $0x000017,%dl
		call   _026ac8_func
		mov    %dl,_095fc0_data
		mov    _09626f_data,%dh
		test   %dh,%dh
		je     _0284d9_jump
		mov    %dh,%bl
		inc    %bl
		mov    %bl,_09626f_data

	_0284d9_jump:
		mov    $0x00002d,%eax
		mov    $0x000001,%bh
		call   _072210_func
		mov    %bh,_096270_data
		jmp    _0285a8_jump

	_0284f0_jump:
		mov    _0ce07a_data,%ebx
		sar    $0x000010,%ebx
		add    $0x000008,%edx
		add    $0x000040,%ebx
		cmp    %ebx,%edx
		jle    _028596_jump
		cmpw   $0x000000,_0ce084_data
		je     _028555_jump
		call   _0281e0_func
		test   %al,%al
		je     _028555_jump
		cmpb   $0x000000,_0ce0b1_data
		jne    _02852c_jump
		cmpb   $0x000004,_0ce0b0_data
		je     _02853f_jump

	_02852c_jump:
		mov    _0ce0b1_data,%bh
		cmp    $0x000001,%bh
		jne    _028555_jump
		cmp    _0ce0b0_data,%bh
		jne    _028555_jump

	_02853f_jump:
		mov    $0x000011,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		jmp    _0285a8_jump

	_028555_jump:
		mov    _0de21c_data,%eax
		mov    $0x0000c8,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		movswl %di,%eax
		cmp    %edx,%eax
		jl     _0285a1_jump
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    %esi,%eax
		movb   $0x000000,0x00007e(%esi)
		call   _026a10_func
		cmpb   $0x000001,_095f9e_data
		jne    _0285a8_jump
		movb   $0x000002,_095f9e_data
		jmp    _0285a8_jump

	_028596_jump:
		mov    %esi,%eax
		call   _027368_func
		test   %al,%al
		jne    _0285a8_jump

	_0285a1_jump:
		mov    %esi,%eax
		call   _0277d0_func

	_0285a8_jump:
		mov    %esi,%eax
		call   _026b94_func
		call   _026ebc_func

	_0285b4_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0285c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000002,_095f9f_data
		jne    _0285f8_jump
		xor    %edx,%edx
		mov    _095fa0_data,%dl
		mov    _0de166_data(,%edx,8),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		xor    %ecx,%ecx
		add    %ebx,%edx
		mov    _0cc7a0_data,%ebx
		mov    _095fa1_data,%cl
		mov    %cx,0x000050(%ebx,%edx,4)

	_0285f8_jump:
		xor    %dh,%dh
		mov    0x000076(%eax),%bl
		mov    %dh,_095f9f_data
		dec    %bl
		mov    %bl,0x000076(%eax)
		jne    _028623_jump
		mov    $0x000004,%ebx
		xor    %edx,%edx
		movw   $0x000064,0x000056(%eax)
		call   _01d444_func
		mov    $0x000016,%eax
		jmp    _028634_jump

	_028623_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x00000f,%eax

	_028634_jump:
		call   _072210_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028640_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%edx
		movb   $0x000000,0x00007e(%eax)
		xor    %ebx,%ebx
		call   _026a10_func
		mov    %bx,_095fce_data
		mov    0x000056(%edx),%si
		mov    %bx,_095fcc_data
		dec    %si
		mov    %si,0x000056(%edx)
		jne    _0286c5_jump
		cmpb   $0x000000,0x000076(%edx)
		je     _028675_jump
		call   _057a14_func

	_028675_jump:
		movw   $0x000001,_0cf254_data
		call   _027e54_func
		mov    0x000081(%edx),%bl
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bl
		mov    $_0ce044_data,%eax
		mov    %bl,0x000081(%edx)
		mov    $0x000002,%ebx
		mov    $0x000003,%edx
		call   _01d444_func
		movw   $0x000001,_0cf288_data
		call   _02685c_func
		call   _026880_func
		call   _03ca10_func

	_0286c5_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_0286cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000076(%eax)
		jbe    _02874f_jump
		mov    $0x000140,%ebx
		mov    _095de5_data,%dl
		mov    $0x0000c8,%edi
		cmp    $0x000001,%dl
		jne    _028708_jump
		cmp    _0cf40b_data,%dl
		jne    _028708_jump
		mov    $0x00013d,%ebx
		mov    $0x0000c0,%edi

	_028708_jump:
		mov    $0x000001,%cl
		mov    %cl,0x00001c(%esp)
		cmp    0x000076(%esi),%cl
		jae    _02874f_jump
		sub    $0x00001c,%ebx
		mov    %bx,0x000018(%esp)

	_02871b_jump:
		xor    %ebx,%ebx
		mov    0x00001c(%esp),%bl
		imul   $0x000014,%ebx,%ebx
		push   $0x000001
		mov    %edi,%eax
		mov    $0x00000b,%edx
		sub    %ebx,%eax
		mov    0x00001a(%esp),%ebx
		movswl %ax,%ecx
		sar    $0x000010,%ebx
		mov    %esi,%eax
		call   _018c90_func
		mov    0x00001c(%esp),%al
		inc    %al
		mov    %al,0x00001c(%esp)
		cmp    0x000076(%esi),%al
		jb     _02871b_jump

	_02874f_jump:
		cmpb   $0x000014,_095fa2_data
		ja     _028828_jump
		movl   $0x000010,0x000014(%esp)
		mov    _095de5_data,%dh
		mov    $0x0000af,%eax
		cmp    $0x000001,%dh
		jne    _02878a_jump
		cmp    _0cf40b_data,%dh
		jne    _02878a_jump
		mov    $0x00000c,%ebx
		mov    $0x0000a9,%eax
		mov    %ebx,0x000014(%esp)

	_02878a_jump:
		push   $0x000001
		mov    _0cf298_data,%edx
		mov    _0cc7a0_data,%edi
		sar    $0x000010,%edx
		movswl %ax,%ebp
		mov    %edx,%ebx
		mov    0x000018(%esp),%eax
		shl    $0x000005,%ebx
		mov    %ebp,%ecx
		add    %edx,%ebx
		sub    $0x000002,%eax
		shl    $0x000002,%ebx
		mov    $0x000039,%edx
		add    %ebx,%edi
		movswl %ax,%ebx
		mov    %edi,%eax
		call   _018c90_func
		mov    0x000014(%esp),%eax
		mov    $0x00000a,%ecx
		xor    %edx,%edx
		add    $0x000027,%eax
		mov    _095fa2_data,%dl
		movswl %ax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		add    $0x00001c,%eax
		xor    %edx,%edx
		mov    %ebp,%ecx
		mov    %al,%dl
		mov    %edi,%eax
		call   _018c90_func
		mov    0x000014(%esp),%eax
		mov    $0x00000a,%ecx
		xor    %edx,%edx
		add    $0x000036,%eax
		mov    _095fa2_data,%dl
		movswl %ax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		add    $0x00001c,%edx
		and    $_0000ff_case,%edx
		mov    %ebp,%ecx
		mov    %edi,%eax
		call   _018c90_func

	_028828_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0288f0_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000001,%dl
		jb     _0288f0_jump
		jbe    _02884a_jump
		cmp    $0x000004,%dl
		je     _0288a3_jump
		jmp    _0288f0_jump

	_02884a_jump:
		mov    _0cd2c4_data,%eax
		and    $0x00003f,%eax
		cmp    $0x000020,%eax
		jge    _0288f0_jump
		mov    _0c2b48_data,%edx
		push   %edx
		push   $_0c0880_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    $0x000064,%ebx
		xor    %ecx,%ecx
		push   $0x000000
		mov    $0x0000a0,%edx
		lea    0x000004(%esp),%eax
		call   _01a168_func
		push   $0x000000
		mov    $0x000002,%ecx
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2b28_data,%eax
		jmp    _0288eb_jump

	_0288a3_jump:
		cmpb   $0x000000,_09626e_data
		je     _0288bf_jump
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2a58_data,%eax
		jmp    _0288e9_jump

	_0288bf_jump:
		cmpb   $0x000000,0x000076(%esi)
		jne    _0288d8_jump
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2a58_data,%eax
		jmp    _0288e9_jump

	_0288d8_jump:
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2acc_data,%eax

	_0288e9_jump:
		xor    %ecx,%ecx

	_0288eb_jump:
		call   _01a168_func

	_0288f0_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0288fc_switch:
		.long   _02896f_case
		.long   _02897a_case
		.long   _028985_case
		.long   _028990_case
		.long   _02899b_case




_028910_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%eax
		call   _041c64_func
		test   %al,%al
		je     _02894d_jump
		mov    $0x000001,%ah
		mov    $0x000004,%ebx
		movb   $0x000000,0x000076(%ecx)
		xor    %edx,%edx
		mov    %ah,_09626e_data
		mov    %ecx,%eax
		movw   $0x000064,0x000056(%ecx)
		call   _01d444_func
		mov    $0x000016,%eax
		call   _072210_func

	_02894d_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0289a2_jump
		mov    0x00006c(%ecx),%dh
		cmp    $0x00000a,%dh
		je     _0289a2_jump
		mov    %dh,%al
		cmp    $0x000004,%dh
		ja     _0289a2_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_0288fc_switch(,%eax,4)

	_02896f_case:
		mov    %ecx,%eax
		call   _027ea0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02897a_case:
		mov    %ecx,%eax
		call   _028074_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028985_case:
		mov    %ecx,%eax
		call   _02821c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028990_case:
		mov    %ecx,%eax
		call   _0285c0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02899b_case:
		mov    %ecx,%eax
		call   _028640_func

	_0289a2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0289a8_func:
		push   %edx
		mov    %eax,%edx
		call   _027a48_func
		mov    %edx,%eax
		call   _027008_func
		pop    %edx
		ret    



_0289bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    $0x000044,%eax
		call   _041c64_func
		test   %al,%al
		je     _0289d5_jump
		xorb   $0x000001,_09626d_data

	_0289d5_jump:
		cmpb   $0x000000,_09626d_data
		je     _028a22_jump
		xor    %eax,%eax
		mov    _0de214_data,%dx
		mov    _0ce0ac_data,%al
		mov    $0x000046,%ecx
		add    %edx,%eax
		mov    $0x000064,%ebx
		cwtl   
		mov    %ebx,%edx
		call   _026d34_func
		xor    %eax,%eax
		mov    _0de21a_data,%bx
		mov    _0ce0ac_data,%al
		mov    $0x000046,%ecx
		add    %ebx,%eax
		mov    $0x000064,%ebx
		cwtl   
		mov    %ebx,%edx
		call   _026d34_func

	_028a22_jump:
		cmpb   $0x000000,_0ce0b1_data
		jne    _028a34_jump
		cmpb   $0x000004,_0ce0b0_data
		je     _028a4f_jump

	_028a34_jump:
		mov    _0ce0b1_data,%bh
		cmp    $0x000001,%bh
		jne    _028bb3_jump
		cmp    _0ce0b0_data,%bh
		jne    _028bb3_jump

	_028a4f_jump:
		call   _041d08_func
		test   %ax,%ax
		je     _028ac7_jump
		mov    _0ce0c5_data,%ah
		test   $0x000008,%ah
		jne    _028a76_jump
		mov    %ah,%dl
		or     $0x000008,%dl
		mov    %dl,_0ce0c5_data
		negw   _0ce084_data

	_028a76_jump:
		cmpb   $0x000000,_0ce0b1_data
		jne    _028aa7_jump
		cmpb   $0x000004,_0ce0b0_data
		jne    _028aa7_jump
		mov    $0x000001,%ebx
		mov    $_0ce044_data,%eax
		mov    %ebx,%edx
		call   _01d444_func
		movw   $0x000010,_0ce084_data
		jmp    _028c1a_jump

	_028aa7_jump:
		mov    _0ce082_data,%ebx
		sar    $0x000010,%ebx
		mov    $0x00002f,%eax
		inc    %ebx
		cmp    %ebx,%eax
		jle    _028abc_jump
		mov    %ebx,%eax

	_028abc_jump:
		mov    %ax,_0ce084_data
		jmp    _028c1a_jump

	_028ac7_jump:
		call   _041c98_func
		test   %ax,%ax
		je     _028b4c_jump
		mov    _0ce0c5_data,%bh
		test   $0x000008,%bh
		je     _028afb_jump
		mov    %bh,%cl
		mov    _0ce084_data,%di
		and    $0x0000f7,%cl
		neg    %edi
		mov    %cl,_0ce0c5_data
		mov    %di,_0ce084_data

	_028afb_jump:
		cmpb   $0x000000,_0ce0b1_data
		jne    _028b2c_jump
		cmpb   $0x000004,_0ce0b0_data
		jne    _028b2c_jump
		mov    $0x000001,%ebx
		mov    $_0ce044_data,%eax
		mov    %ebx,%edx
		call   _01d444_func
		movw   $0x00fff0,_0ce084_data
		jmp    _028c1a_jump

	_028b2c_jump:
		mov    _0ce082_data,%ebx
		sar    $0x000010,%ebx
		mov    $0xffffffd1,%eax
		dec    %ebx
		cmp    %ebx,%eax
		jge    _028b41_jump
		mov    %ebx,%eax

	_028b41_jump:
		mov    %ax,_0ce084_data
		jmp    _028c1a_jump

	_028b4c_jump:
		mov    _0ce084_data,%cx
		test   %cx,%cx
		jle    _028b6c_jump
		mov    _0ce082_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		dec    %ebx
		cmp    %ebx,%eax
		jge    _028b6a_jump
		mov    %ebx,%eax

	_028b6a_jump:
		jmp    _028b80_jump

	_028b6c_jump:
		jge    _028b86_jump
		mov    _0ce082_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		inc    %ebx
		cmp    %ebx,%eax
		jle    _028b80_jump
		mov    %ebx,%eax

	_028b80_jump:
		mov    %ax,_0ce084_data

	_028b86_jump:
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _028b94_jump
		neg    %eax

	_028b94_jump:
		cmp    $0x000010,%eax
		jge    _028c1a_jump
		mov    $0x000004,%ebx
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		call   _01d444_func
		jmp    _028c1a_jump

	_028bb3_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _028bc5_jump
		cmpb   $0x000012,_0ce0b0_data
		je     _028bd7_jump

	_028bc5_jump:
		cmpb   $0x000000,_0ce0b1_data
		jne    _028bfe_jump
		cmpb   $0x000014,_0ce0b0_data
		jne    _028bfe_jump

	_028bd7_jump:
		mov    $_0ce044_data,%eax
		call   _0552b4_func
		call   _041e58_func
		test   %ax,%ax
		je     _028c1a_jump
		mov    $0x000004,%ebx
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		call   _01d444_func
		jmp    _028c1a_jump

	_028bfe_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _028c1a_jump
		cmpb   $0x000011,_0ce0b0_data
		jne    _028c1a_jump
		mov    $_0ce044_data,%eax
		call   _0552b4_func

	_028c1a_jump:
		mov    _0de212_data,%eax
		mov    _0ce06c_data,%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _028c45_jump
		cmpw   $0x000000,_0ce084_data
		jge    _028c45_jump
		mov    %eax,_0ce06c_data
		xor    %eax,%eax
		mov    %ax,_0ce084_data
		jmp    _028c8d_jump

	_028c45_jump:
		mov    _0de218_data,%eax
		mov    _0ce06c_data,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jg     _028c71_jump
		cmpw   $0x000000,_0ce084_data
		jle    _028c71_jump
		xor    %edi,%edi
		mov    %eax,_0ce06c_data
		mov    %di,_0ce084_data
		jmp    _028c8d_jump

	_028c71_jump:
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		call   _055230_func
		mov    _0ce06c_data,%ecx
		cwtl   
		add    %eax,%ecx
		mov    %ecx,_0ce06c_data

	_028c8d_jump:
		push   $_0cf26a_data
		mov    $_0cf24e_data,%ecx
		mov    $_0cf24c_data,%ebx
		mov    $_0cf24a_data,%edx
		mov    $_0ce044_data,%eax
		call   _01d928_func
		call   _02ec18_func
		mov    $_0ce044_data,%eax
		call   _055b7c_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028cc0_func:
		movw   $0x000000,0x000040(%eax)
		movw   $0x00fff8,0x000042(%eax)
		ret    



_028cd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _028d1f_jump
		cmpb   $0x000007,0x00006c(%eax)
		jne    _028d1f_jump
		mov    0x00006b(%eax),%bl
		test   %bl,%bl
		jne    _028d1f_jump
		xor    %edx,%edx
		mov    %bl,%dl
		shl    $0x000002,%edx
		mov    0x00000c(%eax),%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		lea    0x000000(,%edx,8),%ecx
		mov    (%ebx),%edx
		mov    0x000005(%ecx,%edx,1),%dl
		and    $0x00000f,%dl
		and    $_0000ff_case,%edx
		cmpb   $0x000000,_0cf3ed_data(%edx)
		jne    _028d1f_jump
		movb   $0x000005,0x00007e(%eax)
		call   _0292ac_func

	_028d1f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028d24_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		call   _01e7ac_func
		mov    0x000076(%ebx),%ah
		test   %ah,%ah
		jne    _028d9a_jump
		mov    %ah,0x00006f(%ebx)
		mov    0x000028(%ebx),%ax
		mov    %ax,0x00003c(%ebx)
		mov    0x00002c(%ebx),%ax
		mov    $0x00000c,%edx
		mov    %ax,0x00003e(%ebx)
		mov    %ebx,%eax
		movb   $0x000008,0x00006e(%ebx)
		call   _01d434_func
		mov    $0x000005,%dl
		movb   $0x000007,0x000078(%ebx)
		call   _028f54_func
		mov    $0x000011,%eax
		mov    _0cf450_data,%cl
		mov    %dl,_0cf457_data
		mov    0x000032(%ebx),%edx
		inc    %cl
		sar    $0x000010,%edx
		mov    %cl,_0cf450_data
		call   _071b3c_func
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		mov    %ebx,_0cdfb4_data
		call   _073b20_func
		pop    %ecx
		pop    %ebx
		ret    

	_028d9a_jump:
		mov    $0x00000a,%edx
		mov    %ebx,%eax
		call   _01d434_func
		pop    %ecx
		pop    %ebx
		ret    



_028dac_func:
		push   %ebx
		push   %edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000020,%dl
		je     _028dcf_jump
		cmp    $0x000021,%dl
		je     _028dcf_jump
		cmp    $0x000022,%dl
		je     _028dcf_jump
		cmp    $0x000023,%dl
		je     _028dcf_jump
		cmp    $0x000024,%dl
		je     _028dcf_jump
		cmp    $0x000025,%dl
		jne    _028e02_jump

	_028dcf_jump:
		mov    0x00006b(%eax),%bl
		cmp    $0x000029,%bl
		jne    _028dea_jump
		mov    0x000032(%eax),%edx
		mov    $0x0000c0,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		pop    %edx
		pop    %ebx
		ret    

	_028dea_jump:
		cmp    $0x000040,%bl
		jne    _028e1d_jump
		mov    0x000032(%eax),%edx
		mov    $0x0000c1,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		pop    %edx
		pop    %ebx
		ret    

	_028e02_jump:
		cmp    $0x000026,%dl
		jne    _028e1d_jump
		mov    0x000081(%eax),%dh
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%eax)

	_028e1d_jump:
		pop    %edx
		pop    %ebx
		ret    



_028e20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce952_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cea1c_data,%cx
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%edx
		test   %cx,%cx
		jle    _028f4e_jump

	_028e51_jump:
		cmpw   $0x0000c5,0x000060(%edx)
		jne    _028f23_jump
		cmpw   $0x000000,_0cf15a_data
		jne    _028e78_jump
		mov    $0x000001,%ecx
		call   _07298c_func
		mov    %cx,_0cf15a_data

	_028e78_jump:
		mov    _0cf2a2_data,%ax
		mov    %ax,_0cf2ae_data
		mov    _0cf29e_data,%ax
		mov    %ax,_0cf2b0_data
		mov    %edx,%eax
		call   _055b7c_func
		mov    0x00006c(%edx),%ah
		cmp    $0x000020,%ah
		je     _028eb8_jump
		cmp    $0x000021,%ah
		je     _028eb8_jump
		cmp    $0x000022,%ah
		je     _028eb8_jump
		cmp    $0x000023,%ah
		je     _028eb8_jump
		cmp    $0x000024,%ah
		je     _028eb8_jump
		cmp    $0x000025,%ah
		jne    _028edf_jump

	_028eb8_jump:
		mov    0x00006b(%edx),%cl
		cmp    $0x000029,%cl
		jne    _028ecd_jump
		mov    0x000032(%edx),%edx
		mov    $0x0000c0,%eax
		sar    $0x000010,%edx
		jmp    _028f14_jump

	_028ecd_jump:
		cmp    $0x000040,%cl
		jne    _028f19_jump
		mov    0x000032(%edx),%edx
		mov    $0x0000c1,%eax
		sar    $0x000010,%edx
		jmp    _028f14_jump

	_028edf_jump:
		cmp    $0x000026,%ah
		jne    _028f19_jump
		xor    %al,%al
		mov    %al,_0cf453_data
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		xor    %esi,%esi
		mov    %ah,0x000081(%edx)
		mov    $0xffffffff,%edx
		mov    $0x00003d,%eax
		mov    %si,_0cf15a_data

	_028f14_jump:
		call   _071b3c_func

	_028f19_jump:
		mov    $0x000001,%eax
		call   _054868_func

	_028f23_jump:
		inc    %ebx
		movswl %bx,%edx
		mov    _0ce952_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc7a0_data,%eax
		mov    _0cea1c_data,%si
		add    %eax,%edx
		cmp    %si,%bx
		jl     _028e51_jump

	_028f4e_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028f54_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cc7a0_data,%ebx
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _02908f_jump

	_028f70_jump:
		cmpw   $0x0000c5,0x000060(%ebx)
		jne    _02907f_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _02907f_jump
		mov    _0cf2ac_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ebx),%al
		add    $0x0000a0,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%ebx)
		mov    %edx,%eax
		mov    %dx,0x00003c(%ebx)
		xor    %edx,%eax
		mov    _0cf2ae_data,%edx
		mov    0x000069(%ebx),%al
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%ebx)
		sub    %eax,%edx
		mov    0x000081(%ebx),%ah
		mov    %edx,0x00002c(%ebx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ebx)
		mov    %ebx,%eax
		mov    %dx,0x00003e(%ebx)
		call   _01f3d4_func
		andb   $0x0000ef,0x000081(%ebx)
		xor    %edx,%edx
		mov    _0cf44f_data,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _094d1d_data(,%eax,4),%al
		xor    %edx,%edx
		add    $0x000020,%al
		mov    %al,%dl
		mov    %ebx,%eax
		call   _01d434_func
		xor    %edx,%edx
		mov    _0cf44f_data,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		cmpb   $0x000006,_094d1d_data(%eax)
		jne    _029029_jump
		movb   $0x000005,_094d1d_data(%eax)

	_029029_jump:
		xor    %edx,%edx
		mov    _0cf44f_data,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x000001,%bh
		mov    _094d1d_data(,%eax,4),%cl
		xor    %esi,%esi
		add    %bh,%cl
		mov    %bh,_0cf453_data
		mov    %cl,_094d1d_data(,%eax,4)
		mov    _0cf2a2_data,%ax
		mov    %si,_0cf2a4_data
		mov    %ax,_0cf2ae_data
		mov    _0cf29e_data,%ax
		mov    %si,_0cf2a6_data
		mov    %ax,_0cf2b0_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02907f_jump:
		inc    %eax
		add    $0x000084,%ebx
		cmp    %dx,%ax
		jl     _028f70_jump

	_02908f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029094_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%ebp
		mov    %dl,0x000018(%esp)
		mov    $0x000003,%eax
		call   _01d0f0_func
		xor    %edi,%edi
		mov    %eax,%esi
		add    $0x000738,%eax
		mov    0x000060(%ebp),%dx
		mov    %eax,(%esp)
		cmp    $0x000017,%dx
		jne    _0290e4_jump
		xor    %eax,%eax
		mov    _0ce0ae_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0ce048_data,%eax
		mov    0x000008(%eax,%edx,4),%al
		mov    %al,0x000014(%esp)
		jmp    _029297_jump

	_0290e4_jump:
		movb   $0x000001,0x000014(%esp)
		cmp    (%esp),%esi
		jb     _0290f7_jump
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0290f7_jump:
		cmpl   $0x000000,0x000024(%esi)
		jne    _029291_jump
		cmpw   $0x000003,0x000060(%esi)
		jne    _029291_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		movw   $0x000014,0x000056(%esi)
		movl   $0x000001,0x000024(%esi)
		mov    0x000081(%esi),%dl
		movb   $0x000000,0x000071(%esi)
		or     $0x000004,%dl
		mov    %dl,0x000081(%esi)
		movswl %di,%edx
		movb   $0x000005,0x000072(%esi)
		mov    _096282_data(,%edx,2),%bx
		mov    %bx,0x000042(%esi)
		mov    _096274_data(,%edx,2),%dx
		mov    %esi,%eax
		mov    %dx,0x000040(%esi)
		call   _01f3d4_func
		cmpw   $0x000000,0x000040(%esi)
		jle    _02919c_jump
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%ebx
		mov    0x000040(%esi),%dl
		mov    %dl,(%ebx)
		mov    %dl,%bl
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		neg    %bl
		mov    %bl,0x000001(%edx)
		mov    0x000081(%esi),%bl
		mov    %esi,%eax
		or     $0x000008,%bl
		mov    $0x000002,%edx
		mov    %bl,0x000081(%esi)
		mov    $0x000001,%ebx
		jmp    _0291d0_jump

	_02919c_jump:
		mov    0x00000c(%esi),%edx
		mov    0x000040(%esi),%bl
		mov    0x000008(%edx),%edx
		neg    %bl
		mov    %bl,(%edx)
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%ebx
		mov    0x000040(%esi),%dl
		mov    %dl,0x000001(%ebx)
		mov    0x000081(%esi),%dh
		mov    %esi,%eax
		and    $0x0000f7,%dh
		mov    $0x000001,%ebx
		mov    %dh,0x000081(%esi)
		mov    $0x000002,%edx

	_0291d0_jump:
		call   _060460_func
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		mov    (%edx),%al
		mov    %al,0x000008(%edx)
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		mov    0x000001(%edx),%al
		mov    %al,0x000009(%edx)
		lea    0x00000c(%esp),%edx
		push   %edx
		lea    0x00000c(%esp),%edx
		xor    %ebx,%ebx
		push   %edx
		movswl %di,%edx
		mov    0x00001c(%esp),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    0x000018(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		movswl %dx,%edx
		mov    %ebp,%eax
		call   _01d7e0_func
		mov    0x000006(%esp),%edx
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x00000a(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		mov    %esi,%eax
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,0x00002c(%esi)
		call   _01dc5c_func
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		movb   $0x000000,0x00006b(%esi)
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		inc    %edi
		mov    0x000002(%ebx,%edx,8),%al
		mov    0x000081(%esi),%bh
		xor    %edx,%edx
		mov    %al,0x00006a(%esi)
		and    $0x0000bf,%bh
		mov    0x000018(%esp),%dl
		mov    %bh,0x000081(%esi)
		cmp    %dx,%di
		je     _0292a0_jump

	_029291_jump:
		add    $0x000084,%esi

	_029297_jump:
		cmp    (%esp),%esi
		jb     _0290f7_jump

	_0292a0_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0292ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    _0cc7a0_data,%edx
		mov    _0cc7a4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _02932d_jump

	_0292c6_jump:
		cmpw   $0x00003b,0x000060(%edx)
		jne    _029321_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _029321_jump
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f3d4_func
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    _0cf2ae_data,%di
		mov    0x000028(%edx),%ax
		mov    0x00002c(%ecx),%ecx
		sub    %edi,%eax
		mov    %ecx,0x00002c(%edx)
		mov    %ax,0x000036(%edx)
		mov    _0cf2b0_data,%bx
		mov    0x00002c(%edx),%ax
		movw   $0x00fffc,0x000042(%edx)
		sub    %ebx,%eax
		mov    %ax,0x000038(%edx)
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_029321_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _0292c6_jump

	_02932d_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029334_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000056(%eax),%dx
		test   %dx,%dx
		je     _029349_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x000056(%eax)

	_029349_jump:
		cmpb   $0x000000,_0cf469_data
		je     _02936d_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%bl
		testb  $0x000002,0x000007(%eax,%ebx,8)
		jne    _029380_jump

	_02936d_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _02939a_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _02939a_jump
		cmpw   $0x000002,0x000042(%ecx)
		jle    _02939a_jump

	_029380_jump:
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff6,0x000042(%ecx)

	_02939a_jump:
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x00006d(%ecx),%al
		mov    0x00006c(%ecx),%bl
		shl    $0x000008,%eax
		add    %ebx,%eax
		lea    0x000081(%ecx),%ebx
		cmp    $0x000003,%eax
		jb     _0293e9_jump
		cmp    $0x000005,%eax
		jbe    _0294f8_jump
		cmp    $0x000200,%eax
		jb     _0293de_jump
		cmp    $0x000201,%eax
		jbe    _029476_jump
		cmp    $0x000202,%eax
		je     _029470_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0293de_jump:
		cmp    $0x000100,%eax
		je     _029426_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0293e9_jump:
		cmp    $0x000001,%eax
		jbe    _0294f8_jump
		mov    %ecx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _0294f8_jump
		mov    0x000081(%ecx),%dh
		mov    %ebx,%eax
		test   $0x000008,%dh
		sete   %bl
		and    $0x000001,%bl
		mov    (%eax),%bh
		and    $0x0000f7,%bh
		mov    %bh,(%eax)
		shl    $0x000003,%bl
		mov    %bh,%cl
		or     %bl,%cl
		mov    %cl,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_029426_jump:
		mov    %ecx,%eax
		call   _0552b4_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _024f68_func
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _029465_jump
		mov    0x000081(%ecx),%dh
		mov    %ebx,%eax
		test   $0x000008,%dh
		sete   %bl
		and    $0x000001,%bl
		mov    (%eax),%bh
		and    $0x0000f7,%bh
		mov    %bh,(%eax)
		shl    $0x000003,%bl
		mov    %bh,%dl
		or     %bl,%dl
		mov    %dl,(%eax)

	_029465_jump:
		mov    %ecx,%eax
		call   _025590_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_029470_jump:
		movw   $0x000000,0x000040(%ecx)

	_029476_jump:
		cmpb   $0x00000a,0x000062(%ecx)
		jne    _029498_jump
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff6,0x000042(%ecx)
		jmp    _0294d4_jump

	_029498_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _0294d4_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _024cd0_func
		and    $_0000ff_case,%eax
		testb  $0x000010,_0924f4_data(%eax)
		je     _0294d4_jump
		cmpb   $0x000000,_0cf469_data
		jne    _0294ce_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d434_func

	_0294ce_jump:
		movw   $0x000000,0x000042(%ecx)

	_0294d4_jump:
		cmpw   $0x000000,0x000040(%ecx)
		je     _0294f8_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024f68_func
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _0294f8_jump
		movw   $0x000000,0x000040(%ecx)

	_0294f8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0294fc_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000001,0x000007(%ebx,%edx,8)
		je     _029525_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _060460_func

	_029525_jump:
		pop    %edx
		pop    %ebx
		ret    



_029530_func:
		mov    _0de8fe_data,%al
		ret    



_029550_func:
		mov    %al,_0de8fe_data
		ret    



_029570_func:
		push   %edx
		mov    %eax,%edx
		mov    $0x00002f,%eax
		call   _0656e8_func
		pop    %edx
		ret    



_029580_func:
		test   $0x000080,%ah
		je     _029588_jump
		xor    %ah,%ah
		ret    

	_029588_jump:
		mov    $0x000100,%eax
		ret    



_029590_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %esi,%ecx
		xor    %dl,%dl
		shr    $0x000010,%ecx

	_0295a3_jump:
		movw   $0x001510,_0de2a2_data
		xor    %ah,%ah
		mov    %cx,_0de2b4_data
		mov    (%esp),%al
		mov    %si,_0de2a4_data
		mov    %ax,_0de2a6_data
		mov    $_0de2a2_data,%eax
		inc    %dl
		call   _029570_func
		cmp    $0x00000a,%dl
		je     _0295df_jump
		mov    %edi,%gs
		testb  $0x000080,%gs:0x000004(%ebx)
		jne    _0295a3_jump

	_0295df_jump:
		mov    %edi,%gs
		xor    %eax,%eax
		mov    %gs:0x000003(%ebx),%ax
		call   _029580_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    



_0295f4_func:
		push   %ecx
		push   %esi
		mov    %edx,%esi
		mov    %eax,%ecx
		mov    %edx,%gs
		movb   $0x00000d,%gs:(%ecx)
		movb   $0x000000,%gs:0x000001(%ecx)
		movw   $0x000000,%gs:0x000003(%ecx)
		xor    %al,%al
		mov    %bl,%gs:0x000002(%ecx)
		mov    %esi,%gs

	_029614_jump:
		xor    %edx,%edx
		mov    %al,%dl
		inc    %al
		movb   $0x000000,%gs:0x000005(%ecx,%edx,1)
		cmp    $0x000008,%al
		jb     _029614_jump
		pop    %esi
		pop    %ecx
		ret    



_029628_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %edx,(%esp)
		mov    %eax,%esi
		mov    %ebx,%edi
		xor    %ebx,%ebx
		mov    %cl,%bl
		call   _0295f4_func
		mov    (%esp),%gs
		movb   $0x000000,%gs:0x00000d(%esi)
		movw   $0x000000,%gs:0x000014(%esi)
		movl   $0x000000,%gs:0x000016(%esi)
		mov    0x000010(%esp),%ebx
		mov    %di,%gs:0x00000e(%esi)
		mov    %bx,%gs:0x000012(%esi)
		shr    $0x000010,%edi
		mov    %di,%gs:0x000010(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0296e4_jump:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000005
		mov    $0x000003,%ecx
		mov    _0de254_data,%ebx
		mov    _0de27c_data,%dx
		mov    _0de278_data,%eax
		call   _029628_func
		lgs    _0de272_data,%eax
		movb   $0x000006,%gs:(%eax)
		xor    %ah,%ah
		mov    (%esp),%al
		mov    %ax,_0de2a6_data
		mov    _0de248_data,%eax
		shr    $0x000010,%eax
		mov    %ax,_0de2b4_data
		mov    _0de248_data,%ax
		mov    $0x001510,%edx
		mov    %ax,_0de2a4_data
		mov    $_0de2a2_data,%eax
		mov    %dx,_0de2a2_data
		call   _029570_func
		lgs    _0de278_data,%eax
		testb  $0x000002,%gs:0x000004(%eax)
		setne  %al
		and    $_0000ff_case,%eax
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029844_func:
		nop
		nop
		jmp    _029867_jump

	_029867_jump:
		mov    $0x000003,%al
		jmp    _029871_jump

	_029871_jump:
		mov    %al,_0de8fe_data
		mov    _0de2a4_data,%al
		mov    $0x000001,%al
		ret    



_029880_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _029844_func
		mov    %al,%dh
		mov    %al,_0de8df_data
		xor    %dl,%dl
		mov    $0x000001,%esi
		mov    $0x0000ad,%cl
		mov    $0x0000ad,%ch
		jmp    _0298a3_jump

	_0298a3_jump:
		test   %dh,%dh
		xor    %ebx,%ebx
		mov    $0x000003,%bl
		mov    $0x000003,%al
		mov    %si,_0de2a2_data
		mov    %ax,_0de2a6_data
		mov    $_0de2a2_data,%eax
		mov    %cx,_0de2a4_data
		xor    %ecx,%ecx
		xor    %eax,%eax
		nop
		cmp    _0de2a2_data,%cx
		nop
		nop
		mov    $0x000001,%ah
		sub    %ah,%dh
		mov    %ah,_0de8e0_data(%ebx)
		inc    %dl
		cmp    $0x00001a,%dl
		nop
		nop
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0298e8_jump:
		push   %edx
		mov    _0de2b8_data,%dx
		xor    %al,%al
		test   %dx,%dx
		je     _029901_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _0656b4_func

	_029901_jump:
		test   %al,%al
		je     _02990e_jump
		movw   $0x000102,_0de2bc_data

	_02990e_jump:
		pop    %edx
		ret    



_029910_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x000100,%edx
		xor    %ah,%ah
		mov    %dx,_0de2bc_data
		mov    %ah,_0de8fc_data
		call   _029bfc_func
		cmp    $0x000001,%al
		jne    _029b98_jump
		call   _029c38_func
		cmp    $0x000001,%al
		jne    _029b98_jump
		call   _029844_func
		test   %al,%al
		je     _029b8d_jump
		mov    $0x000030,%esi
		mov    $0x000035,%edi
		mov    $0x00003c,%ebp
		mov    %dx,_0de2bc_data
		call   _029880_func
		mov    $_0de258_data,%edx
		mov    $0x00008a,%eax
		mov    $0x000043,%ecx
		call   _065650_func
		mov    %ax,_0de2b8_data
		mov    %esi,_0de272_data
		mov    %edi,_0de266_data
		mov    %ebp,_0de284_data
		mov    %ecx,_0de28a_data
		xor    %edx,%edx
		mov    $0x00004e,%esi
		mov    %edx,_0de29c_data
		mov    %edx,_0de278_data
		mov    $0x00001a,%edx
		mov    $0x000059,%edi
		mov    %edx,_0de26c_data
		mov    _0de258_data,%edx
		mov    $0x00005b,%ebp
		mov    %edx,_0de248_data
		add    $0x000030,%edx
		test   %ax,%ax
		sete   %bl
		mov    %edx,_0de254_data
		mov    _0de258_data,%edx
		mov    %ax,_0de2a0_data
		add    $0x000035,%edx
		mov    %ax,_0de27c_data
		mov    %edx,_0de24c_data
		mov    _0de258_data,%edx
		mov    %ax,_0de276_data
		add    $0x00003c,%edx
		mov    %ax,_0de26a_data
		mov    %edx,_0de244_data
		mov    _0de258_data,%edx
		mov    %ax,_0de288_data
		add    $0x00001a,%edx
		mov    %ax,_0de270_data
		mov    %edx,_0de23c_data
		mov    _0de258_data,%edx
		mov    %ax,_0de28e_data
		add    %ecx,%edx
		mov    %ax,_0de264_data
		mov    %edx,_0de238_data
		mov    _0de258_data,%edx
		mov    %esi,_0de260_data
		add    %esi,%edx
		mov    %ax,_0de282_data
		mov    %edx,_0de240_data
		mov    _0de258_data,%edx
		mov    %edi,_0de27e_data
		add    %edi,%edx
		mov    %ax,_0de29a_data
		mov    %edx,_0de230_data
		mov    _0de258_data,%edx
		mov    %ax,_0de294_data
		add    %ebp,%edx
		mov    $0x000064,%eax
		mov    %edx,_0de250_data
		mov    _0de258_data,%edx
		mov    %ebp,_0de296_data
		add    %eax,%edx
		mov    %eax,_0de290_data
		mov    %edx,_0de234_data
		test   %bl,%bl
		je     _029ac4_jump
		movw   $0x000101,_0de2bc_data
		jmp    _029ba1_jump

	_029ac4_jump:
		call   _029844_func
		cmp    $0x000001,%al
		ja     _029b3e_jump
		jmp    _029b53_jump

	_029ad6_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    %edx,%eax
		call   _02a5f8_func
		cmp    $0x000001,%al
		jne    _029b35_jump
		mov    %edx,%eax
		call   _02a488_func
		cmp    $0x000001,%al
		jne    _029b35_jump
		mov    %edx,%eax
		call   _02a4d0_func
		test   %al,%al
		je     _029b35_jump
		mov    %edx,%eax
		mov    %cl,_0de8fc_data
		call   _02a88c_func
		cmp    $0x000001,%al
		jne    _029b35_jump
		mov    $0x000001,%eax
		call   _02a4b8_func
		test   %al,%al
		jne    _029b35_jump
		mov    %cl,_0cf41e_data
		call   _06af80_func
		cmp    _0cf41e_data,%cl
		jne    _029b2f_jump
		mov    %bl,%bh

	_029b2f_jump:
		mov    %cl,_0cf41e_data

	_029b35_jump:
		inc    %bl
		cmp    $0x00001a,%bl
		jb     _029b42_jump
		jmp    _029b46_jump

	_029b3e_jump:
		xor    %bh,%bh
		xor    %cl,%cl

	_029b42_jump:
		test   %bh,%bh
		je     _029ad6_jump

	_029b46_jump:
		test   %bh,%bh
		je     _029b53_jump
		xor    %eax,%eax
		mov    %bh,%al
		call   _029550_func

	_029b53_jump:
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a488_func
		test   %al,%al
		jmp    _029b70_jump

	_029b70_jump:
		call   _029530_func
		and    $_0000ff_case,%eax
		add    $0x000041,%eax
		push   %eax
		push   $_0c09b4_data
		call   _07f8fc_func
		add    $0x000008,%esp
		jmp    _029ba1_jump

	_029b8d_jump:
		movw   $0x000001,_0de2bc_data
		jmp    _029ba1_jump

	_029b98_jump:
		movw   $0x00000c,_0de2bc_data

	_029ba1_jump:
		cmpw   $0x000100,_0de2bc_data
		jne    _029be6_jump
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a5f8_func
		test   %al,%al
		jne    _029bca_jump
		movw   $0x000001,_0de2bc_data
		jmp    _029be6_jump

	_029bca_jump:
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a88c_func
		test   %al,%al
		jne    _029be6_jump
		movw   $0x000008,_0de2bc_data

	_029be6_jump:
		cmpw   $0x000100,_0de2bc_data
		sete   %al
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029bfc_func:
		push   %ebx
		push   %edx
		mov    $0x001500,%edx
		mov    $_0de2a2_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0de2a2_data
		mov    %bx,_0de2a4_data
		mov    %bx,_0de2a6_data
		call   _029570_func
		cmpw   $0x000000,_0de2a4_data
		mov    $0x000001,%al
		nop
		and    $_0000ff_case,%eax
		pop    %edx
		pop    %ebx
		ret    



_029c38_func:
		push   %ebx
		push   %edx
		mov    $0x00150c,%edx
		mov    $_0de2a2_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0de2a2_data
		mov    %bx,_0de2a4_data
		call   _029570_func
		xor    %eax,%eax
		mov    _0de2a4_data,%ax
		mov    %eax,%edx
		sar    $0x000004,%edx
		and    $_0000ff_case,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    _0de2a4_data,%ax
		shl    $0x000002,%edx
		xor    %ah,%ah
		and    $0x00ffff,%eax
		add    %edx,%eax
		mov    %ax,_0de2ba_data
		cmp    $0x0000d2,%ax
		mov    $0x000001,%al
		nop
		and    $_0000ff_case,%eax
		pop    %edx
		pop    %ebx
		ret    



_029ca4_func:
		push   %ecx
		push   %esi
		mov    %dl,%cl
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    %eax,%edx
		lea    0x000000(,%eax,8),%esi
		xor    %eax,%edx
		mov    %cl,%dl
		add    %eax,%esi
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		add    %esi,%eax
		mov    %bl,%dl
		add    %edx,%eax
		sub    $0x000096,%eax
		pop    %esi
		pop    %ecx
		ret    



_029cec_func:
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		and    $_0000ff_case,%ecx
		mov    %dl,%al
		shl    $0x000010,%ecx
		shl    $0x000008,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    %bl,%cl
		add    %ecx,%eax
		pop    %ecx
		ret    



_029d0c_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %eax,%edx
		mov    $0x001194,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esi,%edx
		mov    %al,(%edi)
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00004b,%esi
		mov    %edx,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ebx,%edx
		mov    %al,0x000000(%ebp)
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %dl,(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_029d4c_func:
		push   %esi
		sub    $0x000004,%esp
		mov    %ecx,%esi
		mov    %eax,%ecx
		sar    $0x000010,%ecx
		and    $_0000ff_case,%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%cl
		mov    %cl,(%edx)
		mov    %eax,%edx
		sar    $0x000008,%edx
		and    $_0000ff_case,%edx
		mov    %dl,(%ebx)
		mov    %al,(%esi)
		add    $0x000004,%esp
		pop    %esi
		ret    



_029d7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		mov    %esp,%edx
		call   _029d0c_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000008(%esp),%bl
		mov    0x000004(%esp),%dl
		mov    (%esp),%al
		call   _029cec_func
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029db0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		mov    %esp,%edx
		call   _029d4c_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000008(%esp),%bl
		mov    0x000004(%esp),%dl
		mov    (%esp),%al
		call   _029ca4_func
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029de4_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    $0x000085,%ebx
		mov    _0de270_data,%dx
		mov    _0de26c_data,%eax
		call   _0295f4_func
		mov    _0de270_data,%cx
		mov    _0de26c_data,%ebx
		xor    %eax,%eax
		mov    _0de23c_data,%edx
		mov    (%esp),%al
		call   _029590_func
		mov    %ax,_0de2bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029e30_func:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		call   _029de4_func
		mov    %ax,_0de2bc_data
		mov    %edx,%eax
		call   _029de4_func
		mov    %ax,_0de2bc_data
		pop    %edx
		ret    



_029e54_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    $0x000088,%ebx
		mov    _0de270_data,%dx
		mov    _0de26c_data,%eax
		call   _0295f4_func
		mov    _0de270_data,%cx
		mov    _0de26c_data,%ebx
		xor    %eax,%eax
		mov    _0de23c_data,%edx
		mov    (%esp),%al
		call   _029590_func
		mov    %ax,_0de2bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029ea0_func:
		push   %esi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		mov    %ebx,%esi
		mov    $0x000084,%ebx
		mov    _0de270_data,%dx
		mov    _0de26c_data,%eax
		call   _0295f4_func
		lgs    _0de26c_data,%ebx
		mov    (%esp),%al
		mov    %al,%gs:0x00000d(%ebx)
		mov    _0de23c_data,%edx
		mov    %ecx,%gs:0x000012(%ebx)
		xor    %eax,%eax
		mov    %gs,%ecx
		mov    0x000004(%esp),%al
		mov    %esi,%gs:0x00000e(%ebx)
		call   _029590_func
		mov    %ax,_0de2bc_data
		add    $0x000008,%esp
		pop    %esi
		ret    



_029ef8_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000002
		mov    $0x00000c,%ecx
		mov    _0de230_data,%ebx
		mov    _0de27c_data,%dx
		mov    _0de278_data,%eax
		call   _029628_func
		mov    _0de282_data,%gs
		xor    %eax,%eax
		mov    _0de27e_data,%ebx
		mov    (%esp),%al
		mov    _0de27c_data,%cx
		movb   $0x000001,%gs:(%ebx)
		mov    _0de248_data,%edx
		movb   $0x000000,%gs:0x000001(%ebx)
		mov    _0de278_data,%ebx
		call   _029590_func
		mov    %ax,_0de2bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029f60_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000002
		mov    $0x00000c,%ecx
		mov    _0de230_data,%ebx
		mov    _0de27c_data,%dx
		mov    _0de278_data,%eax
		call   _029628_func
		mov    _0de282_data,%gs
		xor    %eax,%eax
		mov    _0de27e_data,%ebx
		mov    (%esp),%al
		mov    _0de27c_data,%cx
		movb   $0x000001,%gs:(%ebx)
		mov    _0de248_data,%edx
		movb   $0x000001,%gs:0x000001(%ebx)
		mov    _0de278_data,%ebx
		call   _029590_func
		mov    %ax,_0de2bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029fc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000001
		mov    $0x00000c,%ecx
		mov    _0de254_data,%ebx
		mov    _0de27c_data,%dx
		mov    _0de278_data,%eax
		call   _029628_func
		lgs    _0de272_data,%eax
		mov    _0de27c_data,%cx
		mov    _0de278_data,%ebx
		movb   $0x000000,%gs:(%eax)
		xor    %eax,%eax
		mov    _0de248_data,%edx
		mov    (%esp),%al
		call   _029590_func
		mov    %ax,_0de2bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a024_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000001
		mov    $0x00000c,%ecx
		mov    _0de254_data,%ebx
		mov    _0de27c_data,%dx
		mov    _0de278_data,%eax
		call   _029628_func
		lgs    _0de272_data,%eax
		mov    _0de27c_data,%cx
		mov    _0de278_data,%ebx
		movb   $0x000005,%gs:(%eax)
		xor    %eax,%eax
		mov    _0de248_data,%edx
		mov    (%esp),%al
		call   _029590_func
		mov    %ax,_0de2bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a080_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%esi
		mov    %ebx,%ebp
		mov    %ecx,%edi
		push   $0x000007
		mov    $0x000003,%ecx
		mov    _0de24c_data,%ebx
		mov    _0de27c_data,%dx
		mov    _0de278_data,%eax
		call   _029628_func
		lgs    _0de266_data,%eax
		movb   $0x00000a,%gs:(%eax)
		movb   $0x000000,%gs:0x000001(%eax)
		mov    _0de27c_data,%cx
		movb   $0x000000,%gs:0x000002(%eax)
		mov    _0de278_data,%ebx
		movl   $0x000000,%gs:0x000003(%eax)
		xor    %eax,%eax
		mov    _0de248_data,%edx
		mov    (%esp),%al
		call   _029590_func
		mov    %ax,_0de2bc_data
		lgs    _0de266_data,%edx
		mov    %gs:0x000001(%edx),%bl
		mov    %bl,(%esi)
		mov    %gs:0x000002(%edx),%bl
		mov    %bl,0x000000(%ebp)
		mov    %gs:0x000003(%edx),%edx
		mov    %edx,(%edi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_02a110_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		mov    %ebx,%edi
		mov    %ecx,%esi
		push   $0x000007
		mov    $0x000003,%ecx
		mov    _0de244_data,%ebx
		mov    _0de27c_data,%dx
		mov    _0de278_data,%eax
		call   _029628_func
		lgs    _0de284_data,%eax
		movb   $0x00000b,%gs:(%eax)
		mov    (%esp),%dl
		movl   $0x000000,%gs:0x000002(%eax)
		mov    _0de27c_data,%cx
		movb   $0x000000,%gs:0x000006(%eax)
		mov    _0de278_data,%ebx
		mov    %dl,%gs:0x000001(%eax)
		xor    %eax,%eax
		mov    _0de248_data,%edx
		mov    0x000004(%esp),%al
		call   _029590_func
		mov    %ax,_0de2bc_data
		lgs    _0de284_data,%ebx
		mov    %gs:0x000002(%ebx),%edx
		mov    %edx,(%edi)
		mov    %gs:0x000006(%ebx),%dl
		mov    %dl,(%esi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_02a19c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %edx,%edi
		mov    %ebx,%esi
		mov    %ecx,%ebp
		push   $0x00000b
		mov    $0x000003,%ecx
		mov    _0de240_data,%ebx
		mov    _0de27c_data,%dx
		mov    _0de278_data,%eax
		call   _029628_func
		lgs    _0de260_data,%eax
		mov    _0de27c_data,%cx
		mov    _0de278_data,%ebx
		movb   $0x00000c,%gs:(%eax)
		xor    %eax,%eax
		mov    _0de248_data,%edx
		mov    0x000004(%esp),%al
		call   _029590_func
		mov    %ax,_0de2bc_data
		mov    _0de264_data,%gs
		mov    %eax,%ebx
		mov    _0de260_data,%eax
		mov    %gs:0x000002(%eax),%dl
		xor    %ecx,%ecx
		and    $0x0000f0,%dl
		mov    %dl,%cl
		sar    $0x000004,%ecx
		lea    0x000000(,%ecx,4),%edx
		add    %ecx,%edx
		mov    %gs:0x000002(%eax),%cl
		and    $0x00000f,%cl
		mov    %cl,(%esp)
		xor    %ecx,%ecx
		add    %edx,%edx
		mov    (%esp),%cl
		add    %ecx,%edx
		mov    %dl,(%edi)
		mov    %gs:0x000004(%eax),%dl
		mov    %dl,(%esi)
		mov    %gs:0x000005(%eax),%dl
		mov    %dl,0x000000(%ebp)
		mov    0x000018(%esp),%edx
		mov    %gs:0x000006(%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02a254_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%esi
		push   $0x000005
		mov    $0x000003,%ecx
		mov    _0de254_data,%ebx
		mov    _0de27c_data,%dx
		mov    _0de278_data,%eax
		call   _029628_func
		lgs    _0de272_data,%eax
		mov    _0de27c_data,%cx
		movb   $0x000006,%gs:(%eax)
		mov    _0de278_data,%ebx
		movl   $0x000000,%gs:0x000001(%eax)
		xor    %eax,%eax
		mov    _0de248_data,%edx
		mov    (%esp),%al
		call   _029590_func
		mov    %ax,_0de2bc_data
		lgs    _0de272_data,%edx
		mov    %gs:0x000001(%edx),%edx
		mov    %edx,(%esi)
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02a3f0_func:
		push   %ebx
		mov    %al,%bl
		xor    %ah,%ah
		mov    %dl,%al
		or     $0x000015,%ah
		mov    %ax,_0de2a2_data
		mov    _0de234_data,%eax
		shr    $0x000010,%eax
		mov    %ax,_0de2b4_data
		mov    _0de234_data,%ax
		mov    %ax,_0de2a4_data
		xor    %ah,%ah
		mov    %bl,%al
		mov    %ax,_0de2a6_data
		mov    $_0de2a2_data,%eax
		call   _029570_func
		mov    _0de2bc_data,%ax
		pop    %ebx
		ret    



_02a438_func:
		push   %edx
		sub    $0x000004,%esp
		mov    %esp,%edx
		and    $_0000ff_case,%eax
		call   _02a254_func
		mov    %ax,_0de2bc_data
		mov    (%esp),%eax
		add    $0x000004,%esp
		pop    %edx
		ret    



_02a458_func:
		and    $_0000ff_case,%eax
		call   _02a438_func
		test   $0x000001,%al
		sete   %al
		and    $_0000ff_case,%eax
		ret    



_02a470_func:
		and    $_0000ff_case,%eax
		call   _02a438_func
		test   $0x000002,%al
		sete   %al
		and    $_0000ff_case,%eax
		ret    



_02a488_func:
		and    $_0000ff_case,%eax
		call   _02a438_func
		test   $0x000010,%al
		setne  %al
		and    $_0000ff_case,%eax
		ret    



_02a4b8_func:
		and    $_0000ff_case,%eax
		testb  $0x000040,_0de87b_data(%eax)
		sete   %al
		and    $_0000ff_case,%eax
		ret    



_02a4d0_func:
		and    $_0000ff_case,%eax
		call   _02a438_func
		test   $0x000008,%ah
		jne    _02a4f0_jump
		cmpw   $0x000100,_0de2bc_data
		jne    _02a4f0_jump
		mov    $0x000001,%eax
		ret    

	_02a4f0_jump:
		xor    %eax,%eax
		ret    



_02a4f4_func:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		call   _02a470_func
		cmp    $0x000001,%al
		jne    _02a513_jump
		mov    %edx,%eax
		call   _029ef8_func
		mov    %ax,_0de2bc_data
		pop    %edx
		ret    

	_02a513_jump:
		movw   $0x000100,_0de2bc_data
		pop    %edx
		ret    



_02a520_func:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		call   _02a470_func
		test   %al,%al
		jne    _02a54a_jump
		mov    %edx,%eax
		call   _02a458_func
		cmp    $0x000001,%al
		jne    _02a54a_jump
		mov    %edx,%eax
		call   _029f60_func
		mov    %ax,_0de2bc_data
		pop    %edx
		ret    

	_02a54a_jump:
		movw   $0x000100,_0de2bc_data
		pop    %edx
		ret    



_02a558_func:
		push   %ebx
		push   %edx
		mov    %al,%dl
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    %ebx,%eax
		call   _02a458_func
		cmp    $0x000001,%al
		jne    _02a5a2_jump
		mov    %ebx,%eax
		call   _02a470_func
		cmp    $0x000001,%al
		jne    _02a583_jump
		mov    %ebx,%eax
		call   _029ef8_func
		mov    %ax,_0de2bc_data

	_02a583_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _029fc8_func
		mov    %ax,_0de2bc_data

	_02a592_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _02a458_func
		cmp    $0x000001,%al
		je     _02a592_jump
		pop    %edx
		pop    %ebx
		ret    

	_02a5a2_jump:
		movw   $0x000100,_0de2bc_data
		pop    %edx
		pop    %ebx
		ret    



_02a5b0_func:
		push   %ebx
		push   %edx
		mov    %al,%dl
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    %ebx,%eax
		call   _02a458_func
		test   %al,%al
		jne    _02a5e0_jump
		mov    %ebx,%eax
		call   _02a024_func
		mov    %ax,_0de2bc_data

	_02a5d0_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _02a458_func
		test   %al,%al
		je     _02a5d0_jump
		pop    %edx
		pop    %ebx
		ret    

	_02a5e0_jump:
		movw   $0x000100,_0de2bc_data
		pop    %edx
		pop    %ebx
		ret    

	_02a5ec_jump:
		xor    %al,%al

	_02a5ee_jump:
		add    $0x00001c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a5f8_func:
		and    $_0000ff_case,%eax
		mov    _0de8e0_data(%eax),%al
		ret    



_02a604_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		xor    %eax,%eax
		mov    (%esp),%al
		call   _02a88c_func
		cmp    $0x000001,%al
		jne    _02a6f4_jump
		cmp    _0de3c1_data,%dl
		jb     _02a6db_jump
		cmp    _0de3c2_data,%dl
		ja     _02a6db_jump
		movzbl %dl,%esi
		mov    %esi,%eax
		call   _02a4b8_func
		cmp    $0x000001,%al
		jne    _02a6e0_jump
		xor    %eax,%eax
		mov    %bl,%al
		movzbl %cl,%edi
		shl    $0x000008,%eax
		add    %eax,%edi
		lea    0x000000(,%esi,4),%eax
		shl    $0x000008,%edi
		mov    _0de3c7_data(%eax),%esi
		mov    _0de3c2_data,%bh
		add    %esi,%edi
		cmp    %bh,%dl
		jae    _02a678_jump
		mov    _0de3cb_data(%eax),%eax
		jmp    _02a67d_jump

	_02a678_jump:
		mov    _0de3c3_data,%eax

	_02a67d_jump:
		cmp    %eax,%edi
		jge    _02a6eb_jump
		movzbl (%esp),%esi
		mov    %esi,%eax
		call   _029de4_func
		mov    %ax,_0de2bc_data
		and    $_0000ff_case,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		sub    %ebx,%eax
		xor    %ebx,%ebx
		shl    $0x000002,%eax
		mov    %cl,%bl
		add    %eax,%ebx
		xor    %ecx,%ecx
		lea    0x000000(,%ebx,4),%eax
		mov    %dl,%cl
		add    %ebx,%eax
		mov    $0x000001,%edx
		mov    %eax,%ebx
		shl    $0x000004,%eax
		mov    _0de6eb_data(,%ecx,4),%ecx
		sub    %ebx,%eax
		mov    %edi,%ebx
		sub    %eax,%ecx
		mov    %esi,%eax
		call   _029ea0_func
		mov    %ax,_0de2bc_data
		jmp    _02a6f4_jump

	_02a6db_jump:
		cmp    $0x000064,%dl
		jne    _02a6eb_jump

	_02a6e0_jump:
		movw   $0x000007,_0de2bc_data
		jmp    _02a6f4_jump

	_02a6eb_jump:
		movw   $0x000008,_0de2bc_data

	_02a6f4_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    



_02a6fc_func:
		and    $_0000ff_case,%eax
		call   _029de4_func
		mov    %ax,_0de2bc_data
		ret    



_02a710_func:
		and    $_0000ff_case,%eax
		call   _029e30_func
		mov    %ax,_0de2bc_data
		ret    



_02a724_func:
		and    $_0000ff_case,%eax
		call   _029e54_func
		mov    %ax,_0de2bc_data
		ret    



_02a774_func:
		and    $_0000ff_case,%edx
		and    $_0000ff_case,%eax
		call   _02a3f0_func
		mov    %ax,_0de2bc_data
		cmp    $0x000100,%ax
		jne    _02a7a9_jump
		mov    _0de234_data,%eax
		shr    $0x00000c,%eax
		and    $0x0000f0,%al
		mov    %eax,%edx
		mov    _0de234_data,%eax
		and    $0x00ffff,%eax
		add    %edx,%eax
		ret    

	_02a7a9_jump:
		xor    %eax,%eax
		ret    



_02a7ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%ch
		call   _029530_func
		mov    $0x000084,%ebx
		mov    _0de270_data,%dx
		mov    %al,%cl
		mov    _0de26c_data,%eax
		call   _0295f4_func
		mov    _0de270_data,%gs
		xor    %eax,%eax
		mov    _0de26c_data,%ebx
		mov    %ch,%al
		movb   $0x000001,%gs:0x00000d(%ebx)
		mov    _0de3c7_data(,%eax,4),%edx
		mov    %edx,%gs:0x00000e(%ebx)
		mov    _0de55b_data(,%eax,4),%eax
		mov    %eax,%gs:0x000012(%ebx)
		xor    %eax,%eax
		mov    _0de23c_data,%edx
		mov    %cl,%al
		mov    %gs,%ecx
		call   _029590_func
		mov    %ax,_0de2bc_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a814_func:
		call   _02a81c_func
		lea    0x000000(%eax),%eax



_02a81c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _029530_func
		mov    $0x000085,%ebx
		mov    _0de270_data,%dx
		mov    %al,%cl
		mov    _0de26c_data,%eax
		call   _0295f4_func
		movzbl %cl,%esi
		mov    _0de270_data,%ax
		mov    _0de26c_data,%ebx
		mov    _0de23c_data,%edx
		mov    %eax,%ecx
		mov    %esi,%eax
		call   _029590_func
		mov    %ax,_0de2bc_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a868_func:
		push   %edx
		mov    %al,%dl
		call   _02a81c_func
		xor    %eax,%eax
		mov    %dl,%al
		call   _02a7ac_func
		pop    %edx
		ret    



_02a87c_func:
		xor    %ah,%ah
		mov    %ah,_0de8fc_data
		and    $_0000ff_case,%eax
		lea    0x000000(%eax),%eax



_02a88c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00001c,%esp
		mov    %al,0x00000c(%esp)
		mov    $0x000001,%al
		cmpb   $0x000000,_0de8fc_data
		jne    _02a5ee_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		mov    $_0000ff_case,%dl
		call   _02a024_func
		mov    %ax,_0de2bc_data

	_02a8b9_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		call   _02a4d0_func
		test   %al,%al
		jne    _02a8cc_jump
		dec    %dl
		jne    _02a8b9_jump

	_02a8cc_jump:
		movzbl 0x00000c(%esp),%esi
		mov    %esi,%eax
		call   _02a4d0_func
		cmp    $0x000001,%al
		jne    _02a5ec_jump
		mov    $0x00051f,%ebx
		mov    $_0de3c0_data,%eax
		xor    %edx,%edx
		lea    0x000004(%esp),%ecx
		call   _07fcc0_func
		lea    0x000014(%esp),%ebx
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _02a080_func
		mov    %ax,_0de2bc_data
		mov    0x000018(%esp),%al
		mov    %al,_0de3c1_data
		mov    0x000014(%esp),%al
		mov    %al,_0de3c2_data
		mov    0x000004(%esp),%eax
		mov    %eax,_0de3c3_data
		mov    0x000014(%esp),%al
		mov    0x000018(%esp),%dl
		inc    %al
		mov    %dl,0x000010(%esp)
		sub    %dl,%al
		mov    0x000014(%esp),%dh
		mov    %al,_0de3c0_data
		cmp    %dh,%dl
		ja     _02a986_jump

	_02a942_jump:
		movzbl 0x000010(%esp),%esi
		lea    0x000008(%esp),%ecx
		xor    %eax,%eax
		mov    %esp,%ebx
		mov    0x00000c(%esp),%al
		mov    %esi,%edx
		call   _02a110_func
		mov    %ax,_0de2bc_data
		mov    (%esp),%eax
		mov    0x000010(%esp),%bl
		mov    %eax,_0de3c7_data(,%esi,4)
		mov    0x000008(%esp),%al
		inc    %bl
		mov    %al,_0de87b_data(%esi)
		mov    %bl,0x000010(%esp)
		cmp    _0de3c2_data,%bl
		jbe    _02a942_jump

	_02a986_jump:
		mov    _0de3c3_data,%eax
		mov    %eax,_0de557_data
		xor    %eax,%eax
		mov    _0de3c2_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0de3c3_data,%eax
		mov    %eax,_0de3cb_data(%edx)
		mov    _0de3c1_data,%bl
		cmp    _0de3c2_data,%bl
		ja     _02aa0b_jump

	_02a9b7_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    _0de3cb_data(,%edx,4),%eax
		call   _029db0_func
		mov    %eax,%ecx
		mov    _0de3c7_data(,%edx,4),%eax
		call   _029db0_func
		sub    %eax,%ecx
		mov    _0de3cb_data(,%edx,4),%eax
		mov    %ecx,_0de55b_data(,%edx,4)
		call   _029db0_func
		mov    %eax,%ecx
		mov    _0de3c7_data(,%edx,4),%eax
		call   _029db0_func
		sub    %eax,%ecx
		mov    %ecx,_0de6eb_data(,%edx,4)
		inc    %bl
		cmp    _0de3c2_data,%bl
		jbe    _02a9b7_jump

	_02aa0b_jump:
		xor    %eax,%eax
		mov    _0de3c2_data,%al
		xor    %edx,%edx
		mov    %edx,_0de3cb_data(,%eax,4)
		mov    _0de3c3_data,%eax
		call   _029db0_func
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0de3c1_data,%al
		mov    _0de3c7_data(,%eax,4),%eax
		call   _029db0_func
		sub    %eax,%edx
		mov    %edx,%eax
		call   _029d7c_func
		mov    %eax,_0de557_data
		mov    $0x000001,%al
		mov    _0de2bc_data,%dx
		mov    %al,_0de8fc_data
		cmp    $0x000100,%dx
		sete   %al
		add    $0x00001c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02aa70_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02aaa0_jump
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _02aaa0_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02aaa0_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000002,%al
		jb     _02aabf_jump
		jbe    _02aad3_jump
		cmp    $0x000014,%al
		jne    _02aad3_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		jmp    _02aad3_jump

	_02aabf_jump:
		test   %al,%al
		jne    _02aacc_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02aad3_jump

	_02aacc_jump:
		orb    $0x000008,0x000081(%ecx)

	_02aad3_jump:
		xor    %eax,%eax
		mov    0x000028(%ecx),%dx
		mov    0x000068(%ecx),%al
		mov    _0ce06c_data,%bx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    _0ce0ac_data,%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0ce084_data,%ax
		add    %eax,%eax
		sub    %eax,%edx
		movswl %dx,%ebx
		mov    %edx,%eax
		cmp    $0xfffffff6,%ebx
		jge    _02ab49_jump
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		jne    _02ab38_jump
		cmpb   $0x000006,0x00006c(%ecx)
		je     _02ab38_jump
		mov    %dh,%al
		mov    $0x000001,%ebx
		or     $0x000008,%al
		mov    $0x000004,%edx
		mov    %al,0x000081(%ecx)
		mov    %ecx,%eax
		call   _060460_func
		jmp    _02ab9c_jump

	_02ab38_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _02ab9c_jump
		movw   $0x000003,0x000040(%ecx)
		jmp    _02ab9c_jump

	_02ab49_jump:
		cmp    $0x00000a,%dx
		jle    _02ab8f_jump
		mov    0x000081(%ecx),%bh
		test   $0x000008,%bh
		je     _02ab7e_jump
		cmpb   $0x000006,0x00006c(%ecx)
		je     _02ab7e_jump
		mov    %bh,%dl
		mov    %ecx,%eax
		and    $0x0000f7,%dl
		mov    $0x000001,%ebx
		mov    %dl,0x000081(%ecx)
		mov    $0x000003,%edx
		call   _060460_func
		jmp    _02ab9c_jump

	_02ab7e_jump:
		testb  $0x000008,0x000081(%ecx)
		jne    _02ab9c_jump
		movw   $0x00fffd,0x000040(%ecx)
		jmp    _02ab9c_jump

	_02ab8f_jump:
		jg     _02ab9c_jump
		cmp    $0xfffffff6,%ebx
		jl     _02ab9c_jump
		movw   $0x000000,0x000040(%ecx)

	_02ab9c_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _02abac_jump
		mov    $0x000010,%ebx
		jmp    _02abb1_jump

	_02abac_jump:
		mov    $0xfffffff0,%ebx

	_02abb1_jump:
		xor    %edx,%edx
		mov    0x000068(%ecx),%dl
		mov    %ecx,%eax
		add    %ebx,%edx
		xor    %ebx,%ebx
		movswl %dx,%edx
		mov    0x000069(%ecx),%bl
		call   _01d6f4_func
		test   %ax,%ax
		je     _02abd2_jump
		movw   $0x000000,0x000040(%ecx)

	_02abd2_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _02ac13_jump
		cmpb   $0x000003,0x00006c(%ecx)
		jne    _02ac13_jump
		mov    0x00003c(%ecx),%edx
		mov    0x00002c(%ecx),%ebx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jl     _02ac39_jump
		mov    $0x000001,%ebx
		mov    0x00003c(%ecx),%edx
		movw   $0x000000,0x000042(%ecx)
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000002,%edx
		movw   $0x000000,0x000052(%ecx)
		call   _060460_func
		jmp    _02ac39_jump

	_02ac13_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _02ac39_jump
		cmpb   $0x000006,0x00006c(%ecx)
		jne    _02ac39_jump
		cmpb   $0x00000f,0x00006b(%ecx)
		jbe    _02ac39_jump
		cmpw   $0x000001,0x000052(%ecx)
		jne    _02ac39_jump
		mov    %ecx,%eax
		call   _02b06c_func
		movw   $0x000002,0x000052(%ecx)

	_02ac39_jump:
		cmpw   $0x000000,0x000052(%ecx)
		je     _02ac57_jump
		mov    0x00007f(%ecx),%ah
		inc    %ah
		mov    %ah,0x00007f(%ecx)
		cmp    $0x000050,%ah
		jbe    _02ac57_jump
		movb   $0x000000,0x00007f(%ecx)
		movw   $0x000000,0x000052(%ecx)

	_02ac57_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ac5c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02ac8a_jump
		cmpb   $0x000002,0x00006c(%edx)
		jne    _02ac8a_jump
		movw   $0x00fff8,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%bh
		mov    %bh,0x000081(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_02ac8a_jump:
		mov    0x000070(%edx),%al
		cmp    $0x000002,%al
		jb     _02aca9_jump
		jbe    _02acbd_jump
		cmp    $0x000014,%al
		jne    _02acbd_jump
		mov    0x000056(%edx),%ax
		mov    %ax,0x000040(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x000042(%edx)
		jmp    _02acbd_jump

	_02aca9_jump:
		test   %al,%al
		jne    _02acb6_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _02acbd_jump

	_02acb6_jump:
		orb    $0x000008,0x000081(%edx)

	_02acbd_jump:
		cmpb   $0x000000,0x00006d(%edx)
		jne    _02acf2_jump
		cmpb   $0x000008,0x00006c(%edx)
		jne    _02acf2_jump
		cmpw   $0x000000,0x000052(%edx)
		jne    _02ace6_jump
		cmpb   $0x000006,0x00006b(%edx)
		jb     _02ace6_jump
		mov    %edx,%eax
		call   _02b06c_func
		movw   $0x000001,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_02ace6_jump:
		cmpb   $0x000001,0x00006b(%edx)
		jne    _02acf2_jump
		movw   $0x000000,0x000052(%edx)

	_02acf2_jump:
		pop    %edx
		pop    %ebx
		ret    



_02acf8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02ad2b_jump
		cmpb   $0x000002,0x00006c(%edx)
		jne    _02ad2b_jump
		movw   $0x00fff8,0x000042(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%edx)
		jmp    _02ae43_jump

	_02ad2b_jump:
		mov    0x000070(%edx),%al
		cmp    $0x000002,%al
		jb     _02ad4a_jump
		jbe    _02ad65_jump
		cmp    $0x000014,%al
		jne    _02ad65_jump
		mov    0x000056(%edx),%ax
		mov    %ax,0x000040(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x000042(%edx)
		jmp    _02ad65_jump

	_02ad4a_jump:
		test   %al,%al
		jne    _02ad57_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _02ad5e_jump

	_02ad57_jump:
		orb    $0x000008,0x000081(%edx)

	_02ad5e_jump:
		mov    %edx,%eax
		call   _0552b4_func

	_02ad65_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		mov    _0ce06c_data,%cx
		add    %ebx,%eax
		xor    %ebx,%ebx
		sub    %ecx,%eax
		mov    _0ce0ac_data,%bl
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce070_data,%si
		mov    _0ce0ad_data,%al
		mov    0x00002c(%edx),%di
		mov    %eax,%ecx
		xor    %eax,%eax
		add    %esi,%ecx
		mov    0x000069(%edx),%al
		sub    %edi,%ecx
		sub    %eax,%ecx
		mov    %ecx,%eax
		mov    0x000052(%edx),%cx
		test   %cx,%cx
		jne    _02ae2b_jump
		cmp    $0x000012,%ax
		jl     _02adfb_jump
		cmp    $0x000028,%ax
		jge    _02adc7_jump
		movw   $0x000001,0x000042(%edx)
		jmp    _02adff_jump

	_02adc7_jump:
		cmp    $0x000041,%ax
		jge    _02add5_jump
		movw   $0x000002,0x000042(%edx)
		jmp    _02adff_jump

	_02add5_jump:
		cmp    $0x000064,%ax
		jge    _02ade3_jump
		movw   $0x000003,0x000042(%edx)
		jmp    _02adff_jump

	_02ade3_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _02adec_jump
		neg    %eax

	_02adec_jump:
		cmp    $0x0000a5,%eax
		jge    _02adfb_jump
		movw   $0x000004,0x000042(%edx)
		jmp    _02adff_jump

	_02adfb_jump:
		mov    %cx,0x000042(%edx)

	_02adff_jump:
		testb  $0x000008,0x000081(%edx)
		je     _02ae0e_jump
		cmp    $0x00005a,%bx
		jg     _02ae1f_jump

	_02ae0e_jump:
		testb  $0x000008,0x000081(%edx)
		jne    _02ae43_jump
		movswl %bx,%eax
		cmp    $0xffffffa6,%eax
		jge    _02ae43_jump

	_02ae1f_jump:
		movw   $0x000001,0x000052(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ae2b_jump:
		cmp    $0x000078,%ax
		jle    _02ae3d_jump
		movw   $0x00fffe,0x000042(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ae3d_jump:
		movw   $0x00ffff,0x000042(%edx)

	_02ae43_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ae4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02aeb1_jump
		cmpb   $0x000002,0x00006c(%eax)
		jne    _02aeb1_jump
		cmpw   $0x000000,0x000052(%eax)
		jne    _02aeb1_jump
		cmpb   $0x000010,0x00006b(%eax)
		jb     _02aeb1_jump
		mov    $0x000001,%ebx
		mov    _0ce0b1_data,%dh
		movw   $0x000001,0x000052(%eax)
		mov    %bx,_0cf242_data
		test   %dh,%dh
		je     _02ae89_jump
		cmp    $0x000001,%dh
		jne    _02ae94_jump

	_02ae89_jump:
		movb   $0x000001,_0ce0c1_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ae94_jump:
		cmp    $0x000004,%dh
		je     _02ae9e_jump
		cmp    $0x000005,%dh
		jne    _02aee2_jump

	_02ae9e_jump:
		mov    $0x000002,%ch
		mov    $0x000001,%al
		mov    %ch,_0ce0b1_data
		mov    %al,_0ce0b0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02aeb1_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02aec7_jump
		cmpb   $0x00000b,0x00006c(%eax)
		jne    _02aec7_jump
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02aec7_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02aee2_jump
		cmpb   $0x000016,0x00006c(%eax)
		jne    _02aee2_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		call   _060460_func

	_02aee2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02aee8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _02b00c_jump

	_02af06_jump:
		cmpw   $0x00003e,0x000060(%ecx)
		jne    _02affc_jump
		mov    0x000024(%ecx),%ebx
		test   %ebx,%ebx
		jne    _02affc_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d444_func
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		or     %al,%dl
		xor    %eax,%eax
		mov    %dl,0x000081(%ecx)
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		movw   $0x00fffe,0x000042(%ecx)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		movsbw (%eax,%edx,8),%ax
		testb  $0x000008,0x000081(%ecx)
		je     _02af74_jump
		cwtl   
		jmp    _02af77_jump

	_02af74_jump:
		cwtl   
		neg    %eax

	_02af77_jump:
		mov    %ax,0x000040(%ecx)
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%esi
		mov    0x000028(%ecx),%ax
		sub    $0x000019,%esi
		mov    %ax,0x00003c(%ecx)
		mov    %esi,0x00002c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %ecx,%eax
		movb   $0x00000c,0x000072(%ecx)
		call   _060460_func
		mov    %ecx,%eax
		call   _01dc5c_func
		mov    0x000081(%ecx),%bl
		and    $0x0000bb,%bl
		mov    %bl,0x000081(%ecx)
		mov    %bl,%bh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bh
		mov    %ecx,%eax
		mov    %bh,0x000081(%ecx)
		call   _01f3d4_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02affc_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _02af06_jump

	_02b00c_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b014_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02b02b_jump
		cmpb   $0x000002,0x00006c(%eax)
		jne    _02b02b_jump
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_02b02b_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02b04c_jump
		cmpb   $0x00000b,0x00006c(%eax)
		jne    _02b04c_jump
		cmpw   $0x000000,0x000052(%eax)
		jne    _02b04c_jump
		movw   $0x000001,0x000052(%eax)
		call   _02aee8_func
		pop    %edx
		pop    %ebx
		ret    

	_02b04c_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02b067_jump
		cmpb   $0x000016,0x00006c(%eax)
		jne    _02b067_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		call   _060460_func

	_02b067_jump:
		pop    %edx
		pop    %ebx
		ret    



_02b06c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0cc7a0_data,%esi
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _02b222_jump

	_02b08e_jump:
		cmpw   $0x000077,0x000060(%esi)
		jne    _02b212_jump
		mov    0x000024(%esi),%ebx
		test   %ebx,%ebx
		jne    _02b212_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d444_func
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		cmpw   $0x000074,0x000060(%edi)
		jne    _02b10b_jump
		mov    _0ce084_data,%ax
		movw   $0x000001,0x000042(%esi)
		cmp    $0x000002,%ax
		jge    _02b0f2_jump
		movw   $0x000000,0x000040(%esi)
		jmp    _02b13f_jump

	_02b0f2_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _02b103_jump
		movw   $0x00ffff,0x000040(%esi)
		jmp    _02b13f_jump

	_02b103_jump:
		movw   $0x000001,0x000040(%esi)
		jmp    _02b13f_jump

	_02b10b_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		movw   $0x000000,0x000042(%esi)
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%al
		mov    0x000081(%esi),%dh
		movsbw (%ebx,%eax,8),%ax
		test   $0x000008,%dh
		je     _02b138_jump
		cwtl   
		jmp    _02b13b_jump

	_02b138_jump:
		cwtl   
		neg    %eax

	_02b13b_jump:
		mov    %ax,0x000040(%esi)

	_02b13f_jump:
		cmpw   $0x000074,0x000060(%edi)
		jne    _02b166_jump
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %edi,%eax
		call   _01d7e0_func
		jmp    _02b1a4_jump

	_02b166_jump:
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000009,%edx
		mov    %edi,%eax
		call   _01d7e0_func
		mov    $0x000010,%ebx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%eax
		mov    %bx,(%esp)
		add    $0x000020,%ecx
		add    %ebx,%eax
		mov    %cx,0x000008(%esp)
		mov    %ax,0x000004(%esp)

	_02b1a4_jump:
		mov    0x000002(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000068(%esi),%al
		sub    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x000006(%esp),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000074(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		sub    %ebx,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x000081(%esi),%bh
		mov    0x00002c(%esi),%ax
		or     $0x000004,%bh
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f3d4_func
		mov    %edi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01dc5c_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02b212_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _02b08e_jump

	_02b222_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b22c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000076(%eax),%al
		cmp    0x000077(%ecx),%al
		je     _02b26a_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _02b286_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _02b286_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    0x000081(%ecx),%bh
		movw   $0x000000,0x000040(%ecx)
		or     $0x000010,%bh
		mov    %bh,0x000081(%ecx)
		jmp    _02b286_jump

	_02b26a_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d43c_func
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d434_func
		orb    $0x000010,0x000081(%ecx)

	_02b286_jump:
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000042(%ecx)
		test   $0x000008,%al
		jne    _02b2a2_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _02b2b0_jump

	_02b2a2_jump:
		test   $0x000008,%al
		je     _02b2b7_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx

	_02b2b0_jump:
		mov    %ecx,%eax
		call   _060460_func

	_02b2b7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b2bc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e7ac_func
		mov    _0ce0d0_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _02b2dc_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02b2e5_jump

	_02b2dc_jump:
		jge    _02b2e5_jump
		orb    $0x000008,0x000081(%ecx)

	_02b2e5_jump:
		cmpb   $0x000000,0x000076(%ecx)
		je     _02b308_jump
		mov    0x00002c(%ecx),%edx
		mov    $0x000001,%ebx
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000004,%edx
		call   _060460_func
		pop    %ecx
		pop    %ebx
		ret    

	_02b308_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    0x000081(%ecx),%bl
		movb   $0x000000,0x000070(%ecx)
		and    $0x0000ef,%bl
		mov    %bl,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_02b32c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e7ac_func
		mov    _0ce0d0_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _02b34c_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02b355_jump

	_02b34c_jump:
		jge    _02b355_jump
		orb    $0x000008,0x000081(%ecx)

	_02b355_jump:
		cmpb   $0x000000,0x000076(%ecx)
		je     _02b38c_jump
		testb  $0x000008,0x000081(%ecx)
		je     _02b378_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _060460_func
		pop    %ecx
		pop    %ebx
		ret    

	_02b378_jump:
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _060460_func
		pop    %ecx
		pop    %ebx
		ret    

	_02b38c_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		andb   $0x0000ef,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_02b3a4_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02b3b2_jump
		cmpb   $0x000000,0x00006c(%eax)
		je     _02b3be_jump

	_02b3b2_jump:
		cmpb   $0x000001,0x00006d(%eax)
		jne    _02b3cd_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _02b3cd_jump

	_02b3be_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		call   _060460_func

	_02b3cd_jump:
		pop    %edx
		pop    %ebx
		ret    



_02b3d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpw   $0x000000,0x000052(%eax)
		jne    _02b3f5_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		call   _060460_func
		movb   $0x000000,0x00007f(%ecx)
		movw   $0x000001,0x000052(%ecx)

	_02b3f5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b400_func:
		mov    0x00005c(%eax),%ax
		and    $0x00ffff,%eax
		sar    $0x00000b,%eax
		ret    



_02b410_func:
		mov    0x00005c(%eax),%ax
		and    $0x000007,%ah
		ret    



_02b418_func:
		push   %ebx
		call   _02b410_func
		movswl %ax,%ebx
		movswl %dx,%eax
		add    %ebx,%eax
		shl    $0x000003,%eax
		add    $_092d66_data,%eax
		pop    %ebx
		ret    



_02b438_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %edx,%esi
		mov    0x000060(%eax),%dx
		cmp    $0x000064,%dx
		jb     _02b456_jump
		jbe    _02b475_jump
		cmp    $0x0000d9,%dx
		je     _02b475_jump
		jmp    _02b4ac_jump

	_02b456_jump:
		cmp    $0x000014,%dx
		jne    _02b4ac_jump
		mov    $0x000001,%cl
		xor    %bh,%bh
		mov    $_0000ff_case,%al
		mov    %bh,(%esp)
		mov    %cl,0x000001(%esp)
		mov    $0x000002,%ch
		mov    %al,0x000003(%esp)
		mov    %ch,0x000002(%esp)
		jmp    _02b4b7_jump

	_02b475_jump:
		movb   $0x000001,(%esp)
		cmpb   $0x00000b,0x00006c(%eax)
		jne    _02b4a5_jump
		cmpb   $0x000002,0x00006d(%eax)
		jne    _02b48c_jump
		movb   $0x000003,0x000001(%esp)
		jmp    _02b49e_jump

	_02b48c_jump:
		cmpb   $0x00000f,0x00006b(%eax)
		jbe    _02b499_jump
		movb   $0x000002,0x000001(%esp)
		jmp    _02b49e_jump

	_02b499_jump:
		movb   $_0000ff_case,0x000001(%esp)

	_02b49e_jump:
		movb   $_0000ff_case,0x000002(%esp)
		jmp    _02b4b7_jump

	_02b4a5_jump:
		movb   $_0000ff_case,0x000001(%esp)
		jmp    _02b4b7_jump

	_02b4ac_jump:
		xor    %dh,%dh
		mov    $_0000ff_case,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000001(%esp)

	_02b4b7_jump:
		xor    %eax,%eax

	_02b4b9_jump:
		movswl %ax,%edx
		mov    (%esp,%edx,1),%dl
		inc    %eax
		xor    %dh,%dh
		movswl %ax,%ebx
		cmp    %dx,%si
		sete   %dl
		mov    (%esp,%ebx,1),%cl
		mov    %edx,%edi
		cmp    $_0000ff_case,%cl
		je     _02b4db_jump
		cmp    $0x000001,%dx
		jne    _02b4b9_jump

	_02b4db_jump:
		mov    %edi,%eax
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02b560_func:
		push   %esi
		push   %edi
		mov    0x000014(%esp),%esi
		mov    0x000018(%esp),%edi
		sub    %esi,%eax
		sub    %edi,%edx
		add    %edi,%ecx
		mov    0x00000c(%esp),%edi
		add    %esi,%ebx
		cmp    %di,%ax
		jg     _02b5b2_jump
		cmp    0x000010(%esp),%dx
		jg     _02b5b2_jump
		movswl %ax,%esi
		movswl %bx,%eax
		add    %eax,%esi
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %esi,%eax
		jg     _02b5b2_jump
		movswl %dx,%eax
		movswl %cx,%edx
		add    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _02b5b2_jump
		mov    $0x000001,%eax
		pop    %edi
		pop    %esi
		ret    $0x000010

	_02b5b2_jump:
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		ret    $0x000010



_02b5bc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %ecx,(%esp)
		mov    0x000060(%eax),%ax
		cmp    $0x00004f,%ax
		jb     _02b6df_jump
		jbe    _02b848_jump
		cmp    $0x000086,%ax
		jb     _02b676_jump
		jbe    _02b893_jump
		cmp    $0x0000a7,%ax
		jb     _02b635_jump
		jbe    _02b893_jump
		cmp    $0x0000be,%ax
		jb     _02b626_jump
		jbe    _02bf53_jump
		cmp    $0x0000c3,%ax
		jb     _02b65a_jump
		jbe    _02bf6c_jump
		cmp    $0x0000cc,%ax
		je     _02b831_jump
		jmp    _02b65a_jump

	_02b626_jump:
		cmp    $0x0000ac,%ax
		je     _02bbb7_jump
		jmp    _02b65a_jump

	_02b635_jump:
		cmp    $0x000092,%ax
		jb     _02b650_jump
		jbe    _02b8ff_jump
		cmp    $0x0000a4,%ax
		je     _02c0d9_jump
		jmp    _02b65a_jump

	_02b650_jump:
		cmp    $0x000087,%ax
		je     _02b950_jump

	_02b65a_jump:
		mov    0x000028(%esp),%edx
		mov    (%esp),%ecx
		mov    %edi,%ebx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01d364_func

	_02b66d_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b676_jump:
		cmp    $0x000077,%ax
		jb     _02b6b2_jump
		jbe    _02bec9_jump
		cmp    $0x00007a,%ax
		jb     _02b6a6_jump
		jbe    _02bb0d_jump
		cmp    $0x000081,%ax
		jb     _02b65a_jump
		jbe    _02c00d_jump
		cmp    $0x000084,%ax
		je     _02bf83_jump
		jmp    _02b65a_jump

	_02b6a6_jump:
		cmp    $0x000079,%ax
		je     _02b950_jump
		jmp    _02b65a_jump

	_02b6b2_jump:
		cmp    $0x000061,%ax
		jb     _02b6d0_jump
		jbe    _02b9fa_jump
		cmp    $0x000069,%ax
		jb     _02b65a_jump
		cmp    $0x00006a,%ax
		jbe    _02bac6_jump
		jmp    _02b65a_jump

	_02b6d0_jump:
		cmp    $0x000053,%ax
		je     _02bef8_jump
		jmp    _02b65a_jump

	_02b6df_jump:
		cmp    $0x000039,%ax
		jb     _02b74a_jump
		jbe    _02b7b4_jump
		cmp    $0x00003e,%ax
		jb     _02b72b_jump
		jbe    _02bd93_jump
		cmp    $0x000046,%ax
		jb     _02b71c_jump
		jbe    _02be74_jump
		cmp    $0x000047,%ax
		jbe    _02b9a5_jump
		cmp    $0x000049,%ax
		je     _02b8e8_jump
		jmp    _02b65a_jump

	_02b71c_jump:
		cmp    $0x000042,%ax
		je     _02bd7a_jump
		jmp    _02b65a_jump

	_02b72b_jump:
		cmp    $0x00003b,%ax
		jb     _02bb62_jump
		jbe    _02bc83_jump
		cmp    $0x00003c,%ax
		je     _02bccd_jump
		jmp    _02b65a_jump

	_02b74a_jump:
		cmp    $0x000023,%ax
		jb     _02b78a_jump
		jbe    _02bbb7_jump
		cmp    $0x00002b,%ax
		jb     _02b77b_jump
		jbe    _02bbb7_jump
		cmp    $0x00002c,%ax
		jbe    _02b9a5_jump
		cmp    $0x000038,%ax
		je     _02bbb7_jump
		jmp    _02b65a_jump

	_02b77b_jump:
		cmp    $0x000028,%ax
		je     _02bb0d_jump
		jmp    _02b65a_jump

	_02b78a_jump:
		cmp    $0x000005,%ax
		jb     _02b7a5_jump
		jbe    _02bca8_jump
		cmp    $0x000008,%ax
		je     _02b893_jump
		jmp    _02b65a_jump

	_02b7a5_jump:
		cmp    $0x000002,%ax
		je     _02b893_jump
		jmp    _02b65a_jump

	_02b7b4_jump:
		mov    0x000028(%esp),%ecx
		push   %ecx
		mov    0x000004(%esp),%eax
		push   %eax
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %esi,%eax
		mov    $0x000001,%edx
		call   _01d7e0_func
		mov    (%esp),%eax
		mov    0x000028(%esp),%edx
		mov    (%eax),%ax
		cmp    (%edx),%ax
		jle    _02b803_jump
		addw   $0x000004,0x000000(%ebp)
		mov    (%esp),%eax
		subw   $0x000008,(%eax)
		mov    (%edi),%bx
		add    $0x000008,%ebx
		mov    0x000028(%esp),%eax
		mov    %bx,(%edi)
		subw   $0x00000c,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b803_jump:
		mov    (%esp),%eax
		movswl (%eax),%eax
		sar    %eax
		movswl 0x000000(%ebp),%esi
		sub    $0x000003,%eax
		add    %eax,%esi
		mov    (%esp),%eax
		mov    %si,0x000000(%ebp)
		movw   $0x000006,(%eax)
		addw   $0x000010,(%edi)
		subw   $0x000020,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b831_jump:
		mov    0x000028(%esp),%edx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01d928_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b848_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    0x000014(%esp),%eax
		add    $0x00000d,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000d,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000004,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000004,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b893_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    0x000014(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000014,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000014,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b8e8_jump:
		mov    0x000028(%esp),%ebx
		push   %ebx
		mov    %esi,%eax
		mov    %edi,%ebx
		call   _01d364_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b8ff_jump:
		mov    0x000028(%esp),%edx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01d364_func
		mov    (%esp),%eax
		movswl (%eax),%eax
		sar    %eax
		movswl 0x000000(%ebp),%esi
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    0x000028(%esp),%eax
		mov    %si,0x000000(%ebp)
		movswl (%eax),%eax
		sar    %eax
		movswl (%edi),%esi
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    (%esp),%eax
		mov    %si,(%edi)
		movw   $0x000004,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000004,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b950_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    0x000014(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x00001e,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000008,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b9a5_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    0x000014(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		sub    $0x000004,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000004,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		add    $0x000003,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b9fa_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		xor    %ah,%ah
		mov    0x000081(%esi),%dh
		mov    %ax,0x000004(%esp)
		and    $0x0000f7,%dh
		lea    0x000008(%esp),%eax
		mov    %dh,0x000081(%esi)
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    0x000004(%esp),%al
		mov    0x000081(%esi),%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,0x000081(%esi)
		mov    %bl,%bh
		or     %al,%bh
		mov    0x000050(%esi),%ax
		mov    %bh,0x000081(%esi)
		cmp    $0x000002,%ax
		je     _02ba93_jump
		mov    0x000014(%esp),%eax
		add    $0x000003,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000014,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000032,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000028,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02ba93_jump:
		mov    0x000014(%esp),%eax
		add    $0x000014,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000023,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000001,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000001,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bac6_jump:
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d7e0_func
		mov    0x000014(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000010,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000020,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bb0d_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    0x000014(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000008,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000006,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bb62_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    0x000014(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000010,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000010,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bbb7_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sub    $0x000008,%eax
		mov    %ax,0x000000(%ebp)
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		sub    $0x00003c,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000010,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000032,(%eax)
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02b66d_jump
		mov    0x00006c(%esi),%bh
		cmp    $0x000005,%bh
		jne    _02bc28_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		mov    (%edi),%dx
		add    %eax,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,(%edi)
		mov    0x000028(%esp),%edx
		mov    0x00006b(%esi),%al
		mov    (%edx),%bx
		add    %eax,%eax
		sub    %eax,%ebx
		mov    %bx,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bc28_jump:
		cmp    $0x000006,%bh
		jne    _02b66d_jump
		mov    (%eax),%cx
		sar    %cx
		mov    %cx,(%eax)
		mov    (%edi),%dx
		add    %ecx,%edx
		xor    %ebx,%ebx
		mov    %dx,(%edi)
		mov    $0x00000f,%eax
		mov    0x00006b(%esi),%bl
		cmp    %ebx,%eax
		jle    _02bc52_jump
		mov    %ebx,%eax

	_02bc52_jump:
		mov    (%edi),%bx
		add    %eax,%eax
		sub    %eax,%ebx
		mov    %bx,(%edi)
		xor    %ebx,%ebx
		mov    $0x00000f,%eax
		mov    0x00006b(%esi),%bl
		mov    0x000028(%esp),%edx
		cmp    %ebx,%eax
		jle    _02bc70_jump
		mov    %ebx,%eax

	_02bc70_jump:
		mov    (%edx),%cx
		add    %eax,%eax
		add    %eax,%ecx
		mov    %cx,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bc83_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x000000,(%ecx)
		movw   $0x000000,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bca8_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x000032,(%ecx)
		movw   $0x00006e,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bccd_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02bd21_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _02bd21_jump
		cmpb   $0x000010,0x00006b(%esi)
		jb     _02bd21_jump
		testb  $0x000008,0x000081(%esi)
		je     _02bcef_jump
		mov    $0x000050,%eax
		jmp    _02bcf4_jump

	_02bcef_jump:
		mov    $0x000010,%eax

	_02bcf4_jump:
		add    0x000028(%esi),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000044,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bd21_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02bd47_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _02bd47_jump
		testb  $0x000008,0x000081(%esi)
		je     _02bd3d_jump
		mov    $0x000050,%eax
		jmp    _02bd42_jump

	_02bd3d_jump:
		mov    $0x000030,%eax

	_02bd42_jump:
		add    0x000028(%esi),%eax
		jmp    _02bd50_jump

	_02bd47_jump:
		mov    0x000028(%esi),%ax
		add    $0x000040,%eax

	_02bd50_jump:
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000026,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000020,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bd7a_jump:
		mov    0x000028(%esp),%ecx
		push   %ecx
		mov    %esi,%eax
		mov    0x000004(%esp),%ecx
		call   _01d364_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bd93_jump:
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d7e0_func
		mov    0x00006d(%esi),%ch
		cmp    $0x000002,%ch
		jne    _02bdee_jump
		cmp    0x00006c(%esi),%ch
		jne    _02bdee_jump
		mov    0x000014(%esp),%eax
		add    $0x000005,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00001c,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000006,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000016,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bdee_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02be2d_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _02be2d_jump
		mov    0x000014(%esp),%eax
		add    $0x000006,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000012,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000d,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00000b,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02be2d_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02b66d_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _02b66d_jump
		mov    0x000014(%esp),%eax
		add    $0x000007,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000013,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00000b,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02be74_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    0x000014(%esp),%eax
		add    $0x000018,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000e,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000030,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x00001b,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bec9_jump:
		mov    0x000028(%esi),%ax
		add    $0x00004c,%eax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		add    $0x000055,%eax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x000008,(%ecx)
		movw   $0x000008,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bef8_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		cmpb   $0x000000,0x00006c(%esi)
		jne    _02bf39_jump
		mov    (%esp),%eax
		movw   $0x000016,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000016,(%eax)
		mov    (%edx),%dx
		add    $0x000044,%edx
		mov    %dx,0x000000(%ebp)
		mov    (%ebx),%bx
		add    $0x000041,%ebx
		mov    %bx,(%edi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bf39_jump:
		mov    (%esp),%eax
		movw   $0x000000,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000000,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bf53_jump:
		mov    0x000028(%esp),%ecx
		push   %ecx
		mov    %esi,%eax
		mov    0x000004(%esp),%ecx
		call   _063d70_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bf6c_jump:
		mov    0x000028(%esp),%ebx
		push   %ebx
		mov    %esi,%eax
		mov    %edi,%ebx
		call   _01bd00_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bf83_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02bf8f_jump
		cmpb   $0x00000f,0x00006c(%esi)
		je     _02bfa7_jump

	_02bf8f_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02bf9b_jump
		cmpb   $0x00000c,0x00006c(%esi)
		je     _02bfa7_jump

	_02bf9b_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02bfda_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _02bfda_jump

	_02bfa7_jump:
		mov    0x000028(%esi),%ax
		add    $0x000036,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000037,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000e,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000015,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bfda_jump:
		mov    0x000028(%esi),%ax
		add    $0x00004a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00002d,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000e,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000015,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02c00d_jump:
		cmpb   $0x000001,0x000076(%esi)
		jne    _02c03c_jump
		mov    0x000028(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%ebx)
		mov    (%esp),%eax
		movw   $0x00002b,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00000f,(%eax)

	_02c03c_jump:
		cmpb   $0x000002,0x000076(%esi)
		jne    _02c06c_jump
		mov    0x000028(%esi),%ax
		add    $0x000083,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000058,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000011,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000031,(%eax)

	_02c06c_jump:
		cmpb   $0x000003,0x000076(%esi)
		jne    _02c09c_jump
		mov    0x000028(%esi),%ax
		add    $0x00003e,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00002b,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000010,(%eax)

	_02c09c_jump:
		cmpb   $0x000004,0x000076(%esi)
		jne    _02b66d_jump
		mov    0x000028(%esi),%ax
		add    $0x000060,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000057,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000011,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02c0d9_jump:
		mov    0x000028(%esp),%eax
		push   %eax
		mov    %esi,%eax
		call   _01d364_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    0x000007(%eax),%dl
		add    %dl,%dl
		shr    $0x000007,%dl
		mov    0x000007(%eax),%al
		and    $_0000ff_case,%edx
		shr    $0x000007,%al
		add    %edx,%edx
		and    $_0000ff_case,%eax
		add    %edx,%eax
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		mov    $0x000018,%eax
		shl    $0x000002,%esi
		mov    0x000000(%ebp),%dx
		sub    %esi,%eax
		add    %eax,%edx
		mov    %dx,0x000000(%ebp)
		mov    (%edi),%bx
		add    %eax,%ebx
		mov    (%esp),%edx
		mov    %bx,(%edi)
		add    %eax,%eax
		sub    %ax,(%edx)
		mov    0x000028(%esp),%edx
		sub    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02c158_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,(%esp)
		lea    0x000020(%esp),%ecx
		lea    0x000004(%esp),%ebx
		xor    %edx,%edx
		mov    0x000060(%eax),%ax
		mov    %edx,0x00000c(%esp)
		mov    %edx,0x000010(%esp)
		mov    %edx,0x00001c(%esp)
		mov    %edx,0x000024(%esp)
		lea    0x000018(%esp),%edx
		mov    %eax,0x000014(%esp)
		push   %edx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		push   %edx
		movswl %di,%edx
		call   _01d7e0_func
		mov    %eax,%edx
		test   %ax,%ax
		je     _02c45f_jump
		mov    0x000014(%esp),%ebx
		cmp    $0x000051,%bx
		jb     _02c1d4_jump
		jbe    _02c1e3_jump
		cmp    $0x000064,%bx
		jb     _02c421_jump
		jbe    _02c359_jump
		cmp    $0x0000d9,%bx
		je     _02c359_jump
		jmp    _02c421_jump

	_02c1d4_jump:
		cmp    $0x000014,%bx
		je     _02c270_jump
		jmp    _02c421_jump

	_02c1e3_jump:
		cmp    $0x000004,%di
		jb     _02c1f6_jump
		jbe    _02c229_jump
		cmp    $0x000005,%di
		je     _02c24a_jump
		jmp    _02c421_jump

	_02c1f6_jump:
		cmp    $0x000003,%di
		jne    _02c421_jump
		mov    $0x000004,%ecx
		mov    $0x000002,%esi
		mov    $0xfffffffc,%edi
		mov    $0xfffffff6,%eax
		mov    %ecx,0x000024(%esp)
		mov    %esi,0x00001c(%esp)
		mov    %edi,0x000010(%esp)
		mov    %eax,0x00000c(%esp)
		jmp    _02c421_jump

	_02c229_jump:
		mov    $0x000002,%edi
		xor    %esi,%esi
		mov    $0xfffffff6,%ebx
		mov    %esi,0x000024(%esp)
		mov    %edi,0x00001c(%esp)
		mov    %esi,0x000010(%esp)
		mov    %ebx,0x00000c(%esp)
		jmp    _02c421_jump

	_02c24a_jump:
		mov    $0x000002,%eax
		mov    $0xfffffffc,%ebx
		xor    %edi,%edi
		mov    $0xfffffff6,%ecx
		mov    %edi,0x000024(%esp)
		mov    %eax,0x00001c(%esp)
		mov    %ebx,0x000010(%esp)
		mov    %ecx,0x00000c(%esp)
		jmp    _02c421_jump

	_02c270_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02c27c_jump
		cmpb   $0x000000,0x00006c(%esi)
		je     _02c290_jump

	_02c27c_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _02c30b_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _02c30b_jump

	_02c290_jump:
		cmp    $0x000001,%di
		jb     _02c2a3_jump
		jbe    _02c2c8_jump
		cmp    $0x000002,%di
		je     _02c2e5_jump
		jmp    _02c421_jump

	_02c2a3_jump:
		test   %di,%di
		jne    _02c421_jump
		mov    $0x00000a,%esi
		mov    $0x000022,%eax
		mov    $0x000020,%ebx
		mov    %edi,0x00001c(%esp)
		mov    %esi,0x000024(%esp)
		jmp    _02c419_jump

	_02c2c8_jump:
		mov    $0x000004,%eax
		mov    $0x00001a,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000024(%esp)
		mov    %ebx,0x00001c(%esp)
		mov    %ecx,0x000008(%esp)
		jmp    _02c421_jump

	_02c2e5_jump:
		mov    $0x000004,%ebx
		mov    $0x000030,%esi
		mov    $0x000018,%edi
		xor    %ecx,%ecx
		mov    %ebx,0x000024(%esp)
		mov    %ecx,0x00001c(%esp)
		mov    %esi,0x000008(%esp)
		mov    %edi,0x000018(%esp)
		jmp    _02c421_jump

	_02c30b_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02c348_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _02c348_jump
		mov    0x000028(%esi),%ax
		add    $0x000070,%eax
		mov    %eax,0x000004(%esp)
		mov    0x00002c(%esi),%ax
		add    $0x0000b8,%eax
		mov    $0x000020,%edi
		mov    %eax,0x000020(%esp)
		mov    $0x000010,%eax
		mov    %edi,0x000008(%esp)
		mov    %eax,0x000018(%esp)
		jmp    _02c421_jump

	_02c348_jump:
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    %ecx,0x000008(%esp)
		mov    %ecx,0x000018(%esp)
		jmp    _02c421_jump

	_02c359_jump:
		cmp    $0x000002,%di
		jb     _02c374_jump
		jbe    _02c3e2_jump
		cmp    $0x000003,%di
		je     _02c400_jump
		jmp    _02c421_jump

	_02c374_jump:
		cmp    $0x000001,%di
		jne    _02c421_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02c3bc_jump
		mov    0x00006c(%esi),%bl
		cmp    $0x000009,%bl
		je     _02c396_jump
		cmp    $0x00000a,%bl
		je     _02c396_jump
		cmp    $0x00000b,%bl
		jne    _02c3bc_jump

	_02c396_jump:
		mov    $0xfffffff8,%eax
		mov    $0x000005,%ebx
		mov    $0x00001a,%ecx
		mov    $0x000008,%esi
		mov    %eax,0x000024(%esp)
		mov    %ebx,0x00001c(%esp)
		mov    %ecx,0x000008(%esp)
		mov    %esi,0x000018(%esp)
		jmp    _02c421_jump

	_02c3bc_jump:
		mov    $0x000001,%ebx
		mov    $0xfffffffb,%ecx
		mov    $0x000010,%esi
		mov    $0x00001e,%edi
		mov    %ebx,0x000024(%esp)
		mov    %ecx,0x00001c(%esp)
		mov    %esi,0x000008(%esp)
		mov    %edi,0x000018(%esp)
		jmp    _02c421_jump

	_02c3e2_jump:
		mov    $0x000007,%esi
		xor    %ecx,%ecx
		mov    $0x000010,%edi
		mov    %ecx,0x000024(%esp)
		mov    %esi,0x00001c(%esp)
		mov    %edi,0x000008(%esp)
		mov    %edi,0x000018(%esp)
		jmp    _02c421_jump

	_02c400_jump:
		mov    $0x000002,%edi
		mov    $0x00000d,%eax
		xor    %esi,%esi
		mov    $0x000009,%ebx
		mov    %esi,0x000024(%esp)
		mov    %edi,0x00001c(%esp)

	_02c419_jump:
		mov    %eax,0x000008(%esp)
		mov    %ebx,0x000018(%esp)

	_02c421_jump:
		mov    0x000004(%esp),%eax
		mov    0x000024(%esp),%ecx
		add    %ecx,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00001c(%esp),%esi
		mov    0x000020(%esp),%eax
		mov    (%esp),%ebx
		add    %esi,%eax
		mov    %ax,(%ebx)
		mov    0x000010(%esp),%edi
		mov    0x000008(%esp),%eax
		mov    0x000038(%esp),%ebx
		add    %edi,%eax
		mov    %ax,(%ebx)
		mov    0x000018(%esp),%eax
		add    0x00000c(%esp),%eax
		mov    0x00003c(%esp),%ebx
		mov    %ax,(%ebx)

	_02c45f_jump:
		mov    %edx,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_02c46c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		mov    0x000048(%esp),%esi
		mov    %ax,0x000020(%esp)
		mov    %dx,0x000018(%esp)
		mov    %bx,0x00001c(%esp)
		mov    %cx,0x000034(%esp)
		mov    0x000060(%esi),%ax
		mov    $0xffffffff,%edi
		cmp    $0x000071,%ax
		jb     _02c4c4_jump
		jbe    _02c4d3_jump
		cmp    $0x0000c6,%ax
		jb     _02c794_jump
		jbe    _02c570_jump
		cmp    $0x0000c8,%ax
		jb     _02c794_jump
		cmp    $0x0000c9,%ax
		jbe    _02c570_jump
		jmp    _02c794_jump

	_02c4c4_jump:
		cmp    $0x00002e,%ax
		je     _02c570_jump
		jmp    _02c794_jump

	_02c4d3_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x00006b(%esi),%bl
		mov    %bl,%al
		mov    _094b54_data(,%eax,2),%dx
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _02c794_jump
		movswl %bx,%ebp
		mov    0x00002c(%esi),%cx
		mov    _094ba2_data(,%ebp,2),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%bl
		push   %eax
		add    %ecx,%ebx
		mov    _094b7a_data(,%ebp,2),%eax
		add    %ebx,%edx
		mov    _094ba4_data(,%ebp,2),%bx
		sar    $0x000010,%eax
		sub    %ebx,%edx
		push   %eax
		movswl %dx,%edx
		mov    0x00003a(%esp),%ecx
		push   %edx
		xor    %edx,%edx
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%dl
		sar    %eax
		add    %ebx,%edx
		sar    $0x000010,%ecx
		sub    %eax,%edx
		mov    0x000026(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		mov    0x000022(%esp),%edx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b560_func
		test   %ax,%ax
		je     _02c794_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02c570_jump:
		mov    0x000034(%esp),%eax
		cmp    _0cf26a_data,%ax
		jne    _02c65d_jump
		lea    0x000030(%esp),%eax
		push   %eax
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000030(%esp),%eax
		lea    0x000020(%esp),%ecx
		push   %eax
		lea    0x000020(%esp),%eax
		lea    0x000038(%esp),%ebx
		push   %eax
		lea    0x000040(%esp),%edx
		mov    %esi,%eax
		call   _01daec_func
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%ebp
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ebp
		sar    $0x000010,%eax
		mov    0x000026(%esp),%esi
		push   %eax
		mov    0x000042(%esp),%eax
		mov    %ebp,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		mov    %eax,0x000010(%esp)
		mov    0x00002e(%esp),%eax
		mov    %esi,%ebx
		sar    $0x000010,%eax
		mov    0x000010(%esp),%ecx
		mov    %eax,0x000014(%esp)
		call   _02b560_func
		test   %ax,%ax
		je     _02c613_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02c613_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000c(%esp),%ecx
		sar    $0x000010,%eax
		mov    %esi,%ebx
		push   %eax
		mov    %ebp,%edx
		mov    0x000014(%esp),%eax
		call   _02b560_func
		test   %ax,%ax
		je     _02c794_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02c65d_jump:
		lea    0x000030(%esp),%eax
		push   %eax
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000030(%esp),%eax
		lea    0x000020(%esp),%ecx
		push   %eax
		lea    0x000020(%esp),%eax
		lea    0x000038(%esp),%ebx
		push   %eax
		lea    0x000040(%esp),%edx
		mov    %esi,%eax
		call   _01daec_func
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%edx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b560_func
		test   %ax,%ax
		je     _02c6d4_jump
		mov    $0x000006,%edi

	_02c6d4_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%edx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b560_func
		test   %ax,%ax
		je     _02c71f_jump
		mov    $0x000001,%edi

	_02c71f_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02c794_jump
		cmpb   $0x00000a,0x00006c(%esi)
		jne    _02c794_jump
		lea    0x000014(%esp),%eax
		lea    0x000028(%esp),%ecx
		push   %eax
		lea    0x000014(%esp),%eax
		lea    0x000030(%esp),%ebx
		push   %eax
		mov    $0x000009,%edx
		mov    %esi,%eax
		call   _01d7e0_func
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%edx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b560_func
		test   %ax,%ax
		je     _02c794_jump
		mov    $0x000009,%edi

	_02c794_jump:
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02c7a0_func:
		push   %esi
		push   %edi
		sub    $0x000034,%esp
		mov    0x000044(%esp),%esi
		mov    %eax,0x000010(%esp)
		mov    %dx,0x00001c(%esp)
		mov    %bx,0x000020(%esp)
		mov    %cx,0x000004(%esp)
		xor    %edx,%edx
		mov    %dx,(%esp)
		mov    %dx,0x000024(%esp)
		mov    %dx,0x000028(%esp)
		mov    %dx,0x000008(%esp)
		mov    $0xffffffff,%eax
		mov    0x00005c(%esi),%dx
		mov    %eax,0x00000c(%esp)
		test   %dx,%dx
		je     _02ca1c_jump
		mov    %esi,%eax
		call   _02b400_func
		mov    _0cf282_data,%di
		mov    %eax,0x000018(%esp)
		cmp    $0x000001,%di
		jne    _02c85c_jump
		mov    0x000060(%esi),%ax
		cmp    $0x000032,%ax
		je     _02c80f_jump
		cmp    $0x0000e3,%ax
		jne    _02c82e_jump

	_02c80f_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _02c858_jump

	_02c82e_jump:
		cmpw   $0x0000a5,0x000060(%esi)
		jne    _02c85c_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000040,0x000007(%ebx,%eax,1)
		je     _02c85c_jump

	_02c858_jump:
		decl   0x000018(%esp)

	_02c85c_jump:
		xor    %edi,%edi
		mov    0x000018(%esp),%eax
		mov    %di,0x00002c(%esp)
		test   %ax,%ax
		jle    _02cba8_jump

	_02c870_jump:
		mov    0x00002a(%esp),%edx
		mov    %esi,%eax
		sar    $0x000010,%edx
		call   _02b418_func
		mov    0x000006(%eax),%ch
		mov    %eax,%edi
		test   $0x000004,%ch
		je     _02c894_jump
		cmpw   $0x00005e,0x000010(%esp)
		jne    _02c9f9_jump

	_02c894_jump:
		testb  $0x000002,0x000006(%edi)
		je     _02c949_jump
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		imul   $0x00000c,%eax,%eax
		mov    0x000004(%esi),%edx
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		and    $0x00003f,%dh
		xor    %ebx,%ebx
		and    $0x00ffff,%edx
		mov    0x00006b(%esi),%bl
		imul   %ebx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    0x000007(%edi),%dl
		cmpb   $0x000000,0x000003(%ebx,%edx,4)
		je     _02c9a5_jump
		mov    %esp,%eax
		push   %eax
		lea    0x000028(%esp),%eax
		lea    0x00002c(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%ebx
		mov    %esi,%eax
		call   _01d7e0_func
		testb  $0x000008,0x000081(%esi)
		je     _02c917_jump
		xor    %eax,%eax
		mov    0x000024(%esp),%edx
		mov    0x000004(%edi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    (%edi),%dx
		mov    0x000008(%esp),%ebx
		sub    %edx,%eax
		add    %eax,%ebx
		mov    %bx,0x000008(%esp)
		jmp    _02c925_jump

	_02c917_jump:
		mov    0x000008(%esp),%ecx
		mov    (%edi),%ax
		add    %eax,%ecx
		mov    %cx,0x000008(%esp)

	_02c925_jump:
		mov    0x000028(%esp),%ecx
		mov    0x000002(%edi),%ax
		add    %eax,%ecx
		mov    %cx,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000004(%edi),%al
		mov    %ax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000005(%edi),%al
		mov    %ax,(%esp)
		jmp    _02c9a5_jump

	_02c949_jump:
		mov    0x000028(%esi),%ax
		mov    (%edi),%dx
		add    %edx,%eax
		mov    %ax,0x000008(%esp)
		mov    0x00002c(%esi),%ax
		mov    0x000002(%edi),%bx
		add    %ebx,%eax
		mov    %ax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000004(%edi),%al
		mov    %ax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000005(%edi),%al
		mov    %ax,(%esp)
		testb  $0x000008,0x000081(%esi)
		je     _02c9a5_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		mov    0x000022(%esp),%edx
		add    %ebx,%eax
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		add    %eax,%eax
		sub    %ebx,%eax
		mov    %ax,0x000008(%esp)

	_02c9a5_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b560_func
		test   %ax,%ax
		je     _02c9f9_jump
		xor    %eax,%eax
		mov    0x000007(%edi),%al
		mov    %eax,0x00000c(%esp)
		jmp    _02cba8_jump

	_02c9f9_jump:
		mov    0x00002c(%esp),%ecx
		inc    %ecx
		mov    0x000018(%esp),%edi
		mov    %cx,0x00002c(%esp)
		cmp    %di,%cx
		jl     _02c870_jump
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02ca1c_jump:
		mov    0x000079(%esi),%ah
		cmp    $0x0000fe,%ah
		jne    _02caca_jump
		mov    %esp,%eax
		lea    0x000024(%esp),%ecx
		lea    0x000028(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02b5bc_func
		testb  $0x000008,0x000081(%esi)
		je     _02ca6a_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		mov    0x000022(%esp),%ebx
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		add    %eax,%eax
		sub    %ebx,%eax
		mov    %ax,0x000008(%esp)

	_02ca6a_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b560_func
		test   %ax,%ax
		je     _02cab5_jump
		movswl %ax,%edx
		jmp    _02caba_jump

	_02cab5_jump:
		mov    $0xffffffff,%edx

	_02caba_jump:
		mov    %edx,0x00000c(%esp)
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02caca_jump:
		cmp    $_0000ff_case,%ah
		jne    _02cba8_jump
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x000008(%edx,%eax,4),%ax
		xor    %ebx,%ebx
		and    $0x00003f,%ah
		mov    %bx,0x000030(%esp)
		mov    %eax,0x000014(%esp)
		test   %ax,%ax
		jle    _02cba8_jump

	_02cb00_jump:
		mov    0x00002e(%esp),%edi
		sar    $0x000010,%edi
		mov    %esi,%eax
		mov    %edi,%edx
		call   _02b438_func
		test   %ax,%ax
		je     _02cb91_jump
		mov    %esp,%eax
		lea    0x000028(%esp),%ecx
		push   %eax
		lea    0x000028(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    %edi,%edx
		mov    %esi,%eax
		call   _02c158_func
		test   %ax,%ax
		je     _02cb91_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b560_func
		test   %ax,%ax
		je     _02cb91_jump
		mov    0x000030(%esp),%eax
		mov    %eax,0x00000c(%esp)
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02cb91_jump:
		mov    0x000030(%esp),%edx
		inc    %edx
		mov    0x000014(%esp),%ebx
		mov    %dx,0x000030(%esp)
		cmp    %bx,%dx
		jl     _02cb00_jump

	_02cba8_jump:
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_02cbb4_func:
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    0x000028(%esp),%esi
		mov    %ax,0x000014(%esp)
		mov    %edx,%edi
		mov    %bx,0x000018(%esp)
		mov    %cx,0x000010(%esp)
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01d7e0_func
		mov    %eax,%edx
		test   %ax,%ax
		je     _02cc32_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    0x000016(%esp),%ecx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%ebx
		push   %eax
		mov    0x00000e(%esp),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x000022(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _02b560_func
		mov    %eax,%edx

	_02cc32_jump:
		test   %dx,%dx
		je     _02cc3e_jump
		xor    %eax,%eax
		mov    0x000079(%esi),%al
		jmp    _02cc43_jump

	_02cc3e_jump:
		mov    $0xffffffff,%eax

	_02cc43_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02cc4c_func:
		push   %esi
		push   %edi
		mov    0x000010(%esp),%edi
		mov    %eax,%esi
		mov    %edx,%eax
		xor    %edx,%edx
		mov    0x000079(%edi),%dl
		cmp    $0x0000fd,%dx
		jb     _02ccad_jump
		jbe    _02cc6d_jump
		cmp    $_0000ff_case,%dx
		jbe    _02cc8c_jump
		jmp    _02ccad_jump

	_02cc6d_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		movswl %cx,%esi
		cwtl   
		sar    $0x000010,%edx
		movswl %bx,%edi
		mov    %edx,%ecx
		mov    %esi,%ebx
		mov    %edi,%edx
		call   _02c46c_func
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02cc8c_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		sar    $0x000010,%edx
		movswl %cx,%ecx
		push   %edx
		movswl %ax,%edx
		xor    %eax,%eax
		movswl %bx,%ebx
		mov    %si,%ax
		call   _02c7a0_func
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02ccad_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		movswl %cx,%esi
		cwtl   
		sar    $0x000010,%edx
		movswl %bx,%edi
		mov    %edx,%ecx
		mov    %esi,%ebx
		mov    %edi,%edx
		call   _02cbb4_func
		pop    %edi
		pop    %esi
		ret    $0x000008



_02cccc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    0x000060(%eax),%ax
		cmp    $0x00009a,%ax
		jb     _02cd1f_jump
		jbe    _02ce1f_jump
		cmp    $0x0000a0,%ax
		jb     _02cd06_jump
		jbe    _02cf38_jump
		cmp    $0x0000a9,%ax
		jb     _02cf55_jump
		jbe    _02cd65_jump
		cmp    $0x000102,%ax
		je     _02cd65_jump
		jmp    _02cf55_jump

	_02cd06_jump:
		cmp    $0x00009b,%ax
		jbe    _02ce5f_jump
		cmp    $0x00009f,%ax
		je     _02cea1_jump
		jmp    _02cf55_jump

	_02cd1f_jump:
		cmp    $0x000051,%ax
		jb     _02cd42_jump
		jbe    _02cd65_jump
		cmp    $0x00007d,%ax
		jb     _02cf55_jump
		jbe    _02cd98_jump
		cmp    $0x00008a,%ax
		je     _02cddf_jump
		jmp    _02cf55_jump

	_02cd42_jump:
		cmp    $0x000010,%ax
		jb     _02cf55_jump
		cmp    $0x000011,%ax
		jbe    _02ce95_jump
		cmp    $0x000018,%ax
		je     _02ce95_jump
		jmp    _02cf55_jump

	_02cd65_jump:
		mov    $0x000001,%ecx
		mov    $0x000002,%esi
		xor    %ebx,%ebx
		mov    $_0000ff_case,%edi
		mov    %bx,(%esp)
		mov    %cx,0x000002(%esp)
		mov    %si,0x000004(%esp)
		mov    %di,0x000006(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02cd98_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%ecx
		mov    $0x000003,%esi
		xor    %eax,%eax
		mov    $0x000004,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    $_0000ff_case,%eax
		mov    %di,0x000008(%esp)
		mov    %ax,0x00000a(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02cddf_jump:
		mov    $0x000005,%eax
		mov    $0x000006,%ebx
		mov    $0x000007,%ecx
		mov    $0x000008,%esi
		mov    $_0000ff_case,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    %di,0x000008(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02ce1f_jump:
		mov    $0x000001,%eax
		mov    $0x000002,%ebx
		mov    $0x000003,%ecx
		mov    $0x000004,%esi
		mov    $_0000ff_case,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    %di,0x000008(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02ce5f_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%ecx
		mov    $0x000003,%esi
		mov    $_0000ff_case,%edi
		mov    %bx,(%esp)
		mov    %cx,0x000002(%esp)
		mov    %si,0x000004(%esp)
		mov    %di,0x000006(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02ce95_jump:
		mov    $0x000001,%ebx
		xor    %eax,%eax
		jmp    _02cf42_jump

	_02cea1_jump:
		testb  $0x000008,_0ce0c5_data
		je     _02cee7_jump
		mov    $0x000004,%edi
		mov    $0x000005,%eax
		mov    $0x000006,%ebx
		mov    $0x000007,%ecx
		mov    $0x000008,%esi
		mov    %di,(%esp)
		mov    %ax,0x000002(%esp)
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000006(%esp)
		mov    $0x000009,%edi
		mov    %si,0x000008(%esp)
		mov    %di,0x00000a(%esp)
		jmp    _02cf22_jump

	_02cee7_jump:
		mov    $0x000009,%esi
		mov    $0x000008,%edi
		mov    $0x000007,%eax
		mov    $0x000006,%ebx
		mov    $0x000005,%ecx
		mov    %si,(%esp)
		mov    %di,0x000002(%esp)
		mov    %ax,0x000004(%esp)
		mov    %bx,0x000006(%esp)
		mov    $0x000004,%esi
		mov    %cx,0x000008(%esp)
		mov    %si,0x00000a(%esp)

	_02cf22_jump:
		movw   $_0000ff_case,0x00000c(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02cf38_jump:
		mov    $0x000004,%eax
		mov    $0x000005,%ebx

	_02cf42_jump:
		mov    $_0000ff_case,%ecx
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)

	_02cf55_jump:
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02cf64_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %bx,0x000008(%esp)
		xor    %ebx,%ebx
		mov    _0ce06c_data,%cx
		mov    _0ce0ac_data,%bl
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    %cx,0x000004(%esp)
		mov    _0ce0ad_data,%bl
		mov    _0ce070_data,%cx
		add    %ebx,%ecx
		mov    %cx,(%esp)
		mov    %edx,%ebx
		mov    $0x000008,%edx
		add    %eax,%ebx
		mov    _0cf221_data,%cl
		dec    %ebx
		test   $0x000002,%cl
		je     _02cfb4_jump
		mov    $0x000004,%edx

	_02cfb4_jump:
		movswl %bx,%edi
		movswl %ax,%esi
		movswl %dx,%edx
		mov    %esi,%ebx
		lea    (%edi,%edx,1),%ecx
		sub    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02cfdc_jump
		cmp    %ecx,%eax
		jg     _02cfdc_jump
		mov    $0x000001,%eax
		jmp    _02cfde_jump

	_02cfdc_jump:
		xor    %eax,%eax

	_02cfde_jump:
		test   %eax,%eax
		jne    _02cfe9_jump
		mov    $0x002710,%eax
		jmp    _02d03a_jump

	_02cfe9_jump:
		mov    %edi,%ecx
		mov    %esi,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02cffe_jump
		cmp    %ecx,%eax
		jg     _02cffe_jump
		mov    $0x000001,%eax
		jmp    _02d000_jump

	_02cffe_jump:
		xor    %eax,%eax

	_02d000_jump:
		test   %eax,%eax
		je     _02d021_jump
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02d01a_jump
		neg    %eax

	_02d01a_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_02d021_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02d037_jump
		neg    %eax

	_02d037_jump:
		neg    %eax
		dec    %eax

	_02d03a_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_02d044_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    $0x000008,%edx
		mov    _0cf221_data,%ah
		mov    %dx,0x000010(%esp)
		test   $0x000002,%ah
		je     _02d06b_jump
		movw   $0x000004,0x000010(%esp)

	_02d06b_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d7e0_func
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _02d093_jump
		neg    %eax

	_02d093_jump:
		mov    _094a32_data(,%eax,2),%eax
		sar    $0x000010,%eax
		call   _05d230_func
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		sar    $0x000009,%edx
		mov    %edx,%edi
		movswl %dx,%edx
		sub    %edx,%eax
		mov    -0x000002(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		mov    0x00000c(%esp),%ecx
		add    %eax,%edx
		mov    %di,0x000004(%esp)
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    _0ce06c_data,%bx
		mov    0x000074(%esi),%al
		add    %edi,%edx
		movzbw _0ce0ad_data,%di
		dec    %edx
		add    %eax,%ecx
		xor    %eax,%eax
		mov    %ecx,0x00000c(%esp)
		mov    _0ce0ac_data,%al
		movswl %dx,%ebp
		add    %eax,%ebx
		mov    _0ce070_data,%ax
		mov    %bx,0x000014(%esp)
		mov    0x00000e(%esp),%ebx
		mov    0x000012(%esp),%edx
		add    %eax,%edi
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %ebx,%eax
		lea    (%ebx,%ebp,1),%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02d134_jump
		cmp    %ecx,%eax
		jg     _02d134_jump
		mov    $0x000001,%eax
		jmp    _02d136_jump

	_02d134_jump:
		xor    %eax,%eax

	_02d136_jump:
		test   %eax,%eax
		je     _02d1f4_jump
		mov    0x00000c(%esp),%eax
		sub    %edi,%eax
		movswl %ax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02d14f_jump
		neg    %eax

	_02d14f_jump:
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _02d1f4_jump
		mov    %ebx,%eax
		mov    -0x000002(%esp),%ebx
		sar    %eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %edx,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000008(%esp)
		movsbw 0x000076(%esi),%ax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _02d188_jump
		sar    %cl,%ax
		jmp    _02d191_jump

	_02d188_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02d191_jump:
		mov    -0x000002(%esp),%ebx
		mov    %ax,0x000008(%esp)
		mov    %ebp,%ecx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02d1b0_jump
		cmp    %ecx,%eax
		jg     _02d1b0_jump
		mov    $0x000001,%eax
		jmp    _02d1b2_jump

	_02d1b0_jump:
		xor    %eax,%eax

	_02d1b2_jump:
		test   %eax,%eax
		je     _02d1cd_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02d1c7_jump
		neg    %eax

	_02d1c7_jump:
		mov    %ax,0x000054(%esi)
		jmp    _02d1fa_jump

	_02d1cd_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02d1de_jump
		neg    %eax

	_02d1de_jump:
		mov    %eax,%ecx
		mov    %ax,0x000054(%esi)
		neg    %ecx
		mov    %cx,0x000054(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d1f4_jump:
		movw   $0x002710,0x000054(%esi)

	_02d1fa_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d204_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%esi
		mov    $0x000008,%edx
		mov    _0cf221_data,%ah
		mov    %dx,0x00001c(%esp)
		test   $0x000002,%ah
		je     _02d22a_jump
		movw   $0x000004,0x00001c(%esp)

	_02d22a_jump:
		mov    $0x002710,%ebx
		xor    %eax,%eax
		mov    _0ce06c_data,%dx
		mov    _0ce0ac_data,%al
		mov    0x000034(%esi),%cx
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000018(%esp)
		mov    _0ce0ad_data,%al
		mov    _0ce070_data,%dx
		xor    %edi,%edi
		add    %eax,%edx
		mov    _0ce08e_data,%ax
		mov    %edx,0x000014(%esp)
		cmp    %cx,%ax
		jne    _02d353_jump
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d7e0_func
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		mov    0x000060(%esi),%bx
		cmp    $0x00008a,%bx
		je     _02d2b2_jump
		cmp    $0x00009a,%bx
		je     _02d2b2_jump
		cmp    $0x00009b,%bx
		jne    _02d2ca_jump

	_02d2b2_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		sub    $0x00000a,%edx
		add    $0x000005,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,0x00000c(%esp)

	_02d2ca_jump:
		cmpw   $0x00009f,0x000060(%esi)
		jne    _02d337_jump
		cmpb   $0x000000,_0ce0b1_data
		jne    _02d337_jump
		mov    0x00006b(%esi),%dh
		cmp    $0x000009,%dh
		jbe    _02d337_jump
		cmp    $0x000028,%dh
		jae    _02d337_jump
		xor    %eax,%eax
		mov    _0ce06c_data,%ebx
		mov    _0ce0ac_data,%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %bx,%bx
		jle    _02d31a_jump
		decl   _0ce06c_data
		jmp    _02d322_jump

	_02d31a_jump:
		jge    _02d322_jump
		incl   _0ce06c_data

	_02d322_jump:
		xor    %eax,%eax
		mov    _0ce06c_data,%dx
		mov    _0ce0ac_data,%al
		add    %eax,%edx
		mov    %dx,0x000018(%esp)

	_02d337_jump:
		mov    0x000006(%esp),%ebx
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02cf64_func
		mov    %eax,%ebx

	_02d353_jump:
		cmp    $0x002710,%bx
		jne    _02d456_jump

	_02d35e_jump:
		movswl %di,%edx
		mov    %esi,%eax
		call   _02cccc_func
		inc    %edi
		mov    %ax,0x000010(%esp)
		movswl %bx,%eax
		test   %eax,%eax
		jge    _02d377_jump
		neg    %eax

	_02d377_jump:
		cmp    $0x000007,%eax
		jle    _02d456_jump
		cmpw   $_0000ff_case,0x000010(%esp)
		je     _02d456_jump
		mov    %esp,%eax
		mov    0x00000e(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    %esi,%eax
		call   _01d7e0_func
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		mov    0x000060(%esi),%bx
		cmp    $0x00008a,%bx
		je     _02d3d4_jump
		cmp    $0x00009a,%bx
		je     _02d3d4_jump
		cmp    $0x00009b,%bx
		jne    _02d3ec_jump

	_02d3d4_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		sub    $0x00000a,%edx
		add    $0x000005,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,0x00000c(%esp)

	_02d3ec_jump:
		mov    0x00000a(%esp),%ecx
		mov    0x000002(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %ecx,%ebx
		sar    $0x000010,%eax
		add    %edx,%ebx
		cmp    %ebx,%eax
		jg     _02d43a_jump
		sub    %edx,%ecx
		cmp    %ecx,%eax
		jl     _02d43a_jump
		mov    0x000014(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    0x000060(%esi),%ax
		sub    %ecx,%ebx
		cmp    $0x00009f,%ax
		jne    _02d43f_jump
		cmp    $0x000008,%bx
		jl     _02d43f_jump
		cmp    $0x00000b,%bx
		jge    _02d43f_jump
		xor    %ebx,%ebx
		jmp    _02d43f_jump

	_02d43a_jump:
		mov    $0x002710,%ebx

	_02d43f_jump:
		cmp    $0x002710,%bx
		je     _02d35e_jump
		mov    0x000010(%esp),%al
		mov    %al,0x000075(%esi)
		jmp    _02d35e_jump

	_02d456_jump:
		mov    %bx,0x000054(%esi)
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d464_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,0x000004(%esp)
		andb   $0x0000f7,0x000081(%esi)
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d7e0_func
		mov    0x000004(%esp),%al
		mov    0x000081(%esi),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%esi)
		mov    %dl,%dh
		or     %al,%dh
		mov    $0x000037,%ebx
		mov    %dh,0x000081(%esi)
		xor    %eax,%eax
		mov    0x000010(%esp),%edx
		mov    0x00000c(%esp),%ecx
		mov    0x000074(%esi),%al
		mov    %ebx,(%esp)
		add    %eax,%edx
		add    $0x000004,%ecx
		mov    %dx,0x000010(%esp)
		mov    %cx,0x00000c(%esp)
		mov    0x00000e(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    $0x000037,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _02cf64_func
		mov    %eax,%ebx
		cmp    $0x002710,%ax
		je     _02d50f_jump
		movb   $0x000002,0x000075(%esi)

	_02d50f_jump:
		mov    %bx,0x000054(%esi)
		add    $0x000014,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d51c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		cmpb   $0x000003,0x00006c(%eax)
		je     _02d532_jump
		cmpb   $0x000006,0x00006c(%esi)
		jne    _02d59f_jump

	_02d532_jump:
		cmpb   $0x00000c,0x00006b(%esi)
		jae    _02d59f_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d7e0_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    0x000008(%esp),%eax
		mov    $0x00002d,%ebx
		sub    $0x00002d,%eax
		mov    %dx,(%esp)
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		mov    %ebx,0x000008(%esp)
		add    %edx,%eax
		mov    -0x000002(%esp),%ebx
		mov    %ax,0x000004(%esp)
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%eax
		mov    $0x00002d,%edx
		sar    $0x000010,%eax
		call   _02cf64_func
		jmp    _02d5a4_jump

	_02d59f_jump:
		mov    $0x002710,%eax

	_02d5a4_jump:
		mov    _0ce08e_data,%dx
		cmp    0x000034(%esi),%dx
		jne    _02d5f0_jump
		cmpb   $0x000006,0x00006c(%esi)
		jne    _02d5f0_jump
		cmpb   $0x00000b,0x00006b(%esi)
		jne    _02d5f0_jump
		mov    $0xffffffff,%edi
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx
		mov    %di,_0ce08e_data
		call   _01d444_func
		mov    _0ce086_data,%dx
		sub    $0x00000a,%edx
		mov    $0x002710,%eax
		mov    %dx,_0ce086_data

	_02d5f0_jump:
		mov    %ax,0x000054(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d600_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000008,_092535_data(,%eax,4)
		je     _02d625_jump
		mov    %esi,%eax
		call   _02d204_func
		jmp    _02d6f1_jump

	_02d625_jump:
		cmp    $0x00006d,%ax
		je     _02d631_jump
		cmp    $0x000061,%ax
		jne    _02d640_jump

	_02d631_jump:
		mov    %esi,%eax
		call   _02d464_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d640_jump:
		cmp    $0x000083,%ax
		jne    _02d655_jump
		mov    %esi,%eax
		call   _02d51c_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d655_jump:
		cmp    $0x0000fe,%ax
		jne    _02d66a_jump
		mov    %esi,%eax
		call   _02d044_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d66a_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d7e0_func
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		mov    0x000060(%esi),%bx
		cmp    $0x000008,%bx
		je     _02d6bd_jump
		cmp    $0x000086,%bx
		je     _02d6bd_jump
		cmp    $0x0000a7,%bx
		je     _02d6bd_jump
		cmp    $0x0000b1,%bx
		je     _02d6bd_jump
		cmp    $0x000006,%bx
		jne    _02d6d3_jump

	_02d6bd_jump:
		mov    0x00000c(%esp),%ebx
		mov    (%esp),%ecx
		sub    $0x000002,%ebx
		add    $0x000004,%ecx
		mov    %bx,0x00000c(%esp)
		mov    %cx,(%esp)

	_02d6d3_jump:
		mov    0x000002(%esp),%ebx
		mov    -0x000002(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02cf64_func
		mov    %ax,0x000054(%esi)

	_02d6f1_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d6fc_func:
		push   %edx
		call   _0661e8_func
		mov    $0x000001,%ah
		mov    _0ce171_data,%dl
		mov    %ah,_0ce175_data
		test   %dl,%dl
		jne    _02d728_jump
		xor    %dh,%dh
		mov    _0ce0d0_data,%eax
		mov    %dx,_0ce16c_data
		movw   $0x000000,0x000040(%eax)

	_02d728_jump:
		pop    %edx
		ret    



_02d72c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		xor    %ah,%ah
		mov    %ah,0x000010(%esp)
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    _0ce0d0_data,%eax
		call   _01d7e0_func
		mov    _0ce0d0_data,%edx
		mov    0x000040(%edx),%bx
		test   %bx,%bx
		jl     _02d790_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%bl
		mov    0x000074(%edx),%al
		add    %ebx,%eax
		mov    0x00002c(%edx),%esi
		sar    %eax
		add    %esi,%eax
		sar    $0x000004,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000028(%edx),%edi
		mov    0x000068(%edx),%al
		add    %edi,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		jmp    _02d7bb_jump

	_02d790_jump:
		jge    _02d7c4_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%bl
		mov    0x000074(%edx),%al
		add    %ebx,%eax
		sar    %eax
		add    0x00002c(%edx),%eax
		xor    %ebx,%ebx
		mov    0x000028(%edx),%ecx
		mov    0x000068(%edx),%bl
		add    %ecx,%ebx
		sar    $0x000004,%eax
		sar    $0x000004,%ebx
		cwtl   
		movswl %bx,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax

	_02d7bb_jump:
		call   _01e1b4_func
		mov    %al,0x000010(%esp)

	_02d7c4_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		testb  $0x000002,_0924f4_data(%eax)
		je     _02d7e7_jump
		call   _02d6fc_func
		mov    $0x000001,%eax
		call   _065de4_func
		jmp    _02d97d_jump

	_02d7e7_jump:
		mov    _0ce952_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		mov    _0cc7a0_data,%esi
		add    %ebx,%edx
		mov    _0cea1c_data,%ax
		shl    $0x000002,%edx
		xor    %edi,%edi
		add    %edx,%esi
		test   %ax,%ax
		jle    _02d97d_jump

	_02d813_jump:
		cmpw   $0x000000,_0cf288_data
		jne    _02d97d_jump
		cmpw   $0x000000,_0cf272_data
		jne    _02d97d_jump
		cmpb   $0x000000,_0cf465_data
		jne    _02d97d_jump
		cmpb   $0x000000,_0cf467_data
		jne    _02d97d_jump
		cmpb   $0x000000,0x00007e(%esi)
		je     _02d954_jump
		cmpb   $0x000000,0x000076(%esi)
		je     _02d954_jump
		xor    %ebx,%ebx
		mov    0x00006d(%esi),%bl
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%esi),%dl
		lea    0x000000(,%edx,8),%ecx
		mov    (%ebx),%edx
		testb  $0x000008,0x000007(%ecx,%edx,1)
		je     _02d954_jump
		mov    0x00000a(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    $0x00005e,%eax
		push   %esi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		push   %edx
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _02cc4c_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _02d954_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		movswl %dx,%edx
		lea    0x000000(,%eax,4),%ebx
		xor    %ecx,%ecx
		add    %eax,%ebx
		mov    %esi,%eax
		mov    0x000076(%esi),%cl
		call   *_0935b8_data(,%ebx,4)
		xor    %edx,%edx
		call   _02d6fc_func
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		movb   $0x000000,0x000071(%esi)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		shr    $0x000004,%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x00000b,%edx
		je     _02d90d_jump
		cmp    $0x00000a,%edx
		je     _02d90d_jump
		movb   $0x000000,0x000072(%esi)

	_02d90d_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    %cx,%ax
		jne    _02d97d_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		shl    $0x000002,%eax
		testb  $0x000001,_092537_data(%eax)
		je     _02d97d_jump
		testb  $0x000080,_092534_data(%eax)
		je     _02d93a_jump
		mov    _0cf280_data,%ax
		jmp    _02d93e_jump

	_02d93a_jump:
		mov    0x000034(%esi),%ax

	_02d93e_jump:
		movswl %ax,%edx
		mov    $0x0000d6,%eax
		call   _071b3c_func
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d954_jump:
		inc    %edi
		movswl %di,%edx
		mov    _0ce952_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc7a0_data,%esi
		add    %edx,%esi
		cmp    _0cea1c_data,%di
		jl     _02d813_jump

	_02d97d_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lea    0x000000(%eax),%eax

	_02d988_jump:
		ret    



_02da44_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		mov    _0ce070_data,%edx
		mov    _0ce0ad_data,%bl
		add    %edx,%ebx
		mov    _0ce038_data,%edx
		sar    $0x000010,%edx
		shl    $0x000004,%edx
		xor    %eax,%eax
		cmp    %edx,%ebx
		jge    _02dbc1_jump
		mov    _0ce08c_data,%ebx
		mov    _0ce096_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%ebx
		jne    _02da9d_jump
		lea    0x000000(,%edx,4),%eax
		mov    _0ce040_data,%ebx
		sub    %edx,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		sete   %al
		xor    %ah,%ah

	_02da9d_jump:
		test   %ax,%ax
		jne    _02dbc1_jump
		mov    _0ce036_data,%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ebx
		mov    _0ce040_data,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,1)
		sete   %bl
		xor    %bh,%bh
		mov    %ebx,%eax
		test   %bx,%bx
		jne    _02dbc1_jump
		lea    0x000001(%edx),%ecx
		lea    -0x000001(%edx),%ebx
		cmpb   $0x000002,_0ce0b1_data
		jne    _02daef_jump
		cmpw   $0x000000,_0ce084_data
		je     _02db1e_jump

	_02daef_jump:
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0ce040_data,%ebx
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		je     _02db15_jump
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		jne    _02db1c_jump

	_02db15_jump:
		mov    $0x000001,%eax
		jmp    _02db1e_jump

	_02db1c_jump:
		xor    %eax,%eax

	_02db1e_jump:
		test   %ax,%ax
		jne    _02dbc1_jump
		testb  $0x000002,_0cf221_data
		jne    _02db5b_jump
		xor    %ecx,%ecx
		mov    _0ce0b1_data,%cl
		mov    _0ce050_data,%ebx
		shl    $0x000002,%ecx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    _0ce0b0_data,%bl
		testb  $0x000040,0x000007(%ecx,%ebx,8)
		jne    _02db5b_jump
		mov    $0x000001,%ebx
		jmp    _02db5d_jump

	_02db5b_jump:
		xor    %ebx,%ebx

	_02db5d_jump:
		test   %ebx,%ebx
		je     _02dbc1_jump
		mov    _0ce036_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		mov    %edx,%eax
		sub    %ebx,%edx
		test   %edx,%edx
		jge    _02db83_jump

	_02db74_jump:
		mov    _0ce036_data,%ebx
		sar    $0x000010,%ebx
		add    %ebx,%edx
		test   %edx,%edx
		jl     _02db74_jump

	_02db83_jump:
		test   %eax,%eax
		jge    _02db94_jump
		mov    _0ce036_data,%ebx
		sar    $0x000010,%ebx
		add    %ebx,%eax
		jmp    _02db83_jump

	_02db94_jump:
		mov    %edx,%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		mov    _0ce040_data,%ebx
		cmpb   $0x000008,0x000002(%ebx,%edx,2)
		je     _02dbb6_jump
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		jne    _02dbbf_jump

	_02dbb6_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02dbbf_jump:
		xor    %eax,%eax

	_02dbc1_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02dbc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0ce070_data,%edx
		mov    _0ce0ad_data,%al
		add    %eax,%edx
		mov    _0ce038_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %eax,%edx
		jge    _02dcd8_jump
		mov    _0ce096_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		add    %eax,%eax
		add    %edx,%eax
		mov    0x000002(%eax),%dl
		cmp    $0x000018,%dl
		jne    _02dc62_jump
		mov    $0x000020,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		cmpb   $0x000001,_0cf471_data
		je     _02dc3f_jump
		movb   $0x000001,_0cf471_data
		call   _0714c0_func
		call   _01cbb4_func

	_02dc3f_jump:
		xor    %ecx,%ecx
		mov    _0ce070_data,%edx
		mov    %cx,_0ce086_data
		add    $0x000005,%edx
		mov    %cx,_0ce084_data
		mov    %edx,_0ce070_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02dc62_jump:
		cmpb   $0x000018,_0ce0a9_data
		jne    _02dcad_jump
		mov    $0x000020,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		cmpb   $0x000001,_0cf471_data
		je     _02dc99_jump
		movb   $0x000001,_0cf471_data
		call   _0714c0_func
		call   _01cbb4_func

	_02dc99_jump:
		xor    %edx,%edx
		mov    %dx,_0ce086_data
		mov    %dx,_0ce084_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02dcad_jump:
		cmp    $0x000019,%dl
		jne    _02dcd8_jump
		mov    $0x00001f,%ebx
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		mov    _0cf2b0_data,%ax
		mov    %ax,_0cf266_data
		mov    %ax,_0cf25c_data

	_02dcd8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02dcdc_func:
		push   %ebx
		push   %edx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0ce086_data
		mov    %dx,_0ce084_data
		mov    %ah,_0ce0c1_data
		pop    %edx
		pop    %ebx
		ret    



_02dd0c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		test   %al,%al
		je     _02dd61_jump
		call   _06fd78_func
		xor    %ebx,%ebx
		mov    _0ce06c_data,%dx
		mov    _0ce0ac_data,%bl
		add    %edx,%ebx

	_02dd2c_jump:
		xor    %eax,%eax
		mov    _0ce070_data,%edx
		mov    _0ce0ad_data,%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e1b4_func
		cmp    $0x00000a,%al
		jne    _02dd59_jump
		decl   _0ce070_data
		jmp    _02dd2c_jump

	_02dd59_jump:
		xor    %ah,%ah
		mov    %ah,_0ce0a6_data

	_02dd61_jump:
		mov    _0ce0b1_data,%dl
		cmp    $0x000006,%dl
		jne    _02dd9f_jump
		mov    $0x000008,%ebx
		mov    $0x000006,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,_0ce086_data
		xor    %dl,%bl
		mov    %dx,_0ce084_data
		mov    %bl,_0ce174_data
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02dd9f_jump:
		testb  $0x000004,_0ce0c5_data
		je     _02e05e_jump
		cmp    $0x000003,%dl
		jne    _02ddc1_jump
		mov    _0ce0b0_data,%bh
		cmp    $0x000016,%bh
		je     _02ddc8_jump
		cmp    $0x000020,%bh
		je     _02ddc8_jump

	_02ddc1_jump:
		mov    $0x000001,%eax
		jmp    _02ddca_jump

	_02ddc8_jump:
		xor    %eax,%eax

	_02ddca_jump:
		test   %eax,%eax
		je     _02e05e_jump
		cmpb   $0x000002,_0ce0b1_data
		jne    _02dde4_jump
		cmpb   $0x00001f,_0ce0b0_data
		je     _02ddeb_jump

	_02dde4_jump:
		mov    $0x000001,%eax
		jmp    _02dded_jump

	_02ddeb_jump:
		xor    %eax,%eax

	_02dded_jump:
		test   %eax,%eax
		je     _02e05e_jump
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0ce0b0_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _02de43_jump
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _024cd0_func
		and    $_0000ff_case,%eax
		testb  $0x000010,_0924f4_data(%eax)
		je     _02de43_jump
		mov    $0x00003d,%ebx
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		jmp    _02de52_jump

	_02de43_jump:
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax

	_02de52_jump:
		call   _01d444_func
		xor    %ebx,%ebx
		mov    %bx,_0cf244_data
		test   %ecx,%ecx
		jne    _02deae_jump
		cmpb   $0x000000,_0ce0b1_data
		jne    _02de76_jump
		cmpb   $0x00003d,_0ce0b0_data
		je     _02de7d_jump

	_02de76_jump:
		mov    $0x000001,%eax
		jmp    _02de7f_jump

	_02de7d_jump:
		xor    %eax,%eax

	_02de7f_jump:
		test   %eax,%eax
		je     _02deae_jump
		testb  $0x000008,_0ce0c5_data
		je     _02de97_jump
		movw   $0x00fffe,_0ce084_data
		jmp    _02dea0_jump

	_02de97_jump:
		movw   $0x000002,_0ce084_data

	_02dea0_jump:
		movw   $0x00fffd,_0ce086_data
		jmp    _02dff5_jump

	_02deae_jump:
		cmpb   $0x000000,_0ce0b1_data
		jne    _02dec4_jump
		cmpb   $0x00003d,_0ce0b0_data
		je     _02dff5_jump

	_02dec4_jump:
		mov    0x000060(%ecx),%si
		cmp    $0x0000b4,%si
		jne    _02ded9_jump
		call   _0771fc_func
		jmp    _02df91_jump

	_02ded9_jump:
		cmp    $0x000096,%si
		jne    _02deea_jump
		call   _078fa8_func
		jmp    _02df91_jump

	_02deea_jump:
		cmp    $0x0000c6,%si
		je     _02df8c_jump
		cmp    $0x0000c8,%si
		jne    _02df06_jump
		mov    $0xffffffff,%eax
		jmp    _02df91_jump

	_02df06_jump:
		cmp    $0x000064,%si
		jne    _02df23_jump
		testb  $0x000008,0x000081(%ecx)
		jne    _02df8c_jump
		mov    $0xffffffff,%eax
		jmp    _02df91_jump

	_02df23_jump:
		cmp    $0x000078,%si
		jne    _02df32_jump
		mov    %ecx,%eax
		call   _01fdf4_func
		jmp    _02df91_jump

	_02df32_jump:
		cmp    $0x0000bb,%si
		jne    _02df42_jump
		mov    %ecx,%eax
		call   _065478_func
		jmp    _02df91_jump

	_02df42_jump:
		cmp    $0x0000d1,%si
		je     _02df8c_jump
		cmp    $0x0000d2,%si
		jne    _02df57_jump
		mov    $0xffffffff,%eax
		jmp    _02df91_jump

	_02df57_jump:
		mov    0x00003e(%ecx),%edx
		mov    _0ce082_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02df77_jump
		mov    $0x000001,%eax
		jg     _02df77_jump
		neg    %eax

	_02df77_jump:
		test   %ax,%ax
		jne    _02df91_jump
		testb  $0x000008,_0ce0c5_data
		je     _02df8c_jump
		mov    $0xffffffff,%eax
		jmp    _02df91_jump

	_02df8c_jump:
		mov    $0x000001,%eax

	_02df91_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		testb  $0x000004,_092535_data(,%edx,4)
		je     _02dfa8_jump
		mov    $0x000005,%edx
		jmp    _02dfbb_jump

	_02dfa8_jump:
		cmp    $0x0000b4,%dx
		jne    _02dfb6_jump
		mov    $0x000004,%edx
		jmp    _02dfbb_jump

	_02dfb6_jump:
		mov    $0x000002,%edx

	_02dfbb_jump:
		cmp    $0x000001,%ax
		jne    _02dfca_jump
		mov    %dx,_0ce084_data
		jmp    _02dfe2_jump

	_02dfca_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _02dfe2_jump
		mov    %edx,%ecx
		mov    %dx,_0ce084_data
		neg    %ecx
		mov    %cx,_0ce084_data

	_02dfe2_jump:
		inc    %edx
		mov    %edx,%esi
		mov    %dx,_0ce086_data
		neg    %esi
		mov    %si,_0ce086_data

	_02dff5_jump:
		mov    $0x000001,%cl
		mov    $0xffffffff,%esi
		mov    _0cf220_data,%dl
		xor    %ebx,%ebx
		xor    %al,%al
		xor    %edi,%edi
		mov    %cl,_0cf47b_data
		mov    %bx,_0cf296_data
		mov    %si,_0ce08e_data
		mov    %di,_0cf250_data
		mov    $0xffffffff,%ecx
		xor    %ah,%ah
		mov    %cx,_0cf2aa_data
		xor    %ch,%ch
		mov    %ax,_0ce08c_data
		mov    %ch,_0ce0b5_data
		mov    %ch,_0ce0b6_data
		mov    %ch,_0ce174_data
		test   $0x000008,%dl
		je     _02e057_jump
		movb   $0x000001,_0cf470_data

	_02e057_jump:
		xor    %eax,%eax
		call   _06c468_func

	_02e05e_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02e064_func:
		push   %ecx
		push   %esi
		testb  $0x000008,0x000081(%eax)
		jne    _02e07e_jump
		xor    %ecx,%ecx
		mov    (%edx),%si
		mov    0x00007a(%eax),%cl
		sub    %ecx,%esi
		mov    %si,(%edx)
		jmp    _02e08b_jump

	_02e07e_jump:
		movswl (%ebx),%esi
		movswl (%edx),%ecx
		sar    %esi
		add    %esi,%ecx
		mov    %cx,(%edx)

	_02e08b_jump:
		movswl (%ebx),%edx
		mov    0x00007a(%eax),%al
		sar    %edx
		and    $_0000ff_case,%eax
		add    %edx,%eax
		mov    %ax,(%ebx)
		pop    %esi
		pop    %ecx
		ret    

_02e0a0_switch:
		.long   _02e4ca_case
		.long   _02e3b0_case
		.long   _02e47f_case
		.long   _02e1c1_case
		.long   _02e1c1_case
		.long   _02e40c_case




_02e0b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    0x000060(%esi),%ax
		cmp    $0x00007b,%ax
		jb     _02e230_jump
		jbe    _02e396_jump
		cmp    $0x0000b5,%ax
		jb     _02e158_jump
		jbe    _02e57a_jump
		cmp    $0x0000d4,%ax
		jb     _02e12e_jump
		jbe    _02e7fa_jump
		cmp    $0x0000e2,%ax
		jb     _02e11f_jump
		jbe    _02e74d_jump
		cmp    $0x0000ef,%ax
		je     _02e345_jump
		jmp    _02e1b2_jump

	_02e11f_jump:
		cmp    $0x0000e1,%ax
		je     _02e730_jump
		jmp    _02e1b2_jump

	_02e12e_jump:
		cmp    $0x0000c3,%ax
		jb     _02e149_jump
		jbe    _02e784_jump
		cmp    $0x0000c7,%ax
		je     _02e57a_jump
		jmp    _02e1b2_jump

	_02e149_jump:
		cmp    $0x0000b8,%ax
		je     _02e74d_jump
		jmp    _02e1b2_jump

	_02e158_jump:
		cmp    $0x000099,%ax
		jb     _02e198_jump
		jbe    _02e2e2_jump
		cmp    $0x0000ac,%ax
		jb     _02e17f_jump
		jbe    _02e69e_jump
		cmp    $0x0000ae,%ax
		je     _02e730_jump
		jmp    _02e1b2_jump

	_02e17f_jump:
		cmp    $0x0000a8,%ax
		jb     _02e1b2_jump
		cmp    $0x0000a9,%ax
		jbe    _02e4ec_jump
		jmp    _02e1b2_jump

	_02e198_jump:
		cmp    $0x000084,%ax
		jb     _02e1b2_jump
		jbe    _02e513_jump
		cmp    $0x000093,%ax
		je     _02e557_jump

	_02e1b2_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx

	_02e1ba_jump:
		mov    %esi,%eax
		call   _02e064_func

	_02e1c1_case:
		mov    _0cf268_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0cf24c_data,%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    _0cf24a_data,%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%edx
		push   %eax
		mov    _0cf248_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b560_func
		test   %ax,%ax
		je     _02e849_jump
		mov    0x00007b(%esi),%dh
		cmp    $0x000002,%dh
		jae    _02e830_jump
		test   %dh,%dh
		jne    _02e81e_jump
		movb   $0x000001,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e230_jump:
		cmp    $0x000038,%ax
		jb     _02e291_jump
		jbe    _02e69e_jump
		cmp    $0x000051,%ax
		jb     _02e272_jump
		jbe    _02e4ec_jump
		cmp    $0x000064,%ax
		jb     _02e263_jump
		jbe    _02e6bb_jump
		cmp    $0x000074,%ax
		je     _02e62e_jump
		jmp    _02e1b2_jump

	_02e263_jump:
		cmp    $0x000059,%ax
		je     _02e814_jump
		jmp    _02e1b2_jump

	_02e272_jump:
		cmp    $0x00003d,%ax
		jb     _02e1b2_jump
		jbe    _02e5ad_jump
		cmp    $0x00004d,%ax
		je     _02e345_jump
		jmp    _02e1b2_jump

	_02e291_jump:
		cmp    $0x00000e,%ax
		jb     _02e2c3_jump
		jbe    _02e5e7_jump
		cmp    $0x000015,%ax
		jb     _02e2b4_jump
		jbe    _02e1c1_case
		cmp    $0x000035,%ax
		je     _02e326_jump
		jmp    _02e1b2_jump

	_02e2b4_jump:
		cmp    $0x000014,%ax
		je     _02e4ec_jump
		jmp    _02e1b2_jump

	_02e2c3_jump:
		cmp    $0x000005,%ax
		jb     _02e1b2_jump
		jbe    _02e4ec_jump
		cmp    $0x00000c,%ax
		je     _02e607_jump
		jmp    _02e1b2_jump

	_02e2e2_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %edx
		sar    %eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		mov    0x000004(%esp),%edi
		sar    $0x000010,%eax
		sub    $0x000010,%edi
		add    %edx,%eax
		mov    %di,0x000004(%esp)
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %ax,0x000008(%esp)
		addw   $0x000040,(%esp)
		jmp    _02e1c1_case

	_02e326_jump:
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		mov    %eax,%ebx
		add    %eax,%edx
		add    $0x0000c8,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,(%esp)
		jmp    _02e1c1_case

	_02e345_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02e064_func
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02e1c1_case
		cmpb   $0x000004,0x00006c(%esi)
		jne    _02e1c1_case
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		shl    $0x000002,%eax
		add    %eax,%edx
		add    %ebx,%edx
		mov    %dx,(%esp)
		jmp    _02e1c1_case

	_02e396_jump:
		mov    0x000075(%esi),%al
		sub    $0x000002,%al
		cmp    $0x000005,%al
		ja     _02e1c1_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_02e0a0_switch(,%eax,4)

	_02e3b0_case:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02e1c1_case
		cmpb   $0x000000,0x00006c(%esi)
		jne    _02e1c1_case
		xor    %eax,%eax
		mov    (%esp),%ecx
		mov    0x00007a(%esi),%al
		add    %eax,%ecx
		mov    %cx,(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x00007a(%esi),%al
		sub    %eax,%edi
		mov    %di,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x00007a(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		xor    %edx,%edx
		mov    0x00000a(%esp),%eax
		mov    0x00007a(%esi),%dl
		sar    $0x000010,%eax
		sar    %edx
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		jmp    _02e1c1_case

	_02e40c_case:
		mov    0x00006d(%esi),%ah
		cmp    $0x000001,%ah
		jne    _02e1c1_case
		cmp    0x00006c(%esi),%ah
		jne    _02e1c1_case
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		dec    %edx
		add    %edx,%eax
		mov    -0x000002(%esp),%edx
		mov    %ax,0x00000c(%esp)
		sar    $0x000010,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		mov    $0x000014,%edi
		add    %edx,%eax
		mov    %di,0x000008(%esp)
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x00007a(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		testb  $0x000008,0x000081(%esi)
		jne    _02e1c1_case
		sub    %di,0x00000c(%esp)
		jmp    _02e1c1_case

	_02e47f_case:
		mov    (%esp),%ecx
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x00007a(%esi),%al
		mov    0x000006(%esp),%edx
		add    %ecx,%eax
		sar    $0x000010,%edx
		sub    %eax,%edi
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		mov    %eax,%edx
		add    %eax,%edx
		mov    %di,0x000004(%esp)
		mov    %dx,0x000008(%esp)
		xor    %eax,%eax
		mov    %ecx,%ebx
		mov    0x00007a(%esi),%al
		add    %eax,%ebx
		mov    %bx,(%esp)
		jmp    _02e1c1_case

	_02e4ca_case:
		xor    %eax,%eax
		mov    (%esp),%ebx
		mov    0x00007a(%esi),%al
		mov    0x000004(%esp),%ecx
		add    %ebx,%eax
		sub    %eax,%ecx
		mov    %cx,0x000004(%esp)
		xor    %eax,%eax
		mov    %ebx,%edi
		mov    0x00007a(%esi),%al
		add    %eax,%edi
		mov    %di,(%esp)

	_02e4ec_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    0x000008(%esp),%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00000c(%esp),%ebx
		mov    0x00007a(%esi),%al
		sub    %eax,%ebx
		mov    %bx,0x00000c(%esp)
		jmp    _02e1c1_case

	_02e513_jump:
		testb  $0x000008,0x000081(%esi)
		je     _02e525_jump
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		jmp    _02e52e_jump

	_02e525_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		neg    %edx

	_02e52e_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000004(%esp),%ebx
		mov    (%esp),%ecx
		sar    $0x000010,%eax
		sub    $0x000032,%ebx
		add    $0x000032,%ecx
		mov    %bx,0x000004(%esp)
		add    %edx,%eax
		mov    %cx,(%esp)
		mov    %ax,0x00000c(%esp)
		jmp    _02e1c1_case

	_02e557_jump:
		cmpb   $0x000000,0x000076(%esi)
		je     _02e1c1_case
		mov    _0ce03a_data,%ax
		xor    %edx,%edx
		shl    $0x000004,%eax
		mov    %dx,0x000004(%esp)
		mov    %ax,(%esp)
		jmp    _02e1c1_case

	_02e57a_jump:
		mov    0x000028(%esi),%dx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000068(%esi),%al
		mov    %bx,0x000004(%esp)
		add    %eax,%edx
		mov    _0ce03a_data,%ax
		mov    %dx,0x00000c(%esp)
		mov    $0x000010,%edx
		shl    $0x000004,%eax
		mov    %dx,0x000008(%esp)
		mov    %ax,(%esp)
		jmp    _02e1c1_case

	_02e5ad_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		lea    0x000008(%esp),%ebx
		sub    %edx,%eax
		lea    0x00000c(%esp),%edx
		mov    %ax,0x000004(%esp)
		jmp    _02e1ba_jump

	_02e5e7_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)

	_02e607_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    0x000008(%esp),%ecx
		add    %eax,%eax
		add    %eax,%ecx
		mov    %cx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00000c(%esp),%edi
		mov    0x00007a(%esi),%al
		sub    %eax,%edi
		mov    %di,0x00000c(%esp)
		jmp    _02e1c1_case

	_02e62e_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _02e654_jump
		xor    %edx,%edx
		mov    0x000006(%esp),%eax
		mov    0x00007a(%esi),%dl
		sar    $0x000010,%eax
		sar    %edx
		sar    %eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		jmp    _02e664_jump

	_02e654_jump:
		mov    0x000006(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sar    %edx

	_02e664_jump:
		add    %edx,%eax
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    -0x000002(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		mov    %ax,0x000008(%esp)
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		add    %edx,%eax
		mov    %ax,(%esp)
		jmp    _02e1c1_case

	_02e69e_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02e064_func
		mov    (%esp),%eax
		add    %eax,%eax
		mov    %ax,(%esp)
		jmp    _02e1c1_case

	_02e6bb_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _02e6d6_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%ecx
		mov    0x00007a(%esi),%al
		sub    %eax,%ecx
		mov    %cx,0x00000c(%esp)
		jmp    _02e6f3_jump

	_02e6d6_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    $0x000096,%edx
		add    %edx,%eax
		mov    %ax,0x00000c(%esp)

	_02e6f3_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		add    $0x000096,%eax
		mov    -0x000002(%esp),%edx
		mov    %ax,0x000008(%esp)
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00007a(%esi),%al
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %ax,(%esp)
		jmp    _02e1c1_case

	_02e730_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		mov    $0x000096,%ecx
		call   _02e064_func
		mov    %cx,(%esp)
		jmp    _02e1c1_case

	_02e74d_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		mov    $0x000096,%ecx
		call   _02e064_func
		mov    0x00000c(%esp),%edi
		mov    0x000004(%esp),%eax
		mov    %cx,(%esp)
		add    $0x000046,%edi
		add    $0x000032,%eax
		mov    %di,0x00000c(%esp)
		mov    %ax,0x000004(%esp)
		jmp    _02e1c1_case

	_02e784_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02e79c_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000018,%dl
		je     _02e7a8_jump
		cmp    $0x00001e,%dl
		je     _02e7a8_jump
		cmp    $0x00000b,%dl
		je     _02e7a8_jump

	_02e79c_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _02e7ce_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _02e7ce_jump

	_02e7a8_jump:
		mov    $0x00000a,%eax
		mov    0x00000c(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    %ax,(%esp)
		sub    $0x000028,%edx
		add    $0x000050,%ebx
		mov    %dx,0x00000c(%esp)
		mov    %bx,0x000008(%esp)
		jmp    _02e1c1_case

	_02e7ce_jump:
		mov    $0x0000c8,%ebx
		mov    0x00000c(%esp),%ecx
		mov    0x000008(%esp),%edi
		mov    %bx,(%esp)
		sub    $0x000082,%ecx
		add    $0x000104,%edi
		mov    %cx,0x00000c(%esp)
		mov    %di,0x000008(%esp)
		jmp    _02e1c1_case

	_02e7fa_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02e064_func
		movw   $0x0000fa,(%esp)
		jmp    _02e1c1_case

	_02e814_jump:
		addw   $0x000014,(%esp)
		jmp    _02e1c1_case

	_02e81e_jump:
		cmp    $0x000001,%dh
		jne    _02e85e_jump
		movb   $0x000002,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e830_jump:
		mov    %dh,%bl
		inc    %bl
		mov    %bl,0x00007b(%esi)
		cmp    $0x000014,%bl
		jne    _02e85e_jump
		movb   $0x000002,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e849_jump:
		mov    0x000060(%esi),%cx
		movb   $0x000000,0x00007b(%esi)
		cmp    $0x000015,%cx
		jne    _02e85e_jump
		andb   $0x0000fe,0x000081(%esi)

	_02e85e_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e868_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000032(%eax),%edx
		mov    $0x0000cc,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		mov    0x000060(%ecx),%ax
		cmp    $0x00003c,%ax
		jb     _02e95c_jump
		jbe    _02eaa1_jump
		cmp    $0x00006d,%ax
		jb     _02e8f2_jump
		jbe    _02ea0b_jump
		cmp    $0x000091,%ax
		jb     _02e8d3_jump
		jbe    _02ea0b_jump
		cmp    $0x0000bc,%ax
		jb     _02e8c4_jump
		jbe    _02ea0b_jump
		cmp    $0x0000f3,%ax
		je     _02ea0b_jump
		jmp    _02eabd_jump

	_02e8c4_jump:
		cmp    $0x0000a5,%ax
		je     _02ea2f_jump
		jmp    _02eabd_jump

	_02e8d3_jump:
		cmp    $0x00007b,%ax
		jb     _02eabd_jump
		jbe    _02ea69_jump
		cmp    $0x00008e,%ax
		je     _02ea0b_jump
		jmp    _02eabd_jump

	_02e8f2_jump:
		cmp    $0x000052,%ax
		jb     _02e92d_jump
		jbe    _02ea0b_jump
		cmp    $0x000065,%ax
		jb     _02eabd_jump
		jbe    _02ea0b_jump
		cmp    $0x000069,%ax
		jb     _02eabd_jump
		cmp    $0x00006b,%ax
		jbe    _02ea0b_jump
		mov    %ecx,%eax
		call   _01dbe4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e92d_jump:
		cmp    $0x00003f,%ax
		jb     _02eabd_jump
		jbe    _02ea0b_jump
		cmp    $0x000044,%ax
		jb     _02eabd_jump
		cmp    $0x000045,%ax
		jbe    _02ea0b_jump
		mov    %ecx,%eax
		call   _01dbe4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e95c_jump:
		cmp    $0x000019,%ax
		jb     _02e9d3_jump
		cmp    $0x00001d,%ax
		jbe    _02ea0b_jump
		cmp    $0x00002d,%ax
		jb     _02e9ae_jump
		jbe    _02ea0b_jump
		cmp    $0x000039,%ax
		jb     _02e999_jump
		jbe    _02ea16_jump
		cmp    $0x00003a,%ax
		je     _02ea0b_jump
		mov    %ecx,%eax
		call   _01dbe4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e999_jump:
		cmp    $0x00002f,%ax
		je     _02ea0b_jump
		mov    %ecx,%eax
		call   _01dbe4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e9ae_jump:
		cmp    $0x00001e,%ax
		jbe    _02ea27_jump
		cmp    $0x000029,%ax
		jb     _02eabd_jump
		cmp    $0x00002a,%ax
		jbe    _02ea0b_jump
		mov    %ecx,%eax
		call   _01dbe4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e9d3_jump:
		cmp    $0x000009,%ax
		jb     _02e9fc_jump
		jbe    _02ea2f_jump
		cmp    $0x000010,%ax
		jb     _02eabd_jump
		cmp    $0x000011,%ax
		jbe    _02ea0b_jump
		cmp    $0x000016,%ax
		je     _02ea0b_jump
		mov    %ecx,%eax
		call   _01dbe4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e9fc_jump:
		test   %ax,%ax
		jbe    _02ea2f_jump
		cmp    $0x000001,%ax
		jne    _02eabd_jump

	_02ea0b_jump:
		andb   $0x0000f7,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ea16_jump:
		cmpb   $0x000004,0x00006c(%ecx)
		jne    _02ea0b_jump
		mov    %ecx,%eax
		call   _01dbe4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ea27_jump:
		movb   $0x000001,0x00007f(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ea2f_jump:
		mov    %ecx,%eax
		call   _01dbe4_func
		testb  $0x000008,0x000081(%ecx)
		je     _02ea54_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _060460_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ea54_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _060460_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ea69_jump:
		mov    0x000075(%ecx),%al
		cmp    $0x000002,%al
		jb     _02ea7c_jump
		cmp    $0x000003,%al
		jbe    _02eac4_jump
		cmp    $0x000006,%al
		jb     _02ea7c_jump
		cmp    $0x000007,%al
		jbe    _02eac4_jump

	_02ea7c_jump:
		mov    %ecx,%eax
		call   _01dbe4_func
		testb  $0x000008,0x000081(%ecx)
		je     _02ea54_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _060460_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02eaa1_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    $0x000007,%edx
		call   _01dbe4_func
		mov    %ecx,%eax
		call   _060460_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02eabd_jump:
		mov    %ecx,%eax
		call   _01dbe4_func

	_02eac4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02eac8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    0x000052(%eax),%dx
		mov    0x000034(%eax),%bx
		mov    %edx,%ecx
		cmp    %bx,%dx
		je     _02eb56_jump

	_02eadf_jump:
		movswl %cx,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000002,_092535_data(,%eax,4)
		je     _02eb0f_jump
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		call   _073b58_func
		test   %al,%al
		jne    _02eb38_jump

	_02eb0f_jump:
		mov    %ebx,%eax
		call   _05dc2c_func
		mov    0x000081(%ebx),%dh
		or     $0x000004,%dh
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		mov    $0x000001,%edx
		call   _05538c_func
		mov    %ebx,%eax
		call   _02e868_func

	_02eb38_jump:
		mov    0x000032(%ebx),%eax
		mov    _0ce8d4_data,%edx
		sar    $0x000010,%eax
		mov    %ecx,%esi
		mov    (%edx,%eax,2),%cx
		mov    %ebx,%eax
		call   _058bcc_func
		cmp    %cx,%si
		jne    _02eadf_jump

	_02eb56_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02eb5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce952_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    _0cea1c_data,%dx
		xor    %esi,%esi
		test   %dx,%dx
		jle    _02ec12_jump

	_02eb8c_jump:
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		testb  $0x000004,_092534_data(,%edx,4)
		jne    _02ebe6_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000020,0x000007(%ebx,%edx,8)
		je     _02ebe6_jump
		mov    _0cf24c_data,%ecx
		mov    _0cf24a_data,%ebx
		mov    _0cf248_data,%edx
		push   %eax
		mov    _0cf268_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02cc4c_func

	_02ebe6_jump:
		inc    %esi
		movswl %si,%eax
		mov    _0ce952_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%edx
		mov    _0cea1c_data,%bx
		add    %edx,%eax
		cmp    %bx,%si
		jl     _02eb8c_jump

	_02ec12_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ec18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ce952_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cc7a0_data,%esi
		add    %edx,%eax
		xor    %edi,%edi
		shl    $0x000002,%eax
		mov    _0cea1c_data,%dx
		add    %eax,%esi
		test   %dx,%dx
		jle    _02ee7c_jump

	_02ec4a_jump:
		cmpw   $0x000000,_0cf288_data
		jne    _02ee7c_jump
		cmpw   $0x000000,_0cf272_data
		jne    _02ee7c_jump
		cmpb   $0x000000,_0cf465_data
		jne    _02ee7c_jump
		cmpb   $0x000000,_0cf467_data
		jne    _02ee7c_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		testb  $0x000020,0x000007(%eax,%edx,8)
		je     _02ee50_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		shl    $0x000002,%eax
		testb  $0x000010,_092536_data(%eax)
		jne    _02ede3_jump
		cmpb   $0x000000,_0ce0c1_data
		jne    _02ee50_jump
		mov    _0ce098_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _02ee50_jump
		xor    %edx,%edx
		mov    _0ce0b1_data,%dl
		mov    _0ce050_data,%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0ce0b0_data,%dl
		lea    0x000000(,%edx,8),%ecx
		mov    (%ebx),%edx
		testb  $0x000008,0x000007(%ecx,%edx,1)
		je     _02ee50_jump
		testb  $0x000004,_092534_data(%eax)
		jne    _02ee50_jump
		cmpw   $0x0000aa,0x000060(%esi)
		jne    _02ed2b_jump
		mov    0x00006b(%esi),%cl
		cmp    $0x000003,%cl
		ja     _02ed24_jump
		test   %cl,%cl
		jne    _02ed2b_jump

	_02ed24_jump:
		mov    $0xffffffff,%eax
		jmp    _02ed6f_jump

	_02ed2b_jump:
		cmpw   $0x000093,0x000060(%esi)
		jne    _02ed40_jump
		cmpb   $0x000000,0x000076(%esi)
		je     _02ed40_jump
		mov    $0xffffffff,%eax
		jmp    _02ed6f_jump

	_02ed40_jump:
		mov    _0cf268_data,%eax
		mov    _0cf24c_data,%ecx
		mov    _0cf24a_data,%ebx
		mov    _0cf248_data,%edx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02cc4c_func

	_02ed6f_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		je     _02ee50_jump
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		imul   $0x000014,%edx,%edx
		mov    %esi,%eax
		call   *_0935bc_data(%edx)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000008,_092534_data(,%eax,4)
		je     _02ee50_jump
		mov    _0ce098_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02ee50_jump
		cmpb   $0x000003,_0ce0b1_data
		jne    _02edc1_jump
		cmpb   $0x000020,_0ce0b0_data
		je     _02edc8_jump

	_02edc1_jump:
		mov    $0x000001,%eax
		jmp    _02edca_jump

	_02edc8_jump:
		xor    %eax,%eax

	_02edca_jump:
		test   %eax,%eax
		je     _02ee50_jump
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02dd0c_func
		jmp    _02ee7c_jump

	_02ede3_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _02edf5_jump
		cmpb   $0x000020,_0ce0b0_data
		je     _02ee50_jump

	_02edf5_jump:
		mov    0x000060(%esi),%dx
		cmp    $0x000051,%dx
		je     _02ee06_jump
		cmp    $0x0000a9,%dx
		jne    _02ee0a_jump

	_02ee06_jump:
		xor    %eax,%eax
		jmp    _02ee39_jump

	_02ee0a_jump:
		mov    _0cf268_data,%eax
		mov    _0cf24c_data,%ecx
		mov    _0cf24a_data,%ebx
		mov    _0cf248_data,%edx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02cc4c_func

	_02ee39_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		je     _02ee50_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		imul   $0x000014,%eax,%edx
		mov    %esi,%eax
		call   *_0935bc_data(%edx)

	_02ee50_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0ce952_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%esi
		mov    _0cea1c_data,%bx
		add    %eax,%esi
		cmp    %bx,%di
		jl     _02ec4a_jump

	_02ee7c_jump:
		cmpb   $0x000000,_0ce0c1_data
		je     _02ee8a_jump
		call   _02dcdc_func

	_02ee8a_jump:
		mov    _0ce098_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jle    _02ee9e_jump
		decw   _0ce09a_data

	_02ee9e_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02eea4_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000010,_092536_data(,%eax,4)
		je     _02ef4a_jump
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%edx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%edx),%al
		testb  $0x000020,0x000007(%ebx,%eax,8)
		je     _02ef4a_jump
		cmpb   $0x000003,_0ce0b1_data
		jne    _02eef1_jump
		cmpb   $0x000020,_0ce0b0_data
		je     _02eef8_jump

	_02eef1_jump:
		mov    $0x000001,%eax
		jmp    _02eefa_jump

	_02eef8_jump:
		xor    %eax,%eax

	_02eefa_jump:
		test   %eax,%eax
		je     _02ef4a_jump
		mov    _0ce09a_data,%bx
		cmp    $0x00003c,%bx
		jge    _02ef3c_jump
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		jne    _02ef3c_jump
		mov    $0x000001,%eax
		call   _02dd0c_func
		mov    _0cf254_data,%dx
		cmp    $0x000003,%dx
		je     _02ef4a_jump
		cmp    $0x000004,%dx
		je     _02ef4a_jump
		movw   $0x00003c,_0ce09a_data
		pop    %edx
		pop    %ebx
		ret    

	_02ef3c_jump:
		xor    %eax,%eax
		call   _02dd0c_func
		mov    %bx,_0ce09a_data

	_02ef4a_jump:
		pop    %edx
		pop    %ebx
		ret    



_02ef50_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		xor    %ah,%ah
		lea    0x000010(%esp),%ecx
		mov    %ah,0x000024(%esp)
		lea    0x000020(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %edi,%eax
		call   _01d364_func
		mov    0x000060(%edi),%dx
		cmp    $0x000008,%dx
		je     _02ef92_jump
		cmp    $0x000086,%dx
		je     _02ef92_jump
		cmp    $0x0000a7,%dx
		jne    _02efc6_jump

	_02ef92_jump:
		mov    0x000014(%esp),%esi
		mov    0x000004(%esp),%eax
		mov    0x000010(%esp),%edx
		mov    0x000020(%esp),%ebx
		add    $0x00000a,%esi
		add    $0x000014,%eax
		sub    $0x000014,%edx
		sub    $0x000019,%ebx
		mov    %si,0x000014(%esp)
		mov    %ax,0x000004(%esp)
		mov    %dx,0x000010(%esp)
		mov    %bx,0x000020(%esp)
		jmp    _02eff4_jump

	_02efc6_jump:
		mov    0x000014(%esp),%eax
		mov    0x000004(%esp),%edx
		mov    0x000010(%esp),%ebx
		mov    0x000020(%esp),%ecx
		add    %esi,%eax
		add    %esi,%edx
		mov    %ax,0x000014(%esp)
		add    %esi,%esi
		mov    %dx,0x000004(%esp)
		sub    %esi,%ebx
		sub    %esi,%ecx
		mov    %bx,0x000010(%esp)
		mov    %cx,0x000020(%esp)

	_02eff4_jump:
		mov    _0ce952_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%esi
		shl    $0x000002,%eax
		xor    %ecx,%ecx
		add    %eax,%esi
		mov    _0cea1c_data,%ax
		mov    %cx,0x00001c(%esp)
		test   %ax,%ax
		jle    _02f2fe_jump

	_02f025_jump:
		cmp    %esi,%edi
		je     _02f2c5_jump
		mov    0x000060(%esi),%ax
		test   %ax,%ax
		jbe    _02f045_jump
		cmp    $0x0000d6,%ax
		je     _02f18c_jump
		jmp    _02f2be_jump

	_02f045_jump:
		mov    0x00006d(%esi),%cl
		cmp    $0x000002,%cl
		je     _02f2be_jump
		test   %cl,%cl
		jne    _02f05b_jump
		cmpb   $0x000003,0x00006c(%esi)
		je     _02f062_jump

	_02f05b_jump:
		mov    $0x000001,%ebx
		jmp    _02f064_jump

	_02f062_jump:
		xor    %ebx,%ebx

	_02f064_jump:
		test   %ebx,%ebx
		je     _02f2be_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _02f2be_jump
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d7e0_func
		test   %ax,%ax
		je     _02f2be_jump
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    0x00000a(%esp),%eax
		mov    0x00001e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000e(%esp),%edx
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b560_func
		test   %ax,%ax
		je     _02f2be_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		movb   $0x000004,0x000075(%esi)
		movw   $0x000000,0x00004c(%esi)
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x00000b,0x000074(%esi)
		or     $0x000020,%bh
		mov    %bh,0x000081(%esi)
		mov    _0ce08e_data,%ax
		cmp    0x000034(%edi),%ax
		jne    _02f142_jump
		call   _06d898_func

	_02f142_jump:
		cmpb   $0x000002,0x000070(%esi)
		jne    _02f16e_jump
		testb  $0x000008,0x000081(%esi)
		je     _02f15d_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _02f167_jump

	_02f15d_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_02f167_jump:
		mov    %esi,%eax
		call   _060460_func

	_02f16e_jump:
		mov    $0x000009,%edx
		mov    %edi,%eax
		call   _01d434_func
		mov    $0x000001,%al
		movl   $0x000000,0x000024(%edi)
		mov    %al,0x000024(%esp)
		jmp    _02f2be_jump

	_02f18c_jump:
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d7e0_func
		test   %ax,%ax
		je     _02f2be_jump
		cmpw   $0x000068,0x000060(%edi)
		jne    _02f2be_jump
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    0x00000a(%esp),%eax
		mov    0x00001e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000e(%esp),%edx
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b560_func
		test   %ax,%ax
		je     _02f2be_jump
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02f212_jump
		cmpb   $0x000006,0x00006c(%esi)
		je     _02f219_jump

	_02f212_jump:
		mov    $0x000001,%eax
		jmp    _02f21b_jump

	_02f219_jump:
		xor    %eax,%eax

	_02f21b_jump:
		test   %eax,%eax
		je     _02f2be_jump
		testb  $0x000008,0x000081(%edi)
		je     _02f26f_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		mov    0x000028(%edi),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%edi),%dl
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _02f250_jump
		mov    $0x000001,%eax
		jg     _02f250_jump
		neg    %eax

	_02f250_jump:
		test   %eax,%eax
		jl     _02f26f_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %edi,%eax
		movb   $0x000001,0x00007d(%esi)
		call   _060460_func
		movw   $0x000008,0x000040(%esi)

	_02f26f_jump:
		testb  $0x000008,0x000081(%edi)
		jne    _02f2be_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		lea    (%eax,%ecx,1),%edx
		mov    0x000028(%edi),%ebp
		xor    %eax,%eax
		sub    %ebp,%edx
		mov    0x000068(%edi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02f29f_jump
		mov    $0x000001,%eax
		jg     _02f29f_jump
		neg    %eax

	_02f29f_jump:
		test   %eax,%eax
		jge    _02f2be_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %edi,%eax
		movb   $0x000001,0x00007d(%esi)
		call   _060460_func
		movw   $0x00fff8,0x000040(%esi)

	_02f2be_jump:
		cmpb   $0x000000,0x000024(%esp)
		jne    _02f2fe_jump

	_02f2c5_jump:
		mov    0x00001c(%esp),%edx
		inc    %edx
		mov    %dx,0x00001c(%esp)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    _0ce952_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%esi
		mov    _0cea1c_data,%bx
		add    %eax,%esi
		cmp    %bx,%dx
		jl     _02f025_jump

	_02f2fe_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02f310_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		movswl %bx,%ebx
		mov    0x00002c(%eax),%esi
		add    %ebx,%esi
		mov    _0ce036_data,%ebx
		sar    $0x000004,%esi
		sar    $0x000010,%ebx
		imul   %ebx,%esi
		mov    0x000028(%eax),%edi
		movswl %cx,%ebx
		add    %edi,%ebx
		sar    $0x000004,%ebx
		mov    0x000058(%eax),%cx
		add    %esi,%ebx
		xor    %edx,%edx
		cmp    %cx,%bx
		je     _02f34d_jump
		mov    $0x000001,%edx
		mov    %bx,0x000058(%eax)

	_02f34d_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_02f354_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    0x000040(%eax),%di
		mov    $_0000ff_case,%ah
		xor    %edx,%edx
		mov    %ah,0x000004(%esp)
		mov    0x000060(%ecx),%ax
		mov    %dx,(%esp)
		cmp    $0x00007b,%ax
		jb     _02f3e8_jump
		jbe    _02f3c6_jump
		cmp    $0x0000ac,%ax
		jne    _02f3e8_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _02f3e8_jump
		mov    $0x00000f,%bh
		mov    $0x000002,%edx
		mov    %ecx,%eax
		mov    %bh,0x000004(%esp)
		mov    $0x000003,%ebx
		call   _01d444_func
		mov    $0x000005,%ebx
		mov    $0xfffffffd,%esi
		mov    %bx,(%esp)
		jmp    _02f3e8_jump

	_02f3c6_jump:
		testb  $0x000002,0x00007d(%ecx)
		je     _02f3e8_jump
		mov    $0x000001,%ah
		mov    $0x000005,%ebx
		mov    $0x000002,%edx
		mov    %ah,0x000004(%esp)
		mov    %ecx,%eax
		mov    $0xfffffffd,%esi
		call   _01d444_func

	_02f3e8_jump:
		cmpb   $_0000ff_case,0x000004(%esp)
		je     _02f423_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000004(%esp),%dl
		call   _060460_func
		movb   $0x000000,0x000071(%ecx)
		mov    %di,0x000040(%ecx)
		mov    (%esp),%al
		mov    0x00002c(%ecx),%edx
		mov    %si,0x000042(%ecx)
		sub    $0x00000c,%edx
		mov    %al,0x000072(%ecx)
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01e3bc_func

	_02f423_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f42c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		call   _01d450_func
		mov    %eax,%edi
		mov    %ecx,%eax
		call   _01d580_func
		movswl %di,%edi
		movswl %ax,%esi
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d6f4_func
		test   %ax,%ax
		je     _02f478_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _02f310_func
		test   %ax,%ax
		je     _02f478_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _060460_func

	_02f478_jump:
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    0x000070(%ecx),%dl
		mov    %ah,0x000081(%ecx)
		cmp    $0x000014,%dl
		jne    _02f49f_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_02f49f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f4a8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		testb  $0x000080,_0cf220_data
		je     _02f578_jump
		cmpw   $0x000003,_0cf254_data
		je     _02f578_jump
		xor    %eax,%eax
		mov    _0ce070_data,%edx
		mov    _0ce0ad_data,%al
		mov    0x00002c(%ecx),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000069(%ecx),%dl
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02f4e8_jump
		neg    %eax

	_02f4e8_jump:
		cmp    $0x0000fa,%eax
		jge    _02f578_jump
		call   _06ec0c_func
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cf236_data
		mov    %ecx,%eax
		call   _07ad90_func
		cwtl   
		mov    %ax,0x00004e(%ecx)
		cmp    $0x000100,%eax
		jg     _02f520_jump
		jne    _02f528_jump
		testb  $0x000008,_0ce0c5_data
		jne    _02f528_jump

	_02f520_jump:
		movw   $0x00ffff,0x000052(%ecx)
		jmp    _02f52e_jump

	_02f528_jump:
		movw   $0x000001,0x000052(%ecx)

	_02f52e_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _02f548_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _02f548_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _060460_func

	_02f548_jump:
		mov    _0ce0d0_data,%ecx
		xor    %bh,%bh
		mov    0x000081(%ecx),%al
		mov    %bh,_0ce172_data
		and    $0x0000fb,%al
		mov    %bh,_0ce171_data
		mov    %al,0x000081(%ecx)
		xor    %eax,%eax
		movl   $0x000000,0x000024(%ecx)
		call   _065de4_func

	_02f578_jump:
		pop    %ecx
		pop    %ebx
		ret    



_02f57c_func:
		push   %ebx
		push   %edx
		cmpb   $0x000001,0x00006d(%eax)
		jne    _02f59c_jump
		movw   $0x000000,0x000042(%eax)
		xor    %ebx,%ebx
		xor    %edx,%edx
		movw   $0x000000,0x000040(%eax)
		call   _01d444_func
		pop    %edx
		pop    %ebx
		ret    

	_02f59c_jump:
		cmpw   $0x00000a,0x000060(%eax)
		jne    _02f5b5_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02f5b5_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _02f5b5_jump
		movw   $0x000000,0x000042(%eax)

	_02f5b5_jump:
		pop    %edx
		pop    %ebx
		ret    



_02f5b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		mov    0x000060(%ecx),%dx
		cmp    $0x000001,%ax
		je     _02f64a_jump
		cmp    $0x000002,%ax
		je     _02f64a_jump
		cmp    $0x00000b,%ax
		je     _02f64a_jump
		cmp    $0x000016,%ax
		je     _02f64a_jump
		cmp    $0x000003,%ax
		je     _02f64a_jump
		cmp    $0x000009,%ax
		je     _02f64a_jump
		cmp    $0x000004,%ax
		je     _02f64a_jump
		cmp    $0x000005,%ax
		je     _02f64a_jump
		cmp    $0x000006,%ax
		je     _02f64a_jump
		cmp    $0x00000f,%ax
		je     _02f64a_jump
		cmp    $0x000010,%ax
		je     _02f64a_jump
		cmp    $0x000011,%ax
		je     _02f64a_jump
		cmp    $0x00000c,%dx
		je     _02f638_jump
		cmp    $0x00000e,%dx
		je     _02f638_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d444_func

	_02f638_jump:
		mov    %ecx,%eax
		call   _0552b4_func
		mov    %ecx,%eax
		call   _025590_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f64a_jump:
		cmp    $0x000003,%ax
		je     _02f656_jump
		cmp    $0x000006,%ax
		jne    _02f66f_jump

	_02f656_jump:
		mov    0x000081(%ecx),%ah
		movw   $0x00fff8,0x000042(%ecx)
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f66f_jump:
		cmp    $0x00000b,%ax
		je     _02f681_jump
		cmp    $0x000002,%ax
		je     _02f681_jump
		cmp    $0x000016,%ax
		jne    _02f6be_jump

	_02f681_jump:
		cmp    $0x00000e,%dx
		jb     _02f69b_jump
		jbe    _02f6a1_jump
		cmp    $0x00003c,%dx
		jb     _02f6be_jump
		jbe    _02f6ac_jump
		cmp    $0x00003d,%dx
		je     _02f6b7_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f69b_jump:
		cmp    $0x00000c,%dx
		jne    _02f6be_jump

	_02f6a1_jump:
		mov    %ecx,%eax
		call   _07a798_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f6ac_jump:
		mov    %ecx,%eax
		call   _02ae4c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f6b7_jump:
		mov    %ecx,%eax
		call   _02b014_func

	_02f6be_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f6c4_func:
		push   %edx
		mov    0x000060(%eax),%dx
		cmp    $0x00000a,%dx
		jb     _02f6d9_jump
		jbe    _02f6e1_jump
		cmp    $0x000018,%dx
		je     _02f720_jump
		pop    %edx
		ret    

	_02f6d9_jump:
		cmp    $0x000001,%dx
		je     _02f703_jump
		pop    %edx
		ret    

	_02f6e1_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02f769_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _02f769_jump
		cmpb   $0x000003,0x000070(%eax)
		jne    _02f718_jump
		movw   $0x00fffe,0x000042(%eax)
		pop    %edx
		ret    

	_02f703_jump:
		mov    0x000070(%eax),%dl
		cmp    $0x000003,%dl
		jne    _02f713_jump
		movw   $0x00fffe,0x000042(%eax)
		pop    %edx
		ret    

	_02f713_jump:
		cmp    $0x000004,%dl
		jne    _02f769_jump

	_02f718_jump:
		movw   $0x000002,0x000042(%eax)
		pop    %edx
		ret    

	_02f720_jump:
		cmpb   $0x000002,0x000070(%eax)
		je     _02f769_jump
		mov    0x000048(%eax),%dx
		dec    %edx
		mov    %dx,0x000048(%eax)
		test   %dx,%dx
		jle    _02f751_jump
		mov    0x000070(%eax),%dh
		cmp    $0x000003,%dh
		jne    _02f744_jump
		movw   $0x00ffff,0x000042(%eax)
		pop    %edx
		ret    

	_02f744_jump:
		cmp    $0x000004,%dh
		jne    _02f769_jump
		movw   $0x000001,0x000042(%eax)
		pop    %edx
		ret    

	_02f751_jump:
		movw   $0x000000,0x000042(%eax)
		movw   $0x000000,0x000048(%eax)
		mov    0x00002c(%eax),%dx
		movb   $0x000002,0x000070(%eax)
		mov    %dx,0x00003e(%eax)

	_02f769_jump:
		pop    %edx
		ret    



_02f76c_func:
		cmpw   $0x000000,0x000060(%eax)
		jne    _02f786_jump
		cmpb   $0x000001,0x00006d(%eax)
		jne    _02f786_jump
		cmpb   $0x00000b,0x00006c(%eax)
		jne    _02f786_jump
		andb   $0x0000ef,0x000081(%eax)

	_02f786_jump:
		ret    



_02f788_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		call   _02f76c_func
		mov    0x000070(%edx),%al
		cmp    $0x000003,%al
		jb     _02f7b6_jump
		cmp    $0x000004,%al
		jbe    _02f80e_jump
		cmp    $0x000014,%al
		jb     _02f828_jump
		jbe    _02f818_jump
		pop    %edx
		pop    %ebx
		ret    

	_02f7b6_jump:
		cmp    $0x000001,%al
		jbe    _02f7c4_jump
		mov    %edx,%eax
		call   _02f57c_func
		pop    %edx
		pop    %ebx
		ret    

	_02f7c4_jump:
		test   %al,%al
		jne    _02f7d1_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _02f7d8_jump

	_02f7d1_jump:
		orb    $0x000008,0x000081(%edx)

	_02f7d8_jump:
		cmp    $0x000001,%bx
		jne    _02f7ef_jump
		mov    %edx,%eax
		call   _0552b4_func
		mov    %edx,%eax
		call   _025590_func
		pop    %edx
		pop    %ebx
		ret    

	_02f7ef_jump:
		cmp    $0x000002,%bx
		jne    _02f7ff_jump
		mov    %edx,%eax
		call   _0552b4_func
		pop    %edx
		pop    %ebx
		ret    

	_02f7ff_jump:
		test   %bx,%bx
		jne    _02f828_jump
		mov    %edx,%eax
		call   _02f5b8_func
		pop    %edx
		pop    %ebx
		ret    

	_02f80e_jump:
		mov    %edx,%eax
		call   _02f6c4_func
		pop    %edx
		pop    %ebx
		ret    

	_02f818_jump:
		mov    0x000056(%edx),%bx
		mov    %bx,0x000040(%edx)
		mov    0x00004a(%edx),%bx
		mov    %bx,0x000042(%edx)

	_02f828_jump:
		pop    %edx
		pop    %ebx
		ret    

_02f82c_switch:
		.long   _02f872_case
		.long   _02f898_case
		.long   _02f88a_case
		.long   _02f8ce_case
		.long   _02f8ce_case
		.long   _02f8b0_case




_02f844_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		cmpw   $0x000091,0x000060(%eax)
		jne    _02f8d2_jump
		mov    0x00006c(%eax),%al
		cmp    $0x000005,%al
		ja     _02f8ce_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_02f82c_switch(,%eax,4)

	_02f872_case:
		mov    0x000056(%esi),%cx
		dec    %cx
		mov    %cx,0x000056(%esi)
		jne    _02f8ce_case
		movb   $0x000003,0x00006c(%esi)
		movw   $0x00001e,0x000056(%esi)
		jmp    _02f8ce_case

	_02f88a_case:
		mov    0x000056(%esi),%di
		dec    %di
		mov    %di,0x000056(%esi)
		jne    _02f8ce_case
		jmp    _02f8bc_jump

	_02f898_case:
		mov    0x000056(%esi),%dx
		dec    %dx
		mov    %dx,0x000056(%esi)
		jne    _02f8ce_case
		movb   $0x000002,0x00006c(%esi)
		movw   $0x000005,0x000056(%esi)
		jmp    _02f8ce_case

	_02f8b0_case:
		mov    0x000056(%esi),%bx
		dec    %bx
		mov    %bx,0x000056(%esi)
		jne    _02f8ce_case

	_02f8bc_jump:
		movb   $0x000000,0x00006c(%esi)
		mov    0x000050(%esi),%ax
		movw   $0x000064,0x000050(%esi)
		mov    %ax,0x000056(%esi)

	_02f8ce_case:
		movb   $0x000000,0x000073(%esi)

	_02f8d2_jump:
		mov    _0ce06c_data,%ax
		sub    0x000028(%esi),%ax
		mov    0x00002c(%esi),%bx
		mov    %eax,%edx
		mov    _0ce070_data,%ax
		sub    %ebx,%eax
		mov    0x000060(%esi),%cx
		mov    %eax,%ebx
		add    $0x000020,%edx
		add    $0x000019,%ebx
		cmp    $0x000091,%cx
		jne    _02f903_jump
		add    $0x000014,%edx
		add    $0x00000a,%ebx

	_02f903_jump:
		test   %dx,%dx
		setg   %al
		mov    %al,(%esp)
		test   %bx,%bx
		setg   %al
		mov    %al,0x000004(%esp)
		cmpb   $0x000000,(%esp)
		jne    _02f91e_jump
		neg    %edx

	_02f91e_jump:
		cmpb   $0x000000,0x000004(%esp)
		jne    _02f927_jump
		neg    %ebx

	_02f927_jump:
		cmp    $0x0000c8,%dx
		jle    _02f960_jump
		mov    $0x000001,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _02f93c_jump
		sar    %cl,%ax
		jmp    _02f945_jump

	_02f93c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02f945_jump:
		mov    $0x000001,%cl
		mov    %eax,%edx
		mov    %ebx,%eax
		test   %ax,%ax
		js     _02f955_jump
		sar    %cl,%ax
		jmp    _02f95e_jump

	_02f955_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02f95e_jump:
		mov    %eax,%ebx

	_02f960_jump:
		test   %bx,%bx
		jne    _02f98e_jump
		cmpb   $0x000000,(%esp)
		je     _02f975_jump
		mov    $0x00001b,%ecx
		jmp    _02fa34_jump

	_02f975_jump:
		test   %dx,%dx
		je     _02f984_jump
		mov    $0x000009,%ecx
		jmp    _02fa34_jump

	_02f984_jump:
		mov    $0xffffffff,%ecx
		jmp    _02fa34_jump

	_02f98e_jump:
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		cmpb   $0x000000,(%esp)
		je     _02f9f3_jump
		cmpb   $0x000000,0x000004(%esp)
		je     _02f9db_jump
		cmp    $_0000ff_case,%cx
		jle    _02f9cb_jump
		mov    $0x00001b,%ecx
		jmp    _02fa34_jump

	_02f9cb_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _094a54_data(%eax),%cl
		add    $0x00001b,%ecx
		jmp    _02fa34_jump

	_02f9db_jump:
		cmp    $_0000ff_case,%cx
		jle    _02f9e6_jump
		xor    %ecx,%ecx
		jmp    _02fa34_jump

	_02f9e6_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _094a54_data(%eax),%cl
		jmp    _02fa34_jump

	_02f9f3_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _02fa18_jump
		cmp    $_0000ff_case,%cx
		jle    _02fa08_jump
		mov    $0x000012,%ecx
		jmp    _02fa34_jump

	_02fa08_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _094a54_data(%eax),%cl
		add    $0x000012,%ecx
		jmp    _02fa34_jump

	_02fa18_jump:
		cmp    $_0000ff_case,%cx
		jle    _02fa26_jump
		mov    $0x000009,%ecx
		jmp    _02fa34_jump

	_02fa26_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _094a54_data(%eax),%cl
		add    $0x000009,%ecx

	_02fa34_jump:
		cmpb   $0x000003,0x00006c(%esi)
		jne    _02fa91_jump
		mov    0x000056(%esi),%di
		dec    %di
		mov    %di,0x000056(%esi)
		jne    _02fa91_jump
		movb   $0x000001,0x00006c(%esi)
		mov    0x000036(%esi),%ax
		movw   $0x00003c,0x000056(%esi)
		movswl %ax,%ebx
		mov    0x000038(%esi),%dx
		cmp    $0xffffffcc,%ebx
		jle    _02fa8b_jump
		movswl %dx,%ebx
		cmp    $0xffffffdc,%ebx
		jle    _02fa8b_jump
		cmp    $0x000131,%ax
		jge    _02fa8b_jump
		cmp    $0x0000c3,%dx
		jge    _02fa8b_jump
		movswl %cx,%ebx
		mov    0x00002a(%esi),%edx
		mov    0x000026(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _07b240_func
		jmp    _02fa91_jump

	_02fa8b_jump:
		movw   $0x000028,0x000050(%esi)

	_02fa91_jump:
		movswl %cx,%eax
		cmp    $0xffffffff,%eax
		je     _02fa9e_jump
		dec    %cl
		mov    %cl,0x00006b(%esi)

	_02fa9e_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02faa8_func:
		push   %ebx
		mov    %eax,%ebx
		mov    0x000076(%eax),%ah
		dec    %ah
		mov    %ah,0x000076(%ebx)
		je     _02fac9_jump
		mov    $0x000005,%edx
		mov    %ebx,%eax
		call   _01d434_func
		movw   $0x000032,0x000056(%ebx)
		pop    %ebx
		ret    

	_02fac9_jump:
		mov    $0x000006,%edx
		mov    %ebx,%eax
		call   _01d434_func
		pop    %ebx
		ret    

_02fad8_switch:
		.long   _02fc5e_case
		.long   _02fcba_case
		.long   _02fb0b_case
		.long   _02fbb2_case


	_02fb0b_case:
		mov    0x000028(%eax),%ebp
		xor    %ecx,%ecx
		mov    0x00002c(%eax),%edi
		mov    0x000068(%eax),%cl
		mov    _0ce036_data,%eax
		sar    $0x000004,%edi
		sar    $0x000010,%eax
		imul   %edi,%eax
		add    %ebp,%ecx
		sub    $0x000008,%ecx
		sar    $0x000004,%ecx
		lea    (%ecx,%eax,1),%edi
		lea    0x000000(,%edi,4),%ecx
		sub    %edi,%ecx
		mov    _0ce040_data,%edi
		mov    0x000002(%edi,%ecx,2),%cl
		and    $_0000ff_case,%ecx
		testb  $0x000001,_0924f4_data(%ecx)
		je     _02fb56_jump
		mov    $0x000001,%esi

	_02fb56_jump:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%eax
		mov    0x000068(%ebx),%cl
		lea    (%ecx,%eax,1),%edi
		mov    0x00002c(%ebx),%ebx
		mov    _0ce036_data,%ecx
		sar    $0x000004,%ebx
		sar    $0x000010,%ecx
		imul   %ecx,%ebx
		add    $0x000007,%edi
		sar    $0x000004,%edi
		lea    (%edi,%ebx,1),%ecx
		lea    0x000000(,%ecx,4),%ebx
		sub    %ecx,%ebx
		mov    _0ce040_data,%ecx
		mov    0x000002(%ecx,%ebx,2),%bl
		and    $_0000ff_case,%ebx
		testb  $0x000001,_0924f4_data(%ebx)
		je     _02fd16_jump
		mov    $0x000001,%esi
		mov    %esi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02fbb2_case:
		xor    %ecx,%ecx
		mov    0x000028(%eax),%edx
		mov    0x000068(%eax),%cl
		lea    (%ecx,%edx,1),%edi
		mov    0x00002c(%eax),%ecx
		add    $0x00009a,%ecx
		mov    _0ce036_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		sub    $0x000008,%edi
		sar    $0x000004,%edi
		add    %ecx,%edi
		lea    0x000000(,%edi,4),%ecx
		sub    %edi,%ecx
		mov    _0ce040_data,%edi
		mov    0x000002(%edi,%ecx,2),%cl
		and    $_0000ff_case,%ecx
		testb  $0x000001,_0924f4_data(%ecx)
		je     _02fc03_jump
		mov    $0x000001,%esi

	_02fc03_jump:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%edi
		mov    0x000068(%ebx),%cl
		mov    0x00002c(%ebx),%ebx
		add    %ecx,%edi
		mov    _0ce036_data,%ecx
		sar    $0x000004,%ebx
		sar    $0x000010,%ecx
		imul   %ecx,%ebx
		add    $0x000007,%edi
		sar    $0x000004,%edi
		lea    (%edi,%ebx,1),%ecx
		lea    0x000000(,%ecx,4),%ebx
		sub    %ecx,%ebx
		mov    _0ce040_data,%ecx
		mov    0x000002(%ecx,%ebx,2),%bl
		and    $_0000ff_case,%ebx
		testb  $0x000001,_0924f4_data(%ebx)
		je     _02fd16_jump
		mov    $0x000001,%esi
		mov    %esi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02fc5e_case:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x000068(%ebx),%cl
		add    %ebp,%ecx
		sub    $0x000010,%ecx
		sar    $0x000004,%ecx
		mov    $0x000006,%edx
		mov    %ecx,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp

	_02fc7b_jump:
		movswl %dx,%ecx
		add    0x00002c(%ebx),%ecx
		mov    _0ce036_data,%edi
		sar    $0x000004,%ecx
		sar    $0x000010,%edi
		imul   %edi,%ecx
		add    %ebp,%ecx
		imul   $0x000006,%ecx,%ecx
		mov    _0ce040_data,%edi
		movzbl 0x000002(%ecx,%edi,1),%edi
		testb  $0x000001,_0924f4_data(%edi)
		je     _02fcae_jump
		mov    $0x000001,%esi

	_02fcae_jump:
		inc    %eax
		add    $0x000010,%edx
		cmp    $0x00000a,%ax
		jge    _02fd16_jump
		jmp    _02fc7b_jump

	_02fcba_case:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%edi
		mov    0x000068(%ebx),%cl
		add    %edi,%ecx
		add    $0x000010,%ecx
		sar    $0x000004,%ecx
		mov    $0x000006,%edx
		mov    %ecx,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%ebp

	_02fcd9_jump:
		movswl %dx,%ecx
		add    0x00002c(%ebx),%ecx
		mov    _0ce036_data,%edi
		sar    $0x000004,%ecx
		sar    $0x000010,%edi
		imul   %edi,%ecx
		add    %ebp,%ecx
		imul   $0x000006,%ecx,%ecx
		mov    _0ce040_data,%edi
		movzbl 0x000002(%ecx,%edi,1),%edi
		testb  $0x000001,_0924f4_data(%edi)
		je     _02fd0c_jump
		mov    $0x000001,%esi

	_02fd0c_jump:
		inc    %eax
		add    $0x000010,%edx
		cmp    $0x00000a,%ax
		jl     _02fcd9_jump

	_02fd16_jump:
		mov    %esi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02fd24_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _02f788_func
		cmpb   $0x000004,0x00006c(%edx)
		jne    _02fd91_jump
		cmpb   $0x00000e,0x00006b(%edx)
		jne    _02fd91_jump
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%edx),%al
		mov    0x000005(%ebx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _02fd91_jump
		mov    0x000034(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff60,%eax
		jle    _02fd91_jump
		cmpw   $0x0000fa,0x000036(%edx)
		jge    _02fd91_jump
		cmpw   $0x000064,0x000038(%edx)
		jge    _02fd91_jump
		mov    0x00002c(%edx),%ebx
		add    $0x000056,%ebx
		mov    %edx,%eax
		mov    %ebx,0x00002c(%edx)
		call   _055148_func
		subl   $0x000056,0x00002c(%edx)

	_02fd91_jump:
		pop    %edx
		pop    %ebx
		ret    



_02fd94_func:
		push   %edx
		testb  $0x000080,_0cf221_data
		jne    _02fdcc_jump
		mov    _0cf2c4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02fdcc_jump
		mov    _0cf2c6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02fdcc_jump
		mov    _0ce0b1_data,%dl
		test   %dl,%dl
		je     _02fdc7_jump
		cmp    $0x000001,%dl
		jne    _02fdcc_jump

	_02fdc7_jump:
		call   _05a734_func

	_02fdcc_jump:
		pop    %edx
		ret    

_02fdd0_switch:
		.long   _02ff7c_case
		.long   _030043_case
		.long   _02fe18_case
		.long   _02fec7_case




_02fde0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		xor    %ecx,%ecx
		mov    0x000028(%eax),%si
		mov    0x000068(%eax),%cl
		xor    %ebx,%ebx
		mov    %ecx,%edi
		mov    0x00002c(%eax),%cx
		add    %esi,%edi
		movzbw 0x000074(%eax),%si
		sub    $0x000019,%edi
		add    %ecx,%esi
		cmp    $0x000003,%dx
		ja     _030103_jump
		xor    %eax,%eax
		mov    %dx,%ax
		jmp    *%cs:_02fdd0_switch(,%eax,4)

	_02fe18_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000003,%edx
		jge    _030103_jump
		mov    _0ce036_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %di,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce040_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $_0000ff_case,%edx
		testb  $0x000002,_0924f4_data(%edx)
		je     _02fe6f_jump
		mov    $0x000001,%ebx

	_02fe6f_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce040_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $_0000ff_case,%edx
		testb  $0x000002,_0924f4_data(%edx)
		je     _02fe97_jump
		mov    $0x000001,%ebx

	_02fe97_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		je     _030103_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02fec7_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x00000c,%edx
		jle    _030103_jump
		add    $0x000030,%ecx
		mov    _0ce036_data,%edx
		sar    $0x000004,%ecx
		sar    $0x000010,%edx
		imul   %ecx,%edx
		movswl %di,%eax
		sar    $0x000004,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0ce040_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		je     _02ff21_jump
		mov    $0x000001,%ebx

	_02ff21_jump:
		inc    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ecx
		mov    _0ce040_data,%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		je     _02ff4a_jump
		mov    $0x000001,%ebx

	_02ff4a_jump:
		inc    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		je     _030103_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02ff7c_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x000003,%edx
		jge    _030103_jump
		movswl %si,%eax
		mov    _0ce036_data,%edx
		add    %edi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %eax,%edx
		sar    $0x000004,%ecx
		add    %ecx,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		mov    _0ce040_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		je     _02ffd6_jump
		mov    $0x000001,%ebx

	_02ffd6_jump:
		mov    _0ce036_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0ce040_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		je     _030006_jump
		mov    $0x000001,%ebx

	_030006_jump:
		mov    _0ce036_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0ce040_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		je     _030103_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_030043_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x00000c,%edx
		jle    _030103_jump
		movswl %si,%eax
		mov    _0ce036_data,%edx
		add    %edi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		add    $0x000003,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce040_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $_0000ff_case,%edx
		testb  $0x000002,_0924f4_data(%edx)
		je     _0300a0_jump
		mov    $0x000001,%ebx

	_0300a0_jump:
		mov    _0ce036_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce040_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $_0000ff_case,%edx
		testb  $0x000002,_0924f4_data(%edx)
		je     _0300d2_jump
		mov    $0x000001,%ebx

	_0300d2_jump:
		mov    _0ce036_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		je     _030103_jump
		mov    $0x000001,%ebx

	_030103_jump:
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03010c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0302cb_jump
		cmpb   $0x00000c,0x00006c(%ecx)
		jne    _0302cb_jump
		mov    %ecx,%eax
		call   _01d450_func
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _01d580_func
		movswl %dx,%edi
		movswl %ax,%esi
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d6f4_func
		test   %ax,%ax
		je     _03016e_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _02f310_func
		test   %ax,%ax
		je     _03016e_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _060460_func

	_03016e_jump:
		mov    0x000081(%ecx),%dh
		and    $0x0000f7,%dh
		mov    0x000070(%ecx),%bl
		mov    %dh,0x000081(%ecx)
		cmp    $0x000014,%bl
		jne    _03018d_jump
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_03018d_jump:
		mov    _0ce08e_data,%dx
		mov    0x000034(%ecx),%bx
		xor    %eax,%eax
		cmp    %bx,%dx
		jne    _03020a_jump
		xor    %ebx,%edx
		mov    0x000028(%ecx),%si
		mov    0x000068(%ecx),%dl
		add    %edx,%esi
		xor    %edx,%edx
		mov    _0ce06c_data,%di
		mov    _0ce0ac_data,%dl
		add    %edi,%edx
		sub    %esi,%edx
		test   %dx,%dx
		jle    _0301e7_jump
		cmp    $0x00000a,%dx
		jle    _0301d1_jump
		mov    $0x000001,%eax

	_0301d1_jump:
		cmp    $0x00000f,%dx
		jle    _0301d8_jump
		inc    %eax

	_0301d8_jump:
		cmp    $0x000012,%dx
		jle    _0301df_jump
		inc    %eax

	_0301df_jump:
		cmp    $0x00002a,%dx
		jle    _03020a_jump
		jmp    _030208_jump

	_0301e7_jump:
		neg    %edx
		cmp    $0x00000a,%dx
		jle    _0301f4_jump
		mov    $0xffffffff,%eax

	_0301f4_jump:
		cmp    $0x00000f,%dx
		jle    _0301fb_jump
		dec    %eax

	_0301fb_jump:
		cmp    $0x000012,%dx
		jle    _030202_jump
		dec    %eax

	_030202_jump:
		cmp    $0x000029,%dx
		jle    _03020a_jump

	_030208_jump:
		xor    %eax,%eax

	_03020a_jump:
		mov    %ax,0x000040(%ecx)
		cmpw   $0x000000,0x000042(%ecx)
		jge    _030299_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _02fde0_func
		test   %ax,%ax
		je     _030295_jump
		mov    0x000050(%ecx),%dx
		movw   $0x000000,0x000042(%ecx)
		inc    %edx
		mov    %dx,0x000050(%ecx)
		cmp    $0x0000f0,%dx
		jle    _030299_jump
		mov    0x00002c(%ecx),%edx
		sub    $0x000050,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _07abbc_func
		mov    0x000032(%ecx),%edx
		mov    $0x000073,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		mov    0x00003a(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00003c(%ecx),%edx
		mov    $0x000004,%ebx
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _07af48_func
		jmp    _030299_jump

	_030295_jump:
		mov    %ax,0x000050(%ecx)

	_030299_jump:
		mov    0x000040(%ecx),%si
		test   %si,%si
		jle    _0302b5_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _02fde0_func
		test   %ax,%ax
		je     _0302cb_jump
		jmp    _0302c5_jump

	_0302b5_jump:
		jge    _0302cb_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _02fde0_func
		test   %ax,%ax
		je     _0302cb_jump

	_0302c5_jump:
		movw   $0x000000,0x000040(%ecx)

	_0302cb_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0302d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    0x000056(%eax),%ax
		add    %ax,0x00003c(%edx)

	_0302e3_jump:
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0302ef_jump
		neg    %eax

	_0302ef_jump:
		cmp    $0x000080,%eax
		jl     _03032b_jump
		cmpw   $0x000000,0x000056(%edx)
		jle    _030314_jump
		mov    0x000028(%edx),%ecx
		mov    0x00003c(%edx),%ax
		inc    %ecx
		sub    $0x000080,%eax
		mov    %ecx,0x000028(%edx)
		mov    %ax,0x00003c(%edx)
		jmp    _0302e3_jump

	_030314_jump:
		mov    0x000028(%edx),%ebx
		mov    0x00003c(%edx),%di
		dec    %ebx
		add    $0x000080,%edi
		mov    %ebx,0x000028(%edx)
		mov    %di,0x00003c(%edx)
		jmp    _0302e3_jump

	_03032b_jump:
		mov    0x00004a(%edx),%ax
		add    %ax,0x00003e(%edx)

	_030333_jump:
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _03033f_jump
		neg    %eax

	_03033f_jump:
		cmp    $0x000080,%eax
		jl     _03037b_jump
		cmpw   $0x000000,0x00004a(%edx)
		jle    _030364_jump
		mov    0x00002c(%edx),%edi
		mov    0x00003e(%edx),%si
		inc    %edi
		sub    $0x000080,%esi
		mov    %edi,0x00002c(%edx)
		mov    %si,0x00003e(%edx)
		jmp    _030333_jump

	_030364_jump:
		mov    0x00002c(%edx),%esi
		mov    0x00003e(%edx),%cx
		dec    %esi
		add    $0x000080,%ecx
		mov    %esi,0x00002c(%edx)
		mov    %cx,0x00003e(%edx)
		jmp    _030333_jump

	_03037b_jump:
		mov    %edx,%eax
		call   _01dc5c_func
		mov    0x000076(%edx),%al
		dec    %al
		mov    %al,0x00006b(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030390_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		cmp    $0x000001,%al
		jbe    _0303a4_jump
		cmp    $0x000002,%al
		jne    _0303c6_jump
		jmp    _0303b8_jump

	_0303a4_jump:
		test   %al,%al
		jne    _0303b1_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _0303b8_jump

	_0303b1_jump:
		orb    $0x000008,0x000081(%ecx)

	_0303b8_jump:
		mov    %ecx,%eax
		call   _0552b4_func
		mov    %ecx,%eax
		call   _025590_func

	_0303c6_jump:
		cmpw   $0x000000,0x000040(%ecx)
		je     _030442_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000008,%eax
		xor    %edx,%edx
		movswl %ax,%esi
		mov    0x000068(%ecx),%dl
		mov    %esi,%ebx
		mov    %ecx,%eax
		movzbw 0x000068(%ecx),%di
		call   _02f310_func
		test   %ax,%ax
		je     _030442_jump
		movswl %di,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d6f4_func
		test   %ax,%ax
		je     _030442_jump
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		jne    _030429_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		or     $0x000008,%bh
		mov    $0x000002,%edx
		mov    %bh,0x000081(%ecx)
		mov    $0x000001,%ebx
		jmp    _03043d_jump

	_030429_jump:
		mov    %dh,%bl
		and    $0x0000f7,%bl
		mov    %bl,0x000081(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_03043d_jump:
		call   _060460_func

	_030442_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030448_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cf276_data,%eax
		sar    $0x000010,%eax
		mov    _0cf2ac_data,%edx
		add    $0x0000be,%eax
		mov    _0cc7a4_data,%bx
		mov    %eax,0x00002c(%ecx)
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%al
		movw   $0x000082,0x000050(%ecx)
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %edx,0x000028(%ecx)
		mov    _0cc7a0_data,%edx
		test   %bx,%bx
		jle    _0304f7_jump

	_03048a_jump:
		cmpw   $0x00009d,0x000060(%edx)
		jne    _0304eb_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _0304eb_jump
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000040(%edx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%edx)
		mov    0x000028(%ecx),%eax
		add    $0x000065,%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01dc5c_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%bl
		movb   $0x000001,0x00006c(%edx)
		or     $0x000004,%bl
		mov    %bl,0x000081(%edx)
		jmp    _0304f7_jump

	_0304eb_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _03048a_jump

	_0304f7_jump:
		movw   $0x000000,0x0000c6(%edx)
		mov    0x000105(%edx),%bh
		movw   $0x000000,0x0000c4(%edx)
		and    $0x0000f7,%bh
		mov    %bh,0x000105(%edx)
		mov    0x000028(%ecx),%eax
		add    $0x0000ca,%eax
		mov    %eax,0x0000ac(%edx)
		add    $0x000084,%edx
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01dc5c_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%al
		movb   $0x000002,0x00006c(%edx)
		or     $0x000004,%al
		mov    %al,0x000081(%edx)
		movw   $0x000000,0x0000c6(%edx)
		mov    0x000105(%edx),%ah
		movw   $0x000000,0x0000c4(%edx)
		and    $0x0000f7,%ah
		mov    %ah,0x000105(%edx)
		mov    0x000028(%ecx),%eax
		add    $0x00012f,%eax
		mov    %eax,0x0000ac(%edx)
		add    $0x000084,%edx
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01dc5c_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%bl
		movb   $0x000003,0x00006c(%edx)
		or     $0x000004,%bl
		mov    %bl,0x000081(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0305c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edx
		testb  $0x000004,_0ce0c5_data
		je     _030883_jump
		cmpb   $0x000003,_0ce0b1_data
		jne    _0305e7_jump
		cmpb   $0x000017,_0ce0b0_data
		je     _0305ee_jump

	_0305e7_jump:
		mov    $0x000001,%eax
		jmp    _0305f0_jump

	_0305ee_jump:
		xor    %eax,%eax

	_0305f0_jump:
		test   %eax,%eax
		je     _030883_jump
		mov    _0cf282_data,%ax
		cmp    $0x000003,%ax
		jb     _030619_jump
		jbe    _0306ba_jump
		cmp    $0x000005,%ax
		jbe    _0307b0_jump
		jmp    _03088f_jump

	_030619_jump:
		cmp    $0x000001,%ax
		jne    _03088f_jump
		mov    0x000076(%edx),%al
		test   %al,%al
		jbe    _030643_jump
		cmp    $0x000001,%al
		jne    _0306b2_jump
		sub    %al,%al
		mov    %al,0x000076(%edx)
		mov    %edx,%eax
		call   _030448_func
		jmp    _03088f_jump

	_030643_jump:
		cmpw   $0x000028,0x000050(%edx)
		jg     _030668_jump
		mov    _0cf272_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		cmpw   $0x000001,0x000056(%ebx,%eax,4)
		jne    _0306a7_jump

	_030668_jump:
		cmpb   $0x000000,_0cf3ef_data
		je     _030688_jump
		testb  $0x000004,_0ce0c5_data
		je     _030688_jump
		cmpl   $0x000078,0x00002c(%edx)
		jle    _030688_jump
		movw   $0x00ffff,0x000042(%edx)
		jmp    _03068e_jump

	_030688_jump:
		movw   $0x000000,0x000042(%edx)

	_03068e_jump:
		mov    0x000050(%edx),%si
		test   %si,%si
		jle    _03088f_jump
		mov    %esi,%edi
		dec    %edi
		mov    %di,0x000050(%edx)
		jmp    _03088f_jump

	_0306a7_jump:
		movw   $0x000000,0x000042(%edx)
		jmp    _03088f_jump

	_0306b2_jump:
		decb   0x000076(%edx)
		jmp    _03088f_jump

	_0306ba_jump:
		mov    _0cf282_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _03075c_jump
		mov    _0cf2c6_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		je     _030725_jump
		mov    _0cf2b0_data,%ax
		add    $0x000078,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00002c(%edx),%eax
		mov    0x00003c(%edx),%ebx
		sub    $0x000064,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _0306fb_jump
		subl   $0x000003,0x00002c(%edx)

	_0306fb_jump:
		decl   0x00002c(%edx)
		mov    0x00003c(%edx),%eax
		mov    0x00002c(%edx),%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _03071a_jump
		cmpb   $0x000000,_0cf3ef_data
		je     _03071a_jump
		lea    -0x000001(%ebx),%ecx
		mov    %ecx,0x00002c(%edx)

	_03071a_jump:
		movw   $0x000001,0x000056(%edx)
		jmp    _0307a3_jump

	_030725_jump:
		cmpw   $0x000001,0x000056(%edx)
		jne    _030747_jump
		xor    %ebx,%eax
		mov    _0ce0ad_data,%al
		add    _0ce070_data,%ax
		movw   $0x000000,0x000056(%edx)
		sub    $0x00001e,%eax
		mov    %ax,0x00003e(%edx)

	_030747_jump:
		mov    0x00003c(%edx),%eax
		mov    0x00002c(%edx),%esi
		sar    $0x000010,%eax
		cmp    %esi,%eax
		jge    _0307a3_jump
		lea    -0x000001(%esi),%edi
		mov    %edi,0x00002c(%edx)
		jmp    _0307a3_jump

	_03075c_jump:
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		cmpb   $0x000000,0x000076(%ebx,%eax,4)
		jbe    _0307a3_jump
		mov    _0cf276_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edx),%ebx
		add    $0x000078,%eax
		cmp    %ebx,%eax
		jle    _0307a3_jump
		mov    0x00003a(%edx),%bx
		add    $0x00000e,%ebx
		mov    %bx,0x00003a(%edx)
		cmp    $0x000010,%bx
		jle    _0307a3_jump
		mov    %ebx,%esi
		mov    0x00002c(%edx),%ecx
		sub    $0x000010,%esi
		inc    %ecx
		mov    %si,0x00003a(%edx)
		mov    %ecx,0x00002c(%edx)

	_0307a3_jump:
		mov    0x00002c(%edx),%ax
		sub    $0x000078,%eax
		mov    %ax,_0cf266_data

	_0307b0_jump:
		mov    0x000034(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff5a,%eax
		jge    _030824_jump
		mov    0x000028(%edx),%ebp
		mov    0x00006c(%edx),%bl
		add    $0x0001f9,%ebp
		inc    %bl
		mov    %ebp,0x000028(%edx)
		mov    %bl,0x00006c(%edx)
		cmp    $0x000003,%bl
		jbe    _0307da_jump
		movb   $0x000000,0x00006c(%edx)

	_0307da_jump:
		cmpw   $0x000008,_0cf270_data
		jne    _03088f_jump
		mov    _0cf282_data,%cx
		cmp    $0x000005,%cx
		jne    _03088f_jump
		sub    %cx,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0cf276_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edx),%ebx
		add    $0x000078,%eax
		cmp    %ebx,%eax
		jle    _03088f_jump
		mov    %eax,0x00002c(%edx)
		jmp    _03088f_jump

	_030824_jump:
		cmpw   $0x00016e,0x000036(%edx)
		jle    _03088f_jump
		mov    0x000028(%edx),%esi
		mov    0x00006c(%edx),%al
		sub    $0x0001f9,%esi
		dec    %al
		mov    %esi,0x000028(%edx)
		mov    %al,0x00006c(%edx)
		cmp    $0x000003,%al
		jbe    _030848_jump
		movb   $0x000003,0x00006c(%edx)

	_030848_jump:
		cmpw   $0x000008,_0cf270_data
		jne    _03088f_jump
		mov    _0cf282_data,%di
		cmp    $0x000005,%di
		jne    _03088f_jump
		add    %di,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0cf276_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edx),%edi
		add    $0x000078,%eax
		cmp    %edi,%eax
		jle    _03088f_jump
		mov    %eax,0x00002c(%edx)
		jmp    _03088f_jump

	_030883_jump:
		movw   $0x000000,0x000042(%edx)
		movw   $0x000000,0x000040(%edx)

	_03088f_jump:
		mov    _0cf2ae_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edx),%esi
		add    $0x000078,%eax
		cmp    %esi,%eax
		jle    _0308a4_jump
		mov    %eax,0x00002c(%edx)

	_0308a4_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0308ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		mov    _0ce8d4_data,%ebx
		mov    0x000032(%eax),%edx
		movzbl 0x00006d(%eax),%ebp
		sar    $0x000010,%edx
		shl    $0x000002,%ebp
		mov    (%ebx,%edx,2),%dx
		mov    0x00000c(%eax),%ebx
		add    %ebx,%ebp
		xor    %ebx,%ebx
		mov    0x000000(%ebp),%ebp
		mov    0x00006c(%eax),%bl
		movzbl 0x000002(%ebp,%ebx,8),%ebp
		lea    0x000000(,%ebp,4),%ebx
		sub    %ebp,%ebx
		mov    0x000004(%eax),%ebp
		mov    0x00000a(%ebp,%ebx,4),%bl
		mov    %bl,0x000008(%esp)
		mov    0x000034(%eax),%bx
		xor    %edi,%edi
		cmp    %bx,%dx
		je     _0309c0_jump
		mov    %edi,0x000004(%esp)
		xor    %esi,%esi

	_030909_jump:
		movswl %dx,%ebp
		imul   $0x000084,%ebp,%edx
		mov    0x000004(%esp),%eax
		mov    _0cc7a0_data,%ebx
		add    $0x000020,%eax
		add    %edx,%ebx
		mov    %eax,0x000004(%esp)
		mov    0x000081(%ebx),%ah
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ebx)
		mov    0x00006b(%ecx),%dl
		mov    %edx,(%esp)
		inc    %edi
		mov    (%esp),%eax
		movswl %di,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %dl,0x00006b(%ebx)
		xor    %edx,%edx
		mov    0x000076(%ecx),%dl
		mov    0x000004(%esp),%eax
		sub    $0x000002,%edx
		imul   %edx,%eax
		mov    0x00003c(%ecx),%dx
		add    %eax,%edx
		mov    %dx,0x00003c(%ebx)
		mov    0x00003e(%ecx),%dx
		mov    %dx,0x00003e(%ebx)
		add    $0x000100,%esi
		mov    0x000050(%ecx),%dx
		sub    %esi,%edx
		mov    %dx,0x000050(%ebx)
		mov    0x00003a(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%ebx)
		mov    0x00003c(%ebx),%edx
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ebx)
		call   _01dc5c_func
		mov    _0ce8d4_data,%ebx
		mov    (%ebx,%ebp,2),%dx
		cmp    0x000034(%ecx),%dx
		jne    _030909_jump

	_0309c0_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0309cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x000060(%eax),%dx
		cmp    $0x0000b2,%dx
		je     _0309e4_jump
		cmp    $0x0000f1,%dx
		jne    _030a23_jump

	_0309e4_jump:
		cmpw   $0x000000,0x000052(%esi)
		jne    _030a23_jump
		xor    %ecx,%ecx
		mov    0x00006a(%esi),%cl
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    0x000004(%esi),%ecx
		mov    0x00000a(%ecx,%eax,4),%ax
		dec    %eax
		cwtl   
		call   _06b8d0_func
		mov    %al,0x00006b(%esi)
		mov    %esi,%eax
		movw   $0x001000,0x000050(%esi)
		call   _0308ac_func
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030a23_jump:
		mov    $0x000028,%ebx
		lea    0x000050(%esi),%ecx
		mov    $0x000018,%edx
		mov    %esi,%eax
		call   _01d154_func
		movw   $0x000000,0x000040(%esi)
		mov    %ax,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030a48_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _030a95_jump
		cmpb   $0x000036,0x00006c(%ecx)
		jne    _030a95_jump
		mov    %ecx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _030a7c_jump
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%ecx)
		jmp    _030a89_jump

	_030a7c_jump:
		cmpb   $0x000000,0x00006b(%ecx)
		jne    _030a89_jump
		mov    %ecx,%eax
		call   _07af48_func

	_030a89_jump:
		mov    %ecx,%eax
		call   _055b7c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030a95_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _030aa7_jump
		cmpb   $0x000017,_0ce0b0_data
		je     _030ad8_jump

	_030aa7_jump:
		cmpw   $0x000003,_0cf254_data
		jne    _030b76_jump
		cmpb   $0x000002,_0ce0b1_data
		jne    _030ac7_jump
		cmpb   $0x00001f,_0ce0b0_data
		je     _030ace_jump

	_030ac7_jump:
		mov    $0x000001,%eax
		jmp    _030ad0_jump

	_030ace_jump:
		xor    %eax,%eax

	_030ad0_jump:
		test   %eax,%eax
		je     _030b76_jump

	_030ad8_jump:
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000069(%ecx),%dl
		call   _0188b0_func
		cwtl   
		mov    0x00002c(%ecx),%esi
		sub    %edx,%eax
		sub    %esi,%eax
		cmp    $0x000020,%eax
		jg     _030b1b_jump
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000069(%ecx),%dl
		call   _0188b0_func
		cwtl   
		mov    $0x000036,%ebx
		sub    %edx,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01d444_func
		movb   $0x00006b,0x00006a(%ecx)
		movb   $0x000000,0x00006b(%ecx)
		jmp    _030b31_jump

	_030b1b_jump:
		mov    0x000081(%ecx),%dl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)

	_030b31_jump:
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _07af48_func
		mov    _0cf2d0_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		mov    0x000081(%eax,%edx,4),%bl
		movl   $0x000000,0x000024(%eax,%edx,4)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%eax,%edx,4)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030b76_jump:
		mov    _0cf47f_data,%ah
		test   %ah,%ah
		je     _030d00_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cf485_data,%al
		mov    _0cf484_data,%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _030bdc_jump
		mov    _0cf2d0_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		andb   $0x0000fb,0x000081(%ecx)
		andb   $0x0000fb,0x000081(%edx)
		mov    %ecx,%eax
		call   _07af48_func
		cmpl   $0x000000,0x000024(%edx)
		je     _030d1f_jump
		mov    %edx,%eax
		call   _07af48_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030bdc_jump:
		mov    %edx,%eax
		shl    $0x000003,%edx
		add    %eax,%edx
		add    %edx,%edx
		add    $_0cea1e_data,%edx
		movswl (%edx),%eax
		mov    %eax,0x000028(%ecx)
		mov    (%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%edx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x000009(%edx),%al
		mov    %al,0x00006c(%ecx)
		mov    0x00000a(%edx),%al
		mov    %al,0x00006a(%ecx)
		mov    0x00000b(%edx),%al
		mov    %al,0x00006b(%ecx)
		mov    0x00000c(%edx),%al
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		xor    %eax,%eax
		mov    0x000011(%edx),%al
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		mov    0x00007e(%ecx),%bl
		mov    %ax,0x00005a(%ecx)
		test   %bl,%bl
		jne    _030c55_jump
		mov    %ecx,%eax
		call   _07af48_func

	_030c55_jump:
		mov    _0cf2d0_data,%eax
		sar    $0x000010,%eax
		movb   $0x000004,0x00007e(%ecx)
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%ecx
		mov    0x000010(%edx),%bh
		add    %eax,%ecx
		test   %bh,%bh
		je     _030cd9_jump
		mov    0x000081(%ecx),%ah
		movb   $0x000004,0x00007e(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000002(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x000004(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00000d(%edx),%al
		mov    %al,0x00006a(%ecx)
		mov    0x00000e(%edx),%al
		mov    %al,0x00006b(%ecx)
		mov    0x00000f(%edx),%al
		and    $0x000001,%al
		mov    0x000081(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%ecx)
		mov    %dl,%dh
		movw   $0x000000,0x000042(%ecx)
		or     %al,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _030ce0_jump

	_030cd9_jump:
		andb   $0x0000fb,0x000081(%ecx)

	_030ce0_jump:
		mov    _0cf484_data,%bl
		inc    %bl
		mov    %bl,_0cf484_data
		cmp    $0x000064,%bl
		jbe    _030d1f_jump
		xor    %cl,%cl
		mov    %cl,_0cf484_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030d00_jump:
		mov    %ah,0x00007e(%ecx)
		mov    _0cf2d0_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		andb   $0x0000fb,0x000081(%eax,%edx,4)

	_030d1f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030d24_func:
		push   %edx
		cmpb   $0x000001,_0cf47f_data
		jne    _030d36_jump
		xor    %dl,%dl
		mov    %dl,_0ce0ba_data

	_030d36_jump:
		pop    %edx
		ret    



_030d38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%ah
		or     $0x000008,%ah
		mov    _0cf44b_data,%dl
		mov    %ah,0x000081(%esi)
		cmp    $0x000001,%dl
		jne    _030f42_jump
		mov    %ah,%bl
		and    $0x0000df,%bl
		mov    %bl,0x000081(%esi)
		cmpw   $0x000000,_0ce084_data
		jle    _030d7e_jump
		testb  $0x000008,_0ce0c5_data
		jne    _030d95_jump

	_030d7e_jump:
		cmpw   $0x000000,_0ce084_data
		jge    _030df5_jump
		testb  $0x000008,_0ce0c5_data
		jne    _030df5_jump

	_030d95_jump:
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030da3_jump
		neg    %eax

	_030da3_jump:
		cmp    $0x000002,%eax
		jge    _030dc0_jump
		cmpw   $0x000000,_0ce084_data
		jle    _030db9_jump
		mov    $0x000002,%eax
		jmp    _030df1_jump

	_030db9_jump:
		mov    $0xfffffffe,%eax
		jmp    _030df1_jump

	_030dc0_jump:
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030dce_jump
		neg    %eax

	_030dce_jump:
		cmp    $0x000007,%eax
		jl     _030deb_jump
		cmpw   $0x000000,_0ce084_data
		jle    _030de4_jump
		mov    $0x000007,%eax
		jmp    _030df1_jump

	_030de4_jump:
		mov    $0xfffffff9,%eax
		jmp    _030df1_jump

	_030deb_jump:
		mov    _0ce084_data,%ax

	_030df1_jump:
		mov    %ax,0x000050(%esi)

	_030df5_jump:
		mov    0x000056(%esi),%dx
		test   %dx,%dx
		jne    _030e76_jump
		mov    _0ce084_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030e10_jump
		neg    %eax

	_030e10_jump:
		test   %eax,%eax
		jg     _030e29_jump
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030e22_jump
		neg    %eax

	_030e22_jump:
		cmp    $0x000002,%eax
		jle    _030e6e_jump
		jmp    _030e6a_jump

	_030e29_jump:
		mov    _0ce086_data,%cx
		test   %cx,%cx
		jle    _030e4f_jump
		mov    _0ce084_data,%bx
		test   %bx,%bx
		jle    _030e47_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _030e6e_jump

	_030e47_jump:
		jge    _030e6a_jump
		movb   $0x000002,0x00006b(%esi)
		jmp    _030e6e_jump

	_030e4f_jump:
		jge    _030e6e_jump
		mov    _0ce084_data,%ax
		test   %ax,%ax
		jle    _030e62_jump
		movb   $0x000002,0x00006b(%esi)
		jmp    _030e6e_jump

	_030e62_jump:
		jge    _030e6a_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _030e6e_jump

	_030e6a_jump:
		movb   $0x000001,0x00006b(%esi)

	_030e6e_jump:
		movw   $0x000008,0x000056(%esi)
		jmp    _030e7d_jump

	_030e76_jump:
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x000056(%esi)

	_030e7d_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d7e0_func
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x000074(%esi),%al
		add    %edi,%eax
		sub    %ebx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    _0ce06c_data,%ebx
		mov    _0ce0ac_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    _0ce070_data,%edx
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    %ebx,0x000028(%esi)
		xor    %ebx,%ebx
		mov    _0ce0ad_data,%al
		mov    0x000069(%esi),%bl
		add    %edx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    _0ce0b1_data,%ch
		mov    %ebx,0x00002c(%esi)
		cmp    $0x000003,%ch
		jne    _030f06_jump
		cmpb   $0x000017,_0ce0b0_data
		je     _030f25_jump

	_030f06_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _030f18_jump
		cmpb   $0x000016,_0ce0b0_data
		je     _030f25_jump

	_030f18_jump:
		call   _06fb18_func
		test   %al,%al
		jne    _030fc9_jump

	_030f25_jump:
		mov    _0cf21e_data,%ax
		xor    %dh,%dh
		mov    %ax,_0cf220_data
		mov    %dh,_0cf44b_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030f42_jump:
		movw   $0x000000,0x000056(%esi)
		mov    %ah,%dh
		movb   $0x000001,0x00006b(%esi)
		or     $0x000020,%dh
		mov    _0ce0b1_data,%bl
		mov    %dh,0x000081(%esi)
		cmp    $0x000003,%bl
		jne    _030f7c_jump
		cmpb   $0x000016,_0ce0b0_data
		jne    _030f7c_jump
		mov    0x000050(%esi),%ax
		mov    %ax,0x000040(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030f7c_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _030f8e_jump
		cmpb   $0x000001,_0ce0b0_data
		je     _030fb1_jump

	_030f8e_jump:
		mov    _0ce0b1_data,%al
		cmp    $0x000002,%al
		jne    _030f9f_jump
		cmp    _0ce0b0_data,%al
		je     _030fb1_jump

	_030f9f_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _030fc3_jump
		cmpb   $0x000006,_0ce0b0_data
		jne    _030fc3_jump

	_030fb1_jump:
		xor    %edx,%edx
		mov    %dx,_0ce084_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030fc3_jump:
		movw   $0x000000,0x000050(%esi)

	_030fc9_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_030fd4_switch:
		.long   _031089_case
		.long   _03108f_case
		.long   _031095_case
		.long   _031095_case
		.long   _03109b_case




_030fe8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    _0cf282_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _031194_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _031035_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000028(%esi),%ebx
		cmp    0x000028(%eax),%ebx
		jge    _03102c_jump
		mov    0x00002c(%eax),%eax
		add    $0x000070,%eax
		jmp    _031032_jump

	_03102c_jump:
		mov    0x00002c(%eax),%eax
		add    $0x000078,%eax

	_031032_jump:
		mov    %eax,0x00002c(%esi)

	_031035_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _031179_jump
		cmpb   $0x00000f,_0ce0b0_data
		jne    _031179_jump
		mov    _0ce070_data,%di
		mov    0x000028(%esi),%ax
		mov    0x00002c(%esi),%cx
		mov    0x00006c(%esi),%bl
		mov    %eax,0x000004(%esp)
		mov    _0ce06c_data,%ax
		sub    $0x000010,%bl
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		cmp    $0x000004,%bl
		ja     _0310a1_jump
		and    $_0000ff_case,%ebx
		jmp    *%cs:_030fd4_switch(,%ebx,4)

	_031089_case:
		mov    $0x000030,%dl
		mov    $0x000018,%dh
		jmp    _0310a3_jump

	_03108f_case:
		mov    $0x000030,%dl
		mov    $0x000020,%dh
		jmp    _0310a3_jump

	_031095_case:
		mov    $0x000038,%dl
		mov    $0x000028,%dh
		jmp    _0310a3_jump

	_03109b_case:
		mov    $0x000038,%dl
		mov    $0x000040,%dh
		jmp    _0310a3_jump

	_0310a1_jump:
		xor    %eax,%eax

	_0310a3_jump:
		test   %ax,%ax
		je     _0310e5_jump
		xor    %eax,%eax
		mov    %dh,%al
		push   %eax
		xor    %eax,%eax
		mov    %dl,%al
		add    %ecx,%eax
		push   $0x000004
		cwtl   
		push   %eax
		mov    0x000010(%esp),%eax
		add    $0x00007e,%eax
		cwtl   
		push   %eax
		mov    %edi,%eax
		add    $0x00001a,%eax
		movswl %ax,%edx
		mov    0x000010(%esp),%eax
		mov    $0x00002e,%ebx
		add    $0x000039,%eax
		mov    $0x000004,%ecx
		cwtl   
		call   _02b560_func

	_0310e5_jump:
		test   %ax,%ax
		je     _031179_jump
		mov    0x000076(%esi),%cl
		dec    %cl
		mov    %cl,0x000076(%esi)
		cmp    $0x000001,%cl
		jae    _03111e_jump
		mov    0x000077(%esi),%al
		mov    %al,0x000076(%esi)
		mov    0x00006c(%esi),%al
		cmp    $0x000013,%al
		jae    _031117_jump
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _01d434_func
		jmp    _03111e_jump

	_031117_jump:
		mov    %esi,%eax
		call   _07b8f4_func

	_03111e_jump:
		mov    _0cf282_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		cmpw   $0x000000,0x000056(%edx,%eax,1)
		jne    _031153_jump
		mov    0x000004(%esp),%eax
		add    $0x00001e,%edi
		add    $0x000080,%eax
		movswl %di,%edx
		cwtl   
		call   _07b9a4_func

	_031153_jump:
		mov    _0cf282_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		movw   $0x000000,0x000050(%edx,%eax,4)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031179_jump:
		mov    _0cf282_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		incw   0x000050(%edx,%eax,4)

	_031194_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0311a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x000076(%eax)
		jne    _0311df_jump
		mov    _0ce06c_data,%eax
		mov    0x000028(%ecx),%edx
		add    $0x00002f,%eax
		cmp    %edx,%eax
		jle    _0311df_jump
		mov    _0ce06c_data,%ebx
		lea    0x0000ba(%edx),%eax
		cmp    %ebx,%eax
		jle    _0311df_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		movb   $0x00000a,0x000076(%ecx)
		call   _01d444_func

	_0311df_jump:
		cmpb   $0x000001,0x000076(%ecx)
		jbe    _031218_jump
		mov    0x000042(%ecx),%dx
		cmp    $0x000010,%dx
		jge    _031201_jump
		cmpb   $0x000000,_0cf3f5_data
		jne    _03121e_jump
		mov    %edx,%ebx
		inc    %ebx
		mov    %bx,0x000042(%ecx)
		jmp    _03121e_jump

	_031201_jump:
		cmpb   $0x000000,_0cf3f5_data
		jne    _03121e_jump
		cmpb   $0x000000,_0cf3f0_data
		jne    _03121e_jump
		incl   0x00002c(%ecx)
		jmp    _03121e_jump

	_031218_jump:
		movw   $0x000000,0x000042(%ecx)

	_03121e_jump:
		cmpw   $0x000001,0x000050(%ecx)
		setle  %al
		movw   $0x000000,0x000050(%ecx)
		xor    %ah,%ah
		mov    %ax,0x000056(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031238_func:
		push   %ebx
		push   %edx
		mov    _0ce070_data,%edx
		xor    %ebx,%ebx
		sub    $0x000062,%edx
		mov    0x00006a(%eax),%bl
		mov    %edx,0x00002c(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x00000a(%ebx,%edx,4),%dx
		and    $0x00ffff,%edx
		xor    %ebx,%ebx
		dec    %edx
		mov    0x00006b(%eax),%bl
		cmp    %edx,%ebx
		jne    _0312ca_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		mov    0x000005(%ebx,%edx,8),%dl
		and    $0x00000f,%dl
		and    $_0000ff_case,%edx
		cmpb   $0x000000,_0cf3ed_data(%edx)
		jne    _0312ca_jump
		mov    _0cf282_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc7a0_data,%ebx
		cmpw   $0x000000,0x000056(%ebx,%edx,4)
		jne    _0312ca_jump
		mov    0x000081(%eax),%bh
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%eax)

	_0312ca_jump:
		pop    %edx
		pop    %ebx
		ret    



_0312d0_func:
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		cmpw   $_0000ff_case,0x000050(%eax)
		je     _03132f_jump
		mov    0x00004e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _03130d_jump
		mov    %edx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _03132f_jump
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

	_03130d_jump:
		mov    0x000050(%edx),%cx
		test   %cx,%cx
		jne    _031328_jump
		movb   $0x000000,0x00006b(%edx)
		movw   $0x00ffff,0x000050(%edx)
		movb   $0x000002,0x00007e(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

	_031328_jump:
		mov    %ecx,%esi
		dec    %esi
		mov    %si,0x000050(%edx)

	_03132f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

_031334_switch:
		.long   _031419_case
		.long   _031425_case
		.long   _031432_case
		.long   _031444_case
		.long   _03141f_case




_031348_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    _0cf278_data,%ax
		mov    %ax,_0cf266_data
		mov    %ax,_0cf25c_data
		mov    %ax,_0cf2b0_data
		mov    0x000070(%ecx),%al
		cmp    $0x000014,%al
		jb     _03137b_jump
		jbe    _031396_jump
		cmp    $0x00001e,%al
		je     _0313ab_jump
		jmp    _03151b_jump

	_03137b_jump:
		cmp    $0x000002,%al
		jne    _03151b_jump
		movw   $0x000000,0x000042(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		jmp    _03151b_jump

	_031396_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		jmp    _03151b_jump

	_0313ab_jump:
		cmpl   $0x000000,0x000020(%ecx)
		je     _03151b_jump
		mov    0x00004e(%ecx),%eax
		sar    $0x000010,%eax
		mov    $0x000001,%dl
		cmp    $0xffffffff,%eax
		je     _0313d8_jump
		mov    %eax,%ebx
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		cmpl   $0x000000,0x000024(%ebx,%eax,4)
		je     _0313d8_jump
		xor    %dl,%dl

	_0313d8_jump:
		test   %dl,%dl
		je     _0313f3_jump
		mov    0x00007f(%ecx),%ah
		test   %ah,%ah
		je     _0313f3_jump
		cmpb   $0x000000,_0cf3ef_data
		je     _0313f3_jump
		mov    %ah,%dh
		dec    %dh
		mov    %dh,0x00007f(%ecx)

	_0313f3_jump:
		xor    %bl,%bl
		mov    %bl,(%esp)
		cmpb   $0x000000,0x00007f(%ecx)
		jne    _031511_jump
		mov    0x000052(%ecx),%ax
		cmp    $0x000004,%ax
		ja     _03144f_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_031334_switch(,%eax,4)

	_031419_case:
		movw   $0x000002,0x000052(%ecx)

	_03141f_case:
		mov    0x000060(%ecx),%si
		jmp    _03144f_jump

	_031425_case:
		mov    $0x00004d,%esi
		movw   $0x000003,0x000052(%ecx)
		jmp    _03144f_jump

	_031432_case:
		mov    $0x000048,%esi
		mov    $0x000001,%al
		movw   $0x000001,0x000052(%ecx)
		mov    %al,(%esp)
		jmp    _03144f_jump

	_031444_case:
		mov    $0x0000bb,%esi
		movw   $0x000004,0x000052(%ecx)

	_03144f_jump:
		cmpb   $0x000000,(%esp)
		jne    _031459_jump
		movb   $0x000032,0x00007f(%ecx)

	_031459_jump:
		cmp    0x000060(%ecx),%si
		je     _031511_jump
		mov    %ecx,%eax
		call   _0603c0_func
		movw   $0x000000,0x000048(%ecx)
		mov    0x000034(%ecx),%ax

	_031474_jump:
		mov    _0ce8d4_data,%edx
		cwtl   
		mov    (%edx,%eax,2),%ax
		movswl %ax,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc7a0_data,%ebx
		add    %ebx,%edx
		mov    0x000060(%edx),%bx
		cmp    %bx,%si
		je     _03149f_jump
		cmp    0x000060(%ecx),%bx
		jne    _031474_jump

	_03149f_jump:
		mov    0x000060(%edx),%ax
		cmp    0x000060(%ecx),%ax
		je     _031511_jump
		cmp    $0x00004d,%ax
		jb     _0314bd_jump
		jbe    _0314c5_jump
		cmp    $0x0000bb,%ax
		je     _0314d7_jump
		jmp    _0314e5_jump

	_0314bd_jump:
		cmp    $0x000048,%ax
		je     _0314ce_jump
		jmp    _0314e5_jump

	_0314c5_jump:
		mov    %edx,%eax
		call   _03da88_func
		jmp    _0314e5_jump

	_0314ce_jump:
		mov    %edx,%eax
		call   _05c8e0_func
		jmp    _0314e5_jump

	_0314d7_jump:
		mov    %edx,%eax
		call   _0635f0_func
		mov    %edx,%eax
		call   _065404_func

	_0314e5_jump:
		mov    %edx,%eax
		call   _058bcc_func
		mov    %edx,%eax
		call   _057454_func
		mov    %edx,%eax
		call   _01dc5c_func
		mov    0x000081(%edx),%bl
		or     $0x000004,%bl
		mov    0x000034(%edx),%ax
		mov    %bl,0x000081(%edx)
		mov    %ax,0x000050(%ecx)

	_031511_jump:
		cmpb   $0x000000,(%esp)
		jne    _0313f3_jump

	_03151b_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031524_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000042(%eax),%dx
		cmp    $0x000002,%dx
		jle    _03153c_jump
		mov    $0x000002,%ebx
		mov    %ebx,%edx
		jmp    _03154c_jump

	_03153c_jump:
		cmp    $0x000001,%dx
		jle    _031551_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_03154c_jump:
		call   _01d444_func

	_031551_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _03155d_jump
		neg    %eax

	_03155d_jump:
		cmp    $0x000001,%eax
		jle    _031595_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _03156e_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _031575_jump

	_03156e_jump:
		mov    $0x000001,%eax
		jmp    _031577_jump

	_031575_jump:
		xor    %eax,%eax

	_031577_jump:
		test   %eax,%eax
		je     _031595_jump
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		je     _03158c_jump
		decw   0x000040(%ecx)
		jmp    _031595_jump

	_03158c_jump:
		test   $0x000008,%dh
		jne    _031595_jump
		incw   0x000040(%ecx)

	_031595_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _0315c2_jump
		cmpb   $0x000003,0x00006c(%ecx)
		jne    _0315c2_jump
		mov    %ecx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _0315c2_jump
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)

	_0315c2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0315c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%cl
		shl    $0x000004,%cl
		mov    0x00006d(%eax),%ah
		shr    $0x000007,%cl
		test   %ah,%ah
		jne    _031604_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _031604_jump
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _031604_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func

	_031604_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _031709_jump
		cmpb   $0x00000f,0x00006c(%esi)
		jne    _031709_jump
		cmpw   $0x000086,0x000060(%esi)
		jne    _031641_jump
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _031641_jump
		mov    $0x00000d,%edx
		mov    %esi,%eax
		call   _01d434_func
		movw   $0x000000,0x000040(%esi)
		jmp    _031694_jump

	_031641_jump:
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _031694_jump
		mov    0x000081(%esi),%bh
		mov    _0ce0c5_data,%al
		and    $0x0000f7,%bh
		and    $0x000008,%al
		mov    %bh,%ch
		mov    %bh,0x000081(%esi)
		or     %al,%ch
		mov    %esi,%eax
		mov    %ch,0x000081(%esi)
		call   _0552b4_func
		mov    %cl,%al
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%esi)
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)

	_031694_jump:
		cmpw   $0x000000,0x000040(%esi)
		je     _031709_jump
		mov    %esp,%eax
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		add    $0x000010,%eax
		sar    $0x000004,%eax
		mov    0x000040(%esi),%bx
		movswl %ax,%edx
		test   %bx,%bx
		jge    _0316ce_jump
		xor    %ebx,%ebx
		jmp    _0316d5_jump

	_0316ce_jump:
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx

	_0316d5_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e1b4_func
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		je     _031709_jump
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000040(%esi)

	_031709_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031714_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _03174b_jump
		cmpb   $0x00000a,0x000062(%ecx)
		jne    _03174b_jump
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %eax,%edx
		and    $0x00fff0,%edx
		sub    %eax,%edx
		lea    0x000007(%edx),%eax
		mov    %eax,0x00002c(%ecx)

	_03174b_jump:
		mov    %ecx,%eax
		mov    $0x00000a,%edx
		call   _0315c8_func
		mov    %ecx,%eax
		call   _02ef50_func
		cmpb   $0x000009,0x00006c(%ecx)
		jne    _03176b_jump
		mov    %ecx,%eax
		call   _05f4cc_func

	_03176b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_031770_switch:
		.long   _031800_case
		.long   _031815_case
		.long   _031800_case
		.long   _031815_case
		.long   _031800_case
		.long   _031815_case
		.long   _031815_case
		.long   _03180a_case
		.long   _031815_case
		.long   _03180a_case
		.long   _031815_case
		.long   _03180a_case




_0317a0_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    0x000060(%eax),%ax
		cmp    $0x000086,%ax
		jb     _0317c1_jump
		jbe    _0317cf_jump
		cmp    $0x0000a7,%ax
		jb     _0317e9_jump
		jbe    _0317cf_jump
		cmp    $0x0000b1,%ax
		je     _0317d9_jump
		jmp    _0317e9_jump

	_0317c1_jump:
		cmp    $0x000006,%ax
		jb     _0317e9_jump
		jbe    _0317d9_jump
		cmp    $0x000008,%ax
		jne    _0317e9_jump

	_0317cf_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x00002c,%eax
		jmp    _0317e1_jump

	_0317d9_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x00008b,%eax

	_0317e1_jump:
		sar    $0x000010,%edx
		call   _071b3c_func

	_0317e9_jump:
		mov    _0ce170_data,%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _031815_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_031770_switch(,%edx,4)

	_031800_case:
		xor    %ebx,%ebx
		mov    _0ce173_data,%bl
		jmp    _031815_case

	_03180a_case:
		xor    %ebx,%ebx
		mov    _0ce173_data,%bl
		sub    $0x000002,%ebx

	_031815_case:
		mov    %ebx,%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    _0ce0d0_data,%edx
		mov    0x000040(%edx),%si
		add    $0x00000a,%ebx
		test   %si,%si
		jge    _031830_jump
		neg    %ebx

	_031830_jump:
		movswl %bx,%edx
		mov    %ecx,%eax
		call   _01e6e0_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_031840_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000040(%eax),%bx
		call   _0552b4_func
		mov    0x00003e(%edx),%eax
		movswl %bx,%ecx
		sar    $0x000010,%eax
		imul   %ecx,%eax
		test   %eax,%eax
		jge    _031885_jump
		mov    0x000081(%edx),%ch
		lea    0x000081(%edx),%eax
		test   $0x000008,%ch
		sete   %cl
		and    $0x000001,%cl
		mov    (%eax),%ch
		and    $0x0000f7,%ch
		mov    %ch,(%eax)
		shl    $0x000003,%cl
		or     %cl,%ch
		mov    %ch,(%eax)
		mov    %bx,0x000040(%edx)

	_031885_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03188c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $_0000ff_case,0x00007f(%eax)
		je     _03195d_jump
		cmpb   $0x000000,0x00007f(%ecx)
		jne    _03195a_jump
		mov    0x00006d(%ecx),%al
		mov    _0ce0c5_data,%ah
		and    $0x0000fb,%ah
		or     $0x000004,%ah
		test   %al,%al
		jbe    _0318bf_jump
		cmp    $0x000005,%al
		je     _0318e1_jump
		jmp    _031906_jump

	_0318bf_jump:
		mov    $0x000001,%ebx
		mov    0x000081(%ecx),%dh
		mov    %ah,_0ce0c5_data
		and    $0x0000fb,%dh
		mov    %ebx,_0ce068_data
		mov    %dh,0x000081(%ecx)
		jmp    _031906_jump

	_0318e1_jump:
		mov    $0x000001,%edx
		mov    $0x000028,%ebx
		mov    %ah,_0ce0c5_data
		mov    $_0ce044_data,%eax
		mov    %edx,_0ce068_data
		mov    $0x000003,%edx
		call   _01d444_func

	_031906_jump:
		mov    0x000081(%ecx),%bl
		mov    0x000032(%ecx),%eax
		and    $0x0000fb,%bl
		sar    $0x000010,%eax
		mov    %bl,0x000081(%ecx)
		call   _01f404_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0ce0ac_data,%al
		sub    %eax,%edx
		mov    0x00002c(%ecx),%esi
		mov    %edx,_0ce06c_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000069(%ecx),%al
		mov    _0ce0ad_data,%dl
		add    %esi,%eax
		mov    $0x000040,%bh
		sub    %edx,%eax
		mov    %bh,_0cf471_data
		mov    %eax,_0ce070_data

	_03195a_jump:
		decb   0x00007f(%ecx)

	_03195d_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031970_func:
		mov    _0962d0_data,%al
		ret    



_031978_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %al,%ah
		xor    %dl,%dl
		xor    %al,%al

	_031982_jump:
		xor    %ebx,%ebx
		mov    %al,%cl
		mov    %ah,%bl
		sar    %cl,%ebx
		xor    %ecx,%ecx
		mov    $0x000007,%esi
		mov    %al,%cl
		sub    %ecx,%esi
		and    $0x000001,%ebx
		mov    %esi,%ecx
		shl    %cl,%ebx
		and    $_0000ff_case,%edx
		inc    %al
		or     %ebx,%edx
		cmp    $0x000008,%al
		jb     _031982_jump
		mov    %dl,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0319b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    $0x000001,%ebx
		mov    %eax,%ecx
		mov    %esp,%eax
		mov    %ebx,%edx
		call   _0802ed_func
		mov    (%esp),%ah
		xor    $0x000053,%ah
		mov    %ah,(%esp)
		mov    %ah,%al
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0319dc_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%ecx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _08050a_func
		mov    (%esp),%ah
		mov    $0x000001,%ebx
		xor    $0x000053,%ah
		mov    %ebx,%edx
		mov    %ah,(%esp)
		mov    %esp,%eax
		call   _080606_func
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_031a10_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %eax,%ecx
		mov    %esp,%eax
		call   _0802ed_func
		mov    (%esp),%edx
		xor    $0x54555657,%edx
		mov    %edx,(%esp)
		mov    %edx,%eax
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031a40_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x000004,%edx
		xor    $0x54555657,%ebx
		mov    %esp,%eax
		mov    %ebx,(%esp)
		mov    $0x000001,%ebx
		call   _080606_func
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_031a6c_func:
		push   %ebx
		push   %edx
		cmpl   $0x000000,0x000004(%eax)
		jle    _031a88_jump
		testb  $0x000004,0x00000c(%eax)
		jne    _031a88_jump
		mov    (%eax),%edx
		mov    (%edx),%bl
		cmp    $0x00000d,%bl
		je     _031a88_jump
		cmp    $0x00001a,%bl
		jne    _031a8f_jump

	_031a88_jump:
		call   _0807c6_func
		jmp    _031aa1_jump

	_031a8f_jump:
		mov    0x000004(%eax),%ebx
		dec    %ebx
		mov    (%eax),%edx
		mov    %ebx,0x000004(%eax)
		lea    0x000001(%edx),%ebx
		mov    %ebx,(%eax)
		xor    %eax,%eax
		mov    (%edx),%al

	_031aa1_jump:
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		je     _031aae_jump
		incl   _0962e0_data

	_031aae_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_031ab4_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		mov    _0962d9_data,%al
		xor    %ecx,%ecx
		mov    %al,%cl
		inc    %al
		mov    %al,_0962d9_data
		mov    %ecx,%eax
		call   _031978_func
		xor    $0x0000b9,%al
		and    $_0000ff_case,%eax
		xor    %ebx,%eax
		add    %bl,_0df10c_data
		mov    _0962dc_data,%ebx
		inc    %ebx
		mov    0x00000d(%edx),%cl
		mov    %ebx,_0962dc_data
		test   $0x000004,%cl
		jne    _031aff_jump
		mov    0x000014(%edx),%ebx
		sub    0x000004(%edx),%ebx
		cmp    $0x000001,%ebx
		ja     _031b08_jump

	_031aff_jump:
		call   _08092a_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_031b08_jump:
		mov    (%edx),%ebx
		mov    %al,(%ebx)
		cmp    $0x00000a,%al
		jne    _031b1e_jump
		mov    $0x00000a,%eax
		call   _08092a_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_031b1e_jump:
		mov    0x00000d(%edx),%ch
		mov    0x000004(%edx),%esi
		mov    (%edx),%eax
		or     $0x000010,%ch
		inc    %esi
		mov    %ch,0x00000d(%edx)
		lea    0x000001(%eax),%ebx
		mov    %esi,0x000004(%edx)
		mov    %ebx,(%edx)
		mov    (%eax),%al
		and    $_0000ff_case,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_031b40_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpl   $0x000000,0x000004(%eax)
		jle    _031b5d_jump
		testb  $0x000004,0x00000c(%eax)
		jne    _031b5d_jump
		mov    (%eax),%edx
		mov    (%edx),%bl
		cmp    $0x00000d,%bl
		je     _031b5d_jump
		cmp    $0x00001a,%bl
		jne    _031b66_jump

	_031b5d_jump:
		call   _0807c6_func
		mov    %eax,%edx
		jmp    _031b7c_jump

	_031b66_jump:
		mov    0x000004(%eax),%ebx
		dec    %ebx
		mov    (%eax),%edx
		mov    %ebx,0x000004(%eax)
		lea    0x000001(%edx),%ebx
		mov    %ebx,(%eax)
		mov    (%edx),%dl
		and    $_0000ff_case,%edx

	_031b7c_jump:
		mov    %edx,%ebx
		cmp    $0xffffffff,%edx
		je     _031bb6_jump
		mov    _0962d9_data,%al
		xor    %edx,%ebx
		mov    %al,%bl
		inc    %al
		mov    %al,_0962d9_data
		mov    %ebx,%eax
		call   _031978_func
		xor    $0x0000b9,%al
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    _0df10c_data,%cl
		xor    %edx,%ebx
		sub    %bl,%cl
		mov    %cl,_0df10c_data
		incl   _0962dc_data

	_031bb6_jump:
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031bbc_func:
		push   %ebx
		push   %ecx
		push   %edi
		mov    _0962e0_data,%ebx
		dec    %ebx
		mov    %ebx,_0962e0_data
		test   %ebx,%ebx
		jge    _031bd7_jump
		movb   $0x000001,_0962d8_data

	_031bd7_jump:
		testb  $0x000004,0x00000d(%edx)
		jne    _031be8_jump
		mov    0x000014(%edx),%ebx
		sub    0x000004(%edx),%ebx
		cmp    $0x000001,%ebx
		ja     _031bf1_jump

	_031be8_jump:
		call   _08092a_func
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret    

	_031bf1_jump:
		mov    (%edx),%ebx
		mov    %al,(%ebx)
		cmp    $0x00000a,%al
		jne    _031c07_jump
		mov    $0x00000a,%eax
		call   _08092a_func
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret    

	_031c07_jump:
		mov    0x00000d(%edx),%cl
		mov    0x000004(%edx),%edi
		mov    (%edx),%eax
		or     $0x000010,%cl
		inc    %edi
		mov    %cl,0x00000d(%edx)
		lea    0x000001(%eax),%ebx
		mov    %edi,0x000004(%edx)
		mov    %ebx,(%edx)
		mov    (%eax),%al
		and    $_0000ff_case,%eax
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret    



_031c2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x000008,%ecx
		xor    %edx,%edx

	_031c36_jump:
		lea    0x000000(,%edx,8),%eax
		mov    %ecx,%ebx

	_031c3f_jump:
		inc    %eax
		mov    %dl,_0de903_data(%eax)
		cmp    %ebx,%eax
		jne    _031c3f_jump
		inc    %edx
		add    $0x000008,%ecx
		cmp    $0x000100,%edx
		jl     _031c36_jump
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %edx,_0962e0_data
		mov    %edx,_0962dc_data
		mov    $0x000057,%dl
		mov    %ah,_0962d8_data
		mov    %dl,_0962d9_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031c78_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,%ebp
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,_0962d0_data
		call   _031c2c_func
		mov    %dl,_0df10c_data
		xor    %eax,%eax
		mov    %ebp,%edx
		call   _0319dc_func
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %edx,_0962e0_data
		mov    %ebp,%edx
		call   _031a40_func
		cmpb   $0x000000,_0962d8_data
		jne    _031e35_jump

	_031cc2_jump:
		mov    $0x000008,%esi
		xor    %edx,%edx

	_031cc9_jump:
		mov    0x000004(%esp),%eax
		call   _031a6c_func
		mov    %eax,0x000014(%esp)
		cmp    $0xffffffff,%eax
		jne    _031cdf_jump
		mov    %edx,%esi
		jmp    _031cef_jump

	_031cdf_jump:
		inc    %edx
		mov    0x000014(%esp),%al
		mov    %al,_0df103_data(%edx)
		cmp    $0x000008,%edx
		jl     _031cc9_jump

	_031cef_jump:
		test   %esi,%esi
		jne    _031cff_jump
		movb   $0x000001,_0962d8_data
		jmp    _031e28_jump

	_031cff_jump:
		mov    $0xffffffff,%ebx
		xor    %ecx,%ecx
		xor    %edi,%edi
		mov    %ebx,0x000010(%esp)
		mov    %ecx,0x000014(%esp)

	_031d10_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		test   %esi,%esi
		jle    _031d2f_jump
		mov    %edi,%edx

	_031d1a_jump:
		mov    _0de904_data(%edx),%cl
		cmp    _0df104_data(%eax),%cl
		jne    _031d29_jump
		inc    %ebx

	_031d29_jump:
		inc    %eax
		inc    %edx
		cmp    %esi,%eax
		jl     _031d1a_jump

	_031d2f_jump:
		cmp    0x000010(%esp),%ebx
		jle    _031d45_jump
		mov    0x000014(%esp),%eax
		mov    %ebx,0x000010(%esp)
		mov    %eax,0x00000c(%esp)
		cmp    %esi,%ebx
		je     _031d59_jump

	_031d45_jump:
		mov    0x000014(%esp),%edx
		inc    %edx
		add    $0x000008,%edi
		mov    %edx,0x000014(%esp)
		cmp    $0x000100,%edx
		jl     _031d10_jump

	_031d59_jump:
		mov    0x00000c(%esp),%eax
		mov    %ebp,%edx
		mov    $0x000001,%edi
		call   _031ab4_func
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    0x00000c(%esp),%eax
		mov    $0x000008,%edx
		shl    $0x000003,%eax
		mov    %ecx,0x000014(%esp)
		mov    %eax,(%esp)
		mov    %edx,0x000008(%esp)
		mov    (%esp),%edx
		xor    %eax,%eax

	_031d89_jump:
		cmp    %esi,%eax
		jge    _031da9_jump
		mov    _0de904_data(%edx),%cl
		cmp    _0df104_data(%eax),%cl
		je     _031d9d_jump
		add    %edi,%ebx

	_031d9d_jump:
		mov    0x000008(%esp),%ecx
		inc    %edx
		inc    %eax
		add    %edi,%edi
		cmp    %ecx,%eax
		jl     _031d89_jump

	_031da9_jump:
		mov    0x000014(%esp),%ecx
		mov    %ebp,%edx
		shl    $0x000003,%ecx
		mov    %ebx,%eax
		lea    0x000008(%ecx),%edi
		call   _031ab4_func
		cmp    %edi,%ecx
		jge    _031df9_jump

	_031dc0_jump:
		movl   $0x000002,0x000018(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		cmp    $0x000001,%edx
		jne    _031de7_jump
		xor    %eax,%eax
		mov    %ebp,%edx
		mov    _0df104_data(%ecx),%al
		call   _031ab4_func

	_031de7_jump:
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		inc    %ecx
		mov    %eax,%ebx
		cmp    %edi,%ecx
		jl     _031dc0_jump

	_031df9_jump:
		cmp    $0x000008,%esi
		jge    _031e10_jump
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _031ab4_func
		movb   $0x000001,_0962d8_data
		jmp    _031e28_jump

	_031e10_jump:
		mov    (%esp),%edx
		xor    %eax,%eax

	_031e15_jump:
		inc    %edx
		mov    _0df104_data(%eax),%bl
		inc    %eax
		mov    %bl,_0de903_data(%edx)
		cmp    $0x000008,%eax
		jl     _031e15_jump

	_031e28_jump:
		cmpb   $0x000000,_0962d8_data
		je     _031cc2_jump

	_031e35_jump:
		xor    %eax,%eax
		mov    %ebp,%edx
		mov    _0df10c_data,%al
		call   _0319dc_func
		mov    _0962e0_data,%eax
		mov    %ebp,%edx
		call   _031a40_func
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_031e58_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ebp
		mov    %edx,%ecx
		xor    %ah,%ah
		mov    %ah,_0962d0_data
		call   _031c2c_func
		mov    %ebp,%eax
		mov    $0xffffffff,%edx
		call   _0319b4_func
		mov    %al,_0df10c_data
		mov    %ebp,%eax
		mov    %edx,0x000004(%esp)
		call   _031a10_func
		mov    _0962d8_data,%dl
		mov    %eax,_0962e0_data
		test   %dl,%dl
		jne    _031fbe_jump

	_031ea0_jump:
		mov    0x000004(%esp),%esi
		cmp    $0xffffffff,%esi
		jne    _031ed2_jump
		mov    %ebp,%eax
		call   _031b40_func
		mov    %eax,0x000004(%esp)
		cmp    %esi,%eax
		jne    _031ec4_jump
		movb   $0x000001,_0962d8_data
		jmp    _031f50_jump

	_031ec4_jump:
		mov    %ebp,%eax
		call   _031b40_func
		mov    %eax,%ebx
		jmp    _031f50_jump

	_031ed2_jump:
		mov    %ebp,%eax
		call   _031b40_func
		mov    %eax,%edx
		mov    %eax,0x000004(%esp)
		cmp    $0xffffffff,%eax
		jne    _031f04_jump
		xor    %esi,%esi

	_031ee6_jump:
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    _0df104_data(%esi),%al
		inc    %esi
		call   _031bbc_func
		cmp    $0x000008,%esi
		jl     _031ee6_jump
		movb   $0x000001,_0962d8_data
		jmp    _031f50_jump

	_031f04_jump:
		mov    %ebp,%eax
		call   _031b40_func
		mov    %eax,%ebx
		cmp    $0xffffffff,%eax
		jne    _031f39_jump
		xor    %esi,%esi
		test   %edx,%edx
		jle    _031f30_jump
		mov    0x000004(%esp),%edi

	_031f1c_jump:
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    _0df104_data(%esi),%al
		inc    %esi
		call   _031bbc_func
		cmp    %edi,%esi
		jl     _031f1c_jump

	_031f30_jump:
		movb   $0x000001,_0962d8_data
		jmp    _031f50_jump

	_031f39_jump:
		xor    %esi,%esi

	_031f3b_jump:
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    _0df104_data(%esi),%al
		inc    %esi
		call   _031bbc_func
		cmp    $0x000008,%esi
		jl     _031f3b_jump

	_031f50_jump:
		cmpb   $0x000000,_0962d8_data
		jne    _031fb1_jump
		mov    0x000004(%esp),%edi
		mov    $0x000008,%eax
		xor    %esi,%esi
		shl    $0x000003,%edi
		mov    %eax,(%esp)

	_031f6a_jump:
		movl   $0x000002,0x000008(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idivl  0x000008(%esp)
		cmp    $0x000001,%edx
		jne    _031f8f_jump
		mov    %ebp,%eax
		call   _031b40_func
		mov    %al,_0de904_data(%edi)

	_031f8f_jump:
		mov    %ebx,%edx
		mov    _0de904_data(%edi),%al
		sar    $0x00001f,%edx
		mov    %al,_0df104_data(%esi)
		mov    %ebx,%eax
		sub    %edx,%eax
		sar    %eax
		inc    %edi
		inc    %esi
		mov    (%esp),%edx
		mov    %eax,%ebx
		cmp    %edx,%esi
		jl     _031f6a_jump

	_031fb1_jump:
		cmpb   $0x000000,_0962d8_data
		je     _031ea0_jump

	_031fbe_jump:
		cmpl   $0x000000,_0962e0_data
		jne    _031fd7_jump
		cmpb   $0x000000,_0df10c_data
		je     _031fe4_jump
		push   $_0c09e4_data
		jmp    _031fdc_jump

	_031fd7_jump:
		push   $_0c0a00_data

	_031fdc_jump:
		call   _031ff0_func
		add    $0x000004,%esp

	_031fe4_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_031ff0_func:
		push   %edx
		sub    $0x000004,%esp
		lea    0x000010(%esp),%edx
		push   $_0c0a18_data
		mov    %edx,0x000004(%esp)
		call   _07f8fc_func
		add    $0x000004,%esp
		mov    %esp,%edx
		mov    0x00000c(%esp),%eax
		call   _0809ce_func
		xor    %edx,%edx
		mov    $0x000001,%ah
		mov    %edx,(%esp)
		mov    %ah,_0962d0_data
		add    $0x000004,%esp
		pop    %edx
		ret    



_032030_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000040(%eax),%cx
		xor    %eax,%eax
		mov    _0ce06c_data,%bx
		mov    _0ce0ac_data,%al
		mov    0x000028(%esi),%di
		add    %ebx,%eax
		sub    %edi,%eax
		movzbw 0x000068(%esi),%di
		sub    %edi,%eax
		mov    0x000034(%esi),%bx
		mov    %eax,%edi
		cmp    _0ce08e_data,%bx
		jne    _032182_jump
		movb   $0x000005,0x000072(%esi)
		mov    _0ce070_data,%eax
		add    $0x000008,%eax
		test   %di,%di
		jle    _032109_jump
		cmp    $0x000062,%di
		jle    _032091_jump
		mov    %eax,_0ce070_data
		jmp    _0320c7_jump

	_032091_jump:
		cmp    $0x000046,%di
		jle    _03209e_jump
		mov    $0x000004,%edx
		jmp    _0320c7_jump

	_03209e_jump:
		cmp    $0x00003c,%di
		jle    _0320ab_jump
		mov    $0x000003,%edx
		jmp    _0320c7_jump

	_0320ab_jump:
		cmp    $0x000028,%di
		jle    _0320b8_jump
		mov    $0x000002,%edx
		jmp    _0320c7_jump

	_0320b8_jump:
		cmp    $0x000014,%di
		jle    _0320c5_jump
		mov    $0x000001,%edx
		jmp    _0320c7_jump

	_0320c5_jump:
		xor    %edx,%edx

	_0320c7_jump:
		cmp    %dx,%cx
		jge    _0320e4_jump
		mov    0x000071(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000071(%esi)
		test   %al,%al
		ja     _0320e4_jump
		inc    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _03219f_jump

	_0320e4_jump:
		cmp    %dx,%cx
		jle    _03219f_jump
		mov    0x000071(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000071(%esi)
		test   %al,%al
		ja     _03219f_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _03219f_jump

	_032109_jump:
		neg    %edi
		cmp    $0x000069,%di
		jle    _032118_jump
		mov    %eax,_0ce070_data
		jmp    _03214e_jump

	_032118_jump:
		cmp    $0x000046,%di
		jle    _032125_jump
		mov    $0xfffffffc,%edx
		jmp    _03214e_jump

	_032125_jump:
		cmp    $0x00003c,%di
		jle    _032132_jump
		mov    $0xfffffffd,%edx
		jmp    _03214e_jump

	_032132_jump:
		cmp    $0x000028,%di
		jle    _03213f_jump
		mov    $0xfffffffe,%edx
		jmp    _03214e_jump

	_03213f_jump:
		cmp    $0x000014,%di
		jle    _03214c_jump
		mov    $0xffffffff,%edx
		jmp    _03214e_jump

	_03214c_jump:
		xor    %edx,%edx

	_03214e_jump:
		cmp    %dx,%cx
		jle    _032168_jump
		mov    0x000071(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000071(%esi)
		test   %al,%al
		ja     _032168_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _03219f_jump

	_032168_jump:
		cmp    %dx,%cx
		jle    _03219f_jump
		mov    0x000071(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000071(%esi)
		test   %al,%al
		ja     _03219f_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _03219f_jump

	_032182_jump:
		mov    0x000072(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000072(%esi)
		test   %al,%al
		jne    _03219f_jump
		movb   $0x000005,0x000072(%esi)
		test   %cx,%cx
		je     _03219f_jump
		jle    _03219e_jump
		dec    %ecx
		jmp    _03219f_jump

	_03219e_jump:
		inc    %ecx

	_03219f_jump:
		mov    %ecx,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000068(%esi),%al
		add    %ecx,%edx
		mov    0x000069(%esi),%bl
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01d6f4_func
		test   %ax,%ax
		je     _0321c0_jump
		xor    %ecx,%ecx

	_0321c0_jump:
		mov    0x00006d(%esi),%ah
		mov    %cx,0x000040(%esi)
		test   %ah,%ah
		jne    _032220_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _032220_jump
		cmpw   $0x000000,0x000052(%esi)
		jne    _0323a4_jump
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0323a4_jump
		mov    0x00007f(%esi),%bh
		cmp    $0x000064,%bh
		jbe    _032214_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		movw   $0x000001,0x000052(%esi)
		mov    %esi,%eax
		movb   $0x000000,0x00007f(%esi)
		call   _060460_func
		jmp    _0323a4_jump

	_032214_jump:
		mov    %bh,%cl
		inc    %cl
		mov    %cl,0x00007f(%esi)
		jmp    _0323a4_jump

	_032220_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0322fb_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _0322fb_jump
		movw   $0x000000,0x000052(%esi)
		cmpb   $0x000002,_0ce0b1_data
		jne    _0323a4_jump
		mov    _0ce098_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0323a4_jump
		mov    0x00006b(%esi),%ah
		cmp    $0x000014,%ah
		jb     _0323a4_jump
		cmp    $0x000016,%ah
		ja     _0323a4_jump
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d7e0_func
		movswl %di,%eax
		test   %eax,%eax
		jge    _032294_jump
		neg    %eax

	_032294_jump:
		cmp    $0x000064,%eax
		jge    _0323a4_jump
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		mov    _0ce070_data,%ebp
		mov    _0ce0ad_data,%al
		sar    $0x000010,%edx
		add    %ebp,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		lea    -0x00001c(%edx),%eax
		test   %eax,%eax
		jge    _0322c7_jump
		neg    %eax

	_0322c7_jump:
		cmp    $0x000014,%eax
		jge    _0323a4_jump
		test   %di,%di
		jge    _0322de_jump
		orb    $0x000008,_0ce0c5_data
		jmp    _0322e5_jump

	_0322de_jump:
		andb   $0x0000f7,_0ce0c5_data

	_0322e5_jump:
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02dd0c_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0322fb_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0323a4_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _0323a4_jump
		cmpl   $0x000000,_0ce068_data
		jne    _0323a4_jump
		cmpb   $0x000000,0x00006b(%esi)
		jne    _0323a4_jump
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0323a4_jump
		mov    $0x000001,%ebx
		mov    $0xffffffff,%ecx
		lea    0x000008(%esp),%eax
		mov    $0x000001,%edx
		mov    %ebx,_0ce068_data
		mov    %cx,_0ce09a_data
		push   %eax
		lea    0x000004(%esp),%eax
		mov    _0ce06c_data,%ecx
		lea    0x000008(%esp),%ebx
		sub    $0x000004,%ecx
		push   %eax
		mov    %ecx,_0ce06c_data
		mov    %esi,%eax
		lea    0x000014(%esp),%ecx
		call   _01d7e0_func
		mov    0x00000a(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000074(%esi),%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0ce0ad_data,%dl
		sub    %edx,%eax
		mov    $0x000008,%ebx
		mov    %eax,_0ce070_data
		xor    %edx,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func

	_0323a4_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0323b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    %ax,0x000018(%esp)
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		mov    0x000052(%esi),%dx
		mov    %ax,0x000024(%esp)
		test   %dx,%dx
		jne    _0323e5_jump
		mov    %dx,0x000040(%esi)
		mov    %dx,0x000042(%esi)
		jmp    _03249d_jump

	_0323e5_jump:
		cmp    $0x000001,%dx
		jne    _03249d_jump
		mov    _0ce08e_data,%ax
		mov    0x000034(%esi),%cx
		cmp    %cx,%ax
		jne    _032437_jump
		xor    %ecx,%eax
		mov    _0ce06c_data,%di
		mov    _0ce0ac_data,%al
		mov    0x000028(%esi),%dx
		add    %edi,%eax
		mov    0x000018(%esp),%ebx
		sub    %edx,%eax
		mov    _0ce070_data,%edx
		sub    %ebx,%eax
		add    $0x000008,%edx
		cmp    $0x000060,%ax
		jg     _032431_jump
		movswl %ax,%ebx
		cmp    $0xffffff95,%ebx
		jge    _032437_jump

	_032431_jump:
		mov    %edx,_0ce070_data

	_032437_jump:
		mov    0x000022(%esp),%edi
		mov    0x000016(%esp),%ecx
		mov    %esi,%eax
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		mov    %edi,%ebx
		mov    %ecx,%edx
		call   _01d6f4_func
		test   %ax,%ax
		je     _032476_jump
		mov    %edi,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _02f310_func
		test   %ax,%ax
		je     _032476_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _060460_func

	_032476_jump:
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    0x000070(%esi),%dl
		mov    %ah,0x000081(%esi)
		cmp    $0x000014,%dl
		jne    _03249d_jump
		mov    0x000056(%esi),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000042(%esi)

	_03249d_jump:
		cmpw   $0x000001,0x000052(%esi)
		jl     _03285c_jump
		mov    0x000032(%esi),%edx
		mov    _0ce8d4_data,%ebx
		sar    $0x000010,%edx
		mov    (%ebx,%edx,2),%ax
		movswl %ax,%edi
		mov    %edi,%ecx
		shl    $0x000005,%ecx
		add    %edi,%ecx
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%ecx
		add    %edx,%ecx
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0324da_jump
		movl   $0x000001,0x000024(%ecx)

	_0324da_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _03285c_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _03285c_jump
		cmpw   $0x000001,0x000052(%esi)
		jne    _03250e_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		movw   $0x000002,0x000052(%esi)
		call   _060460_func

	_03250e_jump:
		mov    0x000052(%esi),%bx
		cmp    $0x000002,%bx
		jne    _032635_jump
		movw   $0x000003,0x000052(%ecx)
		mov    0x000028(%ecx),%ax
		mov    0x000028(%esi),%di
		mov    0x00002c(%esi),%dx
		sub    %edi,%eax
		mov    0x00002c(%ecx),%di
		sub    %edx,%edi
		cmp    $0x000006,%ax
		jle    _032547_jump
		movw   $0x00fffc,0x000040(%ecx)
		jmp    _03285c_jump

	_032547_jump:
		movswl %ax,%edx
		cmp    $0xfffffffa,%edx
		jge    _03255f_jump
		movw   $0x000004,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03255f_jump:
		test   %ax,%ax
		jle    _032574_jump
		movw   $0x00ffff,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032574_jump:
		jge    _032586_jump
		movw   $0x000001,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032586_jump:
		movswl %di,%edx
		movw   $0x000000,0x000040(%ecx)
		cmp    $0xfffffff8,%edx
		jge    _0325a4_jump
		movw   $0x000004,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0325a4_jump:
		cmp    $0x000008,%di
		jle    _0325ba_jump
		movw   $0x00fffc,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0325ba_jump:
		test   %di,%di
		jle    _0325cf_jump
		movw   $0x00ffff,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0325cf_jump:
		jl     _032856_jump
		movw   $0x000000,0x000042(%ecx)
		movw   $0x000004,0x000052(%esi)
		mov    0x000060(%ecx),%bx
		movw   $0x000004,0x000052(%ecx)
		cmp    $0x0000a8,%bx
		jne    _032600_jump
		movw   $0x000009,0x000028(%esp)
		mov    $0x000005,%eax
		jmp    _03260f_jump

	_032600_jump:
		mov    $0x000005,%edi
		mov    $0x000009,%eax
		mov    %di,0x000028(%esp)

	_03260f_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %al,%bl
		mov    %ecx,%eax
		call   _01d444_func
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000028(%esp),%bl
		call   _01d444_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032635_jump:
		cmp    $0x000004,%bx
		jne    _03272f_jump
		cmpw   $0x0000a8,0x000060(%esi)
		jne    _032650_jump
		movw   $0x000007,0x000028(%esp)
		jmp    _032657_jump

	_032650_jump:
		movw   $0x00000b,0x000028(%esp)

	_032657_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _03285c_jump
		xor    %eax,%eax
		mov    0x000028(%esp),%edx
		mov    0x00006c(%esi),%al
		cmp    %dx,%ax
		jne    _03285c_jump
		cmpb   $0x000000,0x00006b(%esi)
		jne    _03285c_jump
		movw   $0x000005,0x000052(%esi)
		cmpl   $0x000000,_0ce068_data
		jne    _03285c_jump
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _03285c_jump
		mov    _0ce098_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _03285c_jump
		cmpw   $0x0000a9,0x000060(%esi)
		jne    _03285c_jump
		mov    $0x000001,%ecx
		lea    0x000014(%esp),%edx
		lea    0x00000c(%esp),%ebx
		mov    _0ce06c_data,%edi
		mov    %esi,%eax
		mov    %ecx,_0ce068_data
		push   %edx
		sub    $0x000004,%edi
		lea    0x00000c(%esp),%edx
		lea    0x000020(%esp),%ecx
		push   %edx
		mov    $0x000001,%edx
		mov    %edi,_0ce06c_data
		call   _01d7e0_func
		mov    0x00001a(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000074(%esi),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0ce0ad_data,%dl
		sub    %edx,%ebx
		mov    $_0ce044_data,%eax
		mov    %ebx,_0ce070_data
		xor    %edx,%edx
		mov    $0x000008,%ebx
		call   _01d444_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03272f_jump:
		cmp    $0x000005,%bx
		jne    _03285c_jump
		xor    %eax,%eax
		mov    0x000022(%esp),%edx
		mov    0x000068(%ecx),%al
		sar    $0x000010,%edx
		mov    %ax,0x000020(%esp)
		mov    %edx,0x000004(%esp)
		mov    0x000016(%esp),%edx
		mov    0x000004(%esp),%ebx
		mov    0x00001e(%esp),%ebp
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000069(%ecx),%al
		sar    $0x000010,%ebp
		mov    %ax,0x000010(%esp)
		mov    %edx,(%esp)
		mov    %esi,%eax
		mov    0x00000e(%esp),%edi
		call   _01d6f4_func
		mov    %eax,0x00000c(%esp)
		sar    $0x000010,%edi
		mov    %ebp,%edx
		mov    %edi,%ebx
		mov    %ecx,%eax
		call   _01d6f4_func
		mov    0x000004(%esp),%ebx
		mov    (%esp),%edx
		mov    %ax,0x00001c(%esp)
		mov    %esi,%eax
		call   _02f310_func
		mov    %eax,0x000008(%esp)
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _02f310_func
		mov    0x000004(%esp),%ebx
		mov    (%esp),%edx
		mov    %eax,0x000014(%esp)
		mov    %esi,%eax
		call   _01d6f4_func
		test   %ax,%ax
		je     _032824_jump
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _01d6f4_func
		test   %ax,%ax
		je     _032824_jump
		mov    0x000004(%esp),%ebx
		mov    (%esp),%edx
		movw   $0x000001,0x000052(%esi)
		mov    %esi,%eax
		movw   $0x000001,0x000052(%ecx)
		call   _02f310_func
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _02f310_func
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _060460_func
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _060460_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032824_jump:
		mov    0x00000e(%esp),%ebx
		mov    0x00001e(%esp),%edx
		mov    %ecx,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01d6f4_func
		test   %ax,%ax
		jne    _03285c_jump
		cmpw   $0x0000a8,0x000060(%ecx)
		jne    _032856_jump
		movw   $0x00ffff,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032856_jump:
		movw   $0x000001,0x000042(%ecx)

	_03285c_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032868_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    0x000060(%eax),%dx
		xor    %ebx,%ebx
		cmp    $0x0000a9,%dx
		jne    _03293d_jump
		movl   $0x00000a,(%esp)
		mov    0x000032(%esi),%eax
		mov    _0ce8d4_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%esi),%ax
		je     _03297b_jump
		cwtl   
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edi
		add    %eax,%edi
		cmpw   $0x0000a8,0x000060(%edi)
		jne    _03297b_jump
		cmpw   $0x000080,0x000042(%edi)
		jle    _0328d3_jump
		movw   $0x000001,0x000042(%edi)
		jmp    _0328e4_jump

	_0328d3_jump:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff80,%eax
		jge    _0328e4_jump
		movw   $0x00ffff,0x000042(%edi)

	_0328e4_jump:
		mov    _0cf24c_data,%ecx
		mov    _0cf24a_data,%ebx
		push   %edi
		mov    0x000040(%edi),%eax
		mov    0x00002c(%edi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %eax,%eax
		sar    $0x000010,%ebx
		add    %eax,%edx
		mov    _0cf268_data,%eax
		mov    %edx,0x00002c(%edi)
		sar    $0x000010,%eax
		mov    _0cf248_data,%edx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02c7a0_func
		mov    %eax,%ebx
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edi),%ecx
		add    %eax,%eax
		sub    %eax,%ecx
		mov    %ecx,0x00002c(%edi)
		mov    0x000042(%edi),%cx
		add    %ecx,%ecx
		jmp    _03297b_jump

	_03293d_jump:
		mov    $0x000001,%edi
		mov    _0cf24c_data,%ecx
		mov    _0cf24a_data,%ebx
		mov    _0cf248_data,%edx
		push   %eax
		mov    _0cf268_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		push   %eax
		mov    $0x000017,%eax
		mov    %edi,0x000008(%esp)
		call   _02c7a0_func
		mov    %eax,%ebx
		mov    0x000042(%esi),%cx

	_03297b_jump:
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		je     _032b8d_jump
		mov    _0ce0b1_data,%ah
		dec    %ebx
		cmp    $0x000002,%ah
		jne    _032a07_jump
		mov    _0ce0b0_data,%dl
		cmp    %ah,%dl
		je     _0329ad_jump
		cmp    $0x000001,%dl
		je     _0329ad_jump
		mov    $0x000001,%eax
		jmp    _0329af_jump

	_0329ad_jump:
		xor    %eax,%eax

	_0329af_jump:
		test   %eax,%eax
		je     _032a07_jump
		cmpb   $0x000008,_0ce0b0_data
		je     _0329cb_jump
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func

	_0329cb_jump:
		cmp    $0x000080,%cx
		jle    _0329d9_jump
		mov    $0x000001,%ecx
		jmp    _0329e6_jump

	_0329d9_jump:
		movswl %cx,%eax
		cmp    $0xffffff80,%eax
		jge    _0329e6_jump
		mov    $0xffffffff,%ecx

	_0329e6_jump:
		mov    _0ce070_data,%edi
		movswl %cx,%eax
		add    %eax,%edi
		xor    %ecx,%ecx
		mov    %edi,_0ce070_data
		mov    %cx,_0ce096_data
		mov    %cx,_0ce086_data

	_032a07_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _032a19_jump
		cmpb   $0x000008,_0ce0b0_data
		je     _032a20_jump

	_032a19_jump:
		mov    $0x000001,%eax
		jmp    _032a22_jump

	_032a20_jump:
		xor    %eax,%eax

	_032a22_jump:
		test   %eax,%eax
		je     _032b8d_jump
		cmpb   $0x000000,_0ce0b1_data
		jne    _032a3c_jump
		cmpb   $0x00003d,_0ce0b0_data
		je     _032a43_jump

	_032a3c_jump:
		mov    $0x000001,%eax
		jmp    _032a45_jump

	_032a43_jump:
		xor    %eax,%eax

	_032a45_jump:
		test   %eax,%eax
		je     _032b8d_jump
		mov    0x00006b(%esi),%ch
		cmp    $0x000014,%ch
		jb     _032b8d_jump
		cmp    $0x000016,%ch
		ja     _032b8d_jump
		mov    0x00006d(%esi),%ah
		test   %ah,%ah
		jne    _032b8d_jump
		mov    (%esp),%edx
		mov    0x00006c(%esi),%al
		cmp    %dx,%ax
		jne    _032b8d_jump
		cmpb   $0x000001,0x000075(%esi)
		je     _032a8c_jump
		cmp    $0x000001,%bx
		jne    _032b66_jump

	_032a8c_jump:
		testb  $0x000004,_0ce0c5_data
		je     _032b66_jump
		cmpb   $0x000002,_0ce0b1_data
		jne    _032aab_jump
		cmpb   $0x000008,_0ce0b0_data
		je     _032ab2_jump

	_032aab_jump:
		mov    $0x000001,%eax
		jmp    _032ab4_jump

	_032ab2_jump:
		xor    %eax,%eax

	_032ab4_jump:
		test   %eax,%eax
		je     _032b66_jump
		cmpb   $0x000000,_0ce0b1_data
		jne    _032ace_jump
		cmpb   $0x00003d,_0ce0b0_data
		je     _032ad5_jump

	_032ace_jump:
		mov    $0x000001,%eax
		jmp    _032ad7_jump

	_032ad5_jump:
		xor    %eax,%eax

	_032ad7_jump:
		test   %eax,%eax
		je     _032b66_jump
		mov    _0ce06c_data,%bx
		xor    %eax,%eax
		mov    0x000028(%esi),%cx
		mov    _0ce0ac_data,%al
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000068(%esi),%dl
		sub    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		cwtl   
		test   %eax,%eax
		jge    _032b05_jump
		neg    %eax

	_032b05_jump:
		cmp    $0x000019,%eax
		jge    _032b4f_jump
		mov    $0xffffffff,%ebx
		mov    $_0ce044_data,%eax
		xor    %edi,%edi
		xor    %ebp,%ebp
		xor    %edx,%edx
		mov    %di,_0ce084_data
		mov    %di,_0ce086_data
		mov    %di,_0cf250_data
		mov    %bx,_0ce09a_data
		xor    %ebx,%ebx
		mov    %ebp,_0ce068_data
		call   _01d444_func
		mov    0x000034(%esi),%ax
		mov    %ax,_0ce08e_data
		jmp    _032b8d_jump

	_032b4f_jump:
		test   %dx,%dx
		jge    _032b5d_jump
		orb    $0x000008,_0ce0c5_data
		jmp    _032b81_jump

	_032b5d_jump:
		andb   $0x0000f7,_0ce0c5_data
		jmp    _032b81_jump

	_032b66_jump:
		cmpb   $0x000000,0x000075(%esi)
		je     _032b71_jump
		test   %bx,%bx
		jne    _032b7a_jump

	_032b71_jump:
		orb    $0x000008,_0ce0c5_data
		jmp    _032b81_jump

	_032b7a_jump:
		andb   $0x0000f7,_0ce0c5_data

	_032b81_jump:
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02dd0c_func

	_032b8d_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032ba0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%bl
		call   _0188b0_func
		sub    %ebx,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0cf286_data,%ax
		add    $0x000090,%eax
		mov    %ax,0x00003c(%edx)
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%edx)
		pop    %edx
		pop    %ebx
		ret    



_032bd8_func:
		push   %edx
		mov    _096335_data,%dl
		inc    %dl
		cmp    $0x000003,%dl
		jne    _032bee_jump
		mov    %dl,_096336_data
		jmp    _032bfd_jump

	_032bee_jump:
		xor    %eax,%eax
		mov    %dl,%al
		mov    _09631e_data(%eax),%al
		mov    %al,_096336_data

	_032bfd_jump:
		mov    %dl,_096335_data
		pop    %edx
		ret    



_032d04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    _0cf2c0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0330c5_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0330c5_jump
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		mov    _0cf27e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032dae_jump
		mov    $0x000040,%ebx
		mov    $0x000005,%edx
		mov    _0ce0d0_data,%eax
		call   _01d444_func
		movzbl 0x000068(%ecx),%edi
		mov    0x000028(%ecx),%edx
		mov    _0ce0d0_data,%eax
		add    %edx,%edi
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%edi
		xor    %edx,%edx
		mov    %edi,0x000028(%eax)
		mov    0x000069(%ecx),%dl
		mov    0x00002c(%ecx),%ebx
		movzbl 0x000069(%eax),%edi
		add    %ebx,%edx
		sub    %edi,%edx
		sub    $0x000005,%edx
		mov    0x000024(%eax),%edi
		mov    %edx,0x00002c(%eax)
		test   %edi,%edi
		jne    _032d93_jump
		call   _01f3d4_func

	_032d93_jump:
		mov    _0ce0d0_data,%eax
		mov    0x000081(%eax),%dh
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%dh
		mov    %dh,0x000081(%eax)

	_032dae_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x00001c,%al
		jb     _032dcc_jump
		jbe    _032f0d_jump
		cmp    $0x00001d,%al
		jbe    _032e84_jump
		cmp    $0x000028,%al
		je     _032ddc_jump
		jmp    _0330c5_jump

	_032dcc_jump:
		cmp    $0x00001a,%al
		jb     _0330c5_jump
		jbe    _032f0d_jump
		jmp    _032df9_jump

	_032ddc_jump:
		mov    %esi,%eax
		call   _01cca0_func
		test   %al,%al
		je     _0330c5_jump
		mov    %esi,%eax
		call   _033f08_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032df9_jump:
		mov    0x00002c(%ecx),%ebx
		mov    _0df144_data,%eax
		sub    $0x000008,%ebx
		sar    $0x000010,%eax
		mov    %ebx,0x00002c(%ecx)
		cmp    %ebx,%eax
		jle    _032e11_jump
		mov    %eax,0x00002c(%ecx)

	_032e11_jump:
		mov    _0cf27e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032e39_jump
		mov    _0ce0d0_data,%eax
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebp
		mov    0x000069(%ecx),%dl
		movzbl 0x000069(%eax),%edi
		add    %ebp,%edx
		sub    %edi,%edx
		sub    $0x000005,%edx
		mov    %edx,0x00002c(%eax)

	_032e39_jump:
		mov    %esi,%eax
		call   _01cca0_func
		test   %al,%al
		je     _0330c5_jump
		mov    0x000050(%ecx),%dx
		dec    %dx
		mov    %dx,0x000050(%ecx)
		jne    _032e69_jump
		mov    $0x000028,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032e69_jump:
		mov    $0x00001c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000056(%ecx)
		call   _01d444_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032e84_jump:
		mov    0x00002c(%ecx),%ebp
		mov    _0df146_data,%eax
		add    $0x000006,%ebp
		sar    $0x000010,%eax
		mov    %ebp,0x00002c(%ecx)
		cmp    %ebp,%eax
		jge    _032e9c_jump
		mov    %eax,0x00002c(%ecx)

	_032e9c_jump:
		mov    _0cf27e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032ec5_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edi
		mov    0x000069(%ecx),%al
		add    %eax,%edi
		mov    _0ce0d0_data,%eax
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%edi
		sub    $0x000005,%edi
		mov    %edi,0x00002c(%eax)

	_032ec5_jump:
		mov    %esi,%eax
		call   _01cca0_func
		test   %al,%al
		je     _032eeb_jump
		mov    $0x00001a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000056(%ecx)
		call   _01d444_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032eeb_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _0330c5_jump
		mov    $0x00001b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032f0d_jump:
		xor    %eax,%eax
		mov    _0ce06c_data,%dx
		mov    _0ce0ac_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0df14a_data,%di
		mov    0x000068(%ecx),%al
		add    %edi,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    _0ce070_data,%bx
		mov    _0ce0ad_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0df148_data,%di
		mov    0x000069(%ecx),%al
		add    %edi,%eax
		sub    %eax,%ebx
		movswl %dx,%eax
		mov    %eax,%edi
		imul   %eax,%edi
		movswl %bx,%edx
		imul   %edx,%edx
		test   %eax,%eax
		jge    _032f61_jump
		neg    %eax

	_032f61_jump:
		add    %edi,%edx
		cmp    $0x000028,%eax
		jl     _032f70_jump
		cmp    $0x000bb8,%edx
		jae    _032f74_jump

	_032f70_jump:
		mov    $0x000001,%ah
		jmp    _032f76_jump

	_032f74_jump:
		xor    %ah,%ah

	_032f76_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x00001a,%al
		jb     _0330c5_jump
		jbe    _032f92_jump
		cmp    $0x00001c,%al
		je     _033052_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032f92_jump:
		test   %ah,%ah
		jne    _032fe0_jump
		cmpb   $0x000002,_0ce0b1_data
		jne    _032fa8_jump
		cmpb   $0x000000,_0ce0b0_data
		je     _032fe0_jump

	_032fa8_jump:
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%edi
		shl    $0x000002,%eax
		add    %eax,%edi
		xor    %eax,%eax
		mov    (%edi),%edi
		mov    _0ce0b0_data,%al
		testb  $0x000040,0x000007(%edi,%eax,8)
		je     _032ff5_jump
		movswl %bx,%eax
		test   %eax,%eax
		jge    _032fd3_jump
		neg    %eax

	_032fd3_jump:
		cmp    $0x00001e,%eax
		jge    _032ff5_jump
		cmp    $0x000bb8,%edx
		jae    _032ff5_jump

	_032fe0_jump:
		mov    $0x00001b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032ff5_jump:
		cmpw   $0x00001d,0x000056(%ecx)
		jge    _0330c5_jump
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		mov    _0df146_data,%edx
		mov    _0962e2_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    _0cf27e_data,%eax
		sar    $0x000010,%eax
		mov    %edx,0x00002c(%ecx)
		cmp    $0xffffffff,%eax
		je     _0330c1_jump
		movzbl 0x000069(%ecx),%esi
		mov    _0ce0d0_data,%eax
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%esi
		sub    $0x000005,%esi
		mov    %esi,0x00002c(%eax)
		incw   0x000056(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033052_jump:
		test   %ah,%ah
		jne    _033074_jump
		cmpb   $0x000002,_0ce0b1_data
		je     _033074_jump
		mov    $0x00001d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033074_jump:
		cmpw   $0x00001d,0x000056(%ecx)
		jge    _0330c5_jump
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		mov    _0df144_data,%edx
		mov    _0962e2_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0cf27e_data,%eax
		sar    $0x000010,%eax
		mov    %edx,0x00002c(%ecx)
		cmp    $0xffffffff,%eax
		je     _0330c1_jump
		xor    %edx,%edx
		mov    0x00002c(%ecx),%eax
		mov    0x000069(%ecx),%dl
		add    %eax,%edx
		mov    _0ce0d0_data,%eax
		movzbl 0x000069(%eax),%esi
		sub    %esi,%edx
		sub    $0x000005,%edx
		mov    %edx,0x00002c(%eax)

	_0330c1_jump:
		incw   0x000056(%ecx)

	_0330c5_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0330cc_switch:
		.long   _0330fc_case
		.long   _03319e_case
		.long   _03325f_case
		.long   _0332fb_case




_0330dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _096336_data,%al
		cmp    $0x000003,%al
		ja     _03330c_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_0330cc_switch(,%eax,4)

	_0330fc_case:
		mov    _0cf2c2_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03330c_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    0x000050(%edx),%ax
		test   %ax,%ax
		jne    _033157_jump
		mov    $_096321_data,%eax
		movw   $0x000002,0x000050(%edx)
		call   _0341c4_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_092534_data(,%eax,4)
		movb   $0x000001,_0cf45a_data
		call   _03ef60_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033157_jump:
		cmp    $0x000001,%ax
		jne    _03330c_jump
		mov    0x000024(%edx),%esi
		test   %esi,%esi
		jne    _03330c_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_092534_data(,%eax,4)
		mov    0x000081(%edx),%cl
		xor    %bh,%bh
		mov    %esi,0x000024(%edx)
		and    $0x0000fb,%cl
		mov    %bh,_0cf45a_data
		mov    %cl,0x000081(%edx)
		call   _032bd8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03319e_case:
		mov    _0cf2cc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03330c_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc7a0_data,%ecx
		shl    $0x000002,%edx
		add    %ecx,%edx
		mov    0x000050(%edx),%si
		test   %si,%si
		jne    _033215_jump
		mov    _0cf2ba_data,%ebx
		sar    $0x000010,%ebx
		movw   $0x000002,0x000050(%edx)
		cmp    $0xffffffff,%ebx
		je     _0331ec_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movw   $0x000002,0x000050(%ecx,%eax,4)

	_0331ec_jump:
		mov    $_096326_data,%eax
		call   _0341c4_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_092534_data(,%eax,4)
		movb   $0x000001,_0cf45a_data
		call   _03f014_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033215_jump:
		cmp    $0x000001,%si
		jne    _03330c_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03330c_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_092534_data(,%eax,4)
		mov    0x000081(%edx),%cl
		movl   $0x000000,0x000024(%edx)
		xor    %bh,%bh
		and    $0x0000fb,%cl
		mov    %bh,_0cf45a_data
		mov    %cl,0x000081(%edx)
		call   _032bd8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03325f_case:
		mov    _0cf2ca_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03330c_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x000050(%edx),%bx
		test   %bx,%bx
		jne    _0332b9_jump
		mov    $_09632b_data,%eax
		movw   $0x000002,0x000050(%edx)
		call   _0341c4_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_092534_data(,%eax,4)
		movb   $0x000001,_0cf45a_data
		call   _03f1c0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0332b9_jump:
		cmp    $0x000001,%bx
		jne    _03330c_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03330c_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_092534_data(,%eax,4)
		mov    0x000081(%edx),%cl
		movl   $0x000000,0x000024(%edx)
		xor    %bh,%bh
		and    $0x0000fb,%cl
		mov    %bh,_0cf45a_data
		mov    %cl,0x000081(%edx)
		call   _032bd8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0332fb_case:
		mov    $_096330_data,%eax
		call   _0341c4_func
		mov    %edx,%eax
		call   _034058_func

	_03330c_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_033314_switch:
		.long   _033358_case
		.long   _033358_case
		.long   _033361_case
		.long   _03336a_case
		.long   _03337a_case
		.long   _033373_case




_03332c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x00006d(%eax)
		jne    _03337a_case
		cmpb   $0x000027,0x00006c(%esi)
		jne    _03337a_case
		mov    _0cf47c_data,%al
		cmp    $0x000005,%al
		ja     _03337a_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_033314_switch(,%eax,4)

	_033358_case:
		mov    %esi,%eax
		call   _033e58_func
		jmp    _03337a_case

	_033361_case:
		mov    %esi,%eax
		call   _033f08_func
		jmp    _03337a_case

	_03336a_case:
		mov    %esi,%eax
		call   _033f8c_func
		jmp    _03337a_case

	_033373_case:
		mov    %esi,%eax
		call   _034058_func

	_03337a_case:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0333e5_jump
		cmpb   $0x000006,0x00006c(%esi)
		jne    _0333e5_jump
		cmpb   $0x000004,0x00006b(%esi)
		jne    _033397_jump
		movw   $0x00fffc,0x000042(%esi)
		jmp    _033754_jump

	_033397_jump:
		cmpb   $0x000004,_0cf47c_data
		jne    _0333bb_jump
		mov    %esi,%eax
		call   _01cca0_func
		test   %al,%al
		je     _033754_jump
		mov    %esi,%eax
		call   _034058_func
		jmp    _033754_jump

	_0333bb_jump:
		mov    %esi,%eax
		call   _01cca0_func
		test   %al,%al
		je     _033754_jump
		mov    0x000081(%esi),%dh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%esi)
		jmp    _033754_jump

	_0333e5_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _03361c_jump
		mov    0x00006c(%esi),%cl
		cmp    $0x000008,%cl
		je     _033419_jump
		cmp    $0x00000a,%cl
		je     _033419_jump
		cmp    $0x00000c,%cl
		je     _033419_jump
		cmp    $0x00000e,%cl
		je     _033419_jump
		cmp    $0x000016,%cl
		je     _033419_jump
		cmp    $0x000017,%cl
		je     _033419_jump
		cmp    $0x000018,%cl
		jne    _03361c_jump

	_033419_jump:
		cmpb   $0x000016,0x00006b(%esi)
		jne    _03361c_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d7e0_func
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		sub    $0x000060,%eax
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    $0xfffffffb,%edi
		add    %eax,%edx
		xor    %eax,%eax
		mov    %di,_0df144_data
		mov    %ax,_0df142_data
		mov    0x00006c(%esi),%al
		sub    $0x000080,%edx
		cmp    $0x00000e,%al
		jb     _0334bb_jump
		jbe    _03352a_jump
		cmp    $0x000017,%al
		jb     _0334aa_jump
		jbe    _03358e_jump
		cmp    $0x000018,%al
		je     _0335d5_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0334aa_jump:
		cmp    $0x000016,%al
		je     _033548_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0334bb_jump:
		cmp    $0x00000a,%al
		jb     _0334ce_jump
		jbe    _0334f1_jump
		cmp    $0x00000c,%al
		je     _03350c_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0334ce_jump:
		cmp    $0x000008,%al
		jne    _033754_jump
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		xor    %ebx,%ebx
		call   _033b48_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0334f1_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    %ecx,%ebx
		call   _033b48_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03350c_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    $0x000002,%ebx
		call   _033b48_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03352a_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    $0x000003,%ebx
		call   _033b48_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033548_jump:
		mov    $0x000002,%al
		mov    $0x000003,%ecx
		movswl %dx,%edi
		movswl %bx,%esi
		mov    $0x000012,%ebx
		mov    %al,_0df14c_data
		mov    $_096321_data,%eax
		mov    %edi,%edx
		call   _0341c4_func
		mov    %esi,%eax
		call   _033b48_func
		mov    $0x000005,%ecx
		mov    $0x000012,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _033b48_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03358e_jump:
		mov    $0x000002,%ch
		mov    $_096326_data,%eax
		movswl %dx,%esi
		movswl %bx,%edi
		mov    $0x000013,%ebx
		mov    %ch,_0df14c_data
		call   _0341c4_func
		mov    %esi,%edx
		mov    $0x000001,%ecx
		mov    %edi,%eax
		call   _033b48_func
		mov    $0x000004,%ecx
		mov    $0x000013,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _033b48_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0335d5_jump:
		mov    $0x000002,%cl
		mov    $_09632b_data,%eax
		movswl %dx,%esi
		movswl %bx,%edi
		mov    $0x000014,%ebx
		mov    %cl,_0df14c_data
		call   _0341c4_func
		mov    %esi,%edx
		mov    $0x000001,%ecx
		mov    %edi,%eax
		call   _033b48_func
		mov    $0x000002,%ecx
		mov    $0x000014,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _033b48_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03361c_jump:
		mov    0x00006d(%esi),%cl
		test   %cl,%cl
		jne    _03370f_jump
		mov    0x00006c(%esi),%ch
		cmp    $0x00000f,%ch
		jne    _03370f_jump
		mov    0x00006b(%esi),%al
		test   %al,%al
		jne    _03368a_jump
		xor    %eax,%eax
		mov    %cl,%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %ch,%al
		mov    0x000005(%edx,%eax,8),%al
		and    %ch,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _033754_jump
		mov    %esi,%eax
		call   _07b028_func
		mov    0x000081(%esi),%dh
		movl   $0x000001,0x000024(%esi)
		or     $0x00000c,%dh
		mov    %dh,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03368a_jump:
		cmp    $0x000016,%al
		jne    _033754_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d7e0_func
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		xor    %ecx,%ecx
		sub    $0x000060,%eax
		mov    %cx,_0df142_data
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    $0x000001,%ecx
		add    %edx,%eax
		mov    $0xfffffffe,%edx
		sub    $0x000080,%eax
		mov    %dx,_0df144_data
		movswl %ax,%edx
		movswl %bx,%eax
		mov    $0x000004,%ebx
		call   _033b48_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03370f_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _03372b_jump
		cmpb   $0x000015,0x00006c(%esi)
		jne    _03372b_jump
		mov    %esi,%eax
		call   _0330dc_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03372b_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _033754_jump
		mov    0x00006c(%esi),%dh
		cmp    $0x00001a,%dh
		je     _03374d_jump
		cmp    $0x00001b,%dh
		je     _03374d_jump
		cmp    $0x00001c,%dh
		je     _03374d_jump
		cmp    $0x00001d,%dh
		je     _03374d_jump
		cmp    $0x000028,%dh
		jne    _033754_jump

	_03374d_jump:
		mov    %esi,%eax
		call   _032d04_func

	_033754_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033760_func:
		push   %ebx
		push   %ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _03379b_jump
		mov    0x00006c(%eax),%dh
		cmp    $0x000010,%dh
		je     _033775_jump
		cmp    $0x000011,%dh
		jne    _03379b_jump

	_033775_jump:
		cmpb   $0x000000,0x00007e(%eax)
		je     _03379b_jump
		mov    0x000076(%eax),%cl
		test   %cl,%cl
		je     _033789_jump
		mov    %cl,%ch
		dec    %ch
		mov    %ch,0x000076(%eax)

	_033789_jump:
		cmpb   $0x000000,0x000076(%eax)
		jne    _03379b_jump
		mov    $0x000006,%ebx
		xor    %edx,%edx
		call   _01d444_func

	_03379b_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0337a0_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0337f2_jump
		cmpb   $0x000007,0x00006c(%ebx)
		jne    _0337bc_jump
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d434_func

	_0337bc_jump:
		cmpb   $0x000009,0x00006c(%ebx)
		jne    _0337ce_jump
		mov    $0x00000a,%edx
		mov    %ebx,%eax
		call   _01d434_func

	_0337ce_jump:
		cmpb   $0x00000b,0x00006c(%ebx)
		jne    _0337e0_jump
		mov    $0x00000c,%edx
		mov    %ebx,%eax
		call   _01d434_func

	_0337e0_jump:
		cmpb   $0x00000d,0x00006c(%ebx)
		jne    _0337f2_jump
		mov    $0x00000e,%edx
		mov    %ebx,%eax
		call   _01d434_func

	_0337f2_jump:
		pop    %edx
		pop    %ebx
		ret    



_0337f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000076(%eax)
		je     _033a96_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000005,%dl
		jne    _03382b_jump
		cmpb   $0x000001,_0cf465_data
		jne    _0339bb_jump
		movb   $0x000000,0x000076(%esi)
		jmp    _0339bb_jump

	_03382b_jump:
		cmp    $0x000004,%dl
		jne    _033929_jump
		mov    _0cf2b0_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %ecx,%eax
		mov    _0cc7a0_data,%ecx
		shl    $0x000002,%eax
		mov    0x000056(%esi),%di
		add    %eax,%ecx
		cmp    $0x000001,%di
		jne    _0338d2_jump
		movw   $0x000000,0x000056(%esi)
		mov    0x000081(%ecx),%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		xor    %edx,%edx
		mov    %bh,0x000081(%ecx)
		xor    %ebx,%ebx
		movb   $0x0000fe,0x000076(%ecx)
		call   _01d444_func
		mov    _0ce06c_data,%ax
		movl   $0x000000,0x000028(%ecx)
		mov    %ax,0x00003c(%ecx)
		mov    _0ce070_data,%ax
		mov    %ax,0x00003e(%ecx)
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x00002c(%ecx)
		or     $0x000004,%al
		mov    %al,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f3d4_func
		xor    %ah,%ah
		movb   $0x000000,0x00007e(%ecx)
		mov    %ah,_0cf47f_data
		mov    %ah,_0cf485_data
		mov    %ah,_0cf484_data

	_0338d2_jump:
		mov    0x00003c(%ecx),%dx
		movzbw 0x000068(%esi),%di
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%ecx),%al
		add    %ebx,%edi
		add    %edx,%eax
		sub    %edi,%eax
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x00003e(%ecx),%bx
		mov    0x000069(%ecx),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		mov    _0cf47f_data,%cl
		sub    %eax,%ebx
		cmp    $0x000001,%cl
		jne    _0339bb_jump
		cmpb   $0x000019,_0cf484_data
		jne    _0339bb_jump
		movb   $0x000000,0x000076(%esi)
		jmp    _0339bb_jump

	_033929_jump:
		movzbw _0ce0ac_data,%di
		mov    _0ce06c_data,%bx
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %ebx,%edi
		add    %edx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		movw   $0x000000,0x000056(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce0b0_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _033990_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce070_data,%cx
		mov    _0ce0ad_data,%al
		add    %ecx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		jmp    _0339bb_jump

	_033990_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0ce0ad_data,%dl
		mov    _0ce0b8_data,%al
		sub    %eax,%edx
		mov    _0ce070_data,%ebx
		sar    %edx
		add    %ebx,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		sub    %eax,%edx
		mov    %edx,%ebx

	_0339bb_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _0339c4_jump
		neg    %eax

	_0339c4_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _0339cf_jump
		neg    %eax

	_0339cf_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		test   %dx,%dx
		jle    _033a01_jump
		mov    $0x000004,%cl
		mov    %edi,%eax
		mov    -0x000002(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000004,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_033a01_jump:
		cmpb   $0x000000,_0cf3ef_data
		jne    _033a96_jump
		mov    _0df142_data,%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _033a2b_jump
		mov    $0x000001,%eax
		jg     _033a2b_jump
		neg    %eax

	_033a2b_jump:
		add    %ax,_0df144_data
		mov    _0df140_data,%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _033a4e_jump
		mov    $0x000001,%eax
		jg     _033a4e_jump
		neg    %eax

	_033a4e_jump:
		mov    _0df142_data,%bx
		add    %eax,%ebx
		mov    0x000054(%esi),%ecx
		mov    %bx,_0df142_data
		mov    0x00002c(%esi),%dx
		mov    _0df142_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0df144_data,%di
		movswl %dx,%eax
		mov    0x000028(%esi),%dx
		xor    %ebx,%ebx
		add    %edi,%edx
		mov    0x00006c(%esi),%bl
		movswl %dx,%ebp
		mov    %eax,%edx
		mov    %ebp,%eax
		call   _033b48_func
		movb   $0x000000,0x000076(%esi)

	_033a96_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_033aa0_switch:
		.long   _033aed_case
		.long   _033b08_case
		.long   _033b21_case
		.long   _033b33_case




_033ab0_func:
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x000076(%eax)
		je     _033b44_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _033ac8_jump
		cmpb   $0x000004,0x00006c(%eax)
		je     _033acf_jump

	_033ac8_jump:
		mov    $0x000001,%edx
		jmp    _033ad1_jump

	_033acf_jump:
		xor    %edx,%edx

	_033ad1_jump:
		test   %edx,%edx
		je     _033b44_jump
		movb   $0x000000,0x000076(%eax)
		mov    0x00006c(%eax),%al
		cmp    $0x000003,%al
		ja     _033b44_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_033aa0_switch(,%eax,4)

	_033aed_case:
		mov    _0cf221_data,%ch
		and    $0x0000e7,%ch
		mov    %ch,%al
		mov    %ch,_0cf221_data
		or     $0x000008,%al
		mov    %al,_0cf221_data
		pop    %edx
		pop    %ecx
		ret    

	_033b08_case:
		mov    $_0ce044_data,%eax
		call   _07af48_func
		andb   $0x00009f,_0cf221_data
		call   _05a460_func
		pop    %edx
		pop    %ecx
		ret    

	_033b21_case:
		mov    $_0ce044_data,%eax
		call   _07af48_func
		call   _05a510_func
		pop    %edx
		pop    %ecx
		ret    

	_033b33_case:
		mov    $_0ce044_data,%eax
		call   _07af48_func
		andb   $0x0000fe,_0cf220_data

	_033b44_jump:
		pop    %edx
		pop    %ecx
		ret    



_033b48_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %ax,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %ecx,0x000008(%esp)
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%si
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %edx,%edx

	_033b72_jump:
		cmpw   $0x0000d7,0x000060(%ecx)
		jne    _033b84_jump
		cmp    0x000024(%ecx),%edx
		jne    _033b84_jump
		mov    $0x000001,%ebx

	_033b84_jump:
		add    $0x000084,%ecx
		inc    %eax
		test   %bx,%bx
		jne    _033b95_jump
		cmp    %si,%ax
		jl     _033b72_jump

	_033b95_jump:
		sub    $0x000084,%ecx
		test   %bx,%bx
		je     _033bde_jump
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f3d4_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    -0x000002(%esp),%eax
		movb   $0x000001,0x000076(%ecx)
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%esp),%eax
		mov    0x00000c(%esp),%bl
		jmp    _033c5e_jump

	_033bde_jump:
		mov    _0cc7a0_data,%eax
		xor    %edx,%edx
		xor    %edi,%edi

	_033be7_jump:
		cmpw   $0x0000d7,0x000060(%eax)
		jne    _033bfd_jump
		xor    %ecx,%ecx
		mov    0x00006b(%eax),%cl
		cmp    %dx,%cx
		jle    _033bfd_jump
		mov    %ebx,%edi
		mov    %ecx,%edx

	_033bfd_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jl     _033be7_jump
		movswl %di,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0cc7a0_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f3d4_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    -0x000002(%esp),%eax
		movb   $0x000001,0x000076(%ecx)
		sar    $0x000010,%eax
		mov    0x00000c(%esp),%bl
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%esp),%eax
		xor    %edx,%edx

	_033c5e_jump:
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d444_func
		movb   $0x000000,0x00006b(%ecx)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    



_033c7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    _0cf221_data,%ah
		test   $0x000018,%ah
		jne    _033c96_jump
		test   $0x000060,%ah
		jne    _033c96_jump
		test   $0x000002,%ah
		je     _033ce8_jump

	_033c96_jump:
		mov    $_0ce044_data,%eax
		call   _07af48_func
		mov    _0cf221_data,%cl
		test   $0x000018,%cl
		je     _033cb6_jump
		mov    %cl,%ch
		or     $0x000018,%ch
		mov    %ch,_0cf221_data

	_033cb6_jump:
		testb  $0x000060,_0cf221_data
		je     _033cc4_jump
		call   _05a460_func

	_033cc4_jump:
		testb  $0x000002,_0cf221_data
		je     _033cd2_jump
		call   _05a510_func

	_033cd2_jump:
		mov    0x000081(%edx),%bl
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%edx)

	_033ce8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033cec_func:
		push   %edx
		mov    _0cf2c0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _033d2b_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    _0df148_data,%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%eax)
		mov    %dx,0x00003c(%eax)
		mov    _0df146_data,%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%eax)
		mov    %dx,0x00003e(%eax)

	_033d2b_jump:
		pop    %edx
		ret    



_033d30_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%dl
		mov    _0cf2c0_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _033dde_jump
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0cc7a0_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    _0df148_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0df144_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		test   %dl,%dl
		je     _033dde_jump
		mov    $0x000040,%ebx
		mov    $0x000005,%edx
		mov    _0ce0d0_data,%eax
		call   _01d444_func
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%bl
		mov    _0ce0d0_data,%eax
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,0x000028(%eax)
		mov    0x000069(%ecx),%dl
		mov    0x00002c(%ecx),%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%ebx
		lea    -0x000005(%ebx),%edx
		mov    0x000024(%eax),%ebx
		mov    %edx,0x00002c(%eax)
		test   %ebx,%ebx
		jne    _033dc3_jump
		call   _01f3d4_func

	_033dc3_jump:
		mov    _0ce0d0_data,%eax
		mov    0x000081(%eax),%dl
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%dl
		mov    %dl,0x000081(%eax)

	_033dde_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033de4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00002c(%eax),%ax
		mov    %ax,_0df148_data
		mov    _0cf2b0_data,%ax
		sub    $0x0000b8,%eax
		mov    %ax,_0df146_data
		mov    _0cf2c0_data,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    %bx,_0df14a_data
		cmp    $0xffffffff,%eax
		je     _033e51_jump
		mov    %eax,%ebx
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%al
		mov    0x00002c(%edx),%cx
		mov    %eax,%edx
		add    %ecx,%edx
		xor    %eax,%eax
		sub    $0x0000b8,%edx
		mov    0x000069(%ebx),%al
		sub    %eax,%edx
		add    $0x000024,%edx
		mov    %dx,_0df146_data

	_033e51_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033e58_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movb   $0x000001,_0cf47c_data
		mov    _0cf2b0_data,%ax
		mov    %ax,_0cf266_data
		mov    %ax,_0cf25c_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000060(%ecx),%ax
		mov    %dx,_0cf268_data
		mov    %dx,_0cf25a_data
		mov    _092534_data(,%eax,4),%dl
		and    $0x00007f,%dl
		xor    %ebx,%ebx
		mov    %dl,_092534_data(,%eax,4)
		mov    %ecx,%eax
		mov    %bx,0x000050(%ecx)
		mov    _0cf220_data,%bl
		xor    %dh,%dh
		and    $0x0000fe,%bl
		mov    %dh,_0cf45a_data
		mov    %bl,_0cf220_data
		call   _032ba0_func
		mov    %ecx,%eax
		call   _033de4_func
		mov    _0cf2c0_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _033ef1_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		movw   $0x000003,0x000050(%edx,%eax,4)
		movw   $0x00001d,0x000056(%edx,%eax,4)

	_033ef1_jump:
		call   _033cec_func
		mov    $0x00001a,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033f08_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		movb   $0x000002,_0cf47c_data
		mov    _0cf2b0_data,%ax
		mov    %ax,_0cf266_data
		mov    %ax,_0cf25c_data
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000060(%edx),%ax
		mov    %bx,_0cf268_data
		mov    %bx,_0cf25a_data
		andb   $0x00007f,_092534_data(,%eax,4)
		xor    %bh,%bh
		mov    %edx,%eax
		mov    %bh,_0cf45a_data
		call   _032ba0_func
		mov    %edx,%eax
		call   _033de4_func
		mov    $0x000001,%eax
		call   _033d30_func
		movl   $0x000001,0x000024(%edx)
		mov    0x000081(%edx),%cl
		movw   $0x000000,0x000050(%edx)
		or     $0x000004,%cl
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _0401e0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033f8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movb   $0x000003,_0cf47c_data
		mov    _0cf2b0_data,%ax
		mov    %ax,_0cf266_data
		mov    %ax,_0cf25c_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000060(%ecx),%ax
		mov    %dx,_0cf268_data
		mov    %dx,_0cf25a_data
		andb   $0x00007f,_092534_data(,%eax,4)
		xor    %dh,%dh
		mov    %ecx,%eax
		mov    %dh,_0cf45a_data
		call   _032ba0_func
		mov    %ecx,%eax
		call   _033de4_func
		xor    %eax,%eax
		call   _033d30_func
		movl   $0x000000,0x000028(%ecx)
		xor    %ebx,%ebx
		movl   $0x000001,0x000024(%ecx)
		mov    %bx,0x000040(%ecx)
		mov    %bx,0x000042(%ecx)
		mov    _0cf2ae_data,%edx
		mov    0x000028(%ecx),%eax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%ecx)
		xor    %eax,%eax
		mov    0x000081(%ecx),%bl
		mov    0x000069(%ecx),%al
		or     $0x000004,%bl
		sub    %eax,%edx
		mov    %bl,0x000081(%ecx)
		sub    $0x000014,%edx
		mov    $0x000015,%ebx
		mov    %edx,0x00002c(%ecx)
		mov    %ecx,%eax
		mov    %dx,0x00003e(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000050(%ecx)
		call   _01d444_func
		xor    %bh,%bh
		mov    _09631e_data,%al
		mov    %bh,_096335_data
		mov    %al,_096336_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034058_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		movb   $0x000005,_0cf47c_data
		mov    _0cf2b0_data,%ax
		mov    %ax,_0cf266_data
		mov    %ax,_0cf25c_data
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000060(%edx),%ax
		mov    %bx,_0cf268_data
		mov    %bx,_0cf25a_data
		andb   $0x00007f,_092534_data(,%eax,4)
		xor    %bh,%bh
		mov    %edx,%eax
		mov    %bh,_0cf45a_data
		call   _032ba0_func
		mov    %edx,%eax
		call   _033de4_func
		xor    %eax,%eax
		call   _033d30_func
		testb  $0x000002,_0cf221_data
		je     _0340cb_jump
		mov    $_0ce044_data,%eax
		call   _07af48_func
		call   _05a510_func

	_0340cb_jump:
		movl   $0x000000,0x000028(%edx)
		mov    $0xffffffc4,%esi
		movw   $0x000000,0x000050(%edx)
		mov    _0cf2ae_data,%ebx
		mov    0x000081(%edx),%ch
		movl   $0x000000,0x000024(%edx)
		xor    %edi,%edi
		sar    $0x000010,%ebx
		and    $0x0000fb,%ch
		mov    %si,_0cf2be_data
		mov    %di,_0cf2b6_data
		mov    0x000028(%edx),%eax
		mov    %di,_0cf2ba_data
		mov    %ax,0x00003c(%edx)
		xor    %eax,%eax
		mov    %di,_0cf2b4_data
		mov    0x000069(%edx),%al
		mov    %ch,0x000081(%edx)
		sub    %eax,%ebx
		mov    $0x000001,%al
		sub    $0x000014,%ebx
		mov    %al,_0cf465_data
		mov    _0cf228_data,%ah
		mov    %ebx,0x00002c(%edx)
		or     $0x000080,%ah
		mov    %bx,0x00003e(%edx)
		mov    %ah,_0cf228_data
		mov    %al,_0cf479_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034154_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    0x000050(%eax),%al
		cmp    $0x000005,%al
		jae    _0341b9_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    _0df117_data(%eax),%bl
		test   %bl,%bl
		je     _0341b2_jump
		movb   $0x000004,0x00007e(%edx)
		mov    _0df118_data(%eax),%bx
		dec    %bx
		mov    %bx,_0df118_data(%eax)
		jne    _0341bd_jump
		mov    $0x000064,%esi
		mov    _0df117_data(%eax),%bh
		mov    %si,_0df118_data(%eax)
		dec    %bh
		mov    %bh,_0df117_data(%eax)
		jne    _0341bd_jump
		mov    %bh,0x00007e(%edx)
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_0341b2_jump:
		mov    %bl,0x00007e(%edx)
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_0341b9_jump:
		movb   $0x000000,0x00007e(%edx)

	_0341bd_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_0341c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %dl,%dl

	_0341cb_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		imul   $0x00000a,%ebx,%eax
		mov    _0df117_data(%eax),%dh
		test   %dh,%dh
		jne    _034209_jump
		mov    (%ecx,%ebx,1),%bl
		mov    %bl,_0df117_data(%eax)
		movw   $0x000064,_0df118_data(%eax)
		mov    _0df114_data(%eax),%al
		and    $_0000ff_case,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%ebx
		mov    %dh,0x00006b(%ebx,%eax,1)

	_034209_jump:
		inc    %dl
		cmp    $0x000005,%dl
		jb     _0341cb_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034220_func:
		adc    %eax,(%eax)
		add    %al,(%eax)
		adc    %al,(%eax)
		add    %al,(%eax)
		or     (%eax),%eax
		add    %al,(%eax)
		or     (%eax),%eax
		add    %al,(%eax)
		or     (%eax),%eax
		add    %al,(%eax)
		add    $0x000000,%al
		add    %al,(%eax)

	_034238_jump:
		mov    $0x000001,%eax
		call   _054868_func
		call   _01a940_func
		call   _0420e8_func
		mov    $_0ce044_data,%eax
		call   _018ac8_func
		mov    $_0ce044_data,%eax
		call   _055b7c_func
		call   _036d68_func
		call   _041e58_func
		test   %ax,%ax
		jne    _03428d_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _03428d_jump
		call   _041f70_func
		test   %ax,%ax
		jne    _03428d_jump
		call   _041ffc_func
		test   %ax,%ax
		je     _034294_jump

	_03428d_jump:
		movb   $0x000001,_0cf438_data

	_034294_jump:
		call   *_0ccaec_data
		xor    %eax,%eax
		mov    _0cf438_data,%al
		ret    



_0342a4_func:
		push   %edx
		call   _01a940_func
		call   _036734_func
		call   _01b3dc_func
		call   _069b00_func
		call   _0420e8_func
		mov    _0cf216_data,%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		cmp    $0xffffffff,%eax
		je     _0342d6_jump
		cmpb   $0x000000,_0cf44a_data
		je     _0342d8_jump

	_0342d6_jump:
		mov    $0x000001,%dl

	_0342d8_jump:
		xor    %eax,%eax
		mov    %dl,%al
		pop    %edx
		ret    



_0342e0_func:
		push   %ebx
		cmpw   $0x000000,_0ce94a_data
		jne    _03436c_jump
		cmpb   $0x000001,_0cf46d_data
		jne    _03436c_jump
		cmpb   $0x000000,_0cf42d_data
		jne    _03436c_jump
		mov    $_0cd248_data,%eax
		call   _07f424_func
		mov    $_0cd248_data,%eax
		call   _0366ec_func
		mov    $_0c7638_data,%eax
		call   _03cc18_func
		call   _03ca38_func
		call   _01cc30_func
		call   _03c9c0_func
		call   _069754_func
		mov    $_0342a4_func,%eax
		call   _03ca88_func
		call   _03ca10_func
		call   _069e10_func
		call   _01cc5c_func
		call   _0714c0_func
		call   _03cc8c_func
		mov    $_0cd248_data,%eax
		mov    $0x000001,%ebx
		call   _07f424_func
		mov    %bx,_0cf272_data

	_03436c_jump:
		pop    %ebx
		ret    



_034370_func:
		push   %edx
		push   %esi
		push   %edi
		call   _0420e8_func
		mov    _096338_data,%al
		mov    %al,_0cf470_data
		call   _068f8c_func
		mov    _0cf470_data,%dl
		mov    _095e69_data,%ah
		mov    %dl,_096338_data
		test   %ah,%ah
		je     _0343c5_jump
		xor    %dl,%dl
		mov    %dl,_095e69_data
		call   _016ded_func
		call   _016ddd_func
		mov    $0x000001,%eax
		call   _023d4c_func
		call   _03465c_func
		call   _03b3e0_func
		jmp    _0343ca_jump

	_0343c5_jump:
		call   _03465c_func

	_0343ca_jump:
		call   _03465c_func
		cmpw   $0x000003,_0cf18c_data
		jne    _0343e2_jump
		movw   $0x000001,_0cf16c_data

	_0343e2_jump:
		cmpw   $0x000000,_0cf17a_data
		jne    _0343f6_jump
		mov    _0cf42b_data,%dh
		test   %dh,%dh
		je     _0343fd_jump

	_0343f6_jump:
		mov    $0x000001,%edx
		jmp    _0343ff_jump

	_0343fd_jump:
		xor    %dl,%dl

	_0343ff_jump:
		cmpb   $0x000000,_0cf42b_data
		je     _03445d_jump
		cmpw   $0x000001,_0cf18c_data
		jne    _034448_jump
		mov    _0cf1a4_data,%edi
		sar    $0x000010,%edi
		shl    $0x000002,%edi
		sub    $0x000004,%edi
		mov    $_0cd144_data,%esi
		add    $_0cd148_data,%edi
		push   %edi

	_03442d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034445_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03442d_jump

	_034445_jump:
		pop    %edi
		jmp    _03445d_jump

	_034448_jump:
		mov    _0cf1a4_data,%edi
		sar    $0x000010,%edi
		mov    _0c0a28_data,%al
		mov    %al,_0cd144_data(,%edi,4)

	_03445d_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_034464_func:
		push   %ebx
		push   %edx
		call   _0420e8_func
		call   _01cbc8_func
		mov    _0df157_data,%al
		mov    %al,_0cf470_data
		call   _068b04_func
		mov    _0cf470_data,%al
		mov    %al,_0df157_data
		cmpb   $0x000000,_095e69_data
		je     _0344ba_jump
		xor    %dl,%dl
		mov    %dl,_095e69_data
		call   _016ded_func
		call   _016ddd_func
		mov    $0x000001,%eax
		call   _023d4c_func
		call   _03465c_func
		call   _03b3e0_func
		jmp    _0344bf_jump

	_0344ba_jump:
		call   _03465c_func

	_0344bf_jump:
		call   _0420e8_func
		mov    _0df156_data,%al
		mov    %al,_0cf470_data
		call   _068ddc_func
		mov    _0cf470_data,%al
		mov    %al,_0df156_data
		call   _0692b4_func
		cmpw   $0x000001,_0cf18c_data
		jne    _0344f6_jump
		cmpw   $0x000000,_0cf1a6_data
		jne    _034514_jump

	_0344f6_jump:
		cmpw   $0x000003,_0cf18c_data
		jne    _034542_jump
		cmpw   $0x000000,_0cf1a0_data
		jne    _034542_jump
		cmpw   $0x000000,_0cf1a6_data
		je     _034542_jump

	_034514_jump:
		cmpw   $0x000000,_0cf17a_data
		jne    _03452d_jump
		call   _068f14_func
		mov    $_034370_func,%eax
		call   _03ca88_func

	_03452d_jump:
		cmpb   $0x000000,_0cf42b_data
		jne    _034542_jump
		xor    %eax,%eax
		mov    _0cf1a6_data,%al
		call   _073d00_func

	_034542_jump:
		cmpw   $0x000000,_0cf16e_data
		je     _034551_jump
		call   _068ab0_func

	_034551_jump:
		mov    _0ccae0_data,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0cf15c_data,%ax
		inc    %edx
		mov    %bx,_0cf18c_data
		mov    %edx,_0ccae0_data
		cmp    %edx,%eax
		jg     _03458b_jump
		cmpw   $0x000000,_0cf16c_data
		jne    _03458b_jump
		cmpb   $0x000000,_0cf46d_data
		jne    _03458b_jump
		call   _0359f4_func

	_03458b_jump:
		cmpb   $0x000000,_0cf46d_data
		jne    _0345b0_jump
		cmpw   $0x000000,_0cf16c_data
		jne    _0345b0_jump
		cmpb   $0x000000,_0cf425_data
		jne    _0345b0_jump
		cmpb   $0x000000,_0cf42b_data
		je     _0345b8_jump

	_0345b0_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ebx
		ret    

	_0345b8_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret    



_0345c0_func:
		push   %ebx
		push   %edx
		movb   $0x000001,_095188_data
		mov    $_0cd248_data,%eax
		call   _0366c0_func
		mov    $_0c7638_data,%eax
		xor    %edx,%edx
		call   _03cc18_func
		xor    %eax,%eax
		xor    %bl,%bl
		call   _023d4c_func
		call   _03c9c0_func
		call   _0689cc_func
		call   _068ab0_func
		mov    %edx,_0ccae0_data
		call   _068f14_func
		mov    $0x000001,%dl
		mov    $_034464_func,%eax
		mov    %bl,_096338_data
		mov    $0x000064,%ebx
		mov    %dl,_0df157_data
		mov    %dl,_0df156_data
		xor    %edx,%edx
		mov    %bx,_0cf1a8_data
		mov    %dx,_0cf1a2_data
		mov    %dx,_0cf22c_data
		mov    %dx,_0cf22a_data
		call   _03ca88_func
		call   _03ca10_func
		call   _03cc8c_func
		mov    $_0cd248_data,%eax
		call   _07f424_func
		pop    %edx
		pop    %ebx
		ret    



_03465c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    _0cf1a2_data,%ax
		mov    _0cf1a8_data,%bx
		mov    $0x00001e,%edx
		cmp    %bx,%ax
		jge    _03468e_jump
		cmpb   $0x000000,_0cf470_data
		jne    _03468e_jump
		incw   _0cf1a2_data
		jmp    _0346af_jump

	_03468e_jump:
		cmpb   $0x000000,_0cf470_data
		jne    _0346a6_jump
		mov    _0cf186_data,%ax
		inc    %eax
		mov    %ax,_0cf1a2_data
		jmp    _0346af_jump

	_0346a6_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cf1a2_data

	_0346af_jump:
		mov    _0cf168_data,%di
		cmp    %di,%dx
		jle    _0346c7_jump
		mov    %edi,%edx
		inc    %edx
		mov    %dx,_0cf168_data
		jmp    _0346cf_jump

	_0346c7_jump:
		xor    %eax,%eax
		mov    %ax,_0cf168_data

	_0346cf_jump:
		call   _03cd2c_func
		push   $0x000000
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cf192_data,%ebx
		mov    _0c29d8_data,%eax
		sar    $0x000010,%ebx
		call   _01a168_func
		cmpb   $0x000001,_0cf428_data
		jne    _034717_jump
		mov    $0x000035,%edx
		mov    $0x000091,%esi
		mov    $_0000ff_case,%edi
		mov    %si,0x000008(%esp)
		mov    %di,0x00000c(%esp)
		jmp    _034730_jump

	_034717_jump:
		mov    $0x000035,%edx
		mov    $0x00009f,%ebx
		mov    $0x000109,%ecx
		mov    %bx,0x000008(%esp)
		mov    %cx,0x00000c(%esp)

	_034730_jump:
		cmpw   $0x000001,_0cf192_data
		jne    _034768_jump
		mov    $_0cac98_data,%edi
		mov    _0c29dc_data,%esi
		push   %edi

	_034746_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03475e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _034746_jump

	_03475e_jump:
		pop    %edi
		mov    %dx,_0cad68_data
		jmp    _034785_jump

	_034768_jump:
		push   $0x000005
		mov    $0x000001,%ecx
		mov    _0cf19a_data,%ebx
		mov    _0c29dc_data,%eax
		movswl %dx,%edx
		sar    $0x000010,%ebx
		call   _01a168_func

	_034785_jump:
		cmpw   $0x000002,_0cf192_data
		jne    _0347c0_jump
		mov    $_0cac98_data,%edi
		mov    _0c29e0_data,%esi
		push   %edi

	_03479b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0347b3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03479b_jump

	_0347b3_jump:
		pop    %edi
		mov    0x000008(%esp),%eax
		mov    %ax,_0cad68_data
		jmp    _0347e1_jump

	_0347c0_jump:
		push   $0x000005
		mov    0x00000a(%esp),%edx
		mov    $0x000001,%ecx
		mov    _0cf19a_data,%ebx
		mov    _0c29e0_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01a168_func

	_0347e1_jump:
		cmpw   $0x000003,_0cf192_data
		jne    _03481c_jump
		mov    $_0cac98_data,%edi
		mov    _0c29e4_data,%esi
		push   %edi

	_0347f7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03480f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0347f7_jump

	_03480f_jump:
		pop    %edi
		mov    0x00000c(%esp),%eax
		mov    %ax,_0cad68_data
		jmp    _03483d_jump

	_03481c_jump:
		push   $0x000005
		mov    0x00000e(%esp),%edx
		mov    $0x000001,%ecx
		mov    _0cf19a_data,%ebx
		mov    _0c29e4_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01a168_func

	_03483d_jump:
		mov    $_0cac98_data,%eax
		mov    $0x000001,%edx
		mov    $0x000001,%ebp
		call   _01ed18_func
		mov    $_0cac98_data,%eax
		xor    %ecx,%ecx
		call   _04ebe0_func
		mov    %cx,0x000014(%esp)
		jmp    _034b8d_jump

	_034867_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		mov    $_0c0a28_data,%edx
		add    $_0cd148_data,%eax
		call   _07f4c0_func
		test   %eax,%eax
		je     _034b4c_jump
		mov    $0x000001,%ebx
		xor    %ecx,%ecx
		mov    %bx,0x000004(%esp)
		mov    %ecx,0x000010(%esp)
		jmp    _034afb_jump

	_03489d_jump:
		mov    0x000004(%esp),%edi
		cmp    _0cf1ae_data,%di
		jne    _0348c5_jump
		mov    _0cf1aa_data,%eax
		inc    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jne    _0348c5_jump
		cmpw   $0x000000,_0cf178_data
		jne    _0349ab_jump

	_0348c5_jump:
		mov    0x000012(%esp),%eax
		mov    $_0cd148_data,%esi
		mov    %esp,%edi
		sar    $0x000010,%eax
		mov    0x000002(%esp),%edx
		shl    $0x000002,%eax
		xor    %ch,%ch
		add    %eax,%esi
		sar    $0x000010,%edx
		push   %edi

	_0348e2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0348fa_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0348e2_jump

	_0348fa_jump:
		pop    %edi
		mov    0x000010(%esp),%eax
		mov    %ch,(%esp,%edx,1)
		imul   _0cf19a_data,%ax
		mov    _0cf198_data,%bx
		mov    0x000014(%esp),%esi
		add    $0x000017,%ebx
		imul   %esi,%ebx
		mov    _0cf1b4_data,%cx
		mov    _0cf164_data,%di
		add    %ecx,%ebx
		mov    -0x000001(%esp,%edx,1),%cl
		add    %edi,%eax
		cmp    $0x00007e,%cl
		jne    _03496b_jump
		mov    _0cf1d0_data,%edx
		sar    $0x000010,%edx
		push   %edx
		mov    _0cf1ce_data,%edx
		sar    $0x000010,%edx
		push   %edx
		mov    _0cf1d2_data,%edx
		sar    $0x000010,%edx
		movswl %bx,%ebx
		push   %edx
		sub    $0x00000a,%eax
		mov    %ebp,%ecx
		push   $0x000002
		movswl %ax,%edx
		mov    $_0c0a2c_data,%eax
		jmp    _034ae3_jump

	_03496b_jump:
		cmp    $0x000020,%cl
		jne    _034989_jump
		push   $0x000002
		movswl %bx,%ebx
		movswl %ax,%edx
		mov    %ebp,%ecx
		mov    $_0c0a31_data,%eax
		call   _01a168_func
		jmp    _034ae8_jump

	_034989_jump:
		mov    %esp,%esi
		movswl %bx,%ebx
		cwtl   
		xor    %ecx,%ecx
		dec    %edx
		mov    _0cf43a_data,%cl
		add    %edx,%esi
		push   %ecx
		mov    %eax,%edx
		mov    %ebp,%ecx
		mov    %esi,%eax
		call   _01a168_func
		jmp    _034ae8_jump

	_0349ab_jump:
		mov    %esp,%edi
		mov    %edx,%esi
		push   %edi

	_0349b0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0349c8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0349b0_jump

	_0349c8_jump:
		pop    %edi
		mov    0x000002(%esp),%eax
		mov    $0x001000,%esi
		mov    _0cf1c4_data,%di
		xor    %dl,%dl
		sar    $0x000010,%eax
		mov    %si,_0cf1d0_data
		mov    %dl,(%esp,%eax,1)
		cmp    $0x000200,%di
		jl     _0349f7_jump
		xor    %eax,%eax
		mov    %ax,_0cf1c4_data

	_0349f7_jump:
		mov    _0cf1c4_data,%ax
		inc    %ah
		cwtl   
		call   _05d230_func
		cwtl   
		sar    $0x000007,%eax
		add    $0x000005,%eax
		mov    %eax,%edx
		mov    _0cf1c2_data,%eax
		sar    $0x000010,%eax
		call   _05d230_func
		shl    $0x000003,%eax
		mov    _0cf19a_data,%cx
		mov    %ax,_0cf1d2_data
		mov    0x000010(%esp),%eax
		imul   %ecx,%eax
		mov    _0cf1c4_data,%bx
		add    %edx,%ebx
		mov    _0cf198_data,%dx
		mov    0x000014(%esp),%esi
		add    $0x000017,%edx
		imul   %esi,%edx
		mov    _0cf164_data,%di
		mov    %bx,_0cf1c4_data
		mov    0x000002(%esp),%ebx
		mov    _0cf1b4_data,%cx
		sar    $0x000010,%ebx
		add    %ecx,%edx
		mov    -0x000001(%esp,%ebx,1),%cl
		add    %edi,%eax
		cmp    $0x00007e,%cl
		jne    _034aa7_jump
		mov    _0cf1d0_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		mov    _0cf1ce_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		mov    _0cf1d2_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		sub    $0x00000a,%eax
		mov    %ebp,%ecx
		push   $0x000002
		movswl %dx,%ebx
		movswl %ax,%edx
		mov    $_0c0a2c_data,%eax
		jmp    _034ae3_jump

	_034aa7_jump:
		mov    _0cf1d0_data,%ecx
		inc    %edx
		sar    $0x000010,%ecx
		inc    %eax
		push   %ecx
		mov    _0cf1ce_data,%ecx
		dec    %ebx
		sar    $0x000010,%ecx
		movswl %dx,%edx
		push   %ecx
		mov    _0cf1d2_data,%ecx
		movswl %ax,%esi
		sar    $0x000010,%ecx
		lea    0x000008(%esp),%eax
		push   %ecx
		xor    %ecx,%ecx
		add    %ebx,%eax
		mov    _0cf43a_data,%cl
		mov    %edx,%ebx
		push   %ecx
		mov    %esi,%edx
		mov    %ebp,%ecx

	_034ae3_jump:
		call   _01a3a0_func

	_034ae8_jump:
		mov    0x000010(%esp),%esi
		mov    0x000004(%esp),%edi
		inc    %esi
		inc    %edi
		mov    %esi,0x000010(%esp)
		mov    %di,0x000004(%esp)

	_034afb_jump:
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%edx
		add    $_0cd148_data,%edx
		mov    %edx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		jbe    _03489d_jump
		mov    _0cf19a_data,%ax
		add    $0x00000b,%eax
		imul   $0x000003,%eax,%eax
		add    _0cf164_data,%ax
		sub    $0x00001e,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01ad20_func
		jmp    _034b88_jump

	_034b4c_jump:
		mov    _0cf198_data,%ax
		add    $0x000017,%eax
		imul   %esi,%eax
		mov    $0x000001,%cl
		push   $0x000002
		mov    _0cf1b4_data,%dx
		mov    %cl,_095188_data
		mov    $0x000001,%ecx
		add    %edx,%eax
		mov    _0cf162_data,%edx
		movswl %ax,%ebx
		mov    _0c2ac4_data,%eax
		sar    $0x000010,%edx
		call   _01a168_func

	_034b88_jump:
		incw   0x000014(%esp)

	_034b8d_jump:
		xor    %eax,%eax
		mov    0x000014(%esp),%esi
		mov    _0cf435_data,%al
		cmp    %si,%ax
		jg     _034867_jump
		call   _01b064_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034bb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000024,%esp
		mov    $0x000006,%ecx
		mov    %esp,%edi
		mov    $_034220_func,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		call   _0420e8_func
		call   _036f6c_func
		xor    %eax,%eax
		mov    $0x000064,%ebx
		mov    _0cf43a_data,%al
		mov    %ebx,%edx
		push   %eax
		xor    %ecx,%ecx
		mov    $_0c0a34_data,%eax
		call   _01a168_func
		mov    $0x00000a,%ebx
		mov    _0df14e_data,%eax
		lea    0x000018(%esp),%edx
		sar    $0x000010,%eax
		call   _080a4e_func
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cf43a_data,%al
		mov    $0x000064,%ebx
		push   %eax
		mov    $0x0000c8,%edx
		lea    0x00001c(%esp),%eax
		call   _01a168_func
		call   _041d08_func
		test   %ax,%ax
		je     _034c3b_jump
		cmpw   $0x000000,_0cf2ea_data
		jne    _034c3b_jump
		incw   _0df150_data
		jmp    _034c56_jump

	_034c3b_jump:
		call   _041c98_func
		test   %ax,%ax
		je     _034c56_jump
		cmpw   $0x000000,_0cf2ea_data
		jne    _034c56_jump
		decw   _0df150_data

	_034c56_jump:
		mov    _0cf230_data,%eax
		sar    $0x000010,%eax
		mov    _0df14e_data,%edx
		shl    $0x000002,%eax
		sar    $0x000010,%edx
		cmp    -0x000004(%esp,%eax,1),%edx
		jle    _034c7b_jump
		mov    -0x000004(%esp,%eax,1),%ax
		mov    %ax,_0df150_data

	_034c7b_jump:
		cmpw   $0x000001,_0df150_data
		jge    _034c8e_jump
		movw   $0x000001,_0df150_data

	_034c8e_jump:
		mov    _0cf2ea_data,%dx
		inc    %edx
		mov    %dx,_0cf2ea_data
		cmp    $0x000004,%dx
		jl     _034cac_jump
		xor    %ecx,%ecx
		mov    %cx,_0cf2ea_data

	_034cac_jump:
		call   _041e58_func
		test   %ax,%ax
		jne    _034cd4_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _034cd4_jump
		call   _041f70_func
		test   %ax,%ax
		jne    _034cd4_jump
		call   _041ffc_func
		test   %ax,%ax
		je     _034cd9_jump

	_034cd4_jump:
		mov    $0x000001,%eax

	_034cd9_jump:
		add    $0x000024,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034ce4_func:
		push   %edx
		mov    %ax,_0df150_data
		xor    %edx,%edx
		mov    $_0cd248_data,%eax
		mov    %dx,_0cf2ea_data
		mov    $0x000005,%edx
		call   _047694_func
		mov    $_0c6a38_data,%eax
		call   _03cc18_func
		call   _03c9c0_func
		mov    $_034bb0_func,%eax
		call   _03ca88_func
		call   _03ca10_func
		call   _03cc8c_func
		mov    _0df150_data,%ax
		pop    %edx
		ret    



_034e5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		call   _0673f8_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _01614e_func
		cmpb   $0x000001,_0cf41f_data
		je     _034f5e_jump
		cmpb   $0x000000,_0cc000_data
		je     _034ebf_jump
		mov    _0cc0d0_data,%ebx
		mov    _0cc0ce_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cc0d7_data,%al
		mov    _0cc0d4_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0cc000_data,%eax
		call   _01a168_func

	_034ebf_jump:
		cmpb   $0x000000,_0cbf28_data
		je     _034ef4_jump
		mov    _0cbff8_data,%ebx
		mov    _0cbff6_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cbfff_data,%al
		mov    _0cbffc_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0cbf28_data,%eax
		call   _01a168_func

	_034ef4_jump:
		cmpb   $0x000000,_0cc1b0_data
		je     _034f29_jump
		mov    _0cc280_data,%ebx
		mov    _0cc27e_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cc287_data,%al
		mov    _0cc284_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0cc1b0_data,%eax
		call   _01a168_func

	_034f29_jump:
		cmpb   $0x000000,_0cc0d8_data
		je     _034f5e_jump
		mov    _0cc1a8_data,%ebx
		mov    _0cc1a6_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cc1af_data,%al
		mov    _0cc1ac_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0cc0d8_data,%eax
		call   _01a168_func

	_034f5e_jump:
		cmpb   $0x000000,_0cf41f_data
		je     _035116_jump
		mov    _0cca74_data,%edx
		xor    %ebp,%ebp
		test   %edx,%edx
		jle    _035042_jump
		mov    %ebp,0x000004(%esp)

	_034f7f_jump:
		mov    _0ce8f0_data(%ebp),%ch
		cmp    $0x00002f,%ch
		je     _034f8f_jump
		cmp    $0x000020,%ch
		jne    _034f93_jump

	_034f8f_jump:
		xor    %al,%al
		jmp    _034f9c_jump

	_034f93_jump:
		xor    %eax,%eax
		mov    %ch,%al
		call   _01ebac_func

	_034f9c_jump:
		test   %al,%al
		je     _035028_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    %ebx,%edx
		add    $0x000029,%ebx
		imul   $0x00000c,%ebx,%ebx
		xor    %eax,%eax
		mov    _0cca44_data,%al
		mov    0x000004(%esp),%ecx
		call   _01eae4_func
		mov    _0ce7c0_data,%edx
		mov    _0c20c0_data(%ecx),%ecx
		add    %edx,%ebx
		xor    %edx,%edx
		sar    $0x000004,%ecx
		mov    0x000006(%ebx),%dl
		sub    %edx,%ecx
		movswl %cx,%edx
		mov    %edx,0x00000c(%esp)
		mov    0x000004(%esp),%edx
		mov    _0c22c8_data(%edx),%edx
		sar    $0x000004,%edx
		movswl %dx,%edx
		mov    %edx,0x000008(%esp)
		xor    %dh,%dh
		mov    0x000006(%ebx),%dl
		mov    _0cd154_data,%edi
		shl    $0x000008,%edx
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    _0ce7c4_data,%esi
		mov    %ax,%cx
		mov    (%ebx),%edx
		mov    0x00000c(%esp),%ebx
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x000008(%esp),%eax
		mov    _0cca58_data,%dl
		call   *_0cca8c_data

	_035028_jump:
		mov    0x000004(%esp),%ebx
		mov    _0cca74_data,%ecx
		add    $0x000004,%ebx
		inc    %ebp
		mov    %ebx,0x000004(%esp)
		cmp    %ecx,%ebp
		jl     _034f7f_jump

	_035042_jump:
		mov    _0cca78_data,%esi
		xor    %ebp,%ebp
		test   %esi,%esi
		jle    _035116_jump
		mov    %ebp,(%esp)

	_035055_jump:
		mov    _0ce90e_data(%ebp),%ah
		cmp    $0x00002f,%ah
		je     _035065_jump
		cmp    $0x000020,%ah
		jne    _035069_jump

	_035065_jump:
		xor    %al,%al
		jmp    _035076_jump

	_035069_jump:
		xor    %eax,%eax
		mov    _0ce90e_data(%ebp),%al
		call   _01ebac_func

	_035076_jump:
		test   %al,%al
		je     _0350fe_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    _0cca38_data,%al
		call   _01eae4_func
		mov    %eax,%edx
		imul   $0x00000c,%ebx,%eax
		mov    _0ce0d4_data,%ebx
		add    %ebx,%eax
		mov    (%esp),%ebx
		xor    %ecx,%ecx
		mov    _0c2390_data(%ebx),%ebx
		mov    0x000006(%eax),%cl
		sar    $0x000004,%ebx
		sub    %ecx,%ebx
		movswl %bx,%ebx
		mov    %ebx,0x000008(%esp)
		mov    (%esp),%ebx
		mov    _0c2200_data(%ebx),%ebx
		sar    $0x000004,%ebx
		movswl %bx,%ebx
		mov    %ebx,0x00000c(%esp)
		xor    %bh,%bh
		mov    %cl,%bl
		mov    _0cd154_data,%edi
		shl    $0x000008,%ebx
		xor    %ecx,%ecx
		add    %ebx,%edx
		mov    _0ce0d8_data,%esi
		mov    %dx,%cx
		mov    (%eax),%edx
		mov    0x000008(%esp),%ebx
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x00000c(%esp),%eax
		mov    _0cca3c_data,%dl
		call   *_0cca8c_data

	_0350fe_jump:
		mov    (%esp),%ebx
		mov    _0cca78_data,%ecx
		add    $0x000004,%ebx
		inc    %ebp
		mov    %ebx,(%esp)
		cmp    %ecx,%ebp
		jl     _035055_jump

	_035116_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035120_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		call   _0376e0_func
		cmpb   $0x000000,_0cf43f_data
		je     _035140_jump
		xor    %esi,%esi
		mov    _0cf1ee_data,%si
		add    %edx,%esi

	_035140_jump:
		xor    %dl,%dl
		mov    _0ccae4_data,%edi
		mov    %dl,_095188_data
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    _0ccad8_data,%eax
		mov    %eax,_0cd154_data
		call   _068238_func
		call   _06863c_func
		call   _043dc8_func
		mov    $_0ce044_data,%eax
		call   _018ac8_func
		call   _066b8c_func
		mov    _0ccae4_data,%edx
		push   %edx
		mov    _0cca84_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0ccad8_data,%ebx
		mov    _0cca6c_data,%edi
		push   %ebx
		mov    _0cca84_data,%ebx
		mov    _0cca68_data,%edx
		mov    %eax,%ecx
		mov    %edi,%eax
		call   _042dbc_func
		mov    _0ccae4_data,%eax
		mov    %eax,_0cd154_data
		call   _034e5c_func
		call   _0420e8_func
		call   _01cbc8_func
		call   _036e8c_func
		cmpb   $0x000000,_0cf438_data
		je     _0351f8_jump
		mov    $0x00004d,%eax
		call   _072210_func

	_0351f8_jump:
		mov    _0cf288_data,%dx
		test   %dx,%dx
		jne    _035216_jump
		cmpb   $0x000000,_0cf438_data
		jne    _035216_jump
		call   _026790_func
		test   %al,%al
		je     _03521b_jump

	_035216_jump:
		mov    $0x000001,%edx

	_03521b_jump:
		cmpb   $0x000000,_0cf43f_data
		je     _035239_jump
		mov    %esi,%ebx
		call   _016eb0_func
		test   %ecx,%ecx
		jne    _035239_jump
		call   _068238_func
		call   _06863c_func

	_035239_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035244_func:
		push   %ebx
		push   %edx
		push   %esi
		call   _06af80_func
		call   _03758c_func
		call   _03ca38_func
		xor    %eax,%eax
		mov    _0cf272_data,%al
		xor    %edx,%edx
		call   _058d18_func
		call   _0420e8_func
		mov    _0cf425_data,%ah
		mov    %edx,_0cd2c4_data
		test   %ah,%ah
		jne    _0352ad_jump
		mov    $0x00002f,%edx
		mov    $_0cd248_data,%eax
		call   _047694_func
		mov    _0cd1b0_data,%ax
		mov    $0x000001,%dl
		mov    %ax,_0cf160_data
		mov    _0cf1d8_data,%ax
		mov    %dl,_0cf439_data
		mov    %ax,_0cf158_data
		call   _066ad8_func

	_0352ad_jump:
		mov    $_0c6a38_data,%eax
		call   _03cc18_func
		call   _03c9c0_func
		call   _067e78_func
		cmpw   $0x000000,_0cf22c_data
		jne    _03531e_jump
		cmpw   $0x000000,_0cf22a_data
		jne    _03531e_jump
		mov    _0cf266_data,%eax
		mov    _0cf258_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0cf25a_data,%edx
		mov    %ax,_0cf2ae_data
		mov    _0cf264_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,_0cf2b0_data
		call   _042fd8_func

	_03531e_jump:
		cmpb   $0x000000,_0cf425_data
		jne    _035336_jump
		call   _036230_func
		mov    $_035120_func,%eax
		call   _03ca88_func

	_035336_jump:
		cmpb   $0x000000,_0cf41e_data
		je     _035370_jump
		cmpw   $0x000003,_0cf232_data
		jle    _035370_jump
		mov    $0x000001,%bh
		mov    $0x000001,%esi
		mov    %bh,_0cf46b_data
		mov    %si,_0cf288_data
		mov    %si,_0cf272_data
		mov    %bh,_0cf46d_data
		mov    %bh,_0cf438_data

	_035370_jump:
		cmpb   $0x000000,_0cf438_data
		je     _0353ca_jump
		movb   $0x000001,_0cf46d_data
		xor    %eax,%eax
		mov    %ax,_0cf1a6_data
		mov    _0cf232_data,%al
		mov    $0x000004,%dl
		mov    %al,_0cf44f_data
		mov    _0cf282_data,%ax
		mov    %dl,_0cf429_data
		mov    %ax,_0cf232_data
		mov    _0cf270_data,%ax
		xor    %edx,%edx
		mov    %ax,_0cf224_data
		mov    $0x00004d,%eax
		mov    %dx,_0cf282_data
		call   _072210_func
		jmp    _035453_jump

	_0353ca_jump:
		xor    %edx,%edx

	_0353cc_jump:
		call   _041e58_func
		test   %ax,%ax
		jne    _0353f4_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _0353f4_jump
		call   _041f70_func
		test   %ax,%ax
		jne    _0353f4_jump
		call   _041ffc_func
		test   %ax,%ax
		je     _035403_jump

	_0353f4_jump:
		cmp    _0cf425_data,%dl
		jne    _035403_jump
		call   _0420e8_func
		jmp    _0353cc_jump

	_035403_jump:
		call   _06879c_func
		call   _026790_func
		test   %al,%al
		jne    _035436_jump
		cmpb   $0x000000,_0cf452_data
		je     _035436_jump
		cmpb   $0x000000,_0cf425_data
		jne    _035436_jump
		mov    _0cf222_data,%eax
		sar    $0x000010,%eax
		call   _034ce4_func
		mov    %ax,_0cf224_data

	_035436_jump:
		cmpb   $0x000000,_0cf425_data
		jne    _035453_jump
		mov    $0x000045,%eax
		call   _072210_func
		mov    $0x000005,%eax
		call   _03da44_func

	_035453_jump:
		call   _068730_func
		call   _01cc5c_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_035464_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		mov    _0cf449_data,%bl
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		mov    _0cbf28_data(%eax),%cl
		mov    %eax,%edx
		test   %cl,%cl
		je     _0354b5_jump

	_03548c_jump:
		xor    %eax,%eax
		mov    _0cf449_data,%al
		inc    %eax
		cmp    %eax,%ebx
		ja     _0354b5_jump
		mov    $_0cbf28_data,%eax
		add    %edx,%eax
		inc    %ebx
		call   _01a820_func
		mov    _0cc000_data(%edx),%ch
		add    $0x0000d8,%edx
		test   %ch,%ch
		jne    _03548c_jump

	_0354b5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0354bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _0420e8_func
		call   _03cd2c_func
		call   _035464_func
		mov    _0cf216_data,%dx
		inc    %edx
		mov    %dx,_0cf216_data
		cmp    $0x00003c,%dx
		jne    _0354fc_jump
		mov    _0cf218_data,%si
		xor    %ecx,%ecx
		dec    %esi
		mov    %cx,_0cf216_data
		mov    %si,_0cf218_data

	_0354fc_jump:
		call   _0373f0_func
		test   %al,%al
		jne    _03550e_jump
		call   _037438_func
		test   %al,%al
		je     _035518_jump

	_03550e_jump:
		cmpw   $0x000003,_0cf218_data
		jle    _035522_jump

	_035518_jump:
		cmpw   $0x000000,_0cf218_data
		jg     _035529_jump

	_035522_jump:
		mov    $0x000001,%eax
		jmp    _03552b_jump

	_035529_jump:
		xor    %eax,%eax

	_03552b_jump:
		mov    %eax,%ebx
		test   %ax,%ax
		je     _035578_jump
		xor    %edx,%edx
		mov    _0cf449_data,%dl
		add    $0x000002,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0cbf28_data(,%eax,8)
		jne    _03555e_jump
		movb   $0x00000a,_0cf449_data
		jmp    _035578_jump

	_03555e_jump:
		movw   $0x000005,_0cf218_data
		mov    _0cf449_data,%dh
		add    $0x000002,%dh
		xor    %ebx,%ebx
		mov    %dh,_0cf449_data

	_035578_jump:
		test   %bx,%bx
		je     _035590_jump
		cmpb   $0x00000a,_0cf449_data
		jne    _035590_jump
		mov    $0x000001,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_035590_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035598_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		call   _0729e8_func
		mov    $0x000001,%edx
		lea    0x000004(%esp),%ecx
		xor    %ebx,%ebx
		mov    %dx,_0cf13a_data
		mov    %bx,_0cf138_data
		call   _03ca10_func
		mov    %esp,%edx
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%eax
		call   _016111_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _01614e_func
		xor    %ah,%ah
		mov    %ah,_0cf433_data
		mov    $_0c5238_data,%eax
		call   _03cc18_func
		call   _03ccbc_func
		mov    _095de4_data,%dl
		xor    %esi,%esi
		cmp    $0x000001,%dl
		jne    _035619_jump
		xor    %eax,%eax
		mov    _0cf43c_data,%al
		mov    $0x000001,%esi
		call   _03d90c_func

	_035619_jump:
		call   _03c9c0_func
		call   _069f54_func
		cmpb   $0x000000,_0cf410_data
		je     _03563c_jump
		cmpb   $0x000000,_0cf428_data
		jne    _03563c_jump
		xor    %eax,%eax
		call   _072a4c_jump

	_03563c_jump:
		mov    $_0354bc_func,%eax
		call   _03ca88_func
		cmpb   $0x000000,_0cf410_data
		je     _03565d_jump
		cmpb   $0x000000,_0cf428_data
		jne    _03565d_jump
		call   _03eec4_func

	_03565d_jump:
		call   _03ca10_func
		xor    %ch,%ch
		call   _03ca38_func
		mov    %ch,_0cf431_data
		mov    %ch,_0cf438_data
		test   %esi,%esi
		je     _035685_jump
		xor    %eax,%eax
		mov    _0cf43c_data,%al
		call   _03d7e0_func

	_035685_jump:
		call   _03cc8c_func
		call   _03cd0c_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _01614e_func
		call   _03c9c0_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0356b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		movzbl _0cf427_data,%edi
		lea    0x000000(,%edi,4),%esi
		sub    %edi,%esi
		shl    $0x000002,%esi
		jmp    _0356fc_jump

	_0356ca_jump:
		mov    _0ccaf4_data(%esi),%ebx
		mov    _0ccaf2_data(%esi),%edx
		add    $0x00000c,%esi
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		mov    _0ccaee_data(%esi),%al
		mov    _0ccaec_data(%esi),%cl
		push   %eax
		mov    _0ccae4_data(%esi),%eax
		inc    %edi
		call   _01a168_func

	_0356fc_jump:
		xor    %eax,%eax
		mov    _0cf42c_data,%al
		cmp    %eax,%edi
		jbe    _0356ca_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035710_func:
		push   %edx
		call   _0420e8_func
		call   _01cb20_func
		call   _06a35c_func
		call   _03cd2c_func
		call   _0356b0_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    _0cf438_data,%dl
		mov    %ah,_0cf438_data
		call   _0373f0_func
		test   %al,%al
		jne    _03574c_jump
		call   _037514_func
		test   %al,%al
		je     _03575a_jump

	_03574c_jump:
		movb   $0x000001,_0cf438_data
		movb   $0x000007,_0cf433_data

	_03575a_jump:
		cmpb   $0x000000,_0cf438_data
		jne    _035768_jump
		test   %dx,%dx
		je     _03576f_jump

	_035768_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_03576f_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_0357ac_func:
		push   %edx
		call   _01cc5c_func
		call   _06a2a8_func
		cmpb   $0x000007,_0cf433_data
		ja     _035811_jump

	_0357c0_jump:
		xor    %eax,%eax
		mov    _0cf433_data,%al
		imul   $0x000300,%eax,%eax
		add    $_0c5238_data,%eax
		call   _03cc18_func
		call   _03ccbc_func
		call   _03c9c0_func
		mov    $_035710_func,%eax
		xor    %dl,%dl
		call   _03ca88_func
		call   _03ca10_func
		mov    %dl,_0cf438_data
		incb   _0cf433_data
		call   _03cc8c_func
		call   _03cd0c_func
		cmpb   $0x000007,_0cf433_data
		jbe    _0357c0_jump

	_035811_jump:
		call   _01cc5c_func
		call   _03c9c0_func
		pop    %edx
		ret    



_035820_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf433_data,%bh
		call   _01cc5c_func
		mov    $_0c7638_data,%eax
		mov    $0x000001,%bl
		call   _03cc18_func
		call   _06a2a8_func
		mov    _0cf433_data,%bh
		xor    %edx,%edx
		cmp    $0x000007,%bh
		ja     _0358aa_jump
		xor    %ecx,%ecx

	_03584e_jump:
		call   _016ecb_func
		call   _016ded_func
		call   _016ddd_func
		cmp    _0cf43f_data,%cl
		je     _03586c_jump
		call   _016e50_func
		mov    %eax,%edx

	_03586c_jump:
		test   %bl,%bl
		je     _035880_jump
		call   _03c998_func
		cmp    _0cf2d0_data,%cx
		jne    _035880_jump
		mov    %cl,%bl

	_035880_jump:
		call   _03b3e0_func
		mov    %edx,%eax
		call   _035710_func
		test   %ax,%ax
		je     _03584e_jump
		mov    _0cf433_data,%bh
		inc    %bh
		mov    %cl,_0cf438_data
		mov    %bh,_0cf433_data
		cmp    $0x000007,%bh
		jbe    _03584e_jump

	_0358aa_jump:
		call   _03ca10_func
		call   _03cc8c_func
		call   _01cc5c_func
		call   _03c9c0_func
		mov    _0cf433_data,%bh
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0358c8_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		mov    $0x000004,%ebx
		mov    %ah,_0cf433_data
		mov    $_0c5238_data,%eax
		xor    %edx,%edx
		call   _03cc18_func
		call   _03ccbc_func
		call   _03c9c0_func
		mov    %dx,_0cf216_data
		xor    %dl,%dl
		mov    %bx,_0cf218_data
		mov    %dl,_0cf449_data
		call   _01eb78_func
		mov    $_0354bc_func,%eax
		mov    $_0cd248_data,%edx
		call   _03ca88_func
		mov    $_0cd274_data,%eax
		call   _03690c_func
		call   _03ca10_func
		call   _03cc8c_func
		call   _03cd0c_func
		pop    %edx
		pop    %ebx
		ret    



_03595c_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0cf432_data,%ah
		mov    %edx,_0ce0cc_data
		mov    %edx,_0ce0c8_data
		test   %ah,%ah
		je     _0359e8_jump
		cmpw   $0x000001,_0cf224_data
		jle    _0359a8_jump
		cmpb   $0x000046,_095e24_data
		je     _0359a8_jump
		mov    _0cf428_data,%bl
		add    $0x000017,%bl
		mov    $_0c0a3c_data,%edx
		mov    $_0cc98c_data,%eax
		and    $_0000ff_case,%ebx
		call   _03b3b0_func

	_0359a8_jump:
		mov    $0x000004,%ebx
		mov    $0x000006,%ecx
		mov    $_0cd248_data,%eax
		mov    %bx,_0cf270_data
		mov    %cx,_0cf282_data
		call   _07f424_func
		mov    $_0cd274_data,%eax
		call   _07f410_func
		mov    $_0cd248_data,%eax
		call   _036878_func
		call   _0358c8_func
		call   _0357ac_func

	_0359e8_jump:
		xor    %dh,%dh
		mov    %dh,_0cf438_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0359f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _03ca10_func
		cmpb   $0x000001,_095de5_data
		jne    _035a25_jump
		mov    _0cf15c_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		cmpw   $0x000005,_095dc8_data(%eax)
		jne    _035a25_jump
		cmpw   $0x00000a,_095dd4_data(%eax)
		je     _035a56_jump

	_035a25_jump:
		cmpb   $0x000000,_095de5_data
		jne    _035a72_jump
		cmpw   $0x000000,_095e22_data
		je     _035a72_jump
		mov    _0cf15c_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		cmpw   $0x000001,_095dc8_data(%eax)
		jne    _035a72_jump
		cmpw   $0x000009,_095dd4_data(%eax)
		jne    _035a72_jump

	_035a56_jump:
		mov    _0cf15e_data,%ax
		inc    %eax
		mov    %ax,_0cf15e_data
		cmp    $0x000006,%ax
		jne    _035a72_jump
		xor    %ebx,%ebx
		mov    %bx,_0cf15e_data

	_035a72_jump:
		mov    $0x000001,%dh
		mov    _0cf220_data,%ax
		mov    _0cf220_data,%bl
		mov    %dh,_0cf425_data
		mov    %ax,_0cf156_data
		or     $0x00000f,%bl
		mov    _0cf15c_data,%eax
		mov    %bl,_0cf220_data
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    %bl,%bh
		add    %eax,%eax
		mov    %edx,_0ccae0_data
		and    $0x0000cf,%bh
		mov    _095dc8_data(%eax),%cx
		mov    %bh,_0cf220_data
		cmp    $0x000001,%cx
		jne    _035ad6_jump
		cmpw   $0x000009,_095dd4_data(%eax)
		jne    _035ad6_jump
		mov    %bh,%ch
		or     $0x000040,%ch
		mov    %ch,_0cf220_data
		jmp    _035add_jump

	_035ad6_jump:
		andb   $0x0000bf,_0cf220_data

	_035add_jump:
		orb    $0x000080,_0cf220_data
		mov    _0cf221_data,%ah
		or     $0x000001,%ah
		mov    %ah,%dl
		mov    %ah,_0cf221_data
		and    $0x0000fd,%dl
		mov    _0cf282_data,%di
		mov    %dl,_0cf221_data
		cmp    $0x000005,%di
		jne    _035b22_jump
		cmpw   $0x000004,_0cf270_data
		jne    _035b22_jump
		mov    %dl,%bl
		or     $0x000004,%bl
		mov    %bl,_0cf221_data
		jmp    _035b29_jump

	_035b22_jump:
		andb   $0x0000fb,_0cf221_data

	_035b29_jump:
		mov    $0x000008,%ecx
		mov    $_0c3f38_data,%edi
		mov    $_0c3f58_data,%esi
		mov    $0x000001,%edx
		mov    _0cf221_data,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		and    $0x000087,%bh
		mov    $0x000002,%ecx
		mov    %bh,_0cf221_data
		mov    %dx,_0c3f68_data
		mov    %cx,_0c3f6e_data
		xor    %ebx,%ebx
		mov    %cx,_0c3f6c_data
		mov    %bx,_0c3f6a_data
		call   _041a10_func
		mov    _0cf229_data,%cl
		mov    %dx,_0cf288_data
		mov    %dx,_0cf272_data
		mov    %bx,_0cf282_data
		mov    %bx,_0cf270_data
		xor    %ah,%ah
		mov    _0cf15c_data,%edx
		or     $0x00000a,%cl
		mov    %ah,_0ce950_data
		mov    %cl,_0cf229_data
		sar    $0x000010,%edx
		mov    $0x000002,%ch
		mov    _095dc8_data(,%edx,2),%bx
		mov    _095dba_data(,%edx,2),%eax
		mov    %bx,_0cf232_data
		mov    %ch,_0ce0ba_data
		mov    %ch,_0ce953_data
		sar    $0x000010,%eax
		mov    $0x000003,%ecx
		mov    _095dd4_data(,%edx,2),%bx
		mov    %eax,_0ca8bc_data
		mov    %bx,_0cf224_data
		mov    %edx,%eax
		mov    $0x000001,%bl
		shl    $0x000005,%eax
		mov    %bl,_0ce170_data
		mov    %bl,_0ca8c5_data
		sub    %edx,%eax
		xor    %ebx,%ebx
		shl    $0x000002,%eax
		mov    %ebx,_0ca8b0_data
		add    %edx,%eax
		mov    $_0957e0_data,%edx
		add    %eax,%eax
		mov    $0x000a20,%ebx
		add    %eax,%edx
		mov    $_0cb508_data,%eax
		mov    %edx,_0ca8c0_data
		xor    %edx,%edx
		mov    %cx,_0ce94a_data
		call   _07fcc0_func
		mov    _0cf230_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %cl,%cl
		mov    %cl,_094d1d_data(,%eax,4)
		call   _054850_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035c64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _03ca10_func
		mov    _0ca8b8_data,%eax
		cmp    _0ca8b4_data,%eax
		jne    _035c86_jump
		movw   $0x0000b4,_0cf15c_data
		jmp    _035c8f_jump

	_035c86_jump:
		movw   $0x000708,_0cf15c_data

	_035c8f_jump:
		xor    %ah,%ah
		xor    %ebx,%ebx
		xor    %dl,%dl
		xor    %ecx,%ecx
		xor    %esi,%esi
		xor    %edi,%edi
		mov    %ah,_0cf425_data
		mov    %ebx,_0ccae0_data
		xor    %ebx,%ecx
		xor    %ebx,%esi
		mov    $0x000001,%eax
		xor    %ebx,%edi
		call   _058d18_func
		mov    _0cf156_data,%ax
		mov    %dl,_0ca8c5_data
		mov    %ebx,_0ca8b0_data
		mov    %ebx,_0ca8bc_data
		mov    %ebx,_0ca8c0_data
		mov    %cx,_0cf288_data
		mov    %si,_0cf272_data
		mov    %di,_0cf282_data
		mov    $0x000008,%ecx
		mov    $_0c3f58_data,%edi
		mov    $_0c3f38_data,%esi
		xor    %dh,%dh
		mov    %ax,_0cf220_data
		mov    %dx,_0cf232_data
		xor    %eax,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0cf229_data,%dh
		mov    %ax,_0cf270_data
		and    $0x0000f5,%dh
		mov    %ax,_0cf224_data
		mov    %dh,_0cf229_data
		call   _041a10_func
		mov    _0cf15e_data,%cx
		inc    %ecx
		mov    %cx,_0cf15e_data
		cmp    $0x000006,%cx
		jne    _035d4a_jump
		xor    %edi,%edi
		mov    %di,_0cf15e_data

	_035d4a_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035d50_func:
		call   _0420e8_func
		call   _0373f0_func
		test   %al,%al
		jne    _035d67_jump
		call   _037438_func
		test   %al,%al
		je     _035d6e_jump

	_035d67_jump:
		movb   $0x000001,_0cf438_data

	_035d6e_jump:
		mov    $0x000001,%eax
		call   _054868_func
		call   _01cbc8_func
		call   _03cd2c_func
		mov    $_0ce178_data,%eax
		call   _018ac8_func
		call   _06a5c4_func
		cmpb   $0x000000,_0cf438_data
		je     _035daa_jump
		cmpw   $0x000000,_0cf2d0_data
		jne    _035daa_jump
		mov    $0x000001,%eax
		ret    

	_035daa_jump:
		xor    %eax,%eax
		ret    



_035db0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $_0cd29c_data,%eax
		mov    $_0169f1_func,%edx
		mov    $_016adc_func,%ebx
		call   _0373e4_func
		mov    $_0cd29c_data,%eax
		mov    $_016978_jump,%ecx
		call   _0366c0_func
		mov    $_0c7638_data,%eax
		mov    $_016a5c_jump,%esi
		call   _03cc18_func
		call   _01cbb0_func
		call   _03c9c0_func
		call   _06a558_func
		mov    $_035d50_func,%eax
		mov    %edx,_0cca9c_data
		mov    %ebx,_0ccab0_data
		call   _03ca88_func
		mov    %ecx,_0cca9c_data
		mov    %esi,_0ccab0_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035e1c_func:
		call   _03ca10_func
		jmp    _03cc8c_func



_035e28_func:
		push   %edx
		mov    $_041a00_switch,%edx
		mov    $_0cd29c_data,%eax
		call   _07f050_func
		call   _035db0_func
		mov    $_0cd29c_data,%eax
		call   _07f35c_func
		xor    %ah,%ah
		mov    %ah,_0cf438_data
		call   _046294_func
		call   _035e1c_func
		pop    %edx
		ret    



_035e5c_func:
		push   %edx
		cmpb   $0x000001,_0cf46d_data
		je     _035e94_jump
		call   _06a8fc_func
		mov    _0cf438_data,%dl
		test   %dl,%dl
		jne    _035e94_jump
		call   _01cc5c_func
		call   _03c9c0_func
		mov    $_034238_jump,%eax
		call   _03ca88_func
		call   _06ada0_func
		mov    %dl,_0cf438_data

	_035e94_jump:
		pop    %edx
		ret    



_036030_func:
		and    (%eax),%al
		add    %al,(%eax)
		adc    %al,(%eax)
		add    %al,(%eax)
		or     $0x44000000,%eax
		add    %al,(%eax)
		add    %cl,(%esi)
		add    %al,(%eax)
		add    %bh,(%edi)
		add    %al,(%eax)
		add    %dl,(%edx)
		add    %al,(%eax)
		add    %cl,(%edi)
		add    %al,(%eax)


_036050_func:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %dl,0x000051(%ebx)
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    $0x000fa0,%eax
		call   _07f158_func
		xor    %edi,%edi
		mov    %eax,(%esp)
		test   %eax,%eax
		je     _036170_jump
		mov    (%esp),%esi
		xor    %edx,%edx

	_036075_jump:
		xor    %eax,%eax

	_036077_jump:
		inc    %eax
		cmp    $0x0001f4,%ax
		jl     _036077_jump
		movswl %dx,%ebx
		shl    $0x000002,%ebx
		add    %esi,%ebx
		call   _016e50_func
		inc    %edx
		mov    %eax,(%ebx)
		cmp    $0x0003e8,%dx
		jl     _036075_jump
		mov    $0x000f9c,%eax
		call   _07f158_func
		mov    %eax,%ebp
		test   %eax,%eax
		je     _036168_jump
		movb   $0x000001,0x000008(%esp)
		xor    %eax,%eax

	_0360b0_jump:
		movswl %ax,%ebx
		mov    (%esp),%ecx
		shl    $0x000002,%ebx
		mov    0x000004(%ecx,%ebx,1),%edx
		mov    (%ecx,%ebx,1),%esi
		mov    %edx,%ecx
		lea    (%ebx,%ebp,1),%edx
		sub    %esi,%ecx
		mov    %ecx,(%edx)
		test   %ecx,%ecx
		jg     _0360d5_jump
		xor    %dl,%dl
		mov    %dl,0x000008(%esp)
		jmp    _0360de_jump

	_0360d5_jump:
		inc    %eax
		add    %ecx,%edi
		cmp    $0x0003e7,%ax
		jl     _0360b0_jump

	_0360de_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _036152_jump
		mov    $0x0003e7,%ebx
		mov    %edi,%edx
		mov    %edi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edi
		lea    0x000000(,%eax,4),%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %edi,%edx
		shl    $0x000002,%edx
		sub    %edi,%edx
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		xor    %esi,%esi
		mov    %eax,%edx

	_036124_jump:
		mov    0x000004(%esp),%ecx
		movswl %si,%eax
		mov    %edx,%ebx
		mov    0x000000(%ebp,%eax,4),%eax
		cmp    %ebx,%eax
		jl     _036140_jump
		cmp    %ecx,%eax
		jg     _036140_jump
		mov    $0x000001,%eax
		jmp    _036142_jump

	_036140_jump:
		xor    %eax,%eax

	_036142_jump:
		test   %eax,%eax
		jne    _03614a_jump
		incb   0x000008(%esp)

	_03614a_jump:
		inc    %esi
		cmp    $0x0003e7,%si
		jl     _036124_jump

	_036152_jump:
		mov    0x000008(%esp),%bh
		cmp    $0x00000a,%bh
		setb   %al
		mov    %al,_0cf43f_data
		mov    %ebp,%eax
		call   _07f2f0_func

	_036168_jump:
		mov    (%esp),%eax
		call   _07f2f0_func

	_036170_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03617c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cf43f_data
		je     _036229_jump
		call   _016ded_func
		call   _016e50_func
		lea    0x000bb8(%eax),%ebx
		call   _016eb0_func
		call   _016ddd_func
		call   _016e50_func
		xor    %esi,%esi
		mov    %eax,%edi
		jmp    _0361ce_jump

	_0361b3_jump:
		call   _016ded_func
		call   _016e50_func
		lea    0x000bb8(%eax),%ebx
		call   _016eb0_func
		call   _016ddd_func
		inc    %esi

	_0361ce_jump:
		xor    %edx,%edx
		mov    _0cf43c_data,%dl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %si,%edx
		cmp    %eax,%edx
		jl     _0361b3_jump
		call   _016e50_func
		movswl %si,%ebx
		sub    %edi,%eax
		xor    %edx,%edx
		div    %ebx
		xor    %edx,%edx
		mov    %ax,%dx
		mov    %ax,_0cf1f0_data
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shr    $0x000005,%eax
		mov    %ax,_0cf1ee_data
		mov    %edx,%eax
		mov    _0cf1dc_data,%dx
		imul   %eax,%edx
		mov    _0cf1ee_data,%ax
		add    %edx,%eax
		mov    %ax,_0cf1e8_data

	_036229_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036230_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000008,%esp
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,0x000004(%esp)
		mov    %ah,(%esp)
		xor    %dh,%dh
		cli    
		mov    %dx,_0cf1dc_data
		call   _016ecb_func
		call   _036050_func
		cmpb   $0x000000,_0cf43f_data
		je     _036302_jump

	_036263_jump:
		cmpb   $0x000000,0x000004(%esp)
		jne    _036302_jump
		call   _03617c_func
		call   _016ded_func
		call   _016e50_func
		lea    0x000bb8(%eax),%ebx
		call   _016eb0_func
		call   _016ddd_func
		xor    %ebx,%ebx
		call   _016e50_func
		mov    _0cf1ee_data,%bx
		xor    %edx,%edx
		add    %eax,%ebx
		mov    %eax,%esi
		call   _016eb0_func
		call   _016ddd_func
		call   _016e50_func
		mov    _0cf1f0_data,%dx
		imul   $0x000065,%edx,%edx
		mov    $0x000064,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		sub    %esi,%ebx
		cmp    %eax,%ebx
		jae    _0362d5_jump
		movb   $0x000001,0x000004(%esp)
		jmp    _0362d8_jump

	_0362d5_jump:
		incb   (%esp)

	_0362d8_jump:
		cmpb   $0x000002,(%esp)
		jbe    _036263_jump
		call   _04e8bc_func
		cmp    $0x0000be,%ax
		setle  %al
		xor    %ah,%ah
		mov    %ax,_0cf1dc_data
		mov    %ah,_0cf43f_data
		movb   $0x000001,0x000004(%esp)
		jmp    _036263_jump

	_036302_jump:
		sti    
		add    $0x000008,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03630c_func:
		push   %ebx
		push   %edx
		mov    _0cd260_data,%eax
		call   _07efe8_func
		call   _03d8fc_func
		xor    %ah,%ah
		mov    %ah,_0cf43d_data
		mov    %ah,_0ca8c4_data
		mov    %ah,_0ca8c5_data
		mov    %ah,_0cf453_data
		call   _042734_func
		mov    $0x000003,%eax
		call   _0420e0_func
		mov    $0x00fa40,%eax
		call   _07f434_func
		mov    %eax,_0ccae4_data
		mov    $0x01f400,%eax
		call   _07f434_func
		mov    _0ccae4_data,%edx
		mov    %eax,_0ccad8_data
		test   %edx,%edx
		je     _036372_jump
		test   %eax,%eax
		jne    _03637c_jump

	_036372_jump:
		mov    $_0c0a48_data,%eax
		call   _01f474_func

	_03637c_jump:
		call   _042e64_func
		mov    _095e24_data,%bh
		cmp    $0x000046,%bh
		je     _036395_jump
		movb   $0x00003c,_0cf43c_data
		jmp    _03639b_jump

	_036395_jump:
		mov    %bh,_0cf43c_data

	_03639b_jump:
		xor    %eax,%eax
		mov    _0cf43c_data,%al
		call   _03d90c_func
		mov    $0x000001,%al
		xor    %edx,%edx
		mov    %al,_0cf442_data
		call   _016dfd_func
		call   _036050_func
		mov    %dx,_0cf2e8_data
		pop    %edx
		pop    %ebx

	_0363c3_jump:
		ret    



_0363c4_func:
		cmpb   $0x000000,_0cf46d_data
		jne    _0363c3_jump
		movb   $_0000ff_case,(%eax)
		call   _0420e8_func
		cmpl   $0x000000,_0ca8b0_data
		jne    _0363c3_jump
		cmpb   $0x000000,_0ca8c5_data
		jne    _0363f0_jump
		cmpb   $0x000000,_0ca8c4_data
		je     _0363c3_jump

	_0363f0_jump:
		mov    $_0ca8b0_data,%eax
		jmp    _042434_func



_0363fc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%ebp
		mov    $0x00000a,%ebx
		mov    %esp,%esi
		mov    _0c0a68_data,%edx
		cwtl   
		mov    %edx,0x000000(%ebp)
		mov    %esp,%edx
		mov    %ebp,%edi
		call   _080ad8_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_036429_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _036441_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _036429_jump

	_036441_jump:
		pop    %edi
		mov    $_0c0a6c_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_036450_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _036468_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _036450_jump

	_036468_jump:
		pop    %edi
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_036474_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%ebp
		mov    $0x00000a,%ebx
		mov    %esp,%esi
		mov    _0c0a68_data,%edx
		cwtl   
		mov    %edx,0x000000(%ebp)
		mov    %esp,%edx
		mov    %ebp,%edi
		call   _080ad8_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0364a1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0364b9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0364a1_jump

	_0364b9_jump:
		pop    %edi
		mov    $_0c0a74_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0364c8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0364e0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0364c8_jump

	_0364e0_jump:
		pop    %edi
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0364ec_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000308,%esp
		mov    %eax,%ebx
		mov    _0cd1c4_data,%esi
		mov    $0x000300,%ecx
		mov    %esi,0x000304(%esp)
		mov    _0cd1c8_data,%esi
		mov    %esp,%edi
		mov    %esi,0x000300(%esp)
		mov    $_0c6a38_data,%esi
		mov    _0cd1e0_data,%ebp
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %ebx,%eax
		call   _047694_func
		mov    _0cd1e0_data,%edx
		mov    $0x000300,%ecx
		mov    %edx,_0cd1e4_data
		mov    _0cd1c4_data,%edx
		mov    $_0c6a38_data,%esi
		mov    %edx,_0cd1d8_data
		mov    _0cd1c8_data,%edx
		mov    $_0c7638_data,%edi
		mov    %edx,_0cd1b8_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    0x000304(%esp),%edx
		mov    $0x000300,%ecx
		mov    %esp,%esi
		mov    $_0c6a38_data,%edi
		mov    %edx,_0cd1c4_data
		mov    0x000300(%esp),%edx
		mov    %ebp,_0cd1e0_data
		mov    %edx,_0cd1c8_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x000308,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_03661c_switch:
		.long   _03665d_case
		.long   _03666b_case
		.long   _036679_case
		.long   _036687_case
		.long   _036695_case
		.long   _0366a3_case




_036634_func:
		push   %ebx
		mov    %eax,%ebx
		call   _026790_func
		test   %al,%al
		je     _036647_jump
		mov    $0x000038,%edx
		jmp    _0366b6_jump

	_036647_jump:
		mov    %edx,%eax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _0366b1_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_03661c_switch(,%eax,4)

	_03665d_case:
		mov    $0x000021,%edx
		mov    %ebx,%eax
		call   _0364ec_func
		pop    %ebx
		ret    

	_03666b_case:
		mov    $0x000019,%edx
		mov    %ebx,%eax
		call   _0364ec_func
		pop    %ebx
		ret    

	_036679_case:
		mov    $0x000018,%edx
		mov    %ebx,%eax
		call   _0364ec_func
		pop    %ebx
		ret    

	_036687_case:
		mov    $0x000017,%edx
		mov    %ebx,%eax
		call   _0364ec_func
		pop    %ebx
		ret    

	_036695_case:
		mov    $0x000013,%edx
		mov    %ebx,%eax
		call   _0364ec_func
		pop    %ebx
		ret    

	_0366a3_case:
		mov    $0x00001b,%edx
		mov    %ebx,%eax
		call   _0364ec_func
		pop    %ebx
		ret    

	_0366b1_jump:
		mov    $0x000011,%edx

	_0366b6_jump:
		mov    %ebx,%eax
		call   _0364ec_func
		pop    %ebx
		ret    



_0366c0_func:
		push   %edx
		xor    %edx,%edx
		call   _0364ec_func
		pop    %edx
		ret    



_0366cc_func:
		push   %edx
		mov    $0x000007,%edx
		call   _0364ec_func
		pop    %edx
		ret    



_0366dc_func:
		push   %edx
		mov    $0x00001a,%edx
		call   _0364ec_func
		pop    %edx
		ret    



_0366ec_func:
		push   %ecx
		push   %edx
		mov    $0x00000c,%edx
		call   _0364ec_func
		mov    _0cf419_data,%dl
		sub    $0x000041,%dl
		inc    %dl
		jmp    _03670b_jump

	_03670b_jump:
		mov    $0x003600,%eax
		int    $0x000021
		cmp    $0x00ffff,%ax
		je     _036720_jump
		cmp    $0x000000,%bx
		nop
		nop
		jmp    _036727_jump

	_036720_jump:
		mov    $0x004c00,%eax
		int    $0x000021

	_036727_jump:
		jmp    _03672f_jump

	_03672f_jump:
		pop    %edx
		pop    %ecx
		ret    



_036734_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   $0x000089
		mov    _0cd154_data,%edi
		mov    _0cd1e4_data,%esi
		push   $0x000140
		xor    %edx,%edx
		xor    %ecx,%ecx
		push   $0x000140
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   _014b78_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036768_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00030c,%esp
		mov    %eax,%ebp
		mov    _0cd1e0_data,%eax
		mov    $0x000300,%ecx
		mov    %eax,0x000308(%esp)
		mov    _0cd1c4_data,%eax
		mov    $_0c6a38_data,%esi
		mov    %eax,0x000304(%esp)
		mov    _0cd1c8_data,%eax
		mov    %esp,%edi
		mov    %eax,0x000300(%esp)
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_0c5238_data,%edi
		mov    %ebp,%eax
		mov    $0x000300,%ecx
		call   _047694_func
		movswl %bx,%edx
		mov    _0cd1e0_data,%esi
		lea    0x000000(,%edx,4),%eax
		mov    %esi,_0cd170_data(,%edx,4)
		sub    %edx,%eax
		mov    _0cd1c4_data,%esi
		shl    $0x000008,%eax
		mov    %esi,_0cd18c_data(,%edx,4)
		mov    _0cd1c8_data,%esi
		add    %eax,%edi
		mov    %esi,_0cd1ec_data(,%edx,4)
		mov    $_0c6a38_data,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    0x000308(%esp),%eax
		mov    $0x000300,%ecx
		mov    %eax,_0cd1e0_data
		mov    0x000304(%esp),%eax
		mov    %esp,%esi
		mov    %eax,_0cd1c4_data
		mov    0x000300(%esp),%eax
		mov    $_0c6a38_data,%edi
		mov    %eax,_0cd1c8_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x00030c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_036860_switch:
		.long   _0368a3_case
		.long   _0368ed_case
		.long   _0368b0_case
		.long   _0368bd_case
		.long   _0368ca_case
		.long   _0368e2_case




_036878_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf270_data,%cx
		mov    _0cf282_data,%bx
		dec    %ebx
		mov    $0xffffffff,%edx
		cmp    $0x000005,%bx
		ja     _0368ed_case
		and    $0x00ffff,%ebx
		jmp    *%cs:_036860_switch(,%ebx,4)

	_0368a3_case:
		cmp    $0x000009,%cx
		jne    _0368ed_case
		mov    $0x000020,%edx
		jmp    _0368ed_case

	_0368b0_case:
		cmp    $0x000006,%cx
		jne    _0368ed_case
		mov    $0x00001c,%edx
		jmp    _0368ed_case

	_0368bd_case:
		cmp    $0x00000b,%cx
		jne    _0368ed_case
		mov    $0x000015,%edx
		jmp    _0368ed_case

	_0368ca_case:
		cmp    $0x000003,%cx
		jne    _0368d5_jump
		mov    $0x00001d,%edx

	_0368d5_jump:
		cmp    $0x00000b,%cx
		jne    _0368ed_case
		mov    $0x00000a,%edx
		jmp    _0368ed_case

	_0368e2_case:
		cmp    $0x000004,%cx
		jne    _0368ed_case
		mov    $0x000014,%edx

	_0368ed_case:
		mov    %cx,_0cf270_data
		cmp    $0xffffffff,%edx
		je     _036900_jump
		xor    %ebx,%ebx
		call   _036768_func

	_036900_jump:
		mov    _0cf270_data,%cx
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03690c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,0x000020(%esp)
		mov    %edx,%ebp
		mov    $0x000008,%ecx
		mov    %esp,%edi
		mov    $_036030_func,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %ecx,%ecx
		xor    %esi,%esi

	_03692c_jump:
		mov    0x000020(%esp),%eax
		movswl %cx,%ebx
		mov    (%esp,%esi,1),%edx
		call   _036768_func
		inc    %ecx
		add    $0x000004,%esi
		cmp    $0x000003,%ecx
		jbe    _03692c_jump
		mov    $0x000004,%ecx
		mov    $0x000010,%esi

	_03694e_jump:
		movswl %cx,%ebx
		mov    %ebp,%eax
		mov    (%esp,%esi,1),%edx
		call   _036768_func
		inc    %ecx
		add    $0x000004,%esi
		cmp    $0x000007,%ecx
		jbe    _03694e_jump
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_036970_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cf444_data
		je     _036982_jump
		call   _01cc5c_func

	_036982_jump:
		mov    $_042540_func,%ebx
		mov    $0x000009,%eax
		mov    %cs,%ecx
		call   _080af3_func
		cmpb   $0x000000,_0cf426_data
		jne    _0369a3_jump
		movb   $0x000001,_095de5_data

	_0369a3_jump:
		cmpb   $0x000002,_0cf412_data
		jne    _0369b3_jump
		movb   $0x000001,_0cf40b_data

	_0369b3_jump:
		mov    _0cf232_data,%ax
		cmp    _0cf282_data,%ax
		je     _0369df_jump
		xor    %eax,%eax
		mov    $0x000001,%edx
		mov    %ax,_0cf270_data
		mov    %dx,_0cf288_data
		mov    %dx,_0cf272_data
		jmp    _036a11_jump

	_0369df_jump:
		call   _026790_func
		test   %al,%al
		je     _0369ff_jump
		xor    %ecx,%ecx
		mov    $0x000001,%esi
		mov    %cx,_0cf270_data
		mov    %si,_0cf288_data
		jmp    _036a08_jump

	_0369ff_jump:
		xor    %ebx,%ebx
		mov    %bx,_0cf288_data

	_036a08_jump:
		movw   $0x000001,_0cf272_data

	_036a11_jump:
		cmpb   $0x000001,_0cf432_data
		jne    _036a2e_jump
		cmpw   $0x000006,_0cf232_data
		jne    _036a2e_jump
		call   _03595c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_036a2e_jump:
		cmpb   $0x000000,_0cf46d_data
		jne    _036add_jump
		cmpw   $0x000000,_0cf288_data
		je     _036add_jump
		call   _0370f4_func
		mov    $_0cd274_data,%eax
		call   _07f410_func
		mov    $_0cd254_data,%eax
		call   _07f3f8_func
		mov    _0cf230_data,%eax
		mov    $_0cd210_data,%edx
		sar    $0x000010,%eax
		mov    $_0cd210_data,%ebx
		call   _036474_func
		mov    $_0cd254_data,%edx
		mov    $_0cd274_data,%eax
		call   _044de0_func
		mov    $_0cd254_data,%eax
		call   _07f3e0_func
		cmpb   $0x000000,_0cf41c_data
		jne    _036ad3_jump
		mov    _0cf41d_data,%dl
		jmp    _036aa9_jump

	_036aa9_jump:
		mov    %dl,%al
		mov    $0x001000,%ecx
		mov    $0x0f0000,%esi

	_036ab5_jump:
		sub    (%esi),%al
		inc    %esi
		dec    %ecx
		cmp    $0x000000,%ecx
		jne    _036ab5_jump
		mov    %al,%dl
		jmp    _036ac8_jump

	_036ac8_jump:
		test   %dl,%dl
		je     _036ad3_jump
		movb   $0x000000,_0cf41e_data

	_036ad3_jump:
		call   _059a94_func
		call   _0371dc_func

	_036add_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036ae4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cf444_data
		je     _036af7_jump
		call   _01cc5c_func

	_036af7_jump:
		mov    $_042540_func,%ebx
		mov    $0x000009,%eax
		mov    %cs,%ecx
		call   _080af3_func
		call   _06ae68_func
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    _0cf232_data,%ax
		mov    %dx,_0cf288_data
		mov    _0cf46d_data,%dl
		mov    %ax,_0cf282_data
		mov    _0cf224_data,%ax
		mov    %bx,_0cf272_data
		mov    %ax,_0cf270_data
		test   %dl,%dl
		jne    _036ca3_jump
		cmpb   $0x000000,_0cf41c_data
		je     _036bea_jump
		call   _026790_func
		mov    $0x0000a0,%esi
		mov    $0x0000be,%ebx
		test   %al,%al
		je     _036b72_jump
		mov    $0x0000f0,%esi
		mov    $0x0000a0,%ebx

	_036b72_jump:
		mov    $_0c7638_data,%edx
		mov    $0x000002,%eax
		call   _03c480_func
		mov    _0cd154_data,%edi
		movswl %bx,%ebx
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		movswl %si,%edx
		push   $0x000000
		mov    $0x000002,%ecx
		mov    _0c2aac_data,%eax
		call   _01a168_func
		call   _016ddd_func
		call   _016ded_func
		call   _03b3e0_func
		cmpw   $0x000000,_0cf2d0_data
		je     _036bea_jump
		mov    $_0c7338_data,%edi
		mov    $_0c7638_data,%ebx

	_036bcd_jump:
		call   _016ded_func
		call   _016ddd_func
		mov    %edi,%edx
		mov    %ebx,%eax
		call   _03c500_func
		cmpw   $0x000000,_0cf2d0_data
		jne    _036bcd_jump

	_036bea_jump:
		call   _06af80_func
		cmpb   $0x000000,_0cf444_data
		je     _036c00_jump
		xor    %edx,%edx
		mov    %edx,_0cd2ac_data

	_036c00_jump:
		mov    _0cf26e_data,%eax
		mov    $_0cd230_data,%edx
		sar    $0x000010,%eax
		call   _0363fc_func
		mov    $_0cd248_data,%eax
		call   _07f424_func
		mov    $_0cd254_data,%eax
		mov    $_0cd230_data,%ebx
		call   _07f404_func
		mov    $_0cd248_data,%eax
		mov    $_0cd254_data,%edx
		call   _036878_func
		mov    $_0cd248_data,%eax
		call   _0455f4_func
		call   _048848_func
		cmpb   $0x000000,_0cf41c_data
		jne    _036c8a_jump
		mov    _0cf41a_data,%bl
		jmp    _036c60_jump

	_036c60_jump:
		mov    %bl,%al
		mov    $0x001000,%ecx
		mov    $0x0c0000,%esi

	_036c6c_jump:
		sub    (%esi),%al
		inc    %esi
		dec    %ecx
		cmp    $0x000000,%ecx
		jne    _036c6c_jump
		mov    %al,%bl
		jmp    _036c7f_jump

	_036c7f_jump:
		test   %bl,%bl
		je     _036c8a_jump
		movb   $0x000000,_0cf41e_data

	_036c8a_jump:
		cmpw   $0x000002,_0cf282_data
		jl     _036ca3_jump
		cmpw   $0x000007,_0cf270_data
		jl     _036ca3_jump
		call   _06b4dc_func

	_036ca3_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036cac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		cmpw   $0x000000,_0cf2e8_data
		je     _036cf8_jump
		mov    $_0c0a80_data,%esi
		mov    %esp,%edi
		mov    %esp,%edx
		mov    _0c0a7c_data,%eax
		mov    $0x00000a,%ebx
		mov    %eax,(%esp)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_036cdd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _036cf5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _036cdd_jump

	_036cf5_jump:
		pop    %edi
		jmp    _036d0a_jump

	_036cf8_jump:
		mov    %esp,%edi
		mov    $_0c0a80_data,%esi
		mov    %esp,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    $0x00000a,%ebx

	_036d0a_jump:
		mov    %esp,%edi
		mov    $_0c0a88_data,%esi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    _0cf1a4_data,%eax
		add    %ecx,%edx
		sar    $0x000010,%eax
		mov    %esp,%edi
		call   _080a4e_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_036d35_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _036d4d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _036d35_jump

	_036d4d_jump:
		pop    %edi
		mov    %esp,%eax
		call   _080b20_func
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036d68_func:
		push   %edx
		cmpb   $0x000001,_0cf440_data
		jne    _036e48_jump
		mov    $0x000001,%eax
		call   _041c64_func
		test   %al,%al
		je     _036d8d_jump
		movb   $0x000001,_0cf438_data
		pop    %edx
		ret    

	_036d8d_jump:
		mov    $0x000020,%eax
		call   _041c64_func
		test   %al,%al
		jne    _036e84_jump
		mov    $0x000002,%eax
		call   _041c64_func
		test   %al,%al
		je     _036db4_jump
		xor    %eax,%eax
		jmp    _036e7e_jump

	_036db4_jump:
		mov    $0x000003,%eax
		call   _041c64_func
		test   %al,%al
		je     _036dd0_jump
		movw   $0x000001,_0cf15e_data
		jmp    _036e84_jump

	_036dd0_jump:
		mov    $0x000004,%eax
		call   _041c64_func
		test   %al,%al
		je     _036dee_jump
		movw   $0x000002,_0cf15e_data
		call   _0359f4_func
		pop    %edx
		ret    

	_036dee_jump:
		mov    $0x000005,%eax
		call   _041c64_func
		test   %al,%al
		je     _036e0c_jump
		movw   $0x000003,_0cf15e_data
		call   _0359f4_func
		pop    %edx
		ret    

	_036e0c_jump:
		mov    $0x000006,%eax
		call   _041c64_func
		test   %al,%al
		je     _036e2a_jump
		movw   $0x000004,_0cf15e_data
		call   _0359f4_func
		pop    %edx
		ret    

	_036e2a_jump:
		mov    $0x000007,%eax
		call   _041c64_func
		test   %al,%al
		je     _036e89_jump
		movw   $0x000005,_0cf15e_data
		call   _0359f4_func
		pop    %edx
		ret    

	_036e48_jump:
		call   _080b25_func
		test   %eax,%eax
		je     _036e89_jump
		call   _07fd1b_func
		mov    %al,%dl
		cmp    $0x00001b,%al
		jne    _036e63_jump
		movb   $0x000001,_0cf438_data

	_036e63_jump:
		cmp    $0x000064,%dl
		jne    _036e6d_jump
		call   _0359f4_func

	_036e6d_jump:
		cmp    $0x000031,%dl
		jb     _036e89_jump
		cmp    $0x000036,%dl
		ja     _036e89_jump
		xor    %eax,%eax
		mov    %dl,%al
		sub    $0x000031,%eax

	_036e7e_jump:
		mov    %ax,_0cf15e_data

	_036e84_jump:
		call   _0359f4_func

	_036e89_jump:
		pop    %edx
		ret    



_036e8c_func:
		cmpb   $0x000001,_0cf440_data
		jne    _036eb3_jump
		mov    $0x000001,%eax
		call   _041c64_func
		test   %al,%al
		je     _036ecc_jump
		mov    $0x000004,%eax
		call   _04ef74_func
		test   %al,%al
		je     _036ecc_jump
		jmp    _036ec5_jump

	_036eb3_jump:
		call   _080b25_func
		test   %eax,%eax
		je     _036ecc_jump
		call   _07fd1b_func
		cmp    $0x00001b,%al
		jne    _036ecc_jump

	_036ec5_jump:
		movb   $0x000001,_0cf438_data

	_036ecc_jump:
		ret    



_036ed0_func:
		call   _080b25_func
		test   %eax,%eax
		je     _036ecc_jump
		call   _07fd1b_func
		jmp    _036ed0_func



_036ee0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000008,%esp
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		mov    $0x000001,%edx
		mov    _0ccad8_data,%eax
		call   _047900_func
		mov    $_0c7638_data,%edx
		mov    $0x000001,%eax
		call   _046e04_func
		add    $0x000008,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036f14_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000008,%esp
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		mov    _0ccad8_data,%eax
		xor    %edx,%edx
		call   _047900_func
		mov    $_0c7638_data,%edx
		xor    %eax,%eax
		call   _046e04_func
		add    $0x000008,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036f40_func:
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000001,_0cf440_data
		je     _036f6a_jump
		call   _080b25_func
		test   %eax,%eax
		je     _036f67_jump
		cmpb   $0x000000,_0cf425_data
		jne    _036f67_jump
		call   _07fd1b_func
		mov    %al,(%edx)
		pop    %edx
		ret    

	_036f67_jump:
		movb   $_0000ff_case,(%edx)

	_036f6a_jump:
		pop    %edx
		ret    



_036f6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_095de4_data
		je     _036f86_jump
		xor    %eax,%eax
		mov    _0cf43c_data,%al
		call   _03d90c_func

	_036f86_jump:
		push   $0x0000c8
		mov    _0cd154_data,%edi
		mov    _0cd1e0_data,%esi
		push   $0x000140
		xor    %edx,%edx
		xor    %ecx,%ecx
		push   $0x000140
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   _014b78_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		nop

	_036fb4_jump:
		ret    



_036fb8_func:
		cmpb   $0x000000,_0cf46d_data
		je     _036fb4_jump
		call   _073430_func
		mov    $_0cd274_data,%eax
		call   _07f410_func
		mov    $_0cd254_data,%eax
		jmp    _07f3f8_func



_036fdc_func:
		push   %edx
		xor    %edx,%edx
		mov    _0cf221_data,%ah
		mov    _0cf41e_data,%dl
		test   $0x000002,%ah
		je     _036ff5_jump
		call   _05a510_func

	_036ff5_jump:
		jmp    _036ffd_jump

	_036ffd_jump:
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _037016_jump
		mov    $0x000003,%eax
		int    $0x000010
		mov    $0x004c00,%eax
		int    $0x000021

	_037016_jump:
		jmp    _03701e_jump

	_03701e_jump:
		pop    %edx
		nop



_037020_func:
		ret    



_037024_func:
		push   %edx
		call   _06aed0_func
		call   _03d8fc_func
		cmpb   $0x000000,_0ca8c4_data
		je     _03704f_jump
		call   _042718_func
		mov    $0x000001,%dl
		mov    $_0ca8b0_data,%eax
		mov    %dl,_0ca8c6_data
		call   _042434_func

	_03704f_jump:
		cmpb   $0x000000,_0cf46d_data
		je     _03709d_jump
		mov    $_0cd248_data,%eax
		call   _07f35c_func
		mov    $_0cd274_data,%eax
		call   _07f35c_func
		mov    $_0cd254_data,%eax
		call   _07f35c_func
		mov    $_0cd268_data,%eax
		call   _07f35c_func
		mov    $_0ccae8_data,%eax
		call   _07f44c_func
		cmpb   $0x000002,_0cf412_data
		je     _03709d_jump
		mov    $_0ccad8_data,%eax
		call   _07f44c_func

	_03709d_jump:
		call   _07efc0_func
		call   _06aed0_func
		xor    %eax,%eax
		call   _07f91f_func
		pop    %edx
		nop



_0370b0_func:
		ret    



_0370b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _03cd2c_func
		call   _026790_func
		mov    $0x0000a0,%edx
		mov    $0x0000be,%ebx
		test   %al,%al
		je     _0370d9_jump
		mov    $0x0000f0,%edx
		mov    $0x0000a0,%ebx

	_0370d9_jump:
		push   $0x000000
		mov    $0x000002,%ecx
		mov    _0c2aac_data,%eax
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01a168_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0370f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0cd248_data,%eax
		mov    $0x000300,%ecx
		mov    _0cf230_data,%edx
		mov    $_0c7338_data,%esi
		sar    $0x000010,%edx
		mov    $_0c6738_data,%edi
		call   _036634_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c7638_data,%esi
		mov    $_0c7338_data,%edi
		mov    $_0c7638_data,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000002,%eax
		call   _03c480_func
		call   _016ddd_func
		call   _016ded_func
		call   _03b3e0_func
		call   _0370b4_func
		mov    $0x000064,%edx
		mov    _0ccae4_data,%ebx
		mov    $0x000009,%eax
		mov    %ebx,%ecx
		call   _038164_func
		test   %al,%al
		je     _037197_jump
		call   _0381b4_func
		call   _0381ec_func
		call   _0370b4_func

	_037197_jump:
		call   _016ded_func
		call   _016ddd_func
		call   _03b3e0_func
		cmpw   $0x000000,_0cf2d0_data
		je     _0371d5_jump
		mov    $_0c7338_data,%ebx

	_0371b5_jump:
		call   _016ded_func
		call   _016ddd_func
		mov    $_0c7638_data,%eax
		mov    %ebx,%edx
		call   _03c500_func
		cmpw   $0x000000,_0cf2d0_data
		jne    _0371b5_jump

	_0371d5_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0371dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000064,%edx
		mov    $0x000009,%eax
		mov    _0ccae4_data,%ecx
		mov    _0cd158_data,%ebx
		call   _03817c_func
		test   %al,%al
		je     _03720a_jump
		call   _0381b4_func
		call   _0381ec_func

	_03720a_jump:
		mov    $_0c7638_data,%edx
		mov    $0x000002,%eax
		mov    $0x000300,%ecx
		mov    $_0c6738_data,%esi
		mov    $_0c7338_data,%edi
		call   _03c5f0_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037240_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _07fcb4_func
		cli    
		mov    _0df1a0_data,%edx
		inc    %edx
		mov    $0x00000a,%ebx
		mov    %edx,_0df1a0_data
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     _037361_jump
		mov    _0df198_data,%eax
		mov    _0df19c_data,%ebx
		add    %eax,%ebx
		mov    %ebx,_0df19c_data
		cmp    $0x000080,%ebx
		jl     _0372a3_jump
		mov    %eax,%ebx
		mov    $0x000080,%edx
		neg    %ebx
		mov    %edx,_0df19c_data
		mov    %ebx,_0df198_data
		jmp    _0372ba_jump

	_0372a3_jump:
		cmp    $0x000020,%ebx
		jg     _0372ba_jump
		mov    $0x000020,%edi
		neg    %eax
		mov    %edi,_0df19c_data
		mov    %eax,_0df198_data

	_0372ba_jump:
		mov    $0x000003,%edx
		mov    $0x00003f,%ecx

	_0372c4_jump:
		xor    %eax,%eax
		mov    _0c7638_data(%edx),%al
		mov    _0df19c_data,%esi
		mov    %eax,%ebx
		imul   %esi,%ebx
		mov    %ecx,%eax
		sar    $0x000006,%ebx
		cmp    %ebx,%eax
		jle    _0372e2_jump
		mov    %ebx,%eax

	_0372e2_jump:
		mov    %al,_0c7338_data(%edx)
		xor    %eax,%eax
		mov    _0c7639_data(%edx),%al
		mov    _0df19c_data,%edi
		mov    %eax,%ebx
		imul   %edi,%ebx
		mov    %ecx,%eax
		sar    $0x000006,%ebx
		cmp    %ebx,%eax
		jle    _037306_jump
		mov    %ebx,%eax

	_037306_jump:
		xor    %ebx,%ebx
		mov    %al,_0c7339_data(%edx)
		mov    _0df19c_data,%eax
		mov    _0c763a_data(%edx),%bl
		imul   %eax,%ebx
		sar    $0x000006,%ebx
		mov    %ecx,%eax
		add    $0x000003,%edx
		cmp    %ebx,%eax
		jle    _03732a_jump
		mov    %ebx,%eax

	_03732a_jump:
		mov    %al,_0c7337_data(%edx)
		cmp    $0x00001b,%edx
		jne    _0372c4_jump
		call   _016ddd_func
		mov    $_0c7338_data,%esi
		mov    $0x000008,%ecx
		mov    $0x000001,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_037361_jump:
		mov    _0df1ac_data,%dx
		mov    _0df1a8_data,%eax
		call   _080b3c_func
		sti    
		cld    
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   



_0373e4_func:
		call   _045e50_func
		mov    $0x000001,%eax
		ret    



_0373f0_func:
		push   %edx
		mov    _0cf2d0_data,%dx
		xor    %al,%al
		test   %dx,%dx
		jne    _037434_jump
		cmpw   $0x000001,_0cf1ea_data
		je     _03742e_jump
		cmpb   $0x000001,_0cf440_data
		jne    _037432_jump
		mov    $0x00001c,%eax
		call   _041c64_func
		test   %al,%al
		jne    _03742e_jump
		mov    $0x000039,%eax
		call   _041c64_func
		test   %al,%al
		je     _037432_jump

	_03742e_jump:
		mov    $0x000001,%al
		pop    %edx
		ret    

	_037432_jump:
		xor    %al,%al

	_037434_jump:
		pop    %edx
		ret    



_037438_func:
		push   %edx
		mov    _0cf440_data,%ah
		xor    %dl,%dl
		cmp    $0x000001,%ah
		jne    _037456_jump
		mov    $0x00001c,%eax
		call   _041c64_func
		test   %al,%al
		je     _037462_jump
		jmp    _037460_jump

	_037456_jump:
		call   _041ee4_func
		test   %ax,%ax
		je     _037462_jump

	_037460_jump:
		mov    $0x000001,%dl

	_037462_jump:
		mov    %dl,%al
		pop    %edx
		ret    



_037514_func:
		push   %edx
		mov    _0cf440_data,%ah
		xor    %dl,%dl
		cmp    $0x000001,%ah
		jne    _037532_jump
		mov    $0x000001,%eax
		call   _041c64_func
		test   %al,%al
		je     _037546_jump
		jmp    _037544_jump

	_037532_jump:
		call   _080b25_func
		test   %eax,%eax
		je     _037546_jump
		call   _07fd1b_func
		cmp    $0x00001b,%al
		jne    _037546_jump

	_037544_jump:
		mov    $0x000001,%dl

	_037546_jump:
		mov    %dl,%al
		pop    %edx
		ret    



_03754c_func:
		push   %edx
		call   _042718_func
		call   _016e3d_func
		cmpb   $0x000000,_0cf444_data
		je     _037565_jump
		call   _072c70_func

	_037565_jump:
		cmpb   $_0000ff_case,_095de4_data
		je     _037573_jump
		call   _03d8fc_func

	_037573_jump:
		mov    _0c2bf4_data,%edx
		push   %edx
		push   $_0c0a90_data
		call   _07f8fc_func
		add    $0x000008,%esp
		pop    %edx
		ret    



_03758c_func:
		push   %ebx
		push   %edx
		mov    $0x000008,%ebx
		mov    $_095e6f_data,%eax
		xor    %edx,%edx
		call   _07fcc0_func
		pop    %edx
		pop    %ebx
		ret    



_0375a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpb   $0x000001,_0cf428_data
		jne    _03764b_jump
		mov    $_09633c_data,%eax
		mov    $_096346_data,%edx
		mov    $_096356_data,%ebx
		mov    $_096364_data,%ecx
		mov    $_09636c_data,%esi
		mov    $_096378_data,%edi
		mov    $_096384_data,%ebp
		mov    %eax,_0df180_data
		mov    %edx,_0df17c_data
		mov    %ebx,_0df174_data
		mov    %ecx,_0df178_data
		mov    %esi,_0df18c_data
		mov    %edi,_0df190_data
		mov    %ebp,_0df188_data
		mov    $_09639e_data,%eax
		mov    $_0963be_data,%edx
		mov    $_096394_data,%ebx
		mov    $_0963ae_data,%ecx
		mov    $_0963ca_data,%esi
		mov    $_0963da_data,%edi
		mov    %eax,_0df170_data
		mov    %edx,_0df164_data
		mov    %ebx,_0df184_data
		mov    %ecx,_0df160_data
		mov    %esi,_0df16c_data
		mov    %edi,_0df168_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03764b_jump:
		mov    $_096341_data,%edx
		mov    $_09634e_data,%ebx
		mov    $_09635d_data,%ecx
		mov    $_096368_data,%esi
		mov    $_096372_data,%edi
		mov    $_09637e_data,%ebp
		mov    $_09638c_data,%eax
		mov    %edx,_0df180_data
		mov    %ebx,_0df17c_data
		mov    %ecx,_0df174_data
		mov    %esi,_0df178_data
		mov    %edi,_0df18c_data
		mov    %ebp,_0df190_data
		mov    %eax,_0df188_data
		mov    $_0963a6_data,%edx
		mov    $_0963c4_data,%ebx
		mov    $_096399_data,%ecx
		mov    $_0963b6_data,%esi
		mov    $_0963d2_data,%edi
		mov    $_0963e0_data,%ebp
		mov    %edx,_0df170_data
		mov    %ebx,_0df164_data
		mov    %ecx,_0df184_data
		mov    %esi,_0df160_data
		mov    %edi,_0df16c_data
		mov    %ebp,_0df168_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0376e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cf406_data
		je     _03795d_jump
		xor    %dl,%dl
		mov    %dl,_0cf406_data
		cmpb   $0x000000,_0cf445_data
		je     _03795d_jump
		cmpb   $0x000000,_0cf41e_data
		jne    _03795d_jump
		mov    $0x000005,%ecx
		mov    $_095e6f_data,%esi
		mov    _0df180_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _03772f_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_03772f_jump:
		test   %eax,%eax
		jne    _037750_jump
		testb  $0x000080,_0cf228_data
		je     _03795d_jump
		mov    %dl,_0cf41f_data
		call   _026798_func
		jmp    _03795d_jump

	_037750_jump:
		mov    $0x000008,%ecx
		mov    $_095e6f_data,%esi
		mov    _0df17c_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _03776b_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_03776b_jump:
		test   %eax,%eax
		jne    _037780_jump
		mov    %dl,_0cf41f_data
		call   _026798_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037780_jump:
		mov    $0x000004,%ecx
		mov    $_095e6f_data,%esi
		mov    _0df178_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _03779b_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_03779b_jump:
		test   %eax,%eax
		jne    _0377ee_jump
		cmpl   $0x000000,_095de8_data
		jne    _0377d0_jump
		mov    $0x00001a,%esi
		mov    $0x007d96,%edi
		mov    $0x000001,%al
		mov    %esi,_095de8_data
		mov    %edi,_095dec_data
		mov    %al,_0cf422_data
		mov    %al,_0cf423_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0377d0_jump:
		mov    $0x000001,%cl
		mov    %eax,_095de8_data
		mov    %eax,_095dec_data
		mov    %cl,_0cf422_data
		mov    %cl,_0cf423_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0377ee_jump:
		mov    $0x000005,%ecx
		mov    $_095e6f_data,%esi
		mov    _0df184_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037809_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037809_jump:
		test   %eax,%eax
		jne    _037821_jump
		orb    $0x000087,_0cf220_data
		orb    $0x000001,_0cf221_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037821_jump:
		mov    $0x000007,%ecx
		mov    $_095e6f_data,%esi
		mov    _0df174_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _03783c_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_03783c_jump:
		test   %eax,%eax
		jne    _0378bb_jump
		xor    %dh,%dh
		mov    %dh,_0cf452_data

	_03784c_jump:
		mov    _094d1c_data(%eax),%bh
		test   $0x000001,%bh
		jne    _037873_jump
		cmpb   $0x000006,_094d1e_data(%eax)
		je     _037873_jump
		mov    %bh,%ch
		xor    %dl,%dl
		or     $0x000004,%ch
		mov    %dl,_0cf439_data
		mov    %ch,_094d1c_data(%eax)

	_037873_jump:
		add    $0x000014,%eax
		cmp    $0x0001e0,%eax
		jne    _03784c_jump
		cmpw   $0x00000e,_0cf232_data
		jne    _03795d_jump
		xor    %eax,%eax

	_03788d_jump:
		mov    _094d1c_data(%eax),%dh
		test   $0x000001,%dh
		jne    _0378ab_jump
		mov    %dh,%bl
		or     $0x000004,%bl
		mov    %bl,_094d1c_data(%eax)
		xor    %bh,%bh
		mov    %bh,_0cf439_data

	_0378ab_jump:
		add    $0x000014,%eax
		cmp    $0x0001e0,%eax
		je     _03795d_jump
		jmp    _03788d_jump

	_0378bb_jump:
		mov    $0x000006,%ecx
		mov    $_095e6f_data,%esi
		mov    _0df18c_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _0378d6_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_0378d6_jump:
		test   %eax,%eax
		jne    _037902_jump
		mov    _095e24_data,%al
		cmp    $0x000064,%al
		je     _037947_jump
		cmp    $0x000050,%al
		je     _0378f3_jump
		xor    %eax,%eax
		mov    _095e24_data,%al
		mov    %eax,_0df194_data

	_0378f3_jump:
		mov    $0x000064,%dl
		mov    $0x000064,%eax
		mov    %dl,_095e24_data
		jmp    _037958_jump

	_037902_jump:
		mov    $0x000006,%ecx
		mov    $_095e6f_data,%esi
		mov    _0df190_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _03791d_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_03791d_jump:
		test   %eax,%eax
		jne    _03795d_jump
		mov    _095e24_data,%bh
		cmp    $0x000050,%bh
		je     _037947_jump
		cmp    $0x000064,%bh
		je     _037938_jump
		mov    %bh,%al
		mov    %eax,_0df194_data

	_037938_jump:
		mov    $0x000050,%ch
		mov    $0x000050,%eax
		mov    %ch,_095e24_data
		jmp    _037958_jump

	_037947_jump:
		mov    _0df194_data,%al
		mov    %al,_095e24_data
		xor    %eax,%eax
		mov    _095e24_data,%al

	_037958_jump:
		call   _048cc8_func

	_03795d_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037964_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cf406_data
		je     _037b43_jump
		xor    %dl,%dl
		mov    %dl,_0cf406_data
		cmpb   $0x000000,_0cf48a_data
		je     _037b43_jump
		cmpw   $0x000006,_0cf282_data
		je     _037b43_jump
		cmpb   $0x000000,_0cf41e_data
		jne    _037b43_jump
		cmpw   $0x000005,_0cf254_data
		je     _037b43_jump
		mov    $0x000008,%ecx
		mov    $_095e6f_data,%esi
		mov    _0df188_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _0379cf_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_0379cf_jump:
		test   %eax,%eax
		jne    _0379e1_jump
		movw   $0x000063,_0ce94a_data
		jmp    _037b43_jump

	_0379e1_jump:
		mov    $0x000008,%ecx
		mov    $_095e6f_data,%esi
		mov    _0df170_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _0379fc_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_0379fc_jump:
		test   %eax,%eax
		jne    _037a14_jump
		mov    $0x000004,%bl
		mov    %bl,_0ce0ba_data
		mov    %bl,_0ce953_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037a14_jump:
		mov    $0x000005,%ecx
		mov    $_095e6f_data,%esi
		mov    _0df184_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037a2f_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037a2f_jump:
		test   %eax,%eax
		jne    _037a5a_jump
		mov    _0cf221_data,%ah
		test   $0x000080,%ah
		jne    _037b43_jump
		orb    $0x000087,_0cf220_data
		mov    %ah,%dh
		or     $0x000001,%dh
		mov    %dh,_0cf221_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037a5a_jump:
		mov    $0x000008,%ecx
		mov    $_095e6f_data,%esi
		mov    _0df160_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037a75_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037a75_jump:
		test   %eax,%eax
		jne    _037ab3_jump
		testb  $0x000080,_0cf221_data
		jne    _037b43_jump
		testb  $0x000001,_0cf220_data
		je     _037b43_jump
		mov    _0ce0d0_data,%edx
		movb   $0x00000c,0x00006e(%edx)
		mov    0x00006e(%edx),%al
		mov    %al,_0ce170_data
		mov    %al,_0ce4d3_data
		mov    %al,0x00006c(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037ab3_jump:
		mov    $0x000006,%ecx
		mov    $_095e6f_data,%esi
		mov    _0df164_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037ace_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037ace_jump:
		test   %eax,%eax
		jne    _037af3_jump
		xor    %ebx,%ebx
		mov    _0ce950_data,%bl
		mov    $0x000063,%eax
		add    $0x00000a,%ebx
		cmp    %ebx,%eax
		jle    _037ae8_jump
		mov    %ebx,%eax

	_037ae8_jump:
		mov    %al,_0ce950_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037af3_jump:
		mov    $0x000006,%ecx
		mov    $_095e6f_data,%esi
		mov    _0df168_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037b0e_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037b0e_jump:
		test   %eax,%eax
		jne    _037b43_jump
		cmpb   $0x000000,_0ce0b1_data
		jne    _037b43_jump
		cmpw   $0x000000,_0ce084_data
		jne    _037b43_jump
		cmpw   $0x000000,_0ce086_data
		jne    _037b43_jump
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _037b43_jump
		movb   $0x000001,_0cf465_data

	_037b43_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037b50_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _0420e8_func
		mov    _0ccae4_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _038e24_func
		test   %ax,%ax
		je     _037b9c_jump
		call   _041e58_func
		test   %ax,%ax
		jne    _037b9c_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _037b9c_jump
		call   _041f70_func
		test   %ax,%ax
		jne    _037b9c_jump
		call   _041ffc_func
		test   %ax,%ax
		je     _037ba3_jump

	_037b9c_jump:
		mov    $0x000001,%edx
		jmp    _037ba5_jump

	_037ba3_jump:
		xor    %edx,%edx

	_037ba5_jump:
		call   _039110_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_037bb0_case:
		mov    $_0c7638_data,%eax
		call   _03cc18_func
		cmpb   $0x000001,_0963ea_data
		jne    _037bc8_jump
		call   _03c9c0_func

	_037bc8_jump:
		mov    $_037b50_func,%eax
		call   _03ca88_func
		mov    _0963e7_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03cc8c_func
		call   _03ca10_func
		jmp    _03cc8c_func



_037bf0_func:
		push   %edx
		call   _0420e8_func
		call   _07e85c_func
		test   %ax,%ax
		je     _037c28_jump
		call   _041e58_func
		test   %ax,%ax
		jne    _037c28_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _037c28_jump
		call   _041f70_func
		test   %ax,%ax
		jne    _037c28_jump
		call   _041ffc_func
		test   %ax,%ax
		je     _037c2f_jump

	_037c28_jump:
		mov    $0x000001,%edx
		jmp    _037c31_jump

	_037c2f_jump:
		xor    %edx,%edx

	_037c31_jump:
		call   _07e9e0_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_037c3c_case:
		mov    $_0c7638_data,%eax
		call   _03cc18_func
		cmpb   $0x000001,_0963ea_data
		jne    _037c59_jump
		call   _03ca38_func
		call   _03c9c0_func

	_037c59_jump:
		mov    $_037bf0_func,%eax
		call   _03ca88_func
		mov    _0963e7_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03cc8c_func
		call   _03ca10_func
		jmp    _03cc8c_func



_037c80_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _0420e8_func
		mov    _0ccae4_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _026174_func
		test   %ax,%ax
		je     _037ccc_jump
		call   _041e58_func
		test   %ax,%ax
		jne    _037ccc_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _037ccc_jump
		call   _041f70_func
		test   %ax,%ax
		jne    _037ccc_jump
		call   _041ffc_func
		test   %ax,%ax
		je     _037cd3_jump

	_037ccc_jump:
		mov    $0x000001,%edx
		jmp    _037cd5_jump

	_037cd3_jump:
		xor    %edx,%edx

	_037cd5_jump:
		call   _026638_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_037ce0_case:
		mov    $_0c7638_data,%eax
		call   _03cc18_func
		cmpb   $0x000001,_0963ea_data
		jne    _037cfd_jump
		call   _03ca38_func
		call   _03c9c0_func

	_037cfd_jump:
		mov    $_037c80_func,%eax
		call   _03ca88_func
		mov    _0963e7_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03cc8c_func
		call   _03ca10_func
		jmp    _03cc8c_func



_037d24_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _0420e8_func
		mov    _0ccae4_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _0448a4_func
		test   %ax,%ax
		je     _037d70_jump
		call   _041e58_func
		test   %ax,%ax
		jne    _037d70_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _037d70_jump
		call   _041f70_func
		test   %ax,%ax
		jne    _037d70_jump
		call   _041ffc_func
		test   %ax,%ax
		je     _037d77_jump

	_037d70_jump:
		mov    $0x000001,%edx
		jmp    _037d79_jump

	_037d77_jump:
		xor    %edx,%edx

	_037d79_jump:
		call   _044760_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_037d84_case:
		mov    $_0c7638_data,%eax
		call   _03cc18_func
		cmpb   $0x000001,_0963ea_data
		jne    _037da1_jump
		call   _03ca38_func
		call   _03c9c0_func

	_037da1_jump:
		mov    $_037d24_func,%eax
		call   _03ca88_func
		mov    _0963e7_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03cc8c_func
		call   _03ca10_func
		jmp    _03cc8c_func



_037dc8_func:
		push   %edx
		call   _0420e8_func
		call   _072ec4_func
		test   %ax,%ax
		je     _037e00_jump
		call   _041e58_func
		test   %ax,%ax
		jne    _037e00_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _037e00_jump
		call   _041f70_func
		test   %ax,%ax
		jne    _037e00_jump
		call   _041ffc_func
		test   %ax,%ax
		je     _037e07_jump

	_037e00_jump:
		mov    $0x000001,%edx
		jmp    _037e09_jump

	_037e07_jump:
		xor    %edx,%edx

	_037e09_jump:
		call   _0730e8_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_037e14_case:
		mov    $_0c7638_data,%eax
		call   _03cc18_func
		cmpb   $0x000001,_0963ea_data
		jne    _037e31_jump
		call   _03ca38_func
		call   _03c9c0_func

	_037e31_jump:
		mov    $_037dc8_func,%eax
		call   _03ca88_func
		mov    _0963e7_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03cc8c_func
		call   _03ca10_func
		jmp    _03cc8c_func



_037e58_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _0420e8_func
		mov    _0ccae4_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _05fa30_func
		test   %ax,%ax
		je     _037ea4_jump
		call   _041e58_func
		test   %ax,%ax
		jne    _037ea4_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _037ea4_jump
		call   _041f70_func
		test   %ax,%ax
		jne    _037ea4_jump
		call   _041ffc_func
		test   %ax,%ax
		je     _037eab_jump

	_037ea4_jump:
		mov    $0x000001,%edx
		jmp    _037ead_jump

	_037eab_jump:
		xor    %edx,%edx

	_037ead_jump:
		call   _05fce8_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_037eb8_case:
		mov    $_0c7638_data,%eax
		call   _03cc18_func
		cmpb   $0x000001,_0963ea_data
		jne    _037ed5_jump
		call   _03ca38_func
		call   _03c9c0_func

	_037ed5_jump:
		mov    $_037e58_func,%eax
		call   _03ca88_func
		mov    _0963e7_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03cc8c_func
		call   _03ca10_func
		jmp    _03cc8c_func



_037efc_func:
		push   %edx
		call   _0420e8_func
		call   _07c1d4_func
		test   %ax,%ax
		je     _037f34_jump
		call   _041e58_func
		test   %ax,%ax
		jne    _037f34_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _037f34_jump
		call   _041f70_func
		test   %ax,%ax
		jne    _037f34_jump
		call   _041ffc_func
		test   %ax,%ax
		je     _037f3b_jump

	_037f34_jump:
		mov    $0x000001,%edx
		jmp    _037f3d_jump

	_037f3b_jump:
		xor    %edx,%edx

	_037f3d_jump:
		call   _07c2bc_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_037f48_case:
		mov    $_0c7638_data,%eax
		call   _03cc18_func
		cmpb   $0x000001,_0963ea_data
		jne    _037f65_jump
		call   _03ca38_func
		call   _03c9c0_func

	_037f65_jump:
		mov    $_037efc_func,%eax
		call   _03ca88_func
		mov    _0963e7_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03cc8c_func
		call   _03ca10_func
		jmp    _03cc8c_func



_037f8c_func:
		cmpb   $0x000001,_0963ea_data
		jne    _037fa2_jump
		mov    $0x000006,%eax
		call   _06b8d0_func
		add    $0x000002,%al
		ret    

	_037fa2_jump:
		mov    $0x000007,%eax
		call   _06b8d0_func
		inc    %al
		ret    



_037fb0_func:
		mov    $0x00000b,%eax
		call   _06b8d0_func
		inc    %al
		ret    



_037fc0_func:
		mov    $0x00000e,%eax
		call   _06b8d0_func
		inc    %al
		ret    



_037fd0_func:
		mov    $0x000006,%eax
		call   _06b8d0_func
		inc    %al
		ret    

_037fe0_switch:
		.long   _038076_case
		.long   _0380ce_case
		.long   _038090_case
		.long   _03815b_case
		.long   _0380ad_case
		.long   _03810b_case
		.long   _038136_case
		.long   _0380f8_case


	_038000_jump:
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		mov    $0x000001,%edx
		cmp    $0x000009,%al
		jne    _038037_jump
		call   _037f8c_func
		mov    %al,0x000004(%esp)
		cmp    $0x000002,%al
		je     _038024_jump
		cmp    $0x000004,%al
		jne    _03802b_jump

	_038024_jump:
		call   _037fb0_func
		jmp    _038034_jump

	_03802b_jump:
		cmp    $0x000006,%al
		jne    _038037_jump
		call   _037fc0_func

	_038034_jump:
		mov    %al,(%esp)

	_038037_jump:
		cmpb   $0x000004,0x000004(%esp)
		jne    _038043_jump
		movb   $0x000002,0x000004(%esp)

	_038043_jump:
		movsbw _0963ea_data,%ax
		imul   %eax,%edx
		mov    (%esp),%al
		mov    %al,_0963e8_data
		mov    0x000004(%esp),%al
		mov    %al,_0963e9_data
		dec    %al
		cmp    $0x000007,%al
		ja     _03815b_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_037fe0_switch(,%eax,4)

	_038076_case:
		push   %ecx
		push   %ebx
		movswl %dx,%ebx
		mov    $0x000008,%edx
		mov    $0x000078,%ecx
		mov    %edx,%eax
		call   _038d1c_func
		add    $0x000008,%esp
		ret    

	_038090_case:
		push   %ecx
		mov    $0x000014,%eax
		mov    $0x000190,%ecx
		push   %ebx
		movswl %dx,%ebx
		mov    $0x00000a,%edx
		call   _07e754_func
		add    $0x000008,%esp
		ret    

	_0380ad_case:
		push   %ecx
		mov    $0x000014,%eax
		add    %edx,%edx
		push   %ebx
		movswl %dx,%ecx
		push   $0x000032
		mov    $0x00003d,%ebx
		mov    $0x000008,%edx
		call   _025fac_func
		add    $0x000008,%esp
		ret    

	_0380ce_case:
		mov    (%esp),%al
		cmp    $0x00000d,%al
		je     _0380d9_jump
		cmp    $0x000064,%al
		jne    _0380e3_jump

	_0380d9_jump:
		call   _037fb0_func
		mov    %al,_0963e8_data

	_0380e3_jump:
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0963e8_data,%al
		movswl %dx,%edx
		call   _0446b4_func
		add    $0x000008,%esp
		ret    

	_0380f8_case:
		add    %edx,%edx
		mov    $0x000016,%eax
		movswl %dx,%edx
		call   _072da0_func
		add    $0x000008,%esp
		ret    

	_03810b_case:
		mov    (%esp),%al
		cmp    $0x000010,%al
		je     _038116_jump
		cmp    $0x000064,%al
		jne    _038120_jump

	_038116_jump:
		call   _037fc0_func
		mov    %al,_0963e8_data

	_038120_jump:
		xor    %eax,%eax
		shl    $0x000002,%edx
		mov    _0963e8_data,%al
		movswl %dx,%edx
		call   _05f978_func
		add    $0x000008,%esp
		ret    

	_038136_case:
		mov    $0x0000a0,%eax
		push   %ecx
		shl    $0x000002,%edx
		push   %ebx
		movswl %dx,%ecx
		push   $0x0003e8
		mov    $0x000030,%ebx
		mov    $0x000064,%edx
		call   _07c0cc_func
		add    $0x000008,%esp
		ret    

	_03815b_case:
		xor    %al,%al
		add    $0x000008,%esp

	_038160_case:
		ret    



_038164_func:
		movb   $0x000001,_0963ea_data
		and    $_0000ff_case,%edx
		and    $_0000ff_case,%eax
		jmp    _038000_jump



_03817c_func:
		movb   $_0000ff_case,_0963ea_data
		and    $_0000ff_case,%edx
		and    $_0000ff_case,%eax
		jmp    _038000_jump

_038194_switch:
		.long   _037bb0_case
		.long   _037d84_case
		.long   _037c3c_case
		.long   _038160_case
		.long   _037ce0_case
		.long   _037eb8_case
		.long   _037f48_case
		.long   _037e14_case




_0381b4_func:
		mov    _0963e9_data,%al
		dec    %al
		cmp    $0x000007,%al
		ja     _038160_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_038194_switch(,%eax,4)

_0381cc_switch:
		.long   _038cf0_case
		.long   _044688_case
		.long   _07e728_case
		.long   _038160_case
		.long   _025f70_case
		.long   _05f93c_case
		.long   _07c0a0_case
		.long   _072d74_case




_0381ec_func:
		mov    _0963e9_data,%al
		dec    %al
		cmp    $0x000007,%al
		ja     _038160_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_0381cc_switch(,%eax,4)



_038208_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		cmpb   $0x000001,_095de5_data
		jne    _038259_jump
		xor    %bl,%bl

	_038220_jump:
		movzbl %bl,%edi
		imul   $0x003e80,%edi,%edi
		mov    %bl,%ah
		mov    $0x003e80,%ecx
		mov    $0x0003ce,%edx
		mov    $0x000004,%al
		out    %ax,(%dx)
		mov    (%esp),%edx
		mov    %ebp,%esi
		add    %edx,%edi
		inc    %bl
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmp    $0x000004,%bl
		jae    _038272_jump
		jmp    _038220_jump

	_038259_jump:
		mov    $0x00fa00,%ecx
		mov    %ebp,%esi
		mov    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_038272_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03827c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    %edx,%ebp
		mov    _095de5_data,%ah
		cmp    $0x000001,%ah
		jne    _0382d3_jump
		mov    %ah,%bl
		mov    %ebp,%edi
		xor    %bh,%bh

	_03829a_jump:
		movzbl %bh,%esi
		imul   $0x003e80,%esi,%esi
		mov    %bl,%ah
		mov    $0x003e80,%ecx
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    (%esp),%edx
		add    %bl,%bl
		add    %edx,%esi
		inc    %bh
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmp    $0x000004,%bh
		jae    _0382ed_jump
		jmp    _03829a_jump

	_0382d3_jump:
		mov    $0x00fa00,%ecx
		mov    (%esp),%esi
		mov    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_0382ed_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0382f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		mov    %esp,%edx
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%eax
		call   _016111_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _01614e_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2ad8_data,%eax
		call   _01a168_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _01614e_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03835c_jump:
		mov    $0x000001,%eax
		ret    



_038364_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0963ec_data,%bx
		cmpb   $0x000002,_0cf412_data
		jne    _0383b3_jump
		call   _0382f8_func
		mov    $_03835c_jump,%eax
		call   _03ca88_func
		xor    %dl,%dl

	_03838a_jump:
		call   _016ded_func
		inc    %dl
		call   _016ddd_func
		cmp    $0x00000c,%dl
		jb     _03838a_jump

	_03839b_jump:
		call   _016ded_func
		call   _016ddd_func
		cmpb   $0x000000,_0cf441_data
		jne    _03839b_jump
		jmp    _0384c1_jump

	_0383b3_jump:
		mov    _0ccad8_data,%edx
		mov    _0cd158_data,%eax
		call   _038208_func
		mov    _0cd154_data,%edx
		mov    _0ccad8_data,%eax
		call   _03827c_func
		call   _0382f8_func
		mov    $_03835c_jump,%eax
		call   _03ca88_func
		mov    $0x00002a,%esi
		mov    $0x000036,%edi
		xor    %ecx,%ecx

	_0383ee_jump:
		mov    $0x00000f,%ebx
		mov    %cl,%dl
		mov    %bx,_0963ec_data

	_0383fc_jump:
		cmp    $0x000007,%dl
		ja     _038435_jump
		call   _016ded_func
		call   _016ddd_func
		mov    %edi,%eax
		call   _041c64_func
		test   %al,%al
		je     _038423_jump
		mov    %esi,%eax
		call   _041c64_func
		test   %al,%al
		je     _038423_jump
		inc    %dl

	_038423_jump:
		mov    _0963ec_data,%bx
		dec    %bx
		mov    %bx,_0963ec_data
		jne    _0383fc_jump

	_038435_jump:
		mov    _0963ec_data,%bx
		cmp    $0x00000c,%dl
		jb     _038443_jump
		mov    %cl,%dl

	_038443_jump:
		mov    %bx,_0963ec_data
		test   %dl,%dl
		je     _03848d_jump
		mov    _0963ee_data,%dh
		xor    $0x000001,%dh
		mov    _095de5_data,%al
		mov    %dh,_0963ee_data
		cmp    %al,%cl
		jne    _038483_jump
		mov    _0cd154_data,%edx
		mov    _0ccad8_data,%eax
		call   _03827c_func
		cmp    _0963ee_data,%cl
		jne    _038483_jump
		call   _0382f8_func

	_038483_jump:
		mov    $_03835c_jump,%eax
		call   _03ca88_func

	_03848d_jump:
		call   _037964_func
		cmp    _0cf441_data,%cl
		jne    _0383ee_jump
		cmpb   $0x000000,_095de5_data
		jne    _0384c1_jump
		mov    _0cd154_data,%edx
		mov    _0ccad8_data,%eax
		call   _03827c_func
		mov    $_03835c_jump,%eax
		call   _03ca88_func

	_0384c1_jump:
		mov    _0963ec_data,%bx
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0384d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		call   _037964_func
		mov    _0cf43c_data,%dl
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		mov    _0963ee_data,%edx
		mov    _0963f0_data,%di
		sar    $0x000010,%edx
		inc    %edi
		cmp    %eax,%edx
		jge    _0385a6_jump
		mov    $0x0000a0,%ebx
		mov    _0ccae4_data,%edx
		mov    _0ccad8_data,%eax
		mov    %di,_0963f0_data
		call   _07dccc_func
		mov    $0x0000a0,%ebx
		mov    _0ccae4_data,%edx
		mov    _0ccad8_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		call   _07dccc_func
		mov    $0x000036,%eax
		call   _041c64_func
		test   %al,%al
		je     _038587_jump
		mov    $0x00002a,%eax
		call   _041c64_func
		test   %al,%al
		je     _038587_jump
		mov    _0963f4_data,%ebx
		inc    %ebx
		mov    %ebx,_0963f4_data
		cmp    $0x000005,%ebx
		jl     _03858f_jump
		mov    _0963ee_data,%bl
		xor    %esi,%esi
		xor    $0x000001,%bl
		mov    %esi,_0963f4_data
		mov    %bl,_0963ee_data
		jmp    _03858f_jump

	_038587_jump:
		xor    %edx,%edx
		mov    %edx,_0963f4_data

	_03858f_jump:
		cmpb   $0x000000,_0963ee_data
		jne    _038801_jump
		call   _0382f8_func
		jmp    _038801_jump

	_0385a6_jump:
		jne    _0385c8_jump
		mov    %di,_0963f0_data
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0963f2_data
		xor    %edx,%edx
		mov    %ah,_0963ee_data
		mov    %edx,_0963f4_data

	_0385c8_jump:
		cmpb   $0x000000,_0963ee_data
		jne    _0386d6_jump
		cmpl   $0x000014,_0963f4_data
		jl     _038601_jump
		mov    $0x000036,%eax
		call   _041c64_func
		test   %al,%al
		je     _038601_jump
		mov    $0x00002a,%eax
		call   _041c64_func
		test   %al,%al
		je     _038601_jump
		movb   $0x000001,_0963ee_data

	_038601_jump:
		mov    _0963f2_data,%si
		test   %si,%si
		jne    _0386c7_jump
		mov    _0ccae4_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _05fa30_func
		and    $0x00ffff,%eax
		mov    %eax,_0963f4_data
		call   _05fce8_func
		call   _0382f8_func
		cmpl   $0x000000,_0963f4_data
		jne    _038801_jump
		negw   _0963ec_data
		call   _037fd0_func
		mov    _0963ea_data,%edx
		mov    %al,_0963e8_data
		sar    $0x000010,%edx
		and    $_0000ff_case,%eax
		call   _05f5cc_func
		cmpw   $0x000000,_0963ec_data
		jge    _038801_jump
		mov    $0x0000a0,%ebx
		mov    _0ccae4_data,%edx
		mov    _0ccad8_data,%eax
		call   _07dccc_func
		mov    $0x0000a0,%ebx
		mov    _0ccae4_data,%edx
		mov    _0ccad8_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		call   _07dccc_func
		call   _0382f8_func
		xor    %eax,%eax
		mov    _0cf43c_data,%al
		mov    %ax,_0963f2_data
		jmp    _038801_jump

	_0386c7_jump:
		mov    %esi,%edi
		dec    %edi
		mov    %di,_0963f2_data
		jmp    _038801_jump

	_0386d6_jump:
		cmpl   $0x000000,_0963f4_data
		jne    _0386e9_jump
		cmpw   $0x000000,_0963ec_data
		jl     _038728_jump

	_0386e9_jump:
		mov    _0ccae4_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _05fa30_func
		and    $0x00ffff,%eax
		mov    %eax,_0963f4_data
		call   _05fce8_func
		cmpl   $0x000000,_0963f4_data
		jne    _038801_jump
		negw   _0963ec_data
		jmp    _0387e4_jump

	_038728_jump:
		mov    $0x0000a0,%ebx
		mov    _0ccae4_data,%edx
		mov    _0ccad8_data,%eax
		call   _07dccc_func
		mov    $0x0000a0,%ebx
		mov    _0ccae4_data,%edx
		mov    _0ccad8_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		mov    $0x00fa00,%ecx
		call   _07dccc_func
		call   _016ded_func
		call   _016ddd_func
		mov    _095de0_data,%edi
		mov    _0ccae4_data,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _038782_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_038782_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %dl,%dl

	_03878b_jump:
		mov    $0x000036,%eax
		call   _041c64_func
		test   %al,%al
		je     _0387a7_jump
		mov    $0x00002a,%eax
		call   _041c64_func
		test   %al,%al
		jne    _0387b6_jump

	_0387a7_jump:
		cmp    _0cf441_data,%dl
		je     _0387b6_jump
		call   _037964_func
		jmp    _03878b_jump

	_0387b6_jump:
		mov    _0cf441_data,%al
		xor    %ch,%ch
		xor    %ebx,%ebx
		mov    %ch,_0963ee_data
		mov    %bx,_0963f2_data
		test   %al,%al
		je     _038801_jump
		xor    %edi,%edi
		mov    $0xfffffffc,%ecx
		mov    %edi,_0963f4_data
		mov    %cx,_0963ec_data

	_0387e4_jump:
		call   _037fd0_func
		mov    _0963ea_data,%edx
		mov    %al,_0963e8_data
		sar    $0x000010,%edx
		and    $_0000ff_case,%eax
		call   _05f5cc_func

	_038801_jump:
		cmpb   $0x000000,_0cf441_data
		jne    _03886b_jump
		mov    $0x0000a0,%ebx
		mov    _0ccae4_data,%edx
		mov    _0ccad8_data,%eax
		call   _07dccc_func
		mov    $0x0000a0,%ebx
		mov    _0ccae4_data,%edx
		mov    _0ccad8_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		mov    $0x00fa00,%ecx
		call   _07dccc_func
		call   _016ded_func
		call   _016ddd_func
		mov    _095de0_data,%edi
		mov    _0ccae4_data,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _038864_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_038864_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_03886b_jump:
		cmpb   $0x000000,_0cf441_data
		sete   %al
		xor    %ah,%ah
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038880_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ah,%ah
		mov    _0cf410_data,%dl
		mov    %ah,_0963ee_data
		test   %dl,%dl
		je     _03889b_jump
		call   _072a14_func

	_03889b_jump:
		cmpb   $0x000000,_0cf444_data
		je     _0388bd_jump
		mov    $_0df1b0_data,%esi
		call   _012748_func
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a6fc_func

	_0388bd_jump:
		cmpb   $0x000000,_095de5_data
		jne    _038918_jump
		call   _037fd0_func
		mov    $0xfffffffc,%edx
		mov    _0ccae4_data,%ebx
		mov    %al,_0963e8_data
		mov    %dx,_0963ec_data
		mov    $0xfffffffc,%edx
		and    $_0000ff_case,%eax
		mov    %ebx,%ecx
		call   _05f978_func
		test   %al,%al
		je     _038918_jump
		xor    %ebx,%ebx
		mov    $_0384d0_func,%eax
		mov    %bx,_0963f0_data
		mov    %bx,_0963f2_data
		call   _03ca88_func
		call   _05f93c_case
		jmp    _03891d_jump

	_038918_jump:
		call   _038364_func

	_03891d_jump:
		cmpb   $0x000000,_0cf444_data
		je     _03895b_jump
		mov    $_0df1b4_data,%esi
		call   _012748_func
		mov    _0df1b4_data,%ebx
		mov    _0df1b0_data,%edx
		mov    _0cd2a8_data,%ecx
		sub    %edx,%ebx
		add    %ebx,%ecx
		mov    %ecx,_0cd2a8_data
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a724_func

	_03895b_jump:
		cmpb   $0x000000,_0cf410_data
		je     _038969_jump
		call   _072a28_func

	_038969_jump:
		xor    %ch,%ch
		xor    %esi,%esi
		mov    %ch,_0cf441_data
		mov    %esi,_0cc988_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038980_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    _0df1b8_data,%ecx
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		add    %eax,%eax
		mov    0x00001c(%ecx),%ebp
		call   _07f434_func
		mov    %eax,(%esp)
		test   %eax,%eax
		je     _038a9b_jump
		mov    0x000002(%ecx),%dx
		xor    %eax,%eax
		test   %dx,%dx
		jbe    _0389d6_jump

	_0389b5_jump:
		xor    %edx,%edx
		mov    %ax,%dx
		imul   $0x00006c,%edx,%ebx
		mov    (%esp),%edi
		add    %edx,%edx
		add    %edx,%edi
		mov    0x000034(%ebx,%ebp,1),%dx
		mov    %dx,(%edi)
		inc    %eax
		mov    0x000002(%ecx),%bx
		cmp    %bx,%ax
		jb     _0389b5_jump

	_0389d6_jump:
		xor    %edi,%edi
		mov    0x000002(%ecx),%ax
		mov    %edi,0x000008(%esp)
		test   %ax,%ax
		jbe    _038a94_jump

	_0389e9_jump:
		mov    0x000008(%esp),%eax
		mov    0x000002(%ecx),%di
		mov    $0xffff8000,%ebx
		cmp    %di,%ax
		jae    _038a1a_jump

	_0389fb_jump:
		xor    %edx,%edx
		mov    %ax,%dx
		mov    (%esp),%edi
		add    %edx,%edx
		add    %edi,%edx
		mov    (%edx),%di
		cmp    %di,%bx
		jge    _038a13_jump
		mov    %edi,%ebx
		mov    %eax,%esi

	_038a13_jump:
		inc    %eax
		cmp    0x000002(%ecx),%ax
		jb     _0389fb_jump

	_038a1a_jump:
		mov    0x000008(%esp),%ebx
		cmp    %bx,%si
		je     _038a7e_jump
		xor    %edx,%edx
		mov    %bx,%dx
		imul   $0x00006c,%edx,%ebx
		mov    0x000068(%ebx,%ebp,1),%ax
		mov    %eax,0x00000c(%esp)
		xor    %eax,%eax
		mov    %si,%ax
		mov    %eax,0x000004(%esp)
		imul   $0x00006c,%eax,%eax
		mov    0x000068(%eax,%ebp,1),%di
		mov    %di,0x000068(%ebx,%ebp,1)
		mov    0x00000c(%esp),%ebx
		mov    %bx,0x000068(%eax,%ebp,1)
		lea    0x000000(,%edx,2),%eax
		add    (%esp),%eax
		mov    (%eax),%dx
		mov    %edx,0x00000c(%esp)
		mov    0x000004(%esp),%edx
		mov    (%esp),%ebx
		add    %edx,%edx
		mov    (%edx,%ebx,1),%bx
		mov    %bx,(%eax)
		add    (%esp),%edx
		mov    0x00000c(%esp),%eax
		mov    %ax,(%edx)

	_038a7e_jump:
		mov    0x000008(%esp),%edx
		inc    %edx
		mov    0x000002(%ecx),%bx
		mov    %edx,0x000008(%esp)
		cmp    %bx,%dx
		jb     _0389e9_jump

	_038a94_jump:
		mov    %esp,%eax
		call   _07f44c_func

	_038a9b_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038aa8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x000140,%eax
		mov    _0df1b8_data,%edi
		mov    %eax,%edx
		movzbl (%edi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %al,0x000008(%esp)
		mov    $0x0000c8,%eax
		mov    %eax,%edx
		movzbl 0x000001(%edi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00001c(%edi),%ecx
		mov    %al,0x00000c(%esp)
		call   _010010_func
		movw   $0x000000,0x000004(%edi)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _038b00_jump
		mov    %ebx,%eax

	_038b00_jump:
		mov    %ax,0x000006(%edi)
		test   %si,%si
		jl     _038b19_jump
		mov    $0x000001,%eax
		movswl %si,%ebx
		cmp    %ebx,%eax
		jge    _038b17_jump
		mov    %ebx,%eax

	_038b17_jump:
		jmp    _038b2b_jump

	_038b19_jump:
		movswl %si,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _038b29_jump
		mov    %ebx,%eax

	_038b29_jump:
		neg    %eax

	_038b2b_jump:
		mov    0x000002(%edi),%dx
		xor    %esi,%esi
		mov    %ax,0x000008(%edi)
		test   %dx,%dx
		jbe    _038ce1_jump

	_038b3e_jump:
		xor    %ebx,%ebx
		mov    %si,%bx
		movzbl (%edi),%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		imul   %eax,%edx
		mov    %edx,(%esp)
		mov    (%esp),%edx
		mov    %dx,0x000004(%esp)
		xor    %edx,%edx
		mov    0x000004(%esp),%dx
		mov    %edx,0x00000c(%ecx)
		add    %edx,%eax
		mov    %edx,(%ecx)
		dec    %eax
		mov    %ebx,%edx
		mov    %eax,0x000024(%ecx)
		sar    $0x00001f,%edx
		mov    %eax,0x000018(%ecx)
		mov    %ebx,%eax
		movzbl (%edi),%ebp
		idiv   %ebp
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   %eax,%edx
		xor    %ebx,%ebx
		mov    %dx,%bx
		movl   $0x000200,0x00002c(%ecx)
		add    %ebx,%eax
		mov    %ebx,0x000028(%ecx)
		dec    %eax
		mov    %eax,0x00001c(%ecx)
		mov    %eax,0x000010(%ecx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x000020(%ecx)
		mov    %eax,0x000014(%ecx)
		mov    %eax,0x000008(%ecx)
		mov    0x000004(%esp),%eax
		mov    %ebx,0x000004(%ecx)
		cmp    $0x0000a0,%ax
		jae    _038bc8_jump
		mov    0x000014(%edi),%eax
		mov    %eax,0x00003c(%ecx)
		jmp    _038bdd_jump

	_038bc8_jump:
		mov    0x000004(%esp),%ebx
		mov    0x000018(%edi),%eax
		sub    $0x0000a0,%ebx
		mov    %eax,0x00003c(%ecx)
		mov    %bx,0x000004(%esp)

	_038bdd_jump:
		mov    0x000004(%esp),%al
		mov    %al,0x000062(%ecx)
		mov    %al,0x000060(%ecx)
		add    0x000008(%esp),%al
		dec    %al
		mov    %al,0x000066(%ecx)
		mov    $0x00000a,%ebx
		mov    %al,0x000064(%ecx)
		mov    0x00000c(%esp),%al
		mov    %dl,0x000067(%ecx)
		add    %dl,%al
		mov    %dl,0x000061(%ecx)
		dec    %al
		xor    %edx,%edx
		mov    %al,0x000065(%ecx)
		mov    %si,%dx
		mov    %al,0x000063(%ecx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000005,%edx
		jge    _038c30_jump
		call   _080b8d_func
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		jmp    _038c44_jump

	_038c30_jump:
		call   _080b8d_func
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000002,%edx

	_038c44_jump:
		mov    %dx,0x000030(%ecx)
		call   _080b8d_func
		mov    %eax,%edx
		mov    $0x000008,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000006,%edx
		mov    %dx,0x000032(%ecx)
		call   _080b8d_func
		mov    %eax,%edx
		mov    $0x000005,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000002,%edx
		mov    %dx,0x000034(%ecx)
		call   _080b8d_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x000002,%edx
		mov    %dl,0x000039(%ecx)
		call   _080b8d_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x000002,%edx
		mov    %dl,0x00003a(%ecx)
		call   _080b8d_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000039(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		mov    %al,0x000036(%ecx)
		mov    0x00003a(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		add    $0x000002,%edx
		mov    %dl,0x00003b(%ecx)
		mov    %al,0x000037(%ecx)
		mov    0x00003b(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		mov    %si,0x000068(%ecx)
		mov    %al,0x000038(%ecx)
		inc    %esi
		mov    0x000002(%edi),%bx
		add    $0x00006c,%ecx
		cmp    %bx,%si
		jb     _038b3e_jump

	_038ce1_jump:
		call   _038980_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx

	_038cee_jump:
		ret    

	_038cf0_case:
		mov    _0df1b8_data,%eax
		test   %eax,%eax
		je     _038cee_jump
		cmpl   $0x000000,0x00001c(%eax)
		je     _038d07_jump
		add    $0x00001c,%eax
		call   _07f44c_func

	_038d07_jump:
		cmpl   $0x000000,_0df1b8_data
		je     _038cee_jump
		mov    $_0df1b8_data,%eax
		jmp    _07f44c_func



_038d1c_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,%edi
		mov    %bx,0x000008(%esp)
		mov    %ecx,(%esp)
		mov    0x000018(%esp),%edx
		xor    %cl,%cl
		test   %edx,%edx
		je     _038dd6_jump
		cmpl   $0x000000,0x00001c(%esp)
		je     _038dd6_jump
		mov    $0x000020,%eax
		call   _07f434_func
		mov    %eax,%edx
		mov    %eax,_0df1b8_data
		test   %eax,%eax
		je     _038dd6_jump
		xor    %ebx,%ebx
		mov    %eax,%esi
		mov    0x000004(%esp),%bx
		mov    $0x000002,%eax
		cmp    %ebx,%eax
		jge    _038d71_jump
		mov    %ebx,%eax

	_038d71_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    $0x000001,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _038d83_jump
		mov    %ebx,%eax

	_038d83_jump:
		xor    %bh,%bh
		mov    %al,0x000001(%edx)
		mov    (%edx),%bl
		xor    %ah,%ah
		imul   %eax,%ebx
		mov    0x000018(%esp),%eax
		mov    %bx,0x000002(%edx)
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%edx)
		mov    0x00001c(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		call   _07f434_func
		mov    %eax,0x00001c(%edx)
		test   %eax,%eax
		je     _038dd6_jump
		mov    _0ccad8_data,%eax
		mov    %eax,0x000014(%edx)
		add    $0x00c800,%eax
		mov    $0x000001,%cl
		mov    %eax,0x000018(%edx)

	_038dd6_jump:
		test   %cl,%cl
		je     _038e13_jump
		mov    $0x0000a0,%ebx
		mov    0x000014(%esi),%edx
		mov    0x00000c(%esi),%eax
		call   _07dc80_func
		mov    $0x0000a0,%ebx
		mov    0x00000c(%esi),%eax
		mov    0x000018(%esi),%edx
		add    $0x0000a0,%eax
		call   _07dc80_func
		xor    %edx,%edx
		mov    0x000006(%esp),%eax
		mov    (%esp),%dx
		sar    $0x000010,%eax
		call   _038aa8_func
		jmp    _038e18_jump

	_038e13_jump:
		call   _038cf0_case

	_038e18_jump:
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_038e24_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		mov    _0df1b8_data,%eax
		mov    %eax,0x000010(%esp)
		mov    0x00001c(%eax),%ecx
		mov    0x000006(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _038e45_jump
		neg    %eax

	_038e45_jump:
		mov    %al,0x00002c(%esp)
		mov    0x000010(%esp),%eax
		xor    %edx,%edx
		mov    0x000002(%eax),%bx
		mov    %edx,0x000020(%esp)
		test   %bx,%bx
		jbe    _039080_jump

	_038e60_jump:
		mov    (%ecx),%eax
		add    0x000018(%ecx),%eax
		sar    %eax
		mov    0x00001c(%ecx),%ebx
		mov    %eax,0x000004(%esp)
		mov    0x000004(%ecx),%eax
		add    %ebx,%eax
		sar    %eax
		mov    0x000020(%ecx),%esi
		mov    %eax,0x00001c(%esp)
		mov    0x000008(%ecx),%eax
		xor    %bl,%bl
		add    %esi,%eax
		mov    %bl,0x000030(%esp)
		sar    %eax
		mov    %bl,0x000034(%esp)
		mov    %eax,0x000018(%esp)

	_038e91_jump:
		xor    %dl,%dl
		cmpb   $0x000000,0x00002c(%esp)
		jbe    _038eee_jump

	_038e9a_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    0x00002e(%ecx),%ebx
		sar    $0x000010,%ebx
		add    %ebx,(%ecx,%eax,1)
		mov    0x000030(%ecx),%ebx
		mov    0x000004(%ecx,%eax,1),%esi
		sar    $0x000010,%ebx
		add    %ebx,%esi
		mov    0x000008(%ecx,%eax,1),%edi
		mov    %esi,0x000004(%ecx,%eax,1)
		cmp    $0x000032,%edi
		jge    _038ecb_jump
		movw   $0x000000,0x000034(%ecx)

	_038ecb_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    0x000032(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    0x000008(%ecx,%eax,1),%edi
		inc    %dl
		add    %ebx,%edi
		mov    0x00002c(%esp),%bl
		mov    %edi,0x000008(%ecx,%eax,1)
		cmp    %bl,%dl
		jb     _038e9a_jump

	_038eee_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x00000c,%eax,%eax
		lea    (%eax,%ecx,1),%esi
		mov    0x000004(%esp),%edi
		mov    (%esi),%eax
		mov    0x000018(%esp),%edx
		sub    %edi,%eax
		mov    0x000004(%esi),%ebp
		mov    %eax,(%esp)
		mov    0x00001c(%esp),%eax
		lea    0x000028(%esp),%ebx
		sub    %eax,%ebp
		xor    %eax,%eax
		mov    0x000008(%esi),%esi
		mov    0x000038(%ecx),%al
		sub    %edx,%esi
		add    %eax,%eax
		lea    0x000024(%esp),%edx
		cwtl   
		call   _05d2ac_func
		mov    0x000026(%esp),%eax
		mov    (%esp),%edi
		sar    $0x000010,%eax
		imul   %eax,%edi
		mov    0x000022(%esp),%ebx
		mov    %ebp,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		imul   %eax,%ebp
		sub    %edx,%edi
		imul   (%esp),%ebx
		xor    %eax,%eax
		mov    0x000037(%ecx),%al
		add    %eax,%eax
		sar    $0x000009,%edi
		cwtl   
		lea    0x000024(%esp),%edx
		add    %ebx,%ebp
		lea    0x000028(%esp),%ebx
		mov    %edi,(%esp)
		call   _05d2ac_func
		mov    0x000022(%esp),%ebx
		mov    %esi,%edi
		sar    $0x000010,%ebx
		imul   %ebx,%edi
		mov    0x000026(%esp),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		imul   %esi,%eax
		imul   (%esp),%ebx
		add    %edx,%edi
		mov    %eax,%esi
		xor    %eax,%eax
		lea    0x000024(%esp),%edx
		mov    0x000036(%ecx),%al
		sub    %ebx,%esi
		add    %eax,%eax
		lea    0x000028(%esp),%ebx
		cwtl   
		sar    $0x000009,%esi
		call   _05d2ac_func
		mov    0x000022(%esp),%ebx
		mov    %esi,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		imul   %eax,%esi
		sar    $0x000009,%ebp
		imul   %ebp,%ebx
		mov    %edx,0x000008(%esp)
		mov    %ebp,%edx
		imul   %eax,%edx
		mov    0x000018(%esp),%ebp
		sub    %ebx,%esi
		mov    %edx,0x00000c(%esp)
		mov    0x000008(%esp),%edx
		sar    $0x000009,%esi
		add    0x00000c(%esp),%edx
		mov    %edi,%eax
		mov    %edx,0x000014(%esp)
		mov    %edi,%edx
		add    %ebp,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		xor    %ebx,%ebx
		mov    0x000004(%esp),%edx
		mov    0x000034(%esp),%bl
		add    %edx,%eax
		mov    %eax,0x000040(%ecx,%ebx,4)
		mov    0x000014(%esp),%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		mov    0x00001c(%esp),%esi
		add    %esi,%eax
		mov    %eax,0x000044(%ecx,%ebx,4)
		mov    0x000030(%esp),%al
		inc    %al
		mov    %al,0x000030(%esp)
		mov    %bl,%ah
		add    $0x000002,%ah
		mov    %ah,0x000034(%esp)
		cmp    $0x000004,%al
		jb     _038e91_jump
		mov    0x00002c(%esp),%al
		mulb   0x000039(%ecx)
		mov    0x000036(%ecx),%dh
		mov    0x00003a(%ecx),%bl
		add    %al,%dh
		mov    0x00002c(%esp),%al
		mul    %bl
		mov    %dh,0x000036(%ecx)
		mov    0x000037(%ecx),%bh
		mov    0x00003b(%ecx),%dl
		add    %al,%bh
		mov    0x00002c(%esp),%al
		mul    %dl
		mov    0x000038(%ecx),%dh
		add    $0x00006c,%ecx
		add    %al,%dh
		mov    0x000020(%esp),%esi
		mov    %dh,-0x000034(%ecx)
		mov    0x000010(%esp),%edx
		mov    %bh,-0x000035(%ecx)
		inc    %esi
		mov    0x000002(%edx),%di
		mov    %esi,0x000020(%esp)
		cmp    %di,%si
		jb     _038e60_jump

	_039080_jump:
		mov    0x000010(%esp),%eax
		cmpw   $0x000014,0x000004(%eax)
		jbe    _0390d8_jump
		xor    %edx,%edx
		mov    0x000004(%eax),%dx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _0390d8_jump
		mov    0x000010(%esp),%ebx
		mov    0x000010(%esp),%eax
		xor    %edx,%edx
		mov    0x000002(%ebx),%cx
		mov    0x00001c(%eax),%eax
		test   %cx,%cx
		jbe    _0390d8_jump

	_0390b7_jump:
		xor    %ebx,%ebx
		mov    0x000032(%eax),%si
		mov    0x00002c(%esp),%bl
		add    %ebx,%esi
		mov    0x000010(%esp),%ebx
		mov    %si,0x000032(%eax)
		inc    %edx
		mov    0x000002(%ebx),%di
		add    $0x00006c,%eax
		cmp    %di,%dx
		jb     _0390b7_jump

	_0390d8_jump:
		xor    %ah,%ah
		mov    0x000010(%esp),%edx
		mov    0x00002c(%esp),%al
		mov    0x000004(%edx),%bx
		add    %eax,%ebx
		mov    0x000006(%edx),%cx
		mov    %bx,0x000004(%edx)
		cmp    %cx,%bx
		jbe    _0390fb_jump
		movw   $0x000000,0x000004(%edx)

	_0390fb_jump:
		mov    0x000010(%esp),%eax
		mov    0x000004(%eax),%ax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039110_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0df1b8_data,%ecx
		mov    0x00001c(%ecx),%edi
		xor    %ebx,%ebx
		mov    %edi,%edx
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		cmp    %eax,%ebx
		jl     _039132_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_039132_jump:
		xor    %eax,%eax
		mov    0x000068(%edx),%ax
		imul   $0x00006c,%eax,%eax
		add    %edi,%eax
		lea    0x00003c(%eax),%esi
		add    $0x00006c,%edx
		mov    0x000010(%ecx),%eax
		inc    %ebx
		call   _010045_func
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		cmp    %eax,%ebx
		jl     _039132_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039160_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi

	_039167_jump:
		movswl %si,%edx
		imul   $0x0000d8,%edx,%edx
		mov    $_0cbf28_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _0391d8_jump
		mov    $0x000002,%cl
		mov    $0x0000bc,%edi
		mov    %cl,_0cbffc_data(%edx)
		xor    %al,%al
		mov    %di,_0cbffa_data(%edx)
		mov    %al,_0cbffd_data(%edx)
		mov    %al,_0cbffe_data(%edx)
		movw   $0x000096,_0cbff8_data(%edx)
		mov    $0x000005,%ch
		mov    %ebx,%eax
		mov    %ch,_0cbfff_data(%edx)
		call   _01ed18_func
		mov    _0cbff0_data(%edx),%bx
		mov    %bx,_0cbff8_data(%edx)
		movb   $0x000020,_0cbf28_data(%edx)
		jmp    _0391e0_jump

	_0391d8_jump:
		xor    %ah,%ah
		mov    %ah,_0cbffd_data(%edx)

	_0391e0_jump:
		inc    %esi
		cmp    $0x000009,%si
		jle    _039167_jump
		mov    $_0000ff_case,%bh
		mov    %bh,_0cf451_data
		mov    %bh,_0cf44d_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0391fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cc7a0_data,%edx
		mov    _0cc7a4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _039277_jump

	_039213_jump:
		cmpw   $0x0000ee,0x000060(%edx)
		jne    _03926b_jump
		mov    0x000081(%edx),%cl
		test   $0x000004,%cl
		jne    _03926b_jump
		mov    %cl,%ch
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ch
		mov    %edx,%eax
		mov    %ch,0x000081(%edx)
		call   _01f3d4_func
		movw   $0x000008,0x000040(%edx)
		mov    0x000081(%edx),%al
		movw   $0x000000,0x000042(%edx)
		or     $0x000008,%al
		mov    %al,0x000081(%edx)
		mov    0x000034(%edx),%ax
		movb   $0x000000,0x00006b(%edx)
		mov    %ax,_0cf214_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03926b_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _039213_jump

	_039277_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03927c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0000ff_case,%ah
		mov    _0cf425_data,%dl
		mov    %ah,_0cf451_data
		test   %dl,%dl
		jne    _039299_jump
		mov    %dl,_0ca8c5_data

	_039299_jump:
		xor    %bl,%bl
		mov    %bl,_0cf448_data
		call   _01eb78_func
		mov    _0cf282_data,%si
		cmp    $0x000002,%si
		jb     _0392c8_jump
		jbe    _039795_jump
		cmp    $0x000003,%si
		je     _03994a_jump
		jmp    _039b05_jump

	_0392c8_jump:
		cmp    $0x000001,%si
		jne    _039b05_jump
		mov    _0cf270_data,%si
		cmp    $0x000008,%si
		jb     _0392f4_jump
		jbe    _03948d_jump
		cmp    $0x000011,%si
		je     _03960b_jump
		jmp    _039b05_jump

	_0392f4_jump:
		cmp    $0x000003,%si
		jne    _039b05_jump
		mov    $0x000001,%ah
		mov    $_0cbf28_data,%edi
		mov    _0c2908_data,%esi
		mov    %ah,_0cf448_data
		push   %edi

	_039312_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03932a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039312_jump

	_03932a_jump:
		pop    %edi
		mov    $_0cc000_data,%edi
		mov    _0c290c_data,%esi
		push   %edi

	_039337_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03934f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039337_jump

	_03934f_jump:
		pop    %edi
		mov    $_0cc0d8_data,%edi
		mov    _0c2910_data,%esi
		push   %edi

	_03935c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039374_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03935c_jump

	_039374_jump:
		pop    %edi
		mov    $_0cc1b0_data,%edi
		mov    _0c2914_data,%esi
		push   %edi

	_039381_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039399_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039381_jump

	_039399_jump:
		pop    %edi
		mov    $_0cc288_data,%edi
		mov    _0c2918_data,%esi
		push   %edi

	_0393a6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0393be_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0393a6_jump

	_0393be_jump:
		pop    %edi
		mov    $_0cc360_data,%edi
		mov    _0c291c_data,%esi
		push   %edi

	_0393cb_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0393e3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0393cb_jump

	_0393e3_jump:
		pop    %edi
		mov    $_0cc438_data,%edi
		mov    _0c2920_data,%esi
		push   %edi

	_0393f0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039408_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0393f0_jump

	_039408_jump:
		pop    %edi
		mov    $_0cc510_data,%edi
		mov    _0c2924_data,%esi
		push   %edi

	_039415_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03942d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039415_jump

	_03942d_jump:
		pop    %edi
		mov    $_0cc5e8_data,%edi
		mov    _0c2928_data,%esi
		push   %edi

	_03943a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039452_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03943a_jump

	_039452_jump:
		pop    %edi
		mov    $_0cc6c0_data,%edi
		mov    _0c292c_data,%esi
		mov    $_0000ff_case,%ebx
		push   %edi

	_039464_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03947c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039464_jump

	_03947c_jump:
		pop    %edi
		mov    _0c3f68_data,%edx
		mov    $_0cc510_data,%eax
		jmp    _039afd_jump

	_03948d_jump:
		mov    $0x000001,%al
		mov    $_0cbf28_data,%edi
		mov    _0c2930_data,%esi
		mov    %al,_0cf448_data
		push   %edi

	_0394a0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0394b8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0394a0_jump

	_0394b8_jump:
		pop    %edi
		mov    $_0cc000_data,%edi
		mov    _0c2934_data,%esi
		push   %edi

	_0394c5_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0394dd_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0394c5_jump

	_0394dd_jump:
		pop    %edi
		mov    $_0cc0d8_data,%edi
		mov    _0c2938_data,%esi
		push   %edi

	_0394ea_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039502_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0394ea_jump

	_039502_jump:
		pop    %edi
		mov    $_0cc1b0_data,%edi
		mov    _0c293c_data,%esi
		push   %edi

	_03950f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039527_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03950f_jump

	_039527_jump:
		pop    %edi
		mov    $_0cc288_data,%edi
		mov    _0c2940_data,%esi
		push   %edi

	_039534_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03954c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039534_jump

	_03954c_jump:
		pop    %edi
		mov    $_0cc360_data,%edi
		mov    _0c2944_data,%esi
		push   %edi

	_039559_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039571_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039559_jump

	_039571_jump:
		pop    %edi
		mov    $_0cc438_data,%edi
		mov    _0c2948_data,%esi
		push   %edi

	_03957e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039596_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03957e_jump

	_039596_jump:
		pop    %edi
		mov    $_0cc510_data,%edi
		mov    _0c294c_data,%esi
		push   %edi

	_0395a3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0395bb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0395a3_jump

	_0395bb_jump:
		pop    %edi
		mov    $_0cc5e8_data,%edi
		mov    _0c2950_data,%esi
		push   %edi

	_0395c8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0395e0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0395c8_jump

	_0395e0_jump:
		pop    %edi
		mov    $_0cc6c0_data,%edi
		mov    _0c2954_data,%esi
		push   %edi

	_0395ed_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039605_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0395ed_jump

	_039605_jump:
		pop    %edi
		jmp    _039b05_jump

	_03960b_jump:
		mov    $0x000001,%ch
		mov    $_0cbf28_data,%edi
		mov    _0c2958_data,%esi
		mov    %ch,_0cf448_data
		push   %edi

	_03961f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039637_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03961f_jump

	_039637_jump:
		pop    %edi
		mov    $_0cc000_data,%edi
		mov    _0c295c_data,%esi
		push   %edi

	_039644_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03965c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039644_jump

	_03965c_jump:
		pop    %edi
		mov    $_0cc0d8_data,%edi
		mov    _0c2960_data,%esi
		push   %edi

	_039669_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039681_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039669_jump

	_039681_jump:
		pop    %edi
		mov    $_0cc1b0_data,%edi
		mov    _0c2964_data,%esi
		push   %edi

	_03968e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0396a6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03968e_jump

	_0396a6_jump:
		pop    %edi
		mov    $_0cc288_data,%edi
		mov    _0c2968_data,%esi
		push   %edi

	_0396b3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0396cb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0396b3_jump

	_0396cb_jump:
		pop    %edi
		mov    $_0cc360_data,%edi
		mov    _0c296c_data,%esi
		push   %edi

	_0396d8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0396f0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0396d8_jump

	_0396f0_jump:
		pop    %edi
		mov    $_0cc438_data,%edi
		mov    _0c2970_data,%esi
		push   %edi

	_0396fd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039715_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0396fd_jump

	_039715_jump:
		pop    %edi
		mov    $_0cc510_data,%edi
		mov    _0c2974_data,%esi
		push   %edi

	_039722_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03973a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039722_jump

	_03973a_jump:
		pop    %edi
		mov    $_0cc5e8_data,%edi
		mov    _0c2978_data,%esi
		push   %edi

	_039747_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03975f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039747_jump

	_03975f_jump:
		pop    %edi
		mov    $_0cc6c0_data,%edi
		mov    _0c297c_data,%esi
		mov    $_0000ff_case,%ebx
		push   %edi

	_039771_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039789_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039771_jump

	_039789_jump:
		pop    %edi
		mov    _0c3f68_data,%edx
		jmp    _039af8_jump

	_039795_jump:
		mov    _0cf270_data,%dx
		cmp    $0x00000b,%dx
		jne    _039b05_jump
		mov    $0x000001,%cl
		mov    $_0cbf28_data,%edi
		mov    _0c2980_data,%esi
		mov    %cl,_0cf448_data
		push   %edi

	_0397ba_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0397d2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0397ba_jump

	_0397d2_jump:
		pop    %edi
		mov    $_0cc000_data,%edi
		mov    _0c2984_data,%esi
		push   %edi

	_0397df_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0397f7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0397df_jump

	_0397f7_jump:
		pop    %edi
		mov    $_0cc0d8_data,%edi
		mov    _0c2988_data,%esi
		push   %edi

	_039804_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03981c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039804_jump

	_03981c_jump:
		pop    %edi
		mov    $_0cc1b0_data,%edi
		mov    _0c298c_data,%esi
		push   %edi

	_039829_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039841_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039829_jump

	_039841_jump:
		pop    %edi
		mov    $_0cc288_data,%edi
		mov    _0c2990_data,%esi
		push   %edi

	_03984e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039866_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03984e_jump

	_039866_jump:
		pop    %edi
		mov    $_0cc360_data,%edi
		mov    _0c2994_data,%esi
		push   %edi

	_039873_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03988b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039873_jump

	_03988b_jump:
		pop    %edi
		mov    $_0cc438_data,%edi
		mov    _0c2998_data,%esi
		push   %edi

	_039898_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0398b0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039898_jump

	_0398b0_jump:
		pop    %edi
		mov    $_0cc510_data,%edi
		mov    _0c299c_data,%esi
		push   %edi

	_0398bd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0398d5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0398bd_jump

	_0398d5_jump:
		pop    %edi
		mov    $_0cc5e8_data,%edi
		mov    _0c29a0_data,%esi
		push   %edi

	_0398e2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0398fa_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0398e2_jump

	_0398fa_jump:
		pop    %edi
		mov    $_0cc6c0_data,%edi
		mov    _0c29a4_data,%esi
		mov    $_0000ff_case,%ebx
		push   %edi

	_03990c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039924_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03990c_jump

	_039924_jump:
		pop    %edi
		mov    _0c3f66_data,%edx
		mov    $_0cc5e8_data,%eax
		sar    $0x000010,%edx
		call   _01ef8c_func
		mov    $_0000ff_case,%ebx
		mov    _0c3f66_data,%edx
		mov    %edi,%eax
		jmp    _039afd_jump

	_03994a_jump:
		mov    _0cf270_data,%dx
		cmp    $0x00000b,%dx
		jne    _039b05_jump
		mov    $0x000001,%bh
		mov    $_0cbf28_data,%edi
		mov    _0c29a8_data,%esi
		mov    %bh,_0cf448_data
		push   %edi

	_03996f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039987_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03996f_jump

	_039987_jump:
		pop    %edi
		mov    $_0cc000_data,%edi
		mov    _0c29ac_data,%esi
		push   %edi

	_039994_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0399ac_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039994_jump

	_0399ac_jump:
		pop    %edi
		mov    $_0cc0d8_data,%edi
		mov    _0c29b0_data,%esi
		push   %edi

	_0399b9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0399d1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0399b9_jump

	_0399d1_jump:
		pop    %edi
		mov    $_0cc1b0_data,%edi
		mov    _0c29b4_data,%esi
		push   %edi

	_0399de_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0399f6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0399de_jump

	_0399f6_jump:
		pop    %edi
		mov    $_0cc288_data,%edi
		mov    _0c29b8_data,%esi
		push   %edi

	_039a03_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039a1b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039a03_jump

	_039a1b_jump:
		pop    %edi
		mov    $_0cc360_data,%edi
		mov    _0c29bc_data,%esi
		push   %edi

	_039a28_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039a40_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039a28_jump

	_039a40_jump:
		pop    %edi
		mov    $_0cc438_data,%edi
		mov    _0c29c0_data,%esi
		push   %edi

	_039a4d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039a65_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039a4d_jump

	_039a65_jump:
		pop    %edi
		mov    $_0cc510_data,%edi
		mov    _0c29c4_data,%esi
		push   %edi

	_039a72_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039a8a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039a72_jump

	_039a8a_jump:
		pop    %edi
		mov    $_0cc5e8_data,%edi
		mov    _0c29c8_data,%esi
		push   %edi

	_039a97_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039aaf_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039a97_jump

	_039aaf_jump:
		pop    %edi
		mov    $_0cc6c0_data,%edi
		mov    _0c29cc_data,%esi
		mov    $_0000ff_case,%ebx
		push   %edi

	_039ac1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039ad9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039ac1_jump

	_039ad9_jump:
		pop    %edi
		mov    _0c3f6c_data,%edx
		mov    $_0cc510_data,%eax
		sar    $0x000010,%edx
		call   _01ef8c_func
		mov    $_0000ff_case,%ebx
		mov    _0c3f6c_data,%edx

	_039af8_jump:
		mov    $_0cc5e8_data,%eax

	_039afd_jump:
		sar    $0x000010,%edx
		call   _01ef8c_func

	_039b05_jump:
		cmpb   $0x000000,_0cf448_data
		je     _039b18_jump
		call   _039160_func
		call   _0391fc_func

	_039b18_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039b20_func:
		push   %ebx
		xor    %ebx,%ebx
		mov    0x00007f(%eax),%bl
		cmp    %dx,%bx
		jge    _039b34_jump
		mov    %bl,%dl
		inc    %dl
		mov    %dl,0x00007f(%eax)
		pop    %ebx
		ret    

	_039b34_jump:
		movb   $0x000000,0x00007f(%eax)
		incb   _0cf451_data
		pop    %ebx
		ret    

_039b40_switch:
		.long   _039c62_case
		.long   _039b71_case
		.long   _039bc9_case
		.long   _039bf6_case
		.long   _039c17_case




_039b54_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x00007d(%eax),%al
		cmp    $0x000004,%al
		ja     _039c62_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_039b40_switch(,%eax,4)

	_039b71_case:
		mov    $0x000064,%edx
		mov    %ecx,%eax
		call   _039b20_func
		mov    _0cf451_data,%bl
		cmp    $0x000005,%bl
		je     _039ba8_jump
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0cbf28_data(,%eax,8)
		jne    _039c69_jump

	_039ba8_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _060460_func
		movb   $0x000000,0x00007d(%ecx)
		mov    $_0000ff_case,%al
		movb   $0x000000,0x00007f(%ecx)
		mov    %al,_0cf451_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_039bc9_case:
		mov    $0x00006e,%edx
		mov    %ecx,%eax
		call   _039b20_func
		cmpb   $0x000007,_0cf451_data
		jne    _039c69_jump
		movb   $0x000003,0x00007d(%ecx)
		mov    $_0000ff_case,%dh
		movb   $0x000000,0x00007f(%ecx)
		mov    %dh,_0cf451_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_039bf6_case:
		mov    0x00007f(%ecx),%bh
		inc    %bh
		mov    %bh,0x00007f(%ecx)
		cmp    $0x000032,%bh
		jbe    _039c69_jump
		movb   $0x000004,0x00007d(%ecx)
		mov    $0x000007,%ah
		movb   $0x000000,0x00007f(%ecx)
		mov    %ah,_0cf451_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_039c17_case:
		cmpb   $0x000000,_0cf3ef_data
		sete   %al
		xor    %ah,%ah
		dec    %eax
		mov    _0cf451_data,%dh
		mov    %ax,0x000042(%ecx)
		cmp    $0x000009,%dh
		jae    _039c69_jump
		xor    %eax,%eax
		mov    %dh,%al
		lea    0x000001(%eax),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0cbf28_data(,%eax,8)
		je     _039c69_jump
		mov    $0x000078,%edx
		mov    %ecx,%eax
		call   _039b20_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_039c62_case:
		movb   $_0000ff_case,_0cf451_data

	_039c69_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039c70_func:
		push   %edx
		mov    _0cf270_data,%dx
		mov    _0cf282_data,%ax
		cmp    $0x000002,%ax
		jb     _039c8e_jump
		jbe    _039cbd_jump
		cmp    $0x000003,%ax
		je     _039ccc_jump
		jmp    _039cd9_jump

	_039c8e_jump:
		cmp    $0x000001,%ax
		jne    _039cd9_jump
		cmp    $0x000003,%dx
		jne    _039ca1_jump
		orb    $0x000001,_0cf220_data

	_039ca1_jump:
		cmp    $0x000008,%dx
		jne    _039cae_jump
		orb    $0x000002,_0cf220_data

	_039cae_jump:
		cmp    $0x000011,%dx
		jne    _039cd9_jump
		orb    $0x000080,_0cf220_data
		jmp    _039cd9_jump

	_039cbd_jump:
		cmp    $0x00000b,%dx
		jne    _039cd9_jump
		orb    $0x000004,_0cf220_data
		jmp    _039cd9_jump

	_039ccc_jump:
		cmp    $0x00000b,%dx
		jne    _039cd9_jump
		orb    $0x000001,_0cf221_data

	_039cd9_jump:
		mov    %dx,_0cf270_data
		pop    %edx
		ret    

_039ce4_switch:
		.long   _039d43_case
		.long   _039df7_case
		.long   _039e15_case
		.long   _039e15_case
		.long   _039e6c_case
		.long   _039ef0_case
		.long   _039e92_case




_039d00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    _0cf212_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		mov    _0cf451_data,%al
		mov    %al,(%esp)
		mov    0x00006c(%esi),%al
		cmp    $0x000006,%al
		ja     _039ef0_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_039ce4_switch(,%eax,4)

	_039d43_case:
		mov    0x00007b(%esi),%bl
		test   %bl,%bl
		je     _039de8_jump
		xor    %eax,%eax
		mov    _0ce06c_data,%edx
		mov    _0ce0ac_data,%al
		mov    0x000028(%esi),%ebx
		add    %edx,%eax
		sub    %ebx,%eax
		add    $0x000002,%eax
		test   %eax,%eax
		jge    _039d6b_jump
		neg    %eax

	_039d6b_jump:
		cmp    $0x000003,%eax
		jge    _039dee_jump
		mov    _0ce0b1_data,%al
		cmp    $0x000001,%al
		je     _039da0_jump
		test   %al,%al
		je     _039da0_jump
		cmp    $0x000003,%al
		jne    _039d8e_jump
		cmpb   $0x000014,_0ce0b0_data
		je     _039da0_jump

	_039d8e_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _039dee_jump
		cmpb   $0x000015,_0ce0b0_data
		jne    _039dee_jump

	_039da0_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01d434_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		mov    $0x000022,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		mov    _0ce0c5_data,%al
		mov    $0xffff8300,%ebx
		or     $0x000008,%al
		mov    %bx,_0cf256_data
		mov    %al,_0ce0c5_data
		jmp    _039dee_jump

	_039de8_jump:
		mov    %bl,_0cf466_data

	_039dee_jump:
		movb   $0x000000,0x00007d(%esi)
		jmp    _039ef0_case

	_039df7_case:
		cmpb   $_0000ff_case,(%esp)
		jne    _039ef0_case
		xor    %dh,%dh
		movb   $0x000001,0x00007d(%esi)
		mov    %dh,_0cf451_data
		mov    %dh,0x00007f(%esi)
		jmp    _039ef0_case

	_039e15_case:
		mov    _0ce0b1_data,%ah
		cmp    $0x000001,%ah
		je     _039e32_jump
		test   %ah,%ah
		je     _039e32_jump
		cmp    $0x000003,%ah
		jne    _039e46_jump
		cmpb   $0x000022,_0ce0b0_data
		jne    _039e46_jump

	_039e32_jump:
		mov    $0x000023,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func

	_039e46_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _039ef0_case
		cmpb   $0x000024,_0ce0b0_data
		jne    _039ef0_case
		movb   $_0000ff_case,_0ce0af_data
		jmp    _039ef0_case

	_039e6c_case:
		mov    %esi,%eax
		call   _01cca0_func
		test   %al,%al
		je     _039e8d_jump
		call   _039c70_func
		movb   $0x000002,0x00007d(%esi)
		mov    $0x000005,%al
		movb   $0x000000,0x00007f(%esi)
		mov    %al,_0cf451_data
		jmp    _039ef0_case

	_039e8d_jump:
		mov    %al,0x00007d(%esi)
		jmp    _039ef0_case

	_039e92_case:
		cmpb   $0x000003,_0ce0b1_data
		jne    _039eb3_jump
		cmpb   $0x000024,_0ce0b0_data
		jne    _039eb3_jump
		mov    $0x000025,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func

	_039eb3_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _039ef0_case
		cmpb   $0x000014,_0ce0b0_data
		jne    _039ef0_case
		mov    _0ce06c_data,%ax
		mov    0x00007d(%esi),%bh
		mov    %ax,_0cf256_data
		cmp    $0x000004,%bh
		jne    _039ef0_case
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x008300,_0cf256_data

	_039ef0_case:
		mov    %esi,%eax
		call   _039b54_func
		mov    _0cf451_data,%al
		mov    (%esp),%ah
		cmp    %ah,%al
		je     _039fb5_jump
		mov    $0x000001,%dl
		mov    %ah,_0cf44d_data
		mov    %dl,_0cf449_data
		cmp    $_0000ff_case,%al
		je     _039fb5_jump
		mov    0x000081(%ecx),%bl
		or     $0x000004,%bl
		mov    0x000024(%ecx),%esi
		mov    %bl,0x000081(%ecx)
		test   %esi,%esi
		jne    _039f3a_jump
		mov    %ecx,%eax
		call   _01f3d4_func

	_039f3a_jump:
		mov    _0cf2ac_data,%esi
		xor    %eax,%eax
		sar    $0x000010,%esi
		mov    0x000068(%ecx),%al
		movw   $0x000000,0x00005e(%ecx)
		sub    %eax,%esi
		mov    _0cf2ae_data,%eax
		mov    %esi,0x000028(%ecx)
		sar    $0x000010,%eax
		movzbl 0x000069(%ecx),%esi
		add    $0x0000be,%eax
		movb   $0x000000,0x00006b(%ecx)
		sub    %esi,%eax
		mov    %eax,0x00002c(%ecx)
		xor    %eax,%eax
		mov    0x000081(%ecx),%bh
		mov    0x000068(%ecx),%al
		or     $0x000008,%bh
		mov    %eax,%esi
		mov    %ax,0x000036(%ecx)
		xor    %eax,%eax
		neg    %esi
		mov    0x000069(%ecx),%al
		mov    %si,0x000036(%ecx)
		mov    $0x0000be,%esi
		mov    %bh,0x000081(%ecx)
		sub    %eax,%esi
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    (%esp),%al
		mov    %si,0x000038(%ecx)
		mov    %al,_0cf44d_data

	_039fb5_jump:
		cmpb   $0x000000,_0cf449_data
		je     _039ff8_jump
		xor    %eax,%eax
		mov    _0cf44d_data,%al
		lea    0x000000(,%eax,8),%esi
		sub    %eax,%esi
		shl    $0x000002,%esi
		sub    %eax,%esi
		shl    $0x000003,%esi
		mov    _0cbffa_data(%esi),%di
		cmp    $0x0000dc,%di
		jge    _039ff0_jump
		mov    %edi,%eax
		inc    %eax
		mov    %ax,_0cbffa_data(%esi)
		jmp    _039ff8_jump

	_039ff0_jump:
		xor    %ah,%ah
		mov    %ah,_0cf449_data

	_039ff8_jump:
		testb  $0x000004,0x000081(%ecx)
		je     _03a036_jump
		mov    0x000028(%ecx),%edi
		mov    0x000036(%ecx),%dx
		add    $0x000004,%edi
		add    $0x000004,%edx
		mov    %edi,0x000028(%ecx)
		mov    %dx,0x000036(%ecx)
		cmp    $0x000136,%dx
		jle    _03a036_jump
		movl   $0x000000,0x000024(%ecx)
		mov    0x000081(%ecx),%dh
		movb   $0x000000,0x00006b(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)

	_03a036_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a040_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    0x00006c(%eax),%dl
		test   %dl,%dl
		jne    _03a0d3_jump
		mov    _0ce0b1_data,%bl
		cmp    $0x000002,%bl
		jne    _03a07e_jump
		mov    $0x000001,%ch
		xor    %dh,%dh
		xor    %ebx,%ebx
		mov    %dx,_0ce084_data
		mov    %bx,_0ce096_data
		mov    %ch,_0cf466_data
		mov    %bx,_0cf250_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03a07e_jump:
		cmp    $0x000001,%bl
		je     _03a095_jump
		test   %bl,%bl
		je     _03a095_jump
		cmp    $0x000003,%bl
		jne    _03a0db_jump
		cmpb   $0x000014,_0ce0b0_data
		jne    _03a0db_jump

	_03a095_jump:
		xor    %edx,%edx
		mov    0x000028(%eax),%ax
		mov    _0ce0ac_data,%dl
		sub    $0x000002,%eax
		sub    %edx,%eax
		mov    _0ce06c_data,%dh
		mov    %ax,_0cf256_data
		test   $0x000001,%dh
		je     _03a0c0_jump
		orb    $0x000001,_0cf256_data
		jmp    _03a0c7_jump

	_03a0c0_jump:
		andb   $0x0000fe,_0cf256_data

	_03a0c7_jump:
		xor    %cl,%cl
		mov    %cl,_0cf466_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03a0d3_jump:
		xor    %dh,%dh
		mov    %dh,_0cf466_data

	_03a0db_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a0e0_func:
		push   %ecx
		push   %edi
		mov    _0ccae4_data,%edi
		mov    %edi,_09645c_data
		cld    
		xor    %eax,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		xor    %eax,%eax
		pop    %edi
		pop    %ecx
		ret    



_03a100_func:
		push   %edx
		xor    %edx,%edx
		mov    %edx,_09645c_data
		pop    %edx
		ret    



_03a158_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    $0x000011,%ebx
		xor    %edx,%edx
		call   _07fcc0_func
		mov    $0x00003c,%ah
		mov    $0x000300,%ebx
		movl   $0x000140,0x000004(%ecx)
		mov    _09645c_data,%edi
		movl   $0x0000c8,0x000008(%ecx)
		mov    %ah,_096450_data
		mov    %edi,(%ecx)
		mov    _0cf43c_data,%cl
		mov    %ah,_0cf43c_data
		mov    $0x00003c,%eax
		mov    %cl,_0963f8_data
		call   _03c0d4_jump
		mov    _095de0_data,%edi
		xor    %edx,%edx
		cld    
		xor    %eax,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    $_0df1c0_data,%eax
		call   _07fcc0_func
		xor    %eax,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a1cc_func:
		mov    _0963f8_data,%al
		mov    %al,_0cf43c_data
		xor    %eax,%eax
		mov    _0cf43c_data,%al
		jmp    _03c0d4_jump



_03a1e4_func:
		mov    0x000004(%eax),%eax
		ret    



_03a1e8_func:
		mov    0x000008(%eax),%eax
		ret    



_03a1ec_func:
		imul   0x000004(%eax),%ebx
		mov    (%eax),%eax
		add    %ebx,%edx
		mov    %cl,(%edx,%eax,1)
		ret    



_03a1f8_func:
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %ecx,%esi
		mov    0x00000c(%esp),%ecx
		mov    %edx,%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    (%edi),%edi
		add    %eax,%edi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _03a21c_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_03a21c_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _03a225_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_03a225_jump:
		pop    %edi
		pop    %esi
		ret    $0x000004



_03a22c_func:
		push   %edi
		mov    %eax,%edi
		mov    %edx,%eax
		mov    0x000008(%esp),%edx
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    (%edi),%edi
		add    %eax,%edi
		xor    %eax,%eax
		mov    %edx,%ebx
		mov    %cl,%al
		cld    
		mov    %ebx,%ecx
		and    $0x000003,%ecx
		je     _03a253_jump
		rep stos %al,%es:(%edi)

	_03a253_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _03a268_jump
		mov    %eax,%ebx
		mov    %al,%ah
		mov    %bl,%bh
		shl    $0x000010,%eax
		mov    %bx,%ax
		rep stos %eax,%es:(%edi)

	_03a268_jump:
		pop    %edi
		ret    $0x000004



_03a26c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %cx,(%esp)
		mov    %edx,%eax
		mov    0x000014(%esp),%edx
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    (%esi),%esi
		add    %edx,%edx
		add    %eax,%esi
		xor    %eax,%eax
		mov    %edx,%ebp
		mov    0x000001(%esp),%al
		sar    %edx
		mov    %eax,%ebx
		xor    %eax,%eax
		shl    $0x000008,%ebx
		mov    (%esp),%al
		mov    %esi,%edi
		add    %ebx,%eax
		mov    %edx,%ebx
		and    $0x000001,%ebp
		cld    
		mov    %eax,%ecx
		shl    $0x000010,%eax
		mov    %cx,%ax
		mov    %ebx,%ecx
		and    $0x000001,%ecx
		je     _03a2be_jump
		rep stos %ax,%es:(%edi)

	_03a2be_jump:
		mov    %ebx,%ecx
		shr    %ecx
		je     _03a2c6_jump
		rep stos %eax,%es:(%edi)

	_03a2c6_jump:
		test   %ebp,%ebp
		je     _03a2cf_jump
		mov    (%esp),%al
		mov    %al,(%esi)

	_03a2cf_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_03a2d8_func:
		push   %esi
		push   %edi
		mov    %edx,%esi
		lea    (%edx,%ecx,1),%edi
		cmp    %edi,%edx
		jge    _03a328_jump
		lea    0x000000(,%edx,4),%eax
		lea    0x000000(,%edi,4),%ecx
		sub    %edx,%eax
		sub    %edi,%ecx

	_03a2f5_jump:
		xor    %edx,%edx
		mov    (%ebx),%dl
		sar    $0x000002,%edx
		mov    %dl,_0df1c0_data(%eax)
		xor    %edx,%edx
		mov    0x000001(%ebx),%dl
		sar    $0x000002,%edx
		mov    %dl,_0df1c1_data(%eax)
		xor    %edx,%edx
		mov    0x000002(%ebx),%dl
		add    $0x000003,%eax
		sar    $0x000002,%edx
		add    $0x000003,%ebx
		mov    %dl,_0df1bf_data(%eax)
		cmp    %ecx,%eax
		jl     _03a2f5_jump

	_03a328_jump:
		cmp    _096454_data,%esi
		jge    _03a336_jump
		mov    %esi,_096454_data

	_03a336_jump:
		cmp    _096458_data,%edi
		jle    _03a344_jump
		mov    %edi,_096458_data

	_03a344_jump:
		pop    %edi
		pop    %esi
		ret    



_03a348_func:
		push   %esi
		push   %edi
		mov    %edx,%esi
		lea    (%edx,%ecx,1),%edi
		cmp    %edi,%edx
		jge    _03a389_jump
		lea    0x000000(,%edx,4),%eax
		lea    0x000000(,%edi,4),%ecx
		sub    %edx,%eax
		sub    %edi,%ecx

	_03a365_jump:
		mov    (%ebx),%dl
		mov    %dl,_0df1c0_data(%eax)
		mov    0x000001(%ebx),%dl
		mov    %dl,_0df1c1_data(%eax)
		add    $0x000003,%eax
		mov    0x000002(%ebx),%dl
		add    $0x000003,%ebx
		mov    %dl,_0df1bf_data(%eax)
		cmp    %ecx,%eax
		jl     _03a365_jump

	_03a389_jump:
		cmp    _096454_data,%esi
		jge    _03a397_jump
		mov    %esi,_096454_data

	_03a397_jump:
		cmp    _096458_data,%edi
		jle    _03a3a5_jump
		mov    %edi,_096458_data

	_03a3a5_jump:
		pop    %edi
		pop    %esi
		ret    



_03a3a8_func:
		push   %edx
		mov    $0x000043,%edx
		movl   $0x001200,(%eax)
		mov    $0x000034,%al
		out    %al,(%dx)
		mov    $0x000040,%edx
		xor    %al,%al
		out    %al,(%dx)
		out    %al,(%dx)
		xor    %eax,%eax
		pop    %edx
		ret    



_03a3c4_func:
		push   %edx
		mov    $0x000036,%al
		mov    $0x000043,%edx
		out    %al,(%dx)
		mov    $0x000040,%edx
		xor    %al,%al
		out    %al,(%dx)
		out    %al,(%dx)
		pop    %edx
		ret    



_03a3d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00001c,%esp
		mov    %esp,%ebx
		xor    %ah,%ah
		mov    %esp,%edx
		mov    %ah,0x000001(%esp)
		mov    $0x00001a,%eax
		call   _080bc1_func
		mov    $0x000043,%edx
		xor    %al,%al
		out    %al,(%dx)
		mov    $0x000040,%edx
		xor    %ecx,%ecx
		sub    %eax,%eax
		in     (%dx),%al
		sub    %eax,%eax
		in     (%dx),%al
		mov    0x00000c(%esp),%cl
		xor    %edx,%edx
		mov    %al,%bl
		mov    0x00000d(%esp),%dl
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x000008(%esp),%al
		add    %ecx,%edx
		shl    $0x000018,%eax
		shl    $0x000008,%edx
		neg    %bl
		add    %edx,%eax
		xor    %edx,%edx
		mov    %bl,%dl
		add    %edx,%eax
		add    $0x00001c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a438_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		imul   (%edx),%eax
		mov    $0x0003e8,%ecx
		xor    %edx,%edx
		div    %ecx
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _03a3d8_func
		add    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_03a458_func:
		push   %ebx
		mov    %eax,%ebx
		push   $0x000200
		push   %edx
		call   _080bde_func
		add    $0x000008,%esp
		mov    %eax,(%ebx)
		test   %eax,%eax
		jge    _03a476_jump
		mov    $0xfffffffb,%eax
		pop    %ebx
		ret    

	_03a476_jump:
		xor    %eax,%eax
		pop    %ebx
		ret    



_03a47c_func:
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%eax
		mov    %ebx,%edx
		mov    %ebx,(%esp)
		mov    %esp,%ebx
		mov    %ds,%ecx
		push   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _080e50_func
		test   %eax,%eax
		je     _03a4a1_jump
		mov    $0xfffffffa,%eax

	_03a4a1_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		ret    



_03a4a8_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    %ebx,%esi
		mov    (%edx),%edi
		test   %ebx,%ebx
		je     _03a4dc_jump

	_03a4b6_jump:
		cmp    $0x00fff0,%esi
		jbe    _03a4c5_jump
		mov    $0x00fff0,%ecx
		jmp    _03a4c7_jump

	_03a4c5_jump:
		mov    %esi,%ecx

	_03a4c7_jump:
		mov    %ecx,%ebx
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _03a47c_func
		test   %eax,%eax
		jl     _03a4de_jump
		add    %ecx,%edi
		sub    %ecx,%esi
		jne    _03a4b6_jump

	_03a4dc_jump:
		xor    %eax,%eax

	_03a4de_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03a4e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cf418_data,%ah
		cmp    $0x000004,%ah
		jne    _03a4fe_jump
		xor    %bl,%bl
		mov    %bl,_0963f9_data
		jmp    _03a51c_jump

	_03a4fe_jump:
		cmp    $0x000005,%ah
		jae    _03a50c_jump
		mov    $0xfffffff3,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03a50c_jump:
		mov    _0cf40a_data,%dh
		test   %dh,%dh
		sete   %al
		mov    %al,_0963f9_data

	_03a51c_jump:
		mov    $0x000018,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07fcc0_func
		lea    0x000011(%ecx),%eax
		call   _03a3a8_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03a55e_jump
		call   _03a0e0_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03a556_jump
		mov    %ecx,%eax
		call   _03a158_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03a556_jump
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03a556_jump:
		lea    0x000011(%ecx),%eax
		call   _03a3c4_func

	_03a55e_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a564_func:
		push   %edx
		mov    %eax,%edx
		call   _03a1cc_func
		lea    0x000011(%edx),%eax
		call   _03a3c4_func
		call   _03a100_func
		cmpb   $0x000000,_0cf444_data
		je     _03a591_jump
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a710_func

	_03a591_jump:
		pop    %edx
		ret    



_03a594_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %ebx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    $0x000100,%ebx
		xor    %ebp,%ebp
		mov    (%eax),%si
		mov    %ebp,_096458_data
		mov    %ebx,_096454_data
		mov    %esi,0x000008(%esp)
		lea    0x000002(%eax),%esi

	_03a5be_jump:
		mov    0x000008(%esp),%edx
		dec    %edx
		mov    %edx,0x000008(%esp)
		test   %dx,%dx
		jl     _03a5f7_jump
		inc    %esi
		xor    %eax,%eax
		movzbl (%esi),%edi
		mov    -0x000001(%esi),%al
		inc    %esi
		add    %eax,%ebp
		test   %edi,%edi
		jne    _03a5e1_jump
		mov    $0x000100,%edi

	_03a5e1_jump:
		mov    (%esp),%eax
		mov    %edi,%ecx
		mov    %esi,%ebx
		mov    %ebp,%edx
		call   *0x000004(%esp)
		lea    (%edi,%edi,2),%eax
		add    %eax,%esi
		add    %edi,%ebp
		jmp    _03a5be_jump

	_03a5f7_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03a600_func:
		push   %ecx
		mov    $_03a2d8_func,%ecx
		call   _03a594_func
		pop    %ecx
		ret    



_03a610_func:
		push   %ecx
		mov    $_03a348_func,%ecx
		call   _03a594_func
		pop    %ecx
		ret    



_03a620_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %edx,%edi
		xor    %edx,%edi
		xor    %ecx,%ecx
		mov    0x00000a(%edx),%di
		mov    0x000008(%edx),%cx
		mov    %edi,0x000004(%esp)
		mov    0x00008c(%edx),%edi
		add    %ecx,%edi
		mov    0x000090(%edx),%ebp
		mov    %edi,0x000008(%esp)

	_03a654_jump:
		mov    0x000004(%esp),%edx
		dec    %edx
		mov    %edx,0x000004(%esp)
		test   %edx,%edx
		jl     _03a6db_jump
		mov    (%esp),%edi
		xor    %ah,%ah
		inc    %esi
		mov    %ah,0x000010(%esp)
		mov    0x00008c(%edi),%edi

	_03a675_jump:
		mov    0x00000d(%esp),%ecx
		sar    $0x000018,%ecx
		add    %ecx,%edi
		cmp    0x000008(%esp),%edi
		jge    _03a6d5_jump
		mov    (%esi),%cl
		inc    %esi
		mov    %cl,0x000010(%esp)
		test   %cl,%cl
		jl     _03a6ab_jump
		mov    0x00000d(%esp),%ecx
		mov    0x00000c(%esp),%eax
		sar    $0x000018,%ecx
		mov    %ebp,%ebx
		push   %ecx
		xor    %ecx,%ecx
		mov    %edi,%edx
		mov    (%esi),%cl
		inc    %esi
		call   _03a22c_func
		jmp    _03a675_jump

	_03a6ab_jump:
		mov    %cl,%dh
		neg    %dh
		mov    %dh,0x000010(%esp)
		mov    0x00000d(%esp),%ecx
		mov    0x00000c(%esp),%eax
		sar    $0x000018,%ecx
		mov    %ebp,%ebx
		push   %ecx
		mov    %edi,%edx
		mov    %esi,%ecx
		call   _03a1f8_func
		mov    0x00000d(%esp),%ecx
		sar    $0x000018,%ecx
		add    %ecx,%esi
		jmp    _03a675_jump

	_03a6d5_jump:
		inc    %ebp
		jmp    _03a654_jump

	_03a6db_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03a6e4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %ebx,0x000004(%esp)
		lea    0x000004(%eax),%esi
		mov    0x00008c(%edx),%ecx
		movswl (%eax),%ebp
		add    $0x000002,%eax
		mov    %ecx,(%esp)
		mov    0x000090(%edx),%edx
		mov    (%eax),%ax
		add    %edx,%ebp
		mov    %eax,0x00000c(%esp)

	_03a710_jump:
		mov    0x00000c(%esp),%edx
		dec    %edx
		mov    %edx,0x00000c(%esp)
		test   %dx,%dx
		jl     _03a7c7_jump
		mov    (%esp),%edi
		mov    (%esi),%al
		inc    %esi
		mov    %al,0x000010(%esp)
		test   %al,%al
		jbe    _03a7c1_jump

	_03a734_jump:
		mov    0x000001(%esi),%al
		inc    %esi
		xor    %ecx,%ecx
		mov    %al,0x000014(%esp)
		mov    -0x000001(%esi),%cl
		inc    %esi
		add    %ecx,%edi
		test   %al,%al
		jge    _03a782_jump
		mov    %al,%bh
		neg    %bh
		mov    %bh,0x000014(%esp)
		mov    0x000011(%esp),%eax
		mov    %edi,%edx
		sar    $0x000018,%eax
		mov    %ebp,%ebx
		mov    %eax,0x000008(%esp)
		mov    %eax,%ecx
		push   %eax
		xor    %eax,%ecx
		mov    0x000008(%esp),%eax
		mov    (%esi),%cl
		inc    %esi
		call   _03a22c_func
		mov    0x000010(%esp),%cl
		mov    0x000008(%esp),%eax
		dec    %cl
		add    %eax,%edi
		mov    %cl,0x000010(%esp)
		jmp    _03a7b6_jump

	_03a782_jump:
		mov    0x000011(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%ebx
		sar    $0x000018,%eax
		mov    %edi,%edx
		push   %eax
		mov    %eax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		call   _03a1f8_func
		mov    0x000008(%esp),%ebx
		mov    0x000011(%esp),%ecx
		add    %ebx,%edi
		mov    0x000010(%esp),%bl
		sar    $0x000018,%ecx
		dec    %bl
		add    %ecx,%esi
		mov    %bl,0x000010(%esp)

	_03a7b6_jump:
		cmpb   $0x000000,0x000010(%esp)
		ja     _03a734_jump

	_03a7c1_jump:
		inc    %ebp
		jmp    _03a710_jump

	_03a7c7_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03a7d0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %ebx,0x00000c(%esp)
		mov    0x00008c(%edx),%ecx
		mov    %ecx,0x000008(%esp)
		mov    0x000090(%edx),%ecx
		mov    0x000008(%edx),%dx
		mov    0x000008(%esp),%ebx
		and    $0x00ffff,%edx
		add    %ebx,%edx
		dec    %edx
		mov    %ecx,0x000004(%esp)
		mov    %edx,(%esp)
		mov    (%eax),%dx
		lea    0x000002(%eax),%esi
		mov    %edx,0x000014(%esp)
		jmp    _03a820_jump

	_03a80f_jump:
		mov    0x00000e(%esp),%edx
		mov    0x000004(%esp),%edi
		sar    $0x000010,%edx
		sub    %edx,%edi
		mov    %edi,0x000004(%esp)

	_03a820_jump:
		mov    (%esi),%ax
		add    $0x000002,%esi
		mov    %ax,0x000010(%esp)
		test   %ax,%ax
		jge    _03a874_jump
		testb  $0x000040,0x000011(%esp)
		jne    _03a80f_jump
		mov    (%esp),%ebx
		mov    0x00000c(%esp),%eax
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    0x000004(%esp),%cl
		mov    0x000010(%esp),%dl
		call   _03a1ec_func
		mov    (%esi),%ax
		add    $0x000002,%esi
		mov    %ax,0x000010(%esp)
		test   %ax,%ax
		jne    _03a874_jump
		incl   0x000004(%esp)
		mov    0x000014(%esp),%ecx
		dec    %ecx
		mov    %ecx,0x000014(%esp)
		test   %cx,%cx
		jmp    _03a914_jump

	_03a874_jump:
		mov    0x000008(%esp),%ebp

	_03a878_jump:
		inc    %esi
		xor    %edx,%edx
		movsbl (%esi),%edi
		mov    -0x000001(%esi),%dl
		inc    %esi
		add    %edi,%edi
		add    %edx,%ebp
		test   %edi,%edi
		jl     _03a8d0_jump
		mov    0x000004(%esp),%ebx
		mov    0x00000c(%esp),%eax
		push   %edi
		mov    %esi,%ecx
		mov    %ebp,%edx
		add    %edi,%ebp
		add    %edi,%esi
		mov    0x000014(%esp),%edi
		call   _03a1f8_func
		dec    %di
		mov    %di,0x000010(%esp)
		jne    _03a878_jump
		mov    0x000004(%esp),%eax
		mov    0x000014(%esp),%edx
		inc    %eax
		dec    %edx
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000014(%esp)
		test   %dx,%dx
		jg     _03a820_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_03a8d0_jump:
		neg    %edi
		mov    0x000004(%esp),%ebx
		mov    %edi,%edx
		mov    0x00000c(%esp),%eax
		sar    %edx
		mov    (%esi),%cx
		push   %edx
		mov    %ebp,%edx
		add    $0x000002,%esi
		call   _03a26c_func
		mov    0x000010(%esp),%eax
		add    %edi,%ebp
		dec    %ax
		mov    %ax,0x000010(%esp)
		jne    _03a878_jump
		mov    0x000004(%esp),%ebp
		mov    0x000014(%esp),%ebx
		inc    %ebp
		dec    %ebx
		mov    %ebp,0x000004(%esp)
		mov    %ebx,0x000014(%esp)
		test   %bx,%bx

	_03a914_jump:
		jg     _03a820_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03a924_func:
		push   %ecx
		push   %edi
		mov    (%ebx),%edi
		cld    
		xor    %eax,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		pop    %edi
		pop    %ecx
		ret    



_03a938_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    (%ebx),%ebx
		mov    0x000094(%edx),%edi
		xor    %esi,%esi
		xor    %ecx,%ecx
		mov    0x00000a(%edx),%si
		mov    0x000008(%edx),%cx
		add    %ebx,%edi
		mov    %esi,%ebx
		mov    %ecx,%edx
		mov    %eax,%esi
		cld    
		pusha  
		mov    $0x000140,%ebp
		sub    %edx,%ebp
		mov    %edx,%eax
		and    $0x000003,%eax
		shr    $0x000002,%edx

	_03a968_jump:
		mov    %edx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebp,%edi
		dec    %ebx
		jne    _03a968_jump
		popa   
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03a97c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000080(%eax),%eax
		mov    $0x000099,%ebx
		call   _080e81_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _07fcc0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a9a0_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    $0x000099,%ebx
		xor    %edx,%edx
		call   _07fcc0_func
		lea    0x000080(%ecx),%eax
		mov    %esi,%edx
		call   _03a458_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03aad8_jump
		mov    $0x000080,%ebx
		mov    %ecx,%edx
		mov    0x000080(%ecx),%eax
		call   _03a47c_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03aad1_jump
		movl   $0x000000,0x000084(%ecx)
		mov    _0963f9_data,%ah
		mov    %esi,0x000088(%ecx)
		test   %ah,%ah
		setne  %al
		mov    0x000008(%ecx),%dx
		mov    %al,_0963fa_data
		cmp    $0x000140,%dx
		ja     _03aacc_jump
		cmpw   $0x0000c8,0x00000a(%ecx)
		ja     _03aacc_jump
		mov    0x000004(%ecx),%si
		cmp    $0x00af12,%si
		jne    _03aa5b_jump
		mov    (%ecx),%ebx
		cmp    $0x00000c,%ebx
		jne    _03aa45_jump
		movl   $0x00001e,0x000010(%ecx)
		mov    $0x000001,%dh
		mov    %ebx,0x000050(%ecx)
		mov    %dh,_096451_data

	_03aa45_jump:
		mov    0x000050(%ecx),%edx
		mov    0x000080(%ecx),%eax
		xor    %ebx,%ebx
		call   _080e86_func
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03aa5b_jump:
		cmp    $0x00af11,%si
		jne    _03aaba_jump
		mov    (%ecx),%edx
		cmp    $0x00000c,%edx
		jne    _03aa8c_jump
		mov    0x000080(%ecx),%eax
		mov    %edx,0x000050(%ecx)
		xor    %ebx,%ebx
		mov    0x000050(%ecx),%edx
		movl   $0x000005,0x000010(%ecx)
		call   _080e86_func
		movb   $0x000001,_096451_data
		jmp    _03aa93_jump

	_03aa8c_jump:
		movl   $0x000080,0x000050(%ecx)

	_03aa93_jump:
		mov    0x000010(%ecx),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000046,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,0x000010(%ecx)
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03aaba_jump:
		mov    $0xfffffff5,%edx
		mov    %ecx,%eax
		call   _03a97c_func
		mov    %edx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03aacc_jump:
		mov    $0xfffffffd,%edx

	_03aad1_jump:
		mov    %ecx,%eax
		call   _03a97c_func

	_03aad8_jump:
		mov    %edx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_03aae0_switch:
		.long   _03ab5b_case
		.long   _03abe1_case
		.long   _03abe1_case
		.long   _03ab92_case
		.long   _03abe1_case
		.long   _03abe1_case
		.long   _03abe1_case
		.long   _03ab5b_case
		.long   _03ab92_case
		.long   _03abb9_case
		.long   _03abe1_case
		.long   _03abc7_case
		.long   _03abd5_case




_03ab14_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		mov    %edx,(%esp)
		mov    %ebx,%esi
		mov    %ecx,%ebp
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ah,_096452_data
		mov    %edx,0x000004(%esp)
		jmp    _03abe5_jump

	_03ab36_jump:
		mov    %esi,%eax
		mov    0x000004(%eax),%cx
		mov    (%esi),%edx
		sub    $0x000004,%ecx
		add    %edx,%esi
		cmp    $0x00000c,%cx
		ja     _03abe1_case
		and    $0x00ffff,%ecx
		jmp    *%cs:_03aae0_switch(,%ecx,4)

	_03ab5b_case:
		cmpb   $0x000000,_0963fa_data
		je     _03ab6b_jump
		movb   $0x000001,_096452_data

	_03ab6b_jump:
		mov    0x000004(%eax),%bx
		lea    0x000006(%eax),%ecx
		cmp    $0x000004,%bx
		jne    _03ab85_jump
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _03a600_func
		jmp    _03abe1_case

	_03ab85_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _03a610_func
		jmp    _03abe1_case

	_03ab92_case:
		mov    0x000004(%eax),%dx
		lea    0x000006(%eax),%ecx
		cmp    $0x000007,%dx
		jne    _03abac_jump
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _03a7d0_func
		jmp    _03abe1_case

	_03abac_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _03a6e4_func
		jmp    _03abe1_case

	_03abb9_case:
		add    $0x000006,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _03a924_func
		jmp    _03abe1_case

	_03abc7_case:
		add    $0x000006,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _03a620_func
		jmp    _03abe1_case

	_03abd5_case:
		add    $0x000006,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _03a938_func

	_03abe1_case:
		incl   0x000004(%esp)

	_03abe5_jump:
		mov    (%esp),%eax
		mov    0x000004(%eax),%eax
		mov    0x000004(%esp),%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jg     _03ab36_jump
		cmpb   $0x000000,0x000098(%edi)
		jbe    _03ad53_jump
		cmpb   $0x000000,_0cf444_data
		je     _03ad53_jump
		cmpb   $0x000002,_0963fb_data
		je     _03ad53_jump
		mov    _0963f9_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		je     _03ad53_jump
		call   _029530_func
		mov    _0963fd_data,%cl
		test   %cl,%cl
		je     _03ad41_jump
		cmpb   $0x000000,_0963fb_data
		jne    _03ad13_jump
		mov    _0963f9_data,%edx
		sar    $0x000018,%edx
		shl    $0x000004,%edx
		mov    0x000084(%edi),%ebx
		cmp    _096408_data(%edx),%ebx
		jl     _03ace1_jump
		cmp    _09640c_data(%edx),%ebx
		jge    _03ace1_jump
		lea    0x000014(%esp),%edx
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		movzbl %al,%esi
		push   %edx
		mov    %esi,%eax
		lea    0x00000c(%esp),%edx
		call   _02a19c_func
		cmp    $0x000100,%ax
		jne    _03ad01_jump
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		shl    $0x000010,%edx
		shl    $0x000008,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000014(%esp),%dl
		add    %eax,%edx
		mov    _0963f9_data,%eax
		sar    $0x000018,%eax
		shl    $0x000004,%eax
		cmp    _096400_data(%eax),%edx
		jl     _03ad01_jump
		mov    %esi,%eax
		mov    $0x000001,%bl
		call   _02a6fc_func
		mov    %bl,_0963fb_data
		add    %bl,_0963fc_data
		jmp    _03ad01_jump

	_03ace1_jump:
		mov    _0963f9_data,%edx
		sar    $0x000018,%edx
		shl    $0x000004,%edx
		mov    0x000084(%edi),%eax
		cmp    _09640c_data(%edx),%eax
		jne    _03ad01_jump
		incb   _0963fc_data

	_03ad01_jump:
		cmpb   $0x000005,_0963fc_data
		jne    _03ad5a_jump
		movb   $_0000ff_case,_0963fc_data
		jmp    _03ad5a_jump

	_03ad13_jump:
		mov    _0963f9_data,%ebx
		sar    $0x000018,%ebx
		shl    $0x000004,%ebx
		mov    0x000084(%edi),%edx
		cmp    _096404_data(%ebx),%edx
		jl     _03ad5a_jump
		and    $_0000ff_case,%eax
		xor    %dl,%dl
		call   _02a724_func
		mov    %dl,_0963fb_data
		jmp    _03ad5a_jump

	_03ad41_jump:
		and    $_0000ff_case,%eax
		call   _02a724_func
		mov    %cl,_0963fb_data
		jmp    _03ad5a_jump

	_03ad53_jump:
		movb   $0x000001,_0963fb_data

	_03ad5a_jump:
		cmpb   $0x000000,_0963fa_data
		je     _03adae_jump
		cmpl   $0x000001,0x000084(%edi)
		je     _03ad7d_jump

	_03ad6c_jump:
		mov    0x000028(%esp),%eax
		call   _03a3d8_func
		cmp    _096464_data,%eax
		jbe    _03ad6c_jump

	_03ad7d_jump:
		call   _016ded_func
		call   _016ddd_func
		cmpb   $0x000000,_0963f9_data
		je     _03ad9b_jump
		mov    0x000028(%esp),%edx
		mov    $0x00003c,%eax
		jmp    _03ada4_jump

	_03ad9b_jump:
		mov    0x000028(%esp),%edx
		mov    $0x00007d,%eax

	_03ada4_jump:
		call   _03a438_func
		mov    %eax,_096464_data

	_03adae_jump:
		cmpb   $0x000000,_0963fa_data
		je     _03ae28_jump
		cmpb   $0x000001,_096452_data
		jne    _03ade1_jump
		mov    $_0df1c0_data,%esi
		pusha  
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		popa   

	_03ade1_jump:
		mov    _095de0_data,%eax
		mov    0x000094(%edi),%esi
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00000a(%edi),%bx
		mov    0x000008(%edi),%dx
		add    %esi,%eax
		mov    0x000000(%ebp),%esi
		mov    0x000094(%edi),%ebp
		mov    %eax,%edi
		add    %ebp,%esi
		cld    
		pusha  
		mov    $0x000140,%ebp
		sub    %edx,%ebp
		mov    %edx,%eax
		and    $0x000003,%eax
		shr    $0x000002,%edx

	_03ae18_jump:
		mov    %edx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebp,%esi
		add    %ebp,%edi
		dec    %ebx
		jne    _03ae18_jump
		popa   

	_03ae28_jump:
		cmpb   $0x000000,_0963f9_data
		je     _03ae3a_jump
		movb   $0x000001,_0963fa_data
		jmp    _03ae41_jump

	_03ae3a_jump:
		xorb   $0x000001,_0963fa_data

	_03ae41_jump:
		xor    %eax,%eax
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_03ae4c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    %ebx,%edi
		mov    0x000084(%eax),%edx
		inc    %edx
		mov    $0x000010,%ebx
		mov    %edx,0x000084(%eax)
		mov    %esp,%edx
		mov    0x000080(%eax),%eax
		call   _03a47c_func
		test   %eax,%eax
		jl     _03aed5_jump
		cmpw   $0x00f1fa,0x000004(%esp)
		jne    _03aed0_jump
		mov    (%esp),%eax
		sub    $0x000010,%eax
		test   %eax,%eax
		jle    _03aec2_jump
		mov    _0ccad8_data,%edx
		mov    %edx,0x000010(%esp)
		mov    %eax,%ebx
		mov    0x000080(%esi),%ebp
		lea    0x000010(%esp),%edx
		mov    %ebp,%eax
		call   _03a4a8_func
		test   %eax,%eax
		jl     _03aed5_jump
		mov    0x000010(%esp),%ebx
		push   %edi
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _03ab14_func
		jmp    _03aed5_jump

	_03aec2_jump:
		mov    %esp,%edx
		push   %edi
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _03ab14_func
		jmp    _03aed5_jump

	_03aed0_jump:
		mov    $0xfffffffc,%eax

	_03aed5_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03aee0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    0x000008(%eax),%dx
		mov    %ebx,%eax
		call   _03a1e4_func
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %edx,%edx
		mov    %eax,0x00008c(%ecx)
		mov    %ebx,%eax
		mov    0x00000a(%ecx),%dx
		call   _03a1e8_func
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,0x000090(%ecx)
		mov    %eax,%ebx
		mov    0x00008c(%ecx),%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    %eax,0x000094(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_03af40_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		xor    %ah,%ah
		mov    0x000098(%esi),%dl
		mov    %ah,_0963fb_data
		test   %dl,%dl
		jbe    _03afa8_jump
		cmpb   $0x000000,_0cf444_data
		je     _03afa8_jump
		call   _029530_func
		and    $_0000ff_case,%eax
		xor    %edx,%edx
		call   _02a710_func
		mov    0x000098(%esi),%dl
		call   _029530_func
		and    $_0000ff_case,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		call   _02a604_func
		call   _029530_func
		and    $_0000ff_case,%eax
		mov    $0x000001,%bl
		call   _02a6fc_func
		mov    %bl,_0963fb_data

	_03afa8_jump:
		lea    0x000011(%edi),%ebp
		xor    %bh,%bh
		xor    %ecx,%ecx
		mov    %bh,_0963fc_data
		jmp    _03affb_jump

	_03afb7_jump:
		call   _0420e8_func
		call   _041e58_func
		test   %ax,%ax
		jne    _03afe4_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _03afe4_jump
		call   _041f70_func
		test   %ax,%ax
		jne    _03afe4_jump
		call   _041ffc_func
		test   %ax,%ax
		je     _03afe8_jump

	_03afe4_jump:
		xor    %eax,%eax
		jmp    _03b008_jump

	_03afe8_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _03ae4c_func
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _03b005_jump
		inc    %ecx

	_03affb_jump:
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		cmp    %eax,%ecx
		jl     _03afb7_jump

	_03b005_jump:
		mov    (%esp),%eax

	_03b008_jump:
		add    $0x000004,%esp

	_03b00b_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03b014_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		mov    %eax,%ecx
		mov    0x000050(%eax),%edx
		xor    %ebx,%ebx
		mov    0x000080(%eax),%eax
		call   _080e86_func
		mov    $0x000010,%ebx
		mov    %esp,%edx
		mov    0x000080(%ecx),%eax
		call   _03a47c_func
		test   %eax,%eax
		jl     _03b04f_jump
		mov    (%esp),%edx
		mov    0x000050(%ecx),%eax
		add    %edx,%eax
		mov    %eax,0x000054(%ecx)
		xor    %eax,%eax

	_03b04f_jump:
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx

	_03b055_jump:
		ret    



_03b058_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    %edx,%edi
		call   _03b014_func
		mov    0x000050(%esi),%edx
		mov    0x000080(%esi),%eax
		xor    %ebx,%ebx
		lea    0x000011(%edi),%ebp
		call   _080e86_func
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _03ae4c_func
		test   %eax,%eax
		jl     _03b00b_jump

	_03b088_jump:
		mov    0x000054(%esi),%edx
		mov    0x000080(%esi),%eax
		xor    %ebx,%ebx
		movl   $0x000001,0x000084(%esi)
		call   _080e86_func
		xor    %ah,%ah
		mov    0x000098(%esi),%dl
		mov    %ah,_0963fb_data
		test   %dl,%dl
		jbe    _03b0fe_jump
		cmpb   $0x000000,_0cf444_data
		je     _03b0fe_jump
		call   _029530_func
		and    $_0000ff_case,%eax
		xor    %edx,%edx
		call   _02a710_func
		mov    0x000098(%esi),%dl
		call   _029530_func
		and    $_0000ff_case,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		call   _02a604_func
		call   _029530_func
		and    $_0000ff_case,%eax
		mov    $0x000001,%bl
		call   _02a6fc_func
		mov    %bl,_0963fb_data

	_03b0fe_jump:
		xor    %bh,%bh
		xor    %ecx,%ecx
		mov    %bh,_0963fc_data
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		cmp    %eax,%ecx
		jl     _03b117_jump
		jmp    _03b088_jump

	_03b117_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _03ae4c_func
		test   %eax,%eax
		jl     _03b00b_jump
		call   _0420e8_func
		call   _041e58_func
		test   %ax,%ax
		jne    _03b157_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _03b157_jump
		call   _041f70_func
		test   %ax,%ax
		jne    _03b157_jump
		call   _041ffc_func
		test   %ax,%ax
		je     _03b15f_jump

	_03b157_jump:
		xor    %eax,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03b15f_jump:
		inc    %ecx
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		cmp    %eax,%ecx
		jl     _03b117_jump
		jmp    _03b088_jump



_03b170_func:
		cmpb   $0x000000,_0cf410_data
		je     _03b055_jump
		jmp    _03e58c_jump



_03b184_func:
		cmpb   $0x000000,_0cf410_data
		je     _03b055_jump
		jmp    _03e5d0_jump



_03b198_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ebx,%ebx
		xor    %ecx,%ecx

	_03b1a0_jump:
		mov    $0x0000fe,%ah
		mov    %ecx,%edx

	_03b1a4_jump:
		mov    _0df1c0_data(%edx),%al
		add    %ah,%al
		test   %al,%al
		jge    _03b1b2_jump
		mov    %cl,%al

	_03b1b2_jump:
		mov    %al,_0df1c0_data(%edx)
		mov    _0df1c1_data(%edx),%al
		add    %ah,%al
		test   %al,%al
		jge    _03b1c6_jump
		mov    %cl,%al

	_03b1c6_jump:
		mov    %al,_0df1c1_data(%edx)
		mov    _0df1c2_data(%edx),%al
		add    %ah,%al
		test   %al,%al
		jge    _03b1da_jump
		mov    %cl,%al

	_03b1da_jump:
		add    $0x000003,%edx
		mov    %al,_0df1bf_data(%edx)
		cmp    $0x000300,%edx
		jne    _03b1a4_jump
		call   _016ded_func
		call   _016ddd_func
		mov    $_0df1c0_data,%esi
		add    $0x000002,%ebx
		pusha  
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		popa   
		cmp    $0x000040,%ebx
		jl     _03b1a0_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b224_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000134,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %cl,%bh
		mov    $_0c0a98_data,%eax
		call   _080ec9_func
		test   %eax,%eax
		sete   %al
		mov    %al,_0963fd_data
		cmpb   $0x000000,_0cf41c_data
		je     _03b2b8_jump
		mov    $_0c0aa4_data,%edx
		mov    %esi,%eax
		call   _07f4c0_func
		test   %eax,%eax
		jne    _03b26a_jump
		mov    $0xfffffffb,%eax
		jmp    _03b3a3_jump

	_03b26a_jump:
		lea    0x00009c(%esp),%edi
		push   %edi

	_03b272_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03b28a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03b272_jump

	_03b28a_jump:
		pop    %edi
		lea    0x00009c(%esp),%edi
		mov    %ebp,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03b29d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03b2b5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03b29d_jump

	_03b2b5_jump:
		pop    %edi
		jmp    _03b2db_jump

	_03b2b8_jump:
		lea    0x00009c(%esp),%edi
		mov    %ebp,%esi
		push   %edi

	_03b2c2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03b2da_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03b2c2_jump

	_03b2da_jump:
		pop    %edi

	_03b2db_jump:
		mov    $_0c0aa8_data,%edx
		lea    0x00009c(%esp),%eax
		call   _0810de_func
		test   %eax,%eax
		jne    _03b2ff_jump
		mov    $0xfffffffb,%eax
		add    $0x000134,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03b2ff_jump:
		call   _081192_func
		cmpb   $0x000000,_0cf444_data
		je     _03b31e_jump
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a710_func
		jmp    _03b320_jump

	_03b31e_jump:
		xor    %bl,%bl

	_03b320_jump:
		call   _03b170_func
		lea    0x00011c(%esp),%eax
		call   _03a4e4_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03b390_jump
		lea    0x00009c(%esp),%edx
		mov    %esp,%eax
		call   _03a9a0_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03b390_jump
		lea    0x00011c(%esp),%edx
		mov    %esp,%eax
		mov    %bl,0x000098(%esp)
		call   _03aee0_func
		test   %bh,%bh
		je     _03b374_jump
		lea    0x00011c(%esp),%edx
		mov    %esp,%eax
		call   _03b058_func
		jmp    _03b382_jump

	_03b374_jump:
		lea    0x00011c(%esp),%edx
		mov    %esp,%eax
		call   _03af40_func

	_03b382_jump:
		mov    %eax,%edx
		mov    %esp,%eax
		call   _03a97c_func
		call   _03b198_func

	_03b390_jump:
		lea    0x00011c(%esp),%eax
		call   _03a564_func
		call   _03b184_func
		mov    %edx,%eax

	_03b3a3_jump:
		add    $0x000134,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03b3b0_func:
		push   %ecx
		and    $_0000ff_case,%ebx
		xor    %ecx,%ecx
		call   _03b224_func
		pop    %ecx
		ret    



_03b3e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000001,_095de4_data
		jne    _03b431_jump
		mov    _0cd158_data,%edx
		cmp    $0x0a0200,%edx
		jne    _03b40f_jump
		mov    $0x0a6200,%esi
		mov    %edx,_0cd154_data
		mov    %esi,_0cd158_data
		jmp    _03b425_jump

	_03b40f_jump:
		mov    $0x0a0200,%ebx
		mov    $0x0a6200,%ecx
		mov    %ebx,_0cd158_data
		mov    %ecx,_0cd154_data

	_03b425_jump:
		mov    _0cd158_data,%eax
		call   _014543_func
		jmp    _03b488_jump

	_03b431_jump:
		mov    _0ccae4_data,%eax
		mov    %eax,_0cd154_data
		mov    _095de0_data,%eax
		mov    _0cf417_data,%dl
		mov    %eax,_0cd158_data
		cmp    $0x000001,%dl
		jne    _03b477_jump
		cmpb   $0x000000,_095e6a_data
		je     _03b477_jump
		mov    $0x000140,%ecx
		mov    _0ccae4_data,%esi
		mov    %eax,%edi
		mov    $0x0000c8,%eax
		call   *_0ccab8_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b477_jump:
		mov    _0cd158_data,%edi
		mov    _0ccae4_data,%esi
		call   _014a16_func

	_03b488_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b490_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cf442_data
		je     _03b4a2_jump
		call   _016ded_func

	_03b4a2_jump:
		mov    _0cd158_data,%edx
		cmp    $0x0a0200,%edx
		jne    _03b4c3_jump
		mov    $0x0a6200,%esi
		mov    %edx,_0cd154_data
		mov    %esi,_0cd158_data
		jmp    _03b4d9_jump

	_03b4c3_jump:
		mov    $0x0a0200,%ebx
		mov    $0x0a6200,%ecx
		mov    %ebx,_0cd158_data
		mov    %ecx,_0cd154_data

	_03b4d9_jump:
		mov    _0cd158_data,%eax
		call   _014543_func
		cmpb   $0x000000,_0cf442_data
		je     _03b4f1_jump
		call   _016ddd_func

	_03b4f1_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b754_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0cd20c_data,%ebx
		movswl %dx,%edx
		mov    %ebx,0x000004(%esp)
		mov    %ebx,_0cd208_data
		mov    _0ce036_data,%ebx
		sar    $0x000004,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		movswl %ax,%edx
		sar    $0x000004,%edx
		add    %edx,%ebx
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    _0ce040_data,%ebx
		add    %edx,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,(%esp)
		mov    %edx,0x000008(%esp)
		mov    %edx,0x00000c(%esp)

	_03b7a6_jump:
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		xor    %ecx,%ecx
		mov    0x00000c(%esp),%ebp
		mov    %ecx,0x000010(%esp)
		add    %ebp,%edx
		mov    0x000008(%esp),%ebp

	_03b7bd_jump:
		xor    %ecx,%ecx

	_03b7bf_jump:
		mov    (%ebx),%di
		test   %di,%di
		jl     _03b7e9_jump
		cmp    $0x0004b0,%di
		jge    _03b7e9_jump
		cmpb   $0x000000,0x000004(%ebx)
		jne    _03b7e9_jump
		movswl %di,%esi
		mov    _0c2c78_data(,%esi,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _0146c4_func
		jmp    _03b7f0_jump

	_03b7e9_jump:
		mov    %edx,%edi
		call   _01467c_func

	_03b7f0_jump:
		add    $0x000006,%ebx
		add    $0x000010,%ecx
		add    $0x000004,%edx
		cmp    $0x000140,%cx
		jl     _03b7bf_jump
		mov    _0ce036_data,%esi
		sar    $0x000010,%esi
		sub    $0x000014,%esi
		imul   $0x000006,%esi,%esi
		add    %esi,%ebx
		mov    0x000010(%esp),%esi
		add    $0x000010,%esi
		add    $0x0004b0,%edx
		mov    %esi,0x000010(%esp)
		cmp    $0x0000e0,%si
		jl     _03b7bd_jump
		mov    0x000008(%esp),%ecx
		mov    0x00000c(%esp),%esi
		add    $0x000040,%ecx
		add    $0x004600,%esi
		mov    %ecx,0x000008(%esp)
		mov    %esi,0x00000c(%esp)
		cmp    $0x000100,%ecx
		jne    _03b7a6_jump
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03b858_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,(%esp)
		mov    %ecx,%esi
		movswl %bx,%eax
		mov    _0ce036_data,%ecx
		sar    $0x000004,%eax
		sar    $0x000010,%ecx
		imul   %ecx,%eax
		movswl %dx,%edx
		sar    $0x000004,%edx
		lea    (%edx,%eax,1),%ebx
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    _0ce040_data,%eax
		add    %edx,%edx
		add    %edx,%eax
		mov    _0cd20c_data,%edx
		mov    %eax,0x000008(%esp)
		mov    (%esp),%eax
		mov    $0x000050,%ebx
		sub    %edx,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %edx,0x000010(%esp)
		movswl %si,%edx
		mov    $0x00000d,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		imul   %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000008(%esp),%ebx
		sub    %eax,%edx
		xor    %ecx,%ecx
		add    %edx,%edx
		mov    %ecx,0x00000c(%esp)
		add    %edx,%ebx
		mov    %ecx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)

	_03b8dd_jump:
		mov    0x000008(%esp),%ecx
		mov    (%esp),%edx
		mov    0x000004(%esp),%ebx
		xor    %esi,%esi
		mov    0x00000c(%esp),%ebp
		mov    %esi,0x000014(%esp)
		add    %ebx,%edx
		mov    0x000010(%esp),%ebx

	_03b8f8_jump:
		mov    (%ecx),%si
		test   %si,%si
		jl     _03b920_jump
		cmp    $0x0004b0,%si
		jge    _03b920_jump
		cmpb   $0x000000,0x000004(%ecx)
		jne    _03b920_jump
		movswl %si,%esi
		mov    _0c2c78_data(,%esi,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _0146c4_func

	_03b920_jump:
		add    $0x000006,%ecx
		add    $0x000004,%ebx
		add    $0x000004,%edx
		cmp    $0x000050,%ebx
		jl     _03b933_jump
		sub    $0x000050,%edx
		xor    %ebx,%ebx

	_03b933_jump:
		mov    0x000014(%esp),%edi
		add    $0x000010,%edi
		mov    %edi,0x000014(%esp)
		cmp    $0x000140,%di
		jl     _03b8f8_jump
		mov    0x00000c(%esp),%edi
		mov    0x000004(%esp),%ebp
		add    $0x000040,%edi
		add    $0x004600,%ebp
		mov    %edi,0x00000c(%esp)
		mov    %ebp,0x000004(%esp)
		cmp    $0x000100,%edi
		jne    _03b8dd_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03b974_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,0x000008(%esp)
		movswl %bx,%eax
		mov    _0ce036_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		imul   %eax,%ebx
		movswl %dx,%eax
		sar    $0x000004,%eax
		add    %ebx,%eax
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0ce040_data,%eax
		add    %edx,%edx
		add    %edx,%eax
		movswl %cx,%edx
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		lea    0x000000(,%eax,4),%edx
		mov    (%esp),%ebx
		sub    %eax,%edx
		mov    _0cd20c_data,%ecx
		add    %edx,%edx
		mov    0x000008(%esp),%eax
		add    %edx,%ebx
		sub    %ecx,%eax
		mov    %ebx,(%esp)
		xor    %edx,%edx
		mov    $0x000050,%ebx
		div    %ebx
		xor    %esi,%esi
		mov    %esi,0x000004(%esp)
		mov    %esi,0x00000c(%esp)
		mov    %eax,%ecx

	_03b9f1_jump:
		mov    0x000008(%esp),%edx
		mov    0x00000c(%esp),%esi
		mov    (%esp),%ebx
		add    %esi,%edx
		xor    %esi,%esi
		mov    0x000004(%esp),%ebp
		mov    %esi,0x000010(%esp)

	_03ba08_jump:
		mov    (%ebx),%si
		test   %si,%si
		jl     _03ba30_jump
		cmp    $0x0004b0,%si
		jge    _03ba30_jump
		cmpb   $0x000000,0x000004(%ebx)
		jne    _03ba30_jump
		movswl %si,%esi
		mov    _0c2c78_data(,%esi,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _0146c4_func

	_03ba30_jump:
		mov    _0ce036_data,%esi
		sar    $0x000010,%esi
		imul   $0x000006,%esi,%esi
		add    $0x000500,%edx
		add    $0x000010,%ecx
		add    %esi,%ebx
		cmp    $0x0000e0,%ecx
		jl     _03ba57_jump
		sub    $0x004600,%edx
		xor    %ecx,%ecx

	_03ba57_jump:
		mov    0x000010(%esp),%edi
		add    $0x000010,%edi
		mov    %edi,0x000010(%esp)
		cmp    $0x0000e0,%di
		jl     _03ba08_jump
		mov    0x000004(%esp),%ebp
		mov    0x00000c(%esp),%eax
		add    $0x000040,%ebp
		add    $0x004600,%eax
		mov    %ebp,0x000004(%esp)
		mov    %eax,0x00000c(%esp)
		cmp    $0x000100,%ebp
		jne    _03b9f1_jump
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03ba94_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %ax,0x00001c(%esp)
		mov    %dx,0x000018(%esp)
		mov    %ecx,%eax
		mov    0x00001c(%esp),%ecx
		and    $0x0000f0,%dl
		and    $0x0000f0,%bl
		and    $0x0000f0,%al
		and    $0x0000f0,%cl
		mov    %edx,0x000008(%esp)
		mov    %ebx,%edi
		mov    %eax,0x00000c(%esp)
		cmp    %bx,%cx
		jne    _03bad1_jump
		mov    %edx,%eax
		cmp    0x00000c(%esp),%ax
		je     _03bd27_jump

	_03bad1_jump:
		mov    _0cd208_data,%ebx
		sub    _0cd20c_data,%ebx
		mov    $0x000050,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		mov    $0x000050,%ebp
		mov    %edx,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %ebp
		sub    %edi,%ecx
		mov    %cx,0x000014(%esp)
		mov    0x00000c(%esp),%ecx
		mov    %eax,%ebx
		mov    0x000008(%esp),%eax
		sub    %ecx,%eax
		mov    %ax,0x000010(%esp)
		mov    0x00000e(%esp),%eax
		mov    0x000012(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		add    %eax,%esi
		cmp    %ebp,%esi
		jl     _03bb32_jump
		sub    %ebp,%esi

	_03bb32_jump:
		test   %esi,%esi
		jge    _03bb39_jump
		add    $0x000050,%esi

	_03bb39_jump:
		cmp    $0x0000e0,%ebx
		jl     _03bb47_jump
		sub    $0x0000e0,%ebx

	_03bb47_jump:
		test   %ebx,%ebx
		jge    _03bb51_jump
		add    $0x0000e0,%ebx

	_03bb51_jump:
		mov    %ebx,%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    _0cd20c_data,%ecx
		shl    $0x000004,%ebx
		mov    _0cd208_data,%eax
		add    %ecx,%ebx
		mov    %eax,%edi
		add    %esi,%ebx
		mov    0x000014(%esp),%edx
		mov    %ebx,_0cd208_data
		mov    %ebx,%ebp
		test   %dx,%dx
		jle    _03bbe7_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _03bbe7_jump
		lea    0x004600(%ecx),%edx
		add    $0x000500,%eax
		cmp    %edx,%eax
		jbe    _03bb9b_jump
		mov    $0xffffba00,%eax
		jmp    _03bb9d_jump

	_03bb9b_jump:
		xor    %eax,%eax

	_03bb9d_jump:
		mov    0x000016(%esp),%ebp
		mov    0x00001a(%esp),%edx
		mov    $0x000130,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ebp
		mov    %edx,(%esp)
		lea    0x000500(%edi),%edx
		mov    %ebp,%ebx
		add    %edx,%eax
		mov    (%esp),%edx
		call   _03b974_func
		mov    $0x0000b0,%ecx
		mov    (%esp),%edx
		mov    %ebp,%ebx
		test   %esi,%esi
		jne    _03bbd8_jump
		sub    $0x00004c,%edi
		jmp    _03bbdb_jump

	_03bbd8_jump:
		add    $0x000004,%edi

	_03bbdb_jump:
		mov    %edi,%eax
		call   _03b858_func
		jmp    _03bd27_jump

	_03bbe7_jump:
		cmpw   $0x000000,0x000014(%esp)
		jle    _03bc4c_jump
		cmpw   $0x000000,0x000010(%esp)
		jge    _03bc4c_jump
		mov    _0cd20c_data,%esi
		lea    -0x000500(%edi),%eax
		cmp    %esi,%eax
		jae    _03bc0e_jump
		mov    $0x004600,%eax
		jmp    _03bc10_jump

	_03bc0e_jump:
		xor    %eax,%eax

	_03bc10_jump:
		mov    0x000016(%esp),%edx
		mov    0x00001a(%esp),%esi
		mov    $0x000130,%ecx
		sub    $0x000500,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%esi
		add    %edi,%eax
		mov    %edx,(%esp)
		mov    %edx,%ebx
		mov    %esi,%edx
		call   _03b974_func
		mov    (%esp),%ebx
		mov    %esi,%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		call   _03b858_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03bc4c_jump:
		cmpw   $0x000000,0x000014(%esp)
		jge    _03bca5_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _03bca5_jump
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,(%esp)
		mov    0x00001a(%esp),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    (%esp),%ebx
		mov    %eax,0x000004(%esp)
		mov    %eax,%edx
		mov    %ebp,%eax
		call   _03b974_func
		mov    $0x0000b0,%ecx
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		cmp    $0x00004c,%esi
		jne    _03bc94_jump
		add    %esi,%edi
		jmp    _03bc97_jump

	_03bc94_jump:
		sub    $0x000004,%edi

	_03bc97_jump:
		mov    %edi,%eax
		call   _03b858_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03bca5_jump:
		cmpw   $0x000000,0x000010(%esp)
		jle    _03bcc7_jump
		mov    0x000016(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    $0x0000b0,%ecx
		mov    %edi,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03b858_func

	_03bcc7_jump:
		cmpw   $0x000000,0x000014(%esp)
		jle    _03bce9_jump
		mov    0x000016(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    $0x000130,%ecx
		mov    %edi,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03b974_func

	_03bce9_jump:
		cmpw   $0x000000,0x000010(%esp)
		jge    _03bd08_jump
		mov    0x000016(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03b858_func

	_03bd08_jump:
		cmpw   $0x000000,0x000014(%esp)
		jge    _03bd27_jump
		mov    0x000016(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03b974_func

	_03bd27_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03bd30_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		xor    %edx,%edx
		mov    %edx,(%esp)
		mov    _0cd1d0_data,%edx
		shr    $0x000002,%edx
		mov    _0cd1d0_data,%ebx
		mov    %edx,_0df4c0_data
		mov    _0cd1dc_data,%edx
		add    %ebx,%edx
		mov    _0c1ee4_data,%ebp
		mov    %edx,_0df4c4_data
		lea    -0x000001(%ebx),%edx
		mov    _0cf40f_data,%ah
		mov    %edx,_0df4c8_data
		test   %ah,%ah
		je     _03bd7e_jump
		mov    $0x000001,%ebp

	_03bd7e_jump:
		mov    _0cf40b_data,%dl
		test   %dl,%dl
		je     _03bd9a_jump
		mov    $_0c8238_data,%esi
		mov    _0cd154_data,%ecx
		call   _013736_func
		jmp    _03bded_jump

	_03bd9a_jump:
		xor    %dh,%dh
		mov    %dx,0x000004(%esp)

	_03bda1_jump:
		mov    _0cd1d0_data,%edx
		mov    0x000002(%esp),%ebx
		shr    $0x000002,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    $_0df4c0_data,%ecx
		mov    (%esp),%edi
		mov    $_0c8238_data,%esi
		mov    %ebp,%eax
		mov    _0cd1bc_data,%edx
		add    %ebp,%ebp
		call   _0131a9_func
		cmp    $0x000010,%ebp
		jne    _03bddd_jump
		mov    $0x000001,%ebp
		mov    %ebp,(%esp)

	_03bddd_jump:
		mov    0x000004(%esp),%ebx
		inc    %ebx
		mov    %bx,0x000004(%esp)
		cmp    $0x000004,%bx
		jl     _03bda1_jump

	_03bded_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03bdf8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		mov    _0c1ed4_data,%ebx
		mov    %ebx,0x00001c(%esp)
		mov    _0c1ed8_data,%ebx
		mov    %ebx,0x000014(%esp)
		mov    _0c1edc_data,%ebx
		mov    %ebx,0x000004(%esp)
		mov    _0cd1bc_data,%ebx
		shl    $0x000004,%ebx
		movswl %dx,%edx
		mov    %ebx,0x000008(%esp)
		mov    _0ce036_data,%ebx
		sar    $0x000004,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		cwtl   
		sar    $0x000004,%eax
		mov    _0c1ee4_data,%ebp
		add    %eax,%edx
		xor    %ecx,%ecx
		lea    0x000000(,%edx,4),%eax
		mov    %ebp,0x000010(%esp)
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		add    %eax,%eax
		mov    %ecx,0x000020(%esp)
		add    %edx,%eax
		mov    $0x004600,%edx
		mov    %eax,(%esp)
		mov    0x00001c(%esp),%eax
		mov    %edx,_0df4c0_data
		mov    %edx,_0df4c8_data
		mov    %eax,0x00000c(%esp)
		xor    %edx,%edx
		mov    _0cd20c_data,%eax
		mov    %dx,0x000034(%esp)
		mov    %eax,_0df4c4_data

	_03be93_jump:
		mov    0x000032(%esp),%ebx
		sar    $0x000010,%ebx
		imul   $0x004600,%ebx,%ebx
		mov    _0df4c4_data,%ecx
		add    $0x004600,%ecx
		mov    _0cf40b_data,%ah
		mov    %ecx,_0df4c4_data
		test   %ah,%ah
		je     _03bed8_jump
		mov    $_0df4c0_data,%ecx
		mov    $0x000050,%edx
		mov    0x000020(%esp),%edi
		mov    $_0c89b8_data,%esi
		mov    %ebp,%eax
		call   _013df3_func
		jmp    _03bef2_jump

	_03bed8_jump:
		mov    $_0df4c0_data,%ecx
		mov    $0x000050,%edx
		mov    0x000020(%esp),%edi
		mov    $_0c8938_data,%esi
		mov    %ebp,%eax
		call   _013864_func

	_03bef2_jump:
		add    %ebp,%ebp
		cmp    $0x000010,%ebp
		jne    _03bf0c_jump
		mov    $0x000001,%ebp
		mov    0x00001c(%esp),%edi
		add    %ebp,%edi
		mov    %ebp,0x000020(%esp)
		mov    %edi,0x00001c(%esp)

	_03bf0c_jump:
		mov    0x000034(%esp),%ebx
		inc    %ebx
		mov    %bx,0x000034(%esp)
		cmp    $0x000004,%bx
		jl     _03be93_jump
		mov    0x00000c(%esp),%eax
		mov    %eax,0x000028(%esp)
		mov    (%esp),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000014(%esp),%eax
		mov    %eax,%edx
		mov    $0x000004,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000014(%esp),%eax
		mov    %edx,%esi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0cd1d0_data,%ebx
		shr    $0x000002,%ebx
		imul   %ebx,%esi
		mov    _0cd1bc_data,%edi
		mov    0x000004(%esp),%edx
		imul   %edi,%edx
		add    %esi,%eax
		add    _0cd1dc_data,%eax
		add    %edx,%eax
		mov    %eax,0x000024(%esp)
		mov    %ebx,%eax
		mov    %ebx,0x00002c(%esp)
		neg    %eax
		mov    _0ce036_data,%esi
		mov    %eax,0x00002c(%esp)
		mov    0x000008(%esp),%eax
		sar    $0x000010,%esi
		mov    %eax,_0df4c0_data
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		add    %eax,%eax
		mov    %edi,_0df4cc_data
		mov    %eax,_0df4c4_data
		lea    0x000000(,%edi,4),%eax
		sub    %edi,%eax
		mov    %eax,_0df4d0_data
		mov    _0ce038_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%esi
		mov    $0x0004b0,%edx
		mov    0x000010(%esp),%ebp
		mov    %edx,_0df4c8_data
		lea    -0x000001(%esi),%edx
		mov    _0cd1d0_data,%ebx
		lea    0x000000(,%edx,4),%eax
		mov    %ebx,_0df4dc_data
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		add    %eax,%eax
		xor    %esi,%esi
		add    %eax,%edx
		mov    _0cd1dc_data,%eax
		mov    %esi,0x000030(%esp)
		add    %ebx,%eax
		mov    %edx,_0df4d4_data
		mov    %eax,_0df4d8_data

	_03c00f_jump:
		mov    0x00002c(%esp),%edx
		mov    %ebp,%eax
		mov    0x000024(%esp),%esi
		call   _01283c_func
		mov    _0cd1d0_data,%eax
		mov    _0cd1dc_data,%ebx
		shr    $0x000002,%eax
		mov    _0cd1d0_data,%ecx
		add    %eax,%edx
		add    %ecx,%ebx
		lea    (%esi,%edx,1),%eax
		mov    %edx,0x00002c(%esp)
		cmp    %ebx,%eax
		jbe    _03c052_jump
		mov    %edx,%esi
		sub    %ecx,%esi
		mov    %esi,0x00002c(%esp)
		mov    0x000024(%esp),%esi
		inc    %esi
		mov    %esi,0x000024(%esp)

	_03c052_jump:
		mov    0x00002c(%esp),%edi
		mov    _0cf40b_data,%dl
		add    %edi,%esi
		test   %dl,%dl
		je     _03c085_jump
		mov    $_0df4c0_data,%ebx
		mov    0x000028(%esp),%edi
		xor    %eax,%eax
		mov    0x000018(%esp),%edx
		mov    0x000030(%esp),%ax
		mov    $_0c3f78_data,%ecx
		shl    $0x000008,%eax
		call   _0143e5_func
		jmp    _03c0a6_jump

	_03c085_jump:
		mov    $_0df4c0_data,%ebx
		mov    0x000028(%esp),%edi
		xor    %eax,%eax
		mov    0x000018(%esp),%edx
		mov    0x000030(%esp),%ax
		mov    $_0c3f78_data,%ecx
		shl    $0x000008,%eax
		call   _014382_func

	_03c0a6_jump:
		add    %ebp,%ebp
		cmp    $0x000010,%ebp
		jne    _03c0b6_jump
		mov    $0x000001,%ebp
		add    %ebp,0x000028(%esp)

	_03c0b6_jump:
		mov    0x000030(%esp),%edi
		inc    %edi
		mov    %edi,0x000030(%esp)
		cmp    $0x000004,%di
		jb     _03c00f_jump
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03c0d4_jump:
		push   %ebx
		push   %edx
		mov    %al,%bl
		call   _03c280_func
		cmp    $0x000064,%bl
		jne    _03c0f8_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		or     $0x000008,%al
		mov    $0x0003c2,%edx
		and    $0x0000fb,%al
		jmp    _03c195_jump

	_03c0f8_jump:
		cmp    $0x000050,%bl
		jne    _03c113_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		or     $0x000004,%al
		mov    $0x0003c2,%edx
		and    $0x0000f7,%al
		jmp    _03c195_jump

	_03c113_jump:
		cmp    $0x000046,%bl
		jne    _03c129_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003c2,%edx
		and    $0x0000f3,%al
		jmp    _03c195_jump

	_03c129_jump:
		cmp    $0x00003c,%bl
		jne    _03c196_jump
		mov    $0x000063,%al
		mov    $0x0003c2,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x00007f,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x00000c,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x0000de,%al
		or     $0x000020,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $_0000ff_case,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000c4,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx

	_03c195_jump:
		out    %al,(%dx)

	_03c196_jump:
		cmp    $0x000032,%bl
		jne    _03c1fb_jump
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x00007f,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x000074,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x0000de,%al
		or     $0x000020,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $_0000ff_case,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000fc,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)

	_03c1fb_jump:
		mov    %bl,_0cf43c_data
		pop    %edx
		pop    %ebx
		ret    



_03c204_func:
		push   %edx
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0df4f2_data
		mov    $0x000010,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0df4f1_data
		mov    $0x000011,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0df4f0_data
		mov    $0x000006,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0df4f4_data
		mov    $0x000007,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0df4f3_data
		mov    $0x000016,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    %al,_0df4f5_data
		pop    %edx
		ret    



_03c280_func:
		push   %edx
		mov    $0x0003c2,%edx
		mov    _0df4f2_data,%al
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0df4f1_data,%al
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0df4f0_data,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0df4f4_data,%al
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0df4f3_data,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0df4f5_data,%al
		out    %al,(%dx)
		pop    %edx
		ret    



_03c2f0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ebx
		mov    _0cd208_data,%ecx
		mov    %ecx,0x000004(%esp)
		mov    _0ce036_data,%ecx
		movswl %dx,%edx
		sar    $0x000010,%ecx
		sar    $0x000004,%edx
		lea    -0x000014(%ecx),%esi
		imul   %ecx,%edx
		movswl %bx,%ebx
		mov    _0c1ed4_data,%eax
		sar    $0x000004,%ebx
		mov    _0ce040_data,%ebp
		add    %ebx,%edx
		mov    %eax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%ebx
		mov    _0c1ee0_data,%eax
		sub    %edx,%ebx
		mov    %esi,0x000008(%esp)
		add    %ebx,%ebx
		mov    _095e26_data,%dl
		add    %ebx,%ebp
		test   %dl,%dl
		je     _03c3f9_jump
		cmpb   $0x000000,_0cf412_data
		je     _03c3f9_jump
		mov    _0cd1bc_data,%ecx
		lea    0x000000(,%esi,4),%edi
		mov    _0cf40b_data,%bl
		sub    %esi,%edi
		shl    $0x000004,%ecx
		add    %edi,%edi
		test   %bl,%bl
		je     _03c3e7_jump
		mov    0x00000c(%esp),%edx
		mov    _0cd154_data,%ebx
		sub    %edx,%ebx
		add    $0x000004,%ebx
		mov    $0x000050,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    (%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		add    %eax,%ebx
		mov    _0cd154_data,%esi
		shl    $0x000004,%ebx
		mov    %ebp,%eax
		add    %ebx,%esi
		add    $0x0ab000,%ebx
		add    %edx,%esi
		add    %edx,%ebx
		mov    $_0c8238_data,%edx
		call   _012a73_func
		jmp    _03c3f9_jump

	_03c3e7_jump:
		mov    0x00000c(%esp),%esi
		mov    $_0c8238_data,%edx
		mov    %eax,%ebx
		mov    %ebp,%eax
		call   _0129d3_func

	_03c3f9_jump:
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    0x00000c(%esp),%esi
		lea    0x000000(,%ecx,4),%eax
		mov    $_0c8938_data,%edx
		sub    %ecx,%eax
		mov    _0cd20c_data,%edi
		add    %eax,%eax
		mov    %edi,%ecx
		mov    %eax,%edi
		mov    %ebp,%eax
		call   _012850_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03c430_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    $_0c6d38_data,%edx
		xor    %eax,%eax

	_03c43b_jump:
		inc    %eax
		movb   $0x000000,(%ebx)
		inc    %ebx
		movw   $0x000000,(%edx)
		add    $0x000002,%edx
		cmp    $0x000300,%ax
		jl     _03c43b_jump
		pop    %edx
		pop    %ebx
		ret    



_03c454_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $_0c6d38_data,%ebx
		mov    %eax,%edx
		xor    %esi,%esi

	_03c461_jump:
		mov    $0x000006,%cl
		inc    %edx
		xor    %eax,%eax
		add    $0x000002,%ebx
		mov    -0x000001(%edx),%al
		inc    %esi
		cwtl   
		shl    %cl,%eax
		mov    %ax,-0x000002(%ebx)
		cmp    $0x000300,%si
		jl     _03c461_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03c480_func:
		push   %ecx
		push   %esi
		mov    $0x000006,%ecx
		mov    $0x000001,%edx
		mov    $_0c7338_data,%esi
		sub    %eax,%ecx
		mov    %ax,_0cf1e0_data
		shl    %cl,%edx
		mov    $_0c7338_data,%eax
		mov    %dx,_0cf2d0_data
		mov    $0x000001,%dl
		mov    $_0000ff_case,%ecx
		mov    %dl,_0cf478_data
		call   _03c430_func
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		pop    %esi
		pop    %ecx
		ret    



_03c4d8_func:
		push   %ecx
		mov    $0x000006,%ecx
		mov    $0x000001,%edx
		sub    %eax,%ecx
		shl    %cl,%edx
		mov    %dx,_0cf2d0_data
		mov    $0x000002,%dl
		mov    %ax,_0cf1e0_data
		mov    %dl,_0cf478_data
		pop    %ecx
		ret    



_03c500_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    _0cf2d0_data,%cx
		test   %cx,%cx
		je     _03c5e6_jump
		mov    $_0c6d38_data,%eax
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %ebx,%edx
		dec    %edi
		mov    _0cf478_data,%bl
		mov    %di,_0cf2d0_data
		cmp    $0x000001,%bl
		jne    _03c565_jump
		xor    %ebx,%ebx

	_03c539_jump:
		xor    %ecx,%ecx
		mov    (%edx),%cl
		mov    %ecx,(%esp)
		mov    (%esp),%edi
		mov    _0cf1e0_data,%cl
		shl    %cl,%edi
		add    $0x000002,%eax
		mov    %edi,%ecx
		mov    -0x000002(%eax),%di
		inc    %edx
		add    %ecx,%edi
		inc    %ebx
		mov    %di,-0x000002(%eax)
		cmp    $0x000300,%bx
		jge    _03c595_jump
		jmp    _03c539_jump

	_03c565_jump:
		cmp    $0x000002,%bl
		jne    _03c595_jump
		xor    %ebx,%ebx

	_03c56c_jump:
		cmpw   $0x000000,(%eax)
		jle    _03c589_jump
		xor    %ecx,%ecx
		mov    (%edx),%cl
		mov    %ecx,(%esp)
		mov    (%esp),%edi
		mov    _0cf1e0_data,%cl
		shl    %cl,%edi
		mov    %edi,%ecx
		sub    %cx,(%eax)

	_03c589_jump:
		add    $0x000002,%eax
		inc    %ebx
		inc    %edx
		cmp    $0x000300,%bx
		jl     _03c56c_jump

	_03c595_jump:
		mov    $_0c6d38_data,%eax
		xor    %edx,%edx

	_03c59c_jump:
		inc    %esi
		movswl (%eax),%ebx
		add    $0x000002,%eax
		sar    $0x000006,%ebx
		inc    %edx
		mov    %bl,-0x000001(%esi)
		cmp    $0x000300,%dx
		jl     _03c59c_jump
		mov    $_0c7338_data,%esi
		mov    $_0000ff_case,%ecx
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		cmpw   $0x000000,_0cf2d0_data
		jne    _03c5e6_jump
		orb    $0x000040,_0cf478_data

	_03c5e6_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03c5f0_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		cwtl   
		call   _03c4d8_func
		mov    _0cf2d0_data,%si
		xor    %ebx,%ebx
		test   %si,%si
		jle    _03c625_jump

	_03c609_jump:
		call   _016ded_func
		call   _016ddd_func
		mov    $_0c7338_data,%edx
		mov    %ecx,%eax
		inc    %ebx
		call   _03c500_func
		cmp    %si,%bx
		jl     _03c609_jump

	_03c625_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03c62c_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmp    _0cf474_data,%al
		je     _03c69f_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %al,_0cf474_data
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7938_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0c7338_data,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %edi,%eax
		call   _03c454_func
		cmpb   $0x000041,_0cf478_data
		jne    _03c69f_jump
		mov    $_0000ff_case,%ecx
		mov    %edi,%esi
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_03c69f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_03c6a4_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %ax,0x000004(%esp)
		mov    %edx,%ecx
		mov    %bx,0x000008(%esp)
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%esi
		sub    %edx,%esi
		movswl %cx,%edx
		mov    %edx,%ecx
		lea    0x000000(,%edx,4),%eax
		shl    $0x000008,%esi
		sub    %edx,%eax
		mov    _0c7938_data(%esi,%eax,1),%bl
		mov    %bl,(%esp)
		mov    _0c7939_data(%esi,%eax,1),%bl
		mov    _0c793a_data(%esi,%eax,1),%al
		mov    %al,0x000002(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %bl,0x000001(%esp)
		mov    %eax,%edi
		lea    0x000003(%eax),%esi
		jmp    _03c745_jump

	_03c707_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000300,%edx,%edx
		mov    _0c7938_data(%edx,%esi,1),%bl
		mov    %bl,_0c7938_data(%edx,%edi,1)
		mov    _0c7939_data(%edx,%esi,1),%bl
		add    $0x000003,%esi
		mov    %bl,_0c7939_data(%edx,%edi,1)
		add    $0x000003,%edi
		mov    _0c7937_data(%edx,%esi,1),%al
		inc    %ecx
		mov    %al,_0c7937_data(%edx,%edi,1)

	_03c745_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    %eax,%ecx
		jl     _03c707_jump
		mov    0x000002(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %eax,%edx
		lea    0x000000(,%ecx,4),%esi
		shl    $0x000002,%eax
		sub    %ecx,%esi
		sub    %edx,%eax
		shl    $0x000008,%esi
		mov    (%esp),%dl
		mov    %dl,_0c7938_data(%esi,%eax,1)
		mov    0x000001(%esp),%dl
		mov    $_0c7338_data,%edi
		mov    %dl,_0c7939_data(%esi,%eax,1)
		mov    0x000002(%esp),%dl
		mov    $0x000300,%ecx
		mov    %dl,_0c793a_data(%esi,%eax,1)
		add    $_0c7938_data,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %edi,%eax
		call   _03c454_func
		cmpw   $0x000000,_0cf2d0_data
		jne    _03c7c4_jump
		movw   $0x000001,_0cf2d0_data

	_03c7c4_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_03c7cc_switch:
		.long   _03c86e_case
		.long   _03c876_case
		.long   _03c87e_case
		.long   _03c886_case
		.long   _03c88e_case
		.long   _03c896_case
		.long   _03c89e_case
		.long   _03c8a4_case
		.long   _03c8ac_case
		.long   _03c8b4_case
		.long   _03c8bc_case
		.long   _03c8c4_case




_03c7fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		cmpb   $0x000000,_0cf476_data
		je     _03c98d_jump
		testb  $0x000040,_0cf478_data
		je     _03c98d_jump
		mov    _0ce952_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		add    %edi,%eax
		mov    _0cc7a0_data,%edi
		shl    $0x000002,%eax
		add    %edi,%eax
		mov    _0cea1c_data,%di
		xor    %esi,%esi
		test   %di,%di
		jle    _03c98d_jump

	_03c84b_jump:
		cmpw   $0x00009e,0x000060(%eax)
		jne    _03c964_jump
		mov    0x00006c(%eax),%ch
		cmp    $0x00000b,%ch
		ja     _03c8ca_jump
		movzbl %ch,%edi
		jmp    *%cs:_03c7cc_switch(,%edi,4)

	_03c86e_case:
		xor    %dh,%dh
		mov    $0x000001,%cl
		xor    %dl,%dl
		jmp    _03c8ca_jump

	_03c876_case:
		xor    %dh,%dh
		mov    $0x000002,%cl
		xor    %dl,%dl
		jmp    _03c8ca_jump

	_03c87e_case:
		mov    $0x000001,%dh
		mov    $0x000002,%cl
		xor    %dl,%dl
		jmp    _03c8ca_jump

	_03c886_case:
		mov    $0x000001,%dh
		xor    %cl,%cl
		xor    %dl,%dl
		jmp    _03c8ca_jump

	_03c88e_case:
		mov    $0x000002,%dh
		xor    %cl,%cl
		xor    %dl,%dl
		jmp    _03c8ca_jump

	_03c896_case:
		mov    $0x000002,%dh
		mov    $0x000001,%cl
		xor    %dl,%dl
		jmp    _03c8ca_jump

	_03c89e_case:
		mov    $0x000001,%bl
		xor    %bh,%bh
		jmp    _03c8c8_jump

	_03c8a4_case:
		mov    $0x000002,%bl
		mov    $0x000001,%dl
		xor    %bh,%bh
		jmp    _03c8ca_jump

	_03c8ac_case:
		mov    $0x000002,%bl
		mov    $0x000001,%bh
		mov    %bh,%dl
		jmp    _03c8ca_jump

	_03c8b4_case:
		mov    $0x000001,%bh
		xor    %bl,%bl
		mov    %bh,%dl
		jmp    _03c8ca_jump

	_03c8bc_case:
		mov    $0x000002,%bh
		mov    $0x000001,%dl
		xor    %bl,%bl
		jmp    _03c8ca_jump

	_03c8c4_case:
		mov    $0x000002,%bh
		mov    $0x000001,%bl

	_03c8c8_jump:
		mov    %bl,%dl

	_03c8ca_jump:
		test   %dl,%dl
		jbe    _03c8d8_jump
		cmp    $0x000001,%dl
		je     _03c915_jump
		jmp    _03c959_jump

	_03c8d8_jump:
		movzbw _0ce0ac_data,%di
		mov    %edi,0x000008(%esp)
		mov    _0ce06c_data,%di
		add    0x000008(%esp),%edi
		mov    %edi,0x000004(%esp)
		movzbw 0x000068(%eax),%di
		mov    0x000028(%eax),%ax
		add    %edi,%eax
		mov    0x000004(%esp),%edi
		cmp    %di,%ax
		jge    _03c90d_jump
		mov    %cl,0x00000c(%esp)
		jmp    _03c959_jump

	_03c90d_jump:
		jle    _03c950_jump
		mov    %dh,0x00000c(%esp)
		jmp    _03c959_jump

	_03c915_jump:
		movzbw _0ce0ad_data,%di
		mov    %edi,0x000008(%esp)
		mov    _0ce070_data,%di
		add    0x000008(%esp),%edi
		mov    %edi,(%esp)
		movzbw 0x000069(%eax),%di
		mov    0x00002c(%eax),%ax
		add    %edi,%eax
		mov    (%esp),%edi
		cmp    %di,%ax
		jge    _03c948_jump
		mov    %bl,0x00000c(%esp)
		jmp    _03c959_jump

	_03c948_jump:
		jle    _03c950_jump
		mov    %bh,0x00000c(%esp)
		jmp    _03c959_jump

	_03c950_jump:
		mov    _0cf474_data,%al
		mov    %al,0x00000c(%esp)

	_03c959_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		call   _03c62c_func

	_03c964_jump:
		inc    %esi
		movswl %si,%eax
		mov    _0ce952_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%edi
		add    %edi,%eax
		cmp    _0cea1c_data,%si
		jl     _03c84b_jump

	_03c98d_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03c998_func:
		push   %edx
		xor    %edx,%edx
		mov    _0cf474_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000008,%eax
		mov    $_0c7338_data,%edx
		add    $_0c7938_data,%eax
		call   _03c500_func
		pop    %edx
		ret    



_03c9c0_func:
		push   %edx
		xor    %edx,%edx
		mov    _0cf474_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7938_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03c480_func
		pop    %edx
		ret    



_03c9e8_func:
		push   %edx
		xor    %edx,%edx
		mov    _0cf474_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7938_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03c4d8_func
		pop    %edx
		ret    



_03ca10_func:
		push   %edx
		xor    %edx,%edx
		mov    _0cf474_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7938_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03c5f0_func
		pop    %edx
		ret    



_03ca38_func:
		push   %ecx
		push   %esi
		push   %edi
		call   _016ded_func
		cmpb   $0x000001,_095de4_data
		jne    _03ca72_jump
		call   _03b3e0_func
		mov    $0x003e80,%ecx
		mov    _0cd154_data,%edi
		call   _012783_func
		mov    $0x003e80,%ecx
		mov    _0cd158_data,%edi
		call   _012783_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_03ca72_jump:
		mov    _095de0_data,%esi
		mov    _0ccae4_data,%edi
		call   _014bca_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03ca88_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%bl
		xor    %edx,%edx
		xor    %ecx,%ecx

	_03ca97_jump:
		call   _016ecb_func
		cmpb   $0x000001,_095de4_data
		jne    _03cace_jump
		call   _016ded_func
		call   _03b3e0_func
		call   _016ddd_func
		cmp    _0cf43f_data,%cl
		je     _03cac3_jump
		call   _016e50_func
		mov    %eax,%edx

	_03cac3_jump:
		test   %bl,%bl
		jne    _03caf5_jump
		call   _03c998_func
		jmp    _03caf5_jump

	_03cace_jump:
		call   _016ded_func
		call   _016ddd_func
		cmp    _0cf43f_data,%cl
		je     _03cae7_jump
		call   _016e50_func
		mov    %eax,%edx

	_03cae7_jump:
		test   %bl,%bl
		jne    _03caf0_jump
		call   _03c998_func

	_03caf0_jump:
		call   _03b3e0_func

	_03caf5_jump:
		mov    %edx,%eax
		call   *(%esp)
		mov    %cl,%bl
		test   %ax,%ax
		je     _03ca97_jump
		cmpl   $_03835c_jump,(%esp)
		je     _03cb12_jump
		xor    %ah,%ah
		mov    %ah,_0cf441_data

	_03cb12_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03cc18_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    $0x000300,%ecx
		mov    $_0c7938_data,%esi
		mov    _0cf474_data,%al
		mov    $_0c6738_data,%edi
		mov    %al,_0cf43e_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c7938_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c7338_data,%edi
		xor    %ah,%ah
		mov    %edx,%esi
		mov    %ah,_0cf474_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_03cc8c_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000300,%ecx
		mov    $_0c6738_data,%esi
		mov    _0cf43e_data,%al
		mov    $_0c7938_data,%edi
		mov    %al,_0cf474_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03ccbc_func:
		push   %edx
		mov    _0cd1e4_data,%eax
		mov    %eax,_0cd1ac_data
		mov    _0cd1d8_data,%eax
		mov    %eax,_0cd1c0_data
		mov    _0cd1b8_data,%eax
		mov    %eax,_0cd1d4_data
		xor    %eax,%eax
		mov    _0cf433_data,%al
		mov    _0cd170_data(,%eax,4),%edx
		mov    %edx,_0cd1e4_data
		mov    _0cd18c_data(,%eax,4),%edx
		mov    _0cd1ec_data(,%eax,4),%eax
		mov    %edx,_0cd1d8_data
		mov    %eax,_0cd1b8_data
		pop    %edx
		ret    



_03cd0c_func:
		mov    _0cd1ac_data,%eax
		mov    %eax,_0cd1e4_data
		mov    _0cd1c0_data,%eax
		mov    %eax,_0cd1d8_data
		mov    _0cd1d4_data,%eax
		mov    %eax,_0cd1b8_data
		ret    



_03cd2c_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x00fa00,%ecx
		mov    _0cd1e4_data,%esi
		mov    _0ccae4_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03cd54_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x000140,%edi
		mov    _0cca48_data,%dx
		mov    _0cca4c_data,%bx
		sub    %edx,%edi
		mov    _095e1b_data,%ah
		add    %ebx,%edi
		test   %ah,%ah
		jne    _03cda1_jump
		mov    $0x00fa00,%ecx
		mov    _0ccad8_data,%esi
		mov    _0cd154_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _03ce9d_jump

	_03cda1_jump:
		mov    _09646c_data,%eax
		mov    _0cca4c_data,%edx
		cmp    %edx,%eax
		je     _03cde4_jump
		jge    _03cdda_jump
		mov    _0cca46_data,%ecx
		mov    _0cca4a_data,%ebx
		mov    _0cca4e_data,%edx
		mov    _0cca52_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024b3c_func

	_03cdda_jump:
		mov    _0cca4c_data,%eax
		mov    %eax,_09646c_data

	_03cde4_jump:
		mov    _0cca54_data,%ebx
		lea    0x000000(,%ebx,4),%eax
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0cd154_data,%eax
		shl    $0x000006,%ebx
		call   _07fcc0_func
		mov    _0cd154_data,%edx
		mov    _0cca4c_data,%ecx
		mov    _0cca54_data,%ebx
		add    %ecx,%edx
		lea    0x000000(,%ebx,4),%ecx
		add    %ebx,%ecx
		mov    _0cca4c_data,%esi
		shl    $0x000006,%ecx
		mov    _0ccad8_data,%ebx
		lea    (%edx,%ecx,1),%eax
		add    %esi,%ebx
		mov    _0cca54_data,%si
		jmp    _03ce60_jump

	_03ce3c_jump:
		mov    _0cca4c_data,%dx
		jmp    _03ce4d_jump

	_03ce45_jump:
		inc    %edx
		inc    %eax
		mov    (%ebx),%cl
		inc    %ebx
		mov    %cl,-0x000001(%eax)

	_03ce4d_jump:
		mov    _0cca48_data,%ebp
		movswl %dx,%ecx
		cmp    %ebp,%ecx
		jl     _03ce45_jump
		movswl %di,%ecx
		inc    %esi
		add    %ecx,%eax

	_03ce60_jump:
		add    %ecx,%ebx
		mov    _0cca50_data,%ebp
		movswl %si,%ecx
		cmp    %ebp,%ecx
		jl     _03ce3c_jump
		mov    $0x0000c8,%ebx
		mov    _0cd154_data,%edx
		sub    %ebp,%ebx
		lea    0x000000(,%ebp,4),%eax
		lea    0x000000(,%ebx,4),%ecx
		add    %ebp,%eax
		add    %ecx,%ebx
		shl    $0x000006,%eax
		shl    $0x000006,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _07fcc0_func

	_03ce9d_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03cea4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		xor    %edx,%edx
		mov    %edx,_0df4e0_data
		cmpw   $0x000001,_0cf282_data
		jne    _03cec6_jump
		cmpw   $0x000009,_0cf270_data
		je     _03cef6_jump

	_03cec6_jump:
		cmpw   $0x000002,_0cf282_data
		jne    _03ceda_jump
		cmpw   $0x000004,_0cf270_data
		je     _03cef6_jump

	_03ceda_jump:
		cmpw   $0x000004,_0cf282_data
		jne    _03d243_jump
		cmpw   $0x000009,_0cf270_data
		jne    _03d243_jump

	_03cef6_jump:
		xor    %ecx,%ecx
		mov    $0x00003f,%esi
		mov    $0x000003,%edi
		mov    $0x000004,%ebp

	_03cf07_jump:
		mov    _0cd224_data,%eax
		mov    _0c7938_data(%ecx),%dl
		mov    %dl,0x002d00(%ecx,%eax,1)
		mov    _0c7939_data(%ecx),%dl
		mov    %dl,0x002d01(%ecx,%eax,1)
		mov    _0c793a_data(%ecx),%dl
		mov    %dl,0x002d02(%ecx,%eax,1)
		xor    %edx,%edx
		mov    _0c7938_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03cf55_jump
		mov    %ebx,%eax

	_03cf55_jump:
		mov    _0cd224_data,%edx
		mov    %al,(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7939_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03cf80_jump
		mov    %ebx,%eax

	_03cf80_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x000001(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c793a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03cfab_jump
		mov    %ebx,%eax

	_03cfab_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x000002(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7938_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03cfd1_jump
		mov    %ebx,%eax

	_03cfd1_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x000f00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7939_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03cffa_jump
		mov    %ebx,%eax

	_03cffa_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x000f01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c793a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d023_jump
		mov    %ebx,%eax

	_03d023_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x000f02(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7938_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000006,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d051_jump
		mov    %ebx,%eax

	_03d051_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x001500(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7939_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000006,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d07f_jump
		mov    %ebx,%eax

	_03d07f_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x001501(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c793a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d0a8_jump
		mov    %ebx,%eax

	_03d0a8_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x001502(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7938_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d0d1_jump
		mov    %ebx,%eax

	_03d0d1_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x001e00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7939_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d0fa_jump
		mov    %ebx,%eax

	_03d0fa_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x001e01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c793a_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d123_jump
		mov    %ebx,%eax

	_03d123_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x001e02(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7938_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d152_jump
		mov    %ebx,%eax

	_03d152_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x002a00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7939_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d181_jump
		mov    %ebx,%eax

	_03d181_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x002a01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c793a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03d1b2_jump
		mov    %ebx,%eax

	_03d1b2_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x0029ff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7935_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7936_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7937_data(%ecx)
		cmp    $0x000300,%ecx
		jne    _03cf07_jump
		mov    $0x000005,%edx
		xor    %eax,%eax
		call   _03d480_func
		mov    $0x000007,%edx
		mov    $0x000005,%eax
		call   _03d480_func
		mov    $0x00000a,%edx
		mov    $0x000007,%eax
		call   _03d480_func
		mov    $0x00000e,%edx
		mov    $0x00000a,%eax
		xor    %ecx,%ecx
		call   _03d480_func
		mov    $0x0000c8,%eax
		mov    %cx,_0cf138_data
		call   _06b8d0_func
		inc    %eax
		mov    %ax,_0cf13a_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d243_jump:
		cmpw   $0x000005,_0cf282_data
		jne    _03d476_jump
		cmpw   $0x000004,_0cf270_data
		jne    _03d476_jump
		xor    %ecx,%ecx
		mov    $0x000064,%edi
		mov    $0x00003f,%esi

	_03d26b_jump:
		mov    _0cd224_data,%eax
		mov    _0c7938_data(%ecx),%dl
		mov    %dl,0x002d00(%ecx,%eax,1)
		mov    _0c7939_data(%ecx),%dl
		mov    %dl,0x002d01(%ecx,%eax,1)
		mov    _0c793a_data(%ecx),%dl
		xor    %ebx,%ebx
		mov    %dl,0x002d02(%ecx,%eax,1)
		mov    %esi,%eax
		mov    _0c7938_data(%ecx),%bl
		cmp    %ebx,%eax
		jle    _03d2a7_jump
		mov    %ebx,%eax

	_03d2a7_jump:
		mov    _0cd224_data,%edx
		mov    %al,(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7939_data(%ecx),%dl
		imul   $0x00004d,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d2cc_jump
		mov    %ebx,%eax

	_03d2cc_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x000001(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c793a_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d2f2_jump
		mov    %ebx,%eax

	_03d2f2_jump:
		mov    _0cd224_data,%edx
		xor    %ebx,%ebx
		mov    %al,0x000002(%ecx,%edx,1)
		mov    %esi,%eax
		mov    _0c7938_data(%ecx),%bl
		cmp    %ebx,%eax
		jle    _03d30c_jump
		mov    %ebx,%eax

	_03d30c_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x002a00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7939_data(%ecx),%dl
		imul   $0x00004d,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d335_jump
		mov    %ebx,%eax

	_03d335_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x002a01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c793a_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03d361_jump
		mov    %ebx,%eax

	_03d361_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x0029ff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7935_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7936_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7937_data(%ecx)
		cmp    $0x0002fd,%ecx
		jne    _03d26b_jump
		mov    $0x00000e,%edx
		xor    %eax,%eax
		mov    $0x000180,%ecx
		call   _03d480_func
		mov    $0x000064,%edi
		mov    $0x00003f,%esi

	_03d3b3_jump:
		xor    %edx,%edx
		mov    _0c7938_data(%ecx),%dl
		imul   $0x000054,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d3cf_jump
		mov    %ebx,%eax

	_03d3cf_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x001b00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7939_data(%ecx),%dl
		imul   $0x00003e,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d3f8_jump
		mov    %ebx,%eax

	_03d3f8_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x001b01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c793a_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03d424_jump
		mov    %ebx,%eax

	_03d424_jump:
		mov    _0cd224_data,%edx
		mov    %al,0x001aff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7935_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7936_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7937_data(%ecx)
		cmp    $0x00020d,%ecx
		jne    _03d3b3_jump
		mov    $0x000009,%edx
		xor    %eax,%eax
		call   _03d480_func
		mov    $0x00000e,%edx
		mov    $0x000009,%eax
		call   _03d480_func

	_03d476_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d480_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %ax,0x000020(%esp)
		mov    %dx,0x000028(%esp)
		inc    %eax
		mov    %ax,0x000024(%esp)
		cmp    %dx,%ax
		jge    _03d62c_jump

	_03d4a1_jump:
		xor    %esi,%esi

	_03d4a3_jump:
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,(%esp)
		imul   $0x000300,%eax,%ebp
		movswl %si,%ecx
		mov    _0cd224_data,%ebx
		lea    (%ecx,%ecx,2),%ecx
		lea    (%ebx,%ebp,1),%eax
		mov    (%ecx,%eax,1),%al
		and    $_0000ff_case,%eax
		mov    0x000026(%esp),%edx
		mov    %eax,0x000008(%esp)
		mov    0x000022(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %edx,%edi
		mov    %eax,0x000004(%esp)
		sub    %eax,%edi
		mov    0x000008(%esp),%eax
		imul   %edi,%eax
		mov    %eax,0x00000c(%esp)
		imul   $0x000300,%edx,%eax
		add    %eax,%ebx
		mov    %eax,0x000014(%esp)
		xor    %eax,%eax
		mov    (%ecx,%ebx,1),%al
		mov    (%esp),%ebx
		mov    %eax,0x000008(%esp)
		mov    0x000004(%esp),%eax
		sub    %ebx,%eax
		mov    %eax,0x000018(%esp)
		mov    %eax,%ebx
		imul   0x000008(%esp),%ebx
		add    0x00000c(%esp),%ebx
		mov    (%esp),%eax
		sub    %eax,%edx
		mov    %edx,0x000010(%esp)
		mov    %ebx,%eax
		mov    %ebx,%edx
		mov    0x000010(%esp),%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		mov    0x000004(%esp),%edx
		cmp    %ebx,%eax
		jle    _03d545_jump
		mov    %ebx,%eax

	_03d545_jump:
		mov    %eax,0x00000c(%esp)
		imul   $0x000300,%edx,%eax
		mov    _0cd224_data,%edx
		mov    %eax,0x00001c(%esp)
		add    %edx,%eax
		mov    0x00000c(%esp),%bl
		mov    %bl,(%ecx,%eax,1)
		lea    (%edx,%ebp,1),%eax
		mov    0x000001(%ecx,%eax,1),%al
		and    $_0000ff_case,%eax
		mov    %edi,%ebx
		imul   %eax,%ebx
		add    0x000014(%esp),%edx
		mov    0x000001(%ecx,%edx,1),%al
		mov    0x000018(%esp),%edx
		and    $_0000ff_case,%eax
		imul   %eax,%edx
		add    %ebx,%edx
		mov    0x000010(%esp),%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		cmp    %ebx,%eax
		jle    _03d5a3_jump
		mov    %ebx,%eax

	_03d5a3_jump:
		mov    _0cd224_data,%edx
		mov    %eax,0x00000c(%esp)
		mov    0x00001c(%esp),%eax
		add    %edx,%eax
		mov    0x00000c(%esp),%bl
		mov    %bl,0x000001(%ecx,%eax,1)
		lea    (%edx,%ebp,1),%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $_0000ff_case,%eax
		imul   %eax,%edi
		mov    0x000014(%esp),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000018(%esp),%ebp
		mov    0x000002(%ecx,%eax,1),%dl
		imul   %ebp,%edx
		add    %edi,%edx
		mov    0x000010(%esp),%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		mov    0x00001c(%esp),%edi
		cmp    %ebx,%eax
		jle    _03d5fd_jump
		mov    %ebx,%eax

	_03d5fd_jump:
		mov    _0cd224_data,%edx
		add    %edi,%edx
		inc    %esi
		mov    %al,0x000002(%ecx,%edx,1)
		cmp    $0x000100,%si
		jl     _03d4a3_jump
		mov    0x000024(%esp),%ebx
		inc    %ebx
		mov    0x000028(%esp),%ecx
		mov    %bx,0x000024(%esp)
		cmp    %cx,%bx
		jl     _03d4a1_jump

	_03d62c_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03d638_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cf138_data,%bx
		testb  $0x000040,_0cf478_data
		je     _03d7d2_jump
		cmpw   $0x000005,_0cf282_data
		jne    _03d6c3_jump
		cmpw   $0x000004,_0cf270_data
		jne    _03d6c3_jump
		cmpb   $0x000000,_0cf3f2_data
		jne    _03d6a8_jump
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cd224_data,%esi
		shl    $0x000008,%eax
		add    %eax,%esi
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		mov    _0cf138_data,%bx
		inc    %ebx
		jmp    _03d6b2_jump

	_03d6a8_jump:
		test   %bx,%bx
		jne    _03d6b2_jump
		mov    $0x000001,%ebx

	_03d6b2_jump:
		cmp    $0x00000f,%bx
		jne    _03d7d2_jump
		xor    %ebx,%ebx
		jmp    _03d7d2_jump

	_03d6c3_jump:
		cmpw   $0x000001,_0cf282_data
		jne    _03d6d7_jump
		cmpw   $0x000009,_0cf270_data
		je     _03d707_jump

	_03d6d7_jump:
		cmpw   $0x000002,_0cf282_data
		jne    _03d6eb_jump
		cmpw   $0x000004,_0cf270_data
		je     _03d707_jump

	_03d6eb_jump:
		cmpw   $0x000004,_0cf282_data
		jne    _03d7d2_jump
		cmpw   $0x000009,_0cf270_data
		jne    _03d7d2_jump

	_03d707_jump:
		mov    _0df4e0_data,%edx
		mov    _0cf138_data,%eax
		inc    %edx
		sar    $0x000010,%eax
		mov    %edx,_0df4e0_data
		cmp    %edx,%eax
		jle    _03d729_jump
		test   %bx,%bx
		je     _03d7d2_jump

	_03d729_jump:
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cd224_data,%esi
		shl    $0x000008,%eax
		add    %eax,%esi
		mov    %bx,_0cf138_data
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		mov    _0cf138_data,%bx
		test   %bx,%bx
		jne    _03d781_jump
		mov    $0x0000c3,%eax
		call   _072210_func
		mov    _0cf138_data,%bx
		inc    %ebx
		jmp    _03d7a3_jump

	_03d781_jump:
		mov    _0df4e0_data,%eax
		mov    %eax,%edx
		mov    $0x000002,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    _03d799_jump
		inc    %ebx
		jmp    _03d7a3_jump

	_03d799_jump:
		test   %bx,%bx
		jne    _03d7a3_jump
		mov    $0x000001,%ebx

	_03d7a3_jump:
		cmp    $0x00000f,%bx
		jne    _03d7d2_jump
		mov    $0x000190,%eax
		xor    %esi,%esi
		xor    %ebx,%ebx
		mov    %esi,_0df4e0_data
		mov    %bx,_0cf138_data
		call   _06b8d0_func
		inc    %eax
		mov    _0cf138_data,%bx
		mov    %ax,_0cf13a_data

	_03d7d2_jump:
		mov    %bx,_0cf138_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d7e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %al,%cl
		cmpb   $_0000ff_case,_095de4_data
		jne    _03d7fb_jump
		call   _01455b_func
		call   _03c204_func

	_03d7fb_jump:
		cmpb   $0x000001,_095de4_data
		je     _03d8f3_jump
		call   _014617_func
		mov    $0x010000,%ebx
		mov    $_0164ad_func,%esi
		mov    $_016633_func,%edi
		mov    _095de0_data,%eax
		xor    %edx,%edx
		mov    $_0167ca_func,%ebp
		call   _07fcc0_func
		xor    %eax,%eax
		mov    $0x000001,%dh
		mov    %cl,%al
		mov    $_01633a_func,%ebx
		call   _03c0d4_jump
		mov    $_0164b9_func,%ecx
		mov    $_012b6d_func,%eax
		mov    %dh,_095de4_data
		mov    %ebx,_0cca88_data
		mov    %esi,_0ccaa4_data
		mov    %edi,_0cca8c_data
		mov    %ebp,_0ccab4_data
		mov    $_016346_func,%edx
		mov    $_012b9e_func,%ebx
		mov    $_012c0e_func,%esi
		mov    $_012c8b_func,%edi
		mov    $_012d40_func,%ebp
		mov    %ecx,_0ccab0_data
		mov    %eax,_0cca90_data
		mov    $_012bce_func,%ecx
		mov    $_012e13_func,%eax
		mov    %edx,_0cca9c_data
		mov    %ebx,_0ccaa0_data
		mov    %esi,_0ccad0_data
		mov    %edi,_0ccacc_data
		mov    %ebp,_0ccaac_data
		mov    $_012b3d_func,%edx
		mov    $_012dbc_func,%ebx
		mov    $_012c5b_func,%esi
		mov    %ecx,_0cca98_data
		mov    %eax,_0ccaa8_data
		mov    $_012d07_func,%ecx
		mov    %edx,_0cca94_data
		mov    %ebx,_0ccad4_data
		mov    %esi,_0ccac4_data
		mov    $_012eed_func,%edx
		mov    %ecx,_0ccac8_data
		mov    %edx,_0ccac0_data

	_03d8f3_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d8fc_func:
		call   _014746_func
		movb   $_0000ff_case,_095de4_data
		ret    



_03d90c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %al,%cl
		cmpb   $_0000ff_case,_095de4_data
		jne    _03d927_jump
		call   _01455b_func
		call   _03c204_func

	_03d927_jump:
		cmpb   $0x000000,_095de4_data
		je     _03da3a_jump
		call   _0145be_func
		mov    $0x00fa00,%ebx
		mov    _0ccae4_data,%eax
		xor    %edx,%edx
		mov    $_016a50_func,%esi
		call   _07fcc0_func
		mov    $0x00fa00,%ebx
		mov    _095de0_data,%eax
		xor    %edx,%edx
		mov    $_016b3e_func,%edi
		call   _07fcc0_func
		mov    _095de0_data,%eax
		mov    $_016bdd_func,%ebp
		call   _014543_func
		xor    %eax,%eax
		mov    $_01696c_func,%ebx
		mov    %cl,%al
		xor    %dh,%dh
		call   _03c0d4_jump
		mov    $_016a5c_jump,%ecx
		mov    $_015568_func,%eax
		mov    %dh,_095de4_data
		mov    %ebx,_0cca88_data
		mov    %esi,_0ccaa4_data
		mov    %edi,_0cca8c_data
		mov    %ebp,_0ccab4_data
		mov    $_016978_jump,%edx
		mov    $_0155cf_func,%ebx
		mov    $_01563b_func,%esi
		mov    $_0156b4_func,%edi
		mov    $_01573e_func,%ebp
		mov    %ecx,_0ccab0_data
		mov    %eax,_0cca90_data
		mov    $_0155ff_func,%ecx
		mov    $_0157dc_func,%eax
		mov    %edx,_0cca9c_data
		mov    %ebx,_0ccaa0_data
		mov    %esi,_0ccad0_data
		mov    %edi,_0ccacc_data
		mov    %ebp,_0ccaac_data
		mov    $_01559f_func,%edx
		mov    $_01578f_func,%ebx
		mov    $_015684_func,%esi
		mov    %ecx,_0cca98_data
		mov    %eax,_0ccaa8_data
		mov    $_015705_func,%ecx
		mov    %edx,_0cca94_data
		mov    %ebx,_0ccad4_data
		mov    %esi,_0ccac4_data
		mov    $_015853_func,%edx
		mov    %ecx,_0ccac8_data
		mov    %edx,_0ccac0_data

	_03da3a_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03da44_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		test   %eax,%eax
		jle    _03da5d_jump

	_03da4e_jump:
		call   _016ded_func
		inc    %edx
		call   _016ddd_func
		cmp    %ebx,%edx
		jl     _03da4e_jump

	_03da5d_jump:
		pop    %edx
		pop    %ebx
		ret    



_03da60_func:
		test   %dl,%dl
		je     _03da6b_jump
		mov    $0x00004d,%edx
		jmp    _03da70_jump

	_03da6b_jump:
		mov    $0x0000ef,%edx

	_03da70_jump:
		mov    %dx,0x000060(%eax)
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		mov    _0933a6_data(,%edx,2),%dx
		mov    %dx,0x00005c(%eax)
		ret    



_03da88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cf1fc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03dac5_jump
		push   $0xffffffc1
		mov    %eax,%edx
		shl    $0x000005,%eax
		mov    $0xffffffcc,%ecx
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01ce30_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03dac5_jump:
		movw   $0x000000,0x000042(%esi)
		mov    0x000042(%esi),%ax
		mov    %ax,0x000040(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03dad8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,0x00007f(%eax)
		je     _03dae8_jump
		decb   0x00007f(%ebx)

	_03dae8_jump:
		mov    0x000081(%ebx),%dl
		shl    $0x000004,%dl
		mov    0x000060(%ebx),%cx
		shr    $0x000007,%dl
		cmp    $0x0000ef,%cx
		jne    _03db08_jump
		mov    %ebx,%eax
		call   _01dbe4_func
		jmp    _03db0f_jump

	_03db08_jump:
		mov    %ebx,%eax
		call   _03da88_func

	_03db0f_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    %eax,%ecx
		xor    %eax,%eax
		shl    $0x000008,%ecx
		mov    0x00006c(%ebx),%al
		and    $0x000001,%dl
		add    %ecx,%eax
		shl    $0x000003,%dl
		cmp    $0x000009,%eax
		jb     _03db8b_jump
		jbe    _03dcb9_jump
		cmp    $0x000010,%eax
		jb     _03db6e_jump
		jbe    _03dc41_jump
		cmp    $0x000013,%eax
		jb     _03db60_jump
		jbe    _03dc5f_jump
		cmp    $0x000014,%eax
		jbe    _03dc23_jump
		cmp    $0x000200,%eax
		je     _03dcec_jump
		jmp    _03dd2f_jump

	_03db60_jump:
		cmp    $0x000011,%eax
		je     _03dc05_jump
		jmp    _03dd2f_jump

	_03db6e_jump:
		cmp    $0x00000b,%eax
		jb     _03dd0e_jump
		jbe    _03dc23_jump
		cmp    $0x00000d,%eax
		je     _03dbf5_jump
		jmp    _03dd2f_jump

	_03db8b_jump:
		cmp    $0x000003,%eax
		jb     _03dbb5_jump
		jbe    _03dbcb_jump
		cmp    $0x000006,%eax
		jb     _03dbab_jump
		jbe    _03dc7d_jump
		cmp    $0x000008,%eax
		je     _03dc23_jump
		jmp    _03dd2f_jump

	_03dbab_jump:
		cmp    $0x000005,%eax
		je     _03dbf5_jump
		jmp    _03dd2f_jump

	_03dbb5_jump:
		cmp    $0x000001,%eax
		jb     _03dbc2_jump
		jbe    _03dd29_jump
		jmp    _03dbdc_jump

	_03dbc2_jump:
		test   %eax,%eax
		je     _03dc05_jump
		jmp    _03dd2f_jump

	_03dbcb_jump:
		movw   $0x00fff8,0x000042(%ebx)
		movw   $0x000000,0x000040(%ebx)
		jmp    _03dd2f_jump

	_03dbdc_jump:
		mov    0x000081(%ebx),%cl
		and    $0x0000f7,%cl
		mov    %cl,0x000081(%ebx)
		mov    %cl,%ch
		or     %dl,%ch
		mov    %ch,0x000081(%ebx)

	_03dbf5_jump:
		mov    %ebx,%eax
		movb   $0x000032,0x00007f(%ebx)
		call   _03e0cc_func
		jmp    _03dd2f_jump

	_03dc05_jump:
		cmpb   $0x000000,_0ce172_data
		je     _03dd2f_jump
		mov    $0x00000f,%edx
		mov    %ebx,%eax
		call   _01d434_func
		jmp    _03dd2f_jump

	_03dc23_jump:
		cmpb   $0x000000,_0ce172_data
		je     _03dd2f_jump
		mov    $0x000012,%edx
		mov    %ebx,%eax
		call   _01d434_func
		jmp    _03dd2f_jump

	_03dc41_jump:
		cmpb   $0x000000,_0ce172_data
		jne    _03dd2f_jump
		mov    $0x000011,%edx
		mov    %ebx,%eax
		call   _01d434_func
		jmp    _03dd2f_jump

	_03dc5f_jump:
		cmpb   $0x000000,_0ce172_data
		jne    _03dd2f_jump
		mov    $0x000014,%edx
		mov    %ebx,%eax
		call   _01d434_func
		jmp    _03dd2f_jump

	_03dc7d_jump:
		mov    0x000081(%ebx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dh
		mov    %ah,0x000081(%ebx)
		or     %dl,%dh
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		call   _01cca0_func
		test   %al,%al
		je     _03dd2f_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _03da60_func
		movw   $0x000000,0x000040(%ebx)
		jmp    _03dd2f_jump

	_03dcb9_jump:
		mov    0x000081(%ebx),%cl
		and    $0x0000f7,%cl
		mov    %cl,0x000081(%ebx)
		mov    %cl,%ch
		or     %dl,%ch
		mov    %ebx,%eax
		mov    %ch,0x000081(%ebx)
		call   _01cca0_func
		test   %al,%al
		je     _03dd2f_jump
		mov    %ebx,%eax
		call   _0552b4_func
		movw   $0x00fffd,0x000042(%ebx)
		jmp    _03dd2f_jump

	_03dcec_jump:
		mov    0x000081(%ebx),%dh
		and    $0x0000f7,%dh
		mov    %dh,%cl
		mov    %dh,0x000081(%ebx)
		or     %dl,%cl
		mov    %ebx,%eax
		mov    %cl,0x000081(%ebx)
		call   _0552b4_func
		jmp    _03dd2f_jump

	_03dd0e_jump:
		mov    0x000081(%ebx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dh
		mov    %ah,0x000081(%ebx)
		or     %dl,%dh
		mov    %dh,0x000081(%ebx)
		jmp    _03dd2f_jump

	_03dd29_jump:
		movw   $0x000064,0x000056(%ebx)

	_03dd2f_jump:
		mov    0x000056(%ebx),%si
		test   %si,%si
		je     _03dd3f_jump
		mov    %esi,%edi
		dec    %edi
		mov    %di,0x000056(%ebx)

	_03dd3f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03dd48_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    (%ecx),%ecx
		mov    0x00006c(%eax),%dl
		testb  $0x000004,0x000007(%ecx,%edx,8)
		je     _03ddba_jump
		cmpw   $0x00004d,0x000060(%eax)
		jne    _03dd71_jump
		xor    %ebx,%ebx
		jmp    _03dd76_jump

	_03dd71_jump:
		mov    $0x000005,%ebx

	_03dd76_jump:
		xor    %ecx,%ecx
		mov    0x00006a(%eax),%cl
		lea    0x000000(,%ecx,4),%edx
		sub    %ecx,%edx
		shl    $0x000002,%edx
		mov    0x000004(%eax),%ecx
		add    %ecx,%edx
		mov    0x000008(%edx),%cx
		and    $0x00003f,%ch
		and    $0x00ffff,%ecx
		mov    0x00006b(%eax),%al
		and    $_0000ff_case,%eax
		imul   %eax,%ecx
		shl    $0x000002,%ecx
		mov    (%edx),%eax
		add    %eax,%ecx
		movswl %bx,%eax
		cmpb   $0x000000,0x000003(%ecx,%eax,4)
		jne    _03ddba_jump
		mov    $0xffffffff,%ebx

	_03ddba_jump:
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ddc0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%edi
		mov    %edx,0x000008(%esp)
		mov    %bl,0x00001c(%esp)
		mov    %cl,0x000018(%esp)
		call   _03dd48_func
		mov    %eax,%ebx
		cwtl   
		cmp    $0xffffffff,%eax
		je     _03e0c2_jump
		mov    _0cc7a0_data,%esi
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _03e0c2_jump

	_03ddfd_jump:
		cmpw   $0x00004e,0x000060(%esi)
		jne    _03e0b2_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _03e0b2_jump
		cmpb   $0x000000,0x00001c(%esp)
		je     _03de3c_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _03de61_jump

	_03de3c_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%cl
		and    $0x000001,%dl
		and    $0x0000f7,%cl
		shl    $0x000003,%dl
		mov    %cl,(%eax)
		mov    %cl,%ch
		or     %dl,%ch
		mov    %ch,(%eax)

	_03de61_jump:
		mov    0x000008(%esp),%eax
		mov    %ax,0x000042(%esi)
		lea    0x000010(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000018(%esp),%eax
		movswl %bx,%edx
		push   %eax
		lea    0x00000c(%esp),%ebx
		mov    %edi,%eax
		call   _01d7e0_func
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00006c(%edi),%al
		cmp    $0x000005,%al
		jb     _03ded9_jump
		jbe    _03df31_jump
		cmp    $0x00000d,%al
		jb     _03dff9_jump
		jbe    _03df85_jump
		cmp    $0x000012,%al
		je     _03dee1_jump
		jmp    _03dff9_jump

	_03ded9_jump:
		cmp    $0x000002,%al
		jne    _03dff9_jump

	_03dee1_jump:
		mov    0x00002c(%esi),%edx
		xor    %eax,%eax
		dec    %edx
		mov    0x00006d(%esi),%al
		mov    %edx,0x00002c(%esi)
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		mov    $0x000030,%ecx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    %cx,0x00000c(%esp)
		mov    0x000005(%edx,%eax,8),%cl
		and    $0x00000f,%cl
		mov    %cl,0x000005(%edx,%eax,8)
		mov    %cl,%ch
		or     $0x0000a0,%ch
		mov    %ch,0x000005(%edx,%eax,8)
		mov    $0x000003,%bh
		movb   $0x000000,0x000071(%esi)
		mov    %bh,0x000020(%esp)
		movb   $0x00000a,0x000072(%esi)
		jmp    _03dff9_jump

	_03df31_jump:
		lea    0x000018(%edx),%eax
		mov    %eax,0x00002c(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    $0x000020,%ebx
		mov    0x00000c(%esi),%eax
		mov    %bx,0x00000c(%esp)
		lea    (%eax,%edx,1),%ebx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%edx
		mov    $0x000003,%cl
		mov    (%ebx),%eax
		mov    %cl,0x000020(%esp)
		mov    0x000005(%edx,%eax,1),%ch
		and    $0x00000f,%ch
		mov    %ch,%bl
		mov    %ch,0x000005(%edx,%eax,1)
		or     $0x000020,%bl
		mov    %bl,0x000005(%edx,%eax,1)
		movb   $0x000000,0x000071(%esi)
		movb   $0x000000,0x000072(%esi)
		jmp    _03dff9_jump

	_03df85_jump:
		mov    $0x000020,%eax
		mov    $0x000008,%edx
		call   _06b8d0_func
		sub    %eax,%edx
		mov    %dx,0x00000c(%esp)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _03dfb0_jump
		mov    $0x000001,%eax
		jg     _03dfb0_jump
		neg    %eax

	_03dfb0_jump:
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    %dx,0x00000c(%esp)
		xor    %eax,%eax
		xor    %dh,%dh
		mov    0x00006d(%esi),%al
		mov    %dh,0x000020(%esp)
		shl    $0x000002,%eax
		mov    0x00000c(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x000020,%bh
		mov    %bh,0x000005(%edx,%eax,8)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ebp
		movb   $0x000000,0x000072(%esi)
		sub    $0x000014,%ebp
		mov    %ebp,0x00002c(%esi)

	_03dff9_jump:
		cmpb   $0x000000,0x00001c(%esp)
		jne    _03e007_jump
		movw   $0x000010,0x00000c(%esp)

	_03e007_jump:
		testb  $0x000008,0x000081(%edi)
		je     _03e01a_jump
		mov    0x00000c(%esp),%eax
		mov    %ax,0x000040(%esi)
		jmp    _03e02a_jump

	_03e01a_jump:
		mov    0x00000c(%esp),%eax
		mov    %eax,%edx
		mov    %ax,0x000040(%esi)
		neg    %edx
		mov    %dx,0x000040(%esi)

	_03e02a_jump:
		mov    $0x000004,%cl
		mov    0x000040(%esi),%ax
		xor    %edx,%edx
		test   %ax,%ax
		js     _03e03c_jump
		sar    %cl,%ax
		jmp    _03e045_jump

	_03e03c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03e045_jump:
		mov    0x000020(%esp),%dl
		cwtl   
		imul   %edx,%eax
		mov    0x000028(%esi),%ebx
		add    %eax,%ebx
		mov    0x000081(%esi),%al
		xor    %edx,%edx
		shl    $0x000004,%al
		mov    %ebx,0x000028(%esi)
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _060460_func
		mov    %esi,%eax
		call   _01dc5c_func
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f3d4_func
		mov    0x000081(%esi),%dh
		mov    0x000018(%esp),%al
		and    $0x0000bf,%dh
		mov    %al,0x00007f(%esi)
		mov    %dh,0x000081(%esi)
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03e0b2_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _03ddfd_jump

	_03e0c2_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03e0cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		cmpb   $0x000000,0x00006d(%eax)
		jne    _03e2ad_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _03e0e8_jump
		cmpb   $0x000015,0x00006b(%esi)
		jae    _03e106_jump

	_03e0e8_jump:
		cmpb   $0x000005,0x00006c(%esi)
		jne    _03e0f4_jump
		cmpb   $0x000012,0x00006b(%esi)
		jae    _03e106_jump

	_03e0f4_jump:
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _03e100_jump
		cmpb   $0x000002,0x00006b(%esi)
		jae    _03e106_jump

	_03e100_jump:
		movw   $0x000000,0x000052(%esi)

	_03e106_jump:
		cmpw   $0x000000,0x000052(%esi)
		jne    _03e2b3_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _03e11d_jump
		cmpb   $0x000015,0x00006b(%esi)
		je     _03e13d_jump

	_03e11d_jump:
		cmpb   $0x000005,0x00006c(%esi)
		jne    _03e129_jump
		cmpb   $0x000012,0x00006b(%esi)
		je     _03e13d_jump

	_03e129_jump:
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _03e2b3_jump
		cmpb   $0x000002,0x00006b(%esi)
		jne    _03e2b3_jump

	_03e13d_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _03e2b3_jump
		mov    0x00006c(%esi),%ch
		cmp    $0x000005,%ch
		jne    _03e190_jump
		mov    $0x000028,%ecx
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _03ddc0_func
		jmp    _03e2a2_jump

	_03e190_jump:
		cmp    $0x000002,%ch
		jne    _03e1b6_jump
		mov    $0x000028,%ecx
		mov    $0x000001,%ebx
		mov    $0xffffffff,%edx
		mov    %esi,%eax
		call   _03ddc0_func
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e1b6_jump:
		mov    $0x000064,%ecx
		mov    $0x000001,%ebx
		mov    $0xfffffffd,%edx
		mov    %esi,%eax
		call   _03ddc0_func
		mov    0x000081(%esi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		mov    $0x000064,%ecx
		or     %dl,%bh
		mov    $0xfffffffd,%edx
		mov    %bh,(%eax)
		mov    $0x000001,%ebx
		mov    %esi,%eax
		call   _03ddc0_func
		mov    0x000081(%esi),%cl
		lea    0x000081(%esi),%eax
		test   $0x000008,%cl
		sete   %dl
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    $0x000001,%ebx
		mov    %ch,%dh
		mov    %ch,(%eax)
		or     %dl,%dh
		mov    $0x000064,%ecx
		mov    %dh,(%eax)
		mov    $0xfffffffd,%edx
		mov    %esi,%eax
		call   _03ddc0_func
		mov    0x000081(%esi),%bl
		lea    0x000081(%esi),%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		mov    %bh,(%eax)
		mov    $0x000001,%ebx
		or     %dl,%cl
		mov    $0xfffffffd,%edx
		mov    %cl,(%eax)
		mov    $0x000064,%ecx
		mov    %esi,%eax
		call   _03ddc0_func
		mov    0x000081(%esi),%ch
		lea    0x000081(%esi),%eax
		test   $0x000008,%ch
		sete   %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)

	_03e2a2_jump:
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e2ad_jump:
		movw   $0x000000,0x000052(%esi)

	_03e2b3_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e2b8_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%al
		testb  $0x000001,0x000007(%ebx,%eax,8)
		je     _03e3d0_jump
		cmpw   $0x000000,0x000056(%esi)
		jne    _03e3d0_jump
		cmpw   $0x00004d,0x000060(%esi)
		je     _03e2f8_jump
		cmp    $0x000003,%dx
		jne    _03e3d0_jump

	_03e2f8_jump:
		cmpw   $0x0000ef,0x000060(%esi)
		jne    _03e32e_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _03e32e_jump
		mov    $0x000014,%ecx
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _03ddc0_func

	_03e32e_jump:
		movb   $0x000001,_0ce173_data
		mov    %esi,%eax
		call   _01e7ac_func
		cmpb   $0x000000,0x000076(%esi)
		jne    _03e34c_jump
		mov    $0x000003,%ebx
		jmp    _03e3c7_jump

	_03e34c_jump:
		cmpw   $0x00004d,0x000060(%esi)
		jne    _03e3c2_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000077(%esi),%dl
		mov    0x000076(%esi),%al
		sub    %eax,%edx
		cmp    $0x000003,%edx
		jl     _03e3b2_jump
		mov    $0x000006,%edx
		mov    %esi,%eax
		call   _01d434_func
		mov    _0cf1fc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03e3d0_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%esi
		add    %esi,%eax
		call   _0603c0_func
		mov    _0cf1fc_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0cc7a0_data,%eax
		movw   $0x000000,0x000048(%eax,%esi,4)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03e3b2_jump:
		mov    $0x00000c,%edx
		mov    %esi,%eax
		call   _01d434_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03e3c2_jump:
		mov    $0x000001,%ebx

	_03e3c7_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func

	_03e3d0_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03e3d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    0x00007f(%eax),%ah
		test   %ah,%ah
		jne    _03e46a_jump
		cmpb   $0x000000,0x00006d(%ebx)
		jne    _03e46a_jump
		mov    0x00006c(%ebx),%dh
		cmp    $0x00000b,%dh
		jne    _03e3fe_jump
		mov    $0x000002,%edx
		jmp    _03e463_jump

	_03e3fe_jump:
		test   %dh,%dh
		jne    _03e459_jump
		mov    _0ce0ac_data,%al
		mov    0x000068(%ebx),%dl
		mov    0x000028(%ebx),%cx
		mov    _0ce06c_data,%si
		add    %ecx,%edx
		add    %esi,%eax
		sub    %eax,%edx
		mov    %dx,0x00003a(%ebx)
		xor    %edx,%edx
		mov    0x000038(%ebx),%eax
		mov    0x00007a(%ebx),%dl
		sar    $0x000010,%eax
		add    $0x000010,%edx
		test   %eax,%eax
		jge    _03e433_jump
		neg    %eax

	_03e433_jump:
		cmp    %edx,%eax
		jle    _03e448_jump
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d434_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e448_jump:
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _01d434_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e459_jump:
		cmp    $0x000004,%dh
		jne    _03e46a_jump
		mov    $0x000005,%edx

	_03e463_jump:
		mov    %ebx,%eax
		call   _01d434_func

	_03e46a_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e470_func:
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,0x00007f(%eax)
		je     _03e487_jump
		cmpb   $0x000000,_0cf3ef_data
		je     _03e498_jump
		decb   0x00007f(%edx)
		pop    %edx
		ret    

	_03e487_jump:
		mov    $0x000093,%eax
		call   _072210_func
		mov    %edx,%eax
		call   _07ac90_func

	_03e498_jump:
		pop    %edx
		ret    

_03e4a0_switch:
		.long   0
		.long   0
		.long   0
		.long   0


_03e518_switch:
		.long   0
		.long   0
		.long   0
		.long   0


	_03e58c_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		xor    %edi,%edi

	_03e595_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _03eb2c_func
		cmp    $0x000020,%si
		jle    _03e595_jump

	_03e5ab_jump:
		mov    _0e0588_data,%eax
		call   _0812ea_func
		test   %eax,%eax
		jne    _03e5ab_jump
		mov    _0e058c_data,%eax
		call   _08180e_func
		xor    %eax,%eax
		call   _08144f_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e5d0_jump:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x00ff00,%eax
		xor    %edx,%edx
		call   _081373_func
		push   %ds
		mov    $0x000028,%eax
		push   $_0e058c_data
		mov    _0965a4_data,%cx
		mov    _0965a0_data,%ebx
		call   _081489_func
		test   %eax,%eax
		je     _03e607_jump
		xor    %eax,%eax
		call   _08144f_func

	_03e607_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e60c_func:
		push   %edx
		mov    %eax,%edx
		mov    $0x000003,%eax
		int    $0x000010
		push   %edx
		push   $_0c0aac_data
		call   _07f8fc_func
		add    $0x000008,%esp
		mov    $0xffffffff,%eax
		call   _07f91f_func
		pop    %edx
		ret    



_03e6a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _082d9f_func
		mov    $0x00ff00,%eax
		xor    %edx,%edx
		call   _081373_func
		push   %ds
		push   $_0e0588_data
		mov    %ds,%ecx
		push   %ds
		mov    $_0dfd00_data,%ebx
		mov    $0x002710,%edx
		push   $_096584_data
		mov    _0e057e_data,%eax
		mov    %edx,_096594_data
		call   _082e58_func
		test   %eax,%eax
		je     _03e6fb_jump
		xor    %eax,%eax
		call   _08144f_func
		call   _082e18_func
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e6fb_jump:
		push   %ds
		mov    $0x000028,%eax
		push   $_0e058c_data
		mov    _0965a4_data,%cx
		mov    _0965a0_data,%ebx
		call   _081489_func
		test   %eax,%eax
		je     _03e739_jump
		xor    %eax,%eax
		mov    $0x000001,%ebx
		call   _08144f_func
		mov    _0e0588_data,%eax
		mov    %ebx,%edx
		call   _083718_func
		mov    $0x000002,%eax

	_03e739_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e740_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    %edx,(%esp)
		mov    %ebx,%ebp
		mov    %ecx,0x000008(%esp)
		call   _01cc5c_func
		mov    $_0c0ad0_data,%edx
		mov    $_0c0ad4_data,%eax
		call   _0810de_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _03e775_jump
		mov    $_0c0ae0_data,%eax
		call   _03e60c_func

	_03e775_jump:
		mov    %edi,%edx
		shl    $0x000002,%edi
		sub    %edx,%edi
		mov    %esi,%eax
		shl    $0x000002,%edi
		xor    %ebx,%ebx
		mov    _096470_data(%edi),%edx
		mov    %esi,%ecx
		call   _08050a_func
		mov    $0x000080,%ebx
		mov    $0x000010,%edx
		mov    %ebp,%eax
		call   _0802ed_func
		mov    %esi,%eax
		call   _081192_func
		mov    %edi,%ecx
		mov    %ebp,%eax
		mov    _096479_data(%edi),%dl
		lea    0x000800(%ebp),%esi

	_03e7b8_jump:
		sub    (%eax),%dl
		mov    (%eax),%bl
		mov    _096478_data(%ecx),%dh
		inc    %eax
		xor    %dh,%bl
		mov    %bl,-0x000001(%eax)
		cmp    %esi,%eax
		jne    _03e7b8_jump
		test   %dl,%dl
		je     _03e7da_jump
		mov    $_0c0b0c_data,%eax
		call   _03e60c_func

	_03e7da_jump:
		call   _01cc5c_func
		mov    $_0c0ad0_data,%edx
		mov    $_0c0b28_data,%eax
		call   _0810de_func
		mov    %eax,0x00000c(%esp)
		test   %eax,%eax
		jne    _03e800_jump
		mov    $_0c0b34_data,%eax
		call   _03e60c_func

	_03e800_jump:
		mov    (%esp),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0964c8_data(,%eax,4),%esi
		mov    0x000008(%esp),%eax
		cmpl   $0x000000,(%eax)
		je     _03e821_jump
		call   _07f44c_func

	_03e821_jump:
		mov    %esi,%eax
		call   _07f434_func
		mov    %eax,%edi
		test   %eax,%eax
		jne    _03e838_jump
		mov    $_0c0b50_data,%eax
		call   _03e60c_func

	_03e838_jump:
		mov    0x000008(%esp),%eax
		mov    (%esp),%edx
		mov    %edi,(%eax)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000004(%esp)
		mov    _0964c4_data(%eax),%edx
		mov    0x00000c(%esp),%eax
		mov    0x00000c(%esp),%ecx
		call   _08050a_func
		mov    $0x000001,%edx
		mov    %esi,%ebx
		mov    %edi,%eax
		call   _0802ed_func
		mov    0x00000c(%esp),%eax
		mov    0x000004(%esp),%ebx
		call   _081192_func
		xor    %edx,%edx
		mov    _0964cd_data(%ebx),%bl
		test   %esi,%esi
		jbe    _03e8a4_jump
		mov    0x000004(%esp),%ecx
		mov    %edi,%eax

	_03e893_jump:
		sub    (%eax),%bl
		inc    %eax
		mov    _0964cc_data(%ecx),%bh
		inc    %edx
		xor    %bh,-0x000001(%eax)
		cmp    %esi,%edx
		jb     _03e893_jump

	_03e8a4_jump:
		test   %bl,%bl
		je     _03e8b2_jump
		mov    $_0c0b80_data,%eax
		call   _03e60c_func

	_03e8b2_jump:
		mov    %ebp,%eax
		lea    0x000800(%ebp),%edx

	_03e8ba_jump:
		mov    (%eax),%ebx
		add    $0x000010,%eax
		add    %edi,%ebx
		mov    %ebx,-0x000010(%eax)
		cmp    %edx,%eax
		jne    _03e8ba_jump
		xor    %edx,%eax
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03e8d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cf410_data
		je     _03e8ee_jump
		cmpb   $0x000000,_0cf40c_data
		jne    _03e8ee_jump
		call   _03ebe4_func

	_03e8ee_jump:
		mov    $_0965d0_data,%ecx
		mov    $0x000002,%edx
		mov    $_0df500_data,%ebx
		mov    %edx,%eax
		call   _03e740_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_03e908_switch:
		.long   _03e93b_case
		.long   _03e955_case
		.long   _03e96f_case
		.long   _03e989_case
		.long   _03e9a3_case
		.long   _03e9bd_case




_03e920_func:
		push   %ebx
		push   %ecx
		push   %edx
		dec    %eax
		cmp    $0x000005,%ax
		ja     _03e9d4_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_03e908_switch(,%eax,4)

	_03e93b_case:
		mov    $_0965d4_data,%ecx
		mov    $0x000004,%edx
		mov    $_0dfd10_data,%ebx
		mov    %edx,%eax
		call   _03e740_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e955_case:
		mov    $_0965d4_data,%ecx
		mov    $0x000006,%edx
		mov    $_0dfd10_data,%ebx
		mov    %edx,%eax
		call   _03e740_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e96f_case:
		mov    $_0965d4_data,%ecx
		mov    $0x000005,%edx
		mov    $_0dfd10_data,%ebx
		mov    %edx,%eax
		call   _03e740_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e989_case:
		mov    $_0965d4_data,%ecx
		mov    $0x000003,%edx
		mov    $_0dfd10_data,%ebx
		mov    %edx,%eax
		call   _03e740_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e9a3_case:
		mov    $_0965d4_data,%ecx
		mov    $0x000001,%edx
		mov    $_0dfd10_data,%ebx
		mov    %edx,%eax
		call   _03e740_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e9bd_case:
		mov    $_0965d4_data,%ecx
		mov    $_0dfd10_data,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _03e740_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e9d4_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e9dc_func:
		push   %esi
		push   %edi
		sub    $0x00007c,%esp
		mov    %eax,0x000074(%esp)
		mov    %edx,%ebx
		mov    %cx,0x000078(%esp)
		mov    0x000086(%esp),%eax
		mov    $0x00001d,%ecx
		sar    $0x000010,%eax
		mov    %esp,%edi
		mov    %eax,%edx
		mov    $_03e4a0_switch,%esi
		shl    $0x00000f,%edx
		rep movsl %ds:(%esi),%es:(%edi)
		sub    %eax,%edx
		mov    $0x00007f,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,0x000014(%esp)
		mov    0x00008a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000010,%edx
		sub    %eax,%edx
		mov    $0x00007f,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    0x000028(%esp),%ecx
		mov    %eax,0x000040(%esp)
		mov    0x000076(%esp),%eax
		or     $0x004760,%cx
		sar    $0x000010,%eax
		mov    0x000028(%esp),%edx
		mov    _0965d6_data(,%eax,2),%eax
		mov    0x000074(%esp),%esi
		sar    $0x000010,%eax
		or     $0x000720,%edx
		shl    $0x000008,%eax
		mov    %dx,0x000028(%esp)
		mov    %eax,0x000038(%esp)
		test   %si,%si
		jne    _03eab9_jump
		movswl %bx,%edx
		shl    $0x000004,%edx
		mov    _0df500_data(%edx),%eax
		mov    %ds,0x000004(%esp)
		mov    %eax,(%esp)
		mov    _0df504_data(%edx),%eax
		mov    _0df50c_data(%edx),%esi
		mov    %eax,0x000008(%esp)
		test   %esi,%esi
		je     _03eafb_jump
		mov    $0xffffffff,%edi
		mov    %ecx,0x000028(%esp)
		mov    _0df508_data(%edx),%eax
		mov    %esi,0x000034(%esp)
		mov    %eax,0x000030(%esp)
		mov    %edi,0x00000c(%esp)
		jmp    _03eafb_jump

	_03eab9_jump:
		movswl %bx,%edx
		shl    $0x000004,%edx
		mov    _0dfd10_data(%edx),%eax
		mov    %ds,0x000004(%esp)
		mov    %eax,(%esp)
		mov    _0dfd14_data(%edx),%eax
		mov    _0dfd1c_data(%edx),%ebx
		mov    %eax,0x000008(%esp)
		test   %ebx,%ebx
		je     _03eafb_jump
		mov    %ecx,0x000028(%esp)
		mov    %ebx,0x000034(%esp)
		mov    _0dfd18_data(%edx),%eax
		mov    $0xffffffff,%ecx
		mov    %eax,0x000030(%esp)
		mov    %ecx,0x00000c(%esp)

	_03eafb_jump:
		cmpl   $0x000000,0x000008(%esp)
		je     _03eb1e_jump
		mov    %esp,%ebx
		mov    _0e0588_data,%eax
		mov    %ds,%ecx
		call   _083bd2_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _03eb1e_jump
		cmp    $0x000020,%ax
		jl     _03eb23_jump

	_03eb1e_jump:
		mov    $0xffffffff,%eax

	_03eb23_jump:
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_03eb2c_func:
		movswl %ax,%edx
		mov    _0e0588_data,%eax
		call   _0841eb_func
		ret    $0x000004



_03eb3c_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %ebx,%edi
		movswl %dx,%edx
		mov    %edx,%eax
		shl    $0x00000f,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x00007f,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %cx,%ecx
		mov    _0e0588_data,%esi
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _084666_func
		movswl %di,%edx
		mov    %edx,%eax
		shl    $0x000010,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x00007f,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0e0588_data,%esi
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _084909_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03eb98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		xor    %edi,%edi

	_03eba1_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _03eb2c_func
		cmp    $0x000020,%si
		jle    _03eba1_jump
		mov    _0e058c_data,%eax
		call   _08180e_func
		xor    %eax,%eax
		mov    $0x000001,%ebx
		call   _08144f_func
		mov    %ebx,%edx
		mov    _0e0588_data,%eax
		call   _083718_func
		call   _082e18_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ebe4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0966d8_data,%ebp
		call   _01cc5c_func
		mov    $_0c0ad0_data,%edx
		mov    $_0c0b9c_data,%eax
		mov    $0x000007,%ecx
		call   _0810de_func
		mov    %eax,%edi
		test   %eax,%eax
		jne    _03ec1c_jump
		mov    $_0c0ba8_data,%eax
		call   _03e60c_func

	_03ec1c_jump:
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		mov    _09651c_data(%eax),%esi
		mov    %eax,0x000004(%esp)
		mov    %esi,%eax
		mov    %esi,(%esp)
		call   _07f434_func
		mov    %eax,%ebp
		mov    %eax,_0966d8_data
		test   %eax,%eax
		jne    _03ec53_jump
		mov    %edi,%eax
		call   _081192_func
		jmp    _03ecde_jump

	_03ec53_jump:
		mov    0x000004(%esp),%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		mov    _096518_data(%edx),%edx
		mov    %edi,%ecx
		call   _08050a_func
		mov    $0x000001,%edx
		mov    _0966d8_data,%eax
		mov    %esi,%ebx
		call   _0802ed_func
		mov    %edi,%eax
		mov    0x000004(%esp),%ebx
		call   _081192_func
		mov    _0966d8_data,%ebp
		mov    _096521_data(%ebx),%bl
		xor    %eax,%eax
		test   %esi,%esi
		jbe    _03ecae_jump
		mov    0x000004(%esp),%ecx
		mov    %ebp,%edx

	_03ec9c_jump:
		sub    (%edx,%eax,1),%bl
		inc    %eax
		mov    _096520_data(%ecx),%bh
		xor    %bh,-0x000001(%edx,%eax,1)
		cmp    %esi,%eax
		jb     _03ec9c_jump

	_03ecae_jump:
		mov    %ebp,_0966d8_data
		test   %bl,%bl
		je     _03ecc2_jump
		mov    $_0c0bc8_data,%eax
		call   _03e60c_func

	_03ecc2_jump:
		mov    _0966d8_data,%ebp
		mov    (%esp),%eax
		mov    %ebp,_0e0510_data
		xor    %ebp,%ebp
		mov    %eax,_0e0514_data
		mov    %ebp,_0966d8_data

	_03ecde_jump:
		mov    _0966d8_data,%ebp
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_03ecf0_switch:
		.long   _03ed5c_case
		.long   _03ed6a_case
		.long   _03ed7c_case
		.long   _03ed78_case
		.long   _03ed8f_case
		.long   _03ed63_case
		.long   _03ed71_case
		.long   _03ed83_case
		.long   _03ed8a_case




_03ed14_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000078,%esp
		mov    %eax,%ebp
		mov    %edx,%eax
		mov    $0x00001d,%ecx
		mov    %esp,%edi
		mov    $_03e518_switch,%esi
		shl    $0x00000f,%edx
		rep movsl %ds:(%esi),%es:(%edi)
		sub    %eax,%edx
		mov    $0x00007f,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,0x000014(%esp)
		mov    0x000029(%esp),%ah
		or     $0x000001,%ah
		dec    %ebp
		mov    %ah,0x000029(%esp)
		cmp    $0x000008,%ebp
		ja     _03ed8f_case
		jmp    *%cs:_03ecf0_switch(,%ebp,4)

	_03ed5c_case:
		mov    $0x000006,%ebx
		jmp    _03ed8f_case

	_03ed63_case:
		mov    $0x000005,%ebx
		jmp    _03ed8f_case

	_03ed6a_case:
		mov    $0x000004,%ebx
		jmp    _03ed8f_case

	_03ed71_case:
		mov    $0x000001,%ebx
		jmp    _03ed8f_case

	_03ed78_case:
		xor    %ebx,%ebx
		jmp    _03ed8f_case

	_03ed7c_case:
		mov    $0x000002,%ebx
		jmp    _03ed8f_case

	_03ed83_case:
		mov    $0x000007,%ebx
		jmp    _03ed8f_case

	_03ed8a_case:
		mov    $0x000008,%ebx

	_03ed8f_case:
		cmp    $0x000007,%ebx
		je     _03ee86_jump
		call   _01cc5c_func
		mov    $_0c0ad0_data,%edx
		mov    $_0c0b9c_data,%eax
		call   _0810de_func
		mov    %eax,%edi
		test   %eax,%eax
		jne    _03edbc_jump
		mov    $_0c0ba8_data,%eax
		call   _03e60c_func

	_03edbc_jump:
		lea    0x000000(,%ebx,4),%esi
		sub    %ebx,%esi
		mov    _09651c_data(,%esi,4),%esi
		mov    _0966d8_data,%edx
		mov    %esi,0x000074(%esp)
		test   %edx,%edx
		je     _03ede4_jump
		mov    $_0966d8_data,%eax
		call   _07f44c_func

	_03ede4_jump:
		mov    %esi,%eax
		call   _07f434_func
		mov    %eax,_0966d8_data
		test   %eax,%eax
		jne    _03ee00_jump
		mov    %edi,%eax
		call   _081192_func
		jmp    _03eeba_jump

	_03ee00_jump:
		lea    0x000000(,%ebx,4),%ebp
		sub    %ebx,%ebp
		mov    %edi,%eax
		shl    $0x000002,%ebp
		xor    %ebx,%ebx
		mov    _096518_data(%ebp),%edx
		mov    %edi,%ecx
		call   _08050a_func
		mov    $0x000001,%edx
		mov    _0966d8_data,%eax
		mov    %esi,%ebx
		call   _0802ed_func
		mov    %edi,%eax
		call   _081192_func
		mov    _096521_data(%ebp),%bl
		xor    %eax,%eax
		test   %esi,%esi
		jbe    _03ee5b_jump
		mov    %ebp,%ecx

	_03ee43_jump:
		mov    _0966d8_data,%edx
		sub    (%edx,%eax,1),%bl
		inc    %eax
		mov    _096520_data(%ecx),%bh
		xor    %bh,-0x000001(%edx,%eax,1)
		cmp    %esi,%eax
		jb     _03ee43_jump

	_03ee5b_jump:
		test   %bl,%bl
		je     _03ee69_jump
		mov    $_0c0bc8_data,%eax
		call   _03e60c_func

	_03ee69_jump:
		mov    0x000028(%esp),%cl
		mov    _0966d8_data,%eax
		mov    %ds,0x000004(%esp)
		or     $0x000080,%cl
		mov    %eax,(%esp)
		mov    0x000074(%esp),%eax
		mov    %cl,0x000028(%esp)
		jmp    _03eea2_jump

	_03ee86_jump:
		mov    0x000028(%esp),%dl
		mov    _0e0510_data,%eax
		mov    %ds,0x000004(%esp)
		or     $0x000080,%dl
		mov    %eax,(%esp)
		mov    _0e0514_data,%eax
		mov    %dl,0x000028(%esp)

	_03eea2_jump:
		mov    %eax,0x000008(%esp)
		mov    %esp,%ebx
		mov    _0e0588_data,%eax
		mov    %ds,%ecx
		call   _083bd2_func
		mov    %ax,_0e0590_data

	_03eeba_jump:
		add    $0x000078,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03eec4_func:
		push   %edx

	_03eec5_jump:
		mov    _0e058e_data,%edx
		mov    _0e0588_data,%eax
		sar    $0x000010,%edx
		call   _084cbe_func
		cmp    $0x000001,%eax
		jne    _03eec5_jump
		mov    $_0966d8_data,%eax
		xor    %edx,%edx
		call   _07f44c_func
		mov    %edx,_0966d8_data
		pop    %edx
		ret    



_03eef4_func:
		and    $0x00ffff,%eax
		mov    %eax,_0dfd00_data
		ret    



_03ef00_func:
		mov    %eax,_0dfd04_data
		ret    



_03ef08_func:
		mov    %eax,_0dfd08_data
		ret    



_03ef10_func:
		mov    %eax,_0dfd0c_data
		ret    



_03ef18_func:
		mov    %eax,_0e057e_data
		ret    



_03ef28_func:
		mov    $_0dfd00_data,%eax
		ret    



_03ef30_func:
		mov    $_0dfd04_data,%eax
		ret    



_03ef38_func:
		mov    $_0dfd08_data,%eax
		ret    



_03ef40_func:
		mov    $_0dfd0c_data,%eax
		ret    



_03ef48_func:
		mov    $_0e057e_data,%eax
		ret    



_03ef60_func:
		push   %ebx
		push   %edx
		mov    _0cf2c2_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		orb    $0x000004,0x000081(%edx)
		mov    _0cf2ae_data,%eax
		movl   $0x000001,0x000024(%edx)
		sar    $0x000010,%eax
		movl   $0x0000a0,0x000028(%edx)
		sub    $0x000032,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%bl
		call   _0188b0_func
		sub    %ebx,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0cf284_data,%eax
		sar    $0x000010,%eax
		add    $0x000130,%eax
		mov    _0cf2ae_data,%bx
		mov    %eax,0x000028(%edx)
		xor    %eax,%eax
		add    $0x000140,%ebx
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		sub    $0x00003c,%ebx
		mov    %bx,0x00003c(%edx)
		mov    0x000081(%edx),%bl
		and    $0x0000f7,%bl
		mov    _0ce0d0_data,%eax
		mov    %bl,0x000081(%edx)
		mov    _0cf220_data,%bh
		movb   $0x000032,0x00007f(%edx)
		or     $0x000001,%bh
		movb   $0x000008,0x00006e(%eax)
		mov    %bh,_0cf220_data
		pop    %edx
		pop    %ebx
		ret    



_03f014_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    _0ce06c_data,%eax
		mov    _0ce0ac_data,%dl
		add    $0x000008,%eax
		lea    (%edx,%eax,1),%ebx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce0ad_data,%dl
		mov    _0ce0b8_data,%al
		sub    %eax,%edx
		mov    _0e062a_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		sar    %ebx
		add    $0x00005a,%eax
		sub    %ebx,%eax
		mov    %ax,_0e062e_data
		mov    _0cf2cc_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x000081(%edx),%ah
		movl   $0x0000a0,0x000028(%edx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%edx)
		mov    0x000028(%edx),%eax
		mov    %ax,0x00003c(%edx)
		mov    _0cf2ae_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    $0x000110,%ecx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		xor    %ebx,%ebx
		call   _0188b0_func
		mov    0x000068(%edx),%bl
		movw   $0x000000,0x000040(%edx)
		sub    %ebx,%ecx
		mov    _0cf2ae_data,%ebx
		movw   $0x000000,0x000042(%edx)
		sar    $0x000010,%ebx
		mov    %ecx,0x000028(%edx)
		sub    $0x0000c8,%ebx
		mov    %cx,0x00003c(%edx)
		mov    %ebx,%ecx
		movl   $0x000001,0x000024(%edx)
		xor    %bl,%cl
		mov    %ebx,0x00002c(%edx)
		mov    %cl,_0e0638_data
		mov    0x000081(%edx),%ch
		mov    %bx,0x00003e(%edx)
		or     $0x000004,%ch
		mov    %ch,0x000081(%edx)
		xor    %edx,%edx
		mov    _0ce06c_data,%ecx
		mov    _0ce0ac_data,%dl
		add    $0x000008,%ecx
		lea    (%edx,%ecx,1),%esi
		mov    _0cf2ac_data,%ecx
		mov    %ax,_0e062c_data
		sar    $0x000010,%ecx
		xor    %edx,%edx
		sub    %ecx,%esi
		xor    %ecx,%ecx
		mov    _0ce0b8_data,%dl
		mov    _0ce0ad_data,%cl
		cwtl   
		sub    %edx,%ecx
		sub    %ecx,%eax
		sar    %esi
		sub    $0x000046,%eax
		add    %esi,%eax
		mov    %ax,_0e0630_data
		mov    _0cf2ba_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		movl   $0x000001,0x000024(%edx)
		mov    0x000081(%edx),%al
		mov    %ebx,0x00002c(%edx)
		or     $0x00000c,%al
		mov    %al,0x000081(%edx)
		xor    %eax,%eax
		mov    $0x000020,%ecx
		mov    0x000068(%edx),%al
		mov    %bx,0x00003e(%edx)
		sub    %eax,%ecx
		mov    %ecx,0x000028(%edx)
		mov    %ebx,%eax
		mov    %cx,0x00003c(%edx)
		xor    %bh,%ah
		mov    _0cf220_data,%dl
		mov    %ah,_0e0639_data
		or     $0x000001,%dl
		mov    _0ce0d0_data,%eax
		mov    %dl,_0cf220_data
		movb   $0x000008,0x00006e(%eax)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f1c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf2ca_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		testb  $0x000002,_0cf221_data
		jne    _03f1f4_jump
		mov    $_0ce044_data,%eax
		call   _07af48_func
		call   _05a510_func

	_03f1f4_jump:
		orb    $0x000001,_0cf221_data
		mov    0x000081(%edx),%bh
		mov    _0cf2ac_data,%eax
		or     $0x000004,%bh
		sar    $0x000010,%eax
		mov    %bh,0x000081(%edx)
		xor    %ebx,%ebx
		add    $0x0000a0,%eax
		mov    0x000068(%edx),%bl
		sub    %ebx,%eax
		mov    _0cf220_data,%cl
		mov    %eax,0x000028(%edx)
		mov    _0cf2ae_data,%ebx
		mov    %ax,0x00003c(%edx)
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000069(%edx),%al
		movl   $0x000001,0x000024(%edx)
		sub    %eax,%ebx
		or     $0x000001,%cl
		mov    %ebx,0x00002c(%edx)
		mov    _0ce0d0_data,%eax
		mov    %bx,0x00003e(%edx)
		mov    %cl,_0cf220_data
		movb   $0x000008,0x00006e(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f260_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		movb   $0x000001,_0cf45a_data
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		jb     _03f28d_jump
		jbe    _03f2a6_jump
		cmp    $0x000014,%al
		jb     _03f3be_jump
		jbe    _03f2df_jump
		cmp    $0x00001e,%al
		je     _03f39f_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f28d_jump:
		movw   $0x000000,0x000040(%esi)
		xor    %ch,%ch
		movw   $0x00fff8,0x000042(%esi)
		mov    %ch,_0cf45a_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f2a6_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _03f2b2_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _03f2b9_jump

	_03f2b2_jump:
		mov    %esi,%eax
		call   _01dbe4_func

	_03f2b9_jump:
		mov    $0xffff8300,%edx
		movw   $0x000000,0x000042(%esi)
		mov    %dx,_0cf252_data
		mov    0x000042(%esi),%ax
		mov    %dx,_0cf23c_data
		mov    %ax,0x000040(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f2df_jump:
		mov    %esi,%eax
		call   _01dbe4_func
		xor    %eax,%eax
		mov    _0ce06c_data,%dx
		mov    _0ce0ac_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %dx,_0cf252_data
		xor    %edx,%edx
		mov    $_0ce044_data,%eax
		mov    0x000069(%esi),%dl
		call   _0188b0_func
		sub    %edx,%eax
		add    $0x000010,%eax
		mov    %ax,_0cf23c_data
		mov    0x000056(%esi),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000042(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbl (%edx,%eax,8),%ecx
		mov    _0cf250_data,%edx
		mov    0x000028(%esi),%ebx
		sar    $0x000010,%edx
		sub    %ebx,%edx
		shl    $0x000012,%edx
		mov    $0x000037,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000001,%bl
		mov    $_0000ff_case,%dl
		mov    %eax,_0cdfb0_data
		test   %eax,%eax
		jge    _03f37b_jump
		neg    %eax

	_03f37b_jump:
		mov    %eax,_0cdfb0_data
		mov    %dl,_0cf455_data
		xor    %dh,%dh
		mov    %bl,_0cf45c_data
		mov    %dh,0x000071(%esi)
		mov    %dh,_0cf456_data
		mov    %dh,0x000072(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f39f_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0cf456_data,%cl
		mov    _0cf455_data,%bl
		mov    _0cf45c_data,%dl
		call   _018670_func

	_03f3be_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f3c4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%ecx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%ecx),%al
		testb  $0x000001,0x000007(%ebx,%eax,8)
		je     _03f432_jump
		cmp    $0x000003,%dx
		je     _03f3f3_jump
		cmp    $0x000006,%dx
		jne    _03f432_jump

	_03f3f3_jump:
		movb   $0x000001,_0ce173_data
		mov    %ecx,%eax
		call   _01e7ac_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _03f41b_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _060460_func
		pop    %ecx
		pop    %ebx
		ret    

	_03f41b_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _060460_func
		movw   $0x000001,0x000050(%ecx)

	_03f432_jump:
		pop    %ecx
		pop    %ebx
		ret    



_03f438_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cc7a0_data,%edx
		movw   $0x00ffff,0x000052(%eax)
		mov    _0cc7a4_data,%ax
		xor    %ebx,%ebx
		test   %ax,%ax
		jle    _03f4b2_jump

	_03f456_jump:
		cmpw   $0x0000e0,0x000060(%edx)
		jne    _03f4a6_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03f4a6_jump
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000040(%edx)
		call   _01dc5c_func
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f3d4_func
		movw   $0x00ffff,0x000046(%edx)
		movw   $0x000000,0x000048(%edx)
		mov    %bx,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f4a6_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %ax,%bx
		jl     _03f456_jump

	_03f4b2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f4b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		movb   $0x000001,_0cf45a_data
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x00006c(%ecx),%al
		add    %edx,%eax
		cmp    $0x000006,%eax
		jb     _03f51c_jump
		jbe    _03f6e5_jump
		cmp    $0x00000b,%eax
		jb     _03f508_jump
		jbe    _03f6ca_jump
		cmp    $0x00000d,%eax
		jb     _03f6c0_jump
		jbe    _03f6c0_jump
		cmp    $0x000100,%eax
		je     _03f548_jump
		jmp    _03f703_jump

	_03f508_jump:
		cmp    $0x000008,%eax
		jb     _03f6c0_jump
		jbe    _03f5ad_jump
		jmp    _03f703_jump

	_03f51c_jump:
		cmp    $0x000002,%eax
		jb     _03f53b_jump
		jbe    _03f67a_jump
		cmp    $0x000004,%eax
		jb     _03f6c0_jump
		jbe    _03f676_jump
		jmp    _03f703_jump

	_03f53b_jump:
		test   %eax,%eax
		jbe    _03f5bf_jump
		jmp    _03f601_jump

	_03f548_jump:
		mov    0x00003a(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _03f579_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d444_func
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x008300,_0cf256_data
		jmp    _03f5a0_jump

	_03f579_jump:
		mov    _0cf25a_data,%ax
		mov    _0ce0b1_data,%dl
		mov    %ax,_0cf256_data
		cmp    $0x000003,%dl
		jne    _03f5a0_jump
		cmpb   $0x000014,_0ce0b0_data
		jne    _03f5a0_jump
		orb    $0x000008,_0ce0c5_data

	_03f5a0_jump:
		mov    %ecx,%eax
		call   _0552b4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f5ad_jump:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f5bf_jump:
		cmpb   $0x000000,_0ce172_data
		jne    _03f5d1_jump
		cmpb   $0x000002,_0ce0b1_data
		jne    _03f5db_jump

	_03f5d1_jump:
		mov    $0x000005,%edx
		jmp    _03f6fc_jump

	_03f5db_jump:
		mov    0x00007f(%ecx),%ah
		test   %ah,%ah
		je     _03f5ef_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,0x00007f(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f5ef_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d434_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f601_jump:
		cmpb   $0x000000,_0ce172_data
		je     _03f65a_jump
		xor    %eax,%eax
		mov    _0ce070_data,%si
		mov    _0ce0ad_data,%al
		mov    0x00002c(%ecx),%di
		mov    %eax,%edx
		xor    %eax,%eax
		add    %esi,%edx
		mov    0x000069(%ecx),%al
		sub    %edi,%edx
		sub    %eax,%edx
		movswl %dx,%eax
		test   %eax,%eax
		jge    _03f632_jump
		neg    %eax

	_03f632_jump:
		cmp    $0x000030,%eax
		jl     _03f63d_jump
		cmpb   $0x000009,0x00006b(%ecx)
		jbe    _03f5d1_jump

	_03f63d_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d434_func
		mov    0x00000c(%ecx),%eax
		mov    (%eax),%eax
		mov    0x000052(%eax),%al
		mov    %al,0x00006a(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f65a_jump:
		mov    %ecx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _03f703_jump
		mov    %ecx,%eax
		call   _03f438_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f676_jump:
		movb   $0x000032,0x00007f(%ecx)

	_03f67a_jump:
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpw   $0x000000,0x000040(%eax)
		jle    _03f703_jump
		mov    0x000028(%eax),%edx
		cmp    0x000028(%ecx),%edx
		jl     _03f703_jump
		movw   $0x00ffff,0x000052(%ecx)
		andb   $0x0000fb,0x000081(%eax)
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _01d434_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f6c0_jump:
		movb   $0x000032,0x00007f(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f6ca_jump:
		cmpb   $0x000000,_0ce172_data
		jne    _03f703_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d434_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f6e5_jump:
		cmpb   $0x000002,_0ce0b1_data
		je     _03f703_jump
		cmpb   $0x000000,_0ce172_data
		jne    _03f703_jump
		mov    $0x000007,%edx

	_03f6fc_jump:
		mov    %ecx,%eax
		call   _01d434_func

	_03f703_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f70c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmp    $0x000006,%dx
		jne    _03f7c9_jump
		cmpb   $0x000000,_0ce171_data
		jne    _03f7c9_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _03f7c9_jump
		mov    $0x000001,%ch
		mov    %ebx,%eax
		mov    %ch,_0ce173_data
		call   _01e7ac_func
		cmpb   $0x000000,0x000076(%ebx)
		je     _03f77f_jump
		cmpb   $0x000002,0x00006c(%ebx)
		jne    _03f770_jump
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d434_func
		pop    %ecx
		pop    %ebx
		ret    

	_03f770_jump:
		mov    $0x00000d,%edx
		mov    %ebx,%eax
		call   _01d434_func
		pop    %ecx
		pop    %ebx
		ret    

	_03f77f_jump:
		cmpb   $0x000002,0x00006c(%ebx)
		jne    _03f7b7_jump
		mov    0x000050(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,4)
		mov    0x000050(%ebx),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		call   _07af48_func

	_03f7b7_jump:
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d434_func
		movw   $0x000001,0x000050(%ebx)

	_03f7c9_jump:
		pop    %ecx
		pop    %ebx
		ret    



_03f7cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x00006d(%eax)
		jne    _03f7e7_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _03fb82_jump

	_03f7e7_jump:
		mov    _0ce06c_data,%eax
		mov    0x000060(%esi),%bx
		add    $0x000008,%eax
		cmp    $0x0000e7,%bx
		jne    _03f97f_jump
		mov    _0e0638_data,%dl
		test   %dl,%dl
		jne    _03f84a_jump
		xor    %ebx,%ebx
		mov    _0ce0ac_data,%bl
		lea    (%ebx,%eax,1),%ecx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0ce0ad_data,%bl
		mov    _0ce0b8_data,%al
		sub    %eax,%ebx
		mov    _0e062a_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		add    $0x00005a,%eax
		sub    %ecx,%eax
		mov    %ax,_0e062e_data
		jmp    _03f970_jump

	_03f84a_jump:
		cmp    $0x000064,%dl
		jne    _03f96a_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%al
		add    %ebx,%eax
		mov    0x00002c(%esi),%edi
		sar    %eax
		add    %edi,%eax
		mov    %eax,%edi
		lea    0x000010(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		mov    $0x000008,%edx
		push   %eax
		lea    0x000010(%esp),%ebx
		mov    _0e05fc_data,%eax
		call   _01d7e0_func
		mov    0x000002(%esp),%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _03f8be_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ebp
		mov    0x000074(%esi),%bl
		add    %ebp,%ebx
		sub    $0x00000a,%ebx
		cmp    %ebx,%eax
		jle    _03f8be_jump
		addw   $0x000032,_0e062e_data
		jmp    _03f96a_jump

	_03f8be_jump:
		cmp    0x000004(%esp),%di
		jge    _03f8ea_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		mov    0x000002(%esp),%ebx
		add    %edx,%eax
		sar    $0x000010,%ebx
		add    $0x00000a,%eax
		cmp    %eax,%ebx
		jge    _03f8ea_jump
		subw   $0x000032,_0e062e_data
		jmp    _03f96a_jump

	_03f8ea_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000074(%esi),%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		sub    $0x00000a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03f926_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%bl
		add    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    $0x00000a,%ecx
		add    %ebx,%eax
		cmp    %ecx,%eax
		jge    _03f926_jump
		subw   $0x000050,_0e062e_data
		jmp    _03f96a_jump

	_03f926_jump:
		xor    %eax,%eax
		mov    _0ce06c_data,%ecx
		mov    _0ce0ac_data,%al
		add    $0x000008,%ecx
		add    %eax,%ecx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0ce0ad_data,%bl
		mov    _0ce0b8_data,%al
		sub    %eax,%ebx
		mov    _0e062a_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		add    $0x00005a,%eax
		sub    %ecx,%eax
		mov    %ax,_0e062e_data

	_03f96a_jump:
		decb   _0e0638_data

	_03f970_jump:
		mov    0x00002c(%esi),%dx
		mov    _0e062e_data,%ax
		jmp    _03fb06_jump

	_03f97f_jump:
		cmp    $0x0000e8,%bx
		jne    _03fb10_jump
		mov    _0e0639_data,%bh
		test   %bh,%bh
		jne    _03f9d6_jump
		xor    %ebx,%ebx
		mov    _0ce0ac_data,%bl
		lea    (%ebx,%eax,1),%ecx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0ce0ad_data,%bl
		mov    _0ce0b8_data,%al
		sub    %eax,%ebx
		mov    _0e062a_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		sub    $0x000046,%eax
		add    %ecx,%eax
		mov    %ax,_0e0630_data
		jmp    _03fafc_jump

	_03f9d6_jump:
		cmp    $0x000064,%bh
		jne    _03faf6_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%al
		add    %ebx,%eax
		mov    0x00002c(%esi),%edx
		sar    %eax
		add    %edx,%eax
		mov    %eax,%edi
		lea    0x000010(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000008,%edx
		mov    _0e0600_data,%eax
		call   _01d7e0_func
		mov    0x000002(%esp),%ebx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _03fa4a_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000074(%esi),%bl
		add    %ecx,%ebx
		sub    $0x00000a,%ebx
		cmp    %ebx,%eax
		jle    _03fa4a_jump
		addw   $0x000032,_0e0630_data
		jmp    _03faf6_jump

	_03fa4a_jump:
		cmp    0x000004(%esp),%di
		jge    _03fa76_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000069(%esi),%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		add    $0x00000a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _03fa76_jump
		subw   $0x000032,_0e0630_data
		jmp    _03faf6_jump

	_03fa76_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000074(%esi),%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		sub    $0x00000a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03fab2_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%bl
		add    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    $0x00000a,%ecx
		add    %ebx,%eax
		cmp    %ecx,%eax
		jge    _03fab2_jump
		subw   $0x000050,_0e0630_data
		jmp    _03faf6_jump

	_03fab2_jump:
		xor    %eax,%eax
		mov    _0ce06c_data,%ecx
		mov    _0ce0ac_data,%al
		add    $0x000008,%ecx
		add    %eax,%ecx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0ce0ad_data,%bl
		mov    _0ce0b8_data,%al
		sub    %eax,%ebx
		mov    _0e062a_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		sub    $0x000046,%eax
		add    %ecx,%eax
		mov    %ax,_0e0630_data

	_03faf6_jump:
		decb   _0e0639_data

	_03fafc_jump:
		mov    0x00002c(%esi),%dx
		mov    _0e0630_data,%ax

	_03fb06_jump:
		add    $0x000096,%edx
		sub    %edx,%eax
		mov    %eax,%edx

	_03fb10_jump:
		mov    _0cf2ae_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%ebx
		add    $0x000032,%eax
		cmp    %ebx,%eax
		jge    _03fb27_jump
		test   %dx,%dx
		jg     _03fb40_jump

	_03fb27_jump:
		mov    _0cf2ae_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%ecx
		sub    $0x000096,%eax
		cmp    %ecx,%eax
		jle    _03fb46_jump
		test   %dx,%dx
		jge    _03fb46_jump

	_03fb40_jump:
		xor    %edx,%edx
		mov    %dx,0x000042(%esi)

	_03fb46_jump:
		test   %dx,%dx
		je     _03fb82_jump
		mov    0x000040(%esi),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		sub    %ebx,%eax
		cmp    $0x000000,%eax
		je     _03fb64_jump
		mov    $0x000001,%eax
		jg     _03fb64_jump
		neg    %eax

	_03fb64_jump:
		add    %eax,%ebx
		mov    $0x000030,%eax
		cmp    %ebx,%eax
		jle    _03fb71_jump
		mov    %ebx,%eax

	_03fb71_jump:
		mov    %eax,%ebx
		mov    $0xffffffd0,%eax
		cmp    %ebx,%eax
		jge    _03fb7e_jump
		mov    %ebx,%eax

	_03fb7e_jump:
		mov    %ax,0x000042(%esi)

	_03fb82_jump:
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000005,%edx
		mov    $_0ce044_data,%eax
		call   _01d7e0_func
		addw   $0x00000f,0x00000c(%esp)
		mov    0x00002c(%esi),%dx
		mov    0x00006c(%esi),%bh
		add    $0x000096,%edx
		test   %bh,%bh
		jne    _03fbe3_jump
		mov    0x00000a(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		lea    -0x00000f(%eax),%ecx
		cmp    %ecx,%ebx
		jle    _03fbe3_jump
		add    $0x00000f,%eax
		cmp    %eax,%ebx
		jge    _03fbe3_jump
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _01d434_func
		jmp    _03fc8b_jump

	_03fbe3_jump:
		mov    0x00006c(%esi),%cl
		cmp    $0x000006,%cl
		je     _03fbf0_jump
		cmp    $0x000004,%cl
		jne    _03fc1e_jump

	_03fbf0_jump:
		mov    0x00000a(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		lea    -0x000014(%eax),%ecx
		cmp    %ecx,%ebx
		jl     _03fc08_jump
		add    $0x000014,%eax
		cmp    %eax,%ebx
		jle    _03fc1e_jump

	_03fc08_jump:
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d434_func
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fc1e_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%al
		je     _03fc29_jump
		cmp    $0x000006,%al
		jne    _03fc57_jump

	_03fc29_jump:
		mov    0x00000a(%esp),%eax
		movswl %dx,%ebx
		sar    $0x000010,%eax
		lea    -0x000007(%ebx),%ecx
		cmp    %ecx,%eax
		jle    _03fc57_jump
		add    $0x000007,%ebx
		cmp    %ebx,%eax
		jge    _03fc57_jump
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d434_func
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fc57_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x000003,%dl
		jne    _03fc8b_jump
		cmp    0x00006b(%esi),%dl
		jne    _03fc8b_jump
		mov    %esi,%eax
		call   _03fdac_func
		cmpw   $0x0000e7,0x000060(%esi)
		jne    _03fc84_jump
		movb   $0x000064,_0e0639_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fc84_jump:
		movb   $0x000064,_0e0638_data

	_03fc8b_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03fc98_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006c(%eax)
		je     _03fda7_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _03fda7_jump
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		cmpb   $0x000001,0x00006c(%edx,%eax,4)
		je     _03fda7_jump
		decb   0x000076(%ecx)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    0x000076(%ecx),%al
		mov    %al,0x000076(%edx)
		test   %al,%al
		je     _03fcfe_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		pop    %ecx
		pop    %ebx
		ret    

	_03fcfe_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000001,0x000050(%ecx)
		mov    0x000081(%ecx),%ah
		mov    0x000050(%ecx),%edx
		and    $0x0000ef,%ah
		sar    $0x000010,%edx
		mov    %ah,0x000081(%ecx)
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0x000002,%ebx
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		movw   $0x00ff80,0x000042(%ecx)
		add    %edx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000040(%ecx)
		call   _01d444_func
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		movw   $0x00ff80,0x000042(%edx,%eax,4)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movw   $0x000000,0x000040(%edx,%eax,4)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		andb   $0x0000ef,0x000081(%edx,%eax,4)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movw   $0x000001,0x000050(%edx,%eax,4)

	_03fda7_jump:
		pop    %ecx
		pop    %ebx
		ret    



_03fdac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cc7a0_data,%edx
		mov    _0cc7a4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _03fe76_jump

	_03fdc9_jump:
		cmpw   $0x0000e9,0x000060(%edx)
		jne    _03fe66_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03fe66_jump
		movb   $0x000004,0x00007e(%edx)
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		cmpw   $0x0000e7,0x000060(%ecx)
		jne    _03fe1c_jump
		mov    0x000081(%edx),%bl
		movw   $0x00fffb,0x000040(%edx)
		and    $0x0000f7,%bl
		mov    %edx,_0e0600_data
		mov    %bl,0x000081(%edx)
		jmp    _03fe37_jump

	_03fe1c_jump:
		mov    0x000081(%edx),%ah
		movw   $0x000005,0x000040(%edx)
		or     $0x000008,%ah
		mov    %edx,_0e05fc_data
		mov    %ah,0x000081(%edx)

	_03fe37_jump:
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%edx)
		call   _01f3d4_func
		mov    0x000052(%ecx),%ax
		mov    %ax,0x000052(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fe66_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _03fdc9_jump

	_03fe76_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03fe7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%edi
		mov    0x000050(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x000060(%eax),%dx
		cmp    $0x0000e7,%dx
		je     _03feb5_jump
		cmp    $0x0000e8,%dx
		jne    _03ffd5_jump

	_03feb5_jump:
		mov    0x000050(%edi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%ebp
		shl    $0x000002,%eax
		add    %eax,%ebp
		mov    %ebp,%edx
		mov    %edi,%eax
		call   _0400a4_func
		test   %ax,%ax
		je     _03ffd5_jump
		mov    _0cc7a0_data,%esi
		mov    _0cc7a4_data,%ax
		xor    %ebx,%ebx
		test   %ax,%ax
		jle    _03ffb6_jump

	_03fef6_jump:
		cmpw   $0x00000b,0x000060(%esi)
		jne    _03ffa6_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _03ffa6_jump
		lea    0x000010(%esp),%eax
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %edi,%eax
		call   _01d364_func
		lea    0x000014(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000018(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		movb   $0x000000,0x00006b(%esi)
		xor    %eax,%eax
		mov    0x000002(%esp),%edx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		cmpw   $0x000000,0x000040(%edi)
		jle    _03ff62_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ebx
		mov    %ebx,0x000028(%esi)

	_03ff62_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%al
		mov    0x000074(%esi),%dl
		lea    (%eax,%edx,1),%ebx
		mov    0x00000e(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		sar    %ebx
		add    %edx,%eax
		sub    %ebx,%eax
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		call   _01dc5c_func
		orb    $0x000004,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f3d4_func
		jmp    _03ffb6_jump

	_03ffa6_jump:
		inc    %ebx
		add    $0x000084,%esi
		cmp    %ax,%bx
		jl     _03fef6_jump

	_03ffb6_jump:
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _03fc98_func
		mov    0x000081(%edi),%dl
		movl   $0x000000,0x000024(%edi)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%edi)

	_03ffd5_jump:
		cmpw   $0x000000,0x000042(%edi)
		jne    _04007b_jump
		mov    _0ce952_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cc7a0_data,%ebx
		add    %edx,%eax
		mov    _0cea1c_data,%cx
		shl    $0x000002,%eax
		xor    %esi,%esi
		add    %eax,%ebx
		test   %cx,%cx
		jle    _04007b_jump

	_04000d_jump:
		cmpw   $0x0000e9,0x000060(%ebx)
		jne    _040057_jump
		mov    0x000034(%ebx),%ax
		cmp    0x000034(%edi),%ax
		je     _040057_jump
		mov    %ebx,%edx
		mov    %edi,%eax
		call   _0400a4_func
		test   %ax,%ax
		je     _040057_jump
		movw   $0x000000,0x000040(%ebx)
		movw   $0x000000,0x000040(%edi)
		movw   $0x000003,0x000042(%ebx)
		movw   $0x000003,0x000042(%edi)
		mov    0x000034(%ebx),%ax
		mov    %ax,0x000052(%edi)
		mov    0x000034(%edi),%ax
		mov    %ax,0x000052(%ebx)
		jmp    _04007b_jump

	_040057_jump:
		inc    %esi
		movswl %si,%ebx
		mov    _0ce952_data(,%ebx,2),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0cc7a0_data,%eax
		add    %eax,%ebx
		cmp    _0cea1c_data,%si
		jl     _04000d_jump

	_04007b_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040088_func:
		push   %edx
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    



_0400a4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,%edi
		xor    %edx,%edx
		call   _02b418_func
		mov    %eax,%ebp
		mov    %eax,(%esp)
		xor    %edx,%edx
		mov    %edi,%eax
		lea    0x000014(%esp),%ecx
		call   _02b418_func
		mov    %eax,%esi
		lea    0x00000c(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000007(%ebp),%dl
		mov    0x00000c(%esp),%eax
		call   _01d7e0_func
		lea    0x00000c(%esp),%eax
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000024(%esp),%ecx
		push   %eax
		mov    %esi,%eax
		xor    %edx,%edx
		lea    0x000018(%esp),%ebx
		mov    0x000007(%eax),%dl
		mov    %edi,%eax
		call   _01d7e0_func
		mov    0x000004(%esp),%eax
		testb  $0x000008,0x000081(%eax)
		jne    _040127_jump
		mov    0x000018(%esp),%ecx
		mov    0x000000(%ebp),%ax
		add    %eax,%ecx
		mov    %cx,0x000018(%esp)
		jmp    _040143_jump

	_040127_jump:
		xor    %eax,%eax
		mov    0x000000(%ebp),%dx
		mov    0x000004(%ebp),%al
		mov    0x00001c(%esp),%ebx
		add    %edx,%eax
		mov    0x000018(%esp),%edx
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %dx,0x000018(%esp)

	_040143_jump:
		testb  $0x000008,0x000081(%edi)
		jne    _04015c_jump
		mov    0x000010(%esp),%ecx
		mov    (%esi),%ax
		add    %eax,%ecx
		mov    %cx,0x000010(%esp)
		jmp    _040177_jump

	_04015c_jump:
		mov    0x000010(%esp),%edx
		mov    0x000008(%esp),%ebx
		xor    %eax,%eax
		mov    (%esi),%di
		mov    0x000004(%esi),%al
		add    %ebx,%edx
		add    %edi,%eax
		sub    %eax,%edx
		mov    %dx,0x000010(%esp)

	_040177_jump:
		mov    (%esp),%eax
		mov    0x000014(%esp),%edi
		mov    0x000002(%eax),%ax
		add    %eax,%edi
		mov    %di,0x000014(%esp)
		mov    0x000020(%esp),%edx
		mov    0x000002(%esi),%ax
		add    %eax,%edx
		mov    %dx,0x000020(%esp)
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		push   %eax
		xor    %eax,%eax
		mov    0x000004(%esi),%al
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		push   %eax
		mov    0x000010(%esp),%eax
		xor    %ebx,%ebx
		mov    0x000022(%esp),%edx
		mov    0x000005(%eax),%cl
		mov    0x000004(%eax),%bl
		mov    0x000026(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b560_func
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0401e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0cc7a0_data,%eax
		mov    _0cc7a4_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _04027c_jump

	_0401fe_jump:
		cmpw   $0x000020,0x000060(%eax)
		jne    _040271_jump
		mov    0x000024(%eax),%esi
		test   %esi,%esi
		jne    _040271_jump
		mov    0x000028(%ecx),%edx
		mov    %edx,0x000028(%eax)
		mov    %dx,0x00003c(%eax)
		mov    0x00002c(%ecx),%edx
		movw   $0x000000,0x000040(%eax)
		mov    %edx,0x00002c(%eax)
		mov    %dx,0x00003e(%eax)
		mov    $0x000026,%ebx
		mov    0x000081(%eax),%dl
		movw   $0x000000,0x000042(%eax)
		or     $0x000004,%dl
		xor    %edi,%edi
		mov    %dl,0x000081(%eax)
		xor    %edx,%edx
		movl   $0x000001,0x000024(%eax)
		call   _01d444_func
		mov    %ecx,_0e0594_data
		mov    0x000081(%ecx),%dh
		mov    %esi,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %di,_0e0628_data
		mov    %dh,0x000081(%ecx)
		jmp    _04027c_jump

	_040271_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %bx,%dx
		jl     _0401fe_jump

	_04027c_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040284_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cf479_data
		je     _040398_jump
		movb   $0x000001,_095188_data
		testb  $0x000080,_0cf228_data
		je     _04035e_jump
		cmpb   $0x000000,_0cf435_data
		jne    _040398_jump
		cmpw   $0x000000,_0cf2ba_data
		jne    _04030e_jump
		mov    _0cf2be_data,%di
		cmp    $0x000042,%di
		jle    _0402e6_jump
		mov    $0x000001,%ecx
		mov    %di,_0cf2b6_data
		mov    %cx,_0cf2ba_data
		jmp    _040398_jump

	_0402e6_jump:
		cmp    $0x000028,%di
		jle    _0402fd_jump
		mov    %edi,%ebx
		add    $0x000004,%ebx
		mov    %bx,_0cf2be_data
		jmp    _040398_jump

	_0402fd_jump:
		mov    %edi,%edx
		add    $0x000002,%edx
		mov    %dx,_0cf2be_data
		jmp    _040398_jump

	_04030e_jump:
		mov    _0cf2b2_data,%eax
		sar    $0x000010,%eax
		mov    $0x000007,%cl
		mov    _094bcc_data(,%eax,2),%ax
		test   %ax,%ax
		js     _04032a_jump
		sar    %cl,%ax
		jmp    _040333_jump

	_04032a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_040333_jump:
		cmp    $_0000ff_case,%ax
		je     _040398_jump
		mov    _0cf2be_data,%cx
		mov    _0cf2b4_data,%si
		add    %eax,%ecx
		inc    %esi
		mov    %cx,_0cf2be_data
		mov    %si,_0cf2b4_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04035e_jump:
		push   $0x000000
		mov    $_0e0598_data,%eax
		mov    _0e0616_data,%ecx
		mov    _0e060c_data,%ebx
		mov    _0e060a_data,%edx
		push   $0x000002
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01a5a8_func
		cmpb   $0x000000,_0cf453_data
		jne    _040398_jump
		addw   $0x000003,_0e0618_data

	_040398_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0403a0_switch:
		.long   _040467_case
		.long   _0404a1_case
		.long   _040579_case
		.long   _0405d9_case
		.long   _040613_case
		.long   _040675_case
		.long   _0406fb_case
		.long   _0407d1_case
		.long   _04082a_case
		.long   _040870_case
		.long   _0408fb_case
		.long   _040956_case




_0403d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x00006d(%eax),%ah
		test   %ah,%ah
		jne    _04044a_jump
		cmpb   $0x000026,0x00006c(%esi)
		jne    _04044a_jump
		mov    %ah,_0e0633_data
		mov    %ah,_0e0637_data
		mov    %ah,_0cf479_data
		xor    %dh,%dh
		xor    %bl,%bl
		xor    %cl,%cl
		mov    _0cf220_data,%bh
		mov    _0e0594_data,%eax
		xor    %dl,%dl
		xor    %ch,%ch
		mov    %dx,_0e0628_data
		and    $0x0000fe,%bh
		mov    %cx,_0cf25a_data
		mov    %dh,_0e0632_data
		movl   $0x000000,0x000024(%eax)
		mov    %bh,_0cf220_data
		mov    0x000081(%eax),%ch
		xor    %bh,%bh
		and    $0x0000fb,%ch
		mov    %bx,_0cf268_data
		mov    %ch,0x000081(%eax)

	_04044a_jump:
		mov    _0e0628_data,%ax
		cmp    $0x00000b,%ax
		ja     _040a95_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0403a0_switch(,%eax,4)

	_040467_case:
		mov    _0e0633_data,%ch
		test   %ch,%ch
		jne    _04048a_jump
		mov    $0x000001,%ah
		mov    $0x00001e,%edx
		mov    %ah,_0e0633_data
		mov    %esi,%eax
		call   _01d434_func
		jmp    _040a95_jump

	_04048a_jump:
		cmp    $0x000002,%ch
		jne    _040a95_jump
		movw   $0x000001,_0e0628_data
		jmp    _040a95_jump

	_0404a1_case:
		mov    _0e0637_data,%ch
		test   %ch,%ch
		jne    _0404c4_jump
		mov    $0x000001,%cl
		mov    $0x00001f,%edx
		mov    %esi,%eax
		mov    %cl,_0e0637_data
		call   _01d434_func
		jmp    _040a95_jump

	_0404c4_jump:
		cmp    $0x000002,%ch
		jne    _040a95_jump
		mov    _0e060e_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		mov    0x000070(%edx,%eax,4),%bl
		cmp    $0x00001e,%bl
		jne    _040a95_jump
		mov    _0e061c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		cmp    0x000070(%edx,%eax,4),%bl
		jne    _040a95_jump
		mov    _0e061c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000002,%ecx
		add    %edx,%eax
		mov    %ecx,%edx
		call   _060460_func
		mov    _0e060e_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    $0x000001,%ecx
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		shl    $0x000002,%eax
		mov    $0x000002,%edx
		add    %ebx,%eax
		mov    %ecx,%ebx
		mov    $0x000002,%ecx
		call   _060460_func
		mov    %cx,_0e0628_data
		jmp    _040a95_jump

	_040579_case:
		mov    _0e060e_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		mov    0x000070(%edx,%eax,1),%bl
		cmp    $0x00001e,%bl
		jne    _040a95_jump
		mov    _0e061c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		cmp    0x000070(%edx,%eax,1),%bl
		jne    _040a95_jump
		mov    $0x000003,%ebx
		xor    %cl,%cl
		mov    %bx,_0e0628_data
		mov    %cl,_0e0633_data
		jmp    _040a95_jump

	_0405d9_case:
		mov    _0e0633_data,%bh
		test   %bh,%bh
		jne    _0405fc_jump
		mov    $0x000001,%ch
		mov    $0x00001e,%edx
		mov    %esi,%eax
		mov    %ch,_0e0633_data
		call   _01d434_func
		jmp    _040a95_jump

	_0405fc_jump:
		cmp    $0x000002,%bh
		jne    _040a95_jump
		movw   $0x000004,_0e0628_data
		jmp    _040a95_jump

	_040613_case:
		mov    _0e061c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000003,%edx
		call   _060460_func
		mov    _0e060e_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000003,%edx
		call   _060460_func
		movw   $0x000005,_0e0628_data
		jmp    _040a95_jump

	_040675_case:
		mov    _0e060e_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		mov    _0cc7a0_data,%ebx
		add    %edi,%eax
		mov    0x000070(%ebx,%eax,4),%cl
		cmp    $0x00001e,%cl
		jne    _0406ef_jump
		mov    _0e061c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		cmp    0x000070(%ebx,%eax,4),%cl
		jne    _0406ef_jump
		mov    _0e0633_data,%ah
		test   %ah,%ah
		jne    _0406cd_jump
		mov    $0x000001,%bl
		mov    $0x00001e,%edx
		mov    %esi,%eax
		mov    %bl,_0e0633_data
		call   _01d434_func
		jmp    _040a95_jump

	_0406cd_jump:
		cmp    $0x000002,%ah
		jne    _040a95_jump
		mov    $0x000006,%edi
		xor    %dh,%dh
		mov    %di,_0e0628_data
		mov    %dh,_0e0633_data
		jmp    _040a95_jump

	_0406ef_jump:
		xor    %al,%al
		mov    %al,_0e0633_data
		jmp    _040a95_jump

	_0406fb_case:
		mov    _0e0633_data,%ch
		test   %ch,%ch
		jne    _040772_jump
		mov    _0e061c_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		add    %edi,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000002,%edx
		call   _060460_func
		mov    _0e060e_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		add    %edi,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000002,%edx
		call   _060460_func
		mov    $0x000001,%bh
		mov    $0x00001e,%edx
		mov    %esi,%eax
		mov    %bh,_0e0633_data
		call   _01d434_func
		jmp    _040a95_jump

	_040772_jump:
		cmp    $0x000002,%ch
		jne    _040a95_jump
		mov    _0e060e_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cc7a0_data,%ecx
		add    %edx,%eax
		mov    0x000070(%ecx,%eax,4),%dl
		cmp    $0x00001e,%dl
		jne    _040a95_jump
		mov    _0e061c_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		cmp    0x000070(%ecx,%eax,4),%dl
		jne    _040a95_jump
		mov    $0x000007,%ecx
		xor    %bl,%bl
		mov    %cx,_0e0628_data
		mov    %bl,_0e0633_data
		jmp    _040a95_jump

	_0407d1_case:
		cmpb   $0x000021,0x00006c(%esi)
		je     _0407f8_jump
		mov    $0x000021,%edx
		mov    %esi,%eax
		mov    $0x000001,%bl
		call   _01d434_func
		xor    %dh,%dh
		mov    %bl,_0cf479_data
		mov    %dh,_0e0634_data
		jmp    _040a95_jump

	_0407f8_jump:
		cmpb   $0x000002,_0e0634_data
		jne    _040a95_jump
		mov    $0x000020,%edx
		mov    %esi,%eax
		mov    $0x000008,%ebx
		call   _01d434_func
		xor    %cl,%cl
		mov    %bx,_0e0628_data
		mov    %cl,_0cf479_data
		jmp    _040a95_jump

	_04082a_case:
		mov    _0e060e_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000004,%edx
		call   _060460_func
		mov    $0x000009,%eax
		mov    $0xffffffff,%edx
		mov    %ax,_0e0628_data
		mov    %dx,_0e0608_data
		jmp    _040a95_jump

	_040870_case:
		testb  $0x000001,_0cf220_data
		je     _040887_jump
		movw   $0x00000a,_0e0628_data
		jmp    _040a95_jump

	_040887_jump:
		mov    _0e0606_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _040a95_jump
		mov    _0e060e_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    _0cc7a0_data,%edx
		add    %ebx,%eax
		cmpw   $0x000004,0x000040(%edx,%eax,4)
		jne    _040a95_jump
		call   _041430_func
		mov    _0ce0d0_data,%eax
		mov    0x000028(%eax),%dx
		add    $0x000040,%edx
		mov    %dx,_0e0608_data
		mov    0x00002c(%eax),%dx
		add    $0x000032,%edx
		mov    0x000028(%eax),%ax
		mov    %dx,_0e0604_data
		add    $0x000030,%eax
		mov    %dx,_0e0606_data
		mov    %ax,_0e060a_data
		jmp    _040a95_jump

	_0408fb_case:
		mov    _0e060e_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		mov    $0x000004,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    _0e061c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000004,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x00000b,_0e0628_data
		jmp    _040a95_jump

	_040956_case:
		cmpb   $0x000001,_0e0632_data
		jne    _0409d8_jump
		mov    _0ce096_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		je     _0409d8_jump
		cmpb   $0x000003,_0ce0b1_data
		jne    _04099f_jump
		cmpb   $0x000017,_0ce0b0_data
		je     _0409a6_jump

	_04099f_jump:
		mov    $0x000001,%eax
		jmp    _0409a8_jump

	_0409a6_jump:
		xor    %eax,%eax

	_0409a8_jump:
		test   %eax,%eax
		je     _0409d8_jump
		mov    $0x000002,%bh
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		mov    %bh,_0e0632_data
		mov    $0x000017,%ebx
		xor    %edi,%edi
		call   _01d444_func
		mov    %di,_0ce084_data
		mov    %di,_0ce086_data

	_0409d8_jump:
		mov    _0e060e_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    0x000024(%eax),%edx
		test   %edx,%edx
		jne    _040a67_jump
		jne    _040a67_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _040a0f_jump
		cmpb   $0x000022,0x00006c(%esi)
		je     _040a22_jump

	_040a0f_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _040a1b_jump
		cmpb   $0x000001,0x00006c(%esi)
		je     _040a22_jump

	_040a1b_jump:
		mov    $0x000001,%eax
		jmp    _040a24_jump

	_040a22_jump:
		xor    %eax,%eax

	_040a24_jump:
		test   %eax,%eax
		je     _040a67_jump
		cmpb   $0x000003,_0ce0b1_data
		jne    _040a3a_jump
		cmpb   $0x000017,_0ce0b0_data
		je     _040a41_jump

	_040a3a_jump:
		mov    $0x000001,%eax
		jmp    _040a43_jump

	_040a41_jump:
		xor    %eax,%eax

	_040a43_jump:
		test   %eax,%eax
		je     _040a67_jump
		cmpb   $0x000002,_0e0632_data
		jne    _040a67_jump
		mov    $0x000022,%ebx
		xor    %al,%al
		xor    %edx,%edx
		mov    %al,_0e0632_data
		mov    %esi,%eax
		call   _01d444_func
		jmp    _040a95_jump

	_040a67_jump:
		cmpb   $0x000004,0x00006b(%esi)
		jne    _040a95_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _040a95_jump
		cmpb   $0x000022,0x00006c(%esi)
		jne    _040a95_jump
		mov    $0x00000c,%edx
		mov    _0e0594_data,%eax
		movw   $0x00fffc,0x000042(%esi)
		mov    %dx,_0e0628_data
		call   _033f8c_func

	_040a95_jump:
		mov    0x00006d(%esi),%dl
		test   %dl,%dl
		jne    _040d6d_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00001f,%al
		jb     _040ab6_jump
		jbe    _040ac3_jump
		cmp    $0x000021,%al
		je     _040c57_jump
		jmp    _040d6d_jump

	_040ab6_jump:
		cmp    $0x00001e,%al
		je     _040b6c_jump
		jmp    _040d6d_jump

	_040ac3_jump:
		cmpb   $0x000016,0x00006b(%esi)
		jne    _040d6d_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $0x000003,%edx
		push   %eax
		mov    %esi,%eax
		xor    %edi,%edi
		call   _01d7e0_func
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    $0xfffffff1,%ecx
		add    %edx,%eax
		mov    %di,_0e0622_data
		sub    $0x000060,%eax
		mov    %di,_0e0620_data
		mov    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    %cx,_0e0626_data
		sar    %eax
		mov    %cx,_0e0624_data
		add    %ebx,%eax
		mov    $0x000001,%ecx
		sub    $0x000080,%eax
		movswl %dx,%esi
		movswl %ax,%edi
		mov    $0x000025,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _041128_func
		mov    $0x000025,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   _041128_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040b6c_jump:
		cmpb   $0x000016,0x00006b(%esi)
		jne    _040d6d_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $0x000003,%edx
		push   %eax
		mov    %esi,%eax
		mov    $0xfffffff0,%edi
		call   _01d7e0_func
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		mov    $0xffffffb4,%ebx
		mov    $0x000001,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    %di,_0e0622_data
		add    %edx,%eax
		mov    %bx,_0e0626_data
		sub    $0x000060,%eax
		mov    $0x000001,%bl
		mov    %ax,_0e0612_data
		mov    %ax,_0e0614_data
		mov    -0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    %bl,_0e0636_data
		add    %edx,%eax
		mov    $0x000023,%ebx
		sub    $0x000080,%eax
		mov    $0x00004c,%edx
		mov    %ax,_0e061a_data
		mov    %ax,_0e061c_data
		mov    %dx,_0e0624_data
		xor    %dh,%dh
		mov    _0e0612_data,%eax
		mov    %dh,_0e0635_data
		mov    _0e061a_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    %di,_0e0620_data
		call   _041128_func
		mov    $0x000023,%ebx
		mov    _0e0618_data,%edx
		mov    _0e0610_data,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _041128_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040c57_jump:
		mov    _0e0634_data,%dh
		test   %dh,%dh
		jne    _040cc3_jump
		mov    $_0e0598_data,%edi
		mov    $0x0000a0,%edx
		mov    $0xfffffff6,%ebx
		mov    _0c29d4_data,%esi
		mov    $0x000028,%ecx
		push   %edi

	_040c7c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _040c94_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _040c7c_jump

	_040c94_jump:
		pop    %edi
		mov    $0x000001,%al
		mov    %dx,_0e060c_data
		mov    %bx,_0e060e_data
		xor    %esi,%esi
		mov    %cx,_0e0616_data
		mov    %si,_0e0618_data
		mov    %al,_0e0634_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040cc3_jump:
		mov    _0e060c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffec,%eax
		jge    _040d15_jump
		mov    $0x0000a0,%esi
		mov    $0xfffffff6,%edi
		mov    $0x000028,%eax
		xor    %ecx,%ecx
		mov    %dl,_0cf479_data
		mov    %cx,_0e0618_data
		mov    %si,_0e060c_data
		mov    %dh,%ch
		mov    %di,_0e060e_data
		inc    %ch
		mov    %ax,_0e0616_data
		mov    %ch,_0e0634_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040d15_jump:
		mov    $0x000004,%cl
		mov    _0e0616_data,%ax
		test   %ax,%ax
		js     _040d27_jump
		sar    %cl,%ax
		jmp    _040d30_jump

	_040d27_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_040d30_jump:
		mov    _0e060e_data,%dx
		mov    _0e0616_data,%bx
		add    %eax,%edx
		mov    _0e0616_data,%ax
		mov    %dx,_0e060e_data
		dec    %eax
		test   %bx,%bx
		je     _040d5e_jump
		cmpb   $0x000000,_0cf3f1_data
		jne    _040d6d_jump
		jmp    _040d67_jump

	_040d5e_jump:
		cmpb   $0x000000,_0cf3f3_data
		jne    _040d6d_jump

	_040d67_jump:
		mov    %ax,_0e0616_data

	_040d6d_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040d78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000076(%eax)
		je     _04111c_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000023,%dl
		je     _040d9e_jump
		cmp    $0x000024,%dl
		jne    _040f6b_jump

	_040d9e_jump:
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%edx
		neg    %eax
		cmp    %edx,%eax
		jle    _040dbd_jump
		mov    $0x000002,%ch
		movb   $0x000000,0x000076(%esi)
		mov    %ch,_0e0633_data
		jmp    _04111c_jump

	_040dbd_jump:
		cmpw   $0x000000,0x000056(%esi)
		je     _040e9f_jump
		cmpb   $0x000000,_0e0635_data
		je     _040df2_jump
		mov    _0e0624_data,%cx
		add    $0x000003,%ecx
		mov    %cx,_0e0624_data
		cmp    $0x00004c,%cx
		jle    _040e0e_jump
		xor    %bh,%bh
		mov    %bh,_0e0635_data
		jmp    _040e0e_jump

	_040df2_jump:
		subw   $0x000003,_0e0624_data
		mov    _0e0622_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffb4,%eax
		jge    _040e0e_jump
		movb   $0x000001,_0e0635_data

	_040e0e_jump:
		mov    $0x000004,%cl
		mov    _0e0620_data,%ax
		test   %ax,%ax
		js     _040e20_jump
		sar    %cl,%ax
		jmp    _040e29_jump

	_040e20_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_040e29_jump:
		mov    _0e0614_data,%dx
		mov    $0x000004,%cl
		add    %eax,%edx
		mov    _0e0624_data,%ax
		mov    %dx,_0e0614_data
		test   %ax,%ax
		js     _040e4b_jump
		sar    %cl,%ax
		jmp    _040e54_jump

	_040e4b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_040e54_jump:
		mov    _0e061c_data,%bx
		add    %eax,%ebx
		mov    0x00006b(%esi),%cl
		mov    %bx,_0e061c_data
		cmp    $0x000001,%cl
		jne    _04111c_jump
		mov    _0e061a_data,%edx
		mov    _0e0612_data,%eax
		mov    0x000054(%esi),%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x00006c(%esi),%bl
		call   _041128_func
		movb   $0x000000,0x000076(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040e9f_jump:
		cmpb   $0x000000,_0e0636_data
		je     _040ec9_jump
		mov    _0e0626_data,%bx
		add    $0x000003,%ebx
		mov    %bx,_0e0626_data
		cmp    $0x00004c,%bx
		jle    _040ee5_jump
		xor    %ah,%ah
		mov    %ah,_0e0636_data
		jmp    _040ee5_jump

	_040ec9_jump:
		subw   $0x000003,_0e0626_data
		mov    _0e0624_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffb4,%eax
		jge    _040ee5_jump
		movb   $0x000001,_0e0636_data

	_040ee5_jump:
		mov    $0x000004,%cl
		mov    _0e0622_data,%ax
		test   %ax,%ax
		js     _040ef7_jump
		sar    %cl,%ax
		jmp    _040f00_jump

	_040ef7_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_040f00_jump:
		mov    _0e0612_data,%di
		mov    $0x000004,%cl
		add    %eax,%edi
		mov    _0e0626_data,%ax
		mov    %di,_0e0612_data
		test   %ax,%ax
		js     _040f22_jump
		sar    %cl,%ax
		jmp    _040f2b_jump

	_040f22_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_040f2b_jump:
		add    %ax,_0e061a_data
		cmpb   $0x000001,0x00006b(%esi)
		jne    _04111c_jump
		mov    _0e0618_data,%edx
		mov    _0e0610_data,%eax
		mov    0x000054(%esi),%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x00006c(%esi),%bl
		call   _041128_func
		movb   $0x000000,0x000076(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040f6b_jump:
		cmp    $0x000025,%dl
		jne    _04111c_jump
		cmpw   $0x000000,0x000056(%esi)
		je     _040f8d_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%cx
		mov    0x000068(%esi),%al
		mov    $0x0000f0,%ebx
		add    %ecx,%eax
		jmp    _040f9d_jump

	_040f8d_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		mov    $0x000005,%ebx

	_040f9d_jump:
		sub    %eax,%ebx
		movzbw 0x000069(%esi),%di
		add    0x00002c(%esi),%di
		mov    %esi,%eax
		call   _0188b0_func
		sub    %edi,%eax
		mov    %eax,%edi
		movswl %bx,%eax
		test   %eax,%eax
		jge    _040fbc_jump
		neg    %eax

	_040fbc_jump:
		mov    %eax,%edx
		movswl %di,%eax
		test   %eax,%eax
		jge    _040fc7_jump
		neg    %eax

	_040fc7_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		cmp    $0x00000a,%dx
		jge    _040fec_jump
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		movb   $0x000000,0x000076(%esi)
		call   _0412d4_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040fec_jump:
		test   %dx,%dx
		jle    _041018_jump
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    -0x000002(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edi

	_041018_jump:
		cmpb   $0x000001,0x00006b(%esi)
		jne    _04111c_jump
		cmpw   $0x000000,0x000056(%esi)
		je     _041094_jump
		mov    _0e061e_data,%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _041045_jump
		mov    $0x000001,%eax
		jg     _041045_jump
		neg    %eax

	_041045_jump:
		add    %ax,_0e0620_data
		mov    _0e0622_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _041068_jump
		mov    $0x000001,%eax
		jg     _041068_jump
		neg    %eax

	_041068_jump:
		mov    _0e0624_data,%bx
		add    %eax,%ebx
		mov    0x000054(%esi),%ecx
		mov    %bx,_0e0624_data
		mov    0x00002c(%esi),%dx
		mov    _0e0624_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0e0620_data,%di
		jmp    _0410fe_jump

	_041094_jump:
		mov    _0e0620_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _0410b1_jump
		mov    $0x000001,%eax
		jg     _0410b1_jump
		neg    %eax

	_0410b1_jump:
		add    %ax,_0e0622_data
		mov    _0e0624_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _0410d4_jump
		mov    $0x000001,%eax
		jg     _0410d4_jump
		neg    %eax

	_0410d4_jump:
		mov    _0e0626_data,%bx
		add    %eax,%ebx
		mov    0x000054(%esi),%ecx
		mov    %bx,_0e0626_data
		mov    0x00002c(%esi),%dx
		mov    _0e0626_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0e0622_data,%di

	_0410fe_jump:
		movswl %dx,%eax
		mov    0x000028(%esi),%dx
		xor    %ebx,%ebx
		add    %edi,%edx
		mov    0x00006c(%esi),%bl
		movswl %dx,%edi
		mov    %eax,%edx
		mov    %edi,%eax
		call   _041128_func
		movb   $0x000000,0x000076(%esi)

	_04111c_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041128_func:
		push   %esi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %dx,(%esp)
		mov    %bx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%bx
		xor    %edx,%edx
		xor    %eax,%eax

	_04114d_jump:
		cmpw   $0x000021,0x000060(%ecx)
		jne    _04115f_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _04115f_jump
		mov    $0x000001,%edx

	_04115f_jump:
		add    $0x000084,%ecx
		inc    %eax
		test   %dx,%dx
		jne    _041170_jump
		cmp    %bx,%ax
		jl     _04114d_jump

	_041170_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		je     _0411e8_jump
		mov    %ecx,%ebp
		xor    %edx,%edx

	_041183_jump:
		cmpw   $0x000021,0x000060(%ecx)
		jne    _041195_jump
		cmpl   $0x000001,0x000024(%ecx)
		jne    _041195_jump
		mov    $0x000001,%edx

	_041195_jump:
		add    $0x000084,%ecx
		inc    %eax
		test   %dx,%dx
		jne    _0411a6_jump
		cmp    %bx,%ax
		jl     _041183_jump

	_0411a6_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		je     _0411e1_jump
		xor    %edx,%edx

	_0411b3_jump:
		cmpw   $0x000021,0x000060(%ecx)
		jne    _0411c5_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0411c5_jump
		mov    $0x000001,%edx

	_0411c5_jump:
		add    $0x000084,%ecx
		inc    %eax
		test   %dx,%dx
		jne    _0411d6_jump
		cmp    %bx,%ax
		jl     _0411b3_jump

	_0411d6_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		jne    _0411e8_jump

	_0411e1_jump:
		mov    $0x000001,%edx
		mov    %ebp,%ecx

	_0411e8_jump:
		test   %dx,%dx
		je     _041242_jump
		mov    0x000081(%ecx),%ah
		or     $0x000004,%ah
		mov    0x000024(%ecx),%ebp
		mov    %ah,0x000081(%ecx)
		test   %ebp,%ebp
		jne    _04120a_jump
		mov    %ecx,%eax
		call   _01f3d4_func

	_04120a_jump:
		movl   $0x000001,0x000024(%ecx)
		movswl %si,%eax
		movb   $0x000001,0x000076(%ecx)
		mov    %eax,0x000028(%ecx)
		mov    -0x000002(%esp),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    0x000004(%esp),%eax
		mov    0x000008(%esp),%bl
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d444_func

	_041242_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %esi
		ret    



_041248_func:
		push   %ebx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _04126d_jump
		cmpb   $0x000005,0x00006c(%eax)
		jne    _04126d_jump
		mov    0x000081(%eax),%bl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%eax)
		pop    %ebx
		ret    

	_04126d_jump:
		call   _02f788_func
		pop    %ebx
		ret    



_041274_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0ce09a_data,%bx
		cmp    $0x00000a,%bx
		jge    _0412b4_jump
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		jne    _0412a3_jump
		mov    $0x000001,%eax
		call   _02dd0c_func
		cmpw   $0x000003,_0cf254_data
		je     _0412d1_jump
		jmp    _0412c8_jump

	_0412a3_jump:
		xor    %eax,%eax
		call   _02dd0c_func
		mov    %bx,_0ce09a_data
		pop    %edx
		pop    %ebx
		ret    

	_0412b4_jump:
		mov    $0x000001,%eax
		call   _02dd0c_func
		cmpw   $0x000003,_0cf254_data
		je     _0412d1_jump

	_0412c8_jump:
		movw   $0x00000a,_0ce09a_data

	_0412d1_jump:
		pop    %edx
		pop    %ebx
		ret    



_0412d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    _0cc7a0_data,%edx
		mov    _0cc7a4_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jle    _04142c_jump

	_0412f1_jump:
		test   %bx,%bx
		jne    _041386_jump
		cmpw   $0x0000d1,0x000060(%edx)
		jne    _041386_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _041386_jump
		movb   $0x000004,0x00007e(%edx)
		xor    %eax,%eax
		mov    $0x000005,%ebx
		mov    0x000068(%edx),%al
		movl   $0x000064,0x00002c(%edx)
		sub    %eax,%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%edx),%eax
		mov    %bx,0x00003c(%edx)
		xor    %ebx,%ebx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%bl
		call   _0188b0_func
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		cwtl   
		movl   $0x000001,0x000024(%edx)
		sub    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000081(%edx),%bl
		mov    %ax,0x00003e(%edx)
		or     $0x000004,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%edx)
		call   _01f3d4_func
		mov    0x000034(%edx),%ax
		mov    $0x000002,%bh
		mov    %ax,_0e0610_data
		mov    %bh,_0e0637_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_041386_jump:
		cmp    $0x000001,%bx
		jne    _04141c_jump
		cmpw   $0x0000d2,0x000060(%edx)
		jne    _04141c_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _04141c_jump
		movb   $0x000004,0x00007e(%edx)
		xor    %eax,%eax
		mov    $0x0000f0,%ebx
		mov    0x000068(%edx),%al
		movl   $0x000064,0x00002c(%edx)
		sub    %eax,%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%edx),%eax
		mov    %bx,0x00003c(%edx)
		xor    %ebx,%ebx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%bl
		call   _0188b0_func
		cwtl   
		movw   $0x000000,0x000040(%edx)
		sub    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000042(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f3d4_func
		mov    0x000034(%edx),%ax
		mov    $0x000002,%dl
		mov    %ax,_0e061e_data
		mov    %dl,_0e0637_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04141c_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jl     _0412f1_jump

	_04142c_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041430_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0xffffffff,%ecx
		mov    _0cc7a0_data,%edx
		mov    _0cc7a4_data,%si
		xor    %eax,%eax
		xor    %ebx,%ebx
		test   %si,%si
		jle    _04156a_jump

	_041453_jump:
		test   %ax,%ax
		jne    _0414c8_jump
		cmpw   $0x00006c,0x000060(%edx)
		jne    _0414c8_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _0414c8_jump
		movb   $0x000004,0x00007e(%edx)
		movl   $0x000140,0x000028(%edx)
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		movl   $0x000001,0x000024(%edx)
		mov    0x000028(%edx),%eax
		mov    0x000081(%edx),%cl
		mov    %ax,0x00003c(%edx)
		mov    _0cf2ae_data,%eax
		or     $0x000004,%cl
		sar    $0x000010,%eax
		mov    %cl,0x000081(%edx)
		add    $0x000064,%eax
		mov    %eax,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    %ebx,%ecx
		call   _01f3d4_func
		movb   $0x000000,0x000076(%edx)
		mov    $0x000001,%eax
		movw   $0x000000,0x000050(%edx)
		jmp    _04155a_jump

	_0414c8_jump:
		cmp    $0x000001,%ax
		jne    _04155a_jump
		cmpw   $0x00006c,0x000060(%edx)
		jne    _04155a_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _04155a_jump
		movl   $0xffffffec,0x000028(%edx)
		mov    0x000028(%edx),%eax
		mov    %ax,0x00003c(%edx)
		mov    _0cf2ae_data,%eax
		movb   $0x000004,0x00007e(%edx)
		sar    $0x000010,%eax
		movw   $0x000000,0x000040(%edx)
		add    $0x000064,%eax
		mov    %eax,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000042(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f3d4_func
		movb   $0x000001,0x000076(%edx)
		movw   $0x000000,0x000050(%edx)
		mov    %cx,0x000052(%edx)
		movswl %cx,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		mov    %bx,0x000052(%edx,%eax,1)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04155a_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %si,%bx
		jl     _041453_jump

	_04156a_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041570_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    0x000076(%eax),%ah
		test   %ah,%ah
		jne    _0415a8_jump
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%cx
		mov    _0e0608_data,%di
		add    %ecx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		mov    _0e0604_data,%bx
		add    %edx,%eax
		jmp    _0415ce_jump

	_0415a8_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		mov    _0e060a_data,%di
		add    %edx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		mov    _0e0606_data,%bx

	_0415ce_jump:
		sub    %eax,%ebx
		cmpw   $0x000000,0x000050(%esi)
		je     _041767_jump
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    %edx,0x000004(%esp)
		cmpw   $0x000000,0x000050(%eax)
		je     _041767_jump
		cmpl   $0x000000,0x000024(%esi)
		je     _041671_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _041671_jump
		xor    %edx,%edx
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%dl
		mov    0x000028(%eax),%ebp
		add    %ecx,%edx
		mov    0x000068(%eax),%al
		add    %ebp,%edx
		and    $_0000ff_case,%eax
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    _0ce0d0_data,%edx
		sar    %eax
		mov    0x000068(%edx),%cl
		sub    %ecx,%eax
		mov    %eax,0x000028(%edx)
		mov    0x000050(%esi),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    0x000004(%esp),%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%cl
		add    %ebp,%ecx
		mov    0x00002c(%eax),%ebp
		mov    0x000069(%eax),%al
		add    %ebp,%ecx
		and    $_0000ff_case,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		sar    %ecx
		jmp    _041708_jump

	_041671_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _0416a8_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		add    %eax,%ecx
		mov    _0ce0d0_data,%eax
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ecx
		mov    %ecx,%edx
		mov    %ecx,0x000028(%eax)
		xor    %ecx,%edx
		mov    0x000069(%esi),%dl
		mov    0x00002c(%esi),%ecx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%ecx
		mov    %ecx,0x00002c(%eax)
		jmp    _041710_jump

	_0416a8_jump:
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _041710_jump
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    0x000028(%eax),%eax
		add    %edx,%eax
		mov    _0ce0d0_data,%edx
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp
		mov    0x000068(%edx),%al
		sub    %eax,%ebp
		mov    %ebp,0x000028(%edx)
		mov    0x000050(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,(%esp)
		mov    (%esp),%ebp
		shl    $0x000005,%eax
		add    %ebp,%eax
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		mov    0x00002c(%ecx),%ecx
		add    %eax,%ecx
		xor    %eax,%eax

	_041708_jump:
		mov    0x000069(%edx),%al
		sub    %eax,%ecx
		mov    %ecx,0x00002c(%edx)

	_041710_jump:
		xor    %edx,%edx
		mov    _0ce06c_data,%eax
		mov    _0ce0ac_data,%dl
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sar    %eax
		lea    (%edx,%eax,1),%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%ecx
		mov    %cx,_0e0608_data
		xor    %ecx,%ecx
		mov    _0ce0ad_data,%cl
		mov    _0ce070_data,%ebp
		sar    %ecx
		add    %ecx,%ebp
		mov    %ebp,(%esp)
		sub    %eax,%edx
		mov    (%esp),%ecx
		mov    %dx,_0e060a_data
		mov    %cx,_0e0604_data
		mov    %cx,_0e0606_data
		jmp    _0417a7_jump

	_041767_jump:
		testb  $0x000001,_0cf220_data
		jne    _0417a7_jump
		mov    _0ce0d0_data,%eax
		mov    0x000028(%eax),%dx
		add    $0x000040,%edx
		mov    %dx,_0e0608_data
		mov    0x00002c(%eax),%dx
		add    $0x000032,%edx
		mov    0x000028(%eax),%ax
		mov    %dx,_0e0604_data
		add    $0x000030,%eax
		mov    %dx,_0e0606_data
		mov    %ax,_0e060a_data

	_0417a7_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _0417b0_jump
		neg    %eax

	_0417b0_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _0417bb_jump
		neg    %eax

	_0417bb_jump:
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		cmp    $0x000002,%dx
		jge    _0417f8_jump
		cmpw   $0x000000,0x000050(%esi)
		jne    _0417f8_jump
		movw   $0x000001,0x000050(%esi)
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _0417f8_jump
		movw   $0x000001,0x000050(%eax)

	_0417f8_jump:
		cmpw   $0x000000,0x000008(%esp)
		jle    _041827_jump
		mov    $0x000005,%cl
		mov    %edi,%eax
		mov    0x000006(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000005,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_041827_jump:
		mov    0x000040(%esi),%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _041840_jump
		mov    $0x000001,%eax
		jg     _041840_jump
		neg    %eax

	_041840_jump:
		lea    (%edx,%eax,1),%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jle    _04184e_jump
		mov    %ebx,%eax

	_04184e_jump:
		mov    %eax,%ebx
		mov    $0xffffffd8,%eax
		cmp    %ebx,%eax
		jge    _04185b_jump
		mov    %ebx,%eax

	_04185b_jump:
		mov    0x00003e(%esi),%ebx
		mov    %ax,0x000042(%esi)
		sar    $0x000010,%ebx
		movswl %di,%eax
		sub    %ebx,%eax
		cmp    $0x000000,%eax
		je     _041878_jump
		mov    $0x000001,%eax
		jg     _041878_jump
		neg    %eax

	_041878_jump:
		add    %eax,%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jle    _041885_jump
		mov    %ebx,%eax

	_041885_jump:
		mov    %eax,%ebx
		mov    $0xffffffd8,%eax
		cmp    %ebx,%eax
		jge    _041892_jump
		mov    %ebx,%eax

	_041892_jump:
		mov    %ax,0x000040(%esi)
		test   %ax,%ax
		jle    _0418b3_jump
		mov    0x000081(%esi),%dh
		test   $0x000008,%dh
		jne    _0418b3_jump
		mov    %dh,%cl
		or     $0x000008,%cl
		mov    %cl,0x000081(%esi)
		jmp    _0418d0_jump

	_0418b3_jump:
		cmpw   $0x000000,0x000040(%esi)
		jge    _0418d0_jump
		mov    0x000081(%esi),%bl
		test   $0x000008,%bl
		je     _0418d0_jump
		mov    %bl,%bh
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%esi)

	_0418d0_jump:
		mov    _0cf2ae_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%ebx
		sub    $0x0000c8,%eax
		cmp    %ebx,%eax
		jle    _0418fa_jump
		mov    0x000081(%esi),%ch
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%esi)

	_0418fa_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041904_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		cmpw   $0x000000,0x000050(%eax)
		je     _0419be_jump
		mov    0x000050(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		cmpw   $0x000000,0x000050(%ebx,%eax,4)
		je     _0419be_jump
		movw   $0x000000,0x000050(%edx)
		mov    _0cf220_data,%ah
		mov    0x000050(%edx),%edx
		or     $0x000001,%ah
		sar    $0x000010,%edx
		mov    %ah,_0cf220_data
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    $0x00000a,%esi
		movw   $0x000000,0x000050(%ebx,%eax,4)
		mov    _0cf2b0_data,%ax
		mov    $0x00012c,%edi
		sub    $0x0000c8,%eax
		mov    %si,_0e0608_data
		mov    %ax,_0e0604_data
		mov    %ax,_0e0606_data
		mov    _0ce0d0_data,%eax
		mov    %di,_0e060a_data
		call   _07af48_func
		mov    _0ce0d0_data,%eax
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		mov    $0x000001,%dh
		movb   $0x000008,0x00006e(%eax)
		mov    %dh,_0e0632_data

	_0419be_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_0419d0_switch:
		.long   _041a51_case
		.long   _041a66_case
		.long   _041a7c_case
		.long   _041aa3_case

_0419e0_switch:
		.long   _041ae4_case
		.long   _041af9_case
		.long   _041b0f_case
		.long   _041b36_case

_0419f0_switch:
		.long   _041b73_case
		.long   _041b7f_case
		.long   _041b8b_case
		.long   _041b97_case

_041a00_switch:
		.long   _041bbe_case
		.long   _041bd3_case
		.long   _041be9_case
		.long   _041c10_case




_041a10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cf414_data,%dl
		mov    _0966e4_data,%ebx
		mov    _0966dc_data,%ecx
		mov    _0966e8_data,%esi
		mov    _0966e0_data,%edi
		mov    _0c3f68_data,%ax
		cmp    $0x000003,%ax
		ja     _041ac7_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0419d0_switch(,%eax,4)

	_041a51_case:
		test   %dl,%dl
		je     _041a80_jump
		movl   $_041f70_func,_0c3f58_data
		mov    $_041c70_switch,%ebx
		jmp    _041ac7_jump

	_041a66_case:
		test   %dl,%dl
		je     _041aa7_jump
		mov    $_041ffc_func,%ebp
		mov    $_041c70_switch,%esi
		mov    %ebp,_0c3f58_data
		jmp    _041ac7_jump

	_041a7c_case:
		test   %dl,%dl
		je     _041a91_jump

	_041a80_jump:
		mov    $_041e58_func,%eax
		mov    $_041c70_switch,%ecx
		mov    %eax,_0c3f58_data
		jmp    _041ac7_jump

	_041a91_jump:
		mov    $_041f70_func,%ebp
		mov    $_041c70_switch,%ebx
		mov    %ebp,_0c3f58_data
		jmp    _041ac7_jump

	_041aa3_case:
		test   %dl,%dl
		je     _041ab8_jump

	_041aa7_jump:
		movl   $_041ee4_func,_0c3f58_data
		mov    $_041c70_switch,%edi
		jmp    _041ac7_jump

	_041ab8_jump:
		movl   $_041ffc_func,_0c3f58_data
		mov    $_041c70_switch,%esi

	_041ac7_jump:
		mov    _0c3f6a_data,%ax
		cmp    $0x000003,%ax
		ja     _041b5a_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0419e0_switch(,%eax,4)

	_041ae4_case:
		test   %dl,%dl
		je     _041b13_jump
		movl   $_041f70_func,_0c3f5c_data
		mov    $_041c5c_switch,%ebx
		jmp    _041b5a_jump

	_041af9_case:
		test   %dl,%dl
		je     _041b3a_jump
		mov    $_041ffc_func,%ebp
		mov    $_041c5c_switch,%esi
		mov    %ebp,_0c3f5c_data
		jmp    _041b5a_jump

	_041b0f_case:
		test   %dl,%dl
		je     _041b24_jump

	_041b13_jump:
		mov    $_041e58_func,%eax
		mov    $_041c5c_switch,%ecx
		mov    %eax,_0c3f5c_data
		jmp    _041b5a_jump

	_041b24_jump:
		mov    $_041f70_func,%ebp
		mov    $_041c5c_switch,%ebx
		mov    %ebp,_0c3f5c_data
		jmp    _041b5a_jump

	_041b36_case:
		test   %dl,%dl
		je     _041b4b_jump

	_041b3a_jump:
		movl   $_041ee4_func,_0c3f5c_data
		mov    $_041c5c_switch,%edi
		jmp    _041b5a_jump

	_041b4b_jump:
		movl   $_041ffc_func,_0c3f5c_data
		mov    $_041c5c_switch,%esi

	_041b5a_jump:
		mov    _0c3f6c_data,%ax
		cmp    $0x000003,%ax
		ja     _041ba1_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0419f0_switch(,%eax,4)

	_041b73_case:
		movl   $_041e58_func,_0c3f60_data
		jmp    _041ba1_jump

	_041b7f_case:
		movl   $_041ee4_func,_0c3f60_data
		jmp    _041ba1_jump

	_041b8b_case:
		movl   $_041f70_func,_0c3f60_data
		jmp    _041ba1_jump

	_041b97_case:
		movl   $_041ffc_func,_0c3f60_data

	_041ba1_jump:
		mov    _0c3f6e_data,%ax
		cmp    $0x000003,%ax
		ja     _041c34_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_041a00_switch(,%eax,4)

	_041bbe_case:
		test   %dl,%dl
		je     _041bed_jump
		movl   $_041f70_func,_0c3f64_data
		mov    $_041c84_switch,%ebx
		jmp    _041c34_jump

	_041bd3_case:
		test   %dl,%dl
		je     _041c14_jump
		mov    $_041ffc_func,%ebp
		mov    $_041c84_switch,%esi
		mov    %ebp,_0c3f64_data
		jmp    _041c34_jump

	_041be9_case:
		test   %dl,%dl
		je     _041bfe_jump

	_041bed_jump:
		mov    $_041e58_func,%eax
		mov    $_041c84_switch,%ecx
		mov    %eax,_0c3f64_data
		jmp    _041c34_jump

	_041bfe_jump:
		mov    $_041f70_func,%ebp
		mov    $_041c84_switch,%ebx
		mov    %ebp,_0c3f64_data
		jmp    _041c34_jump

	_041c10_case:
		test   %dl,%dl
		je     _041c25_jump

	_041c14_jump:
		movl   $_041ee4_func,_0c3f64_data
		mov    $_041c84_switch,%edi
		jmp    _041c34_jump

	_041c25_jump:
		movl   $_041ffc_func,_0c3f64_data
		mov    $_041c84_switch,%esi

	_041c34_jump:
		mov    %edi,_0966e0_data
		mov    %esi,_0966e8_data
		mov    %ecx,_0966dc_data
		mov    %ebx,_0966e4_data
		mov    %dl,_0cf414_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_041c5c_switch:
		.long   _f4a0c031_case
		.long   _9000095d_case




_041c64_func:
		and    $_0000ff_case,%eax
		mov    _0e0640_data(%eax),%al
		ret    

_041c70_switch:
		.long   _f5a0c031_case
		.long   _2500095d_case
		.long   _0000ff_case
		.long   _640808a_case
		.long   _90c3000e_case

_041c84_switch:
		.long   _f6a0c031_case
		.long   _2500095d_case
		.long   _0000ff_case
		.long   _640808a_case
		.long   _90c3000e_case




_041c98_func:
		push   %edx
		mov    _095e6a_data,%ah
		xor    %edx,%edx
		cmp    $0x000002,%ah
		jne    _041cba_jump
		mov    _0cf13e_data,%ax
		cmp    _0e06cc_data,%ax
		setle  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_041cba_jump:
		cmpb   $0x000001,_0cf440_data
		jne    _041cf1_jump
		xor    %eax,%eax
		mov    _095df2_data,%al
		call   _041c64_func
		test   %al,%al
		je     _041cea_jump
		xor    %eax,%eax
		mov    _095df0_data,%al
		call   _041c64_func
		test   %al,%al
		jne    _041cea_jump
		mov    $0x000001,%eax
		jmp    _041cec_jump

	_041cea_jump:
		xor    %eax,%eax

	_041cec_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_041cf1_jump:
		cmpb   $0x000000,_0ca8c5_data
		je     _041d01_jump
		mov    _0e06d2_data,%dx

	_041d01_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_041d08_func:
		push   %edx
		mov    _095e6a_data,%ah
		xor    %edx,%edx
		cmp    $0x000002,%ah
		jne    _041d2a_jump
		mov    _0cf13e_data,%ax
		cmp    _0e06da_data,%ax
		setge  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_041d2a_jump:
		cmpb   $0x000001,_0cf440_data
		jne    _041d61_jump
		xor    %eax,%eax
		mov    _095df0_data,%al
		call   _041c64_func
		test   %al,%al
		je     _041d5a_jump
		xor    %eax,%eax
		mov    _095df2_data,%al
		call   _041c64_func
		test   %al,%al
		jne    _041d5a_jump
		mov    $0x000001,%eax
		jmp    _041d5c_jump

	_041d5a_jump:
		xor    %eax,%eax

	_041d5c_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_041d61_jump:
		cmpb   $0x000000,_0ca8c5_data
		je     _041d71_jump
		mov    _0e06e0_data,%dx

	_041d71_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_041d78_func:
		push   %edx
		mov    _095e6a_data,%ah
		xor    %edx,%edx
		cmp    $0x000002,%ah
		jne    _041d9a_jump
		mov    _0cf13c_data,%ax
		cmp    _0e06d6_data,%ax
		setge  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_041d9a_jump:
		cmpb   $0x000001,_0cf440_data
		jne    _041dd1_jump
		xor    %eax,%eax
		mov    _095df3_data,%al
		call   _041c64_func
		test   %al,%al
		je     _041dca_jump
		xor    %eax,%eax
		mov    _095df1_data,%al
		call   _041c64_func
		test   %al,%al
		jne    _041dca_jump
		mov    $0x000001,%eax
		jmp    _041dcc_jump

	_041dca_jump:
		xor    %eax,%eax

	_041dcc_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_041dd1_jump:
		cmpb   $0x000000,_0ca8c5_data
		je     _041de1_jump
		mov    _0e06e8_data,%dx

	_041de1_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_041de8_func:
		push   %edx
		mov    _095e6a_data,%ah
		xor    %edx,%edx
		cmp    $0x000002,%ah
		jne    _041e0a_jump
		mov    _0cf13c_data,%ax
		cmp    _0e06d0_data,%ax
		setle  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_041e0a_jump:
		cmpb   $0x000001,_0cf440_data
		jne    _041e41_jump
		xor    %eax,%eax
		mov    _095df1_data,%al
		call   _041c64_func
		test   %al,%al
		je     _041e3a_jump
		xor    %eax,%eax
		mov    _095df3_data,%al
		call   _041c64_func
		test   %al,%al
		jne    _041e3a_jump
		mov    $0x000001,%eax
		jmp    _041e3c_jump

	_041e3a_jump:
		xor    %eax,%eax

	_041e3c_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_041e41_jump:
		cmpb   $0x000000,_0ca8c5_data
		je     _041e51_jump
		mov    _0e06ce_data,%dx

	_041e51_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_041e58_func:
		push   %edx
		mov    _0cf2d0_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _041edf_jump
		cmpb   $0x000000,_095e6a_data
		je     _041e7e_jump
		cmpw   $0x000001,_0c91a0_data
		jne    _041eb9_jump

	_041e7e_jump:
		cmpb   $0x000001,_0cf440_data
		jne    _041e98_jump
		call   *_0966dc_data
		test   %al,%al
		je     _041e98_jump
		mov    $0x000001,%eax
		jmp    _041e9a_jump

	_041e98_jump:
		xor    %eax,%eax

	_041e9a_jump:
		cmpb   $0x000000,_0cf425_data
		je     _041edf_jump
		cmpw   $0x000001,_0cf1ea_data
		sete   %dl
		and    $_0000ff_case,%edx
		cwtl   
		or     %edx,%eax
		pop    %edx
		ret    

	_041eb9_jump:
		cmpw   $0x000001,_0cf1ea_data
		je     _041ed6_jump
		cmpb   $0x000001,_0cf440_data
		jne    _041edd_jump
		call   *_0966dc_data
		test   %al,%al
		je     _041edd_jump

	_041ed6_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_041edd_jump:
		xor    %eax,%eax

	_041edf_jump:
		pop    %edx
		ret    



_041ee4_func:
		push   %edx
		mov    _0cf2d0_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _041f6b_jump
		cmpb   $0x000000,_095e6a_data
		je     _041f0a_jump
		cmpw   $0x000001,_0c91a2_data
		jne    _041f45_jump

	_041f0a_jump:
		cmpb   $0x000001,_0cf440_data
		jne    _041f24_jump
		call   *_0966e0_data
		test   %al,%al
		je     _041f24_jump
		mov    $0x000001,%eax
		jmp    _041f26_jump

	_041f24_jump:
		xor    %eax,%eax

	_041f26_jump:
		cmpb   $0x000000,_0cf425_data
		je     _041f6b_jump
		cmpw   $0x000001,_0cf1ec_data
		sete   %dl
		and    $_0000ff_case,%edx
		cwtl   
		or     %edx,%eax
		pop    %edx
		ret    

	_041f45_jump:
		cmpw   $0x000001,_0cf1ec_data
		je     _041f62_jump
		cmpb   $0x000001,_0cf440_data
		jne    _041f69_jump
		call   *_0966e0_data
		test   %al,%al
		je     _041f69_jump

	_041f62_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_041f69_jump:
		xor    %eax,%eax

	_041f6b_jump:
		pop    %edx
		ret    



_041f70_func:
		push   %edx
		mov    _0cf2d0_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _041ff7_jump
		cmpb   $0x000000,_095e6a_data
		je     _041f96_jump
		cmpw   $0x000001,_0c91a4_data
		jne    _041fd1_jump

	_041f96_jump:
		cmpb   $0x000001,_0cf440_data
		jne    _041fb0_jump
		call   *_0966e4_data
		test   %al,%al
		je     _041fb0_jump
		mov    $0x000001,%eax
		jmp    _041fb2_jump

	_041fb0_jump:
		xor    %eax,%eax

	_041fb2_jump:
		cmpb   $0x000000,_0cf425_data
		je     _041ff7_jump
		cmpw   $0x000001,_0cf1e4_data
		sete   %dl
		and    $_0000ff_case,%edx
		cwtl   
		or     %edx,%eax
		pop    %edx
		ret    

	_041fd1_jump:
		cmpw   $0x000001,_0cf1e4_data
		je     _041fee_jump
		cmpb   $0x000001,_0cf440_data
		jne    _041ff5_jump
		call   *_0966e4_data
		test   %al,%al
		je     _041ff5_jump

	_041fee_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_041ff5_jump:
		xor    %eax,%eax

	_041ff7_jump:
		pop    %edx
		ret    



_041ffc_func:
		push   %edx
		mov    _0cf2d0_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _042083_jump
		cmpb   $0x000000,_095e6a_data
		je     _042022_jump
		cmpw   $0x000001,_0c91a6_data
		jne    _04205d_jump

	_042022_jump:
		cmpb   $0x000001,_0cf440_data
		jne    _04203c_jump
		call   *_0966e8_data
		test   %al,%al
		je     _04203c_jump
		mov    $0x000001,%eax
		jmp    _04203e_jump

	_04203c_jump:
		xor    %eax,%eax

	_04203e_jump:
		cmpb   $0x000000,_0cf425_data
		je     _042083_jump
		cmpw   $0x000001,_0cf1ea_data
		sete   %dl
		and    $_0000ff_case,%edx
		cwtl   
		or     %edx,%eax
		pop    %edx
		ret    

	_04205d_jump:
		cmpw   $0x000001,_0cf1e6_data
		je     _04207a_jump
		cmpb   $0x000001,_0cf440_data
		jne    _042081_jump
		call   *_0966e8_data
		test   %al,%al
		je     _042081_jump

	_04207a_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_042081_jump:
		xor    %eax,%eax

	_042083_jump:
		pop    %edx
		ret    



_042088_func:
		push   %edx
		mov    _0cf2d0_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _0420bd_jump
		cmpw   $0x000001,_0e06e4_data
		je     _0420b4_jump
		cmpb   $0x000001,_0cf440_data
		jne    _0420bb_jump
		call   *_0966e4_data
		test   %al,%al
		je     _0420bb_jump

	_0420b4_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_0420bb_jump:
		xor    %eax,%eax

	_0420bd_jump:
		pop    %edx
		ret    



_0420c0_func:
		push   %edx
		mov    _0cf2d0_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _0420dc_jump
		cmpw   $0x000001,_0e06de_data
		sete   %al
		xor    %ah,%ah

	_0420dc_jump:
		pop    %edx
		ret    



_0420e0_func:
		mov    %ax,_0e06d4_data
		ret    



_0420e8_func:
		call   *_0e06c0_data
		ret    



_0420f0_func:
		push   %esi
		mov    %eax,%esi
		call   *_0e06c0_data
		mov    _0cf13e_data,%ax
		cmp    (%edx),%ax
		jge    _042107_jump
		mov    %ax,(%edx)

	_042107_jump:
		mov    _0cf13c_data,%dx
		cmp    (%ecx),%dx
		jge    _042116_jump
		mov    %dx,(%ecx)

	_042116_jump:
		mov    _0cf13e_data,%dx
		cmp    (%esi),%dx
		jle    _042125_jump
		mov    %dx,(%esi)

	_042125_jump:
		mov    _0cf13c_data,%dx
		cmp    (%ebx),%dx
		jle    _042134_jump
		mov    %dx,(%ebx)

	_042134_jump:
		pop    %esi
		ret    



_042138_func:
		push   %ebx
		mov    %eax,%ebx
		cmpb   $0x000000,_095e6a_data
		je     _042172_jump
		call   *_0e06c0_data
		mov    _0cf13e_data,%ax
		mov    %ax,(%ebx)
		mov    _0cf13c_data,%bx
		mov    %ax,_0e06d8_data
		mov    %bx,(%edx)
		mov    $0x000002,%dl
		mov    %bx,_0e06dc_data
		mov    %dl,_095e6a_data

	_042172_jump:
		pop    %ebx
		ret    



_042174_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    %ebx,%edi
		mov    %ecx,%ebp
		mov    0x000014(%esp),%ecx
		movswl (%ecx),%ecx
		movswl (%edx),%esi
		mov    %ecx,%edx
		mov    _0e06d2_data,%ebx
		sub    %esi,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    %esi,%eax
		mov    (%esp),%esi
		movswl (%esi),%esi
		mov    %esi,%edx
		sub    %ecx,%edx
		mov    %ax,_0e06cc_data
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    %eax,%esi
		mov    %si,_0e06da_data
		mov    0x000018(%esp),%esi
		movswl (%esi),%esi
		movswl 0x000000(%ebp),%ecx
		mov    %esi,%edx
		sub    %ecx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    %ecx,%eax
		movswl (%edi),%ecx
		mov    %ecx,%edx
		sub    %esi,%edx
		mov    %ax,_0e06d0_data
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    %eax,%ecx
		mov    %cx,_0e06d6_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_04226c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		push   $0x000180
		push   $0x000200
		push   %eax
		call   _080bde_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		jne    _0422a1_jump
		push   %ebx
		push   $_0c0be4_data
		call   _07f8fc_func
		add    $0x000008,%esp
		call   _07fd1b_func
		pop    %ecx
		pop    %ebx
		ret    

	_0422a1_jump:
		mov    %ecx,%eax
		call   _084da9_func
		movswl %ax,%ebx
		mov    %ebx,%eax
		call   _07f158_func
		mov    %eax,0x000010(%edx)
		mov    %ebx,0x00000c(%edx)
		mov    %ecx,%eax
		mov    0x000010(%edx),%edx
		call   _084de6_func
		mov    %ecx,%eax
		call   _080e81_func
		pop    %ecx
		pop    %ebx
		ret    



_0422cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000064,%esp
		mov    %eax,%ebp
		call   _03d8fc_func
		push   $_0c0c00_data
		call   _07f8fc_func
		add    $0x000004,%esp
		mov    $_0c0bf8_data,%esi
		push   %esi
		push   $_0c0c30_data
		xor    %edx,%edx
		call   _07f8fc_func
		add    $0x000008,%esp

	_0422fe_jump:
		call   _084ee1_func
		movswl %dx,%ebx
		inc    %edx
		mov    %al,(%esp,%ebx,1)
		cmp    $0x00000d,%al
		je     _042312_jump
		cmp    $0x00001b,%al
		jne    _0422fe_jump

	_042312_jump:
		dec    %edx
		movswl %dx,%eax
		xor    %dl,%dl
		mov    %dl,(%esp,%eax,1)
		cmpb   $0x000000,(%esp)
		jne    _04233d_jump
		mov    %esp,%edi
		push   %edi

	_042324_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04233c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _042324_jump

	_04233c_jump:
		pop    %edi

	_04233d_jump:
		mov    $_0c0c50_data,%esi
		mov    %esp,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04234d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _042365_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04234d_jump

	_042365_jump:
		pop    %edi
		mov    %ebp,%edx
		mov    %esp,%eax
		call   _04226c_func
		xor    %eax,%eax
		mov    $_0c7338_data,%esi
		mov    _0cf43c_data,%al
		mov    $_0000ff_case,%ecx
		call   _03d7e0_func
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		add    $0x000064,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0423ac_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,_0cf1e6_data
		mov    %dx,_0cf1e4_data
		mov    %dx,_0cf1ea_data
		test   $0x000001,%al
		je     _0423d4_jump
		movw   $0x000001,_0cf1ea_data

	_0423d4_jump:
		test   $0x000002,%al
		je     _0423e1_jump
		movw   $0x000001,_0cf1e4_data

	_0423e1_jump:
		test   $0x000004,%al
		je     _0423ea_jump
		mov    $0x000001,%ebx

	_0423ea_jump:
		test   $0x000008,%al
		je     _0423f3_jump
		mov    $0x000001,%ebx

	_0423f3_jump:
		test   $0x000010,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0e06d2_data
		test   $0x000020,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0e06e0_data
		test   $0x000040,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0e06ce_data
		test   $0x000080,%al
		setne  %dl
		mov    %dx,_0e06e8_data
		mov    %bx,_0cf1ec_data
		pop    %edx
		pop    %ebx
		ret    



_042434_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0cf1ea_data,%ax
		mov    %ax,_0e06e6_data
		mov    _0cf1ec_data,%ax
		mov    %ax,_0e06e4_data
		mov    _0cf1e4_data,%ax
		mov    %ax,_0e06e2_data
		mov    _0cf1e6_data,%ax
		mov    %ax,_0e06de_data
		mov    0x000015(%edx),%ah
		mov    (%edx),%ebx
		test   %ah,%ah
		je     _04253b_jump
		test   %ebx,%ebx
		jne    _0424cb_jump
		mov    _0cf27c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _042498_jump
		cmpb   $0x000000,_0cf425_data
		jne    _042498_jump
		mov    %edx,%eax
		call   _0422cc_func

	_042498_jump:
		mov    %ebx,%ecx
		mov    0x000010(%edx),%eax
		movl   $0x000000,0x000008(%edx)
		inc    %ebx
		mov    (%ecx,%eax,1),%al
		and    $_0000ff_case,%eax
		call   _0423ac_func
		mov    0x000010(%edx),%eax
		mov    (%ebx,%eax,1),%al
		movb   $0x000000,0x000016(%edx)
		and    $_0000ff_case,%eax
		mov    %ebx,(%edx)
		mov    %eax,0x000004(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0424cb_jump:
		mov    0x000008(%edx),%ecx
		inc    %ecx
		mov    0x000004(%edx),%esi
		mov    %ecx,0x000008(%edx)
		cmp    %esi,%ecx
		jne    _04252a_jump
		cmpb   $0x000001,0x000016(%edx)
		je     _0424e7_jump
		lea    0x000001(%ebx),%eax
		cmp    0x00000c(%edx),%eax
		jb     _042510_jump

	_0424e7_jump:
		mov    _0cf425_data,%ch
		movb   $0x000000,0x000015(%edx)
		cmp    $0x000001,%ch
		jne    _04252a_jump
		mov    $0x000002,%al
		mov    $0x000001,%ecx
		mov    %al,_0cf425_data
		mov    %cx,_0cf288_data
		call   _03ca10_func
		jmp    _04252a_jump

	_042510_jump:
		add    $0x000002,%ebx
		mov    0x000010(%edx),%eax
		movl   $0x000000,0x000008(%edx)
		mov    (%ebx,%eax,1),%al
		and    $_0000ff_case,%eax
		mov    %ebx,(%edx)
		mov    %eax,0x000004(%edx)

	_04252a_jump:
		mov    0x000010(%edx),%eax
		mov    -0x000001(%ebx,%eax,1),%al
		and    $_0000ff_case,%eax
		call   _0423ac_func

	_04253b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_042540_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _07fcb4_func
		cli    
		mov    $0x000060,%edx
		in     $0x000021,%al
		or     $0x000002,%al
		out    %al,$0x000021
		sub    %eax,%eax
		in     (%dx),%al
		mov    %al,%dh
		mov    _0cf425_data,%dl
		xor    %bl,%bl
		cmp    $0x000001,%dl
		jne    _04258a_jump
		testb  $0x000040,_0cf478_data
		je     _04258a_jump
		cmp    %dl,%al
		jne    _042583_jump
		movb   $0x000004,_0cf425_data
		jmp    _04258a_jump

	_042583_jump:
		movb   $0x000003,_0cf425_data

	_04258a_jump:
		test   $0x000080,%dh
		jne    _0425ca_jump
		mov    %dh,%al
		xor    $0x000096,%al
		xor    %ecx,%ecx
		and    $_0000ff_case,%eax
		mov    _095e6f_data,%cl
		cmp    %ecx,%eax
		je     _0425ca_jump
		movb   $0x000001,_0cf406_data
		mov    $0x000007,%eax

	_0425b0_jump:
		dec    %eax
		mov    _095e6f_data(%eax),%dl
		mov    %dl,_095e70_data(%eax)
		test   %eax,%eax
		jg     _0425b0_jump
		mov    %dh,%al
		xor    $0x000096,%al
		mov    %al,_095e6f_data

	_0425ca_jump:
		cmpb   $0x000000,_0cf445_data
		je     _0425fc_jump
		mov    _0cf421_data,%dl
		mov    _0cf41f_data,%cl
		xor    %bh,%bh
		and    $0x0000fb,%dl
		mov    %bh,_0cf420_data
		mov    %dl,_0cf421_data
		cmp    $0x000001,%cl
		jne    _0425fc_jump
		movb   $0x000002,_0cf41f_data

	_0425fc_jump:
		mov    _0966ec_data,%al
		cmp    $0x000001,%al
		jb     _04260d_jump
		jbe    _042623_jump
		cmp    $0x000002,%al
		je     _04263b_jump
		jmp    _042663_jump

	_04260d_jump:
		test   %al,%al
		jne    _042663_jump
		cmp    $0x0000e1,%dh
		jne    _04261f_jump
		movb   $0x000001,_0966ec_data
		jmp    _04266b_jump

	_04261f_jump:
		mov    $0x000001,%bl
		jmp    _04266b_jump

	_042623_jump:
		cmp    $0x00001d,%dh
		jne    _042631_jump
		movb   $0x000002,_0966ec_data
		jmp    _04266b_jump

	_042631_jump:
		xor    %bh,%bh
		mov    %bh,_0966ec_data
		jmp    _04266b_jump

	_04263b_jump:
		cmp    $0x000045,%dh
		jne    _042659_jump
		cmpb   $0x000000,_0cf48a_data
		je     _042659_jump
		mov    _0cf441_data,%ah
		test   %ah,%ah
		sete   %al
		mov    %al,_0cf441_data

	_042659_jump:
		xor    %dl,%dl
		mov    %dl,_0966ec_data
		jmp    _04266b_jump

	_042663_jump:
		xor    %ch,%ch
		mov    %ch,_0966ec_data

	_04266b_jump:
		test   %bl,%bl
		je     _042686_jump
		mov    %dh,%dl
		and    $0x000080,%dl
		xor    $0x000080,%dl
		mov    %dh,%al
		and    $0x00007f,%al
		and    $_0000ff_case,%eax
		mov    %dl,_0e0640_data(%eax)

	_042686_jump:
		mov    $0x000061,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    %eax,%ebx
		or     $0x000080,%al
		out    %al,(%dx)
		mov    %bl,%al
		out    %al,(%dx)
		mov    $0x000020,%al
		mov    $0x000020,%edx
		out    %al,(%dx)
		in     $0x000021,%al
		and    $0x0000fd,%al
		out    %al,$0x000021
		sti    
		cld    
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   



_0426b0_func:
		push   %edx
		and    $_0000ff_case,%eax
		xor    %dl,%dl
		mov    %dl,_0e0640_data(%eax)
		pop    %edx
		ret    



_0426c0_func:
		push   %edx
		xor    %al,%al

	_0426c3_jump:
		xor    %edx,%edx
		mov    %al,%dl
		xor    %ah,%ah
		mov    %ah,_0e0640_data(%edx)
		inc    %al
		cmp    $0x000080,%al
		jb     _0426c3_jump
		pop    %edx
		ret    



_0426d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _0426c0_func
		mov    $0x000009,%eax
		call   _080b55_func
		mov    %eax,_0e06c4_data
		mov    _0cf440_data,%ah
		mov    %dx,_0e06c8_data
		cmp    $0x000001,%ah
		jne    _042712_jump
		mov    $_042540_func,%ebx
		mov    $0x000009,%eax
		mov    %cs,%ecx
		call   _080af3_func

	_042712_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_042718_func:
		push   %ebx
		push   %ecx
		mov    $0x000009,%eax
		mov    _0e06c8_data,%cx
		mov    _0e06c4_data,%ebx
		call   _080af3_func
		pop    %ecx
		pop    %ebx
		ret    



_042734_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cf43f_data
		je     _04274c_jump
		mov    _0cf40a_data,%dl
		test   %dl,%dl
		je     _042769_jump

	_04274c_jump:
		xor    %bh,%bh
		mov    $_015ab4_func,%edx
		mov    %bh,_0cf417_data
		xor    %bl,%bl
		mov    %edx,_0e06c0_data
		mov    %bh,_0cf414_data
		jmp    _04278f_jump

	_042769_jump:
		mov    $0x000001,%bh
		mov    $_015ca0_func,%ecx
		mov    %dl,_0cf414_data
		mov    $_0158bc_func,%edx
		mov    %bh,_0cf417_data
		mov    %ecx,_0ccab8_data
		mov    %edx,_0e06c0_data
		xor    %bl,%bl

	_04278f_jump:
		call   _015c3e_func
		test   %eax,%eax
		jne    _042831_jump
		call   _015c6f_func
		test   %eax,%eax
		jne    _042831_jump
		mov    _0cf417_data,%bh
		mov    _0e06c0_data,%edx
		xor    %cl,%cl
		xor    %esi,%esi
		xor    %edi,%edi
		xor    %eax,%eax
		mov    _0cf414_data,%bl
		mov    %cl,_095e6a_data
		mov    %si,_0cf13e_data
		mov    %di,_0cf1e6_data
		mov    %ax,_0cf1e4_data
		mov    %si,_0cf1ea_data
		mov    %di,_0e06de_data
		mov    %ax,_0e06e2_data
		mov    %si,_0e06e6_data
		mov    %di,_0e06da_data
		mov    %ax,_0e06cc_data
		mov    %si,_0e06d0_data
		xor    %ch,%ch
		xor    %al,%al
		mov    %cx,_0cf13c_data
		mov    %cx,_0cf1ec_data
		mov    %cx,_0e06e4_data
		mov    %cx,_0e06d6_data
		jmp    _0428b0_jump

	_042831_jump:
		cmpb   $0x000000,_095e6a_data
		jne    _042841_jump
		movb   $0x000001,_095e6a_data

	_042841_jump:
		call   _015c3e_func
		test   %eax,%eax
		je     _04287d_jump
		cmpb   $0x000000,_0cf43f_data
		je     _04285c_jump
		cmpb   $0x000000,_0cf40a_data
		je     _042867_jump

	_04285c_jump:
		xor    %bh,%bh
		mov    $_015ab4_func,%edx
		xor    %bl,%bl
		jmp    _0428ae_jump

	_042867_jump:
		mov    $0x000001,%bh
		mov    $_015ca0_func,%edi
		mov    $_0158bc_func,%edx
		mov    %edi,_0ccab8_data
		xor    %bl,%bl
		jmp    _0428ae_jump

	_04287d_jump:
		cmpb   $0x000000,_0cf43f_data
		je     _04288f_jump
		cmpb   $0x000000,_0cf40a_data
		je     _04289a_jump

	_04288f_jump:
		xor    %bh,%bh
		mov    $_015b72_func,%edx
		mov    $0x000001,%bl
		jmp    _0428ae_jump

	_04289a_jump:
		mov    $0x000001,%bh
		mov    $_0159b6_func,%edx
		mov    $_015e8a_func,%esi
		mov    %bh,%bl
		mov    %esi,_0ccab8_data

	_0428ae_jump:
		mov    $0x000001,%al

	_0428b0_jump:
		mov    %bh,_0cf417_data
		mov    %bl,_0cf414_data
		mov    %edx,_0e06c0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0428d0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		mov    %eax,%esi
		mov    %edx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)
		mov    0x000040(%esp),%ecx
		mov    %ebx,%eax
		mov    _0cca7c_data,%edx
		lea    0x000000(,%edx,4),%ebp
		add    %edx,%ebp
		mov    _0cca80_data,%edx
		shl    $0x000006,%ebp
		add    %ebp,%edx
		mov    %edx,0x000018(%esp)
		mov    %esi,%edx
		sub    $0x000070,%edx
		mov    %esi,%ebp
		mov    %edx,0x00001c(%esp)
		mov    0x000008(%esp),%edx
		sub    %ebx,%ebp
		sub    $0x000040,%edx
		sub    %ecx,%ebp
		mov    %edx,0x000010(%esp)
		cmp    %ecx,%ebx
		jle    _042aa5_jump
		lea    (%ebx,%ecx,1),%eax
		add    %eax,%eax
		mov    %eax,0x000024(%esp)
		test   %ebp,%ebp
		jge    _04293c_jump
		lea    (%eax,%ebp,1),%ecx
		mov    %ecx,0x000024(%esp)
		xor    %ebp,%ebp

	_04293c_jump:
		mov    0x000024(%esp),%eax
		add    %ebp,%eax
		cmp    $0x000140,%eax
		jl     _042955_jump
		mov    $0x000140,%eax
		sub    %ebp,%eax
		dec    %eax
		mov    %eax,0x000024(%esp)

	_042955_jump:
		cmpl   $0x000000,0x000024(%esp)
		jle    _042db3_jump
		mov    0x000008(%esp),%ecx
		sub    0x000004(%esp),%ecx
		test   %ecx,%ecx
		jl     _042a05_jump
		cmp    $0x0000c8,%ecx
		jge    _042a05_jump
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000044(%esp),%edx
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000048(%esp),%ebx
		sub    %eax,%esi
		add    %ebx,%edi
		mov    _0cf422_data,%bh
		add    %edx,%esi
		test   %bh,%bh
		je     _0429f0_jump
		mov    0x000010(%esp),%eax
		mov    %ecx,%edx
		sub    %eax,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    %ebp,%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cca70_data,%ebx
		shl    $0x000002,%eax
		mov    0x000024(%esp),%ecx
		add    %eax,%ebx

	_0429df_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _0429df_jump
		jmp    _042a05_jump

	_0429f0_jump:
		mov    0x000024(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0429fe_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0429fe_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_042a05_jump:
		mov    0x000008(%esp),%esi
		add    0x000004(%esp),%esi
		test   %esi,%esi
		jl     _042db3_jump
		cmp    $0x0000c8,%esi
		jge    _042db3_jump
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000018(%esp),%edx
		mov    %edi,%eax
		mov    0x000048(%esp),%ebx
		sub    %edx,%eax
		mov    0x000044(%esp),%edx
		mov    _0cf422_data,%cl
		add    %eax,%edx
		add    %ebx,%edi
		mov    %edx,(%esp)
		test   %cl,%cl
		je     _042a9a_jump
		mov    0x000010(%esp),%ecx
		mov    %esi,%edx
		sub    %ecx,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    0x00001c(%esp),%ebp
		mov    _0cca70_data,%ebx
		add    %ebp,%eax
		mov    0x000024(%esp),%ecx
		shl    $0x000002,%eax
		mov    (%esp),%esi
		add    %eax,%ebx
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
	_042a94_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		jne    0x042a86
		jmp    _042db3_jump

	_042a9a_jump:
		mov    0x000024(%esp),%ecx
		mov    %edx,%esi

	_042aa0_jump:
		jmp    _042da2_jump

	_042aa5_jump:
		lea    (%ebx,%ebx,1),%edx

	_042aa8_jump:
		mov    %edx,0x00002c(%esp)
		test   %ebp,%ebp
		jge    _042ab8_jump
		add    %ebp,%edx
		mov    %edx,0x00002c(%esp)
		xor    %ebp,%ebp

	_042ab8_jump:
		mov    0x00002c(%esp),%edx
		add    %ebp,%edx
		cmp    $0x000140,%edx
		jl     _042ad2_jump
		mov    $0x000140,%edx
		sub    %ebp,%edx
		dec    %edx
		mov    %edx,0x00002c(%esp)

	_042ad2_jump:
		lea    (%eax,%eax,1),%edx
		sub    %eax,%esi
		add    %ecx,%esi
		mov    %edx,0x000028(%esp)
		mov    %esi,0x000020(%esp)
		test   %esi,%esi
		jge    _042af2_jump
		lea    (%edx,%esi,1),%ecx
		xor    %esi,%esi
		mov    %ecx,0x000028(%esp)
		mov    %esi,0x000020(%esp)

	_042af2_jump:
		mov    0x000020(%esp),%eax
		add    0x000028(%esp),%eax
		cmp    $0x000140,%eax
		jl     _042b0f_jump
		mov    $0x000140,%eax
		sub    0x000020(%esp),%eax
		dec    %eax
		mov    %eax,0x000028(%esp)

	_042b0f_jump:
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x000014(%esp)
		test   %eax,%eax
		jl     _042c5c_jump
		cmp    $0x0000c8,%eax
		jge    _042c5c_jump
		cmpl   $0x000000,0x00002c(%esp)
		jle    _042bc2_jump
		mov    %eax,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000048(%esp),%ebx
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000044(%esp),%edx
		sub    %eax,%esi
		add    %ebx,%edi
		mov    _0cf422_data,%ah
		add    %edx,%esi
		test   %ah,%ah
		je     _042bad_jump
		mov    0x000014(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    %ebp,%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cca70_data,%ebx
		shl    $0x000002,%eax
		mov    0x00002c(%esp),%ecx
		add    %eax,%ebx

	_042b9c_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _042b9c_jump
		jmp    _042bc2_jump

	_042bad_jump:
		mov    0x00002c(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _042bbb_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_042bbb_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_042bc2_jump:
		mov    0x000028(%esp),%ecx
		test   %ecx,%ecx
		jle    _042c5c_jump
		mov    0x000014(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    0x000020(%esp),%edi
		shl    $0x000006,%eax
		add    %eax,%edi
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000044(%esp),%edx
		sub    %eax,%esi
		mov    0x000048(%esp),%ebx
		add    %edx,%esi
		mov    _0cf422_data,%dl
		add    %ebx,%edi
		test   %dl,%dl
		je     _042c4b_jump
		mov    0x000014(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    0x000020(%esp),%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cca70_data,%ebx
		shl    $0x000002,%eax
		mov    0x000028(%esp),%ecx
		add    %eax,%ebx

	_042c3a_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _042c3a_jump
		jmp    _042c5c_jump

	_042c4b_jump:
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _042c55_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_042c55_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_042c5c_jump:
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%ecx
		add    %ecx,%eax
		mov    %eax,0x00000c(%esp)
		test   %eax,%eax
		jl     _042db3_jump
		cmp    $0x0000c8,%eax
		jge    _042db3_jump
		cmpl   $0x000000,0x00002c(%esp)
		jle    _042d11_jump
		mov    0x00000c(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		mov    0x000044(%esp),%ebx
		lea    (%eax,%ebp,1),%edi
		mov    0x000018(%esp),%edx
		mov    %edi,%esi
		mov    0x000048(%esp),%ecx
		sub    %edx,%esi
		add    %ecx,%edi
		mov    _0cf422_data,%dh
		add    %ebx,%esi
		test   %dh,%dh
		je     _042cfc_jump
		mov    0x00000c(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    0x00001c(%esp),%ebp
		add    %ebp,%eax
		mov    _0cca70_data,%ebx
		shl    $0x000002,%eax
		mov    0x00002c(%esp),%ecx
		add    %eax,%ebx

	_042ceb_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _042ceb_jump
		jmp    _042d11_jump

	_042cfc_jump:
		mov    0x00002c(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _042d0a_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_042d0a_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_042d11_jump:
		cmpl   $0x000000,0x000028(%esp)
		jle    _042db3_jump
		mov    0x00000c(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		mov    0x000020(%esp),%edi
		add    %edx,%eax
		mov    0x000018(%esp),%ecx
		shl    $0x000006,%eax
		mov    0x000044(%esp),%ebp
		add    %eax,%edi
		mov    _0cf422_data,%bl
		mov    %edi,%esi
		mov    0x000048(%esp),%eax
		sub    %ecx,%esi
		add    %eax,%edi
		add    %ebp,%esi
		test   %bl,%bl
		je     _042d9e_jump
		mov    %edx,%eax
		sub    0x000010(%esp),%eax
		lea    0x000000(,%eax,8),%edx
		sub    %eax,%edx
		shl    $0x000006,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    0x000020(%esp),%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cca70_data,%ebx
		shl    $0x000002,%eax
		mov    0x000028(%esp),%ecx
		add    %eax,%ebx

	_042d86_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _042d86_jump
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c

	_042d9e_jump:
		mov    0x000028(%esp),%ecx

	_042da2_jump:
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _042dac_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_042dac_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_042db3_jump:
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_042dbc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,0x000008(%esp)
		mov    %edx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %ebx,%esi
		xor    %edi,%edi
		xor    %ebp,%ebp
		test   %ebx,%ebx
		jl     _042e4c_jump
		mov    $0x000001,%edx
		add    %ebx,%ebx
		sub    %edx,%ebx
		mov    %edx,0x00000c(%esp)
		mov    %ebx,0x000010(%esp)

	_042de8_jump:
		mov    0x000028(%esp),%ebx
		push   %ebx
		mov    0x000028(%esp),%ecx
		mov    0x000008(%esp),%eax
		push   %ecx
		mov    0x000008(%esp),%edx
		mov    %edi,%ebx
		push   %eax
		mov    %esi,%ecx
		mov    0x000014(%esp),%eax
		call   _0428d0_func
		mov    0x000028(%esp),%edx
		push   %edx
		mov    0x000028(%esp),%ebx
		mov    0x000008(%esp),%ecx
		push   %ebx
		mov    0x000010(%esp),%eax
		mov    0x000008(%esp),%edx
		push   %ecx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _0428d0_func
		mov    0x00000c(%esp),%eax
		add    %eax,%ebp
		lea    0x000002(%eax),%edx
		inc    %edi
		mov    %edx,0x00000c(%esp)
		cmp    %esi,%ebp
		jl     _042e48_jump
		mov    0x000010(%esp),%ebx
		sub    %ebx,%ebp
		lea    -0x000002(%ebx),%ecx
		dec    %esi
		mov    %ecx,0x000010(%esp)

	_042e48_jump:
		cmp    %esi,%edi
		jle    _042de8_jump

	_042e4c_jump:
		cmpb   $0x000000,_0cf423_data
		je     _042e5a_jump
		call   _043808_func

	_042e5a_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_042e64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cf424_data
		je     _042fca_jump
		mov    $0x000004,%edx
		mov    $0x0000a1,%eax
		call   _07f43c_func
		mov    $0x000004,%edx
		mov    %eax,_0e0704_data
		mov    $0x000041,%eax
		call   _07f43c_func
		mov    $0x000004,%edx
		mov    %eax,_0e0700_data
		mov    $0x001400,%eax
		call   _07f43c_func
		mov    $0x000004,%edx
		mov    %eax,_0e071c_data
		mov    $0x007161,%eax
		call   _07f43c_func
		mov    _0e0704_data,%edx
		mov    %eax,_0cca70_data
		test   %edx,%edx
		je     _042ee6_jump
		cmpl   $0x000000,_0e0700_data
		je     _042ee6_jump
		cmpl   $0x000000,_0e071c_data
		je     _042ee6_jump
		test   %eax,%eax
		jne    _042f49_jump

	_042ee6_jump:
		cmpl   $0x000000,_0e0704_data
		je     _042ef9_jump
		mov    $_0e0704_data,%eax
		call   _07f44c_func

	_042ef9_jump:
		cmpl   $0x000000,_0e0700_data
		je     _042f0c_jump
		mov    $_0e0700_data,%eax
		call   _07f44c_func

	_042f0c_jump:
		cmpl   $0x000000,_0e071c_data
		je     _042f1f_jump
		mov    $_0e071c_data,%eax
		call   _07f44c_func

	_042f1f_jump:
		cmpl   $0x000000,_0cca70_data
		je     _042f32_jump
		mov    $_0cca70_data,%eax
		call   _07f44c_func

	_042f32_jump:
		xor    %dl,%dl
		mov    $_0c0c58_data,%eax
		mov    %dl,_0cf424_data
		call   _01f474_func
		jmp    _042fca_jump

	_042f49_jump:
		xor    %esi,%esi
		xor    %edi,%edi

	_042f4d_jump:
		mov    %esi,%eax
		imul   %esi,%eax
		mov    _0e0700_data,%edx
		mov    %eax,(%edx,%edi,1)
		xor    %eax,%eax
		xor    %edx,%edx

	_042f5f_jump:
		mov    %eax,%ebx
		imul   %eax,%ebx
		mov    _0e0704_data,%ecx
		add    $0x000004,%edx
		inc    %eax
		mov    %ebx,-0x000004(%ecx,%edx,1)
		cmp    $0x0000a0,%eax
		jle    _042f5f_jump
		inc    %esi
		add    $0x000004,%edi
		cmp    $0x000040,%esi
		jle    _042f4d_jump
		xor    %esi,%esi
		xor    %edi,%edi

	_042f86_jump:
		mov    $0x3f500000,%ecx
		mov    %esi,%eax
		add    $0x000004,%edi
		call   _07f562_func
		xor    %ebx,%ebx
		call   _0802de_func
		call   _07f75f_func
		mov    $0x40f00000,%ecx
		xor    %ebx,%ebx
		call   _084f10_func
		call   _07f75f_func
		call   _07fdac_func
		mov    _0e071c_data,%edx
		inc    %esi
		mov    %eax,-0x000004(%edx,%edi,1)
		cmp    $0x001400,%esi
		jl     _042f86_jump

	_042fca_jump:
		call   _042fd8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_042fd8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cf424_data,%ah
		test   %ah,%ah
		je     _042ff8_jump
		movb   $0x000001,_0cf422_data
		movb   $0x000003,_0cf421_data
		jmp    _043006_jump

	_042ff8_jump:
		mov    $0x000003,%dh
		mov    %ah,_0cf422_data
		mov    %dh,_0cf421_data

	_043006_jump:
		mov    $0x000019,%edx
		mov    $0x000057,%ebx
		mov    $0x000032,%ecx
		mov    $0x0000a0,%esi
		mov    $0x000064,%edi
		mov    $0x000a00,%ebp
		mov    $0x000640,%eax
		mov    %edx,_0cca84_data
		mov    %ebx,_0cca60_data
		mov    %ecx,_0cca5c_data
		mov    %esi,_0cca6c_data
		mov    %edi,_0cca68_data
		mov    %eax,_0e06f4_data
		mov    $0x00004a,%eax
		xor    %cl,%cl
		mov    $_036fdc_func,%edi
		mov    %cl,_0cf420_data
		mov    %cl,_0cf41f_data
		mov    $0x000021,%ecx
		mov    %ebp,_0e06f8_data
		jmp    _043076_jump

	_043074_jump:
		nop
		inc    %edi

	_043076_jump:
		cmpb   $0x000000,(%edi)
		jne    _043074_jump
		cmpb   $0x000000,0x000001(%edi)
		jne    _043074_jump
		cmpb   $0x000000,0x000002(%edi)
		jne    _043074_jump
		cmpb   $0x0000ed,0x000003(%edi)
		jne    _043074_jump
		cmpb   $0x0000f8,0x000004(%edi)
		jne    _043074_jump
		cmpb   $0x0000b8,0x000005(%edi)
		jne    _043074_jump

	_0430b1_jump:
		mov    0x000001(%edi),%dl
		mov    (%edi),%dh
		xor    %dh,%dl
		sub    %dl,%al
		inc    %edi
		loop   _0430b1_jump
		cmp    $0x000000,%eax
		je     _0430cc_jump
		mov    $0x004c00,%ax
		int    $0x000021

	_0430cc_jump:
		call   _043698_func
		cmpb   $0x000000,_0cf424_data
		je     _043101_jump
		mov    _0cca84_data,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0cca64_data
		call   _043808_func

	_043101_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043108_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0cca84_data,%ebx
		add    %eax,%ebx
		mov    $0x000040,%eax
		cmp    %ebx,%eax
		jle    _04311f_jump
		mov    %ebx,%eax

	_04311f_jump:
		mov    %eax,%ebx
		mov    $0x000019,%eax
		cmp    %ebx,%eax
		jge    _04312c_jump
		mov    %ebx,%eax

	_04312c_jump:
		mov    %eax,_0cca84_data
		call   _043698_func
		cmpb   $0x000000,_0cf422_data
		je     _043154_jump
		test   %edx,%edx
		jle    _04314a_jump
		mov    $0xffffffbf,%eax
		jmp    _04314f_jump

	_04314a_jump:
		mov    $0x000041,%eax

	_04314f_jump:
		call   _04373c_func

	_043154_jump:
		pop    %edx
		pop    %ebx
		ret    



_043158_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e06f0_data,%bx
		mov    _0cca6c_data,%dx
		mov    _0e06ec_data,%si
		sub    %edx,%ebx
		mov    _0cca68_data,%cx
		movswl %bx,%eax
		sub    %ecx,%esi
		test   %eax,%eax
		jge    _043186_jump
		neg    %eax

	_043186_jump:
		mov    %eax,%edx
		movswl %si,%eax
		mov    %edx,%edi
		test   %eax,%eax
		jge    _043193_jump
		neg    %eax

	_043193_jump:
		add    %eax,%edi
		test   %di,%di
		jle    _0431bd_jump
		mov    $0x000006,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %di,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		mov    $0x000006,%cl
		mov    %eax,%ebx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%esi

	_0431bd_jump:
		mov    _0966f0_data,%edx
		movswl %bx,%eax
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _0431d6_jump
		mov    $0x000001,%eax
		jg     _0431d6_jump
		neg    %eax

	_0431d6_jump:
		add    _0966f0_data,%eax
		mov    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _0431e7_jump
		mov    %ebx,%eax

	_0431e7_jump:
		mov    $0xfffffff0,%ebx
		cmp    %ebx,%eax
		jge    _0431f2_jump
		mov    %ebx,%eax

	_0431f2_jump:
		mov    _0966f4_data,%ecx
		mov    %eax,_0966f0_data
		movswl %si,%eax
		sub    %ecx,%eax
		cmp    $0x000000,%eax
		je     _043210_jump
		mov    $0x000001,%eax
		jg     _043210_jump
		neg    %eax

	_043210_jump:
		mov    _0966f4_data,%esi
		mov    $0x000010,%ebx
		add    %esi,%eax
		cmp    %ebx,%eax
		jle    _043223_jump
		mov    %ebx,%eax

	_043223_jump:
		mov    $0xfffffff0,%ebx
		cmp    %ebx,%eax
		jge    _04322e_jump
		mov    %ebx,%eax

	_04322e_jump:
		mov    %eax,_0966f4_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04323c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _04324e_jump
		mov    %ebx,%eax

	_04324e_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _04325b_jump
		mov    %ebx,%eax

	_04325b_jump:
		mov    _0cf420_data,%bl
		mov    %eax,%edx
		test   $0x000001,%bl
		je     _0432b6_jump
		mov    _0e06fc_data,%ecx
		mov    _0e06f8_data,%ebx
		and    $0x0000f0,%cl
		and    $0x00000f,%ebx
		or     %ebx,%ecx
		mov    %ecx,_0e06fc_data
		lea    (%ecx,%eax,1),%ebx
		mov    _0cf266_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _043296_jump
		mov    %ebx,%eax

	_043296_jump:
		mov    _0cf258_data,%ecx
		sar    $0x000010,%ecx
		shl    $0x000004,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _0432ac_jump
		mov    %ebx,%eax

	_0432ac_jump:
		mov    %eax,_0e06fc_data
		sar    $0x000004,%eax
		jmp    _0432e5_jump

	_0432b6_jump:
		mov    _0cf2ac_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0cf266_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0432d2_jump
		mov    %ebx,%eax

	_0432d2_jump:
		mov    _0cf258_data,%ecx
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _0432e5_jump
		mov    %ebx,%eax

	_0432e5_jump:
		mov    %ax,_0cf2ae_data
		mov    _0e06f8_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%eax
		sar    $0x000004,%eax
		mov    %ebx,_0e06f8_data
		mov    %eax,_0cca6c_data
		call   _043698_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04330c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _04331e_jump
		mov    %ebx,%eax

	_04331e_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _04332b_jump
		mov    %ebx,%eax

	_04332b_jump:
		mov    _0cf420_data,%bl
		mov    %eax,%edx
		test   $0x000001,%bl
		je     _043386_jump
		mov    _0e0708_data,%ecx
		mov    _0e06f4_data,%ebx
		and    $0x0000f0,%cl
		and    $0x00000f,%ebx
		or     %ebx,%ecx
		mov    %ecx,_0e0708_data
		lea    (%ecx,%eax,1),%ebx
		mov    _0cf264_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _043366_jump
		mov    %ebx,%eax

	_043366_jump:
		mov    _0cf25a_data,%ecx
		sar    $0x000010,%ecx
		shl    $0x000004,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _04337c_jump
		mov    %ebx,%eax

	_04337c_jump:
		mov    %eax,_0e0708_data
		sar    $0x000004,%eax
		jmp    _0433b5_jump

	_043386_jump:
		mov    _0cf2ae_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0cf264_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0433a2_jump
		mov    %ebx,%eax

	_0433a2_jump:
		mov    _0cf25a_data,%ecx
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _0433b5_jump
		mov    %ebx,%eax

	_0433b5_jump:
		mov    %ax,_0cf2b0_data
		mov    _0e06f4_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%eax
		sar    $0x000004,%eax
		mov    %ebx,_0e06f4_data
		mov    %eax,_0cca68_data
		call   _043698_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0433dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0433ef_jump
		mov    %ebx,%eax

	_0433ef_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _0433fc_jump
		mov    %ebx,%eax

	_0433fc_jump:
		mov    _0cf25a_data,%dx
		mov    %eax,%ecx
		mov    _0cf2ae_data,%ax
		xor    %esi,%esi
		cmp    %dx,%ax
		je     _04341b_jump
		cmp    _0cf268_data,%ax
		jne    _043449_jump

	_04341b_jump:
		mov    _0cf2ae_data,%ax
		cmp    _0cf25a_data,%ax
		jne    _04342e_jump
		test   %ecx,%ecx
		jg     _043449_jump

	_04342e_jump:
		mov    _0cf2ae_data,%ax
		cmp    _0cf268_data,%ax
		jne    _04351f_jump
		test   %ecx,%ecx
		jge    _04351f_jump

	_043449_jump:
		mov    _0cca84_data,%eax
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cca6c_data,%edx
		cmp    %edx,%eax
		jge    _04351f_jump
		mov    $0x000140,%ebx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _04351f_jump
		testb  $0x000001,_0cf420_data
		je     _0434cb_jump
		mov    _0e06fc_data,%eax
		mov    _0e06f8_data,%ebx
		and    $0x0000f0,%al
		and    $0x00000f,%ebx
		or     %ebx,%eax
		mov    %eax,_0e06fc_data
		lea    (%eax,%ecx,1),%ebx
		mov    _0cf266_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _0434ab_jump
		mov    %ebx,%eax

	_0434ab_jump:
		mov    _0cf258_data,%esi
		sar    $0x000010,%esi
		shl    $0x000004,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _0434c1_jump
		mov    %ebx,%eax

	_0434c1_jump:
		mov    %eax,_0e06fc_data
		sar    $0x000004,%eax
		jmp    _0434fc_jump

	_0434cb_jump:
		mov    %ecx,%eax
		mov    _0cf2ac_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0cf266_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0434e9_jump
		mov    %ebx,%eax

	_0434e9_jump:
		mov    _0cf258_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _0434fc_jump
		mov    %ebx,%eax

	_0434fc_jump:
		mov    %ax,_0cf2ae_data
		mov    _0e06f8_data,%esi
		add    %ecx,%esi
		mov    %esi,%eax
		mov    %esi,_0e06f8_data
		sar    $0x000004,%eax
		mov    $0x000001,%esi
		mov    %eax,_0cca6c_data

	_04351f_jump:
		call   _043698_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04352c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _04353f_jump
		mov    %ebx,%eax

	_04353f_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _04354c_jump
		mov    %ebx,%eax

	_04354c_jump:
		mov    _0cf25c_data,%dx
		mov    %eax,%ecx
		mov    _0cf2b0_data,%ax
		xor    %esi,%esi
		cmp    %dx,%ax
		je     _04356b_jump
		cmp    _0cf266_data,%ax
		jne    _043599_jump

	_04356b_jump:
		mov    _0cf2b0_data,%ax
		cmp    _0cf25c_data,%ax
		jne    _04357e_jump
		test   %ecx,%ecx
		jg     _043599_jump

	_04357e_jump:
		mov    _0cf2b0_data,%ax
		cmp    _0cf266_data,%ax
		jne    _04366f_jump
		test   %ecx,%ecx
		jge    _04366f_jump

	_043599_jump:
		mov    _0cca84_data,%eax
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cca68_data,%edx
		cmp    %edx,%eax
		jge    _04366f_jump
		mov    $0x0000c8,%ebx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _04366f_jump
		testb  $0x000001,_0cf420_data
		je     _04361b_jump
		mov    _0e0708_data,%eax
		mov    _0e06f4_data,%ebx
		and    $0x0000f0,%al
		and    $0x00000f,%ebx
		or     %ebx,%eax
		mov    %eax,_0e0708_data
		lea    (%eax,%ecx,1),%ebx
		mov    _0cf264_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _0435fb_jump
		mov    %ebx,%eax

	_0435fb_jump:
		mov    _0cf25a_data,%esi
		sar    $0x000010,%esi
		shl    $0x000004,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _043611_jump
		mov    %ebx,%eax

	_043611_jump:
		mov    %eax,_0e0708_data
		sar    $0x000004,%eax
		jmp    _04364c_jump

	_04361b_jump:
		mov    %ecx,%eax
		mov    _0cf2ae_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0cf264_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _043639_jump
		mov    %ebx,%eax

	_043639_jump:
		mov    _0cf25a_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _04364c_jump
		mov    %ebx,%eax

	_04364c_jump:
		mov    %ax,_0cf2b0_data
		mov    _0e06f4_data,%esi
		add    %ecx,%esi
		mov    %esi,%eax
		mov    %esi,_0e06f4_data
		sar    $0x000004,%eax
		mov    $0x000001,%esi
		mov    %eax,_0cca68_data

	_04366f_jump:
		call   _043698_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043698_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cca84_data,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		mov    %eax,%ecx
		sar    $0x00001f,%edx
		mov    %eax,_0cca60_data
		sub    %edx,%eax
		sar    %eax
		mov    _0cca84_data,%esi
		add    %esi,%esi
		mov    %eax,%ebx
		mov    _0cca6c_data,%eax
		mov    %esi,%edx
		sub    %ebx,%eax
		sar    $0x00001f,%edx
		mov    %eax,_0cca80_data
		mov    %esi,%eax
		sub    %edx,%eax
		sar    %eax
		mov    _0cca68_data,%edx
		sub    %eax,%edx
		mov    %edx,_0cca7c_data
		lea    0x000002(%ebx),%edx
		mov    %dx,_0cf25a_data
		lea    0x000002(%eax),%edx
		mov    %dx,_0cf25c_data
		xor    %edx,%edx
		mov    _0cf160_data,%dx
		sub    %ebx,%edx
		sub    $0x000004,%edx
		mov    %dx,_0cf268_data
		xor    %edx,%edx
		mov    _0cf158_data,%dx
		sub    %eax,%edx
		sub    $0x000004,%edx
		mov    %esi,_0cca5c_data
		mov    %dx,_0cf266_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04373c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cca84_data,%edx
		mov    _095de8_data,%ebx
		neg    %edx
		imul   %ebx,%edx
		mov    _095dec_data,%ecx
		mov    _0cca64_data,%esi
		add    %ecx,%edx
		cmp    %esi,%edx
		jne    _043774_jump
		testb  $0x000002,_0cf420_data
		je     _0437cf_jump
		cmp    _0e0718_data,%esi
		je     _0437cf_jump

	_043774_jump:
		cmpb   $0x000000,_0cf424_data
		je     _0437cf_jump
		mov    _0cca84_data,%edx
		mov    _0cca64_data,%ebx
		neg    %edx
		add    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		cmp    %ebx,%eax
		jle    _0437a8_jump
		mov    %ebx,%eax

	_0437a8_jump:
		mov    %eax,%ebx
		xor    %eax,%eax
		cmp    %ebx,%eax
		jge    _0437b2_jump
		mov    %ebx,%eax

	_0437b2_jump:
		mov    %eax,_0cca64_data
		mov    $0x000001,%ah
		mov    %ah,_0cf422_data
		mov    %ah,_0cf423_data
		call   _043698_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0437cf_jump:
		cmpl   $0x000000,_0cca64_data
		je     _0437f5_jump
		cmpb   $0x000000,_0cf424_data
		je     _0437f5_jump
		mov    $0x000001,%ch
		xor    %al,%al
		mov    %ch,_0cf422_data
		mov    %al,_0cf423_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0437f5_jump:
		xor    %bh,%bh
		mov    %bh,_0cf422_data
		mov    %bh,_0cf423_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043808_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    _0cca84_data,%ebx
		imul   %ebx,%ebx
		mov    $0x200000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000040,%edx
		sub    _0cca84_data,%edx
		mov    %eax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		sar    $0x000002,%eax
		mov    _0cca70_data,%edi
		shl    $0x000002,%eax
		lea    0x00e100(%edi,%eax,1),%edx
		mov    %edx,0x000014(%esp)
		lea    0x00037c(%edi),%edx
		sub    %eax,%edx
		add    $0x00df00,%edx
		mov    _0cf424_data,%ah
		mov    %edx,0x000018(%esp)
		test   %ah,%ah
		je     _043a52_jump
		xor    %dl,%dl
		mov    $0x007161,%ecx
		mov    %dl,_0cf423_data
		mov    $0x000000,%eax
		rep stos %eax,%es:(%edi)
		xor    %ecx,%ecx
		mov    %ecx,0x000020(%esp)
		mov    %ecx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)

	_043897_jump:
		mov    0x000008(%esp),%eax
		mov    0x000014(%esp),%esi
		mov    0x000018(%esp),%ebp
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00001c(%esp)
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    0x00001c(%esp),%ecx
		mov    0x00001c(%esp),%edi
		mov    %eax,0x000010(%esp)
		neg    %edx
		add    %esi,%ecx
		add    %ebp,%edi
		mov    0x000018(%esp),%eax
		mov    %ecx,%esi
		mov    %edi,0x000028(%esp)
		add    %edx,%eax
		mov    0x000014(%esp),%edi
		mov    %eax,0x000030(%esp)
		add    %edi,%edx
		mov    %eax,(%esp)
		mov    %edx,0x00002c(%esp)
		jmp    _043a10_jump

	_0438e8_jump:
		lea    0x000000(,%ebx,4),%eax
		mov    %eax,0x000024(%esp)
		mov    0x000024(%esp),%edx
		mov    _0e0704_data,%eax
		mov    0x000010(%esp),%edi
		add    %eax,%edx
		mov    _0e0700_data,%eax
		add    %eax,%edi
		mov    (%edx),%eax
		mov    (%edi),%edx
		mov    0x00000c(%esp),%edi
		add    %edx,%eax
		imul   %edi,%eax
		cmp    $0x500000,%eax
		jae    _0439df_jump
		shr    $0x00000a,%eax
		mov    _0e071c_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0cca64_data,%eax
		mov    (%edx),%ebp
		mov    %eax,%edx
		imul   %ebp,%edx
		mov    %ebx,%eax
		shr    $0x000010,%edx
		imul   %edx,%eax
		imul   0x000020(%esp),%edx
		add    $0x008000,%edx
		shr    $0x000010,%edx
		imul   $0x000140,%edx,%edx
		add    $0x008000,%eax
		shr    $0x000010,%eax
		test   %ebx,%ebx
		je     _043987_jump
		mov    0x000014(%esp),%edi
		add    0x000024(%esp),%edi
		sub    0x00001c(%esp),%edi
		mov    %edx,%ebp
		sub    %eax,%ebp
		add    %ebp,(%edi)
		mov    0x000018(%esp),%edi
		sub    0x000024(%esp),%edi
		add    0x00001c(%esp),%edi
		mov    %eax,%ebp
		sub    %edx,%ebp
		add    %ebp,(%edi)

	_043987_jump:
		cmpl   $0x000000,0x000020(%esp)
		je     _0439a4_jump
		mov    %eax,%edi
		neg    %edi
		mov    (%esi),%ebp
		sub    %edx,%edi
		add    %edi,%ebp
		lea    (%eax,%edx,1),%edi
		mov    %ebp,(%esi)
		mov    0x000030(%esp),%ebp
		add    %edi,0x000000(%ebp)

	_0439a4_jump:
		cmp    _0cca84_data,%ebx
		ja     _0439df_jump
		cmpl   $0x000000,0x000020(%esp)
		je     _0439ca_jump
		lea    (%eax,%edx,1),%edi
		mov    0x00002c(%esp),%ebp
		add    %edi,0x000000(%ebp)
		mov    %eax,%edi
		neg    %edi
		sub    %edx,%edi
		mov    0x000028(%esp),%ebp
		add    %edi,0x000000(%ebp)

	_0439ca_jump:
		test   %ebx,%ebx
		je     _0439df_jump
		mov    %eax,%edi
		mov    (%ecx),%ebp
		sub    %edx,%edi
		add    %edi,%ebp
		sub    %eax,%edx
		mov    (%esp),%eax
		mov    %ebp,(%ecx)
		add    %edx,(%eax)

	_0439df_jump:
		mov    0x000030(%esp),%ebp
		mov    0x000028(%esp),%eax
		mov    0x00002c(%esp),%edx
		mov    (%esp),%edi
		add    $0x000004,%esi
		sub    $0x000004,%ecx
		inc    %ebx
		sub    $0x000004,%ebp
		add    $0x000004,%eax
		sub    $0x000004,%edx
		add    $0x000004,%edi
		mov    %ebp,0x000030(%esp)
		mov    %eax,0x000028(%esp)
		mov    %edx,0x00002c(%esp)
		mov    %edi,(%esp)

	_043a10_jump:
		mov    _0cca60_data,%eax
		sub    _0cca84_data,%eax
		cmp    %eax,%ebx
		jb     _0438e8_jump
		mov    0x000004(%esp),%edi
		mov    0x000020(%esp),%ebp
		mov    0x000008(%esp),%eax
		mov    _0cca84_data,%edx
		add    $0x000004,%edi
		inc    %ebp
		add    $0x0000e0,%eax
		mov    %edi,0x000004(%esp)
		mov    %ebp,0x000020(%esp)
		mov    %eax,0x000008(%esp)
		cmp    %edx,%ebp
		jbe    _043897_jump

	_043a52_jump:
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043a5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0924d8_data,%si
		mov    _0cf2c6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _043bb1_jump
		mov    _0cca5c_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		sar    $0x000002,%edx
		mov    _0ce0ad_data,%al
		mov    _0cf2a6_data,%bx
		sub    %eax,%edx
		cmp    $_0000ff_case,%bx
		jne    _043ab4_jump
		mov    _0cf250_data,%cx
		test   %cx,%cx
		je     _043b83_jump

	_043ab4_jump:
		mov    _0ce07c_data,%ax
		sub    %edx,%eax
		mov    $0x000002,%cl
		mov    %eax,%edx
		test   %ax,%ax
		js     _043aca_jump
		sar    %cl,%ax
		jmp    _043ad3_jump

	_043aca_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_043ad3_jump:
		mov    %ax,_0cf2a6_data
		mov    _0ce084_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _043ae7_jump
		neg    %eax

	_043ae7_jump:
		mov    %eax,%ebx
		mov    _0cf2a4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _043af7_jump
		neg    %eax

	_043af7_jump:
		cmp    %eax,%ebx
		jg     _043bb1_jump
		mov    _0ce084_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _043b0d_jump
		neg    %eax

	_043b0d_jump:
		mov    %eax,%ebx
		mov    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _043b1a_jump
		mov    %ebx,%eax

	_043b1a_jump:
		mov    _0cf2a6_data,%bx
		test   %bx,%bx
		jle    _043b42_jump
		movswl %ax,%ebx
		mov    _0cf2a4_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _043b37_jump
		mov    %ebx,%eax

	_043b37_jump:
		mov    %ax,_0cf2a6_data
		jmp    _043bb1_jump

	_043b42_jump:
		jge    _043b5f_jump
		movswl %ax,%ebx
		mov    _0cf2a4_data,%eax
		neg    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _043b57_jump
		mov    %ebx,%eax

	_043b57_jump:
		mov    %ax,_0cf2a6_data
		jmp    _043bb1_jump

	_043b5f_jump:
		mov    _0924d8_data,%si
		test   %dx,%dx
		jle    _043b76_jump
		movw   $0x000001,_0cf2a6_data
		jmp    _043bb1_jump

	_043b76_jump:
		jge    _043bb1_jump
		movw   $0x00ffff,_0cf2a6_data
		jmp    _043bb1_jump

	_043b83_jump:
		cmpb   $0x000001,_0ce0b1_data
		je     _043bb1_jump
		mov    _0ce07a_data,%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		add    $0x000030,%eax
		cmp    %eax,%ebx
		jge    _043baa_jump
		movw   $0x00fffc,_0cf2a6_data
		jmp    _043bb1_jump

	_043baa_jump:
		mov    %cx,_0cf2a6_data

	_043bb1_jump:
		mov    _0cf2c4_data,%eax
		sar    $0x000010,%eax
		mov    _0924d8_data,%si
		cmp    $0xffffffff,%eax
		jne    _043db8_jump
		mov    _0cca60_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		xor    %ecx,%ecx
		mov    _0ce0ac_data,%cl
		sub    %ecx,%eax
		mov    _0cca60_data,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		sub    %ecx,%eax
		mov    _0cf250_data,%cx
		mov    %eax,%edx
		test   %cx,%cx
		jg     _043c29_jump
		mov    _0ce084_data,%di
		test   %di,%di
		jle    _043c69_jump

	_043c29_jump:
		mov    _0ce07a_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		mov    %si,_0924d8_data
		test   %ax,%ax
		js     _043c44_jump
		sar    %cl,%ax
		jmp    _043c4d_jump

	_043c44_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_043c4d_jump:
		mov    _0924d8_data,%si
		cmp    %ax,%si
		jg     _043d20_jump
		jge    _043d21_jump
		inc    %esi
		jmp    _043d21_jump

	_043c69_jump:
		test   %cx,%cx
		jl     _043c73_jump
		test   %di,%di
		jge    _043cb4_jump

	_043c73_jump:
		mov    _0ce07a_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		mov    %si,_0924d8_data
		test   %ax,%ax
		js     _043c8e_jump
		sar    %cl,%ax
		jmp    _043c97_jump

	_043c8e_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_043c97_jump:
		mov    _0924d8_data,%si
		cmp    %ax,%si
		jge    _043ca9_jump
		inc    %esi
		jmp    _043d21_jump

	_043ca9_jump:
		jle    _043d21_jump
		jmp    _043d20_jump

	_043cb4_jump:
		mov    _0ce0c5_data,%cl
		test   $0x000008,%cl
		je     _043ced_jump
		mov    _0ce07a_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _043cd3_jump
		sar    %cl,%ax
		jmp    _043cdc_jump

	_043cd3_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_043cdc_jump:
		mov    _0924d8_data,%si
		cmp    %ax,%si
		jg     _043d20_jump
		jge    _043d21_jump
		inc    %esi
		jmp    _043d21_jump

	_043ced_jump:
		test   $0x000008,%cl
		jne    _043d21_jump
		mov    _0ce07a_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _043d06_jump
		sar    %cl,%ax
		jmp    _043d0f_jump

	_043d06_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_043d0f_jump:
		mov    _0924d8_data,%si
		cmp    %ax,%si
		jge    _043d1e_jump
		inc    %esi
		jmp    _043d21_jump

	_043d1e_jump:
		jle    _043d21_jump

	_043d20_jump:
		dec    %esi

	_043d21_jump:
		movswl %si,%eax
		mov    %si,_0924d8_data
		test   %eax,%eax
		jge    _043d31_jump
		neg    %eax

	_043d31_jump:
		mov    _0924d8_data,%si
		cmp    $0x000004,%eax
		jle    _043d4e_jump
		test   %si,%si
		jle    _043d49_jump
		mov    $0x000004,%esi
		jmp    _043d4e_jump

	_043d49_jump:
		mov    $0xfffffffc,%esi

	_043d4e_jump:
		mov    $0x000002,%cl
		mov    %esi,%eax
		mov    %si,_0924d8_data
		test   %ax,%ax
		js     _043d63_jump
		sar    %cl,%ax
		jmp    _043d6c_jump

	_043d63_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_043d6c_jump:
		mov    _0cf2a4_data,%di
		mov    _0924d8_data,%si
		add    %eax,%edi
		mov    _0ce07a_data,%ax
		mov    %di,_0cf2a4_data
		cmp    %ax,%dx
		jle    _043d98_jump
		cmpw   $0x000000,_0ce084_data
		jl     _043dab_jump

	_043d98_jump:
		cmp    _0ce07a_data,%bx
		jge    _043db8_jump
		cmpw   $0x000000,_0ce084_data
		jle    _043db8_jump

	_043dab_jump:
		mov    _0ce084_data,%ax
		add    %ax,_0cf2a4_data

	_043db8_jump:
		mov    %si,_0924d8_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043dc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cca60_data,%edi
		mov    _0cca5c_data,%esi
		xor    %ecx,%ecx
		xor    %eax,%eax
		add    $0x000002,%esi
		add    $0x000002,%edi
		mov    %esi,%edx
		mov    %edi,%ebx
		call   _01614e_func
		push   %esi
		xor    %eax,%eax
		push   %edi
		mov    _0cf160_data,%ax
		push   %eax
		mov    _0cca5c_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0cf2ae_data,%ebx
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		mov    _0cca60_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0cf2ac_data,%esi
		xor    %ecx,%ecx
		sar    $0x000010,%esi
		mov    _0ccad8_data,%edi
		sub    %eax,%esi
		xor    %edx,%edx
		mov    %esi,%eax
		mov    _0cd1e0_data,%esi
		call   _014b78_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043e48_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0cca84_data,%esi
		mov    %ax,0x000004(%esp)
		mov    %edx,%edi
		mov    $0x000001,%bl
		xor    %ecx,%ecx
		mov    %bl,0x000008(%esp)
		mov    _0cf421_data,%bh
		xor    %edx,%edx
		cmp    $0x000004,%bh
		je     _04407f_jump
		cmpw   $0x000000,_0ce084_data
		jne    _043ebe_jump
		cmpw   $0x000000,_0ce086_data
		jne    _043ebe_jump
		mov    $0x0000a0,%edx
		mov    $0x000064,%ecx
		mov    _0cca6c_data,%ebp
		mov    %ecx,_0e06ec_data
		mov    %edx,%ecx
		sub    %ebp,%ecx
		shl    $0x000004,%ecx
		mov    %edx,_0e06f0_data
		mov    %ecx,%eax
		mov    $0x000064,%edx
		call   _04323c_func
		jmp    _043f91_jump

	_043ebe_jump:
		mov    _0ce06c_data,%edx
		xor    %eax,%eax
		mov    _0cf258_data,%ecx
		mov    _0ce0ac_data,%al
		sar    $0x000010,%ecx
		add    %eax,%edx
		cmp    %ecx,%edx
		jle    _043f14_jump
		mov    _0cf266_data,%ecx
		sar    $0x000010,%ecx
		cmp    %ecx,%edx
		jge    _043f14_jump
		mov    _0ce078_data,%ecx
		sar    $0x000010,%ecx
		add    %eax,%ecx
		mov    _0cca60_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %eax,%ecx
		shl    $0x000004,%ecx
		mov    %ecx,%eax
		call   _0433dc_func
		test   %eax,%eax
		je     _043f29_jump
		xor    %bl,%bl
		jmp    _043f29_jump

	_043f14_jump:
		mov    $0x0000a0,%ecx
		sub    _0cca6c_data,%ecx
		shl    $0x000004,%ecx
		mov    %ecx,%eax
		call   _04323c_func

	_043f29_jump:
		mov    _0ce070_data,%eax
		xor    %edx,%edx
		mov    _0cf25a_data,%ebp
		mov    _0ce0ad_data,%dl
		sar    $0x000010,%ebp
		add    %edx,%eax
		cmp    %ebp,%eax
		jle    _043f8c_jump
		mov    _0cf264_data,%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%eax
		jge    _043f8c_jump
		mov    _0ce07a_data,%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    _0cca5c_data,%edx
		mov    %eax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		sar    $0x000002,%eax
		sub    %eax,%edx
		shl    $0x000004,%edx
		mov    %edx,%eax
		call   _04352c_func
		test   %eax,%eax
		je     _043fa1_jump
		xor    %al,%al
		mov    %al,0x000008(%esp)
		jmp    _043fa1_jump

	_043f8c_jump:
		mov    $0x000064,%edx

	_043f91_jump:
		sub    _0cca68_data,%edx
		shl    $0x000004,%edx
		mov    %edx,%eax
		call   _04330c_func

	_043fa1_jump:
		test   %bl,%bl
		je     _043fcb_jump
		mov    0x000002(%esp),%ebx
		mov    $0x000001,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _043fb7_jump
		mov    %ebx,%eax

	_043fb7_jump:
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		cmp    %ebx,%eax
		jge    _043fc4_jump
		mov    %ebx,%eax

	_043fc4_jump:
		add    %ax,_0cf2ae_data

	_043fcb_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _043ff4_jump
		mov    $0x000001,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jle    _043fe0_jump
		mov    %ebx,%eax

	_043fe0_jump:
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		cmp    %ebx,%eax
		jge    _043fed_jump
		mov    %ebx,%eax

	_043fed_jump:
		add    %ax,_0cf2b0_data

	_043ff4_jump:
		mov    _0cf2ae_data,%ax
		mov    _0cf25a_data,%bx
		mov    _0cca84_data,%esi
		cmp    %bx,%ax
		jl     _044018_jump
		mov    _0cf268_data,%bx
		cmp    %bx,%ax
		jle    _044030_jump

	_044018_jump:
		mov    %ebx,%eax
		mov    %bx,_0cf2ae_data
		xor    %ebx,%eax
		xor    %ebx,%ebx
		mov    %ax,_0924d8_data
		mov    %bx,0x000004(%esp)

	_044030_jump:
		mov    _0cf2b0_data,%ax
		mov    _0cf25c_data,%bx
		cmp    %bx,%ax
		jge    _04405d_jump
		mov    %ebx,%eax
		mov    %bx,_0cf2b0_data
		mov    %esi,_0cca84_data
		xor    %ebx,%eax
		xor    %edi,%edi
		mov    %ax,_0924da_data
		jmp    _04407f_jump

	_04405d_jump:
		mov    _0cf266_data,%bx
		mov    %esi,_0cca84_data
		cmp    %bx,%ax
		jle    _04407f_jump
		xor    %edi,%edi
		mov    %bx,_0cf2b0_data
		mov    %di,_0924da_data

	_04407f_jump:
		mov    $_0ce044_data,%eax
		call   _0444e0_func
		test   %di,%di
		jne    _044095_jump
		andb   $0x0000fe,_0cf421_data

	_044095_jump:
		mov    0x000004(%esp),%ebx
		mov    _0cca84_data,%esi
		test   %bx,%bx
		jne    _0440ab_jump
		andb   $0x0000fd,_0cf421_data

	_0440ab_jump:
		test   %ecx,%ecx
		jne    _0441bc_jump
		test   %edx,%edx
		jne    _0441bc_jump
		cmpw   $0x000000,_0ce086_data
		jne    _0441bc_jump
		cmpw   $0x000000,_0ce084_data
		jne    _0441bc_jump
		testb  $0x0000fb,_0cf421_data
		jne    _0441bc_jump
		mov    %esi,_0cca84_data
		cmp    $0x000040,%esi
		jge    _044102_jump
		cmpb   $0x000000,_0cf420_data
		jne    _044102_jump
		mov    $0x000001,%eax
		call   _043108_func

	_044102_jump:
		mov    _0cca84_data,%esi
		mov    %esi,%eax
		mov    _095de8_data,%edx
		neg    %eax
		imul   %edx,%eax
		mov    _095dec_data,%ebx
		mov    _0cca64_data,%ecx
		add    %ebx,%eax
		cmp    %ecx,%eax
		jae    _044137_jump
		cmpb   $0x000000,_0cf420_data
		jne    _044137_jump
		mov    $0xfffffed4,%eax
		jmp    _04416a_jump

	_044137_jump:
		mov    _0cca84_data,%esi
		mov    %esi,%eax
		mov    _095de8_data,%edi
		neg    %eax
		imul   %edi,%eax
		mov    _095dec_data,%ebp
		mov    _0cca64_data,%edx
		add    %ebp,%eax
		cmp    %edx,%eax
		jbe    _04416f_jump
		cmpb   $0x000000,_0cf420_data
		jne    _04416f_jump
		mov    $0x00012c,%eax

	_04416a_jump:
		call   _04373c_func

	_04416f_jump:
		mov    _0cca84_data,%esi
		mov    %esi,%eax
		mov    _095de8_data,%ebx
		neg    %eax
		imul   %ebx,%eax
		mov    _095dec_data,%ecx
		mov    _0cca64_data,%edi
		add    %ecx,%eax
		cmp    %edi,%eax
		jne    _0441d7_jump
		cmp    $0x000040,%esi
		jne    _0441d7_jump
		cmpb   $0x000000,_0cf421_data
		jne    _0441d7_jump
		xor    %bl,%bl
		xor    %ebp,%ebp
		mov    %bl,_0cf420_data
		mov    $0x000004,%bh
		mov    %ebp,_0e0714_data
		mov    %bh,_0cf421_data
		jmp    _0441d7_jump

	_0441bc_jump:
		cmpw   $0x000000,_0ce084_data
		jne    _0441d0_jump
		cmpw   $0x000000,_0ce086_data
		je     _0441d7_jump

	_0441d0_jump:
		andb   $0x0000fb,_0cf421_data

	_0441d7_jump:
		mov    _0cf421_data,%cl
		cmp    $0x000004,%cl
		jne    _0444d0_jump
		mov    _0e0714_data,%eax
		inc    %eax
		mov    %eax,_0e0714_data
		cmp    $0x000726,%eax
		jne    _044216_jump
		mov    _0cf420_data,%dh
		mov    $0x000019,%edi
		or     %cl,%dh
		mov    %edi,_0e0720_data
		mov    %dh,_0cf420_data
		jmp    _044353_jump

	_044216_jump:
		cmp    $0x000708,%eax
		jne    _044247_jump
		orb    $0x000002,_0cf420_data
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0e0718_data
		jmp    _044353_jump

	_044247_jump:
		mov    _0cf420_data,%ch
		test   %ch,%ch
		je     _044353_jump
		test   $0x000001,%ch
		jne    _044353_jump
		cmp    $0x000019,%esi
		jne    _044353_jump
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		mov    _0cca64_data,%ecx
		add    $0x007d96,%eax
		cmp    %ecx,%eax
		jne    _044353_jump
		mov    $0x000003,%ebx
		mov    _0cf420_data,%ah
		mov    %esi,%edx
		or     $0x000001,%ah
		sar    $0x00001f,%edx
		mov    %ah,_0cf420_data
		mov    %esi,%eax
		idiv   %ebx
		lea    0x000140(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		mov    %esi,_0cca84_data
		call   _06b8d0_func
		mov    _0cca84_data,%esi
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    (%eax,%ecx,1),%edx
		mov    %edx,_0e070c_data
		lea    0x0000c8(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _06b8d0_func
		mov    _0cca84_data,%esi
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    %ecx,%eax
		mov    %eax,_0e0710_data
		mov    _0e070c_data,%eax
		mov    %eax,_0e06f0_data
		mov    _0e0710_data,%eax
		mov    %eax,_0e06ec_data
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %eax,_0e06fc_data
		mov    _0cf2ae_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %eax,_0e0708_data
		mov    _0cca6c_data,%eax
		shl    $0x000004,%eax
		mov    %eax,_0e06f8_data
		mov    _0cca68_data,%eax
		shl    $0x000004,%eax
		mov    %eax,_0e06f4_data

	_044353_jump:
		mov    _0cf420_data,%bl
		mov    %esi,_0cca84_data
		test   $0x000001,%bl
		je     _044424_jump
		call   _043158_func
		mov    _0966f0_data,%eax
		call   _04323c_func
		mov    _0966f4_data,%eax
		call   _04330c_func
		mov    _0cca6c_data,%eax
		cmp    _0e070c_data,%eax
		jne    _044424_jump
		mov    _0cca68_data,%eax
		cmp    _0e0710_data,%eax
		jne    _044424_jump
		mov    _0cca84_data,%esi
		mov    $0x000003,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    0x000140(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _06b8d0_func
		mov    _0cca84_data,%esi
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    (%eax,%ecx,1),%edx
		mov    %edx,_0e070c_data
		lea    0x0000c8(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		mov    $0x000003,%ecx
		call   _06b8d0_func
		mov    _0cca84_data,%esi
		movswl %ax,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		mov    %eax,_0e0710_data
		mov    _0e070c_data,%eax
		mov    %eax,_0e06f0_data
		mov    _0e0710_data,%eax
		mov    %eax,_0e06ec_data

	_044424_jump:
		testb  $0x000002,_0cf420_data
		je     _04447e_jump
		mov    _0cca64_data,%eax
		mov    _0e0718_data,%ebx
		cmp    %ebx,%eax
		jae    _04445d_jump
		mov    $0x00012c,%eax
		call   _04373c_func
		mov    _0cca64_data,%eax
		mov    _0e0718_data,%ebp
		cmp    %ebp,%eax
		jbe    _04447e_jump
		mov    %ebp,_0cca64_data
		jmp    _04447e_jump

	_04445d_jump:
		jbe    _04447e_jump
		mov    $0xfffffed4,%eax
		call   _04373c_func
		mov    _0cca64_data,%eax
		mov    _0e0718_data,%edi
		cmp    %edi,%eax
		jae    _04447e_jump
		mov    %edi,_0cca64_data

	_04447e_jump:
		mov    _0cf420_data,%cl
		mov    _0cca84_data,%esi
		test   $0x000004,%cl
		je     _0444d0_jump
		mov    _0e0720_data,%edx
		cmp    %edx,%esi
		jae    _0444a0_jump
		mov    $0x000001,%eax
		jmp    _0444a7_jump

	_0444a0_jump:
		jbe    _0444d0_jump
		mov    $0xffffffff,%eax

	_0444a7_jump:
		call   _043108_func
		mov    _0cca84_data,%esi
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0e0718_data

	_0444d0_jump:
		mov    %esi,_0cca84_data
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0444e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf2ae_data,%bx
		mov    0x000028(%eax),%dx
		sub    %ebx,%edx
		mov    _0cca6c_data,%bx
		add    $0x000008,%edx
		add    %edx,%ebx
		mov    _0cca80_data,%dx
		mov    _0cf2b0_data,%cx
		sub    %edx,%ebx
		mov    0x00002c(%eax),%dx
		mov    %bx,0x000036(%eax)
		mov    _0cca68_data,%bx
		sub    %ecx,%edx
		add    %edx,%ebx
		mov    _0cca7c_data,%dx
		sub    %edx,%ebx
		mov    %bx,0x000038(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044530_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0ce082_data,%eax
		mov    %dx,_0cf2a4_data
		mov    %dx,_0cf2a6_data
		sar    $0x000010,%eax
		mov    _0ce06c_data,%edx
		add    %eax,%edx
		mov    _0ce084_data,%ax
		mov    %ax,_0cf250_data
		mov    _0ce084_data,%eax
		mov    _0ce070_data,%ebx
		sar    $0x000010,%eax
		add    %eax,%ebx
		mov    %edx,_0ce06c_data
		mov    %ebx,_0ce070_data
		pop    %edx
		pop    %ebx
		ret    

_044580_switch:
		.long   _04467a_case
		.long   _04467a_case
		.long   _044658_case
		.long   _04467a_case
		.long   _04467a_case
		.long   _04467a_case
		.long   _044658_case
		.long   _04467a_case
		.long   _044672_case
		.long   _04467a_case
		.long   _044658_case
		.long   _044660_case




_0445b0_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%eax
		mov    _0e0724_data,%ecx
		mov    0x00000c(%ecx),%edx
		movw   $0x000000,0x000002(%ecx)
		test   %ax,%ax
		jl     _0445de_jump
		movswl %ax,%ebx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _0445dc_jump
		mov    %ebx,%eax

	_0445dc_jump:
		jmp    _0445f0_jump

	_0445de_jump:
		movswl %ax,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _0445ee_jump
		mov    %ebx,%eax

	_0445ee_jump:
		neg    %eax

	_0445f0_jump:
		xor    %ebx,%ebx
		mov    %ax,0x000006(%ecx)
		mov    (%esp),%bl
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _044604_jump
		mov    %ebx,%eax

	_044604_jump:
		mov    $0x00000c,%ebx
		cmp    %ebx,%eax
		jle    _04460f_jump
		mov    %ebx,%eax

	_04460f_jump:
		mov    %al,0x000008(%ecx)
		mov    (%ecx),%ah
		xor    %bl,%bl
		test   %ah,%ah
		jbe    _044642_jump

	_04461a_jump:
		xor    %eax,%eax
		movw   $0x000000,0x000008(%edx)
		mov    %bl,%al
		mov    %ax,0x000006(%edx)
		mov    0x000008(%edx),%ax
		mov    %ax,0x000002(%edx)
		mov    %ax,(%edx)
		inc    %bl
		mov    %ax,0x000004(%edx)
		mov    (%ecx),%bh
		add    $0x00000a,%edx
		cmp    %bh,%bl
		jb     _04461a_jump

	_044642_jump:
		mov    0x000008(%ecx),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _04467a_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_044580_switch(,%eax,4)

	_044658_case:
		movw   $0x000140,0x000004(%ecx)
		jmp    _044680_jump

	_044660_case:
		mov    0x000006(%ecx),%dx
		movw   $0x000140,0x000004(%ecx)
		neg    %edx
		mov    %dx,0x000006(%ecx)
		jmp    _044680_jump

	_044672_case:
		movw   $0x000064,0x000004(%ecx)
		jmp    _044680_jump

	_04467a_case:
		movw   $0x0000c8,0x000004(%ecx)

	_044680_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx

	_044685_jump:
		ret    

	_044688_case:
		mov    _0e0724_data,%eax
		test   %eax,%eax
		je     _044685_jump
		cmpl   $0x000000,0x00000c(%eax)
		je     _04469f_jump
		add    $0x00000c,%eax
		call   _07f44c_func

	_04469f_jump:
		cmpl   $0x000000,_0e0724_data
		je     _044685_jump
		mov    $_0e0724_data,%eax
		jmp    _07f44c_func



_0446b4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %al,0x000008(%esp)
		mov    %dx,(%esp)
		mov    %ecx,%ebp
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		test   %ebx,%ebx
		je     _044733_jump
		test   %ecx,%ecx
		je     _044733_jump
		mov    $0x000018,%eax
		call   _07f434_func
		mov    %eax,%edx
		mov    %eax,_0e0724_data
		test   %eax,%eax
		je     _044733_jump
		mov    $0x00fa00,%ecx
		mov    _0ccad8_data,%edi
		mov    %ebx,%esi
		movb   $0x0000c8,(%eax)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _044701_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_044701_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %ebx,%ebx
		mov    _0ccad8_data,%eax
		mov    (%edx),%bl
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    %ebp,0x000014(%edx)
		call   _07f434_func
		mov    %eax,0x00000c(%edx)
		test   %eax,%eax
		je     _044733_jump
		movb   $0x000001,0x000004(%esp)

	_044733_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _04474e_jump
		xor    %eax,%eax
		mov    -0x000002(%esp),%edx
		mov    0x000008(%esp),%al
		sar    $0x000010,%edx
		call   _0445b0_func
		jmp    _044753_jump

	_04474e_jump:
		call   _044688_case

	_044753_jump:
		mov    0x000004(%esp),%al
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_044760_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0e0724_data,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    %edx,0x000004(%esp)
		mov    0x00000c(%eax),%ebp
		jmp    _044855_jump

	_044780_jump:
		mov    0x000006(%ebp),%ecx
		mov    0x000004(%ebp),%esi
		mov    0x000000(%ebp),%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ebx
		test   %ecx,%ecx
		jle    _044849_jump
		test   %ebx,%ebx
		jl     _044849_jump
		cmp    $0x0000c8,%ebx
		jge    _044849_jump
		test   %esi,%esi
		jl     _044849_jump
		cmp    $0x0000c8,%esi
		jge    _044849_jump
		movswl 0x000000(%ebp),%eax
		test   %eax,%eax
		jge    _0447ce_jump
		add    %eax,%ecx
		xor    %eax,%eax

	_0447ce_jump:
		lea    (%eax,%ecx,1),%edx
		cmp    $0x000140,%edx
		jle    _0447e0_jump
		mov    $0x000140,%ecx
		sub    %eax,%ecx

	_0447e0_jump:
		test   %ecx,%ecx
		jle    _044849_jump
		mov    0x000002(%ebp),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jge    _0447f2_jump
		add    %edx,%ecx
		xor    %edx,%edx

	_0447f2_jump:
		lea    (%edx,%ecx,1),%edi
		cmp    $0x000140,%edi
		jle    _044804_jump
		mov    $0x000140,%ecx
		sub    %edx,%ecx

	_044804_jump:
		test   %ecx,%ecx
		jle    _044849_jump
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000008(%esp),%ebx
		mov    0x000010(%ebx),%ebx
		add    %eax,%ebx
		mov    %ebx,(%esp)
		mov    %edx,%eax
		mov    %esi,%ebx
		mov    0x000008(%esp),%edi
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000014(%edi),%edi
		mov    (%esp),%esi
		add    %eax,%edi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _044842_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_044842_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_044849_jump:
		mov    0x000004(%esp),%eax
		inc    %eax
		add    $0x00000a,%ebp
		mov    %eax,0x000004(%esp)

	_044855_jump:
		mov    0x000008(%esp),%edx
		xor    %eax,%eax
		mov    0x000004(%esp),%ebx
		mov    (%edx),%al
		cmp    %ebx,%eax
		jg     _044780_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_044874_switch:
		.long   _0448e7_case
		.long   _0448e7_case
		.long   _0448e7_case
		.long   _0448e7_case
		.long   _0448e7_case
		.long   _0448e7_case
		.long   _0448e7_case
		.long   _0448e7_case
		.long   _044aa9_case
		.long   _044997_case
		.long   _044a28_case
		.long   _044cbf_case




_0448a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000048,%esp
		mov    _0e0724_data,%ebp
		mov    0x000006(%ebp),%dx
		mov    0x00000c(%ebp),%esi
		test   %dx,%dx
		jl     _0448c9_jump
		mov    0x000004(%ebp),%bx
		sub    0x000002(%ebp),%bx
		jmp    _0448cd_jump

	_0448c9_jump:
		mov    0x000002(%ebp),%bx

	_0448cd_jump:
		mov    0x000008(%ebp),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _044d25_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_044874_switch(,%eax,4)

	_0448e7_case:
		mov    0x000008(%ebp),%ah
		cmp    $0x000001,%ah
		je     _0448f9_jump
		cmp    $0x000002,%ah
		je     _0448f9_jump
		cmp    $0x000008,%ah
		jne    _0448fd_jump

	_0448f9_jump:
		mov    %ebx,%eax
		jmp    _0448ff_jump

	_0448fd_jump:
		xor    %eax,%eax

	_0448ff_jump:
		mov    0x000008(%ebp),%cl
		cmp    $0x000005,%cl
		je     _044911_jump
		cmp    $0x000004,%cl
		je     _044911_jump
		cmp    $0x000006,%cl
		jne    _044915_jump

	_044911_jump:
		mov    %ebx,%eax
		neg    %eax

	_044915_jump:
		mov    0x000008(%ebp),%dh
		mov    %eax,0x000014(%esp)
		cmp    $0x000003,%dh
		je     _04492b_jump
		cmp    $0x000002,%dh
		je     _04492b_jump
		cmp    $0x000004,%dh
		jne    _04492f_jump

	_04492b_jump:
		mov    %ebx,%esi
		jmp    _044931_jump

	_04492f_jump:
		xor    %esi,%esi

	_044931_jump:
		mov    0x000008(%ebp),%al
		cmp    $0x000007,%al
		je     _044940_jump
		cmp    $0x000008,%al
		je     _044940_jump
		cmp    $0x000006,%al
		jne    _044944_jump

	_044940_jump:
		mov    %ebx,%eax
		jmp    _044946_jump

	_044944_jump:
		xor    %eax,%eax

	_044946_jump:
		mov    0x000008(%ebp),%dh
		mov    %eax,0x000010(%esp)
		cmp    $0x000001,%dh
		je     _044957_jump
		cmp    $0x000005,%dh
		jne    _04495b_jump

	_044957_jump:
		xor    %ebx,%ebx
		jmp    _04495d_jump

	_04495b_jump:
		neg    %ebx

	_04495d_jump:
		add    $0x000140,%ebx
		mov    0x00000c(%ebp),%eax
		xor    %ecx,%ecx

	_044968_jump:
		add    $0x00000a,%eax
		mov    %si,-0x000006(%eax)
		mov    0x000010(%esp),%edx
		mov    %cx,-0x000004(%eax)
		mov    %dx,-0x00000a(%eax)
		mov    0x000014(%esp),%edx
		mov    %bx,-0x000002(%eax)
		add    %ecx,%edx
		inc    %ecx
		mov    %dx,-0x000008(%eax)
		cmp    $0x0000c8,%cx
		jge    _044d55_jump
		jmp    _044968_jump

	_044997_case:
		mov    %ebx,%eax
		mov    %ebx,0x00001c(%esp)
		xor    %ecx,%ecx
		neg    %eax
		mov    $0x000001,%ebx
		mov    %eax,0x000004(%esp)

	_0449aa_jump:
		movswl %bx,%eax
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,(%esi,%eax,1)
		mov    (%esi,%eax,1),%dx
		mov    %edx,(%esp)
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		mov    (%esp),%edi
		mov    %di,(%edx,%esi,1)
		mov    %di,0x000004(%esi,%eax,1)
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    0x00001c(%esp),%edi
		mov    %bx,0x000006(%esi,%eax,1)
		mov    %di,0x000002(%edx,%esi,1)
		mov    0x000004(%esp),%edi
		movw   $0x000140,0x000008(%esi,%eax,1)
		mov    %di,0x000002(%esi,%eax,1)
		add    $0x000002,%ecx
		mov    0x000008(%esi,%eax,1),%ax
		add    $0x000002,%ebx
		mov    %ax,0x000008(%edx,%esi,1)
		mov    %edi,%edx
		mov    0x00001c(%esp),%edi
		add    $0x000002,%edx
		add    $0x000002,%edi
		mov    %edx,0x000004(%esp)
		mov    %edi,0x00001c(%esp)
		cmp    $0x0000c8,%cx
		jge    _044d55_jump
		jmp    _0449aa_jump

	_044a28_case:
		mov    $0x000140,%eax
		mov    $0x000001,%edi
		xor    %ecx,%ecx
		sub    %ebx,%eax
		mov    %di,0x000034(%esp)
		mov    %eax,0x000008(%esp)

	_044a3f_jump:
		mov    0x000032(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		movw   $0x000000,(%esi,%eax,1)
		mov    (%esi,%eax,1),%di
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000002(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    %bx,0x000004(%esi,%eax,1)
		mov    0x000008(%esp),%edi
		mov    %bx,(%edx,%esi,1)
		mov    %di,0x000008(%esi,%eax,1)
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x000034(%esp),%edx
		mov    %dx,0x000002(%esi,%eax,1)
		mov    %dx,0x000006(%esi,%eax,1)
		mov    %edx,%eax
		add    $0x000002,%eax
		add    $0x000002,%ecx
		mov    %ax,0x000034(%esp)
		cmp    $0x0000c8,%cx
		jge    _044d55_jump
		jmp    _044a3f_jump

	_044aa9_case:
		mov    0x00000c(%ebp),%eax
		xor    %ecx,%ecx

	_044aae_jump:
		add    $0x00000a,%eax
		inc    %ecx
		movw   $0x000000,-0x000002(%eax)
		cmp    $0x0000c8,%cx
		jl     _044aae_jump
		movw   $0x0000c7,0x000040(%esp)
		mov    %ebx,%eax
		add    %ebx,%eax
		neg    %eax
		add    $0x000140,%eax
		mov    %eax,0x00002c(%esp)
		mov    %ebx,%eax
		neg    %eax
		mov    0x00000c(%ebp),%esi
		add    $0x0000c7,%eax
		xor    %ecx,%ecx
		mov    %eax,0x000020(%esp)
		jmp    _044b5b_jump

	_044ae9_jump:
		imul   $0x00000a,%edx,%edx
		mov    %ecx,%eax
		add    %ebx,%eax
		mov    %eax,0x000044(%esp)
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		mov    0x000044(%esp),%edi
		mov    %di,(%esi,%eax,1)
		mov    %di,0x000004(%esi,%eax,1)
		mov    %di,0x000002(%edx,%esi,1)
		mov    %di,(%edx,%esi,1)
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    0x000040(%esp),%edi
		mov    %di,0x000006(%esi,%eax,1)
		mov    0x000020(%esp),%edi
		mov    %di,0x000002(%esi,%eax,1)
		mov    0x00002c(%esp),%edi
		inc    %ecx
		mov    %di,0x000008(%esi,%eax,1)
		mov    %edi,%eax
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x000040(%esp),%edi
		mov    0x000020(%esp),%edx
		sub    $0x000002,%eax
		dec    %edi
		mov    %eax,0x00002c(%esp)
		dec    %edx
		mov    %di,0x000040(%esp)
		mov    %edx,0x000020(%esp)

	_044b5b_jump:
		mov    $0x000064,%edx
		movswl %bx,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %cx,%edx
		cmp    %eax,%edx
		jl     _044ae9_jump
		call   _044760_func
		mov    $0x0000c7,%edx
		mov    %ebx,%eax
		xor    %ecx,%ecx
		neg    %eax
		mov    %dx,0x00003c(%esp)
		mov    %eax,0x000028(%esp)

	_044b8b_jump:
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,0x000004(%esi,%eax,1)
		mov    0x000004(%esi,%eax,1),%dx
		mov    %edx,0x000044(%esp)
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		mov    0x000044(%esp),%edi
		mov    %di,0x000004(%edx,%esi,1)
		mov    %bx,(%esi,%eax,1)
		mov    %bx,(%edx,%esi,1)
		mov    %cx,0x000002(%edx,%esi,1)
		mov    0x000028(%esp),%edi
		mov    %cx,0x000006(%edx,%esi,1)
		mov    %di,0x000008(%esi,%eax,1)
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x00003c(%esp),%edx
		inc    %ecx
		mov    %dx,0x000002(%esi,%eax,1)
		mov    %edx,%edi
		mov    %dx,0x000006(%esi,%eax,1)
		mov    0x000028(%esp),%eax
		dec    %edi
		inc    %eax
		mov    %di,0x00003c(%esp)
		mov    %eax,0x000028(%esp)
		cmp    $0x000064,%cx
		jl     _044b8b_jump
		call   _044760_func
		mov    $0x0000c7,%edx
		mov    $0x0000c8,%edi
		mov    $0x000140,%eax
		xor    %ecx,%ecx
		mov    %eax,0x000030(%esp)
		mov    %ebx,%eax
		mov    %dx,0x000038(%esp)
		add    $0x000140,%eax
		mov    %edi,0x000018(%esp)
		mov    %eax,0x000024(%esp)

	_044c28_jump:
		mov    %ecx,%eax
		sub    %ebx,%eax
		mov    %eax,0x000044(%esp)
		mov    0x000036(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		mov    0x000024(%esp),%edx
		mov    %edx,(%esp)
		mov    %dx,0x000004(%esi,%eax,1)
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		mov    (%esp),%edi
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000002(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    0x000038(%esp),%edi
		mov    %di,0x000006(%esi,%eax,1)
		mov    0x000030(%esp),%edi
		mov    %di,(%esi,%eax,1)
		mov    %di,(%edx,%esi,1)
		mov    0x000018(%esp),%edi
		mov    %di,0x000002(%esi,%eax,1)
		mov    0x000044(%esp),%edi
		inc    %ecx
		mov    %di,0x000008(%esi,%eax,1)
		mov    0x000030(%esp),%eax
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x000038(%esp),%edx
		mov    0x000018(%esp),%edi
		dec    %eax
		dec    %edx
		dec    %edi
		mov    %dx,0x000038(%esp)
		mov    0x000024(%esp),%edx
		mov    %eax,0x000030(%esp)
		dec    %edx
		mov    %edi,0x000018(%esp)
		mov    %edx,0x000024(%esp)
		cmp    $0x000064,%cx
		jge    _044d55_jump
		jmp    _044c28_jump

	_044cbf_case:
		mov    $0x0000c8,%esi
		movswl %bx,%edx
		sub    %edx,%esi
		sar    %esi
		mov    %esi,%ecx
		mov    $0x000140,%esi
		sub    %edx,%esi
		mov    %esi,%edx
		sar    %edx
		mov    0x00000c(%ebp),%eax
		mov    %edx,0x00000c(%esp)
		xor    %edx,%edx

	_044ce1_jump:
		mov    %dx,0x000002(%eax)
		mov    0x00000c(%esp),%esi
		mov    %dx,0x000006(%eax)
		mov    %si,(%eax)
		mov    %si,0x000004(%eax)
		cmp    %cx,%dx
		jl     _044d12_jump
		mov    $0x0000c8,%edi
		movswl %cx,%esi
		sub    %esi,%edi
		mov    %edi,%esi
		movswl %dx,%edi
		cmp    %edi,%esi
		jl     _044d12_jump
		mov    %bx,0x000008(%eax)
		jmp    _044d18_jump

	_044d12_jump:
		movw   $0x000000,0x000008(%eax)

	_044d18_jump:
		inc    %edx
		add    $0x00000a,%eax
		cmp    $0x0000c8,%dx
		jge    _044d55_jump
		jmp    _044ce1_jump

	_044d25_jump:
		mov    0x00000c(%ebp),%eax
		xor    %ecx,%ecx
		jmp    _044d4b_jump

	_044d2c_jump:
		movw   $0x000000,(%eax)
		add    $0x00000a,%eax
		movw   $0x000140,-0x000002(%eax)
		mov    %cx,-0x000008(%eax)
		mov    %cx,-0x000004(%eax)
		mov    -0x00000a(%eax),%dx
		inc    %ecx
		mov    %dx,-0x000006(%eax)

	_044d4b_jump:
		xor    %edx,%edx
		mov    0x000000(%ebp),%dl
		cmp    %dx,%cx
		jl     _044d2c_jump

	_044d55_jump:
		mov    0x000004(%ebp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _044d61_jump
		neg    %eax

	_044d61_jump:
		mov    0x000002(%ebp),%bx
		add    %eax,%ebx
		mov    0x000004(%ebp),%cx
		mov    %bx,0x000002(%ebp)
		cmp    %cx,%bx
		jbe    _044d7a_jump
		movw   $0x000000,0x000002(%ebp)

	_044d7a_jump:
		mov    0x000002(%ebp),%ax
		add    $0x000048,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044d90_func:
		push   $0x000075
		outsb  %ds:(%esi),(%dx)
		insb   (%dx),%es:(%di)
		add    %al,%gs:(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %ch,0x000075(%ebp)
		jae    _044e0a_jump
		arpl   %ax,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %ch,0x00006f(%ebp)
		jne    _044e1c_jump
		je     _044e11_jump
		imul   $0x000000,0x000000(%esi),%ebp
		imul   $0x006567,0x000061(%ebp),%ebp
		add    %al,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		arpl   %sp,0x000076(%ecx)
		add    %al,%gs:(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %ah,0x000061(%ebx)
		imul   $0x000000,0x000000(%ebp),%esp
		add    %al,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)


_044de0_func:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %cl,0x575651c0(%ebx)
		push   %ebp
		sub    $0x00005c,%esp
		mov    %eax,0x000028(%esp)
		mov    %edx,0x000014(%esp)
		mov    $0x000064,%eax
		call   _07f158_func
		mov    %eax,0x000004(%esp)
		call   _01cc5c_func
		call   _06af00_func
		call   _06af1c_func
		mov    $0x00046c,%eax

	_044e11_jump:
		mov    %eax,%db0
		mov    %db7,%eax
		or     $0x030003,%eax

	_044e1c_jump:
		mov    %eax,%db7
		sti    
		mov    $0x00046c,%esi
		mov    (%esi),%ah

	_044e27_jump:
		mov    (%esi),%al
		cmp    %al,%ah
		je     _044e27_jump
		sti    
		mov    $0x00046c,%esi
		mov    (%esi),%ah

	_044e35_jump:
		mov    (%esi),%al
		cmp    %al,%ah
		je     _044e35_jump
		mov    $0x000000,%eax
		mov    %eax,%db0
		mov    %db7,%eax
		and    $0x00de00,%eax
		mov    %eax,%db7
		cmpb   $0x000001,_095de5_data
		jne    _044e6c_jump
		mov    $0x011800,%edx
		mov    0x000028(%esp),%eax
		call   _07ee30_func
		mov    %eax,_0cd20c_data
		jmp    _044e74_jump

	_044e6c_jump:
		xor    %edx,%edx
		mov    %edx,_0cd20c_data

	_044e74_jump:
		mov    $_0000ff_case,%dl
		xor    %eax,%eax

	_044e78_jump:
		inc    %eax
		mov    %dl,_0ce93f_data(%eax)
		cmp    $0x00000a,%eax
		jl     _044e78_jump
		cmpw   $0x000000,_0cf2e8_data
		je     _044e9b_jump
		mov    0x000004(%esp),%edx
		mov    _0c0c68_data,%eax
		mov    %eax,(%edx)
		jmp    _044ea2_jump

	_044e9b_jump:
		mov    0x000004(%esp),%eax
		movb   $0x000000,(%eax)

	_044ea2_jump:
		mov    $_0c0c6c_data,%esi
		mov    0x000004(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044eb4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044ecc_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044eb4_jump

	_044ecc_jump:
		pop    %edi
		mov    $_0c0c74_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044edb_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044ef3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044edb_jump

	_044ef3_jump:
		pop    %edi
		mov    %ebx,%esi
		mov    $_0c0c78_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044f04_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044f1c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044f04_jump

	_044f1c_jump:
		pop    %edi
		mov    %edi,%eax
		call   _0810de_func
		mov    %eax,%edi
		mov    %eax,%esi
		test   %eax,%eax
		jne    _044f5e_jump
		mov    $0x0000c8,%eax
		mov    0x000004(%esp),%ebx
		call   _07f158_func
		push   %ebx
		push   $_0c0c7c_data
		push   %eax
		mov    %eax,%edx
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func
		jmp    _0455d8_jump

	_044f5e_jump:
		int3   
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000030(%esp),%eax
		mov    %edi,%ecx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x00003c(%esp),%eax
		mov    %edi,%ecx
		call   _0802ed_func
		cmpb   $0x000000,_095de5_data
		jne    _044faa_jump
		mov    0x000030(%esp),%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		add    %eax,%eax
		mov    0x00003c(%esp),%bx
		mov    %ax,%dx
		mov    0x000028(%esp),%eax
		jmp    _044fc5_jump

	_044faa_jump:
		cmpb   $0x000000,_0cf412_data
		je     _044fcf_jump
		mov    0x000028(%esp),%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00003c(%esp),%bx
		mov    0x000030(%esp),%dx

	_044fc5_jump:
		call   _047508_func
		mov    %eax,_0cd22c_data

	_044fcf_jump:
		mov    $0x000001,%ebx
		lea    0x000050(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $_0cf41d_data,%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $_0cf41a_data,%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		xor    %edi,%edi
		call   _0802ed_func
		int3   
		mov    $0x000001,%ebp
		jmp    _045032_jump

	_045011_jump:
		lea    0x000058(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%ebx
		mov    %ebp,%edx
		call   _0802ed_func
		mov    0x000058(%esp),%bh
		xor    $0x000015,%bh
		inc    %edi
		mov    %bh,0x000058(%esp)
		mov    %bh,_0ce93f_data(%edi)

	_045032_jump:
		xor    %eax,%eax
		mov    0x000050(%esp),%al
		cmp    %eax,%edi
		jl     _045011_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0924d4_data,%eax
		mov    %esi,%ecx
		call   _0802ed_func
		mov    _0924d4_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000010(%esp)
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		lea    0x000028(%edx),%eax
		add    $_0e0728_data,%eax
		mov    %eax,0x000008(%esp)
		lea    0x000080(%edx),%eax
		add    $_0e0728_data,%eax
		mov    %eax,0x00001c(%esp)
		lea    0x000044(%edx),%eax
		add    $_0e0728_data,%eax
		mov    %eax,0x00000c(%esp)
		jmp    _045481_jump

	_045094_jump:
		imul   $0x000084,0x000010(%esp),%ebp
		mov    $0x000001,%ebx
		lea    0x000048(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    0x000008(%esp),%eax
		mov    %esi,%ecx
		call   _0802ed_func
		mov    $_0e0728_data,%edi
		mov    0x000048(%esp),%cl
		add    %ebp,%edi
		test   %cl,%cl
		jne    _0450df_jump
		cmpb   $0x000000,_0cf411_data
		je     _045317_jump

	_0450df_jump:
		imul   $0x000084,0x000010(%esp),%edi
		mov    0x000014(%esp),%eax
		mov    _0e0750_data(%edi),%edx
		call   _07ee30_func
		mov    %esi,%ecx
		mov    $0x000001,%edx
		mov    _0e0750_data(%edi),%ebx
		mov    %eax,_0e0730_data(%edi)
		call   _0802ed_func
		mov    $0x000001,%ebx
		lea    0x00004c(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		mov    %edi,%ebx
		mov    _0e0750_data(%edi),%ebp
		xor    %edx,%edx
		test   %ebp,%ebp
		jle    _045148_jump

	_04512e_jump:
		mov    _0e0730_data(%ebx),%edi
		mov    (%edx,%edi,1),%al
		sub    %al,0x00004c(%esp)
		xorb   $0x00008f,(%edx,%edi,1)
		inc    %edx
		cmp    _0e0750_data(%ebx),%edx
		jl     _04512e_jump

	_045148_jump:
		cmpb   $0x000000,0x00004c(%esp)
		je     _04517c_jump
		mov    $0x0000c8,%eax
		mov    0x000004(%esp),%edi
		call   _07f158_func
		push   %edi
		push   $_0c0ca0_data
		push   %eax
		mov    %eax,%edx
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func

	_04517c_jump:
		imul   $0x000084,0x000010(%esp),%ebp
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%ecx
		mov    0x00000c(%esp),%eax
		call   _0802ed_func
		xor    %edx,%edx
		mov    _0e076c_data(%ebp),%dx
		imul   $0x00000c,%edx,%edx
		mov    0x000028(%esp),%eax
		mov    %esi,%ecx
		xor    %ebx,%ebx
		call   _07ee30_func
		mov    $0x00000c,%edx
		mov    _0e076c_data(%ebp),%bx
		mov    %eax,_0e0728_data(%ebp)
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    0x00001c(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		mov    _0e07a8_data(%ebp),%al
		test   %al,%al
		je     _045438_jump
		xor    %edx,%edx
		mov    %al,%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000028(%esp),%eax
		xor    %edi,%edi
		call   _07ee30_func
		xor    %edx,%edx
		mov    %eax,_0e072c_data(%ebp)
		mov    %edx,0x00002c(%esp)
		jmp    _0452fe_jump

	_04520c_jump:
		mov    $0x000001,%ebx
		mov    _0e072c_data(%ebp),%eax
		mov    $0x000002,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000008,%eax
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    _0e072c_data(%ebp),%eax
		mov    $0x000002,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x00000a,%eax
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    _0e072c_data(%ebp),%eax
		mov    $0x000004,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000004,%eax
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000040(%esp),%eax
		mov    %esi,%ecx
		call   _0802ed_func
		xor    %edx,%edx
		mov    0x000028(%esp),%eax
		mov    0x000040(%esp),%dx
		call   _07ee30_func
		mov    _0e072c_data(%ebp),%edx
		mov    %esi,%ecx
		mov    %eax,(%edx,%edi,1)
		xor    %ebx,%ebx
		mov    _0e072c_data(%ebp),%eax
		mov    0x000040(%esp),%bx
		mov    $0x000001,%edx
		mov    (%edi,%eax,1),%eax
		call   _0802ed_func
		mov    _0e072c_data(%ebp),%eax
		add    %edi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _0452f1_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    0x000028(%esp),%eax
		shl    $0x000002,%edx
		call   _07ee30_func
		mov    _0e072c_data(%ebp),%edx
		mov    %eax,0x000004(%edx,%edi,1)
		mov    %esi,%ecx
		mov    _0e072c_data(%ebp),%eax
		xor    %ebx,%ebx
		mov    $0x000004,%edx
		mov    0x00000a(%edi,%eax,1),%bx
		mov    0x000004(%edi,%eax,1),%eax
		call   _0802ed_func

	_0452f1_jump:
		int3   
		mov    0x00002c(%esp),%eax
		inc    %eax
		add    $0x00000c,%edi
		mov    %eax,0x00002c(%esp)

	_0452fe_jump:
		xor    %eax,%eax
		mov    0x00002c(%esp),%ebx
		mov    _0e07a8_data(%ebp),%al
		cmp    %ebx,%eax
		jle    _04544e_jump
		jmp    _04520c_jump

	_045317_jump:
		mov    $0x000001,%ebx
		xor    %eax,%eax
		mov    _0e0750_data(%ebp),%edx
		mov    %eax,_0e0730_data(%ebp)
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _08050a_func
		mov    $0x000001,%ebx
		lea    0x00004c(%esp),%eax
		mov    %ebx,%edx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000044(%edi),%eax
		mov    %esi,%ecx
		call   _0802ed_func
		xor    %edx,%edx
		mov    %edx,_0e0728_data(%ebp)
		mov    _0e076c_data(%ebp),%dx
		imul   $0x00000c,%edx,%edx
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _08050a_func
		mov    $0x000001,%ebx
		lea    0x000080(%edi),%eax
		mov    %ebx,%edx
		call   _0802ed_func
		cmpb   $0x000000,_0e07a8_data(%ebp)
		je     _045438_jump
		xor    %ebx,%ebx
		xor    %edi,%edi
		mov    %ebx,_0e072c_data(%ebp)
		jmp    _045427_jump

	_0453a5_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000034(%esp),%eax
		mov    %esi,%ecx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000038(%esp),%eax
		mov    %esi,%ecx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esp,%eax
		mov    %esi,%ecx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000040(%esp),%eax
		mov    %esi,%ecx
		call   _0802ed_func
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		mov    0x000040(%esp),%dx
		call   _08050a_func
		cmpl   $0xffffffff,(%esp)
		je     _045426_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000038(%esp),%dx
		mov    %esi,%eax
		shl    $0x000002,%edx
		call   _08050a_func

	_045426_jump:
		inc    %edi

	_045427_jump:
		xor    %eax,%eax
		mov    _0e07a8_data(%ebp),%al
		cmp    %eax,%edi
		jge    _04544e_jump
		jmp    _0453a5_jump

	_045438_jump:
		mov    _0e072c_data,%eax
		mov    %eax,_0e072c_data(%ebp)
		mov    _0e07a8_data,%al
		mov    %al,_0e07a8_data(%ebp)

	_04544e_jump:
		mov    0x000008(%esp),%edx
		mov    0x00001c(%esp),%ebx
		mov    0x00000c(%esp),%ecx
		mov    0x000010(%esp),%edi
		add    $0x000084,%edx
		add    $0x000084,%ebx
		add    $0x000084,%ecx
		inc    %edi
		mov    %edx,0x000008(%esp)
		mov    %ebx,0x00001c(%esp)
		mov    %ecx,0x00000c(%esp)
		mov    %edi,0x000010(%esp)

	_045481_jump:
		mov    _0924d2_data,%edx
		mov    _0924d4_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x000010(%esp),%ecx
		add    %edx,%eax
		cmp    %ecx,%eax
		jg     _045094_jump
		mov    _0924d6_data,%ax
		mov    _0924d4_data,%bx
		add    %eax,%ebx
		mov    %esi,%ecx
		mov    %bx,_0924d4_data
		mov    $0x000001,%ebx
		mov    $_0cf48d_data,%eax
		mov    %ebx,%edx
		call   _0802ed_func
		xor    %eax,%eax
		mov    _0cf48c_data,%al
		mov    %eax,0x000020(%esp)
		shl    $0x000002,%eax
		mov    %eax,0x000024(%esp)
		jmp    _04558d_jump

	_0454e0_jump:
		mov    $0x000001,%ebx
		lea    0x000044(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		xor    %edx,%edx
		mov    0x000044(%esp),%dl
		mov    0x000028(%esp),%eax
		shl    $0x000002,%edx
		xor    %ebp,%ebp
		call   _07ee30_func
		mov    0x000024(%esp),%edx
		xor    %edi,%edi
		mov    %edx,0x000018(%esp)
		mov    %eax,_0cc7b8_data(%edx)
		jmp    _04556f_jump

	_045518_jump:
		mov    $0x000001,%ebx
		lea    0x000054(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		xor    %edx,%edx
		mov    0x000054(%esp),%dl
		mov    0x000028(%esp),%eax
		shl    $0x000003,%edx
		call   _07ee30_func
		mov    0x000018(%esp),%edx
		add    $0x000004,%edi
		mov    _0cc7b8_data(%edx),%edx
		mov    %eax,-0x000004(%edx,%edi,1)
		mov    0x000018(%esp),%eax
		mov    %esi,%ecx
		xor    %ebx,%ebx
		mov    _0cc7b8_data(%eax),%eax
		mov    0x000054(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%edi,%eax,1),%eax
		inc    %ebp
		call   _0802ed_func
		int3   

	_04556f_jump:
		xor    %eax,%eax
		mov    0x000044(%esp),%al
		cmp    %eax,%ebp
		jl     _045518_jump
		mov    0x000024(%esp),%eax
		mov    0x000020(%esp),%edx
		add    $0x000004,%eax
		inc    %edx
		mov    %eax,0x000024(%esp)
		mov    %edx,0x000020(%esp)

	_04558d_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0cf48d_data,%dl
		mov    _0cf48c_data,%al
		mov    0x000020(%esp),%ebp
		add    %edx,%eax
		cmp    %ebp,%eax
		jg     _0454e0_jump
		mov    _0cf48c_data,%al
		mov    %dl,%ah
		add    %al,%ah
		mov    _0cf412_data,%dl
		mov    %ah,_0cf48d_data
		cmp    $0x000002,%dl
		je     _0455d1_jump
		mov    _0ce93d_data,%eax
		sar    $0x000018,%eax
		call   _046f24_func

	_0455d1_jump:
		mov    %esi,%eax
		call   _081192_func

	_0455d8_jump:
		call   _06b078_func
		call   _06ae68_func
		mov    0x000004(%esp),%eax
		call   _07f2f0_func
		add    $0x00005c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0455f4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000080,%esp
		mov    %eax,0x000068(%esp)
		mov    $0x000013,%ecx
		mov    %esp,%edi
		mov    $_044d90_func,%esi
		mov    $0x000064,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   _07f158_func
		mov    %eax,%edx
		mov    %eax,0x000064(%esp)
		call   _01cc5c_func
		call   _06af00_func
		cmpw   $0x000000,_0cf2e8_data
		je     _04563f_jump
		mov    _0c0c68_data,%eax
		mov    %eax,(%edx)
		jmp    _045642_jump

	_04563f_jump:
		movb   $0x000000,(%edx)

	_045642_jump:
		mov    $_0c0c6c_data,%esi
		mov    0x000064(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_045654_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04566c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _045654_jump

	_04566c_jump:
		pop    %edi
		mov    $_0c0c74_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04567b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _045693_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04567b_jump

	_045693_jump:
		pop    %edi
		mov    _0cf280_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    %esp,%esi
		add    %edx,%eax
		add    %eax,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0456b9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0456d1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0456b9_jump

	_0456d1_jump:
		pop    %edi
		mov    $_0c0c74_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0456e0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0456f8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0456e0_jump

	_0456f8_jump:
		pop    %edi
		mov    %ebx,%esi
		mov    $_0c0c78_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_045709_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _045721_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _045709_jump

	_045721_jump:
		pop    %edi
		mov    %edi,%eax
		call   _0810de_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _04575d_jump
		mov    $0x0000c8,%eax
		call   _07f158_func
		push   %edi
		push   $_0c0cbc_data
		push   %eax
		mov    %eax,%edx
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func
		jmp    _045e34_jump

	_04575d_jump:
		int3   
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000060(%esp),%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000050(%esp),%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0ce038_data,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0ce03a_data,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    $0x000900,%ebx
		mov    $0x000001,%edx
		mov    $_0c7938_data,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $_0cf476_data,%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    _0cf476_data,%dl
		mov    %ah,_0cf474_data
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7938_data,%esi
		sub    %edx,%eax
		mov    $_0c7338_data,%edi
		shl    $0x000008,%eax
		mov    $0x000300,%ecx
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0ce038_data,%edx
		mov    _0ce036_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %edx,%eax
		mov    %eax,_0ce03c_data
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    0x000068(%esp),%eax
		add    %edx,%edx
		mov    %ebp,%ecx
		call   _07ee30_func
		mov    $0x000006,%edx
		mov    _0ce03c_data,%ebx
		mov    %eax,_0ce040_data
		call   _0802ed_func
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		mov    $0x000001,%ebx
		lea    0x00007c(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce738_data,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    _0ce738_data,%ebx
		cmp    $0xffffffff,%ebx
		jne    _0458ad_jump
		xor    %ecx,%ecx
		mov    %ecx,_0ce738_data
		jmp    _0458df_jump

	_0458ad_jump:
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    $_0e0728_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %edx,_0ce738_data
		cmpb   $0x000000,_095de5_data
		jne    _0458df_jump
		cmpb   $0x000000,_0cf409_data
		je     _0458df_jump
		mov    0x000068(%esp),%eax
		call   _05c3a8_func

	_0458df_jump:
		mov    _095de5_data,%bl
		cmp    $0x000001,%bl
		je     _0458f4_jump
		mov    _0cf409_data,%bh
		test   %bh,%bh
		jne    _0458fa_jump

	_0458f4_jump:
		mov    0x000078(%esp),%al
		jmp    _045906_jump

	_0458fa_jump:
		test   %bl,%bl
		jne    _04590b_jump
		test   %bh,%bh
		je     _04590b_jump
		mov    0x00007c(%esp),%al

	_045906_jump:
		mov    %al,_0cf40e_data

	_04590b_jump:
		mov    _095de5_data,%al
		cmp    $0x000001,%al
		jne    _045b14_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000058(%esp),%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000054(%esp),%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    0x000058(%esp),%edi
		test   %edi,%edi
		je     _04595f_jump
		mov    %edi,%edx
		mov    0x000068(%esp),%eax
		shl    $0x000008,%edx
		call   _07ee30_func
		mov    %eax,_0cd1e8_data
		jmp    _045965_jump

	_04595f_jump:
		mov    %edi,_0cd1e8_data

	_045965_jump:
		mov    0x000054(%esp),%edx
		test   %edx,%edx
		je     _04597d_jump
		mov    0x000068(%esp),%eax
		call   _07ee30_func
		mov    %eax,_0cd1b4_data
		jmp    _045983_jump

	_04597d_jump:
		mov    %edx,_0cd1b4_data

	_045983_jump:
		mov    0x000058(%esp),%ebx
		mov    $0x000001,%edx
		mov    _0cd1e8_data,%eax
		mov    %ebp,%ecx
		shl    $0x000008,%ebx
		call   _0802ed_func
		mov    $0x000001,%ebx
		lea    0x000074(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		xor    %edx,%edx
		jmp    _0459c9_jump

	_0459b1_jump:
		mov    _0cd1e8_data,%esi
		mov    (%edx,%esi,1),%al
		sub    %al,0x000074(%esp)
		mov    (%edx,%esi,1),%bl
		inc    %edx
		xor    $0x00007d,%bl
		mov    %bl,-0x000001(%edx,%esi,1)

	_0459c9_jump:
		mov    0x000058(%esp),%eax
		shl    $0x000008,%eax
		cmp    %eax,%edx
		jb     _0459b1_jump
		cmpb   $0x000000,0x000074(%esp)
		je     _045a08_jump
		mov    $0x0000c8,%eax
		call   _07f158_func
		mov    %eax,%edx
		mov    0x000064(%esp),%eax
		push   %eax
		push   $_0c0ca0_data
		push   %edx
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func

	_045a08_jump:
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0c2c78_data,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    _0cd1e8_data,%edx
		xor    %eax,%eax

	_045a26_jump:
		mov    _0c2c78_data(%eax),%ebx
		add    $0x000004,%eax
		add    %edx,%ebx
		mov    %ebx,_0c2c74_data(%eax)
		cmp    $0x0012c0,%eax
		jne    _045a26_jump
		mov    0x000054(%esp),%ebx
		mov    $0x000001,%edx
		mov    _0cd1b4_data,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    $0x000001,%ebx
		lea    0x000074(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		mov    0x000054(%esp),%ecx
		xor    %edx,%edx
		test   %ecx,%ecx
		jbe    _045a8d_jump

	_045a6f_jump:
		mov    _0cd1b4_data,%esi
		mov    0x000074(%esp),%bh
		mov    (%edx,%esi,1),%al
		sub    %al,%bh
		mov    %bh,0x000074(%esp)
		xorb   $0x0000f3,(%edx,%esi,1)
		inc    %edx
		cmp    0x000054(%esp),%edx
		jb     _045a6f_jump

	_045a8d_jump:
		cmpb   $0x000000,0x000074(%esp)
		je     _045ac1_jump
		mov    $0x0000c8,%eax
		mov    0x000064(%esp),%edi
		call   _07f158_func
		push   %edi
		push   $_0c0ca0_data
		push   %eax
		mov    %eax,%edx
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func

	_045ac1_jump:
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0c3f78_data,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		xor    %eax,%eax

	_045ad9_jump:
		cmpl   $0xffffffff,_0c3f78_data(%eax)
		je     _045af0_jump
		mov    _0cd1b4_data,%edx
		add    %edx,_0c3f78_data(%eax)
		jmp    _045af8_jump

	_045af0_jump:
		xor    %ebx,%ebx
		mov    %ebx,_0c3f78_data(%eax)

	_045af8_jump:
		add    $0x000004,%eax
		cmp    $0x0012c0,%eax
		jne    _045ad9_jump
		mov    0x000060(%esp),%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _08050a_func
		jmp    _045c24_jump

	_045b14_jump:
		test   %al,%al
		jne    _045c24_jump
		mov    0x000050(%esp),%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _08050a_func
		mov    %ebp,%ecx
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0c3f78_data,%eax
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cca08_data,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cca04_data,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x00005c(%esp),%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    0x00005c(%esp),%edx
		mov    0x000068(%esp),%eax
		mov    $0x000001,%ebx
		call   _07ee30_func
		mov    %ebp,%ecx
		mov    0x00005c(%esp),%edx
		mov    %eax,_0cd244_data
		call   _0802ed_func
		mov    $0x000001,%ebx
		lea    0x000074(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		mov    0x00005c(%esp),%esi
		xor    %edx,%edx
		test   %esi,%esi
		jle    _045bdc_jump

	_045bbe_jump:
		mov    _0cd244_data,%esi
		mov    0x000074(%esp),%bl
		mov    (%edx,%esi,1),%al
		sub    %al,%bl
		mov    %bl,0x000074(%esp)
		xorb   $_0000ff_case,(%edx,%esi,1)
		inc    %edx
		cmp    0x00005c(%esp),%edx
		jl     _045bbe_jump

	_045bdc_jump:
		cmpb   $0x000000,0x000074(%esp)
		je     _045c10_jump
		mov    $0x0000c8,%eax
		mov    0x000064(%esp),%edi
		call   _07f158_func
		push   %edi
		push   $_0c0ce0_data
		push   %eax
		mov    %eax,%edx
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func

	_045c10_jump:
		mov    $_0c1fb0_data,%edx
		mov    0x000068(%esp),%eax
		mov    _0cd244_data,%ebx
		call   _05bbec_func

	_045c24_jump:
		int3   
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0cc7a4_data,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    _0cc7a2_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    0x000068(%esp),%eax
		shl    $0x000002,%edx
		call   _07ee30_func
		mov    %eax,_0cc7a0_data
		mov    _0cc7a2_data,%edx
		sar    $0x000010,%edx
		mov    0x000068(%esp),%eax
		add    %edx,%edx
		call   _07ee30_func
		mov    _0cc7a2_data,%edx
		mov    %eax,_0cc7a8_data
		sar    $0x000010,%edx
		mov    0x000068(%esp),%eax
		add    %edx,%edx
		call   _07ee30_func
		mov    %eax,_0cc798_data
		mov    _0cc7a2_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ebx
		shl    $0x000005,%ebx
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%ebx
		call   _07fcc0_func
		mov    _0cc7a2_data,%edx
		sar    $0x000010,%edx
		xor    %edi,%edi
		add    %edx,%edx
		mov    0x000068(%esp),%eax
		inc    %edx
		mov    %ebp,%ecx
		call   _07ee30_func
		mov    _0cc7a2_data,%ebx
		mov    $0x000002,%edx
		sar    $0x000010,%ebx
		mov    %eax,_0ce8d4_data
		call   _0802ed_func
		mov    $0x000084,%edx
		mov    _0cc7a2_data,%ebx
		mov    _0cc7a0_data,%eax
		mov    %ebp,%ecx
		sar    $0x000010,%ebx
		xor    %esi,%esi
		call   _0802ed_func
		jmp    _045e1c_jump

	_045cfd_jump:
		int3   
		mov    _0cc7a0_data,%eax
		movswl (%esi,%eax,1),%edx
		imul   $0x000084,%edx,%edx
		mov    _0e0728_data(%edx),%edx
		mov    %edx,(%esi,%eax,1)
		mov    0x000002(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0e072c_data(%edx),%edx
		mov    %edx,0x000004(%esi,%eax,1)
		mov    0x000006(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0e0730_data(%edx),%edx
		mov    %edx,0x000008(%esi,%eax,1)
		mov    0x00000a(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		mov    _0cc7b8_data(,%edx,4),%edx
		mov    %ebp,%ecx
		mov    %edx,0x00000c(%esi,%eax,1)
		mov    $0x000002,%edx
		lea    0x000070(%esp),%eax
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x00006c(%esp),%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    0x000070(%esp),%eax
		test   %ax,%ax
		je     _045dbc_jump
		xor    %edx,%edx
		mov    %ax,%dx
		mov    0x000068(%esp),%eax
		call   _07ee30_func
		mov    _0cc7a0_data,%edx
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000010(%edx,%esi,1)
		mov    %edx,%eax
		mov    0x000070(%esp),%bx
		mov    $0x000001,%edx
		mov    0x000010(%esi,%eax,1),%eax
		call   _0802ed_func
		jmp    _045dc9_jump

	_045dbc_jump:
		mov    _0cc7a0_data,%eax
		movl   $0x000000,0x000010(%esi,%eax,1)

	_045dc9_jump:
		cmpw   $0x000000,0x00006c(%esp)
		je     _045e08_jump
		xor    %edx,%edx
		mov    0x00006c(%esp),%dx
		mov    0x000068(%esp),%eax
		add    %edx,%edx
		call   _07ee30_func
		mov    _0cc7a0_data,%edx
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000014(%edx,%esi,1)
		mov    %edx,%eax
		mov    0x00006c(%esp),%bx
		mov    $0x000002,%edx
		mov    0x000014(%esi,%eax,1),%eax
		call   _0802ed_func
		jmp    _045e15_jump

	_045e08_jump:
		mov    _0cc7a0_data,%eax
		movl   $0x000000,0x000014(%esi,%eax,1)

	_045e15_jump:
		add    $0x000084,%esi
		inc    %edi

	_045e1c_jump:
		mov    _0cc7a2_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jl     _045cfd_jump
		int3   
		mov    %ebp,%eax
		call   _081192_func

	_045e34_jump:
		mov    0x000064(%esp),%eax
		call   _07f2f0_func
		call   _06ae68_func
		add    $0x000080,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_045e50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,0x000018(%esp)
		mov    $0x000064,%eax
		mov    $_0c0c6c_data,%esi
		call   _07f158_func
		mov    %eax,%ebx
		mov    %eax,(%esp)
		movb   $0x000000,(%eax)
		mov    %ebx,%edi
		call   _01cc5c_func
		call   _06af00_func
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    $_0c0c74_data,%esi
		mov    %ebx,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_045e93_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _045eab_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _045e93_jump

	_045eab_jump:
		pop    %edi
		mov    $_0c0d0c_data,%esi
		mov    $_0c0c78_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_045ebf_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _045ed7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _045ebf_jump

	_045ed7_jump:
		pop    %edi
		mov    %ebx,%eax
		call   _0810de_func
		mov    %eax,%esi
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _045f15_jump
		mov    $0x0000c8,%eax
		call   _07f158_func
		push   %ebx
		push   $_0c0d18_data
		push   %eax
		mov    %eax,%edx
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func
		jmp    _04627a_jump

	_045f15_jump:
		mov    _0924d2_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		mov    $0x000001,%ebx
		shl    $0x000005,%edi
		mov    %eax,0x000008(%esp)
		add    %eax,%edi
		mov    $_0e0728_data,%eax
		shl    $0x000002,%edi
		mov    $0x000004,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000028,%eax
		call   _0802ed_func
		mov    0x000018(%esp),%eax
		mov    _0e0750_data(%edi),%edx
		call   _07ee30_func
		mov    %esi,%ecx
		mov    $0x000001,%edx
		mov    _0e0750_data(%edi),%ebx
		mov    %eax,_0e0730_data(%edi)
		call   _0802ed_func
		mov    %edi,%esi
		mov    _0e0750_data(%edi),%edx
		xor    %eax,%eax
		test   %edx,%edx
		jle    _045f8e_jump

	_045f7b_jump:
		mov    _0e0730_data(%esi),%edx
		xorb   $0x00008f,(%edx,%eax,1)
		inc    %eax
		cmp    _0e0750_data(%esi),%eax
		jl     _045f7b_jump

	_045f8e_jump:
		mov    $_0e0728_data,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		add    %esi,%edi
		mov    %ebp,%ecx
		lea    0x000044(%edi),%eax
		call   _0802ed_func
		xor    %edx,%edx
		mov    _0e076c_data(%esi),%dx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    0x000018(%esp),%eax
		xor    %ebx,%ebx
		call   _07ee30_func
		mov    $0x00000c,%edx
		mov    _0e076c_data(%esi),%bx
		mov    %eax,_0e0728_data(%esi)
		call   _0802ed_func
		mov    $0x000001,%ebx
		lea    0x000080(%edi),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		xor    %edx,%edx
		mov    _0e07a8_data(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000018(%esp),%eax
		call   _07ee30_func
		mov    %eax,_0e072c_data(%esi)
		mov    0x000008(%esp),%eax
		mov    %eax,%edi
		xor    %ecx,%ecx
		shl    $0x000005,%edi
		mov    %ecx,0x00000c(%esp)
		add    %eax,%edi
		xor    %esi,%esi
		shl    $0x000002,%edi
		jmp    _04612e_jump

	_04603c_jump:
		int3   
		mov    $0x000001,%ebx
		mov    _0e072c_data(%edi),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000008,%eax
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    _0e072c_data(%edi),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x00000a,%eax
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    _0e072c_data(%edi),%eax
		mov    $0x000004,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000004,%eax
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x00001c(%esp),%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		xor    %edx,%edx
		mov    0x000018(%esp),%eax
		mov    0x00001c(%esp),%dx
		call   _07ee30_func
		mov    _0e072c_data(%edi),%edx
		mov    %ebp,%ecx
		mov    %eax,(%edx,%esi,1)
		xor    %ebx,%ebx
		mov    _0e072c_data(%edi),%eax
		mov    0x00001c(%esp),%bx
		mov    $0x000001,%edx
		mov    (%esi,%eax,1),%eax
		call   _0802ed_func
		mov    _0e072c_data(%edi),%eax
		add    %esi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _046122_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    0x000018(%esp),%eax
		shl    $0x000002,%edx
		call   _07ee30_func
		mov    _0e072c_data(%edi),%edx
		mov    %eax,0x000004(%edx,%esi,1)
		mov    %ebp,%ecx
		mov    _0e072c_data(%edi),%eax
		xor    %ebx,%ebx
		mov    $0x000004,%edx
		mov    0x00000a(%esi,%eax,1),%bx
		mov    0x000004(%esi,%eax,1),%eax
		call   _0802ed_func

	_046122_jump:
		mov    0x00000c(%esp),%ebx
		inc    %ebx
		add    $0x00000c,%esi
		mov    %ebx,0x00000c(%esp)

	_04612e_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%edx
		mov    _0e07a8_data(%edi),%al
		cmp    %edx,%eax
		jg     _04603c_jump
		mov    $0x000001,%ebx
		mov    $_0cf48d_data,%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		xor    %ebx,%ebx
		mov    %ebx,0x000010(%esp)
		mov    %ebx,0x000014(%esp)
		jmp    _046211_jump

	_046164_jump:
		mov    $0x000001,%ebx
		lea    0x000024(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		xor    %edx,%edx
		mov    0x000024(%esp),%dl
		mov    0x000018(%esp),%eax
		shl    $0x000002,%edx
		xor    %edi,%edi
		call   _07ee30_func
		mov    0x000014(%esp),%edx
		xor    %esi,%esi
		mov    %edx,0x000004(%esp)
		mov    %eax,_0cc7b8_data(%edx)
		jmp    _0461f3_jump

	_04619c_jump:
		int3   
		mov    $0x000001,%ebx
		lea    0x000020(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		mov    0x000018(%esp),%eax
		shl    $0x000003,%edx
		call   _07ee30_func
		mov    0x000004(%esp),%edx
		add    $0x000004,%esi
		mov    _0cc7b8_data(%edx),%edx
		mov    %eax,-0x000004(%edx,%esi,1)
		mov    0x000004(%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    _0cc7b8_data(%eax),%eax
		mov    0x000020(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%esi,%eax,1),%eax
		inc    %edi
		call   _0802ed_func

	_0461f3_jump:
		xor    %eax,%eax
		mov    0x000024(%esp),%al
		cmp    %eax,%edi
		jl     _04619c_jump
		mov    0x000014(%esp),%esi
		mov    0x000010(%esp),%edi
		add    $0x000004,%esi
		inc    %edi
		mov    %esi,0x000014(%esp)
		mov    %edi,0x000010(%esp)

	_046211_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%ecx
		mov    _0cf48d_data,%al
		cmp    %ecx,%eax
		jg     _046164_jump
		mov    _0924d2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		mov    $_0e0728_data,%esi
		shl    $0x000005,%eax
		mov    $0x000084,%ecx
		add    %edx,%eax
		mov    $_0ce178_data,%edi
		shl    $0x000002,%eax
		mov    _0cc7b8_data,%edx
		add    %eax,%esi
		mov    %edx,_0e0734_data(%eax)
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0924d4_data,%dx
		inc    %edx
		mov    %ebp,%eax
		mov    %dx,_0924d4_data
		call   _081192_func

	_04627a_jump:
		mov    (%esp),%eax
		call   _07f2f0_func
		call   _06ae68_func
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_046294_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		call   _01cc5c_func
		mov    $0x000064,%eax
		call   _07f158_func
		mov    _0cd290_data,%edx
		mov    %eax,%ebx
		mov    %eax,0x00000c(%esp)
		mov    $_0cd254_data,%eax
		call   _07f050_func
		mov    $_0cd248_data,%eax
		mov    _0cd28c_data,%edx
		call   _07f050_func
		mov    $_0cd274_data,%eax
		mov    _0cd298_data,%edx
		call   _07f050_func
		mov    $_0cd268_data,%eax
		mov    _0cd294_data,%edx
		call   _07f050_func
		cmpw   $0x000000,_0cf2e8_data
		je     _046305_jump
		mov    _0c0c68_data,%eax
		mov    %eax,(%ebx)
		jmp    _046308_jump

	_046305_jump:
		movb   $0x000000,(%ebx)

	_046308_jump:
		mov    $_0c0c6c_data,%esi
		mov    0x00000c(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04631a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _046332_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04631a_jump

	_046332_jump:
		pop    %edi
		mov    $_0c0c74_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_046341_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _046359_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _046341_jump

	_046359_jump:
		pop    %edi
		mov    $_0c0d40_data,%esi
		mov    $_0c0c78_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04636d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _046385_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04636d_jump

	_046385_jump:
		pop    %edi
		mov    %edi,%eax
		call   _0810de_func
		mov    %eax,%ecx
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _0463c3_jump
		mov    $0x0000c8,%eax
		call   _07f158_func
		push   %edi
		push   $_0c0d4c_data
		push   %eax
		mov    %eax,%edx
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func
		jmp    _046a77_jump

	_0463c3_jump:
		call   _06af00_func
		mov    $0x000001,%ebx
		mov    $_0cf48d_data,%eax
		mov    %ebx,%edx
		call   _0802ed_func
		mov    _0cf48d_data,%al
		xor    %edx,%edx
		mov    %al,_0cf48c_data
		mov    %edx,(%esp)
		jmp    _046486_jump

	_0463ed_jump:
		mov    $0x000001,%ebx
		lea    0x00001c(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		mov    $_0cd268_data,%eax
		shl    $0x000002,%edx
		call   _07ee30_func
		mov    (%esp),%edx
		xor    %edi,%edi
		xor    %esi,%esi
		mov    %eax,_0cc7b8_data(,%edx,4)
		jmp    _046479_jump

	_046422_jump:
		int3   
		mov    $0x000001,%ebx
		lea    0x000014(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		xor    %edx,%edx
		mov    0x000014(%esp),%dl
		mov    $_0cd268_data,%eax
		shl    $0x000003,%edx
		call   _07ee30_func
		mov    (%esp),%edx
		mov    _0cc7b8_data(,%edx,4),%edx
		mov    %eax,(%edx,%esi,1)
		add    $0x000004,%esi
		mov    (%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    _0cc7b8_data(,%eax,4),%eax
		mov    0x000014(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%esi,%eax,1),%eax
		inc    %edi
		call   _0802ed_func

	_046479_jump:
		xor    %eax,%eax
		mov    0x00001c(%esp),%al
		cmp    %eax,%edi
		jl     _046422_jump
		incl   (%esp)

	_046486_jump:
		xor    %eax,%eax
		mov    (%esp),%ecx
		mov    _0cf48d_data,%al
		cmp    %ecx,%eax
		jg     _0463ed_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0924d4_data,%eax
		mov    %ebp,%ecx
		mov    $0x000001,%esi
		call   _0802ed_func
		mov    _0924d4_data,%ax
		mov    %esi,(%esp)
		mov    %ax,_0924d6_data
		jmp    _04682a_jump

	_0464c7_jump:
		imul   $0x000084,%edx,%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0e0728_data,%eax
		mov    $0x000004,%edx
		add    $0x00000c,%eax
		call   _0802ed_func
		imul   $0x000084,(%esp),%eax
		mov    _0e0734_data(%eax),%esi
		cmp    $0xffffffff,%esi
		jne    _046502_jump
		xor    %edi,%edi
		mov    %edi,_0e0734_data(%eax)
		jmp    _04650f_jump

	_046502_jump:
		mov    _0cc7b8_data(,%esi,4),%edx
		mov    %edx,_0e0734_data(%eax)

	_04650f_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cca0c_data,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cca18_data,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0e0728_data,%eax
		mov    $0x000004,%edx
		add    $0x000028,%eax
		call   _0802ed_func
		imul   $0x000084,(%esp),%edx
		mov    $_0cd254_data,%eax
		mov    _0e0750_data(%edx),%edx
		call   _07ee30_func
		mov    (%esp),%ecx
		mov    %eax,%edx
		imul   $0x000084,%ecx,%eax
		mov    %ebp,%ecx
		mov    _0e0750_data(%eax),%ebx
		mov    %edx,_0e0730_data(%eax)
		mov    %edx,%eax
		mov    $0x000001,%edx
		call   _0802ed_func
		mov    $0x000001,%ebx
		lea    0x000018(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _0802ed_func
		xor    %edx,%edx
		jmp    _0465cb_jump

	_0465ad_jump:
		mov    _0e0730_data(%eax),%esi
		mov    0x000018(%esp),%bl
		mov    (%edx,%esi,1),%al
		sub    %al,%bl
		mov    %bl,0x000018(%esp)
		mov    (%edx,%esi,1),%bh
		inc    %edx
		xor    $0x00008f,%bh
		mov    %bh,-0x000001(%edx,%esi,1)

	_0465cb_jump:
		imul   $0x000084,(%esp),%eax
		cmp    _0e0750_data(%eax),%edx
		jl     _0465ad_jump
		cmpb   $0x000000,0x000018(%esp)
		je     _04660e_jump
		mov    $0x0000c8,%eax
		call   _07f158_func
		mov    %eax,%edx
		mov    0x00000c(%esp),%eax
		push   %eax
		push   $_0c0ca0_data
		push   %edx
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func

	_04660e_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cca10_data,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0e0728_data,%eax
		mov    $0x000002,%edx
		add    $0x000044,%eax
		call   _0802ed_func
		imul   $0x000084,(%esp),%edx
		mov    _0e076c_data(%edx),%dx
		and    $0x00ffff,%edx
		imul   $0x00000c,%edx,%edx
		mov    $_0cd268_data,%eax
		call   _07ee30_func
		mov    (%esp),%ecx
		mov    %eax,%edx
		imul   $0x000084,%ecx,%eax
		xor    %ebx,%ebx
		mov    %ebp,%ecx
		mov    _0e076c_data(%eax),%bx
		mov    %edx,_0e0728_data(%eax)
		mov    %edx,%eax
		mov    $0x00000c,%edx
		call   _0802ed_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0e0728_data,%eax
		mov    %ebx,%edx
		add    $0x000080,%eax
		call   _0802ed_func
		imul   $0x000084,(%esp),%eax
		cmpb   $0x000000,_0e07a8_data(%eax)
		je     _04681f_jump
		xor    %edx,%edx
		mov    _0e07a8_data(%eax),%dl
		imul   $0x00000c,%edx,%edx
		mov    $_0cd268_data,%eax
		call   _07ee30_func
		imul   $0x000084,(%esp),%edx
		xor    %edi,%edi
		xor    %esi,%esi
		mov    %eax,_0e072c_data(%edx)
		jmp    _046807_jump

	_0466eb_jump:
		mov    $0x000001,%ebx
		mov    _0e072c_data(%eax),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000008,%eax
		call   _0802ed_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    _0e072c_data(%eax),%eax
		mov    %ebp,%ecx
		add    %esi,%eax
		mov    $0x000002,%edx
		add    $0x00000a,%eax
		call   _0802ed_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000004,%edx
		mov    _0e072c_data(%eax),%eax
		mov    %ebp,%ecx
		add    %esi,%eax
		mov    $0x000001,%ebx
		add    $0x000004,%eax
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000010(%esp),%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		xor    %edx,%edx
		mov    $_0cd268_data,%eax
		mov    0x000010(%esp),%dx
		call   _07ee30_func
		imul   $0x000084,(%esp),%edx
		mov    _0e072c_data(%edx),%edx
		mov    %eax,(%edx,%esi,1)
		imul   $0x000084,(%esp),%eax
		xor    %ebx,%ebx
		mov    %ebp,%ecx
		mov    _0e072c_data(%eax),%eax
		mov    0x000010(%esp),%bx
		mov    $0x000001,%edx
		mov    (%esi,%eax,1),%eax
		call   _0802ed_func
		imul   $0x000084,(%esp),%eax
		mov    _0e072c_data(%eax),%eax
		add    %esi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _046803_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    $_0cd268_data,%eax
		shl    $0x000002,%edx
		call   _07ee30_func
		imul   $0x000084,(%esp),%edx
		mov    _0e072c_data(%edx),%edx
		mov    %eax,0x000004(%edx,%esi,1)
		imul   $0x000084,(%esp),%eax
		xor    %ebx,%ebx
		mov    _0e072c_data(%eax),%eax
		mov    $0x000004,%edx
		mov    %ebp,%ecx
		mov    0x00000a(%esi,%eax,1),%bx
		mov    0x000004(%esi,%eax,1),%eax
		call   _0802ed_func

	_046803_jump:
		add    $0x00000c,%esi
		inc    %edi

	_046807_jump:
		imul   $0x000084,(%esp),%eax
		xor    %edx,%edx
		mov    _0e07a8_data(%eax),%dl
		cmp    %edx,%edi
		jge    _046827_jump
		jmp    _0466eb_jump

	_04681f_jump:
		xor    %edx,%edx
		mov    %edx,_0e072c_data(%eax)

	_046827_jump:
		incl   (%esp)

	_04682a_jump:
		mov    _0924d2_data,%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _0464c7_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cca14_data,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    (%esp),%edx
		mov    %edx,%eax
		mov    $_0e0728_data,%esi
		shl    $0x000005,%eax
		mov    $_0ce044_data,%edi
		add    %edx,%eax
		mov    $0x000084,%ecx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%esi
		mov    $0x000004,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0e0728_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0ce0d4_data
		mov    _0e0730_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0ce0d8_data
		mov    _0e076c_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0ce0dc_data
		mov    %esp,%eax
		call   _0802ed_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0e0728_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0ce7c0_data
		mov    _0e0730_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0ce7c4_data
		mov    _0e076c_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0ce7c8_data
		mov    %esp,%eax
		call   _0802ed_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0e0728_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0ce1fc_data
		mov    _0e0730_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0ce204_data
		mov    _0e076c_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0ce240_data
		mov    %esp,%eax
		call   _0802ed_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0e0728_data(,%eax,4),%edx
		mov    _0e072c_data(,%eax,4),%ebx
		mov    _0e07a8_data(,%eax,4),%cl
		mov    %edx,0x000008(%esp)
		mov    _0e0730_data(,%eax,4),%edx
		mov    _0e0734_data(,%eax,4),%esi
		mov    %edx,0x000004(%esp)
		mov    _0e076c_data(,%eax,4),%dx
		xor    %eax,%eax

	_0469b5_jump:
		add    $0x000084,%eax
		mov    %ebx,_0cd24c_data(%eax)
		mov    %dx,_0cd28c_data(%eax)
		mov    %cl,_0cd2c8_data(%eax)
		mov    0x000008(%esp),%edi
		mov    %esi,_0cd254_data(%eax)
		mov    %edi,_0cd248_data(%eax)
		mov    0x000004(%esp),%edi
		mov    %edi,_0cd250_data(%eax)
		cmp    $0x000c60,%eax
		jne    _0469b5_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    (%esp),%edx
		mov    %edx,%eax
		mov    $_0e0728_data,%esi
		shl    $0x000005,%eax
		mov    $_0ce73c_data,%edi
		add    %edx,%eax
		mov    $0x000084,%ecx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%esi
		mov    $0x000004,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _0802ed_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $_0e0728_data,%esi
		add    %edx,%eax
		mov    $_0ce0e0_data,%edi
		shl    $0x000002,%eax
		mov    $0x000084,%ecx
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %ebp,%eax
		call   _081192_func

	_046a77_jump:
		mov    $0x0004b0,%edx
		mov    $_0cd268_data,%eax
		call   _07ee30_func
		mov    %eax,_0cd1a8_data
		mov    $_0cd254_data,%eax
		call   _07f3c8_func
		mov    0x00000c(%esp),%eax
		call   _07f2f0_func
		call   _06ae68_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_046ab0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000ac,%esp
		mov    %eax,0x00008c(%esp)
		mov    %edx,0x000090(%esp)
		mov    %ebx,%ebp
		mov    %ecx,0x000084(%esp)
		call   _01cc5c_func
		mov    $0x000064,%eax
		call   _07f158_func
		mov    _0cf2e8_data,%dx
		mov    %eax,0x000094(%esp)
		test   %dx,%dx
		je     _046afc_jump
		mov    _0c0c68_data,%edx
		mov    %edx,(%eax)
		jmp    _046aff_jump

	_046afc_jump:
		movb   $0x000000,(%eax)

	_046aff_jump:
		mov    $_0c0d74_data,%esi
		mov    0x000094(%esp),%edi
		mov    $_0c0c78_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_046b19_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _046b31_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _046b19_jump

	_046b31_jump:
		pop    %edi
		mov    %edi,%eax
		call   _0810de_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _046b68_jump
		mov    $0x0000c8,%eax
		call   _07f158_func
		push   %edi
		push   $_0c0d80_data
		push   %eax
		mov    %eax,%edx
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func

	_046b68_jump:
		mov    0x000090(%esp),%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000002,%edi
		mov    _092165_data(%edi),%al
		mov    %al,0x0000a4(%esp)
		mov    _092160_data(%edi),%eax
		xor    %ebx,%ebx
		sub    $0x000080,%eax
		mov    _09215c_data(%edi),%edx
		mov    %eax,0x000080(%esp)
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _08050a_func
		mov    $0x000001,%ebx
		mov    $0x000080,%edx
		mov    %esp,%eax
		call   _0802ed_func
		mov    %edi,%ebx
		xor    %eax,%eax

	_046bc0_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000a4(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000a4(%esp)
		mov    _092164_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _046bc0_jump
		mov    0x000008(%esp),%eax
		sub    0x000004(%esp),%eax
		inc    %eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000a(%esp),%eax
		sub    0x000006(%esp),%eax
		mov    0x000084(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x000084(%esp),%ebx
		mov    0x000042(%esp),%eax
		xor    %edx,%edx
		mov    %eax,0x0000a0(%esp)
		xor    %eax,%eax
		mov    (%ebx),%dx
		mov    0x000000(%ebp),%ax
		imul   %eax,%edx
		mov    %esi,%ecx
		mov    0x00008c(%esp),%eax
		mov    0x000080(%esp),%ebx
		call   _07ee30_func
		mov    %eax,%edi
		mov    0x000080(%esp),%eax
		mov    $0x000001,%edx
		call   _07f158_func
		mov    %eax,0x000098(%esp)
		mov    %eax,0x000088(%esp)
		call   _0802ed_func
		mov    %esi,%eax
		mov    0x000080(%esp),%ecx
		call   _081192_func
		test   %ecx,%ecx
		jbe    _046cb6_jump
		mov    0x000090(%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    0x000098(%esp),%eax
		shl    $0x000002,%ebx
		lea    (%eax,%ecx,1),%esi

	_046c94_jump:
		mov    0x0000a4(%esp),%ch
		sub    (%eax),%ch
		mov    _092164_data(%ebx),%dl
		mov    (%eax),%dh
		inc    %eax
		xor    %dl,%dh
		mov    %ch,0x0000a4(%esp)
		mov    %dh,-0x000001(%eax)
		cmp    %esi,%eax
		jb     _046c94_jump

	_046cb6_jump:
		cmpb   $0x000000,0x0000a4(%esp)
		je     _046cf8_jump
		mov    $0x0000c8,%eax
		mov    0x000090(%esp),%esi
		call   _07f158_func
		push   %esi
		mov    %eax,%edx
		mov    0x000098(%esp),%eax
		push   %eax
		push   $_0c0d94_data
		push   %edx
		call   _07fceb_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func

	_046cf8_jump:
		test   %edi,%edi
		je     _046de2_jump
		cmpl   $0x000000,0x000088(%esp)
		je     _046de2_jump
		xor    %ebx,%ebx
		xor    %esi,%esi
		mov    %ebx,0x00009c(%esp)
		jmp    _046dc0_jump

	_046d1e_jump:
		xor    %eax,%eax

	_046d20_jump:
		mov    0x00009c(%esp),%edx
		mov    0x000088(%esp),%ecx
		lea    0x000001(%edx),%ebx
		add    %ecx,%edx
		mov    (%edx),%dl
		mov    %dl,0x0000a8(%esp)
		and    $0x0000c0,%dl
		mov    %ebx,0x00009c(%esp)
		cmp    $0x0000c0,%dl
		jne    _046d95_jump
		mov    0x0000a8(%esp),%dl
		and    $0x00003f,%dl
		lea    0x000001(%ebx),%ecx
		mov    %ecx,0x00009c(%esp)
		add    0x000088(%esp),%ebx
		mov    (%ebx),%bl
		and    $_0000ff_case,%edx
		mov    %bl,0x0000a8(%esp)

	_046d75_jump:
		dec    %edx
		cmp    $0xffffffff,%edx
		je     _046dad_jump
		xor    %ebx,%ebx
		mov    0x000000(%ebp),%bx
		imul   %esi,%ebx
		mov    %eax,%ecx
		add    %ecx,%ebx
		mov    0x0000a8(%esp),%cl
		inc    %eax
		mov    %cl,(%edi,%ebx,1)
		jmp    _046d75_jump

	_046d95_jump:
		xor    %edx,%edx
		mov    0x000000(%ebp),%dx
		imul   %esi,%edx
		mov    %eax,%ebx
		add    %ebx,%edx
		mov    0x0000a8(%esp),%bl
		inc    %eax
		mov    %bl,(%edx,%edi,1)

	_046dad_jump:
		xor    %edx,%edx
		mov    0x0000a0(%esp),%dx
		cmp    %edx,%eax
		jb     _046d20_jump
		inc    %esi

	_046dc0_jump:
		mov    0x000084(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%ax
		cmp    %eax,%esi
		jb     _046d1e_jump
		mov    0x000088(%esp),%eax
		call   _07f2f0_func
		jmp    _046dec_jump

	_046de2_jump:
		mov    $_0c0db8_data,%eax
		call   _01f474_func

	_046dec_jump:
		mov    0x000094(%esp),%eax
		call   _07f2f0_func
		mov    %edi,%eax
		add    $0x0000ac,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_046e04_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    %edx,(%esp)
		call   _01cc5c_func
		mov    $0x000064,%eax
		call   _07f158_func
		mov    _0cf2e8_data,%dx
		mov    %eax,%ebp
		test   %dx,%dx
		je     _046e38_jump
		mov    _0c0c68_data,%edx
		mov    %edx,(%eax)
		jmp    _046e3b_jump

	_046e38_jump:
		movb   $0x000000,(%eax)

	_046e3b_jump:
		mov    $_0c0d74_data,%esi
		mov    %ebp,%edi
		mov    $_0c0c78_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_046e50_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _046e68_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _046e50_jump

	_046e68_jump:
		pop    %edi
		mov    %ebp,%eax
		call   _0810de_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _046e9f_jump
		mov    $0x0000c8,%eax
		call   _07f158_func
		push   %ebp
		push   $_0c0d80_data
		push   %eax
		mov    %eax,%edx
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func

	_046e9f_jump:
		lea    0x000000(,%ebx,4),%edi
		sub    %ebx,%edi
		shl    $0x000002,%edi
		mov    _09215c_data(%edi),%eax
		add    _092160_data(%edi),%eax
		lea    -0x000300(%eax),%edx
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _08050a_func
		mov    $0x000001,%ebx
		mov    $0x000300,%edx
		mov    (%esp),%eax
		call   _0802ed_func
		mov    %esi,%eax
		mov    (%esp),%ebx
		call   _081192_func
		mov    %edi,%esi
		lea    0x000300(%ebx),%ecx

	_046eec_jump:
		mov    _092164_data(%esi),%dl
		mov    (%ebx),%ah
		xor    %dl,%ah
		xor    %edx,%edx
		mov    %ah,%dl
		mov    %ah,(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		inc    %ebx
		mov    %al,-0x000001(%ebx)
		cmp    %ecx,%ebx
		jne    _046eec_jump
		mov    %ebp,%eax
		call   _07f2f0_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_046f24_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000c0,%esp
		mov    %eax,0x000080(%esp)
		cmpb   $0x000000,_0cf412_data
		je     _0474fb_jump
		call   _01cc5c_func
		mov    $0x000064,%eax
		xor    %dl,%dl
		call   _07f158_func
		mov    %dl,0x0000b4(%esp)
		mov    _0cf2e8_data,%dx
		mov    %eax,0x000084(%esp)
		test   %dx,%dx
		je     _046f79_jump
		mov    _0c0c68_data,%edx
		mov    %edx,(%eax)
		jmp    _046f7c_jump

	_046f79_jump:
		movb   $0x000000,(%eax)

	_046f7c_jump:
		mov    $_0c0d74_data,%esi
		mov    0x000084(%esp),%edi
		mov    $_0c0c78_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_046f96_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _046fae_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _046f96_jump

	_046fae_jump:
		pop    %edi
		mov    %edi,%eax
		call   _0810de_func
		mov    %eax,0x0000a0(%esp)
		test   %eax,%eax
		jne    _046fea_jump
		mov    $0x0000c8,%eax
		call   _07f158_func
		push   %edi
		push   $_0c0d80_data
		push   %eax
		mov    %eax,%edx
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func

	_046fea_jump:
		mov    0x000080(%esp),%edx
		lea    0x000000(,%edx,4),%esi
		sub    %edx,%esi
		mov    0x0000a0(%esp),%ecx
		shl    $0x000002,%esi
		xor    %ebx,%ebx
		mov    _092165_data(%esi),%al
		mov    _09215c_data(%esi),%edx
		mov    %al,0x0000b8(%esp)
		mov    0x0000a0(%esp),%eax
		mov    _092160_data(%esi),%ebp
		call   _08050a_func
		mov    $0x000001,%ebx
		mov    $0x000080,%edx
		mov    %esp,%eax
		sub    $0x000080,%ebp
		call   _0802ed_func
		mov    %esi,%ebx
		xor    %eax,%eax

	_047046_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000b8(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000b8(%esp)
		mov    _092164_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _047046_jump
		mov    0x000008(%esp),%edi
		mov    0x00000a(%esp),%eax
		mov    0x000006(%esp),%ecx
		mov    0x000004(%esp),%ebx
		sub    %ecx,%eax
		sub    %ebx,%edi
		inc    %eax
		mov    _0cf412_data,%ch
		mov    %eax,0x0000b0(%esp)
		mov    0x000042(%esp),%eax
		inc    %edi
		mov    %eax,0x0000ac(%esp)
		cmp    $0x000002,%ch
		jne    _0470cd_jump
		mov    _0ccad8_data,%eax
		mov    _0ccae4_data,%esi
		mov    %eax,0x000088(%esp)
		cmp    $0x01f400,%ebp
		jle    _0470e1_jump
		mov    $0x000001,%al
		mov    $0x01f400,%ebp
		mov    %al,0x0000b4(%esp)
		jmp    _0470e1_jump

	_0470cd_jump:
		mov    %ebp,%eax
		call   _07f158_func
		mov    _0cd22c_data,%esi
		mov    %eax,0x000088(%esp)

	_0470e1_jump:
		mov    0x0000a0(%esp),%ecx
		mov    $0x000001,%edx
		mov    0x000088(%esp),%eax
		mov    %ebp,%ebx
		call   _0802ed_func
		mov    0x0000a0(%esp),%eax
		call   _081192_func
		xor    %edx,%edx
		test   %ebp,%ebp
		jle    _047143_jump
		mov    0x000080(%esp),%eax
		lea    0x000000(,%eax,4),%ecx
		sub    %eax,%ecx
		mov    0x000088(%esp),%eax
		shl    $0x000002,%ecx

	_047127_jump:
		mov    (%eax),%bl
		sub    %bl,0x0000b8(%esp)
		mov    _092164_data(%ecx),%bl
		mov    (%eax),%bh
		inc    %eax
		xor    %bl,%bh
		inc    %edx
		mov    %bh,-0x000001(%eax)
		cmp    %ebp,%edx
		jl     _047127_jump

	_047143_jump:
		cmpb   $0x000000,0x0000b4(%esp)
		jne    _04718f_jump
		cmpb   $0x000000,0x0000b8(%esp)
		je     _04718f_jump
		mov    $0x0000c8,%eax
		mov    0x000080(%esp),%ecx
		call   _07f158_func
		push   %ecx
		mov    0x000088(%esp),%ebp
		push   %ebp
		push   $_0c0de4_data
		push   %eax
		mov    %eax,%edx
		call   _07fceb_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func

	_04718f_jump:
		mov    0x000084(%esp),%eax
		call   _07f2f0_func
		test   %esi,%esi
		je     _0474ad_jump
		cmpl   $0x000000,0x000088(%esp)
		je     _0474ad_jump
		cmpb   $0x000002,_0cf412_data
		je     _0471c7_jump
		cmpb   $0x000001,_0cf40b_data
		jne    _047342_jump

	_0471c7_jump:
		xor    %ecx,%ecx
		mov    0x0000b0(%esp),%eax
		mov    %ecx,0x000094(%esp)
		mov    %ecx,0x00009c(%esp)
		cmp    $0x0000c8,%ax
		jbe    _047218_jump
		xor    %eax,%eax
		mov    0x0000b0(%esp),%ax
		mov    $0x0000c8,%edx
		sub    $0x0000c8,%eax
		mov    %edx,0x0000b0(%esp)
		mov    0x0000b4(%esp),%dl
		mov    %eax,0x000094(%esp)
		test   %dl,%dl
		je     _047218_jump
		mov    %ecx,0x000094(%esp)

	_047218_jump:
		cmp    $0x000140,%di
		jbe    _047224_jump
		mov    $0x000140,%edi

	_047224_jump:
		xor    %edx,%edx
		mov    %edx,0x0000a4(%esp)
		jmp    _047302_jump

	_047232_jump:
		mov    0x000094(%esp),%ecx
		mov    %ebx,%edx
		xor    %eax,%eax
		sub    %ecx,%edx

	_04723f_jump:
		mov    0x00009c(%esp),%ebx
		mov    0x000088(%esp),%ecx
		lea    0x000001(%ebx),%ebp
		add    %ecx,%ebx
		mov    (%ebx),%bl
		mov    %bl,0x0000bc(%esp)
		and    $0x0000c0,%bl
		mov    %ebp,0x00009c(%esp)
		cmp    $0x0000c0,%bl
		jne    _0472c4_jump
		mov    0x0000bc(%esp),%bl
		and    $0x00003f,%bl
		mov    %ebp,%ecx
		inc    %ebp
		mov    %ebp,0x00009c(%esp)
		add    0x000088(%esp),%ecx
		mov    (%ecx),%cl
		and    $_0000ff_case,%ebx
		mov    %cl,0x0000bc(%esp)

	_047294_jump:
		dec    %ebx
		cmp    $0xffffffff,%ebx
		je     _0472e9_jump
		xor    %ecx,%ecx
		mov    %di,%cx
		cmp    %ecx,%eax
		jge    _0472c1_jump
		test   %edx,%edx
		jl     _0472c1_jump
		cmp    $0x0000c8,%edx
		jge    _0472c1_jump
		imul   %edx,%ecx
		add    %eax,%ecx
		lea    (%esi,%ecx,1),%ebp
		mov    0x0000bc(%esp),%cl
		mov    %cl,0x000000(%ebp)

	_0472c1_jump:
		inc    %eax
		jmp    _047294_jump

	_0472c4_jump:
		xor    %ebx,%ebx
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _0472e8_jump
		test   %edx,%edx
		jl     _0472e8_jump
		cmp    $0x0000c8,%edx
		jge    _0472e8_jump
		imul   %edx,%ebx
		add    %eax,%ebx
		mov    0x0000bc(%esp),%cl
		mov    %cl,(%esi,%ebx,1)

	_0472e8_jump:
		inc    %eax

	_0472e9_jump:
		xor    %ebx,%ebx
		mov    0x0000ac(%esp),%bx
		cmp    %ebx,%eax
		jl     _04723f_jump
		incl   0x0000a4(%esp)

	_047302_jump:
		xor    %eax,%eax
		mov    0x000094(%esp),%edx
		mov    0x0000b0(%esp),%ax
		mov    0x0000a4(%esp),%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jg     _047232_jump
		cmpb   $0x000002,_0cf412_data
		je     _0474b7_jump
		mov    0x000088(%esp),%eax
		call   _07f2f0_func
		jmp    _0474b7_jump

	_047342_jump:
		xor    %edx,%edx
		mov    %edx,0x000098(%esp)
		mov    %edx,0x0000a8(%esp)
		jmp    _047486_jump

	_047357_jump:
		xor    %eax,%eax

	_047359_jump:
		mov    0x000098(%esp),%edx
		mov    0x000088(%esp),%ebp
		lea    0x000001(%edx),%ecx
		add    %ebp,%edx
		mov    (%edx),%dl
		mov    %dl,%dh
		and    $0x0000c0,%dh
		mov    %ecx,0x000098(%esp)
		cmp    $0x0000c0,%dh
		jne    _04741d_jump
		and    $0x00003f,%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %ecx,%edx
		inc    %ecx
		add    %ebp,%edx
		mov    %ecx,0x000098(%esp)
		mov    (%edx),%dl

	_047398_jump:
		dec    %ebx
		cmp    $0xffffffff,%ebx
		je     _04746d_jump
		mov    _095de5_data,%dh
		lea    0x000001(%eax),%ecx
		test   %dh,%dh
		jne    _0473f8_jump
		movzwl %di,%ebp
		mov    %ebp,0x00008c(%esp)
		add    %ebp,%ebp
		imul   0x0000a8(%esp),%ebp
		mov    %ebp,0x000090(%esp)
		add    %eax,%ebp
		add    %esi,%ebp
		mov    %dl,0x000000(%ebp)
		mov    0x000090(%esp),%ebp
		add    0x00008c(%esp),%ebp
		mov    %ebp,0x000090(%esp)
		mov    %eax,%ebp
		mov    %ecx,%eax
		mov    0x000090(%esp),%ecx
		add    %ebp,%ecx
		mov    %dl,(%ecx,%esi,1)
		jmp    _047398_jump

	_0473f8_jump:
		movzwl %di,%ebp
		imul   0x0000a8(%esp),%ebp
		mov    %ebp,0x000090(%esp)
		mov    %eax,%ebp
		mov    %ecx,%eax
		add    0x000090(%esp),%ebp
		mov    %dl,(%esi,%ebp,1)
		jmp    _047398_jump

	_04741d_jump:
		mov    _095de5_data,%dh
		lea    0x000001(%eax),%ecx
		test   %dh,%dh
		jne    _047455_jump
		xor    %ebx,%ebx
		mov    %di,%bx
		mov    0x0000a8(%esp),%ebp
		mov    %ebx,0x000090(%esp)
		add    %ebx,%ebx
		imul   %ebp,%ebx
		lea    (%ebx,%eax,1),%ebp
		add    %esi,%ebp
		mov    %dl,0x000000(%ebp)
		add    0x000090(%esp),%ebx
		mov    %eax,%ebp
		jmp    _047466_jump

	_047455_jump:
		xor    %ebx,%ebx
		mov    0x0000a8(%esp),%ebp
		mov    %di,%bx
		imul   %ebx,%ebp
		mov    %eax,%ebx

	_047466_jump:
		add    %ebp,%ebx
		mov    %ecx,%eax
		mov    %dl,(%esi,%ebx,1)

	_04746d_jump:
		xor    %edx,%edx
		mov    0x0000ac(%esp),%dx
		cmp    %edx,%eax
		jl     _047359_jump
		incl   0x0000a8(%esp)

	_047486_jump:
		xor    %eax,%eax
		mov    0x0000a8(%esp),%ebx
		mov    0x0000b0(%esp),%ax
		cmp    %ebx,%eax
		jg     _047357_jump
		mov    0x000088(%esp),%eax
		call   _07f2f0_func
		jmp    _0474b7_jump

	_0474ad_jump:
		mov    $_0c0e08_data,%eax
		call   _01f474_func

	_0474b7_jump:
		cmpb   $0x000000,_095de5_data
		jne    _0474e2_jump
		mov    _0cd1dc_data,%eax
		add    %edi,%edi
		mov    %eax,_0cd22c_data
		mov    0x0000b0(%esp),%eax
		mov    %di,_0cf1d6_data
		mov    %ax,_0cf1da_data
		jmp    _0474fb_jump

	_0474e2_jump:
		mov    _0cd22c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x0000b0(%esp),%bx
		mov    %di,%dx
		call   _047568_func

	_0474fb_jump:
		add    $0x0000c0,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_047508_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %ebx,%esi
		cmpb   $0x000002,_0cf412_data
		jne    _047526_jump
		mov    _0ccae4_data,%esi
		mov    _0ccad8_data,%edx
		jmp    _04755a_jump

	_047526_jump:
		xor    %ebx,%ebx
		xor    %edi,%edi
		mov    %dx,%bx
		mov    %si,%di
		mov    %ebx,%edx
		imul   %edi,%edx
		mov    %ecx,%eax
		call   _07ee30_func
		lea    0x000000(,%ebx,2),%edx
		imul   %edx,%edi
		mov    %eax,%esi
		lea    0x000000(,%ebx,8),%edx
		mov    %ecx,%eax
		add    %edi,%edx
		call   _07ee30_func
		mov    %eax,%edx

	_04755a_jump:
		mov    %edx,_0cd1dc_data
		mov    %esi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_047568_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%esi
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x000018(%esp)
		xor    %eax,%eax
		mov    %dx,_0cf1d6_data
		mov    %dx,%ax
		xor    %edx,%edx
		mov    %bx,%dx
		mov    %eax,_0cd1bc_data
		imul   %edx,%eax
		mov    %bx,_0cf1da_data
		mov    %esi,0x000004(%esp)
		mov    _0cd1dc_data,%esi
		mov    %eax,_0cd1d0_data
		test   %esi,%esi
		jne    _0475b6_jump
		mov    $_0c0e2c_data,%eax
		call   _01f474_func

	_0475b6_jump:
		xor    %edi,%edi
		jmp    _047663_jump

	_0475bd_jump:
		mov    _0cd1bc_data,%edx
		xor    %eax,%eax
		test   %edx,%edx
		jbe    _047662_jump

	_0475cd_jump:
		mov    %eax,%edx
		mov    _0cd1d0_data,%ebx
		and    $0x000003,%edx
		shr    %ebx
		imul   %ebx,%edx
		mov    %ebx,0x00000c(%esp)
		mov    %eax,%ebx
		shr    $0x000002,%ebx
		mov    %ebx,0x000010(%esp)
		add    %edx,%ebx
		mov    _0cd1bc_data,%edx
		mov    %edi,%ebp
		shr    %edx
		imul   %edx,%ebp
		mov    %ebp,0x000008(%esp)
		lea    (%ebx,%ebp,1),%edx
		xor    %ebx,%ebx
		mov    0x000014(%esp),%bx
		imul   %edi,%ebx
		mov    0x000004(%esp),%ebp
		add    %eax,%ebx
		add    %ebp,%ebx
		mov    _0cd1bc_data,%ebp
		mov    (%ebx),%cl
		shr    $0x000002,%ebp
		mov    %cl,(%edx,%esi,1)
		add    %ebp,%edx
		mov    %ebp,(%esp)
		lea    (%esi,%edx,1),%ebp
		mov    %cl,0x000000(%ebp)
		cmp    $0x000010,%edi
		jae    _047653_jump
		mov    0x00000c(%esp),%edx
		mov    0x000010(%esp),%ebp
		shl    $0x000002,%edx
		mov    0x000008(%esp),%ecx
		add    %ebp,%edx
		add    %ecx,%edx
		mov    (%ebx),%cl
		mov    (%esp),%ebp
		mov    %cl,(%edx,%esi,1)
		add    %ebp,%edx
		lea    (%esi,%edx,1),%ebp
		mov    %cl,0x000000(%ebp)

	_047653_jump:
		mov    _0cd1bc_data,%ebx
		inc    %eax
		cmp    %ebx,%eax
		jb     _0475cd_jump

	_047662_jump:
		inc    %edi

	_047663_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		cmp    %eax,%edi
		jb     _0475bd_jump
		mov    _0cd1bc_data,%eax
		mov    _0cd1d0_data,%edx
		shr    %eax
		add    %edx,%edx
		mov    %eax,_0cd1bc_data
		mov    %edx,_0cd1d0_data
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_047694_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		call   _01cc5c_func
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		mov    %edi,%eax
		call   _046ab0_func
		mov    $_0c7338_data,%edx
		mov    $0x000300,%ecx
		mov    $_0c6a38_data,%edi
		mov    %eax,_0cd1cc_data
		mov    %esi,%eax
		mov    $_0c7338_data,%esi
		call   _046e04_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		mov    0x000004(%esp),%ax
		mov    %eax,_0cd1b0_data
		mov    %eax,_0cd1c8_data
		xor    %eax,%eax
		mov    _0cd1c8_data,%esi
		mov    (%esp),%ax
		imul   %eax,%esi
		mov    _0cd1c8_data,%edx
		shr    $0x000002,%edx
		mov    %ax,_0cf1d8_data
		mov    %edx,_0cd1c8_data
		mov    _0cd1cc_data,%eax
		mov    %esi,_0cd1c4_data
		mov    %eax,_0cd1e0_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_047730_func:
		push   %ebx
		push   %ecx
		cmpb   $0x00002c,(%eax)
		je     _047755_jump

	_047737_jump:
		mov    (%eax),%cl
		cmp    $0x00002a,%cl
		je     _047755_jump
		lea    0x000001(%eax),%ebx
		cmp    $0x000020,%cl
		jb     _04774e_jump
		inc    %edx
		mov    %ebx,%eax
		mov    %cl,-0x000001(%edx)
		jmp    _047750_jump

	_04774e_jump:
		mov    %ebx,%eax

	_047750_jump:
		cmpb   $0x00002c,(%eax)
		jne    _047737_jump

	_047755_jump:
		cmpb   $0x00002a,(%eax)
		jne    _04775f_jump
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_04775f_jump:
		inc    %eax
		movb   $0x000000,(%edx)
		pop    %ecx
		pop    %ebx
		ret    



_047768_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ebx
		mov    %edx,0x000008(%esp)
		call   _01cc5c_func
		mov    $0x000064,%eax
		mov    $_0c0c78_data,%edx
		mov    $_0c0e5c_data,%esi
		call   _07f158_func
		mov    %eax,%edi
		mov    %eax,%ecx
		mov    %eax,0x000004(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   _0810de_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _0477cd_jump
		mov    $0x0000c8,%eax
		call   _07f158_func
		push   %ecx
		push   $_0c0d80_data
		push   %eax
		mov    %eax,%edx
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func

	_0477cd_jump:
		mov    0x000008(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0924b9_data(,%eax,4),%dl
		mov    _0924b4_data(,%eax,4),%eax
		mov    %dl,0x000014(%esp)
		mov    %eax,0x000010(%esp)
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _07ee30_func
		mov    %eax,%edx
		mov    %eax,%esi
		mov    $0x000190,%eax
		call   _07f158_func
		mov    %eax,%edi
		mov    %eax,(%esp)
		test   %edx,%edx
		je     _047814_jump
		test   %eax,%eax
		jne    _04781e_jump

	_047814_jump:
		mov    $_0c0e64_data,%eax
		call   _01f474_func

	_04781e_jump:
		mov    0x000008(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%esp)
		mov    _0924b0_data(%eax),%edx
		mov    %ebp,%eax
		mov    %ebp,%ecx
		call   _08050a_func
		mov    0x000010(%esp),%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0802ed_func
		mov    %ebp,%eax
		mov    0x000010(%esp),%edx
		call   _081192_func
		test   %edx,%edx
		jbe    _047886_jump
		mov    0x00000c(%esp),%edx
		mov    0x000010(%esp),%ecx
		mov    %esi,%eax
		add    %esi,%ecx

	_04786e_jump:
		mov    (%eax),%bl
		sub    %bl,0x000014(%esp)
		mov    _0924b8_data(%edx),%bl
		mov    (%eax),%bh
		inc    %eax
		xor    %bl,%bh
		mov    %bh,-0x000001(%eax)
		cmp    %ecx,%eax
		jb     _04786e_jump

	_047886_jump:
		cmpb   $0x000000,0x000014(%esp)
		je     _0478ba_jump
		mov    $0x0000c8,%eax
		mov    0x000004(%esp),%ebx
		call   _07f158_func
		push   %ebx
		push   $_0c0ca0_data
		push   %eax
		mov    %eax,%edx
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func

	_0478ba_jump:
		mov    %esi,%ecx
		xor    %ebx,%ebx

	_0478be_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		call   _047730_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _0478e3_jump
		xor    %edx,%edx
		mov    %bx,%dx
		inc    %ebx
		mov    %ecx,_0c2858_data(,%edx,4)
		lea    0x000002(%eax),%ecx
		movb   $0x000000,-0x000001(%eax)
		jmp    _0478be_jump

	_0478e3_jump:
		mov    (%esp),%eax
		call   _07f2f0_func
		mov    0x000004(%esp),%eax
		call   _07f2f0_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_047900_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000a8,%esp
		mov    %eax,%ebp
		mov    %edx,0x000080(%esp)
		mov    %ebx,0x000094(%esp)
		mov    %ecx,0x000088(%esp)
		call   _01cc5c_func
		mov    $0x000064,%eax
		call   _07f158_func
		mov    _0cf2e8_data,%dx
		mov    %eax,0x000084(%esp)
		test   %dx,%dx
		je     _04794c_jump
		mov    _0c0c68_data,%edx
		mov    %edx,(%eax)
		jmp    _04794f_jump

	_04794c_jump:
		movb   $0x000000,(%eax)

	_04794f_jump:
		mov    $_0c0d74_data,%esi
		mov    0x000084(%esp),%edi
		mov    $_0c0c78_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_047969_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _047981_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _047969_jump

	_047981_jump:
		pop    %edi
		mov    %edi,%eax
		call   _0810de_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _0479b8_jump
		mov    $0x0000c8,%eax
		call   _07f158_func
		push   %edi
		push   $_0c0d80_data
		push   %eax
		mov    %eax,%edx
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func

	_0479b8_jump:
		mov    0x000080(%esp),%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000002,%edi
		mov    _092165_data(%edi),%al
		mov    %al,0x0000a0(%esp)
		mov    _092160_data(%edi),%eax
		xor    %ebx,%ebx
		sub    $0x000080,%eax
		mov    _09215c_data(%edi),%edx
		mov    %eax,0x000090(%esp)
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _08050a_func
		mov    $0x000001,%ebx
		mov    $0x000080,%edx
		mov    %esp,%eax
		call   _0802ed_func
		mov    %edi,%ebx
		xor    %eax,%eax

	_047a10_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000a0(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000a0(%esp)
		mov    _092164_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _047a10_jump
		mov    0x000008(%esp),%eax
		sub    0x000004(%esp),%eax
		mov    0x000094(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x00000a(%esp),%eax
		sub    0x000006(%esp),%eax
		mov    0x000088(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x000090(%esp),%ebx
		mov    0x000042(%esp),%eax
		mov    %esi,%ecx
		mov    %eax,0x00009c(%esp)
		mov    0x000090(%esp),%eax
		mov    $0x000001,%edx
		call   _07f158_func
		mov    %eax,%edi
		mov    %eax,0x00008c(%esp)
		call   _0802ed_func
		mov    %esi,%eax
		mov    0x000090(%esp),%ecx
		call   _081192_func
		test   %ecx,%ecx
		jbe    _047adf_jump
		mov    0x000080(%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		lea    (%ecx,%edi,1),%esi
		shl    $0x000002,%ebx
		mov    %edi,%eax

	_047abd_jump:
		mov    0x0000a0(%esp),%ch
		sub    (%eax),%ch
		mov    _092164_data(%ebx),%dl
		mov    (%eax),%dh
		inc    %eax
		xor    %dl,%dh
		mov    %ch,0x0000a0(%esp)
		mov    %dh,-0x000001(%eax)
		cmp    %esi,%eax
		jb     _047abd_jump

	_047adf_jump:
		cmpb   $0x000000,0x0000a0(%esp)
		je     _047b21_jump
		mov    $0x0000c8,%eax
		mov    0x000080(%esp),%esi
		call   _07f158_func
		push   %esi
		mov    0x000088(%esp),%edi
		push   %edi
		push   $_0c0e84_data
		push   %eax
		mov    %eax,%edx
		call   _07fceb_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _01f474_func
		mov    %edx,%eax
		call   _07f2f0_func

	_047b21_jump:
		test   %ebp,%ebp
		je     _047c14_jump
		cmpl   $0x000000,0x00008c(%esp)
		je     _047c14_jump
		xor    %edx,%edx
		xor    %esi,%esi
		mov    %edx,0x000098(%esp)
		jmp    _047bf2_jump

	_047b47_jump:
		xor    %eax,%eax

	_047b49_jump:
		mov    0x000098(%esp),%edx
		mov    0x00008c(%esp),%ecx
		lea    0x000001(%edx),%ebx
		add    %ecx,%edx
		mov    (%edx),%dl
		mov    %dl,0x0000a4(%esp)
		and    $0x0000c0,%dl
		mov    %ebx,0x000098(%esp)
		cmp    $0x0000c0,%dl
		jne    _047bc1_jump
		mov    0x0000a4(%esp),%dl
		and    $0x00003f,%dl
		lea    0x000001(%ebx),%edi
		add    %ecx,%ebx
		and    $_0000ff_case,%edx
		mov    (%ebx),%bl
		mov    %edi,0x000098(%esp)
		mov    %bl,0x0000a4(%esp)

	_047b99_jump:
		dec    %edx
		cmp    $0xffffffff,%edx
		je     _047bdf_jump
		mov    0x000094(%esp),%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%bx
		mov    %ebx,%ecx
		imul   %esi,%ecx
		mov    %eax,%ebx
		add    %ecx,%ebx
		mov    0x0000a4(%esp),%cl
		inc    %eax
		mov    %cl,(%ebx,%ebp,1)
		jmp    _047b99_jump

	_047bc1_jump:
		mov    0x000094(%esp),%ebx
		xor    %edx,%edx
		mov    (%ebx),%dx
		imul   %esi,%edx
		mov    %eax,%ebx
		add    %ebx,%edx
		mov    0x0000a4(%esp),%bl
		inc    %eax
		mov    %bl,(%edx,%ebp,1)

	_047bdf_jump:
		xor    %edx,%edx
		mov    0x00009c(%esp),%dx
		cmp    %edx,%eax
		jb     _047b49_jump
		inc    %esi

	_047bf2_jump:
		mov    0x000088(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%ax
		cmp    %eax,%esi
		jb     _047b47_jump
		mov    0x00008c(%esp),%eax
		call   _07f2f0_func
		jmp    _047c1e_jump

	_047c14_jump:
		mov    $_0c0ea8_data,%eax
		call   _01f474_func

	_047c1e_jump:
		mov    0x000084(%esp),%eax
		call   _07f2f0_func
		mov    %ebp,%eax
		add    $0x0000a8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_047c40_func:
		push   %ebx
		push   %ecx
		push   %edx
		testb  $0x000004,_0cf221_data
		je     _047cb4_jump
		mov    _0cca54_data,%eax
		mov    %eax,_0cca20_data
		mov    _0cca50_data,%eax
		mov    %eax,_0cca1c_data
		mov    _0cca4c_data,%eax
		mov    %eax,_0cca28_data
		mov    _0cca48_data,%eax
		mov    %eax,_0cca24_data
		mov    _0cca30_data,%eax
		mov    %eax,_0cca54_data
		mov    _0cca2c_data,%eax
		mov    %eax,_0cca50_data
		mov    _0cca40_data,%eax
		mov    _0cca54_data,%ecx
		mov    %eax,_0cca4c_data
		mov    _0cca34_data,%eax
		mov    _0cca50_data,%edx
		mov    %eax,_0cca48_data
		mov    %eax,%ebx
		mov    _0cca4c_data,%eax
		call   _01614e_func

	_047cb4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_047cb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		testb  $0x000004,_0cf221_data
		je     _047d26_jump
		mov    $0x000023,%ebx
		mov    _0cf226_data,%dx
		mov    $0x00004d,%eax
		test   %dx,%dx
		je     _047ced_jump
		mov    $0x000055,%eax
		xor    %ecx,%ecx
		mov    $0x000041,%ebx
		mov    %cx,_0cf226_data

	_047ced_jump:
		push   $0x000000
		movswl %bx,%ecx
		xor    %edx,%edx
		push   $_0000ff_case
		movswl %ax,%ebx
		mov    $0x00000d,%eax
		call   _019f3c_func
		push   $0x000000
		mov    $0x000017,%ecx
		mov    $0x000044,%ebx
		push   $_0000ff_case
		mov    $0x000004,%edx
		mov    $0x0000f1,%eax
		call   _019f3c_func

	_047d26_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_047d2c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cca24_data,%edi
		mov    _0cca20_data,%ebp
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    _0cf1b8_data,%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		mov    %ecx,%esi
		sub    %eax,%edx
		add    %eax,%ebx
		sub    %eax,%esi
		add    %eax,%ecx
		cmp    %ebp,%esi
		jge    _047d5b_jump
		mov    %ebp,%esi

	_047d5b_jump:
		cmp    _0cca1c_data,%esi
		jle    _047d69_jump
		mov    _0cca1c_data,%esi

	_047d69_jump:
		cmp    _0cca28_data,%edx
		jge    _047d77_jump
		mov    _0cca28_data,%edx

	_047d77_jump:
		cmp    %edi,%edx
		jle    _047d7d_jump
		mov    %edi,%edx

	_047d7d_jump:
		cmp    _0cca1c_data,%ecx
		jle    _047d8b_jump
		mov    _0cca1c_data,%ecx

	_047d8b_jump:
		cmp    %ebp,%ecx
		jge    _047d91_jump
		mov    %ebp,%ecx

	_047d91_jump:
		cmp    %edi,%ebx
		jle    _047d97_jump
		mov    %edi,%ebx

	_047d97_jump:
		cmp    _0cca28_data,%ebx
		jge    _047da5_jump
		mov    _0cca28_data,%ebx

	_047da5_jump:
		mov    %ebp,_0cca20_data
		mov    %edi,_0cca24_data
		mov    %esi,_0cca30_data
		mov    %ecx,_0cca2c_data
		mov    %ebx,_0cca34_data
		mov    %edx,_0cca40_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_047dd0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000005,%ecx
		xor    %ebx,%ebx
		mov    $0x00000f,%esi
		mov    %bx,_0cf1d4_data
		mov    _0cca54_data,%ebx
		xor    %edi,%edi
		mov    %ebx,_0cca20_data
		mov    _0cca50_data,%ebx
		mov    %cx,_0cf1c4_data
		mov    %ebx,_0cca1c_data
		mov    _0cca4c_data,%ebx
		mov    %si,_0cf1c2_data
		mov    %ebx,_0cca28_data
		mov    _0cca48_data,%ebx
		mov    %di,_0cf1ba_data
		mov    %ebx,_0cca24_data
		call   _047d2c_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_047e38_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%ebp
		mov    %ecx,%esi
		mov    _0cf1b8_data,%ecx
		mov    _0cf1c0_data,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		add    %edx,%ecx
		mov    %eax,%edx
		sub    %ecx,%edx
		mov    %edx,0x000008(%esp)
		add    %eax,%ecx
		mov    %eax,%edx
		mov    0x000008(%esp),%edi
		sub    %ebx,%edx
		cmp    _0cca28_data,%edi
		jge    _047e7a_jump
		mov    _0cca28_data,%edi
		mov    %edi,0x000008(%esp)

	_047e7a_jump:
		mov    _0cca24_data,%edi
		cmp    %edi,%edx
		jl     _047e86_jump
		mov    %edi,%edx

	_047e86_jump:
		mov    0x000008(%esp),%edi
		sub    %edi,%edx
		mov    %edx,0x000004(%esp)
		lea    (%eax,%ebx,1),%edx
		mov    _0cca24_data,%eax
		cmp    %eax,%ecx
		jl     _047e9e_jump
		mov    %eax,%ecx

	_047e9e_jump:
		mov    _0cca28_data,%ebx
		cmp    %ebx,%edx
		jge    _047eaa_jump
		mov    %ebx,%edx

	_047eaa_jump:
		sub    %edx,%ecx
		mov    %ecx,(%esp)
		cmpl   $0x000000,0x000004(%esp)
		jle    _047f43_jump
		mov    %ebp,%eax
		mov    _0cca20_data,%edi
		sub    %esi,%eax
		cmp    %edi,%eax
		jl     _047eff_jump
		cmp    _0cca1c_data,%eax
		jge    _047eff_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000008(%esp),%edi
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %ecx,%edi
		mov    0x000004(%esp),%ecx
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _047ef6_jump
		rep stos %al,%es:(%edi)

	_047ef6_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _047eff_jump
		rep stos %eax,%es:(%edi)

	_047eff_jump:
		mov    _0cca20_data,%edi
		lea    (%esi,%ebp,1),%eax
		cmp    %edi,%eax
		jl     _047f43_jump
		cmp    _0cca1c_data,%eax
		jge    _047f43_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000008(%esp),%edi
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %ecx,%edi
		mov    0x000004(%esp),%ecx
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _047f3a_jump
		rep stos %al,%es:(%edi)

	_047f3a_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _047f43_jump
		rep stos %eax,%es:(%edi)

	_047f43_jump:
		cmpl   $0x000000,(%esp)
		jle    _047fcd_jump
		mov    %ebp,%eax
		mov    _0cca20_data,%ebx
		sub    %esi,%eax
		cmp    %ebx,%eax
		jl     _047f8d_jump
		cmp    _0cca1c_data,%eax
		jge    _047f8d_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax
		mov    (%esp),%ecx
		add    %eax,%edi
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _047f84_jump
		rep stos %al,%es:(%edi)

	_047f84_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _047f8d_jump
		rep stos %eax,%es:(%edi)

	_047f8d_jump:
		mov    _0cca20_data,%edi
		add    %ebp,%esi
		cmp    %edi,%esi
		jl     _047fcd_jump
		cmp    _0cca1c_data,%esi
		jge    _047fcd_jump
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax
		mov    (%esp),%ecx
		add    %eax,%edi
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _047fc4_jump
		rep stos %al,%es:(%edi)

	_047fc4_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _047fcd_jump
		rep stos %eax,%es:(%edi)

	_047fcd_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_047fd8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,0x000010(%esp)
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %ebx,%esi
		xor    %edi,%edi
		jmp    _048007_jump

	_047ff1_jump:
		mov    0x000004(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%edx
		inc    %edi
		xor    %ebx,%ebx
		push   %eax
		mov    0x000014(%esp),%eax
		inc    %esi
		call   _047e38_func

	_048007_jump:
		mov    _0cf1c0_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jle    _047ff1_jump
		xor    %edi,%edi
		mov    (%esp),%esi
		mov    %edi,0x000014(%esp)
		test   %esi,%esi
		jl     _04808a_jump
		mov    $0x000001,%edx
		lea    (%esi,%esi,1),%eax
		sub    %edx,%eax
		mov    %edx,0x000008(%esp)
		mov    %eax,0x00000c(%esp)

	_048032_jump:
		mov    0x000004(%esp),%ebx
		mov    0x000010(%esp),%eax
		mov    %esi,%ecx
		push   %ebx
		mov    %ebp,%edx
		mov    %edi,%ebx
		call   _047e38_func
		mov    0x000004(%esp),%ecx
		mov    0x000010(%esp),%eax
		mov    %esi,%ebx
		push   %ecx
		mov    %ebp,%edx
		mov    %edi,%ecx
		call   _047e38_func
		mov    0x000008(%esp),%eax
		mov    0x000014(%esp),%edx
		inc    %edi
		add    %eax,%edx
		lea    0x000002(%eax),%ebx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x000008(%esp)
		cmp    %edx,%esi
		jg     _048086_jump
		mov    0x00000c(%esp),%eax
		dec    %esi
		sub    %eax,%edx
		lea    -0x000002(%eax),%ebx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x00000c(%esp)

	_048086_jump:
		cmp    %esi,%edi
		jle    _048032_jump

	_04808a_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_048094_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		testb  $0x000004,_0cf221_data
		je     _048151_jump
		mov    _0cf1b6_data,%edx
		mov    _0cf1ba_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _0480c1_jump
		neg    %eax

	_0480c1_jump:
		mov    _0cf1be_data,%edx
		mov    %eax,%ebx
		mov    _0cf1bc_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _0480de_jump
		neg    %eax

	_0480de_jump:
		cmp    %ebx,%eax
		jge    _0480e4_jump
		mov    %ebx,%eax

	_0480e4_jump:
		mov    _0cf1b8_data,%ebx
		add    $0x000006,%eax
		mov    _0cf1ba_data,%edx
		mov    %ax,_0cf1c2_data
		mov    _0cf1be_data,%ax
		sar    $0x000010,%ebx
		mov    %ax,_0cf1c0_data
		mov    _0cf1bc_data,%ax
		sar    $0x000010,%edx
		mov    %ax,_0cf1b8_data
		mov    _0cf1bc_data,%eax
		sub    $0x000004,%ebx
		sar    $0x000010,%eax
		call   _047fd8_func
		mov    _0cca20_data,%eax
		mov    %eax,_0cca54_data
		mov    _0cca1c_data,%eax
		mov    %eax,_0cca50_data
		mov    _0cca28_data,%eax
		mov    %eax,_0cca4c_data
		mov    _0cca24_data,%eax
		mov    %eax,_0cca48_data

	_048151_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_048158_func:
		testb  $0x000004,_0cf221_data
		je     _048189_jump
		mov    _0cca20_data,%eax
		mov    %eax,_0cca54_data
		mov    _0cca1c_data,%eax
		mov    %eax,_0cca50_data
		mov    _0cca28_data,%eax
		mov    %eax,_0cca4c_data
		mov    _0cca24_data,%eax
		mov    %eax,_0cca48_data

	_048189_jump:
		ret    



_04818c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce06c_data,%cx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0ce0b8_data,%al
		mov    _0ce0ac_data,%dl
		mov    %eax,%esi
		add    %edx,%ecx
		mov    _0ce070_data,%dx
		mov    _0cf2ae_data,%ax
		add    %edx,%esi
		mov    %ecx,%edx
		sub    %eax,%edx
		sub    $0x000010,%esi
		add    $0x000008,%edx
		mov    %esi,%eax
		mov    %dx,_0cf1be_data
		sub    _0cf2b0_data,%ax
		xor    %ebx,%ebx
		mov    %ax,_0cf1bc_data
		mov    _0cf1be_data,%ax
		mov    %bx,_0cf1ca_data
		mov    %ax,_0cf1c0_data
		mov    _0cf1bc_data,%ax
		mov    %bx,_0cf1ce_data
		mov    %ax,_0cf1b8_data
		xor    %al,%al

	_048203_jump:
		xor    %edx,%edx
		mov    %al,%dl
		inc    %al
		mov    %cx,_0c2c70_data(,%edx,2)
		mov    %si,_0c2c68_data(,%edx,2)
		cmp    $0x000004,%al
		jb     _048203_jump
		mov    _095de5_data,%ah
		mov    %cx,_0cf1c8_data
		xor    %ebx,%ebx
		mov    %si,_0cf1c6_data
		mov    %bx,_0cf1cc_data
		test   %ah,%ah
		jne    _048254_jump
		mov    _0cf1ba_data,%edx
		mov    _0cf1bc_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _047dd0_func

	_048254_jump:
		mov    _0cf1c8_data,%cx
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_048260_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		cmpw   $0x000003,_0cf254_data
		je     _048510_jump
		cmpb   $0x000002,_0ce0b1_data
		jne    _048288_jump
		cmpb   $0x000009,_0ce0b0_data
		je     _04828f_jump

	_048288_jump:
		mov    $0x000001,%eax
		jmp    _048291_jump

	_04828f_jump:
		xor    %eax,%eax

	_048291_jump:
		test   %eax,%eax
		je     _048510_jump
		cmpb   $0x000003,_0ce0b1_data
		jne    _0482b2_jump
		mov    _0ce0b0_data,%bl
		cmp    $0x000016,%bl
		je     _0482b9_jump
		cmp    $0x000020,%bl
		je     _0482b9_jump

	_0482b2_jump:
		mov    $0x000001,%eax
		jmp    _0482bb_jump

	_0482b9_jump:
		xor    %eax,%eax

	_0482bb_jump:
		test   %eax,%eax
		je     _048510_jump
		cmpw   $0x000036,_0cf1ba_data
		jge    _048322_jump
		cmpw   $0x000000,_0cf2d0_data
		jne    _048322_jump
		mov    _0cf1d2_data,%eax
		sar    $0x000010,%eax
		mov    $0x000200,%edx
		call   _05d230_func
		cwtl   
		sub    %eax,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		add    %eax,%eax
		sar    $0x000009,%eax
		mov    _0cf1d4_data,%di
		mov    %ax,_0cf1ba_data
		cmp    $0x000080,%di
		jge    _04833f_jump
		mov    %edi,%eax
		add    $0x000002,%eax
		mov    %ax,_0cf1d4_data
		jmp    _04833f_jump

	_048322_jump:
		mov    _0cf3ef_data,%ch
		cmp    $0x000001,%ch
		jb     _048336_jump
		decw   _0cf1ba_data
		jmp    _04833f_jump

	_048336_jump:
		jae    _04833f_jump
		incw   _0cf1ba_data

	_04833f_jump:
		mov    _0cf1ca_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		mov    _0ce172_data,%dl
		mov    _0c2c70_data(%eax),%di
		mov    _0c2c68_data(%eax),%si
		test   %dl,%dl
		je     _048390_jump
		mov    _0ce0d0_data,%edx
		xor    %ebx,%ebx
		mov    0x000068(%edx),%bl
		mov    0x000028(%edx),%cx
		add    %ecx,%ebx
		mov    %bx,_0c2c70_data(%eax)
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%cx
		mov    0x000069(%edx),%bl
		add    %ecx,%ebx
		mov    %bx,_0c2c68_data(%eax)
		jmp    _048431_jump

	_048390_jump:
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _01d7e0_func
		mov    _0ce06c_data,%bx
		xor    %edx,%edx
		mov    _0cf1ca_data,%eax
		mov    _0ce0ac_data,%dl
		sar    $0x000010,%eax
		add    %ebx,%edx
		mov    %dx,_0c2c70_data(,%eax,2)
		xor    %edx,%edx
		mov    _0ce070_data,%cx
		mov    _0ce0b8_data,%dl
		add    %ecx,%edx
		sub    $0x000004,%edx
		mov    %dx,_0c2c68_data(,%eax,2)
		cmpw   $0x000001,0x000008(%esp)
		setg   %al
		mov    (%esp),%edx
		xor    %ah,%ah
		add    %eax,%edx
		mov    _0cf1ca_data,%eax
		sar    $0x000010,%eax
		mov    0x000004(%esp),%ebx
		mov    %dx,_0c2c70_data(,%eax,2)
		cmp    $0x000001,%bx
		setg   %al
		mov    0x00000c(%esp),%edx
		xor    %ah,%ah
		add    %eax,%edx
		mov    _0cf1ca_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0c2c68_data(,%eax,2)

	_048431_jump:
		mov    _0cf1cc_data,%ax
		inc    %eax
		mov    %eax,%edx
		xor    %ah,%dh
		mov    %ax,_0cf1cc_data
		and    $0x000003,%dl
		mov    _0cf1c8_data,%bx
		mov    %dx,_0cf1cc_data
		mov    %edi,%edx
		mov    _0cf1ca_data,%cx
		sub    %ebx,%edx
		sub    %cx,%dx
		je     _048474_jump
		test   %dx,%dx
		jle    _04846f_jump
		mov    $0x000001,%edx
		jmp    _048474_jump

	_04846f_jump:
		mov    $0xffffffff,%edx

	_048474_jump:
		mov    _0cf1c6_data,%di
		mov    %esi,%eax
		mov    _0cf1ce_data,%bx
		sub    %edi,%eax
		sub    %bx,%ax
		je     _04849c_jump
		test   %ax,%ax
		jle    _048497_jump
		mov    $0x000001,%eax
		jmp    _04849c_jump

	_048497_jump:
		mov    $0xffffffff,%eax

	_04849c_jump:
		mov    _0cf1ca_data,%cx
		add    %edx,%ecx
		mov    %cx,_0cf1ca_data
		cmp    $0x000008,%cx
		jle    _0484bb_jump
		movw   $0x000008,_0cf1ca_data

	_0484bb_jump:
		mov    _0cf1c8_data,%edx
		sar    $0x000010,%edx
		cmp    $0xfffffff8,%edx
		jge    _0484d2_jump
		movw   $0x00fff8,_0cf1ca_data

	_0484d2_jump:
		mov    _0cf1ce_data,%bx
		add    %eax,%ebx
		mov    %bx,_0cf1ce_data
		cmp    $0x000008,%bx
		jle    _0484f1_jump
		movw   $0x000008,_0cf1ce_data

	_0484f1_jump:
		mov    _0cf1cc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff8,%eax
		jge    _0485f0_jump
		movw   $0x00fff8,_0cf1ce_data
		jmp    _0485f0_jump

	_048510_jump:
		cmpw   $0x000036,_0cf1ba_data
		jl     _04853b_jump
		mov    $0x000200,%eax
		call   _06b8d0_func
		mov    _0cf1ba_data,%cx
		sub    $0x000002,%ecx
		mov    %ax,_0cf1d4_data
		mov    %cx,_0cf1ba_data

	_04853b_jump:
		mov    _0cf1d2_data,%eax
		sar    $0x000010,%eax
		call   _05d230_func
		movswl %ax,%edx
		mov    _0cf1c2_data,%eax
		sar    $0x000010,%eax
		imul   %edx,%eax
		sar    $0x000009,%eax
		mov    %ax,_0cf1ca_data
		mov    _0cf1d2_data,%eax
		sar    $0x000010,%eax
		call   _05d270_func
		mov    _0cf1c2_data,%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %edx,%eax
		sar    $0x000009,%eax
		mov    _0cf3ef_data,%cl
		mov    %ax,_0cf1ce_data
		test   %cl,%cl
		je     _0485a8_jump
		mov    _0cf1ba_data,%si
		dec    %esi
		mov    %si,_0cf1ba_data
		test   %si,%si
		jge    _0485a8_jump
		xor    %eax,%eax
		mov    %ax,_0cf1ba_data

	_0485a8_jump:
		mov    $0x000036,%eax
		call   _06b8d0_func
		mov    _0cf1d4_data,%dx
		add    %eax,%edx
		mov    %dx,_0cf1d4_data
		cmp    $0x000200,%dx
		jle    _0485f0_jump
		mov    _0cf1c4_data,%si
		xor    %ecx,%ecx
		inc    %esi
		mov    %cx,_0cf1d4_data
		mov    %si,_0cf1c4_data
		cmp    $0x00000a,%si
		jle    _0485f0_jump
		movw   $0x00000a,_0cf1c4_data

	_0485f0_jump:
		mov    _0cf1ca_data,%ax
		mov    _0cf1c8_data,%dx
		mov    _0cf1c6_data,%bx
		add    %eax,%edx
		mov    _0cf1ce_data,%ax
		mov    _0cf2ae_data,%cx
		add    %eax,%ebx
		mov    %edx,%eax
		sub    %ecx,%eax
		mov    _0cf2b0_data,%si
		add    $0x000008,%eax
		mov    %dx,_0cf1c8_data
		mov    %ax,_0cf1be_data
		mov    %ebx,%eax
		mov    %bx,_0cf1c6_data
		sub    %esi,%eax
		mov    _095de5_data,%dh
		mov    %ax,_0cf1bc_data
		test   %dh,%dh
		jne    _048663_jump
		mov    _0cf1ba_data,%edx
		mov    _0cf1bc_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _047d2c_func

	_048663_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_048670_switch:
		.long   _0486c9_case
		.long   _0486c9_case
		.long   _0486c9_case
		.long   _0486c9_case
		.long   _0486c9_case
		.long   _0486c9_case




_048688_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf40b_data,%eax
		sar    $0x000018,%eax
		mov    _0ce93d_data(%eax),%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		je     _0486a6_jump
		call   _046f24_func

	_0486a6_jump:
		cmpb   $0x000000,_095de5_data
		jne    _0486f4_jump
		mov    _0cf282_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _0486c9_case
		and    $0x00ffff,%eax
		jmp    *%cs:_048670_switch(,%eax,4)

	_0486c9_case:
		mov    _0ccae4_data,%edx
		mov    _0cd1dc_data,%ecx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    _0cf1da_data,%bx
		push   %edx
		xor    %edx,%edx
		mov    _0cf40e_data,%al
		mov    _0cf1d6_data,%dx
		call   _077220_func

	_0486f4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0486f8_switch:
		.long   _048892_case
		.long   _0488c7_case
		.long   _0488ef_case
		.long   _048905_case
		.long   _04891b_case
		.long   _048931_case

_048710_switch:
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _0488ac_case
		.long   _0488b7_case
		.long   _048949_case
		.long   _0488ac_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _0488be_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _0488be_case

_048768_switch:
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _0488e1_case
		.long   _0488e1_case
		.long   _0488e1_case
		.long   _0488e1_case
		.long   _0488e1_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _0488e7_case

_0487b0_switch:
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _0488e1_case
		.long   _048949_case
		.long   _048949_case
		.long   _0488c0_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case

_0487e4_switch:
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _0488be_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _0488be_case
		.long   _048949_case
		.long   _048949_case

_048818_switch:
		.long   _048949_case
		.long   _048949_case
		.long   _0488be_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _048949_case
		.long   _0488be_case
		.long   _048949_case




_048848_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf270_data,%cx
		mov    _0ce038_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _0cf1da_data,%ax
		shl    $0x000004,%edx
		xor    %bl,%bl
		cmp    %eax,%edx
		jge    _048870_jump
		mov    $0x000003,%dl
		jmp    _048872_jump

	_048870_jump:
		xor    %dl,%dl

	_048872_jump:
		mov    _0cf282_data,%ax
		dec    %eax
		xor    %dh,%dh
		cmp    $0x000005,%ax
		ja     _048949_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0486f8_switch(,%eax,4)

	_048892_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x000015,%ax
		ja     _048949_case
		and    $0x00ffff,%eax
		jmp    *%cs:_048710_switch(,%eax,4)

	_0488ac_case:
		mov    $0x000001,%dh
		mov    $0x000002,%bl
		mov    %dh,%dl
		jmp    _048949_case

	_0488b7_case:
		mov    $0x000003,%dl
		jmp    _048949_case

	_0488be_case:
		mov    $0x000001,%dh

	_0488c0_case:
		mov    $0x000003,%dl
		jmp    _048949_case

	_0488c7_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x000011,%ax
		ja     _048949_case
		and    $0x00ffff,%eax
		jmp    *%cs:_048768_switch(,%eax,4)

	_0488e1_case:
		mov    $0x000001,%dl
		mov    $0x000004,%bl
		jmp    _048949_case

	_0488e7_case:
		mov    $0x000001,%dh
		mov    $0x000004,%bl
		mov    %dh,%dl
		jmp    _048949_case

	_0488ef_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x00000c,%ax
		ja     _048949_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0487b0_switch(,%eax,4)

	_048905_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x00000c,%ax
		ja     _048949_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0487e4_switch(,%eax,4)

	_04891b_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x00000b,%ax
		ja     _048949_case
		and    $0x00ffff,%eax
		jmp    *%cs:_048818_switch(,%eax,4)

	_048931_case:
		mov    %ecx,%eax
		cmp    $0x000001,%cx
		jb     _048949_case
		cmp    $0x000003,%cx
		jbe    _048949_case
		cmp    $0x000004,%cx
		jne    _048949_case
		mov    $0x000001,%dh
		mov    $0x000003,%dl

	_048949_case:
		mov    %dl,_0cf40d_data
		mov    %dh,_0cf40f_data
		mov    %bl,_0e3ab9_data
		mov    %cx,_0cf270_data
		call   _048688_func
		mov    _0cf40d_data,%dl
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_048974_switch:
		.long   _0489a9_case
		.long   _0489df_case
		.long   _048a14_case
		.long   _048a21_case




_048984_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf1de_data,%cx
		mov    _0cf40d_data,%dl
		cmp    $0x000003,%dl
		ja     _048a2e_jump
		xor    %eax,%eax
		mov    %dl,%al
		jmp    *%cs:_048974_switch(,%eax,4)

	_0489a9_case:
		xor    %eax,%eax
		mov    _0cf2ae_data,%edx
		mov    _0cf1da_data,%ax
		sar    $0x000010,%edx
		sub    $0x0000d8,%eax
		imul   %eax,%edx
		mov    _0cf276_data,%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		mov    %cx,_0cf1de_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0489df_case:
		mov    _0cf2ae_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    _0e3ab9_data,%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %eax,%edx
		mov    _0cf1da_data,%bx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %edx,%ecx
		mov    %cx,_0cf1de_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048a14_case:
		xor    %ecx,%ecx
		mov    %cx,_0cf1de_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048a21_case:
		mov    _0cf1da_data,%cx
		sub    $0x0000d8,%ecx

	_048a2e_jump:
		mov    %cx,_0cf1de_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_048a40_switch:
		.long   0




_048a44_func:
		add    $0x5050505,%eax
		add    $0x6f000003,%eax
		outsb  %ds:(%esi),(%dx)
	_048a50_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %ch,0x000066(%edi)
	_048a54_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		data16 add %ch,0x00006e(%edi)
	_048a57_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %ch,0x000066(%edi)
		data16 add %al,0x5050505
		add    $0x030505,%eax

	_048a65_jump:
		add    $0x3050505,%eax

	_048a6a_jump:
		add    $0x3050505,%eax

	_048a6f_jump:
		add    $0x5050505,%eax
		add    (%eax),%eax
		add    %al,(%eax)

_048a78_switch:
		.long   _0c0fac_case
		.long   _0c0fb0_case
		.long   _0c0fb4_case
		.long   _0c0fb8_case




_048a88_func:
		add    $0x5050505,%eax
		add    $0x6e6f0305,%eax
	_048a93_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %ch,0x000066(%edi)
	_048a97_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		data16 add %ch,0x000061(%ebp)
		js     _048a9b_jump

	_048a9b_jump:
		xor    %al,%ss:(%eax)

	_048a9e_jump:
		xor    $0x000030,%eax
		.byte 0x000000

_048aa4_switch:
		.long   _0c0fbc_case
		.long   _0c0fc4_case
		.long   _0c0fcc_case




_048ab0_func:
		add    $0x5030505,%eax
		add    $0x51530305,%eax
		push   %edx
		push   %esi
		call   _074ba0_func
		test   %al,%al
		je     _048c14_jump
		xor    %edx,%edx
		mov    $_0cd268_data,%eax
		mov    _0cf428_data,%dl
		call   _047768_func
		cmpw   $0x000080,_095e28_data
		jl     _048af6_jump
		mov    $0x000001,%bh
		xor    %cl,%cl
		mov    %bh,_095de5_data
		mov    %cl,_0cf40b_data

	_048af6_jump:
		cmpb   $0x000002,_0cf412_data
		jne    _048b0b_jump
		mov    $0x000001,%al
		mov    %al,_095de5_data
		mov    %al,_0cf40b_data

	_048b0b_jump:
		call   _041a10_func
		cmpl   $0x0003e7,_0cc9f4_data
		je     _048b81_jump
		cmpb   $0x000000,_0cf410_data
		je     _048b81_jump
		xor    %eax,%eax
		mov    _0cc9f0_data,%ax
		call   _03eef4_func
		mov    _0cc9f8_data,%eax
		call   _03ef00_func
		mov    _0cca00_data,%eax
		call   _03ef08_func
		mov    _0cc9fc_data,%eax
		call   _03ef10_func
		mov    _0cc9f4_data,%eax
		call   _03ef18_func
		call   _03e6a0_func
		test   %eax,%eax
		je     _048b6d_jump
		xor    %bh,%bh
		mov    %bh,_0cf410_data
		jmp    _048b93_jump

	_048b6d_jump:
		mov    $0x000001,%bl
		call   _03e8d4_func
		mov    %bl,_0cf410_data
		call   _071658_func
		jmp    _048b93_jump

	_048b81_jump:
		mov    _0cc9f4_data,%eax
		xor    %dh,%dh
		call   _03ef18_func
		mov    %dh,_0cf410_data

	_048b93_jump:
		call   _042734_func
		test   %al,%al
		je     _048cc3_jump
		mov    _0cf148_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _048bc7_jump
		mov    _0cf413_data,%al
		cmp    _0cf417_data,%al
		jne    _048bc7_jump
		mov    _0cf415_data,%al
		cmp    _0cf414_data,%al
		je     _048be5_jump

	_048bc7_jump:
		movl   $_036f14_func,_0e46e0_data
		call   _023ca0_func
		call   _03ca10_func
		call   _04df1c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048be5_jump:
		mov    $0x000002,%al
		push   $_0cf142_data
		mov    $_0cf148_data,%ecx
		mov    $_0cf140_data,%ebx
		mov    $_0cf146_data,%edx
		push   $_0cf144_data
		mov    %al,_095e6a_data
		mov    $_0cf14a_data,%eax
		call   _042174_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048c14_jump:
		cmpb   $0x000000,_0cf410_data
		je     _048c2c_jump
		mov    %al,_0cf410_data
		call   _03e8d4_func
		call   _071658_func

	_048c2c_jump:
		xor    %dh,%dh
		mov    $_0cd268_data,%eax
		mov    %dh,_0cf428_data
		xor    %edx,%edx
		call   _047768_func
		call   _042734_func
		test   %al,%al
		je     _048c64_jump
		movl   $_036f14_func,_0e46e0_data
		call   _023ca0_func
		call   _03ca10_func
		call   _04df1c_func
		jmp    _048c6d_jump

	_048c64_jump:
		movw   $0x00ffff,_0cf14a_data

	_048c6d_jump:
		mov    $0x00000d,%ebx
		mov    $0x000012,%ecx
		mov    $0x000001,%esi
		mov    $0x000002,%edx
		xor    %eax,%eax
		mov    %bx,_0c3f70_data
		mov    %cx,_0c3f72_data
		mov    %si,_0c3f74_data
		mov    %si,_0c3f68_data
		mov    %ax,_0c3f6a_data
		mov    %dx,_0c3f6e_data
		mov    $0x000012,%eax
		xor    %bl,%bl
		call   _071630_func
		mov    %bl,_095de5_data
		call   _041a10_func

	_048cc3_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_048cc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmp    $0x000002,%al
		jb     _048cf3_jump
		jbe    _048d2f_jump
		cmp    $0x000050,%al
		jb     _048cea_jump
		jbe    _048d64_jump
		cmp    $0x000064,%al
		je     _048d8a_jump
		jmp    _048da5_jump

	_048cea_jump:
		cmp    $0x000046,%al
		je     _048d3e_jump
		jmp    _048da5_jump

	_048cf3_jump:
		test   %al,%al
		ja     _048d17_jump
		mov    $0x000001,%cl
		mov    $0x00003c,%eax
		xor    %edi,%edi
		mov    %cl,_0cf442_data
		call   _03c0d4_jump
		mov    %di,_0cf1dc_data
		jmp    _048da5_jump

	_048d17_jump:
		mov    $0x000001,%bh
		mov    $0x000032,%eax
		xor    %esi,%esi
		mov    %bh,_0cf442_data
		mov    %si,_0cf1dc_data
		jmp    _048da0_jump

	_048d2f_jump:
		xor    %bl,%bl
		mov    $0x00003c,%eax
		mov    %bl,_0cf442_data
		jmp    _048da0_jump

	_048d3e_jump:
		mov    $0x000001,%dh
		mov    $0x000046,%eax
		xor    %ecx,%ecx
		mov    %dh,_0cf442_data
		mov    %cx,_0cf1dc_data
		call   _03c0d4_jump
		call   _036230_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048d64_jump:
		mov    $0x000001,%dl
		mov    $0x000050,%eax
		xor    %ebx,%ebx
		mov    %dl,_0cf442_data
		mov    %bx,_0cf1dc_data
		call   _03c0d4_jump
		call   _036230_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048d8a_jump:
		mov    $0x000001,%ah
		xor    %edx,%edx
		mov    %ah,_0cf442_data
		mov    $0x000064,%eax
		mov    %dx,_0cf1dc_data

	_048da0_jump:
		call   _03c0d4_jump

	_048da5_jump:
		call   _036230_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_048db0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpb   $0x000000,_095de5_data
		jne    _048e80_jump
		cmpb   $0x000000,_0cf448_data
		je     _048e1f_jump
		mov    _095e20_data,%eax
		mov    _096782_data,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		mov    _09677a_data(,%eax,2),%ebx
		mov    _096772_data(,%eax,2),%edx
		sar    $0x000010,%ebx
		mov    _09676a_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05c124_func
		mov    _0cca50_data,%edx
		mov    _0cca54_data,%ecx
		mov    _0cca48_data,%ebx
		mov    _0cca4c_data,%eax
		call   _01614e_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048e1f_jump:
		mov    _095e20_data,%eax
		sar    $0x000010,%eax
		mov    _096782_data(,%eax,2),%ecx
		mov    _09677a_data(,%eax,2),%ebx
		mov    _096772_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09676a_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05c124_func
		mov    _0cca50_data,%edx
		mov    _0cca54_data,%ecx
		mov    _0cca48_data,%ebx
		mov    _0cca4c_data,%eax
		call   _01614e_func
		mov    _0ccae4_data,%edi
		call   _014bed_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048e80_jump:
		call   _0160e8_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_048e8c_func:
		push   %ebx
		push   %edx
		mov    _0cf282_data,%dx
		mov    _0cf270_data,%bx
		cmp    $0x000001,%dx
		jne    _048ea8_jump
		cmp    $0x000010,%bx
		je     _048eec_jump

	_048ea8_jump:
		cmp    $0x000002,%dx
		jne    _048eb4_jump
		cmp    $0x000010,%bx
		je     _048eec_jump

	_048eb4_jump:
		cmp    $0x000004,%dx
		jne    _048ebf_jump
		cmp    %dx,%bx
		je     _048eec_jump

	_048ebf_jump:
		cmp    $0x000004,%dx
		jne    _048ecb_jump
		cmp    $0x00000b,%bx
		je     _048eec_jump

	_048ecb_jump:
		cmp    $0x000005,%dx
		jne    _048ed7_jump
		cmp    $0x000004,%bx
		je     _048eec_jump

	_048ed7_jump:
		cmp    $0x000005,%dx
		jne    _048ee3_jump
		cmp    $0x000003,%bx
		je     _048eec_jump

	_048ee3_jump:
		cmpb   $0x000000,_095e25_data
		je     _048ef0_jump

	_048eec_jump:
		mov    $0x000001,%al
		jmp    _048ef2_jump

	_048ef0_jump:
		xor    %al,%al

	_048ef2_jump:
		mov    %bx,_0cf270_data
		mov    %dx,_0cf282_data
		pop    %edx
		pop    %ebx
		ret    



_048f04_func:
		push   %edx
		mov    _0e46c0_data,%eax
		mov    _0c2ba8_data,%edx
		mov    %edx,0x000038(%eax)
		mov    _0c2bac_data,%edx
		mov    %edx,0x00003c(%eax)
		mov    _0c2bb0_data,%edx
		mov    %edx,0x000070(%eax)
		mov    _0c2ba0_data,%edx
		mov    %edx,0x000074(%eax)
		mov    _0c2ba4_data,%edx
		mov    %edx,0x0000e0(%eax)
		mov    _0c2b9c_data,%edx
		mov    %edx,0x0000e4(%eax)
		mov    _0c2bb4_data,%edx
		mov    %edx,0x0000e8(%eax)
		mov    _0c2bb8_data,%edx
		mov    %edx,0x00011c(%eax)
		mov    _0c2b8c_data,%edx
		mov    %edx,0x000120(%eax)
		mov    _0c2bbc_data,%edx
		mov    %edx,0x000124(%eax)
		mov    _0c2b88_data,%edx
		mov    %edx,0x00012c(%eax)
		mov    _0c2b90_data,%edx
		mov    %edx,0x000134(%eax)
		mov    _0c2bc0_data,%edx
		mov    %edx,0x00013c(%eax)
		mov    _0c2b94_data,%edx
		mov    %edx,0x000140(%eax)
		mov    _0c2bc4_data,%edx
		mov    %edx,0x000144(%eax)
		mov    _0c2bc8_data,%edx
		mov    %edx,0x000148(%eax)
		mov    _0c2bcc_data,%edx
		mov    %edx,0x00014c(%eax)
		pop    %edx
		ret    

_048fcc_switch:
		.long   _0490be_case
		.long   _049170_case
		.long   _049170_case
		.long   _0490de_case
		.long   _049104_case
		.long   _049170_case
		.long   _049170_case
		.long   _04912d_case
		.long   _049134_case
		.long   _049143_case
		.long   _049158_case




_048ff8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		xor    %edx,%edx
		xor    %ah,%ah
		xor    %ebx,%ebx
		mov    %ah,_0cf474_data
		mov    %ah,_0cf46d_data
		mov    %ah,_0cf42a_data
		mov    %ah,_0cf42b_data
		mov    %ah,_0cf429_data
		mov    _095e6e_data,%al
		mov    %bx,_0cf196_data
		test   %al,%al
		je     _049045_jump
		mov    _0c3f70_data,%al
		mov    %al,_0cf444_data
		test   %al,%al
		jne    _049045_jump
		call   _01cc5c_func

	_049045_jump:
		call   _036ed0_func
		call   _023ca0_func
		call   _04e83c_func
		cmpb   $0x000000,_0cf425_data
		jne    _049199_jump
		mov    $_04b978_func,%ebp

	_049066_jump:
		mov    _0cf46d_data,%cl
		test   %cl,%cl
		jne    _049199_jump
		test   %dx,%dx
		jne    _049199_jump
		mov    _0c3f70_data,%eax
		sar    $0x000010,%eax
		call   _071630_func
		mov    _0c3f72_data,%eax
		sar    $0x000010,%eax
		call   _071654_func
		mov    _0c3f6e_data,%eax
		sar    $0x000010,%eax
		call   _071650_func
		mov    _0cf429_data,%al
		cmp    $0x00000a,%al
		ja     _049170_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_048fcc_switch(,%eax,4)

	_0490be_case:
		mov    $_049468_func,%ebx
		mov    $_036ee0_func,%ecx
		mov    %ebx,_0e46cc_data
		mov    %ecx,_0e46e0_data
		call   _03c9c0_func
		jmp    _04916b_jump

	_0490de_case:
		call   _0345c0_func
		cmpb   $0x000000,_0cf42b_data
		jne    _049170_case
		mov    $0x000001,%edx
		mov    %cl,_0cf46d_data
		mov    %dx,_0cf288_data
		jmp    _049170_case

	_049104_case:
		mov    $_049a1c_func,%esi
		mov    _0e46e0_data,%edi
		mov    %esi,_0e46cc_data
		test   %edi,%edi
		je     _04916b_jump
		mov    $0x000001,%ch
		mov    $_036f14_func,%eax
		mov    %ch,_0e470d_data
		mov    %eax,_0e46e0_data
		jmp    _04916b_jump

	_04912d_case:
		mov    $_04a9a0_func,%ebx
		jmp    _04915d_jump

	_049134_case:
		xor    %eax,%eax
		mov    %ebp,_0e46cc_data
		mov    %eax,_0e46e0_data
		jmp    _04916b_jump

	_049143_case:
		mov    $_04c540_func,%esi
		xor    %edi,%edi
		mov    %esi,_0e46cc_data
		mov    %edi,_0e46e0_data
		jmp    _04916b_jump

	_049158_case:
		mov    $_04d4d4_func,%ebx

	_04915d_jump:
		xor    %ecx,%ecx
		mov    %ebx,_0e46cc_data
		mov    %ecx,_0e46e0_data

	_04916b_jump:
		call   _04e6cc_func

	_049170_case:
		call   _0426c0_func
		cmpb   $0x000000,_0cf42b_data
		je     _04918c_jump
		xor    %bh,%bh
		mov    %bh,_0cf429_data
		mov    %bh,_0cf42b_data

	_04918c_jump:
		cmpb   $0x000000,_0cf425_data
		je     _049066_jump

	_049199_jump:
		call   _04e89c_func
		call   _074600_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0491ac_switch:
		.long   _049313_case
		.long   _049369_case
		.long   _049369_case
		.long   _04932a_case
		.long   _04933c_case
		.long   _04934e_case




_0491c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    $0x000004,%dh
		mov    _0cf470_data,%al
		mov    $0x000001,%bl
		mov    %al,(%esp)
		mov    %dh,_0cf429_data
		mov    %bl,_0e470d_data
		xor    %ah,%ah
		mov    _095e1c_data,%bh
		mov    %ah,_0cf42a_data
		mov    %ah,_0cf42b_data
		cmp    %bl,%bh
		jne    _04924c_jump
		mov    _096782_data,%ecx
		mov    _09677a_data,%ebx
		mov    _096772_data,%edx
		mov    _09676a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05c124_func
		mov    _0cca50_data,%edx
		mov    _0cca54_data,%ecx
		mov    _0cca48_data,%ebx
		mov    _0cca4c_data,%eax
		call   _01614e_func
		incb   _095e1c_data
		jmp    _049443_jump

	_04924c_jump:
		cmp    $0x000002,%bh
		je     _04925d_jump
		cmp    _095de5_data,%bl
		jne    _049443_jump

	_04925d_jump:
		mov    $0x000300,%ecx
		mov    $_0c7938_data,%esi
		mov    $_0e43bc_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _036ed0_func
		call   _04e83c_func
		movb   $0x000001,_095e1b_data
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ah,_095e1c_data
		call   _01cc5c_func
		mov    %edx,_0cd2ac_data
		cmpb   $0x000000,_0cf410_data
		je     _0492b0_jump
		call   _072a14_func

	_0492b0_jump:
		mov    $0x000004,%bl
		mov    $_049a1c_func,%ebp
		mov    $_04a9a0_func,%edi
		mov    $_04b978_func,%esi
		xor    %edx,%edx

	_0492c3_jump:
		cmp    _0cf429_data,%dl
		je     _049379_jump
		mov    _0c3f70_data,%eax
		sar    $0x000010,%eax
		call   _071630_func
		mov    _0c3f72_data,%eax
		sar    $0x000010,%eax
		call   _071654_func
		mov    _0c3f6e_data,%eax
		sar    $0x000010,%eax
		call   _071650_func
		call   _0426c0_func
		mov    _0cf429_data,%al
		sub    $0x000004,%al
		cmp    $0x000005,%al
		ja     _049369_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_0491ac_switch(,%eax,4)

	_049313_case:
		mov    _0cf42b_data,%al
		mov    %ebp,_0e46cc_data
		mov    %edx,_0e46e0_data
		cmp    %al,%dl
		je     _049369_case
		jmp    _049363_jump

	_04932a_case:
		mov    _0cf42b_data,%ch
		mov    %edi,_0e46cc_data
		cmp    %ch,%dl
		je     _049369_case
		jmp    _049363_jump

	_04933c_case:
		mov    _0cf42b_data,%cl
		mov    %esi,_0e46cc_data
		cmp    %cl,%dl
		je     _049369_case
		jmp    _049363_jump

	_04934e_case:
		mov    $_04c540_func,%ecx
		mov    _0cf42b_data,%bh
		mov    %ecx,_0e46cc_data
		cmp    %bh,%dl
		je     _049369_case

	_049363_jump:
		mov    %bl,_0cf429_data

	_049369_case:
		call   _04e6cc_func
		mov    %dl,_0cf42b_data
		jmp    _0492c3_jump

	_049379_jump:
		xor    %cl,%cl
		mov    %cl,_095e1b_data
		call   _04e89c_func
		cmpb   $0x000000,_095de5_data
		jne    _0493ed_jump
		mov    _095e20_data,%eax
		sar    $0x000010,%eax
		mov    _096782_data(,%eax,2),%ecx
		mov    _09677a_data(,%eax,2),%ebx
		mov    _096772_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09676a_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05c124_func
		mov    _0cca50_data,%edx
		mov    _0cca54_data,%ecx
		mov    _0cca48_data,%ebx
		mov    _0cca4c_data,%eax
		call   _01614e_func
		mov    _0ccae4_data,%edi
		call   _014bed_func
		jmp    _049410_jump

	_0493ed_jump:
		cmpb   $0x000001,_0cf40b_data
		jne    _049410_jump
		mov    _0cd1d0_data,%edx
		mov    _0cd1bc_data,%ebx
		mov    _0cd1dc_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func

	_049410_jump:
		cmpb   $0x000000,_0cf410_data
		je     _04941e_jump
		call   _072a28_func

	_04941e_jump:
		xor    %dl,%dl
		xor    %ebx,%ebx
		mov    %dl,_0cf441_data
		mov    %ebx,_0cc988_data
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		mov    %dx,_0cf13a_data
		mov    %bx,_0cf138_data

	_049443_jump:
		mov    (%esp),%al
		mov    %al,_0cf470_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_049458_switch:
		.long   _049559_case
		.long   _049587_case
		.long   _0495b5_case
		.long   _0495e0_case




_049468_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    $_049748_func,%esi
		mov    $_0499a8_func,%edi
		mov    _048a40_switch,%eax
		xor    %edx,%edx
		mov    %eax,(%esp)
		mov    %esp,%ebx
		jmp    _049492_jump

	_049489_jump:
		movw   $0x009090,(%ecx)
		mov    %ecx,%esp
		nop
		nop

	_049492_jump:
		call   _0494a1_func
		jmp    _049489_jump



_0494a1_func:
		mov    (%esp),%ecx
		movl   $0x90909090,-0x000005(%ecx)
		movb   $0x000090,-0x000001(%ecx)
		ret    

	_049508_jump:
		movzbl %bl,%ebp
		imul   $0x0000d8,%ebp,%ecx
		mov    $_0cac98_data,%edx
		add    %ecx,%edx
		mov    _0c2b50_data(,%ebp,4),%esi
		mov    %edx,%edi
		push   %edi

	_049522_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04953a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049522_jump

	_04953a_jump:
		pop    %edi
		mov    (%esp,%ebp,1),%al
		mov    %al,_0cad6f_data(%ecx)
		cmp    $0x000003,%bl
		ja     _049609_jump
		xor    %eax,%eax
		mov    %bl,%al
		jmp    *%cs:_049458_switch(,%eax,4)

	_049559_case:
		mov    _0c2a0c_data,%esi
		push   %edi

	_049560_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049578_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049560_jump

	_049578_jump:
		pop    %edi
		movw   $0x00001e,_0cad6a_data(%ecx)
		jmp    _049609_jump

	_049587_case:
		mov    _0c2b2c_data,%esi
		mov    $0x00003c,%edx
		push   %edi

	_049593_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0495ab_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049593_jump

	_0495ab_jump:
		pop    %edi
		mov    %dx,_0cad6a_data(%ecx)
		jmp    _049609_jump

	_0495b5_case:
		mov    _0c2a10_data,%esi
		push   %edi

	_0495bc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0495d4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0495bc_jump

	_0495d4_jump:
		pop    %edi
		movw   $0x00009b,_0cad6a_data(%ecx)
		jmp    _049609_jump

	_0495e0_case:
		mov    _0c2ac0_data,%esi
		push   %edi

	_0495e7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0495ff_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0495e7_jump

	_0495ff_jump:
		pop    %edi
		movw   $0x0000b9,_0cad6a_data(%ecx)

	_049609_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		imul   $0x0000d8,%edx,%edx
		mov    _0cf164_data,%ax
		mov    %ax,_0cad68_data(%edx)
		mov    %bh,_0cad6c_data(%edx)
		xor    %ch,%ch
		mov    %bh,_0cad6e_data(%edx)
		mov    $_0cac98_data,%eax
		mov    %ch,_0cad6d_data(%edx)
		add    %edx,%eax
		add    %bh,%bl
		call   _01ed18_func
		xor    %eax,%eax
		mov    _0cf18e_data,%si
		mov    %bl,%al
		cmp    %si,%ax
		jl     _049508_jump
		mov    $0x000001,%al
		mov    $0x000064,%edx
		mov    $0x00000c,%ebx
		xor    %edi,%edi
		mov    $0x000006,%ecx
		mov    %di,_0cf1ac_data
		mov    %al,_0cf470_data
		mov    %di,_0cf1a2_data
		mov    %dx,_0cf1a8_data
		mov    %bx,_0cf186_data
		mov    %cx,_0cf174_data
		mov    %di,_0cf196_data
		mov    %di,_0cf17e_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0496ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		call   _03cd54_func
		xor    %ah,%ah
		mov    %ah,(%esp)
		jmp    _04971e_jump

	_0496be_jump:
		cmp    _0cf1ac_data,%ax
		jne    _0496e3_jump
		xor    %eax,%eax
		mov    (%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    $0x000001,%edx
		add    $_0cac98_data,%eax
		call   _04ebe0_func
		jmp    _04971b_jump

	_0496e3_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		imul   $0x0000d8,%eax,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    _0cad6f_data(%eax),%dl
		mov    _0cad6c_data(%eax),%cl
		mov    _0cad68_data(%eax),%ebx
		push   %edx
		mov    _0cad66_data(%eax),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    $_0cac98_data,%eax
		call   _01a168_func

	_04971b_jump:
		incb   (%esp)

	_04971e_jump:
		xor    %eax,%eax
		mov    _0cf18e_data,%dx
		mov    (%esp),%al
		cmp    %dx,%ax
		jl     _0496be_jump
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_049738_switch:
		.long   _0498d3_case
		.long   _0498fa_case
		.long   _049922_case
		.long   _049987_case




_049748_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		call   _04eb1c_func
		mov    _0ccae0_data,%ebx
		xor    %edx,%edx
		inc    %ebx
		mov    _0cf15c_data,%dx
		mov    %ebx,_0ccae0_data
		cmp    %ebx,%edx
		jg     _04977b_jump
		cmpb   $0x000000,_0cf46d_data
		jne    _04977b_jump
		call   _0359f4_func

	_04977b_jump:
		call   _037514_func
		test   %al,%al
		je     _0497a0_jump
		mov    $0x000001,%eax
		call   _0426b0_func
		xor    %eax,%eax
		call   _04ef74_func
		test   %al,%al
		je     _0497a0_jump
		movb   $0x000001,_0cf42b_data

	_0497a0_jump:
		call   _041de8_func
		test   %ax,%ax
		je     _049820_jump
		cmpb   $0x000000,_0cf470_data
		jne    _0497e3_jump
		mov    _0cf1a2_data,%ax
		cmp    _0cf186_data,%ax
		jle    _049820_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _049820_jump

	_0497e3_jump:
		mov    $0x000044,%eax
		call   _072210_func
		xor    %eax,%eax
		mov    _0cf1ac_data,%bx
		mov    _0967a1_data,%al
		cmp    %bx,%ax
		jge    _04980c_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0cf1ac_data
		jmp    _049818_jump

	_04980c_jump:
		mov    _0cf14c_data,%ax
		mov    %ax,_0cf1ac_data

	_049818_jump:
		xor    %esi,%esi
		mov    %esi,_0ccae0_data

	_049820_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _049890_jump
		cmpb   $0x000000,_0cf470_data
		jne    _04985f_jump
		mov    _0cf1a2_data,%ax
		cmp    _0cf186_data,%ax
		jle    _049890_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _049890_jump

	_04985f_jump:
		mov    $0x000044,%eax
		call   _072210_func
		mov    _0cf1ac_data,%ax
		cmp    _0cf14c_data,%ax
		jge    _04987b_jump
		inc    %eax
		jmp    _049882_jump

	_04987b_jump:
		xor    %eax,%eax
		mov    _0967a1_data,%al

	_049882_jump:
		mov    %ax,_0cf1ac_data
		xor    %edi,%edi
		mov    %edi,_0ccae0_data

	_049890_jump:
		call   _0373f0_func
		test   %al,%al
		je     _049999_jump
		cmpb   $0x000000,_0cf470_data
		je     _049999_jump
		mov    $0x000045,%eax
		call   _072210_func
		mov    _0cf1ac_data,%dx
		cmp    $0x000003,%dx
		ja     _049999_jump
		and    $0x00ffff,%edx
		jmp    *%cs:_049738_switch(,%edx,4)

	_0498d3_case:
		mov    $0x000001,%esi
		xor    %eax,%eax
		mov    $0x000003,%dh
		mov    %eax,_0ccae0_data
		mov    %si,_0cf17e_data
		mov    %dh,_0cf429_data
		call   _04eb60_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0498fa_case:
		mov    $0x000001,%ecx
		xor    %ebp,%ebp
		mov    $0x000004,%dl
		mov    %ebp,_0ccae0_data
		mov    %cx,_0cf17e_data
		mov    %dl,_0cf429_data
		call   _04eb60_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049922_case:
		mov    $0x000001,%ch
		mov    $0x000004,%ebx
		xor    %edx,%edx
		xor    %al,%al
		mov    %ch,_0cf432_data
		mov    %dx,_0cf216_data
		mov    %al,_0cf449_data
		mov    $0x000011,%edx
		mov    $_0cd248_data,%eax
		mov    %bx,_0cf218_data
		call   _0364ec_func
		call   _01eb78_func
		call   _03ca10_func
		call   _03c9c0_func
		call   _035820_func
		mov    $_0cd248_data,%eax
		call   _07f424_func
		xor    %ah,%ah
		mov    %ah,_0cf432_data
		call   _04eb60_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049987_case:
		xor    %eax,%eax
		call   _04ef74_func
		test   %al,%al
		je     _049999_jump
		movb   $0x000001,_0cf42b_data

	_049999_jump:
		call   _04eb60_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0499a8_func:
		push   %ebx
		push   %edx
		mov    _0cf42b_data,%ah
		test   %ah,%ah
		je     _0499ee_jump
		mov    $0x000001,%bh
		mov    _0e46d8_data,%edx
		mov    %bh,_0cf46d_data
		mov    %bh,_0cf46b_data
		test   %edx,%edx
		je     _049a19_jump
		call   *_0e46d8_data
		call   _016ded_func
		call   _016ddd_func
		mov    $0x000001,%eax
		call   _023d4c_func
		call   _03b3e0_func
		pop    %edx
		pop    %ebx
		ret    

	_0499ee_jump:
		cmpb   $0x000000,_0cf425_data
		jne    _049a19_jump
		movw   $0x000708,_0cf15c_data
		cmpb   $0x000002,_0cf42e_data
		jne    _049a0f_jump
		mov    %ah,_0cf42e_data

	_049a0f_jump:
		call   _03ca10_func
		call   _03c9c0_func

	_049a19_jump:
		pop    %edx
		pop    %ebx
		ret    



_049a1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %db0,%eax
		cmp    $0x000000,%eax
		jne    _049a43_jump
		mov    %db1,%eax
		cmp    $0x000000,%eax
		jne    _049a43_jump
		mov    %db2,%eax
		cmp    $0x000000,%eax
		jne    _049a43_jump
		mov    %db3,%eax
		cmp    $0x000000,%eax
		jne    _049a43_jump
		jmp    _049a4a_jump

	_049a43_jump:
		mov    $0x004c00,%eax
		int    $0x000021

	_049a4a_jump:
		mov    $_049be8_func,%edx
		mov    $_04a0f4_func,%ebx
		mov    $_04a4e8_func,%ecx
		mov    $_04a8e8_func,%esi
		mov    $0x000001,%ah
		mov    $0x00000c,%edi
		mov    %edx,_0e46c8_data
		mov    %ebx,_0e46d8_data
		mov    %ecx,_0e46d4_data
		mov    %esi,_0e46dc_data
		mov    %ah,_0cf470_data
		mov    %di,_0cf186_data
		mov    $0x000014,%edx
		mov    $0x000004,%ebx
		mov    $0x000064,%esi
		mov    $0x000006,%eax
		xor    %ecx,%ecx
		mov    %dx,_0cf1aa_data
		mov    %bx,_0cf1b0_data
		mov    %cx,_0cf1a2_data
		mov    %si,_0cf1a8_data
		mov    %ax,_0cf174_data
		mov    $0x000008,%edx
		mov    $0x000003,%ebx
		mov    _0cf428_data,%al
		mov    %dx,_0cf170_data
		mov    %bx,_0cf182_data
		cmp    $0x000001,%al
		jb     _049aeb_jump
		jbe    _049af8_jump
		cmp    $0x000002,%al
		je     _049af8_jump
		jmp    _049aff_jump

	_049aeb_jump:
		test   %al,%al
		jne    _049aff_jump
		movb   $0x00004b,_0e470c_data
		jmp    _049aff_jump

	_049af8_jump:
		movb   $0x00005a,_0e470c_data

	_049aff_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0e470c_data,%al
		sub    %eax,%edx
		mov    _095e1b_data,%bh
		mov    %dx,_0cf164_data
		test   %bh,%bh
		je     _049b3f_jump
		mov    $0x000006,%eax
		xor    %ch,%ch
		mov    %ax,_0cf1a4_data
		mov    %ax,_0cf14c_data
		mov    %ch,_0967a1_data
		mov    %ax,_0cf18e_data
		jmp    _049b5f_jump

	_049b3f_jump:
		mov    $0x000005,%ecx
		mov    %bh,_0967a1_data
		mov    %cx,_0cf1a4_data
		mov    %cx,_0cf14c_data
		mov    %cx,_0cf18e_data

	_049b5f_jump:
		mov    $0x000005,%ebx
		mov    $0x00003c,%edx
		mov    $0x000014,%eax
		call   _04ea48_func
		cmpb   $0x000000,_0967a3_data
		je     _049ba0_jump
		xor    %eax,%eax
		mov    _0e46e9_data,%al
		mov    %ax,_0cd15e_data
		xor    %eax,%eax
		mov    _0e46e8_data,%al
		mov    %ax,_0cd15c_data
		xor    %ah,%ah
		mov    %ah,_0967a3_data
		jmp    _049bb8_jump

	_049ba0_jump:
		mov    _0c3f70_data,%ax
		mov    %ax,_0cd15c_data
		mov    _0c3f72_data,%ax
		mov    %ax,_0cd15e_data

	_049bb8_jump:
		xor    %dl,%dl
		xor    %ecx,%ecx
		mov    %dl,_095e68_data
		mov    %cx,_0cf17e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_049bd0_switch:
		.long   _049d0d_case
		.long   _049d77_case
		.long   _049dc9_case
		.long   _049dc9_case
		.long   _049dc9_case
		.long   _049dc9_case




_049be8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    %esp,%edi
		mov    $_048a44_func,%esi
		mov    _048a50_jump,%eax
		mov    $0x000001,%dl
		mov    %eax,0x000010(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %dl,_0cb506_data
		lea    0x00002c(%esp),%edi
		mov    $0x000002,%ah
		mov    $_048a4d_jump,%esi
		xor    %dh,%dh
		mov    %ah,_0cb504_data
		mov    %dh,_0cb505_data
		xor    %eax,%eax
		mov    %dl,_0cb507_data
		mov    _0967a1_data,%al
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %ax,0x000030(%esp)
		jmp    _049e2f_jump

	_049c3f_jump:
		imul   $0x0000d8,%eax,%ebp
		mov    $0x000002,%bl
		mov    $_0cac98_data,%edx
		mov    _0cf14c_data,%si
		xor    %cl,%cl
		mov    %bl,_0cad6c_data(%ebp)
		add    %ebp,%edx
		mov    %cl,_0cad6d_data(%ebp)
		mov    $0x000001,%bh
		mov    %edx,0x00001c(%esp)
		mov    0x000030(%esp),%edx
		mov    %bh,_0cad6e_data(%ebp)
		cmp    %si,%dx
		jne    _049cc4_jump
		mov    0x00001c(%esp),%edi
		mov    _0c2ac0_data,%esi
		mov    $0x0000a0,%ecx
		push   %edi

	_049c88_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049ca0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049c88_jump

	_049ca0_jump:
		pop    %edi
		mov    _0cf19c_data,%ax
		mov    %cx,_0cad68_data(%ebp)
		mov    %ax,_0cad6a_data(%ebp)
		mov    0x000006(%esp),%al
		mov    %al,_0cad6f_data(%ebp)
		jmp    _049e0e_jump

	_049cc4_jump:
		mov    0x00001c(%esp),%edi
		mov    (%esp,%eax,1),%dl
		mov    _0c2b50_data(,%eax,4),%esi
		mov    %dl,_0cad6f_data(%ebp)
		push   %edi

	_049cd9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049cf1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049cd9_jump

	_049cf1_jump:
		pop    %edi
		mov    0x000030(%esp),%edi
		cmp    $0x000005,%di
		ja     _049ddf_jump
		xor    %eax,%eax
		mov    %di,%ax
		jmp    *%cs:_049bd0_switch(,%eax,4)

	_049d0d_case:
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    0x000020(%esp),%eax
		call   _01ecbc_func
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    %eax,%esi
		lea    0x000030(%esp),%eax
		add    $0x000010,%esi
		call   _01ecbc_func
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		add    %eax,%esi
		lea    0x000014(%esp),%eax
		call   _01ecbc_func
		add    %esi,%eax
		cwtl   
		mov    $0x0000a0,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,_0cad68_data(%ebp)
		jmp    _049ddf_jump

	_049d77_case:
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    0x000020(%esp),%eax
		call   _01ecbc_func
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    %eax,%esi
		mov    $_0c0fd4_data,%eax
		call   _01ecbc_func
		imul   $0x000014,%eax,%eax
		add    $0x000010,%esi
		add    %esi,%eax
		cwtl   
		mov    $0x0000a0,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,_0cad68_data(%ebp)
		jmp    _049ddf_jump

	_049dc9_case:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		movw   $0x0000a0,_0cad68_data(%eax)

	_049ddf_jump:
		mov    _0cf19e_data,%ax
		mov    0x000030(%esp),%ebx
		add    $0x00000f,%eax
		imul   %ebx,%eax
		mov    _0cf1b4_data,%si
		add    %eax,%esi
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    %si,_0cad6a_data(%eax)

	_049e0e_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    0x000030(%esp),%esi
		inc    %esi
		add    $_0cac98_data,%eax
		mov    %si,0x000030(%esp)
		call   _01ed18_func

	_049e2f_jump:
		xor    %eax,%eax
		mov    _0cf18c_data,%esi
		mov    _0967a1_data,%al
		sar    $0x000010,%esi
		add    %eax,%esi
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		cmp    %esi,%eax
		jle    _049c3f_jump
		mov    $_0caae8_data,%edi
		mov    $0x0000a0,%edx
		mov    _0c2a78_data,%esi
		mov    $0x000064,%ebx
		push   %edi

	_049e66_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049e7e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049e66_jump

	_049e7e_jump:
		pop    %edi
		xor    %ch,%ch
		mov    $0x000064,%esi
		mov    %dx,_0cabb8_data
		mov    %bx,_0cabba_data
		mov    %ch,_0cabbd_data
		mov    $0x000002,%bh
		mov    %edi,%eax
		mov    %bh,_0cabbc_data
		mov    %bh,_0cabbe_data
		call   _01ed18_func
		mov    %dx,_0cac90_data
		mov    %si,_0cac92_data
		mov    %bh,_0cac94_data
		mov    %bh,_0cac96_data
		mov    %ch,_0cac95_data
		mov    _0cf194_data,%bx
		mov    _0e470d_data,%dh
		sub    $0x000019,%ebx
		test   %dh,%dh
		je     _049f83_jump
		cmpb   $0x000000,_095e1b_data
		je     _04a0e0_jump
		mov    _0cf164_data,%ax
		mov    %ax,_0e46fc_data
		xor    %eax,%eax
		mov    _0e470c_data,%al
		mov    _0cf14a_data,%esi
		add    %eax,%eax
		sar    $0x000010,%esi
		mov    %ax,_0e4704_data
		lea    0x000000(,%esi,8),%eax
		sub    %esi,%eax
		shl    $0x000002,%eax
		push   $0x000000
		sub    %esi,%eax
		mov    _0cf194_data,%cx
		mov    %bx,_0e4700_data
		mov    _0cad6a_data(,%eax,8),%ax
		movswl %bx,%edx
		sub    %ecx,%eax
		mov    _0e46fa_data,%esi
		add    $0x000023,%eax
		sar    $0x000010,%esi
		mov    %ax,_0e46fe_data
		mov    _0e4702_data,%eax
		mov    _0e46fc_data,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _04f6dc_func
		xor    %ch,%ch
		mov    %ch,_0e470d_data
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049f83_jump:
		mov    _0cf14a_data,%ebp
		sar    $0x000010,%ebp
		lea    0x000000(,%ebp,8),%eax
		sub    %ebp,%eax
		shl    $0x000002,%eax
		mov    _0cf164_data,%dx
		sub    %ebp,%eax
		mov    %ebx,%esi
		mov    _0cf194_data,%bx
		mov    _0cad6a_data(,%eax,8),%ax
		movzbw _0e470c_data,%di
		sub    %ebx,%eax
		mov    _0e46fc_data,%cx
		add    $0x000023,%eax
		add    %edi,%edi
		mov    %ax,0x000038(%esp)
		cmp    %cx,%dx
		jge    _049fd8_jump
		mov    %edx,%eax
		jmp    _049fda_jump

	_049fd8_jump:
		mov    %ecx,%eax

	_049fda_jump:
		mov    _0e4700_data,%bx
		cmp    %bx,%si
		jge    _049fe8_jump
		mov    %esi,%ebx

	_049fe8_jump:
		mov    _0e4702_data,%ebp
		mov    _0e46fa_data,%ecx
		sar    $0x000010,%ebp
		sar    $0x000010,%ecx
		add    %ecx,%ebp
		movswl %dx,%ecx
		mov    %ecx,0x000024(%esp)
		mov    %ebp,0x000014(%esp)
		mov    0x000024(%esp),%ebp
		movswl %di,%ecx
		add    %ebp,%ecx
		mov    0x000014(%esp),%ebp
		cmp    %ebp,%ecx
		jge    _04a023_jump
		movswl %ax,%ecx
		sub    %ecx,%ebp
		mov    %ebp,0x000018(%esp)
		jmp    _04a02c_jump

	_04a023_jump:
		movswl %ax,%ebp
		sub    %ebp,%ecx
		mov    %ecx,0x000018(%esp)

	_04a02c_jump:
		mov    0x000018(%esp),%ecx
		mov    %cx,0x000034(%esp)
		mov    _0e46fc_data,%ecx
		mov    _0e46fe_data,%ebp
		sar    $0x000010,%ecx
		sar    $0x000010,%ebp
		add    %ecx,%ebp
		movswl %si,%ecx
		mov    %ecx,0x00000c(%esp)
		mov    0x000036(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,0x000028(%esp)
		mov    0x00000c(%esp),%ecx
		add    0x000028(%esp),%ecx
		mov    %ecx,0x000020(%esp)
		cmp    %ecx,%ebp
		jg     _04a06f_jump
		mov    0x000020(%esp),%ebp

	_04a06f_jump:
		movswl %bx,%ecx
		sub    %ecx,%ebp
		mov    %ebp,%ecx
		mov    %dx,_0e46fc_data
		mov    0x000038(%esp),%edx
		mov    %si,_0e4700_data
		mov    %dx,_0e46fe_data
		mov    _095e1b_data,%dl
		mov    %di,_0e4704_data
		test   %dl,%dl
		je     _04a0c9_jump
		push   $0x000001
		mov    0x000036(%esp),%esi
		movswl %cx,%ecx
		movswl %bx,%edx
		sar    $0x000010,%esi
		cwtl   
		mov    %esi,%ebx
		call   _04f6dc_func
		xor    %ch,%ch
		mov    %ch,_0e470d_data
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04a0c9_jump:
		mov    0x000032(%esp),%edx
		movswl %cx,%ecx
		movswl %bx,%esi
		sar    $0x000010,%edx
		cwtl   
		mov    %edx,%ebx
		mov    %esi,%edx
		call   _04feec_func

	_04a0e0_jump:
		xor    %ch,%ch
		mov    %ch,_0e470d_data
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a0f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		lea    0x000004(%esp),%edi
		mov    _048a57_jump,%eax
		mov    $_048a54_jump,%esi
		mov    %eax,(%esp)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   _03cd54_func
		cmpb   $0x000000,_095e1b_data
		je     _04a147_jump
		mov    _0e46fc_data,%ecx
		mov    _0e4702_data,%ebx
		mov    _0e46fe_data,%edx
		mov    _0e46fa_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024808_func

	_04a147_jump:
		push   $0x000001
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cf192_data,%ebx
		mov    _0c2b2c_data,%eax
		sar    $0x000010,%ebx
		call   _01a168_func
		mov    _0967a1_data,%al
		mov    %al,0x000020(%esp)
		jmp    _04a4bb_jump

	_04a174_jump:
		imul   $0x0000d8,%edx,%eax
		mov    _0cad6a_data(%eax),%bx
		mov    %bx,0x000014(%esp)
		xor    %ebx,%ebx
		mov    _0cf1a4_data,%cx
		mov    %dl,%bl
		mov    _0cad68_data(%eax),%si
		cmp    %cx,%bx
		je     _04a1f8_jump
		cmp    _0cf14c_data,%bx
		jne    _04a1cd_jump
		mov    _0cad6f_data(%eax),%al
		mov    0x000012(%esp),%ebx
		mov    $0x000002,%ecx
		and    $_0000ff_case,%eax
		movswl %si,%edx
		push   %eax
		sar    $0x000010,%ebx
		mov    _0c2ac0_data,%eax
		call   _01a168_func
		jmp    _04a207_jump

	_04a1cd_jump:
		mov    _0cad6f_data(%eax),%al
		mov    0x000012(%esp),%ebx
		mov    $0x000002,%ecx
		and    $_0000ff_case,%eax
		movswl %si,%edi
		push   %eax
		sar    $0x000010,%ebx
		mov    _0c2b50_data(,%edx,4),%eax
		mov    %edi,%edx
		call   _01a168_func
		jmp    _04a207_jump

	_04a1f8_jump:
		mov    $0x000001,%edx
		add    $_0cac98_data,%eax
		call   _04ebe0_func

	_04a207_jump:
		mov    0x000020(%esp),%dl
		test   %dl,%dl
		jne    _04a355_jump
		movzbl %dl,%edi
		imul   $0x0000d8,%edi,%eax
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		add    $_0cac98_data,%eax
		call   _01ecbc_func
		lea    0x000000(,%edi,2),%edx
		mov    %esi,%edi
		add    %eax,%edi
		mov    %ax,0x000018(%esp)
		mov    %edi,%eax
		add    $0x000010,%eax
		mov    _0cd15c_data(%edx),%bx
		mov    %eax,0x000008(%esp)
		test   %bx,%bx
		je     _04a290_jump
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		lea    0x000008(%esp),%eax
		call   _01ecbc_func
		add    %edi,%eax
		add    $0x000020,%eax
		mov    %esp,%ebp
		mov    %ax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		lea    0x000004(%esp),%esi
		jmp    _04a2bc_jump

	_04a290_jump:
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    %ax,0x000010(%esp)
		lea    0x000008(%esp),%eax
		call   _01ecbc_func
		add    %edi,%eax
		lea    0x000004(%esp),%ebp
		add    $0x000020,%eax
		mov    %esp,%esi

	_04a2bc_jump:
		mov    %ax,0x000010(%esp)
		push   $0x000005
		mov    0x000016(%esp),%edi
		mov    0x00000e(%esp),%edx
		mov    $0x000002,%ecx
		mov    %ebp,%eax
		sar    $0x000010,%edi
		sar    $0x000010,%edx
		mov    %edi,%ebx
		call   _01a168_func
		xor    %eax,%eax
		mov    _0cf1a4_data,%cx
		mov    0x000020(%esp),%al
		cmp    %cx,%ax
		jne    _04a339_jump
		mov    $_0cb430_data,%edi
		push   %edi

	_04a2f7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a30f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a2f7_jump

	_04a30f_jump:
		pop    %edi
		mov    0x000010(%esp),%eax
		mov    %ax,_0cb500_data
		mov    0x000014(%esp),%eax
		mov    %ax,_0cb502_data
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01ed18_func
		mov    %edi,%eax
		call   _04ebe0_func
		jmp    _04a4b7_jump

	_04a339_jump:
		push   $0x000001
		mov    0x000012(%esp),%edx
		mov    $0x000002,%ecx
		mov    %edi,%ebx
		mov    %esi,%eax
		sar    $0x000010,%edx
		call   _01a168_func
		jmp    _04a4b7_jump

	_04a355_jump:
		cmp    $0x000001,%dl
		jne    _04a4b7_jump
		xor    %eax,%eax
		mov    %dl,%al
		imul   $0x0000d8,%eax,%eax
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		add    $_0cac98_data,%eax
		call   _01ecbc_func
		mov    _0cf1b0_data,%dx
		mov    %eax,%edi
		imul   $0x000014,%edx,%eax
		inc    %eax
		movswl %ax,%ebx
		mov    0x000014(%esp),%eax
		sub    $0x00000e,%eax
		add    $0x000010,%edi
		movswl %ax,%edx
		mov    %esi,%eax
		push   $0x000001
		add    %edi,%eax
		mov    $0x00000f,%ecx
		cwtl   
		call   _0248f0_func
		xor    %bl,%bl
		mov    $_0c0fd4_data,%ebp
		mov    %bl,0x00001c(%esp)
		jmp    _04a4a1_jump

	_04a3c1_jump:
		mov    _0cf1a8_data,%ebx
		sar    $0x000010,%ebx
		mov    $0x000003,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		xor    %ecx,%ecx
		mov    0x00001c(%esp),%cl
		cmp    %eax,%ecx
		jge    _04a3ee_jump
		movw   $0x000005,0x000018(%esp)
		jmp    _04a45c_jump

	_04a3ee_jump:
		lea    0x000000(,%ebx,2),%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    %eax,%ecx
		jge    _04a422_jump
		mov    _0cf1b4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    %eax,%ecx
		jl     _04a422_jump
		movw   $0x000003,0x000018(%esp)
		jmp    _04a45c_jump

	_04a422_jump:
		xor    %eax,%eax
		mov    _0cf1aa_data,%bx
		mov    0x00001c(%esp),%al
		cmp    %bx,%ax
		jge    _04a45c_jump
		mov    _0cf1b4_data,%edx
		sar    $0x000010,%edx
		add    %edx,%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		cmp    %eax,%edx
		jl     _04a45c_jump
		movw   $0x000001,0x000018(%esp)

	_04a45c_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		push   %eax
		mov    _0cf19e_data,%ax
		mov    _0cf1b4_data,%bx
		add    $0x00000f,%eax
		add    %ebx,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    _0cf1b0_data,%cx
		mov    0x000020(%esp),%al
		imul   %ecx,%eax
		add    %esi,%eax
		add    %edi,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    %ebp,%eax
		call   _01a168_func
		incb   0x00001c(%esp)

	_04a4a1_jump:
		xor    %eax,%eax
		mov    _0cd15e_data,%dx
		mov    0x00001c(%esp),%al
		cmp    %dx,%ax
		jl     _04a3c1_jump

	_04a4b7_jump:
		incb   0x000020(%esp)

	_04a4bb_jump:
		xor    %eax,%eax
		mov    _0cf18c_data,%edx
		mov    _0967a1_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		cmp    %eax,%edx
		jle    _04a174_jump
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a4e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		call   _04eb1c_func
		call   _037514_func
		test   %al,%al
		je     _04a501_jump
		movb   $0x000001,_0cf42b_data

	_04a501_jump:
		call   _041de8_func
		test   %ax,%ax
		je     _04a591_jump
		call   _041d08_func
		test   %ax,%ax
		jne    _04a591_jump
		call   _041c98_func
		test   %ax,%ax
		jne    _04a591_jump
		cmpb   $0x000000,_0cf470_data
		jne    _04a55c_jump
		mov    _0cf1a2_data,%ax
		cmp    _0cf186_data,%ax
		jle    _04a591_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04a591_jump

	_04a55c_jump:
		mov    $0x000044,%eax
		call   _072210_func
		xor    %eax,%eax
		mov    _0cf1a4_data,%bx
		mov    _0967a1_data,%al
		cmp    %bx,%ax
		jne    _04a587_jump
		mov    _0cf14c_data,%ax
		mov    %ax,_0cf1a4_data
		jmp    _04a591_jump

	_04a587_jump:
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0cf1a4_data

	_04a591_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _04a618_jump
		call   _041d08_func
		test   %ax,%ax
		jne    _04a618_jump
		call   _041c98_func
		test   %ax,%ax
		jne    _04a618_jump
		cmpb   $0x000000,_0cf470_data
		jne    _04a5ec_jump
		mov    _0cf1a2_data,%ax
		cmp    _0cf186_data,%ax
		jle    _04a618_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04a618_jump

	_04a5ec_jump:
		mov    $0x000044,%eax
		call   _072210_func
		mov    _0cf1a4_data,%ax
		mov    _0cf14c_data,%di
		cmp    %di,%ax
		jne    _04a611_jump
		xor    %edi,%eax
		mov    _0967a1_data,%al
		jmp    _04a612_jump

	_04a611_jump:
		inc    %eax

	_04a612_jump:
		mov    %ax,_0cf1a4_data

	_04a618_jump:
		cmpw   $0x000000,_0cf1a4_data
		jne    _04a6b0_jump
		cmpb   $0x000000,_0cf470_data
		je     _04a6b0_jump
		call   _0373f0_func
		test   %al,%al
		jne    _04a650_jump
		call   _041d08_func
		test   %ax,%ax
		jne    _04a650_jump
		call   _041c98_func
		test   %ax,%ax
		je     _04a6b0_jump

	_04a650_jump:
		mov    _0cf1a2_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000000,_0cd15c_data(,%eax,2)
		sete   %al
		xor    %ah,%ah
		mov    %eax,%edx
		mov    _0cf1a2_data,%eax
		sar    $0x000010,%eax
		mov    %edx,%ecx
		mov    %dx,_0cd15c_data(,%eax,2)
		test   %cx,%cx
		je     _04a69a_jump
		xor    %edx,%edx
		mov    _095e6e_data,%ch
		mov    %edx,_0cd2ac_data
		test   %ch,%ch
		je     _04a6b0_jump
		movb   $0x000001,_0cf444_data
		jmp    _04a6b0_jump

	_04a69a_jump:
		call   _01cc5c_func
		cmpb   $0x000000,_095e6e_data
		je     _04a6b0_jump
		xor    %cl,%cl
		mov    %cl,_0cf444_data

	_04a6b0_jump:
		cmpw   $0x000001,_0cf1a4_data
		jne    _04a72a_jump
		call   _041d08_func
		test   %ax,%ax
		je     _04a72a_jump
		mov    _0cd15e_data,%ax
		cmp    _0cf1aa_data,%ax
		jge    _04a72a_jump
		cmpb   $0x000000,_0cf470_data
		jne    _04a70c_jump
		mov    _0cf1a2_data,%ax
		cmp    _0cf186_data,%ax
		jle    _04a72a_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf180_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04a72a_jump

	_04a70c_jump:
		mov    $0x000044,%eax
		call   _072210_func
		incw   _0cd15e_data
		mov    _0cd15c_data,%eax
		sar    $0x000010,%eax
		call   _071630_func

	_04a72a_jump:
		cmpw   $0x000001,_0cf1a4_data
		jne    _04a79b_jump
		call   _041c98_func
		test   %ax,%ax
		je     _04a79b_jump
		cmpw   $0x000000,_0cd15e_data
		jle    _04a79b_jump
		cmpb   $0x000000,_0cf470_data
		jne    _04a77d_jump
		mov    _0cf1a2_data,%ax
		cmp    _0cf186_data,%ax
		jle    _04a79b_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf180_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04a79b_jump

	_04a77d_jump:
		mov    $0x000044,%eax
		call   _072210_func
		decw   _0cd15e_data
		mov    _0cd15c_data,%eax
		sar    $0x000010,%eax
		call   _071630_func

	_04a79b_jump:
		cmpw   $0x000003,_0cf1a4_data
		jne    _04a7fb_jump
		call   _0373f0_func
		test   %al,%al
		je     _04a7fb_jump
		call   _042734_func
		test   %al,%al
		je     _04a7ec_jump
		mov    $0x000001,%dh
		mov    _0cd15e_data,%al
		mov    $0x000008,%bl
		mov    %al,_0e46e9_data
		mov    %dh,_0967a3_data
		mov    %bl,_0cf429_data
		mov    _0cd15c_data,%al
		mov    $0x000001,%ebx
		mov    %al,_0e46e8_data
		mov    %bx,_0cf17e_data
		jmp    _04a8dd_jump

	_04a7ec_jump:
		mov    $_0caae8_data,%eax
		call   _04ece4_func
		jmp    _04a8dd_jump

	_04a7fb_jump:
		cmpw   $0x000002,_0cf1a4_data
		jne    _04a848_jump
		call   _0373f0_func
		test   %al,%al
		je     _04a848_jump
		mov    _0cd15e_data,%al
		mov    $0x000007,%dl
		mov    %al,_0e46e9_data
		mov    %dl,_0cf429_data
		mov    _0cd15c_data,%al
		mov    $0x000001,%edx
		mov    %al,_0e46e8_data
		mov    $0x000001,%ah
		mov    %dx,_0cf17e_data
		mov    %ah,_0967a3_data
		call   _04eb60_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04a848_jump:
		cmpw   $0x000004,_0cf1a4_data
		jne    _04a893_jump
		call   _0373f0_func
		test   %al,%al
		je     _04a893_jump
		mov    _0cd15e_data,%al
		mov    %al,_0e46e9_data
		mov    _0cd15c_data,%al
		mov    %al,_0e46e8_data
		mov    $0x000009,%al
		mov    $0x000001,%ch
		mov    %al,_0cf429_data
		mov    $0x000001,%eax
		mov    %ch,_0967a3_data
		mov    %ax,_0cf17e_data
		call   _04eb60_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04a893_jump:
		cmpw   $0x000005,_0cf1a4_data
		jne    _04a8dd_jump
		call   _0373f0_func
		test   %al,%al
		je     _04a8dd_jump
		cmpb   $0x000000,_0cf470_data
		je     _04a8dd_jump
		cmpb   $0x000000,_095e1b_data
		je     _04a8dd_jump
		xor    %eax,%eax
		call   _04ef74_func
		test   %al,%al
		je     _04a8dd_jump
		mov    $0x000001,%bh
		mov    $0x000001,%edi
		mov    %bh,_095e68_data
		mov    %bh,_0cf46d_data
		mov    %di,_0cf288_data

	_04a8dd_jump:
		call   _04eb60_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a8e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf1a4_data,%ax
		cmp    _0cf14c_data,%ax
		jne    _04a903_jump
		cmpb   $0x000001,_0cf42b_data
		jne    _04a90c_jump

	_04a903_jump:
		cmpb   $0x000000,_0cf46d_data
		je     _04a924_jump

	_04a90c_jump:
		mov    _0cd15c_data,%ax
		mov    %ax,_0c3f70_data
		mov    _0cd15e_data,%ax
		mov    %ax,_0c3f72_data

	_04a924_jump:
		mov    _0cf1a4_data,%ax
		cmp    _0cf14c_data,%ax
		je     _04a945_jump
		cmpb   $0x000001,_0cf42b_data
		je     _04a945_jump
		cmpb   $0x000000,_0cf46d_data
		je     _04a99c_jump

	_04a945_jump:
		cmpb   $0x000000,_095e6e_data
		je     _04a958_jump
		mov    _0c3f70_data,%al
		mov    %al,_0cf444_data

	_04a958_jump:
		xor    %cl,%cl
		mov    %cl,_0cf429_data
		cmpb   $0x000000,_095e1b_data
		je     _04a997_jump
		push   $0x000002
		mov    _0e46fc_data,%ecx
		mov    _0e4702_data,%ebx
		mov    _0e46fe_data,%edx
		mov    _0e46fa_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _04f6dc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04a997_jump:
		call   _03ca10_func

	_04a99c_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a9a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpb   $0x000001,_0cf428_data
		jne    _04a9bb_jump
		movl   $_0967a4_data,_0e46c0_data
		jmp    _04a9c5_jump

	_04a9bb_jump:
		movl   $_0969a4_data,_0e46c0_data

	_04a9c5_jump:
		call   _048f04_func
		mov    $_04aac8_func,%ecx
		mov    $_04ae58_func,%esi
		mov    $_04b080_func,%edi
		mov    $_04b308_func,%ebp
		mov    $0x000008,%edx
		mov    %ecx,_0e46c8_data
		mov    %esi,_0e46d8_data
		mov    %edi,_0e46d4_data
		mov    %ebp,_0e46dc_data
		mov    %dx,_0cf1a4_data
		mov    %dx,_0cf18e_data
		mov    %dx,_0cf14c_data
		xor    %edx,%edx
		jmp    _04aa25_jump

	_04aa14_jump:
		xor    %ebx,%ebx
		mov    _095e14_data(%eax),%bl
		inc    %edx
		mov    %bx,_0cd15c_data(,%eax,2)

	_04aa25_jump:
		movswl %dx,%eax
		cmp    $0x000007,%eax
		jl     _04aa14_jump
		mov    $0x000064,%edi
		mov    $0x00000c,%eax
		xor    %dl,%dl
		xor    %esi,%esi
		mov    %dl,_0e470f_data
		mov    %si,_0cf1a2_data
		mov    %di,_0cf1a8_data
		mov    $0x000001,%dh
		mov    %ax,_0cf186_data
		mov    %dh,_0cf470_data
		mov    $0x000006,%edx
		mov    _0cf428_data,%al
		mov    %dx,_0cf174_data
		cmp    $0x000001,%al
		jb     _04aa7a_jump
		jbe    _04aa87_jump
		cmp    $0x000002,%al
		je     _04aa90_jump
		jmp    _04aa97_jump

	_04aa7a_jump:
		test   %al,%al
		jne    _04aa97_jump
		movb   $0x00005a,_0e470c_data
		jmp    _04aa97_jump

	_04aa87_jump:
		movb   $0x000069,_0e470c_data
		jmp    _04aa97_jump

	_04aa90_jump:
		movb   $0x000078,_0e470c_data

	_04aa97_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0e470c_data,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x00000f,%eax
		mov    %dx,_0cf164_data
		mov    $0x000044,%edx
		call   _04ea48_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04aac8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %esp,%edi
		mov    $_048a5b_jump,%esi
		mov    _0cf428_data,%al
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		cmp    $0x000001,%al
		jb     _04aaed_jump
		jbe    _04aaf8_jump
		cmp    $0x000002,%al
		je     _04aaff_jump
		jmp    _04ab04_jump

	_04aaed_jump:
		test   %al,%al
		jne    _04ab04_jump
		movb   $0x000014,0x000018(%esp)
		jmp    _04ab04_jump

	_04aaf8_jump:
		movb   $0x000019,0x000018(%esp)
		jmp    _04ab04_jump

	_04aaff_jump:
		movb   $0x00002d,0x000018(%esp)

	_04ab04_jump:
		mov    $_0966f9_data,%edi
		mov    _0c2b58_data,%esi
		push   %edi

	_04ab10_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04ab28_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04ab10_jump

	_04ab28_jump:
		pop    %edi
		mov    _0c2b58_data,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,%ebx
		inc    %ebx
		movswl %bx,%eax
		movb   $0x00002f,_0966f8_data(%eax)
		xor    %bh,%bh
		mov    _0cf18e_data,%dx
		mov    %bh,_0966f9_data(%eax)
		xor    %bl,%bl
		test   %dx,%dx
		jl     _04aca7_jump

	_04ab60_jump:
		movswl %bx,%ecx
		imul   $0x0000d8,%ecx,%edx
		mov    $_0cac98_data,%edi
		mov    (%esp,%ecx,1),%al
		add    %edx,%edi
		mov    %al,_0cad6f_data(%edx)
		cmp    $0x000008,%bx
		jne    _04abc6_jump
		mov    _0c2ac0_data,%esi
		push   %edi

	_04ab86_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04ab9e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04ab86_jump

	_04ab9e_jump:
		pop    %edi
		mov    $0x0000a0,%esi
		mov    _0cf19c_data,%ax
		mov    %si,_0cad68_data(%edx)
		mov    %ax,_0cad6a_data(%edx)
		mov    (%esp,%ecx,1),%al
		mov    %al,_0cad6f_data(%edx)
		jmp    _04ac6c_jump

	_04abc6_jump:
		lea    0x000000(,%ecx,4),%esi
		cmp    $0x000007,%bx
		jne    _04ac18_jump
		mov    _0c2b30_data(%esi),%esi
		push   %edi

	_04abda_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04abf2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04abda_jump

	_04abf2_jump:
		pop    %edi
		mov    _0cf19e_data,%ax
		add    $0x00000f,%eax
		imul   %ebx,%eax
		mov    $0x0000a0,%edi
		mov    _0cf1b4_data,%cx
		mov    %di,_0cad68_data(%edx)
		add    %ecx,%eax
		jmp    _04ac65_jump

	_04ac18_jump:
		mov    _0c2b30_data(%esi),%esi
		push   %edi

	_04ac1f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04ac37_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04ac1f_jump

	_04ac37_jump:
		pop    %edi
		xor    %eax,%eax
		mov    _0cf164_data,%cx
		mov    0x000018(%esp),%al
		add    %ecx,%eax
		mov    %ax,_0cad68_data(%edx)
		mov    _0cf19e_data,%ax
		add    $0x00000f,%eax
		imul   %ebx,%eax
		mov    _0cf1b4_data,%si
		add    %esi,%eax

	_04ac65_jump:
		mov    %ax,_0cad6a_data(%edx)

	_04ac6c_jump:
		movswl %bx,%edx
		imul   $0x0000d8,%edx,%edx
		mov    $0x000002,%cl
		xor    %al,%al
		mov    %cl,_0cad6c_data(%edx)
		inc    %ebx
		mov    %al,_0cad6d_data(%edx)
		mov    $_0cac98_data,%eax
		mov    $0x000001,%ch
		add    %edx,%eax
		mov    %ch,_0cad6e_data(%edx)
		call   _01ed18_func
		cmp    _0cf18e_data,%bx
		jle    _04ab60_jump

	_04aca7_jump:
		mov    $0x000001,%dl
		mov    $_0caae8_data,%edi
		mov    $0x000002,%bl
		mov    _0cf164_data,%ax
		mov    _0c2bd0_data,%esi
		add    $0x000050,%eax
		mov    %dl,_0cb506_data
		mov    %ax,_0cb500_data
		xor    %dh,%dh
		mov    $0x000002,%ah
		mov    %dh,_0cb505_data
		mov    %ah,_0cb504_data
		push   %edi

	_04acde_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04acf6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04acde_jump

	_04acf6_jump:
		pop    %edi
		mov    $0x0000a0,%esi
		mov    $0x000064,%edi
		mov    $_0caae8_data,%eax
		mov    %bl,_0cabbc_data
		mov    %bl,_0cabbe_data
		mov    %dh,_0cabbd_data
		mov    %si,_0cabb8_data
		mov    %di,_0cabba_data
		call   _01ed18_func
		xor    %eax,%eax
		mov    _0cf164_data,%bx
		mov    _0e470c_data,%al
		mov    _0cf194_data,%cx
		add    %eax,%eax
		mov    _0cf194_data,%dx
		mov    %ax,0x000010(%esp)
		mov    _0cb42a_data,%ax
		mov    _0e46fc_data,%si
		sub    %edx,%eax
		sub    $0x000002,%ebx
		add    $0x000023,%eax
		sub    $0x000019,%ecx
		mov    %ax,0x000014(%esp)
		cmp    %si,%bx
		jge    _04ad76_jump
		mov    %ebx,%edx
		jmp    _04ad78_jump

	_04ad76_jump:
		mov    %esi,%edx

	_04ad78_jump:
		mov    _0e4700_data,%di
		cmp    %di,%cx
		jge    _04ad88_jump
		mov    %ecx,%eax
		jmp    _04ad8a_jump

	_04ad88_jump:
		mov    %edi,%eax

	_04ad8a_jump:
		mov    0x00000e(%esp),%ebp
		mov    _0e46fa_data,%esi
		mov    _0e4702_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		sar    $0x000010,%ebp
		add    %edi,%esi
		movswl %bx,%edi
		add    %ebp,%edi
		cmp    %edi,%esi
		jle    _04adb7_jump
		movswl %dx,%edi
		sub    %edi,%esi
		mov    %esi,%edi
		jmp    _04adbc_jump

	_04adb7_jump:
		movswl %dx,%esi
		sub    %esi,%edi

	_04adbc_jump:
		mov    _0e46fc_data,%ebp
		mov    _0e46fe_data,%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		add    %esi,%ebp
		mov    %ebp,0x00000c(%esp)
		mov    0x000012(%esp),%ebp
		sar    $0x000010,%ebp
		movswl %cx,%esi
		add    %ebp,%esi
		mov    0x00000c(%esp),%ebp
		cmp    %ebp,%esi
		jge    _04adf1_jump
		movswl %ax,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi
		jmp    _04adf6_jump

	_04adf1_jump:
		movswl %ax,%ebp
		sub    %ebp,%esi

	_04adf6_jump:
		mov    %bx,_0e46fc_data
		mov    0x000010(%esp),%ebx
		mov    %cx,_0e4700_data
		mov    %bx,_0e4704_data
		mov    0x000014(%esp),%ebx
		mov    _095e1b_data,%ch
		mov    %bx,_0e46fe_data
		test   %ch,%ch
		je     _04ae3b_jump
		push   $0x000001
		movswl %si,%ecx
		movswl %di,%ebx
		cwtl   
		movswl %dx,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _04f6dc_func
		jmp    _04ae4e_jump

	_04ae3b_jump:
		movswl %si,%ecx
		movswl %di,%ebx
		cwtl   
		movswl %dx,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _04feec_func

	_04ae4e_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ae58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0cf428_data,%al
		cmp    $0x000001,%al
		jb     _04ae72_jump
		jbe    _04ae7d_jump
		cmp    $0x000002,%al
		je     _04ae84_jump
		jmp    _04ae89_jump

	_04ae72_jump:
		test   %al,%al
		jne    _04ae89_jump
		movb   $0x00003e,0x000004(%esp)
		jmp    _04ae89_jump

	_04ae7d_jump:
		movb   $0x000046,0x000004(%esp)
		jmp    _04ae89_jump

	_04ae84_jump:
		movb   $0x00004b,0x000004(%esp)

	_04ae89_jump:
		call   _03cd54_func
		cmpb   $0x000000,_095e1b_data
		je     _04aebf_jump
		mov    _0e46fc_data,%ecx
		mov    _0e4702_data,%ebx
		mov    _0e46fe_data,%edx
		mov    _0e46fa_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024808_func

	_04aebf_jump:
		push   $0x000001
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cf192_data,%ebx
		mov    $_0966f8_data,%eax
		sar    $0x000010,%ebx
		call   _01a168_func
		xor    %bh,%bh
		mov    $_0cb430_data,%ebp
		mov    %bh,0x000008(%esp)
		jmp    _04b05e_jump

	_04aeee_jump:
		xor    %eax,%eax
		mov    %dl,%al
		imul   $0x0000d8,%eax,%eax
		mov    _0cad68_data(%eax),%bx
		mov    _0cf1a4_data,%cx
		mov    %bx,(%esp)
		mov    _0cad6a_data(%eax),%bx
		cmp    %cx,%dx
		je     _04af3a_jump
		xor    %edx,%edx
		mov    $0x000002,%ecx
		mov    _0cad6f_data(%eax),%dl
		movswl %bx,%ebx
		push   %edx
		mov    0x000002(%esp),%edx
		add    $_0cac98_data,%eax
		sar    $0x000010,%edx
		call   _01a168_func
		jmp    _04af57_jump

	_04af3a_jump:
		mov    _0cf1a2_data,%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    $0x000001,%edx
		add    $_0cac98_data,%eax
		call   _04ebe0_func

	_04af57_jump:
		mov    _0cf18c_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000008(%esp),%dl
		dec    %eax
		cmp    %eax,%edx
		jge    _04b05a_jump
		cmpb   $0x000000,_0e470f_data
		je     _04b011_jump
		xor    %eax,%eax
		mov    _0cf1a4_data,%si
		mov    %dl,%al
		cmp    %si,%ax
		jne    _04b011_jump
		mov    _0cf1a2_data,%eax
		sar    $0x000010,%eax
		mov    _0cd15a_data(,%eax,2),%eax
		mov    _0e46c0_data,%esi
		sar    $0x000010,%eax
		mov    %ebp,%edi
		mov    (%esi,%eax,4),%esi
		push   %edi

	_04afad_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04afc5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04afad_jump

	_04afc5_jump:
		pop    %edi
		mov    _0cf1a2_data,%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    _0cad6f_data(%eax),%dl
		mov    %dl,_0cb507_data
		mov    _0cad6a_data(%eax),%ax
		mov    %ax,_0cb502_data
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000004(%esp),%al
		add    %eax,%edx
		mov    %ebp,%eax
		mov    %dx,_0cb500_data
		call   _01ed18_func
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _04ebe0_func
		jmp    _04b05a_jump

	_04b011_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		imul   $0x0000d8,%eax,%ebx
		mov    (%esp),%edi
		mov    $0x000002,%ecx
		xor    %edx,%edx
		mov    _0e46c0_data,%esi
		mov    _0cad6f_data(%ebx),%dl
		mov    _0cd15a_data(,%eax,2),%eax
		push   %edx
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    _0cad68_data(%ebx),%ebx
		mov    0x000008(%esp),%dl
		sar    $0x000010,%ebx
		add    %edi,%edx
		mov    (%esi,%eax,4),%eax
		movswl %dx,%edx
		call   _01a168_func

	_04b05a_jump:
		incb   0x000008(%esp)

	_04b05e_jump:
		xor    %edx,%edx
		mov    _0cf18e_data,%bx
		mov    0x000008(%esp),%dl
		cmp    %bx,%dx
		jle    _04aeee_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04b080_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf18e_data,%si
		call   _04eb1c_func
		cmpb   $0x000000,_0e470f_data
		jne    _04b2b2_jump
		call   _037514_func
		test   %al,%al
		je     _04b0ae_jump
		movb   $0x000001,_0cf42b_data

	_04b0ae_jump:
		call   _041d08_func
		test   %ax,%ax
		jne    _04b173_jump
		call   _041c98_func
		test   %ax,%ax
		jne    _04b173_jump
		cmpb   $0x000000,_0cf470_data
		jne    _04b107_jump
		mov    _0cf1a2_data,%ax
		cmp    _0cf186_data,%ax
		jle    _04b173_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04b173_jump

	_04b107_jump:
		call   _041de8_func
		test   %ax,%ax
		je     _04b13d_jump
		mov    $0x000044,%eax
		call   _072210_func
		mov    _0cf1a4_data,%ax
		test   %ax,%ax
		jne    _04b131_jump
		movw   $0x000008,_0cf1a4_data
		jmp    _04b173_jump

	_04b131_jump:
		mov    %eax,%edx
		dec    %edx
		mov    %dx,_0cf1a4_data
		jmp    _04b173_jump

	_04b13d_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _04b173_jump
		mov    $0x000044,%eax
		call   _072210_func
		mov    _0cf1a4_data,%bx
		cmp    $0x000008,%bx
		jne    _04b169_jump
		xor    %edi,%edi
		mov    %di,_0cf1a4_data
		jmp    _04b173_jump

	_04b169_jump:
		mov    %ebx,%ecx
		inc    %ecx
		mov    %cx,_0cf1a4_data

	_04b173_jump:
		cmpw   $0x000007,_0cf1a4_data
		jne    _04b1e7_jump
		call   _0373f0_func
		test   %al,%al
		je     _04b1e7_jump
		cmpb   $0x000000,_0cf470_data
		je     _04b1e7_jump
		mov    $0x00004b,%ebx
		mov    $0x000048,%ecx
		mov    $0x00004d,%edi
		mov    $0x000050,%eax
		mov    $0x000038,%edx
		mov    %bx,_0cd15c_data
		mov    %cx,_0cd15e_data
		mov    %di,_0cd160_data
		mov    %ax,_0cd162_data
		mov    %dx,_0cd164_data
		mov    $0x000039,%ebx
		mov    $0x00001d,%ecx
		mov    %bx,_0cd166_data
		mov    %cx,_0cd168_data
		jmp    _04b2f4_jump

	_04b1e7_jump:
		mov    _0cf1a4_data,%di
		test   %di,%di
		jl     _04b229_jump
		cmp    $0x000006,%di
		jg     _04b229_jump
		call   _0373f0_func
		test   %al,%al
		je     _04b229_jump
		cmpb   $0x000000,_0cf470_data
		je     _04b229_jump
		movb   $0x000001,_0e470f_data
		call   _0426c0_func
		call   _04eb60_func
		mov    _0cf18e_data,%si
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04b229_jump:
		cmpw   $0x000008,_0cf1a4_data
		jne    _04b2f4_jump
		call   _0373f0_func
		test   %al,%al
		je     _04b2f4_jump
		mov    _0cf18e_data,%si
		mov    $0x000001,%ecx
		mov    %esi,%eax
		cmp    %cx,%si
		jg     _04b285_jump
		jmp    _04b28a_jump

	_04b259_jump:
		mov    %ecx,%eax

	_04b25b_jump:
		inc    %eax
		movswl %cx,%edx
		lea    0x000000(,%edx,2),%ebx
		movswl %ax,%edx
		mov    _0cd15c_data(%ebx),%bx
		cmp    _0cd15c_data(,%edx,2),%bx
		je     _04b27f_jump
		cmp    %si,%ax
		jl     _04b25b_jump

	_04b27f_jump:
		inc    %ecx
		cmp    %si,%cx
		jge    _04b28a_jump

	_04b285_jump:
		cmp    %si,%ax
		je     _04b259_jump

	_04b28a_jump:
		mov    %si,_0cf18e_data
		cmp    %si,%ax
		jge    _04b2f4_jump
		mov    $_0caae8_data,%eax
		call   _04ece4_func
		call   _04eb60_func
		mov    _0cf18e_data,%si
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04b2b2_jump:
		xor    %ecx,%ecx
		xor    %ebx,%ebx

	_04b2b6_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _041c64_func
		test   %al,%al
		je     _04b2ec_jump
		mov    _0e46c0_data,%edx
		movswl %cx,%eax
		cmp    (%edx,%eax,4),%ebx
		je     _04b2ec_jump
		mov    _0cf1a2_data,%eax
		sar    $0x000010,%eax
		mov    %bl,_0e470f_data
		mov    %cx,_0cd15c_data(,%eax,2)
		call   _0426c0_func

	_04b2ec_jump:
		inc    %ecx
		cmp    $0x000080,%cx
		jl     _04b2b6_jump

	_04b2f4_jump:
		call   _04eb60_func
		mov    _0cf18e_data,%si
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04b308_func:
		push   %ebx
		push   %edx
		mov    $0x000004,%ah
		mov    _0cf42b_data,%dl
		mov    %ah,_0cf429_data
		test   %dl,%dl
		jne    _04b342_jump
		xor    %dh,%dh
		jmp    _04b32e_jump

	_04b320_jump:
		mov    _0cd15c_data(,%eax,2),%bl
		inc    %edx
		mov    %bl,_095e14_data(%eax)

	_04b32e_jump:
		mov    _0cf18c_data,%ebx
		sar    $0x000010,%ebx
		movswl %dx,%eax
		dec    %ebx
		cmp    %ebx,%eax
		jl     _04b320_jump
		pop    %edx
		pop    %ebx
		ret    

	_04b342_jump:
		xor    %dh,%dh
		mov    _095e1b_data,%bl
		mov    %dh,_0967a3_data
		test   %bl,%bl
		jne    _04b359_jump
		call   _03ca10_func

	_04b359_jump:
		pop    %edx
		pop    %ebx
		ret    



_04b35c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_04b35c_func,%edx
		mov    $_04b3bc_func,%ebx
		mov    $_04b518_func,%ecx
		mov    $_04b6f0_func,%esi
		mov    $_04b938_func,%edi
		mov    %edx,_0e46cc_data
		mov    %ebx,_0e46c8_data
		mov    %ecx,_0e46d8_data
		mov    %esi,_0e46d4_data
		xor    %edx,%edx
		mov    %edi,_0e46dc_data
		mov    %dx,_0c91a6_data
		mov    %dx,_0c91a4_data
		mov    %dx,_0c91a2_data
		mov    %dx,_0c91a0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04b3bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		xor    %edx,%edx
		mov    $0x00000c,%ecx
		mov    %dx,_0cf1a2_data
		mov    %cx,_0cf186_data
		mov    %dx,_0cf1a4_data
		xor    %dl,%dl
		xor    %ecx,%ecx
		mov    %dl,_0967a1_data
		imul   $0x000014,%ecx,%edx
		mov    %esp,%edi
		mov    $0x000001,%ah
		mov    $0x000064,%ebx
		mov    $_048a65_jump,%esi
		xor    %ebp,%ebp
		mov    %ah,_0cf470_data
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %bx,_0cf1a8_data
		mov    $0x000006,%esi
		mov    $0x000004,%eax
		mov    $_0cac98_data,%ebx
		mov    %si,_0cf174_data
		mov    %ax,_0cf18e_data
		add    $0x000046,%edx
		mov    %ax,_0cf14c_data
		mov    %edx,0x000008(%esp)

	_04b436_jump:
		xor    %dh,%dh
		mov    %dh,_0e4706_data(%ecx)
		imul   $0x0000d8,%ecx,%edx
		movb   $0x000002,_0cad6c_data(%edx)
		movb   $0x000001,_0cad6e_data(%edx)
		xor    %al,%al
		mov    %al,_0cad6d_data(%edx)
		cmp    $0x000004,%ecx
		jne    _04b4a5_jump
		mov    $0x0000a0,%eax
		mov    $0x00009b,%esi
		mov    %ebx,%edi
		mov    %si,_0cad6a_data(%edx)
		mov    _0c2ac0_data,%esi
		mov    %ax,_0cad68_data(%edx)
		push   %edi

	_04b480_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b498_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b480_jump

	_04b498_jump:
		pop    %edi
		mov    0x000004(%esp),%al
		mov    %al,_0cad6f_data(%edx)
		jmp    _04b4e7_jump

	_04b4a5_jump:
		mov    $0x000078,%edi
		mov    _0c2be0_data(%ebp),%esi
		mov    %di,_0cad68_data(%edx)
		mov    %ebx,%edi
		push   %edi

	_04b4ba_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b4d2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b4ba_jump

	_04b4d2_jump:
		pop    %edi
		mov    (%esp,%ecx,1),%al
		mov    0x000008(%esp),%esi
		mov    %al,_0cad6f_data(%edx)
		mov    %si,_0cad6a_data(%edx)

	_04b4e7_jump:
		mov    %ebx,%eax
		mov    0x000008(%esp),%esi
		call   _01ed18_func
		add    $0x000004,%ebp
		inc    %ecx
		add    $0x000014,%esi
		add    $0x0000d8,%ebx
		mov    %esi,0x000008(%esp)
		cmp    $0x000004,%ecx
		jle    _04b436_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04b518_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %esp,%edi
		mov    $_048a6a_jump,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   _03cd54_func
		cmpb   $0x000000,_095e1b_data
		je     _04b560_jump
		mov    _0e46fc_data,%ecx
		mov    _0e4702_data,%ebx
		mov    _0e46fe_data,%edx
		mov    _0e46fa_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024808_func

	_04b560_jump:
		mov    $0x000001,%edx
		mov    $_0cc6c0_data,%eax
		call   _04ebe0_func
		xor    %dl,%dl
		mov    %dl,0x00000c(%esp)
		mov    $0x000028,%ebp

	_04b57a_jump:
		xor    %edx,%edx
		mov    0x00000c(%esp),%dl
		imul   $0x0000d8,%edx,%eax
		mov    _0cad68_data(%eax),%bx
		mov    _0cad6a_data(%eax),%si
		mov    %bx,0x000008(%esp)
		cmp    $0x000004,%dl
		jae    _04b64b_jump
		cmpb   $0x000000,_0e4706_data(%edx)
		je     _04b5d0_jump
		xor    %eax,%eax
		mov    %dl,%al
		imul   $0x000014,%eax,%eax
		push   $0x000000
		mov    $0x000009,%ecx
		add    $0x00003b,%eax
		mov    $0x000022,%ebx
		movswl %ax,%edx
		mov    $0x0000c0,%eax
		call   _023f6c_func

	_04b5d0_jump:
		movzbl 0x00000c(%esp),%edi
		cmpw   $0x000002,_0c91a0_data(,%edi,2)
		jne    _04b625_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   $0x000014,%eax,%eax
		push   $0x000002
		mov    $0x000010,%ecx
		mov    %ebp,%ebx
		add    $0x000037,%eax
		push   $0x000000
		movswl %ax,%edx
		mov    $0x0000bc,%eax
		call   _019f3c_func
		xor    %eax,%eax
		mov    $0x000002,%ecx
		mov    (%esp,%edi,1),%al
		mov    $0x0000e9,%edx
		push   %eax
		movswl %si,%ebx
		mov    $_0c0fd8_data,%eax
		call   _01a168_func
		jmp    _04b64b_jump

	_04b625_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   $0x000014,%eax,%eax
		push   $0x000001
		mov    $0x000010,%ecx
		mov    %ebp,%ebx
		add    $0x000037,%eax
		push   $0x000000
		movswl %ax,%edx
		mov    $0x0000bc,%eax
		call   _019f3c_func

	_04b64b_jump:
		xor    %eax,%eax
		mov    _0cf1a4_data,%bx
		mov    0x00000c(%esp),%al
		cmp    %bx,%ax
		je     _04b68a_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		xor    %edx,%edx
		mov    (%esp,%eax,1),%dl
		imul   $0x0000d8,%eax,%eax
		mov    $0x000002,%ecx
		push   %edx
		mov    0x00000a(%esp),%edx
		movswl %si,%ebx
		sar    $0x000010,%edx
		add    $_0cac98_data,%eax
		call   _01a168_func
		jmp    _04b6b5_jump

	_04b68a_jump:
		xor    %edx,%edx
		mov    0x00000c(%esp),%dl
		imul   $0x0000d8,%edx,%ebx
		mov    (%esp,%edx,1),%al
		mov    %al,_0cad6f_data(%ebx)
		add    $_0cac98_data,%ebx
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _01ed18_func
		mov    %ebx,%eax
		call   _04ebe0_func

	_04b6b5_jump:
		mov    0x00000c(%esp),%dh
		inc    %dh
		mov    %dh,0x00000c(%esp)
		cmp    $0x000004,%dh
		jbe    _04b57a_jump
		push   $0x000005
		mov    $0x000002,%ecx
		mov    $0x0000af,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2bf0_data,%eax
		call   _01a168_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04b6f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _04eb1c_func
		cmpw   $0x000001,_0cf1ea_data
		jne    _04b725_jump
		mov    _0c91a0_data,%bx
		test   %bx,%bx
		jne    _04b725_jump
		mov    _0cf1a4_data,%ax
		cmp    _0cf14c_data,%ax
		jne    _04b725_jump
		mov    %bx,_0cf1ea_data

	_04b725_jump:
		call   _037514_func
		test   %al,%al
		je     _04b735_jump
		movb   $0x000001,_0cf42b_data

	_04b735_jump:
		cmpb   $0x000000,_0cf470_data
		jne    _04b772_jump
		mov    _0cf1a2_data,%ax
		cmp    _0cf186_data,%ax
		jle    _04b7f2_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04b7f2_jump

	_04b772_jump:
		call   _041de8_func
		test   %ax,%ax
		je     _04b7b3_jump
		mov    $0x000044,%eax
		call   _072210_func
		xor    %eax,%eax
		mov    _0cf1a4_data,%cx
		mov    _0967a1_data,%al
		cmp    %cx,%ax
		jne    _04b7a7_jump
		mov    _0cf14c_data,%ax
		mov    %ax,_0cf1a4_data
		jmp    _04b7f2_jump

	_04b7a7_jump:
		mov    %ecx,%esi
		dec    %esi
		mov    %si,_0cf1a4_data
		jmp    _04b7f2_jump

	_04b7b3_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _04b7f2_jump
		mov    $0x000044,%eax
		call   _072210_func
		mov    _0cf1a4_data,%ax
		mov    _0cf14c_data,%dx
		cmp    %dx,%ax
		jne    _04b7e8_jump
		xor    %edx,%eax
		mov    _0967a1_data,%al
		mov    %ax,_0cf1a4_data
		jmp    _04b7f2_jump

	_04b7e8_jump:
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,_0cf1a4_data

	_04b7f2_jump:
		call   _041e58_func
		test   %ax,%ax
		je     _04b827_jump
		mov    _0cf1a4_data,%ax
		cmp    _0cf14c_data,%ax
		je     _04b827_jump
		cmpb   $0x000000,_0e4706_data
		jne    _04b81e_jump
		mov    $0x000044,%eax
		call   _072210_func

	_04b81e_jump:
		movb   $0x000001,_0e4706_data
		jmp    _04b841_jump

	_04b827_jump:
		cmpb   $0x000000,_0e4706_data
		je     _04b839_jump
		movw   $0x000002,_0c91a0_data

	_04b839_jump:
		xor    %bl,%bl
		mov    %bl,_0e4706_data

	_04b841_jump:
		call   _041ee4_func
		test   %ax,%ax
		je     _04b876_jump
		mov    _0cf1a4_data,%ax
		cmp    _0cf14c_data,%ax
		je     _04b876_jump
		cmpb   $0x000000,_0e4707_data
		jne    _04b86d_jump
		mov    $0x000044,%eax
		call   _072210_func

	_04b86d_jump:
		movb   $0x000001,_0e4707_data
		jmp    _04b88f_jump

	_04b876_jump:
		cmpb   $0x000000,_0e4707_data
		je     _04b888_jump
		movw   $0x000002,_0c91a2_data

	_04b888_jump:
		xor    %al,%al
		mov    %al,_0e4707_data

	_04b88f_jump:
		call   _041f70_func
		test   %ax,%ax
		je     _04b8c4_jump
		mov    _0cf1a4_data,%ax
		cmp    _0cf14c_data,%ax
		je     _04b8c4_jump
		cmpb   $0x000000,_0e4708_data
		jne    _04b8bb_jump
		mov    $0x000044,%eax
		call   _072210_func

	_04b8bb_jump:
		movb   $0x000001,_0e4708_data
		jmp    _04b8de_jump

	_04b8c4_jump:
		cmpb   $0x000000,_0e4708_data
		je     _04b8d6_jump
		movw   $0x000002,_0c91a4_data

	_04b8d6_jump:
		xor    %bl,%bl
		mov    %bl,_0e4708_data

	_04b8de_jump:
		call   _041ffc_func
		test   %ax,%ax
		je     _04b913_jump
		mov    _0cf1a4_data,%ax
		cmp    _0cf14c_data,%ax
		je     _04b913_jump
		cmpb   $0x000000,_0e4709_data
		jne    _04b90a_jump
		mov    $0x000044,%eax
		call   _072210_func

	_04b90a_jump:
		movb   $0x000001,_0e4709_data
		jmp    _04b92c_jump

	_04b913_jump:
		cmpb   $0x000000,_0e4709_data
		je     _04b925_jump
		movw   $0x000002,_0c91a6_data

	_04b925_jump:
		xor    %al,%al
		mov    %al,_0e4709_data

	_04b92c_jump:
		call   _04eb60_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04b938_func:
		push   %ebx
		push   %edx
		push   %esi
		xor    %eax,%eax

	_04b93d_jump:
		movswl %ax,%edx
		cmpw   $0x000000,_0c91a0_data(,%edx,2)
		sete   %bl
		xor    %bh,%bh
		inc    %eax
		mov    %bx,_0c91a0_data(,%edx,2)
		cmp    $0x000004,%ax
		jl     _04b93d_jump
		mov    %bh,_0cf42b_data
		xor    %esi,%esi
		xor    %edx,%edx
		mov    %si,_0cf17e_data
		mov    %edx,_0e46dc_data
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_04b978_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_04ba78_func,%edx
		mov    $_04bdfc_func,%ebx
		mov    $_04bf80_func,%ecx
		mov    $_04c22c_func,%esi
		mov    $0x000064,%edi
		mov    _0c3f68_data,%ax
		mov    %edx,_0e46c8_data
		mov    %ebx,_0e46d8_data
		mov    %ecx,_0e46d4_data
		mov    %esi,_0e46dc_data
		mov    %ax,_0cd15e_data
		mov    %di,_0cf1a8_data
		mov    $0x000005,%edx
		mov    _0c3f6a_data,%ax
		xor    %esi,%esi
		mov    %ax,_0cd160_data
		mov    %dx,_0cf1a4_data
		mov    %dx,_0cf18e_data
		mov    %dx,_0cf14c_data
		mov    %si,_0cf1a2_data
		mov    _0c3f6e_data,%ax
		mov    $0x000001,%dl
		mov    %ax,_0cd162_data
		xor    %ah,%ah
		mov    %dl,_0cf470_data
		mov    %ah,_0967a1_data
		mov    $0x00000c,%eax
		mov    $0x000006,%edx
		mov    %ax,_0cf186_data
		mov    _0cf428_data,%al
		mov    %dx,_0cf174_data
		cmp    $0x000001,%al
		jb     _04ba34_jump
		jbe    _04ba41_jump
		cmp    $0x000002,%al
		je     _04ba41_jump
		jmp    _04ba48_jump

	_04ba34_jump:
		test   %al,%al
		jne    _04ba48_jump
		movb   $0x000041,_0e470c_data
		jmp    _04ba48_jump

	_04ba41_jump:
		movb   $0x000069,_0e470c_data

	_04ba48_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0e470c_data,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x000014,%eax
		mov    %dx,_0cf164_data
		mov    $0x00003c,%edx
		call   _04ea48_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ba78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    %esp,%edi
		mov    $_048a6f_jump,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    $_0966f8_data,%edi
		mov    _0c2b5c_data,%esi
		push   %edi

	_04ba97_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04baaf_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04ba97_jump

	_04baaf_jump:
		pop    %edi
		mov    _0967a1_data,%al
		mov    %al,0x000030(%esp)
		jmp    _04bc60_jump

	_04babe_jump:
		mov    %eax,%ebx
		imul   $0x0000d8,%eax,%ebp
		sub    %edx,%ebx
		mov    (%esp,%ebx,1),%dl
		movzbw %al,%si
		mov    %dl,_0cad6f_data(%ebp)
		xor    %edx,%edx
		mov    %esi,%ebx
		mov    _0967a1_data,%dl
		sub    %edx,%ebx
		mov    %ebx,%edx
		mov    _0cf19e_data,%bx
		add    $0x00000f,%ebx
		imul   %ebx,%edx
		add    _0cf1b4_data,%dx
		mov    $0x000001,%bl
		mov    %dx,_0cad6a_data(%ebp)
		mov    $0x000002,%dh
		mov    %bl,_0cad6e_data(%ebp)
		mov    _0cf14c_data,%cx
		mov    %dh,_0cad6c_data(%ebp)
		mov    $_0cac98_data,%edx
		xor    %bh,%bh
		add    %ebp,%edx
		mov    %bh,_0cad6d_data(%ebp)
		cmp    %cx,%si
		jne    _04bb66_jump
		mov    _0c2ac0_data,%esi
		mov    %edx,%edi
		push   %edi

	_04bb32_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04bb4a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04bb32_jump

	_04bb4a_jump:
		pop    %edi
		movw   $0x0000a0,_0cad68_data(%ebp)
		mov    _0cf19c_data,%ax
		mov    %ax,_0cad6a_data(%ebp)
		jmp    _04bc46_jump

	_04bb66_jump:
		test   %al,%al
		jne    _04bb9d_jump
		mov    $0x0000a0,%edi
		mov    _0c2b98_data,%esi
		mov    %di,_0cad68_data(%ebp)
		mov    %edx,%edi
		push   %edi

	_04bb7f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04bb97_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04bb7f_jump

	_04bb97_jump:
		pop    %edi
		jmp    _04bc46_jump

	_04bb9d_jump:
		mov    0x000030(%esp),%ch
		shl    $0x000002,%eax
		cmp    $0x000004,%ch
		jne    _04bbd9_jump
		mov    $0x0000a0,%esi
		mov    %edx,%edi
		mov    %si,_0cad68_data(%ebp)
		mov    _0c2b3c_data(%eax),%esi
		push   %edi

	_04bbbe_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04bbd6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04bbbe_jump

	_04bbd6_jump:
		pop    %edi
		jmp    _04bc46_jump

	_04bbd9_jump:
		mov    $0x000001,%ecx
		mov    %edx,%edi
		mov    _0c2b3c_data(%eax),%esi
		mov    $0x000008,%ebx
		push   %edi

	_04bbec_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04bc04_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04bbec_jump

	_04bc04_jump:
		pop    %edi
		push   $0x000002
		mov    $0xffffffff,%edx
		mov    %edi,%eax
		call   _01ecbc_func
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    %eax,%esi
		mov    $_0c0f38_data,%eax
		add    $0x000010,%esi
		call   _01ecbc_func
		add    %esi,%eax
		cwtl   
		mov    $0x0000a0,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,_0cad68_data(%ebp)

	_04bc46_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x0000d8,%eax,%eax
		add    $_0cac98_data,%eax
		call   _01ed18_func
		incb   0x000030(%esp)

	_04bc60_jump:
		mov    _0cf18c_data,%esi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0967a1_data,%dl
		sar    $0x000010,%esi
		mov    0x000030(%esp),%al
		add    %edx,%esi
		cmp    %esi,%eax
		jle    _04babe_jump
		xor    %eax,%eax
		mov    _0e470c_data,%al
		mov    _0cf14a_data,%esi
		add    %eax,%eax
		sar    $0x000010,%esi
		mov    %ax,0x000028(%esp)
		lea    0x000000(,%esi,8),%eax
		sub    %esi,%eax
		shl    $0x000002,%eax
		sub    %esi,%eax
		mov    _0cf164_data,%dx
		mov    _0cf194_data,%bx
		mov    _0cad6a_data(,%eax,8),%ax
		mov    _0cf194_data,%cx
		mov    %eax,%edi
		sub    $0x000019,%ebx
		sub    %ecx,%edi
		mov    _0e46fc_data,%si
		add    $0x000023,%edi
		cmp    %si,%dx
		jge    _04bcdd_jump
		mov    %edx,%ecx
		jmp    _04bcdf_jump

	_04bcdd_jump:
		mov    %esi,%ecx

	_04bcdf_jump:
		mov    _0e4700_data,%ax
		cmp    %ax,%bx
		jge    _04bcec_jump
		mov    %ebx,%eax

	_04bcec_jump:
		mov    _0e46fa_data,%esi
		sar    $0x000010,%esi
		mov    %esi,0x000020(%esp)
		mov    _0e4702_data,%esi
		mov    0x000020(%esp),%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		movswl %dx,%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x000026(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,0x00001c(%esp)
		mov    0x000008(%esp),%ebp
		add    0x00001c(%esp),%ebp
		cmp    %ebp,%esi
		jle    _04bd31_jump
		movswl %cx,%ebp
		sub    %ebp,%esi
		mov    %esi,0x000024(%esp)
		jmp    _04bd3a_jump

	_04bd31_jump:
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,0x000024(%esp)

	_04bd3a_jump:
		mov    0x000024(%esp),%esi
		mov    %si,0x00002c(%esp)
		mov    _0e46fe_data,%esi
		sar    $0x000010,%esi
		mov    %esi,0x000018(%esp)
		mov    _0e46fc_data,%esi
		mov    0x000018(%esp),%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		movswl %bx,%ebp
		mov    %ebp,0x000010(%esp)
		movswl %di,%ebp
		mov    %ebp,0x00000c(%esp)
		mov    0x000010(%esp),%ebp
		add    0x00000c(%esp),%ebp
		cmp    %ebp,%esi
		jle    _04bd84_jump
		movswl %ax,%ebp
		sub    %ebp,%esi
		mov    %esi,0x000014(%esp)
		jmp    _04bd8d_jump

	_04bd84_jump:
		movswl %ax,%esi
		sub    %esi,%ebp
		mov    %ebp,0x000014(%esp)

	_04bd8d_jump:
		mov    0x000014(%esp),%esi
		mov    %dx,_0e46fc_data
		mov    0x000028(%esp),%edx
		mov    %bx,_0e4700_data
		mov    %dx,_0e4704_data
		mov    _095e1b_data,%dl
		mov    %di,_0e46fe_data
		test   %dl,%dl
		je     _04bdd8_jump
		push   $0x000001
		mov    0x00002e(%esp),%ebx
		movswl %si,%edx
		cwtl   
		sar    $0x000010,%ebx
		movswl %cx,%esi
		mov    %edx,%ecx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _04f6dc_func
		jmp    _04bdef_jump

	_04bdd8_jump:
		mov    0x00002a(%esp),%ebx
		movswl %si,%esi
		movswl %ax,%edx
		sar    $0x000010,%ebx
		movswl %cx,%eax
		mov    %esi,%ecx
		call   _04feec_func

	_04bdef_jump:
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04bdfc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %esp,%edi
		mov    $_048a78_switch,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   _03cd54_func
		cmpb   $0x000000,_095e1b_data
		je     _04be46_jump
		mov    _0e46fc_data,%ecx
		mov    _0e4702_data,%ebx
		mov    _0e46fe_data,%edx
		mov    _0e46fa_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024808_func

	_04be46_jump:
		push   $0x000001
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cf192_data,%ebx
		mov    $_0966f8_data,%eax
		sar    $0x000010,%ebx
		call   _01a168_func
		mov    _0967a1_data,%al
		mov    %al,0x000018(%esp)
		mov    $0x000002,%ebp
		jmp    _04bf53_jump

	_04be78_jump:
		imul   $0x0000d8,%eax,%eax
		mov    _0cad68_data(%eax),%dx
		mov    %dx,0x000010(%esp)
		mov    _0cad6a_data(%eax),%dx
		mov    %dx,0x000014(%esp)
		xor    %edx,%edx
		mov    _0cf1a4_data,%bx
		mov    0x000018(%esp),%dl
		cmp    %bx,%dx
		je     _04becd_jump
		mov    0x000012(%esp),%ebx
		xor    %edx,%edx
		mov    %ebp,%ecx
		mov    _0cad6f_data(%eax),%dl
		sar    $0x000010,%ebx
		push   %edx
		mov    0x000012(%esp),%edx
		add    $_0cac98_data,%eax
		sar    $0x000010,%edx
		call   _01a168_func
		jmp    _04beea_jump

	_04becd_jump:
		mov    _0cf1a2_data,%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    $0x000001,%edx
		add    $_0cac98_data,%eax
		call   _04ebe0_func

	_04beea_jump:
		mov    0x000018(%esp),%dl
		test   %dl,%dl
		jbe    _04bf4f_jump
		cmp    $0x000004,%dl
		jae    _04bf4f_jump
		movzbl %dl,%edi
		imul   $0x0000d8,%edi,%esi
		mov    $_0cac98_data,%eax
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		push   %ebp
		mov    $0xffffffff,%edx
		add    %esi,%eax
		call   _01ecbc_func
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0cad6f_data(%esi),%al
		add    $0x000010,%edx
		push   %eax
		mov    0x000014(%esp),%eax
		add    %edx,%eax
		mov    0x000016(%esp),%ebx
		movswl %ax,%edx
		mov    _0cd15a_data(,%edi,2),%eax
		mov    %ebp,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    0x000004(%esp,%eax,4),%eax
		call   _01a168_func

	_04bf4f_jump:
		incb   0x000018(%esp)

	_04bf53_jump:
		xor    %eax,%eax
		mov    _0cf18c_data,%edx
		mov    _0967a1_data,%al
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		cmp    %edx,%eax
		jle    _04be78_jump
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04bf80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _04eb1c_func
		call   _037514_func
		mov    $0x000004,%cl
		test   %al,%al
		je     _04bf9c_jump
		movb   $0x000001,_0cf42b_data

	_04bf9c_jump:
		cmpb   $0x000000,_0cf470_data
		jne    _04bfd9_jump
		mov    _0cf1a2_data,%ax
		cmp    _0cf186_data,%ax
		jle    _04c058_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04c058_jump

	_04bfd9_jump:
		call   _041de8_func
		test   %ax,%ax
		je     _04c019_jump
		mov    $0x000044,%eax
		call   _072210_func
		xor    %eax,%eax
		mov    _0cf1a4_data,%di
		mov    _0967a1_data,%al
		cmp    %di,%ax
		jne    _04c00e_jump
		mov    _0cf14c_data,%ax
		mov    %ax,_0cf1a4_data
		jmp    _04c058_jump

	_04c00e_jump:
		mov    %edi,%eax
		dec    %eax
		mov    %ax,_0cf1a4_data
		jmp    _04c058_jump

	_04c019_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _04c058_jump
		mov    $0x000044,%eax
		call   _072210_func
		mov    _0cf1a4_data,%ax
		mov    _0cf14c_data,%bx
		cmp    %bx,%ax
		jne    _04c04e_jump
		xor    %ebx,%eax
		mov    _0967a1_data,%al
		mov    %ax,_0cf1a4_data
		jmp    _04c058_jump

	_04c04e_jump:
		mov    %eax,%esi
		inc    %esi
		mov    %si,_0cf1a4_data

	_04c058_jump:
		cmpw   $0x000000,_0cf1a4_data
		jne    _04c097_jump
		call   _0373f0_func
		test   %al,%al
		je     _04c097_jump
		xor    %cl,%cl
		mov    %cl,_0cf440_data
		cmpb   $0x000000,_095e1b_data
		jne    _04c081_jump
		call   _03ca10_func

	_04c081_jump:
		call   _04df1c_func
		movb   $0x000001,_0cf440_data
		call   _0420e8_func
		jmp    _04c220_jump

	_04c097_jump:
		mov    _0cf1a4_data,%bx
		cmp    $0x000001,%bx
		jl     _04c1e4_jump
		cmp    $0x000003,%bx
		jg     _04c1e4_jump
		cmpb   $0x000000,_0cf470_data
		je     _04c1e4_jump
		xor    %bh,%bh
		mov    %bh,_0cf440_data
		call   _041ee4_func
		test   %ax,%ax
		je     _04c0eb_jump
		mov    _0cf1a2_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000001,_0cd15c_data(,%eax,2)
		je     _04c0eb_jump
		mov    $0x000001,%cl
		jmp    _04c14c_jump

	_04c0eb_jump:
		call   _041e58_func
		test   %ax,%ax
		je     _04c10c_jump
		mov    _0cf1a2_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000000,_0cd15c_data(,%eax,2)
		je     _04c10c_jump
		xor    %cl,%cl
		jmp    _04c14c_jump

	_04c10c_jump:
		call   _041f70_func
		test   %ax,%ax
		je     _04c12d_jump
		mov    _0cf1a2_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000002,_0cd15c_data(,%eax,2)
		je     _04c12d_jump
		mov    $0x000002,%cl
		jmp    _04c14c_jump

	_04c12d_jump:
		call   _041ffc_func
		test   %ax,%ax
		je     _04c14c_jump
		mov    _0cf1a2_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000003,_0cd15c_data(,%eax,2)
		je     _04c14c_jump
		mov    $0x000003,%cl

	_04c14c_jump:
		cmp    $0x000004,%cl
		je     _04c1d2_jump
		xor    %eax,%eax
		mov    _0cd15e_data,%si
		mov    %cl,%al
		cmp    %si,%ax
		je     _04c182_jump
		cmp    _0cd160_data,%ax
		je     _04c182_jump
		cmp    _0cd162_data,%ax
		je     _04c182_jump
		mov    _0cf1a2_data,%edx
		sar    $0x000010,%edx
		jmp    _04c1ca_jump

	_04c182_jump:
		mov    $0x000044,%eax
		call   _072210_func
		mov    $0x000001,%al
		jmp    _04c192_jump

	_04c190_jump:
		inc    %al

	_04c192_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %al,%dl
		mov    %cl,%bl
		cmp    _0cd15c_data(,%edx,2),%bx
		je     _04c1a8_jump
		cmp    $0x000003,%al
		jbe    _04c190_jump

	_04c1a8_jump:
		mov    _0cf1a2_data,%edx
		sar    $0x000010,%edx
		and    $_0000ff_case,%eax
		mov    _0cd15c_data(,%edx,2),%bx
		mov    %bx,_0cd15c_data(,%eax,2)
		xor    %eax,%eax
		mov    %cl,%al

	_04c1ca_jump:
		mov    %ax,_0cd15c_data(,%edx,2)

	_04c1d2_jump:
		movb   $0x000001,_0cf440_data
		call   _04eb60_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04c1e4_jump:
		cmpw   $0x000004,_0cf1a4_data
		jne    _04c220_jump
		call   _0373f0_func
		test   %al,%al
		je     _04c220_jump
		cmpb   $0x000000,_0cf470_data
		je     _04c220_jump
		mov    $0x000001,%eax
		mov    $0x000002,%ebx
		xor    %edx,%edx
		mov    %ax,_0cd15e_data
		mov    %dx,_0cd160_data
		mov    %bx,_0cd162_data

	_04c220_jump:
		call   _04eb60_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c22c_func:
		push   %ebx
		push   %edx
		mov    $0x000004,%ah
		mov    _0cf42b_data,%dl
		mov    %ah,_0cf429_data
		test   %dl,%dl
		jne    _04c26c_jump
		mov    _0cd15e_data,%ax
		mov    %ax,_0c3f68_data
		mov    _0cd160_data,%ax
		mov    %ax,_0c3f6a_data
		mov    _0cd162_data,%ax
		mov    %ax,_0c3f6e_data
		call   _041a10_func
		pop    %edx
		pop    %ebx
		ret    

	_04c26c_jump:
		xor    %dh,%dh
		mov    _095e1b_data,%bl
		mov    %dh,_0967a3_data
		test   %bl,%bl
		jne    _04c283_jump
		call   _03ca10_func

	_04c283_jump:
		pop    %edx
		pop    %ebx
		ret    



_04c288_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e470c_data,%cl
		mov    $0x000001,%ah
		mov    $0x000064,%ebx
		mov    $0x00000c,%esi
		mov    $0x000006,%edi
		xor    %edx,%edx
		mov    %ah,_0cf470_data
		mov    %dx,_0cf1a2_data
		mov    %bx,_0cf1a8_data
		mov    %si,_0cf186_data
		mov    _0cd15e_data,%ax
		mov    %di,_0cf174_data
		test   %ax,%ax
		jne    _04c406_jump
		cmpb   $0x000000,_0cf426_data
		je     _04c406_jump
		cmpb   $0x000000,_095e1b_data
		je     _04c37f_jump
		mov    $0x000005,%edi
		mov    $0x000004,%eax
		mov    $0x000002,%bl
		mov    %di,_0cf1a4_data
		mov    %ax,_0cf18e_data
		mov    %bl,_0967a1_data
		mov    _0cf428_data,%al
		mov    %di,_0cf14c_data
		cmp    $0x000001,%al
		jb     _04c328_jump
		jbe    _04c32c_jump
		cmp    %bl,%al
		je     _04c330_jump
		jmp    _04c332_jump

	_04c328_jump:
		test   %al,%al
		jne    _04c332_jump

	_04c32c_jump:
		mov    $0x00006e,%cl
		jmp    _04c332_jump

	_04c330_jump:
		mov    $0x000078,%cl

	_04c332_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    %cl,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x000014,%eax
		mov    %dx,_0cf164_data
		mov    $0x00003c,%edx
		mov    %cl,_0e470c_data
		call   _04ea48_func
		mov    _0cf18e_data,%bx
		dec    %ebx
		mov    _0e470c_data,%cl
		mov    %bx,_0cf18e_data
		mov    %cl,_0e470c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04c37f_jump:
		mov    $0x000007,%eax
		mov    $0x000001,%dh
		mov    %ax,_0cf1a4_data
		mov    %ax,_0cf18e_data
		mov    %ax,_0cf14c_data
		mov    _0cf428_data,%al
		mov    %dh,_0967a1_data
		cmp    %dh,%al
		jb     _04c3af_jump
		jbe    _04c3b3_jump
		cmp    $0x000002,%al
		je     _04c3b7_jump
		jmp    _04c3b9_jump

	_04c3af_jump:
		test   %al,%al
		jne    _04c3b9_jump

	_04c3b3_jump:
		mov    $0x000078,%cl
		jmp    _04c3b9_jump

	_04c3b7_jump:
		mov    $0x00007d,%cl

	_04c3b9_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    %cl,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x00000f,%eax
		mov    %dx,_0cf164_data
		mov    $0x000046,%edx
		mov    %cl,_0e470c_data
		call   _04ea48_func
		mov    _0cf18e_data,%si
		dec    %esi
		mov    _0e470c_data,%cl
		mov    %si,_0cf18e_data
		mov    %cl,_0e470c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04c406_jump:
		mov    _0cf412_data,%dh
		cmp    $0x000001,%dh
		jne    _04c4af_jump
		cmpb   $0x000000,_095e1b_data
		je     _04c46d_jump
		mov    $0x000005,%ebx
		mov    $0x000004,%esi
		mov    $0x000003,%ah
		mov    $0x000006,%edi
		mov    %bx,_0cf1a4_data
		mov    %si,_0cf18e_data
		mov    %ah,_0967a1_data
		mov    _0cf428_data,%al
		mov    %di,_0cf14c_data
		cmp    %dh,%al
		jb     _04c45e_jump
		jbe    _04c466_jump
		cmp    $0x000002,%al
		je     _04c4ab_jump
		jmp    _04c4ff_jump

	_04c45e_jump:
		test   %al,%al
		jne    _04c4ff_jump

	_04c466_jump:
		mov    $0x00006e,%cl
		jmp    _04c4ff_jump

	_04c46d_jump:
		mov    $0x000005,%edi
		mov    _0cf428_data,%al
		mov    %dh,_0967a1_data
		mov    $0x000006,%edx
		mov    %di,_0cf1a4_data
		mov    %di,_0cf18e_data
		mov    %dx,_0cf14c_data
		cmp    $0x000001,%al
		jb     _04c4a3_jump
		jbe    _04c4a7_jump
		cmp    $0x000002,%al
		je     _04c4ab_jump
		jmp    _04c4ff_jump

	_04c4a3_jump:
		test   %al,%al
		jne    _04c4ff_jump

	_04c4a7_jump:
		mov    $0x00006e,%cl
		jmp    _04c4ff_jump

	_04c4ab_jump:
		mov    $0x000078,%cl
		jmp    _04c4ff_jump

	_04c4af_jump:
		cmp    $0x000002,%dh
		jne    _04c531_jump
		mov    $0x000005,%edx
		mov    $0x000004,%ebx
		mov    $0x000006,%esi
		mov    _0cf428_data,%al
		mov    %dx,_0cf1a4_data
		mov    %bx,_0cf18e_data
		mov    $0x000003,%bh
		mov    %si,_0cf14c_data
		mov    %bh,_0967a1_data
		cmp    $0x000001,%al
		jb     _04c4f5_jump
		jbe    _04c4f9_jump
		cmp    $0x000002,%al
		je     _04c4fd_jump
		jmp    _04c4ff_jump

	_04c4f5_jump:
		test   %al,%al
		jne    _04c4ff_jump

	_04c4f9_jump:
		mov    $0x00006e,%cl
		jmp    _04c4ff_jump

	_04c4fd_jump:
		mov    $0x000078,%cl

	_04c4ff_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    %cl,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x000014,%eax
		mov    %dx,_0cf164_data
		mov    $0x00003c,%edx
		mov    %cl,_0e470c_data
		call   _04ea48_func
		mov    _0e470c_data,%cl

	_04c531_jump:
		mov    %cl,_0e470c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c540_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_04c540_func,%edx
		mov    $_04c624_func,%ebx
		mov    $_04ca08_func,%ecx
		mov    $_04cf08_func,%esi
		mov    $_04d3bc_func,%edi
		mov    _095de5_data,%ah
		mov    %edx,_0e46cc_data
		mov    %ebx,_0e46c8_data
		mov    %ecx,_0e46d8_data
		mov    %esi,_0e46d4_data
		mov    %edi,_0e46dc_data
		test   %ah,%ah
		jne    _04c598_jump
		movb   $0x000002,_0e470e_data
		xor    %ecx,%ecx
		mov    %cx,_0cd15e_data
		jmp    _04c5ce_jump

	_04c598_jump:
		cmp    $0x000001,%ah
		jne    _04c5ba_jump
		cmpb   $0x000000,_0cf40b_data
		jne    _04c5ba_jump
		mov    $0x000001,%ebx
		mov    %ah,_0e470e_data
		mov    %bx,_0cd15e_data
		jmp    _04c5ce_jump

	_04c5ba_jump:
		mov    $0x000001,%bl
		mov    $0x000002,%edx
		mov    %bl,_0e470e_data
		mov    %dx,_0cd15e_data

	_04c5ce_jump:
		mov    _095e22_data,%ax
		mov    %ax,_0cd160_data
		xor    %eax,%eax
		mov    _095e24_data,%al
		mov    %ax,_0cd162_data
		mov    _095e1e_data,%ax
		mov    %ax,_0cd164_data
		xor    %eax,%eax
		mov    _095e25_data,%al
		mov    %ax,_0cd166_data
		xor    %eax,%eax
		mov    _0cf409_data,%al
		mov    %ax,_0cd168_data
		call   _04e8bc_func
		mov    %ax,_0e4702_data
		call   _04c288_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c624_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %esp,%edi
		mov    $0x000001,%dl
		mov    $_0cac98_data,%ebp
		mov    $_048a88_func,%esi
		mov    _0cf1b4_data,%ax
		xor    %bh,%bh
		mov    %ax,_0cad6a_data
		mov    %dl,_0cb507_data
		mov    %dl,_0cb506_data
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    %bh,_0cb505_data
		mov    (%esp),%al
		mov    $_0966f8_data,%edi
		mov    %al,_0cad6f_data
		mov    $0x000002,%ah
		mov    _0c2b60_data,%esi
		mov    %ah,_0cad6c_data
		mov    %ah,_0cb504_data
		push   %edi

	_04c67f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c697_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04c67f_jump

	_04c697_jump:
		pop    %edi
		mov    _0967a1_data,%bl
		jmp    _04c824_jump

	_04c6a3_jump:
		imul   $0x0000d8,%eax,%edx
		movb   $0x000002,_0cad6c_data(%edx)
		movb   $0x000001,_0cad6e_data(%edx)
		xor    %cl,%cl
		mov    %cl,_0cad6d_data(%edx)
		mov    _0cf14c_data,%cx
		lea    (%edx,%ebp,1),%edi
		cmp    %cx,%bx
		jne    _04c716_jump
		mov    _0c2ac0_data,%esi
		push   %edi

	_04c6d5_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c6ed_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04c6d5_jump

	_04c6ed_jump:
		pop    %edi
		mov    $0x0000a0,%edi
		mov    _0cf19c_data,%ax
		mov    %di,_0cad68_data(%edx)
		mov    %ax,_0cad6a_data(%edx)
		mov    0x000007(%esp),%al
		mov    %al,_0cad6f_data(%edx)
		jmp    _04c813_jump

	_04c716_jump:
		mov    _0cf164_data,%si
		add    $0x00000a,%esi
		mov    (%esp,%eax,1),%cl
		mov    %si,_0cad68_data(%edx)
		mov    _0c2b68_data(,%eax,4),%esi
		mov    %cl,_0cad6f_data(%edx)
		push   %edi

	_04c738_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c750_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04c738_jump

	_04c750_jump:
		pop    %edi
		mov    _0cf19e_data,%ax
		mov    _0cd15e_data,%si
		add    $0x00000f,%eax
		test   %si,%si
		jne    _04c788_jump
		movzbw _0967a1_data,%si
		mov    %ebx,%ecx
		sub    %esi,%ecx
		mov    %ecx,%esi
		inc    %esi
		imul   %esi,%eax
		mov    _0cf1b4_data,%si
		add    %esi,%eax
		jmp    _04c80c_jump

	_04c788_jump:
		cmp    $0x000001,%bx
		jne    _04c7ac_jump
		movzbw _0967a1_data,%si
		mov    %ebx,%ecx
		sub    %esi,%ecx
		mov    %ecx,%esi
		add    %ebx,%esi
		imul   %esi,%eax
		mov    _0cf1b4_data,%cx
		add    %ecx,%eax
		jmp    _04c80c_jump

	_04c7ac_jump:
		cmpb   $0x000000,_095e1b_data
		jne    _04c7be_jump
		cmpb   $0x000002,_0cf412_data
		jne    _04c7f4_jump

	_04c7be_jump:
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    _0967a1_data,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    _0cf19e_data,%dx
		inc    %eax
		add    $0x00000f,%edx
		imul   %edx,%eax
		mov    _0cf1b4_data,%dx
		add    %eax,%edx
		movswl %bx,%eax
		imul   $0x0000d8,%eax,%eax
		mov    %dx,_0cad6a_data(%eax)
		jmp    _04c813_jump

	_04c7f4_jump:
		movzbw _0967a1_data,%si
		mov    %ebx,%ecx
		sub    %esi,%ecx
		imul   %ecx,%eax
		mov    _0cf1b4_data,%di
		add    %edi,%eax

	_04c80c_jump:
		mov    %ax,_0cad6a_data(%edx)

	_04c813_jump:
		movswl %bx,%eax
		imul   $0x0000d8,%eax,%eax
		add    %ebp,%eax
		inc    %ebx
		call   _01ed18_func

	_04c824_jump:
		xor    %edx,%edx
		mov    _0cf18c_data,%eax
		mov    _0967a1_data,%dl
		sar    $0x000010,%eax
		add    %eax,%edx
		movswl %bx,%eax
		cmp    %edx,%eax
		jle    _04c6a3_jump
		mov    _0cf194_data,%bx
		mov    _095de5_data,%cl
		sub    $0x000019,%ebx
		test   %cl,%cl
		jne    _04c886_jump
		mov    _0cf14a_data,%edi
		sar    $0x000010,%edi
		lea    0x000000(,%edi,8),%eax
		sub    %edi,%eax
		shl    $0x000002,%eax
		sub    %edi,%eax
		mov    _0cf194_data,%di
		mov    _0cad6a_data(,%eax,8),%ax
		mov    _0cf164_data,%dx
		sub    %edi,%eax
		jmp    _04c8b5_jump

	_04c886_jump:
		mov    _0cf14a_data,%edi
		sar    $0x000010,%edi
		lea    0x000000(,%edi,8),%eax
		sub    %edi,%eax
		shl    $0x000002,%eax
		sub    %edi,%eax
		mov    _0cf194_data,%cx
		mov    _0cad6a_data(,%eax,8),%ax
		mov    _0cf164_data,%dx
		sub    %ecx,%eax

	_04c8b5_jump:
		movzbw _0e470c_data,%si
		add    $0x000023,%eax
		add    %esi,%esi
		mov    %ax,0x000020(%esp)
		mov    _0e46fc_data,%ax
		cmp    %ax,%dx
		jge    _04c8d8_jump
		mov    %edx,%ecx
		jmp    _04c8da_jump

	_04c8d8_jump:
		mov    %eax,%ecx

	_04c8da_jump:
		mov    _0e4700_data,%di
		cmp    %di,%bx
		jge    _04c8ea_jump
		mov    %ebx,%eax
		jmp    _04c8ec_jump

	_04c8ea_jump:
		mov    %edi,%eax

	_04c8ec_jump:
		mov    _0e4702_data,%ebp
		mov    _0e46fa_data,%edi
		sar    $0x000010,%ebp
		sar    $0x000010,%edi
		add    %ebp,%edi
		movswl %dx,%ebp
		mov    %ebp,0x000008(%esp)
		movswl %si,%ebp
		mov    %ebp,0x00000c(%esp)
		mov    0x000008(%esp),%ebp
		add    0x00000c(%esp),%ebp
		cmp    %ebp,%edi
		jle    _04c925_jump
		movswl %cx,%ebp
		sub    %ebp,%edi
		mov    %edi,0x000018(%esp)
		jmp    _04c92e_jump

	_04c925_jump:
		movswl %cx,%edi
		sub    %edi,%ebp
		mov    %ebp,0x000018(%esp)

	_04c92e_jump:
		mov    0x000018(%esp),%edi
		mov    %di,0x000024(%esp)
		mov    _0e46fe_data,%edi
		sar    $0x000010,%edi
		mov    %edi,0x000010(%esp)
		mov    _0e46fc_data,%edi
		mov    0x000010(%esp),%ebp
		sar    $0x000010,%edi
		add    %edi,%ebp
		mov    %ebp,0x00001c(%esp)
		mov    0x00001e(%esp),%ebp
		sar    $0x000010,%ebp
		movswl %bx,%edi
		add    %ebp,%edi
		mov    0x00001c(%esp),%ebp
		cmp    %ebp,%edi
		jge    _04c976_jump
		movswl %ax,%edi
		sub    %edi,%ebp
		mov    %ebp,0x000014(%esp)
		jmp    _04c97f_jump

	_04c976_jump:
		movswl %ax,%ebp
		sub    %ebp,%edi
		mov    %edi,0x000014(%esp)

	_04c97f_jump:
		mov    0x000014(%esp),%edi
		mov    %dx,_0e46fc_data
		mov    0x000020(%esp),%edx
		mov    %bx,_0e4700_data
		mov    %dx,_0e46fe_data
		mov    _095e1b_data,%dl
		mov    %si,_0e4704_data
		test   %dl,%dl
		je     _04c9ca_jump
		push   $0x000001
		mov    0x000026(%esp),%esi
		movswl %di,%ebx
		movswl %ax,%edx
		sar    $0x000010,%esi
		movswl %cx,%eax
		mov    %ebx,%ecx
		mov    %esi,%ebx
		call   _04f6dc_func
		jmp    _04c9e3_jump

	_04c9ca_jump:
		mov    0x000022(%esp),%ebx
		movswl %di,%edx
		movswl %ax,%esi
		sar    $0x000010,%ebx
		movswl %cx,%eax
		mov    %edx,%ecx
		mov    %esi,%edx
		call   _04feec_func

	_04c9e3_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04c9f0_switch:
		.long   _04cbd4_case
		.long   _04cc18_case
		.long   _04cc63_case
		.long   _04cdfb_case
		.long   _04cdd7_case
		.long   _04cdae_case




_04ca08_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		lea    0x000014(%esp),%edi
		mov    $_048a90_jump,%esi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		lea    0x00001c(%esp),%edi
		mov    $_048a9b_jump,%esi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    _048a93_jump,%eax
		lea    0x000018(%esp),%edi
		mov    $_048a9e_jump,%esi
		mov    %eax,0x000010(%esp)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    _048a97_jump,%eax
		mov    %esp,%edi
		mov    $_048aa4_switch,%esi
		mov    %eax,0x00000c(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   _03cd54_func
		cmpb   $0x000000,_095e1b_data
		je     _04ca87_jump
		mov    _0e46fc_data,%ecx
		mov    _0e4702_data,%ebx
		mov    _0e46fe_data,%edx
		mov    _0e46fa_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024808_func

	_04ca87_jump:
		push   $0x000001
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cf192_data,%ebx
		mov    $_0966f8_data,%eax
		sar    $0x000010,%ebx
		call   _01a168_func
		xor    %eax,%eax
		mov    _0cad6f_data,%al
		mov    $0x000002,%ecx
		push   %eax
		mov    _0cf164_data,%ax
		mov    _0cad68_data,%ebx
		add    $0x00000a,%eax
		sar    $0x000010,%ebx
		movswl %ax,%edx
		mov    _0c2b68_data,%eax
		call   _01a168_func
		mov    _0e4700_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0cad6a_data,%ax
		sub    $0x00000c,%eax
		push   $0x000100
		movswl %ax,%edx
		xor    %eax,%eax
		mov    $0x00000c,%ecx
		mov    _0e470c_data,%al
		push   $0x000080
		add    $0x000016,%eax
		mov    $0x000080,%ebx
		cwtl   
		call   _0249c4_func
		mov    _0967a1_data,%al
		mov    %al,0x000034(%esp)
		dec    %al
		mov    %al,0x000030(%esp)
		jmp    _04cee7_jump

	_04cb23_jump:
		cmpw   $0x000000,_0cd15e_data
		je     _04cb35_jump
		cmp    $0x000002,%al
		je     _04ced3_jump

	_04cb35_jump:
		cmpb   $0x000000,_095e1b_data
		je     _04cb53_jump
		cmpw   $0x000000,_0cd15e_data
		jne    _04cb53_jump
		cmpb   $0x000006,0x000034(%esp)
		je     _04ced3_jump

	_04cb53_jump:
		xor    %eax,%eax
		mov    0x000034(%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    $_0cac98_data,%esi
		mov    _0cad6a_data(%eax),%dx
		mov    _0cf1a4_data,%bx
		mov    %dx,0x000028(%esp)
		xor    %edx,%edx
		mov    _0cad68_data(%eax),%di
		mov    0x000034(%esp),%dl
		add    %eax,%esi
		cmp    %bx,%dx
		je     _04cbaf_jump
		mov    _0cad6f_data(%eax),%al
		mov    0x000026(%esp),%ebx
		mov    $0x000002,%ecx
		and    $_0000ff_case,%eax
		movswl %di,%edx
		push   %eax
		sar    $0x000010,%ebx
		mov    %esi,%eax
		call   _01a168_func
		jmp    _04cbbb_jump

	_04cbaf_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _04ebe0_func

	_04cbbb_jump:
		mov    0x000030(%esp),%bh
		cmp    $0x000005,%bh
		ja     _04ced3_jump
		xor    %eax,%eax
		mov    %bh,%al
		jmp    *%cs:_04c9f0_switch(,%eax,4)

	_04cbd4_case:
		xor    %eax,%eax
		mov    0x000034(%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    _0cad6f_data(%eax),%al
		and    $_0000ff_case,%eax
		push   %eax
		xor    %eax,%eax
		mov    _0e470c_data,%al
		add    $0x000076,%eax
		mov    0x00002a(%esp),%ebx
		movswl %ax,%edx
		mov    _0cd15c_data,%eax
		mov    $0x000002,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    0x000004(%esp,%eax,4),%eax
		jmp    _04cece_jump

	_04cc18_case:
		cmpw   $0x000000,_0cd15e_data
		jne    _04ced3_jump
		mov    $0x000003,%eax
		sub    _0cd160_data,%ax
		cwtl   
		push   %eax
		mov    0x00002c(%esp),%eax
		sub    $0x00000c,%eax
		push   $0x000003
		movswl %ax,%edx
		xor    %eax,%eax
		mov    $0x000050,%ebx
		mov    _0e470c_data,%al
		push   $0x000000
		add    $0x000046,%eax
		mov    $0x00000c,%ecx
		cwtl   
		call   _0249c4_func
		jmp    _04ced3_jump

	_04cc63_case:
		mov    _0cd162_data,%cx
		test   %cx,%cx
		jne    _04cc9f_jump
		lea    0x000018(%esp),%eax
		xor    %ebx,%ebx
		lea    0x00001c(%esp),%esi
		mov    _0e470c_data,%bl
		lea    0x00000c(%esp),%edi
		mov    %ebx,%edx
		mov    %ebx,%ecx
		add    $0x000086,%edx
		add    $0x000066,%ecx
		add    $0x000036,%ebx
		mov    %cx,0x00002c(%esp)
		mov    %bx,0x000020(%esp)
		jmp    _04cd02_jump

	_04cc9f_jump:
		cmp    $0x000001,%cx
		jne    _04ccd4_jump
		xor    %ebx,%ebx
		lea    0x000018(%esp),%esi
		mov    _0e470c_data,%bl
		lea    0x00000c(%esp),%edi
		mov    %ebx,%eax
		mov    %ebx,%edx
		add    $0x000086,%eax
		add    $0x000066,%edx
		add    $0x000036,%ebx
		mov    %ax,0x00002c(%esp)
		mov    %bx,0x000020(%esp)
		lea    0x00001c(%esp),%eax
		jmp    _04cd02_jump

	_04ccd4_jump:
		lea    0x000018(%esp),%eax
		xor    %ebx,%ebx
		lea    0x00001c(%esp),%edi
		mov    _0e470c_data,%bl
		lea    0x00000c(%esp),%esi
		mov    %ebx,%edx
		mov    %ebx,%ecx
		add    $0x000086,%edx
		add    $0x000066,%ecx
		add    $0x000036,%ebx
		mov    %cx,0x000020(%esp)
		mov    %bx,0x00002c(%esp)

	_04cd02_jump:
		push   $0x000005
		mov    0x00002a(%esp),%ebp
		mov    $0x000002,%ecx
		sar    $0x000010,%ebp
		movswl %dx,%edx
		mov    %ebp,%ebx
		call   _01a168_func
		cmpw   $0x000000,_0cd15e_data
		jne    _04cd3b_jump
		push   $0x000005
		mov    0x000022(%esp),%edx
		mov    $0x000002,%ecx
		mov    %ebp,%ebx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01a168_func

	_04cd3b_jump:
		xor    %eax,%eax
		mov    _0cf1a4_data,%dx
		mov    0x000034(%esp),%al
		cmp    %dx,%ax
		jne    _04cd95_jump
		mov    $_0cb430_data,%edi
		push   %edi

	_04cd53_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04cd6b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04cd53_jump

	_04cd6b_jump:
		pop    %edi
		mov    0x00002c(%esp),%eax
		mov    %ax,_0cb500_data
		mov    0x000028(%esp),%eax
		mov    %ax,_0cb502_data
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01ed18_func
		mov    %edi,%eax
		call   _04ebe0_func
		jmp    _04ced3_jump

	_04cd95_jump:
		push   $0x000001
		mov    0x00002a(%esp),%ebx
		mov    0x00002e(%esp),%edx
		mov    $0x000002,%ecx
		mov    %esi,%eax
		sar    $0x000010,%ebx
		jmp    _04cecb_jump

	_04cdae_case:
		cmpb   $0x000000,_095e1b_data
		jne    _04ced3_jump
		cmpw   $0x000000,_0cd166_data
		je     _04ced3_jump
		cmpw   $0x000000,_0cd15e_data
		jne    _04ced3_jump

	_04cdd7_case:
		cmpb   $0x000000,_095e1b_data
		je     _04cdee_jump
		cmpw   $0x000000,_0cd15e_data
		je     _04ced3_jump

	_04cdee_jump:
		cmpb   $0x000000,_0cf412_data
		je     _04ced3_jump

	_04cdfb_case:
		xor    %eax,%eax
		mov    0x000034(%esp),%al
		mov    _0cd15c_data(,%eax,2),%dx
		test   %dx,%dx
		je     _04ce30_jump
		xor    %ebx,%ebx
		lea    0x000010(%esp),%eax
		mov    _0e470c_data,%bl
		lea    0x000014(%esp),%esi
		mov    %ebx,%edx
		add    $0x000066,%ebx
		add    $0x000086,%edx
		mov    %bx,0x000024(%esp)
		jmp    _04ce4d_jump

	_04ce30_jump:
		mov    _0e470c_data,%dl
		mov    %edx,%eax
		lea    0x000010(%esp),%esi
		add    $0x000086,%eax
		add    $0x000066,%edx
		mov    %ax,0x000024(%esp)
		lea    0x000014(%esp),%eax

	_04ce4d_jump:
		push   $0x000005
		mov    0x00002a(%esp),%edi
		mov    $0x000002,%ecx
		sar    $0x000010,%edi
		movswl %dx,%edx
		mov    %edi,%ebx
		call   _01a168_func
		xor    %eax,%eax
		mov    _0cf1a4_data,%bx
		mov    0x000034(%esp),%al
		cmp    %bx,%ax
		jne    _04cebc_jump
		mov    $_0cb430_data,%edi
		push   %edi

	_04ce7d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04ce95_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04ce7d_jump

	_04ce95_jump:
		pop    %edi
		mov    0x000024(%esp),%eax
		mov    %ax,_0cb500_data
		mov    0x000028(%esp),%eax
		mov    %ax,_0cb502_data
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01ed18_func
		mov    %edi,%eax
		call   _04ebe0_func
		jmp    _04ced3_jump

	_04cebc_jump:
		push   $0x000001
		mov    0x000026(%esp),%edx
		mov    $0x000002,%ecx
		mov    %edi,%ebx
		mov    %esi,%eax

	_04cecb_jump:
		sar    $0x000010,%edx

	_04cece_jump:
		call   _01a168_func

	_04ced3_jump:
		mov    0x000030(%esp),%ah
		mov    0x000034(%esp),%dl
		inc    %ah
		inc    %dl
		mov    %ah,0x000030(%esp)
		mov    %dl,0x000034(%esp)

	_04cee7_jump:
		xor    %eax,%eax
		mov    _0cf14c_data,%dx
		mov    0x000034(%esp),%al
		cmp    %dx,%ax
		jle    _04cb23_jump
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04cf08_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		call   _04eb1c_func
		xor    %bl,%bl
		mov    $0x000004,%dl
		mov    %bl,(%esp)
		mov    %dl,_0cf429_data
		call   _037514_func
		test   %al,%al
		je     _04cf32_jump
		movb   $0x000001,_0cf42b_data

	_04cf32_jump:
		cmpb   $0x000000,_0cf470_data
		jne    _04cf6f_jump
		mov    _0cf1a2_data,%ax
		cmp    _0cf186_data,%ax
		jle    _04d028_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    _04d028_jump

	_04cf6f_jump:
		call   _041de8_func
		test   %ax,%ax
		je     _04cfce_jump
		mov    $0x000044,%eax
		call   _072210_func
		xor    %eax,%eax
		mov    _0cf1a4_data,%cx
		mov    _0967a1_data,%al
		cmp    %cx,%ax
		jne    _04cfa7_jump
		mov    _0cf14c_data,%ax
		mov    %ax,_0cf1a4_data
		jmp    _04d028_jump

	_04cfa7_jump:
		cmpw   $0x000000,_0cd15e_data
		je     _04cfc5_jump
		cmp    $0x000003,%cx
		jne    _04cfc5_jump
		mov    %ecx,%edx
		sub    $0x000002,%edx
		mov    %dx,_0cf1a4_data
		jmp    _04d028_jump

	_04cfc5_jump:
		decw   _0cf1a4_data
		jmp    _04d028_jump

	_04cfce_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _04d028_jump
		mov    $0x000044,%eax
		call   _072210_func
		mov    _0cf1a4_data,%ax
		mov    _0cf14c_data,%cx
		cmp    %cx,%ax
		jne    _04d003_jump
		xor    %ecx,%eax
		mov    _0967a1_data,%al
		mov    %ax,_0cf1a4_data
		jmp    _04d028_jump

	_04d003_jump:
		cmpw   $0x000000,_0cd15e_data
		je     _04d021_jump
		cmp    $0x000001,%ax
		jne    _04d021_jump
		mov    %eax,%edx
		add    $0x000002,%edx
		mov    %dx,_0cf1a4_data
		jmp    _04d028_jump

	_04d021_jump:
		incw   _0cf1a4_data

	_04d028_jump:
		cmpw   $0x000000,_0cd15e_data
		jne    _04d156_jump
		cmpw   $0x000002,_0cf1a4_data
		jne    _04d106_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _04d106_jump
		call   _041de8_func
		test   %ax,%ax
		jne    _04d106_jump
		cmpb   $0x000000,_0cf470_data
		je     _04d106_jump
		call   _041c98_func
		test   %ax,%ax
		je     _04d09a_jump
		mov    _0cd160_data,%di
		cmp    $0x000003,%di
		jge    _04d090_jump
		mov    %edi,%edx
		inc    %edx
		mov    %dx,_0cd160_data
		jmp    _04d0c5_jump

	_04d090_jump:
		xor    %eax,%eax
		mov    %ax,_0cd160_data
		jmp    _04d0c5_jump

	_04d09a_jump:
		call   _041d08_func
		test   %ax,%ax
		je     _04d0c7_jump
		mov    _0cd160_data,%bx
		test   %bx,%bx
		jle    _04d0bc_jump
		mov    %ebx,%esi
		dec    %esi
		mov    %si,_0cd160_data
		jmp    _04d0c5_jump

	_04d0bc_jump:
		movw   $0x000003,_0cd160_data

	_04d0c5_jump:
		mov    $0x000001,%bl

	_04d0c7_jump:
		test   %bl,%bl
		je     _04d156_jump
		mov    _0cd15e_data,%eax
		sar    $0x000010,%eax
		mov    _096782_data(,%eax,2),%ecx
		mov    _09677a_data(,%eax,2),%ebx
		mov    _096772_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09676a_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05c124_func
		jmp    _04d152_jump

	_04d106_jump:
		cmpw   $0x000006,_0cf1a4_data
		jne    _04d156_jump
		cmpb   $0x000000,_095e1b_data
		jne    _04d156_jump
		cmpb   $0x000000,_0cf470_data
		je     _04d156_jump
		call   _0373f0_func
		test   %al,%al
		jne    _04d13f_jump
		call   _041d08_func
		test   %ax,%ax
		jne    _04d13f_jump
		call   _041c98_func
		test   %ax,%ax
		je     _04d156_jump

	_04d13f_jump:
		cmpw   $0x000000,_0cd168_data
		sete   %al
		xor    %ah,%ah
		mov    %ax,_0cd168_data

	_04d152_jump:
		movb   $0x000001,(%esp)

	_04d156_jump:
		cmpw   $0x000003,_0cf1a4_data
		jne    _04d220_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _04d220_jump
		call   _041de8_func
		test   %ax,%ax
		jne    _04d220_jump
		cmpb   $0x000000,_0cf470_data
		je     _04d220_jump
		call   _0373f0_func
		test   %al,%al
		jne    _04d1a0_jump
		call   _041d08_func
		test   %ax,%ax
		je     _04d1de_jump

	_04d1a0_jump:
		xor    %eax,%eax
		mov    _0cd162_data,%dx
		mov    _0e470e_data,%al
		cmp    %dx,%ax
		jle    _04d1bf_jump
		mov    %edx,%ecx
		inc    %ecx
		mov    %cx,_0cd162_data
		jmp    _04d1c8_jump

	_04d1bf_jump:
		xor    %ebx,%ebx
		mov    %bx,_0cd162_data

	_04d1c8_jump:
		xor    %eax,%eax
		mov    _0cd162_data,%al
		mov    $0x000001,%bl
		call   _048cc8_func
		mov    %bl,(%esp)
		jmp    _04d39d_jump

	_04d1de_jump:
		call   _041c98_func
		test   %ax,%ax
		je     _04d39d_jump
		mov    _0cd162_data,%di
		test   %di,%di
		jle    _04d1fd_jump
		mov    %edi,%eax
		dec    %eax
		jmp    _04d204_jump

	_04d1fd_jump:
		xor    %eax,%eax
		mov    _0e470e_data,%al

	_04d204_jump:
		mov    %ax,_0cd162_data
		xor    %eax,%eax
		mov    _0cd162_data,%al
		mov    $0x000001,%dh
		call   _048cc8_func
		mov    %dh,(%esp)
		jmp    _04d39d_jump

	_04d220_jump:
		mov    _0cf1a4_data,%cx
		cmp    $0x000004,%cx
		jl     _04d36d_jump
		cmp    _0cf14c_data,%cx
		jge    _04d36d_jump
		cmp    $0x000006,%cx
		je     _04d36d_jump
		cmpb   $0x000000,_0cf470_data
		je     _04d36d_jump
		call   _0373f0_func
		test   %al,%al
		jne    _04d276_jump
		call   _041d08_func
		test   %ax,%ax
		jne    _04d276_jump
		call   _041c98_func
		test   %ax,%ax
		je     _04d36d_jump

	_04d276_jump:
		mov    _0cf1a2_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000000,_0cd15c_data(,%eax,2)
		sete   %al
		xor    %ah,%ah
		mov    $0x000001,%ch
		mov    %eax,%edx
		mov    _0cf1a2_data,%eax
		mov    %ch,(%esp)
		sar    $0x000010,%eax
		mov    _0cf1a4_data,%cx
		mov    %dx,_0cd15c_data(,%eax,2)
		cmp    $0x000005,%cx
		jne    _04d39d_jump
		cmpb   $0x000000,_095e1b_data
		jne    _04d39d_jump
		mov    _0cd166_data,%si
		test   %si,%si
		jne    _04d39d_jump
		cmpw   $0x000000,_0cd15e_data
		jne    _04d39d_jump
		mov    $0x000001,%eax
		mov    $0x000001,%dl
		mov    %ax,_0cd15e_data
		mov    %dl,_0e470e_data
		xor    %ah,%ah
		mov    _0cd162_data,%dx
		mov    %ah,_0cf40b_data
		cmp    $0x000002,%dx
		jne    _04d30e_jump
		mov    %si,_0cd162_data

	_04d30e_jump:
		mov    $0x000005,%ecx
		call   _04c288_func
		mov    %cx,_0cf1a4_data
		call   _04c624_func
		mov    _0cf14a_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0cf194_data,%si
		mov    _0cad6a_data(,%eax,8),%ax
		sub    %esi,%eax
		sub    $0x000024,%eax
		movswl %ax,%ecx
		mov    %esi,%eax
		add    $0x00000e,%eax
		mov    $0x00010e,%ebx
		movswl %ax,%edx
		mov    $0x000012,%eax
		call   _04feec_func
		jmp    _04d39d_jump

	_04d36d_jump:
		cmpw   $0x000001,_0cf1a4_data
		jne    _04d39d_jump
		call   _0373f0_func
		test   %al,%al
		je     _04d39d_jump
		cmpb   $0x000000,_0cf470_data
		je     _04d39d_jump
		mov    $0x00000a,%cl
		mov    $0x000001,%edx
		mov    %cl,_0cf429_data
		mov    %dx,_0cf17e_data

	_04d39d_jump:
		cmpb   $0x000000,(%esp)
		je     _04d3ae_jump
		call   _04e8bc_func
		mov    %ax,_0e4702_data

	_04d3ae_jump:
		call   _04eb60_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04d3bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cf42b_data
		jne    _04d464_jump
		mov    _0cd160_data,%ax
		mov    %ax,_095e22_data
		mov    _0cd162_data,%al
		mov    %al,_095e24_data
		mov    _0cd164_data,%ax
		mov    %ax,_095e1e_data
		mov    _0cd166_data,%al
		mov    %al,_095e25_data
		call   _048e8c_func
		mov    %al,_095e26_data
		mov    _0cd168_data,%al
		mov    %al,_0cf409_data
		mov    _0cd15e_data,%ax
		cmp    $0x000001,%ax
		jb     _04d424_jump
		jbe    _04d43f_jump
		cmp    $0x000002,%ax
		je     _04d452_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04d424_jump:
		test   %ax,%ax
		jne    _04d4ce_jump
		xor    %ah,%ah
		mov    %ah,_095de5_data
		mov    %ah,_0cf40b_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04d43f_jump:
		mov    $0x000001,%ch
		xor    %al,%al
		mov    %ch,_095de5_data
		mov    %al,_0cf40b_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04d452_jump:
		mov    $0x000001,%bh
		mov    %bh,_095de5_data
		mov    %bh,_0cf40b_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04d464_jump:
		xor    %dl,%dl
		mov    %dl,_0967a3_data
		cmpb   $0x000000,_095de5_data
		jne    _04d4aa_jump
		mov    _095e20_data,%eax
		sar    $0x000010,%eax
		mov    _096782_data(,%eax,2),%ecx
		mov    _09677a_data(,%eax,2),%ebx
		mov    _096772_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09676a_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05c124_func

	_04d4aa_jump:
		mov    $0x000019,%eax
		call   _03da44_func
		xor    %eax,%eax
		mov    _095e24_data,%al
		call   _048cc8_func
		cmpb   $0x000000,_095e1b_data
		jne    _04d4ce_jump
		call   _03ca10_func

	_04d4ce_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04d4d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_04d4d4_func,%edx
		mov    $_04d600_func,%ebx
		mov    $_04d8a4_func,%ecx
		mov    $_04d9a8_func,%esi
		mov    $_04db3c_func,%edi
		mov    $0x000001,%ah
		mov    %edx,_0e46cc_data
		mov    %ebx,_0e46c8_data
		mov    %ecx,_0e46d8_data
		mov    %esi,_0e46d4_data
		mov    %edi,_0e46dc_data
		mov    %ah,_0cf470_data
		mov    $0x000064,%ebx
		mov    $0x00000c,%ecx
		mov    $0x000006,%esi
		mov    $0x000003,%edi
		xor    %edx,%edx
		mov    $0x00000f,%eax
		mov    %dx,_0cf1a2_data
		mov    %bx,_0cf1a8_data
		mov    %cx,_0cf186_data
		mov    %si,_0cf174_data
		mov    %di,_0cf1a4_data
		mov    %di,_0cf18e_data
		xor    %dl,%dl
		mov    $0x000005,%ebx
		mov    %dl,_0967a1_data
		mov    $0x000044,%edx
		mov    %di,_0cf14c_data
		call   _04ea48_func
		xor    %ebx,%ebx
		mov    _095de5_data,%dh
		mov    %bx,_0cd15c_data
		mov    %bx,_0cd15e_data
		mov    %bx,_0cd160_data
		test   %dh,%dh
		jne    _04d5a7_jump
		movw   $0x000001,_0cd15c_data
		jmp    _04d5c9_jump

	_04d5a7_jump:
		cmp    $0x000001,%dh
		jne    _04d5c0_jump
		cmpb   $0x000000,_0cf40b_data
		jne    _04d5c0_jump
		movw   $0x000001,_0cd15e_data
		jmp    _04d5c9_jump

	_04d5c0_jump:
		movw   $0x000001,_0cd160_data

	_04d5c9_jump:
		mov    _0cf428_data,%al
		cmp    $0x000001,%al
		jb     _04d5da_jump
		jbe    _04d5de_jump
		cmp    $0x000002,%al
		je     _04d5de_jump
		jmp    _04d5e5_jump

	_04d5da_jump:
		test   %al,%al
		jne    _04d5e5_jump

	_04d5de_jump:
		movb   $0x00008c,_0e470c_data

	_04d5e5_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0e470c_data,%al
		sub    %eax,%edx
		mov    %dx,_0cf164_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04d600_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    $0x000002,%dl
		mov    $_0966f8_data,%edi
		mov    $_0cac98_data,%ebp
		mov    _048ab0_func,%eax
		mov    _0c2b84_data,%esi
		xor    %bl,%bl
		mov    %eax,0x000004(%esp)
		mov    %dl,_0cb504_data
		mov    %bl,_0cb505_data
		mov    $0x000001,%ah
		xor    %bh,%bh
		mov    %ah,_0cb507_data
		mov    %ah,_0cb506_data
		push   %edi

	_04d643_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04d65b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04d643_jump

	_04d65b_jump:
		pop    %edi
		mov    _0967a1_data,%bl
		jmp    _04d73b_jump

	_04d667_jump:
		imul   $0x0000d8,%ecx,%edx
		movw   $0x0000a0,_0cad68_data(%edx)
		movb   $0x000002,_0cad6c_data(%edx)
		mov    $0x000001,%ah
		mov    _0cf14c_data,%si
		mov    %ah,_0cad6e_data(%edx)
		xor    %al,%al
		lea    (%edx,%ebp,1),%edi
		mov    %al,_0cad6d_data(%edx)
		cmp    %si,%bx
		jne    _04d6d5_jump
		mov    _0c2ac0_data,%esi
		push   %edi

	_04d6a3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04d6bb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04d6a3_jump

	_04d6bb_jump:
		pop    %edi
		mov    _0cf19c_data,%ax
		mov    %ax,_0cad6a_data(%edx)
		mov    0x000007(%esp),%al
		mov    %al,_0cad6f_data(%edx)
		jmp    _04d72a_jump

	_04d6d5_jump:
		mov    _0c2bd4_data(,%ecx,4),%esi
		push   %edi

	_04d6dd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04d6f5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04d6dd_jump

	_04d6f5_jump:
		pop    %edi
		mov    0x000004(%esp,%ecx,1),%al
		mov    %al,_0cad6f_data(%edx)
		xor    %eax,%eax
		mov    %ebx,%ecx
		mov    _0967a1_data,%al
		sub    %eax,%ecx
		mov    %ecx,%eax
		mov    _0cf19e_data,%cx
		add    $0x00000f,%ecx
		imul   %ecx,%eax
		mov    _0cf1b4_data,%di
		add    %edi,%eax
		mov    %ax,_0cad6a_data(%edx)

	_04d72a_jump:
		movswl %bx,%eax
		imul   $0x0000d8,%eax,%eax
		add    %ebp,%eax
		inc    %ebx
		call   _01ed18_func

	_04d73b_jump:
		xor    %eax,%eax
		mov    _0cf18c_data,%edx
		mov    _0967a1_data,%al
		sar    $0x000010,%edx
		movswl %bx,%ecx
		add    %edx,%eax
		cmp    %eax,%ecx
		jle    _04d667_jump
		xor    %eax,%eax
		mov    _0e470c_data,%al
		mov    _0cf14a_data,%ecx
		add    %eax,%eax
		sar    $0x000010,%ecx
		mov    %ax,0x00000c(%esp)
		lea    0x000000(,%ecx,8),%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		sub    %ecx,%eax
		mov    _0cf164_data,%dx
		mov    _0cf194_data,%cx
		mov    _0cad6a_data(,%eax,8),%ax
		mov    _0cf194_data,%bx
		sub    %ecx,%eax
		mov    _0e46fc_data,%si
		add    $0x000023,%eax
		sub    $0x000019,%ebx
		mov    %ax,0x000010(%esp)
		cmp    %si,%dx
		jge    _04d7b9_jump
		mov    %edx,%eax
		jmp    _04d7bb_jump

	_04d7b9_jump:
		mov    %esi,%eax

	_04d7bb_jump:
		mov    _0e4700_data,%di
		cmp    %di,%bx
		jge    _04d7cb_jump
		mov    %ebx,%ecx
		jmp    _04d7cd_jump

	_04d7cb_jump:
		mov    %edi,%ecx

	_04d7cd_jump:
		mov    _0e46fa_data,%esi
		mov    _0e4702_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		add    %esi,%edi
		movswl %dx,%esi
		mov    %esi,(%esp)
		mov    0x00000a(%esp),%esi
		mov    (%esp),%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		cmp    %esi,%edi
		jle    _04d800_jump
		movswl %ax,%esi
		sub    %esi,%edi
		mov    %edi,%esi
		jmp    _04d805_jump

	_04d800_jump:
		movswl %ax,%edi
		sub    %edi,%esi

	_04d805_jump:
		mov    _0e46fc_data,%ebp
		mov    %esi,%edi
		mov    _0e46fe_data,%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		add    %esi,%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x00000e(%esp),%ebp
		sar    $0x000010,%ebp
		movswl %bx,%esi
		add    %ebp,%esi
		mov    0x000008(%esp),%ebp
		cmp    %ebp,%esi
		jge    _04d83c_jump
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi
		jmp    _04d841_jump

	_04d83c_jump:
		movswl %cx,%ebp
		sub    %ebp,%esi

	_04d841_jump:
		mov    %dx,_0e46fc_data
		mov    0x00000c(%esp),%edx
		mov    %bx,_0e4700_data
		mov    %dx,_0e4704_data
		mov    0x000010(%esp),%edx
		mov    _095e1b_data,%bh
		mov    %dx,_0e46fe_data
		test   %bh,%bh
		je     _04d886_jump
		push   $0x000001
		movswl %si,%edx
		movswl %di,%ebx
		cwtl   
		movswl %cx,%esi
		mov    %edx,%ecx
		mov    %esi,%edx
		call   _04f6dc_func
		jmp    _04d899_jump

	_04d886_jump:
		movswl %si,%edx
		movswl %di,%ebx
		cwtl   
		movswl %cx,%esi
		mov    %edx,%ecx
		mov    %esi,%edx
		call   _04feec_func

	_04d899_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04d8a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		sub    $0x000008,%esp
		mov    $0x000001,%ecx
		mov    _048ab4_jump,%eax
		mov    $0x0000a0,%edx
		mov    %eax,(%esp)
		call   _03cd54_func
		push   $0x000001
		mov    _0cf192_data,%ebx
		mov    $_0966f8_data,%eax
		sar    $0x000010,%ebx
		call   _01a168_func
		mov    _0967a1_data,%al
		mov    %al,0x000004(%esp)
		jmp    _04d980_jump

	_04d8e5_jump:
		imul   $0x0000d8,%ebx,%eax
		mov    _0cad68_data(%eax),%dx
		mov    _0cad6a_data(%eax),%cx
		cmp    $0x000003,%bl
		jae    _04d90d_jump
		cmpw   $0x000000,_0cd15c_data(,%ebx,2)
		je     _04d90d_jump
		mov    $0x000001,%bl
		jmp    _04d916_jump

	_04d90d_jump:
		xor    %ebx,%ebx
		mov    0x000004(%esp),%bl
		mov    (%esp,%ebx,1),%bl

	_04d916_jump:
		xor    %eax,%eax
		mov    _0cf1a4_data,%di
		mov    0x000004(%esp),%al
		cmp    %di,%ax
		je     _04d950_jump
		xor    %eax,%eax
		mov    %bl,%al
		push   %eax
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		imul   $0x0000d8,%eax,%eax
		movswl %dx,%edx
		movswl %cx,%ebx
		mov    $0x000002,%ecx
		add    $_0cac98_data,%eax
		call   _01a168_func
		jmp    _04d97c_jump

	_04d950_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    %bl,_0cad6f_data(%eax)
		mov    $_0cac98_data,%ebx
		add    %eax,%ebx
		mov    %ebx,%eax
		mov    $0x000001,%edx
		call   _01ed18_func
		mov    %ebx,%eax
		call   _04ebe0_func

	_04d97c_jump:
		incb   0x000004(%esp)

	_04d980_jump:
		mov    _0cf18c_data,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0967a1_data,%al
		sar    $0x000010,%edx
		mov    0x000004(%esp),%bl
		add    %edx,%eax
		cmp    %eax,%ebx
		jle    _04d8e5_jump
		add    $0x000008,%esp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04d9a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _04eb1c_func
		call   _037514_func
		test   %al,%al
		je     _04d9c2_jump
		movb   $0x000001,_0cf42b_data

	_04d9c2_jump:
		cmpb   $0x000000,_0cf470_data
		jne    _04d9ff_jump
		mov    _0cf1a2_data,%ax
		cmp    _0cf186_data,%ax
		jle    _04da7f_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04da7f_jump

	_04d9ff_jump:
		call   _041de8_func
		test   %ax,%ax
		je     _04da40_jump
		mov    $0x000044,%eax
		call   _072210_func
		xor    %eax,%eax
		mov    _0cf1a4_data,%si
		mov    _0967a1_data,%al
		cmp    %si,%ax
		jne    _04da34_jump
		mov    _0cf14c_data,%ax
		mov    %ax,_0cf1a4_data
		jmp    _04da7f_jump

	_04da34_jump:
		mov    %esi,%edi
		dec    %edi
		mov    %di,_0cf1a4_data
		jmp    _04da7f_jump

	_04da40_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _04da7f_jump
		mov    $0x000044,%eax
		call   _072210_func
		mov    _0cf1a4_data,%ax
		mov    _0cf14c_data,%bx
		cmp    %bx,%ax
		jne    _04da75_jump
		xor    %ebx,%eax
		mov    _0967a1_data,%al
		mov    %ax,_0cf1a4_data
		jmp    _04da7f_jump

	_04da75_jump:
		mov    %eax,%ecx
		inc    %ecx
		mov    %cx,_0cf1a4_data

	_04da7f_jump:
		mov    _0cf1a4_data,%ax
		test   %ax,%ax
		jl     _04db31_jump
		cmp    $0x000002,%ax
		jg     _04db31_jump
		cmpb   $0x000000,_0cf470_data
		je     _04db31_jump
		call   _0373f0_func
		test   %al,%al
		jne    _04dac2_jump
		call   _041d08_func
		test   %ax,%ax
		jne    _04dac2_jump
		call   _041c98_func
		test   %ax,%ax
		je     _04db31_jump

	_04dac2_jump:
		xor    %al,%al
		jmp    _04dac8_jump

	_04dac6_jump:
		inc    %al

	_04dac8_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmpw   $0x000000,_0cd15c_data(,%edx,2)
		je     _04dac6_jump
		xor    %edx,%edx
		mov    _0cf1a4_data,%cx
		mov    %al,%dl
		cmp    %cx,%dx
		je     _04db31_jump
		mov    _0cf1a2_data,%edx
		sar    $0x000010,%edx
		cmpw   $0x000000,_0cd15c_data(,%edx,2)
		sete   %dl
		xor    %dh,%dh
		mov    %edx,%ebx
		mov    _0cf1a2_data,%edx
		sar    $0x000010,%edx
		mov    %bx,_0cd15c_data(,%edx,2)
		xor    %edx,%edx
		mov    %al,%dl
		cmpw   $0x000000,_0cd15c_data(,%edx,2)
		sete   %dl
		xor    %dh,%dh
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %bx,_0cd15c_data(,%edx,2)

	_04db31_jump:
		call   _04eb60_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04db3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf42b_data,%ah
		test   %ah,%ah
		jne    _04dbb6_jump
		cmpw   $0x000000,_0cd15c_data
		je     _04db6d_jump
		mov    $0x000001,%bl
		mov    %ah,_095de5_data
		mov    %ah,_0cf40b_data
		mov    %bl,_095e25_data
		jmp    _04dbb6_jump

	_04db6d_jump:
		cmpw   $0x000000,_0cd15e_data
		je     _04db90_jump
		mov    $0x000001,%cl
		mov    %ah,_0cf40b_data
		mov    _095e24_data,%al
		mov    %cl,_095de5_data
		cmp    $0x000002,%al
		jne    _04dbb6_jump
		jmp    _04dba9_jump

	_04db90_jump:
		mov    $0x000001,%dl
		mov    _095e24_data,%bl
		mov    %dl,_095de5_data
		mov    %dl,_0cf40b_data
		cmp    $0x000002,%bl
		jne    _04dbb6_jump

	_04dba9_jump:
		mov    %ah,_095e24_data
		xor    %eax,%eax
		call   _048cc8_func

	_04dbb6_jump:
		movb   $0x000009,_0cf429_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04dbc4_func:
		push   %esi
		push   %edi
		movw   $0x0000c8,(%eax)
		mov    $_0cc6c0_data,%edi
		movw   $0x000000,(%edx)
		mov    _0c2b98_data,%esi
		movw   $0x0000c8,(%ebx)
		mov    $0x0000a0,%edx
		movw   $0x000000,(%ecx)
		mov    $0x000046,%ecx
		mov    $0x000024,%ebx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000001,%ah
		mov    %dx,_0cc790_data
		mov    %bx,_0cc792_data
		mov    %ah,_0cc794_data
		xor    %dl,%dl
		mov    %ah,_0cc796_data
		mov    %dl,_0cc795_data
		mov    %edi,%eax
		mov    %dl,_0cc797_data
		call   _01ed18_func
		pop    %edi
		pop    %esi
		ret    



_04dc38_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		call   _03cd54_func
		cmpb   $0x000000,_095e1b_data
		je     _04dc74_jump
		mov    _0e46fc_data,%ecx
		mov    _0e4702_data,%ebx
		mov    _0e46fe_data,%edx
		mov    _0e46fa_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024808_func

	_04dc74_jump:
		mov    $0x000001,%edx
		mov    $_0cc6c0_data,%eax
		mov    $0x000001,%ecx
		mov    $0x000062,%ebx
		call   _04ebe0_func
		push   $0x000005
		mov    $0x00009b,%edx
		mov    $_0c0fdc_data,%eax
		call   _01a168_func
		xor    %dl,%dl
		mov    %dl,0x00000c(%esp)

	_04dca4_jump:
		xor    %ebx,%ebx
		push   $0x000005
		mov    0x000010(%esp),%bl
		mov    $0x000001,%ecx
		shl    $0x000003,%ebx
		mov    $0x000096,%edx
		add    $0x00004a,%ebx
		mov    $_0c0fa4_data,%eax
		movswl %bx,%ebx
		call   _01a168_func
		mov    0x00000c(%esp),%dh
		inc    %dh
		mov    %dh,0x00000c(%esp)
		cmp    $0x000007,%dh
		jb     _04dca4_jump
		mov    _0cf148_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esp,%edx
		mov    $0x000002,%ecx
		call   _080a4e_func
		push   $0x000005
		mov    $0x000062,%ebx
		mov    $0x0000c6,%edx
		lea    0x000004(%esp),%eax
		call   _01a168_func
		mov    _0cf144_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esp,%edx
		mov    $0x000002,%ecx
		call   _080a4e_func
		push   $0x000005
		mov    $0x000062,%ebx
		mov    $0x000069,%edx
		lea    0x000004(%esp),%eax
		call   _01a168_func
		mov    _0cf146_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esp,%edx
		mov    $0x000002,%ecx
		call   _080a4e_func
		push   $0x000005
		mov    $0x000040,%ebx
		mov    $0x000096,%edx
		lea    0x000004(%esp),%eax
		call   _01a168_func
		mov    _0cf13e_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esp,%edx
		mov    $0x000002,%ecx
		call   _080a4e_func
		push   $0x000005
		mov    $0x00008a,%ebx
		mov    $0x000096,%edx
		lea    0x000004(%esp),%eax
		call   _01a168_func
		push   $0x000005
		mov    $0x000002,%ecx
		mov    $0x0000a0,%ebx
		mov    _0c2a70_data,%eax
		mov    %ebx,%edx
		call   _01a168_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ddd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $_0cf148_data,%ecx
		mov    $_0cf140_data,%ebx
		mov    $_0cf146_data,%edx
		mov    $_0cf14a_data,%eax
		call   _0420f0_func
		call   _04dc38_func
		call   _0373f0_func
		xor    %ah,%ah
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ddfc_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		call   _03cd54_func
		cmpb   $0x000000,_095e1b_data
		je     _04de38_jump
		mov    _0e46fc_data,%ecx
		mov    _0e4702_data,%ebx
		mov    _0e46fe_data,%edx
		mov    _0e46fa_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024808_func

	_04de38_jump:
		mov    $0x000001,%edx
		mov    $_0cc6c0_data,%eax
		mov    $0x000002,%ecx
		mov    $0x000064,%ebx
		call   _04ebe0_func
		push   $0x000005
		mov    $0x0000a0,%edx
		mov    _0c2a6c_data,%eax
		call   _01a168_func
		mov    _0cf142_data,%edx
		sar    $0x000010,%edx
		mov    $0x000014,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00000a,%ebx
		mov    %esp,%edx
		add    %eax,%eax
		mov    $0x000002,%ecx
		call   _080a4e_func
		push   $0x000005
		mov    $0x000078,%ebx
		mov    $0x000082,%edx
		lea    0x000004(%esp),%eax
		call   _01a168_func
		mov    _0cf140_data,%edx
		sar    $0x000010,%edx
		mov    $0x000014,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00000a,%ebx
		mov    %esp,%edx
		add    %eax,%eax
		mov    $0x000002,%ecx
		call   _080a4e_func
		push   $0x000005
		mov    $0x000078,%ebx
		mov    $0x0000b4,%edx
		lea    0x000004(%esp),%eax
		call   _01a168_func
		push   $0x000005
		mov    $0x000002,%ecx
		mov    $0x0000a0,%ebx
		mov    _0c2a74_data,%eax
		mov    %ebx,%edx
		call   _01a168_func
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04defc_func:
		push   %edx
		mov    $_0cf142_data,%edx
		mov    $_0cf144_data,%eax
		call   _042138_func
		call   _04ddfc_func
		call   _0373f0_func
		xor    %ah,%ah
		pop    %edx
		ret    



_04df1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		call   _01cbc8_func
		cmpl   $0x000000,_0e46e0_data
		je     _04dfaa_jump
		xor    %edx,%edx
		call   *_0e46e0_data
		mov    _0cf474_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7938_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e3dbc_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cf474_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7938_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0c7638_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		call   _023d4c_func

	_04dfaa_jump:
		mov    $_0cf140_data,%ecx
		mov    $_0cf148_data,%ebx
		mov    $_0cf14a_data,%edx
		mov    $_0cf146_data,%eax
		call   _04dbc4_func
		cmpb   $0x000000,_095e1b_data
		jne    _04dfd6_jump
		call   _03c9c0_func
		jmp    _04e142_jump

	_04dfd6_jump:
		mov    _0cf428_data,%al
		cmp    $0x000001,%al
		jb     _04dfea_jump
		jbe    _04e01b_jump
		cmp    $0x000002,%al
		je     _04e044_jump
		jmp    _04e06b_jump

	_04dfea_jump:
		test   %al,%al
		jne    _04e06b_jump
		mov    $0x000046,%ecx
		mov    $0x000008,%esi
		mov    $0x0000b0,%edi
		mov    $0x0000be,%eax
		mov    %cx,(%esp)
		mov    %si,0x00000c(%esp)
		mov    %di,0x000008(%esp)
		mov    %ax,0x000004(%esp)
		jmp    _04e06b_jump

	_04e01b_jump:
		mov    $0x000039,%edi
		mov    $0x000008,%eax
		mov    $0x0000c8,%edx
		mov    $0x0000be,%ebx
		mov    %di,(%esp)
		mov    %ax,0x00000c(%esp)
		mov    %dx,0x000008(%esp)
		mov    %bx,0x000004(%esp)
		jmp    _04e06b_jump

	_04e044_jump:
		mov    $0x000032,%edx
		mov    $0x000008,%ebx
		mov    $0x0000d8,%ecx
		mov    $0x0000be,%esi
		mov    %dx,(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000008(%esp)
		mov    %si,0x000004(%esp)

	_04e06b_jump:
		mov    (%esp),%edx
		mov    _0e46fc_data,%ax
		cmp    %dx,%ax
		jle    _04e07b_jump
		mov    %edx,%eax

	_04e07b_jump:
		mov    0x00000c(%esp),%ebx
		mov    _0e4700_data,%dx
		cmp    %bx,%dx
		jle    _04e08d_jump
		mov    %ebx,%edx

	_04e08d_jump:
		mov    _0e46fa_data,%ecx
		mov    _0e4702_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x000006(%esp),%esi
		add    %ecx,%ebx
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		add    %esi,%ecx
		cmp    %ecx,%ebx
		jle    _04e0be_jump
		movswl %ax,%ecx
		sub    %ecx,%ebx
		mov    %ebx,%ecx
		jmp    _04e0c3_jump

	_04e0be_jump:
		movswl %ax,%ebx
		sub    %ebx,%ecx

	_04e0c3_jump:
		mov    _0e46fc_data,%ebx
		mov    %ecx,%esi
		mov    _0e46fe_data,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%ecx
		mov    0x000002(%esp),%edi
		add    %ebx,%ecx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%edi
		sar    $0x000010,%ebx
		add    %edi,%ebx
		cmp    %ebx,%ecx
		jle    _04e0f6_jump
		movswl %dx,%ebx
		sub    %ebx,%ecx
		mov    %ecx,%ebx
		jmp    _04e0fb_jump

	_04e0f6_jump:
		movswl %dx,%ecx
		sub    %ecx,%ebx

	_04e0fb_jump:
		mov    (%esp),%ecx
		mov    %cx,_0e46fc_data
		mov    0x00000c(%esp),%ecx
		mov    %cx,_0e4700_data
		mov    0x000008(%esp),%ecx
		push   $0x000001
		mov    %cx,_0e4704_data
		mov    0x000008(%esp),%ecx
		movswl %dx,%edx
		mov    %cx,_0e46fe_data
		mov    $_04dc38_func,%ecx
		cwtl   
		mov    %ecx,_0e46d8_data
		movswl %bx,%ecx
		movswl %si,%ebx
		call   _04f6dc_func

	_04e142_jump:
		mov    $_04ddd0_func,%eax
		call   _03ca88_func
		cmpb   $0x000000,_095e1b_data
		jne    _04e164_jump
		call   _03ca10_func
		call   _03c9c0_func
		jmp    _04e2d0_jump

	_04e164_jump:
		mov    _0cf428_data,%al
		cmp    $0x000001,%al
		jb     _04e178_jump
		jbe    _04e1a9_jump
		cmp    $0x000002,%al
		je     _04e1d2_jump
		jmp    _04e1f9_jump

	_04e178_jump:
		test   %al,%al
		jne    _04e1f9_jump
		mov    $0x000046,%edi
		mov    $0x000008,%eax
		mov    $0x0000b0,%edx
		mov    $0x0000af,%ebx
		mov    %di,(%esp)
		mov    %ax,0x00000c(%esp)
		mov    %dx,0x000008(%esp)
		mov    %bx,0x000004(%esp)
		jmp    _04e1f9_jump

	_04e1a9_jump:
		mov    $0x00003d,%edx
		mov    $0x000008,%ebx
		mov    $0x0000c2,%ecx
		mov    $0x0000af,%esi
		mov    %dx,(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000008(%esp)
		mov    %si,0x000004(%esp)
		jmp    _04e1f9_jump

	_04e1d2_jump:
		mov    $0x000032,%ecx
		mov    $0x000008,%esi
		mov    $0x0000d7,%edi
		mov    $0x0000af,%eax
		mov    %cx,(%esp)
		mov    %si,0x00000c(%esp)
		mov    %di,0x000008(%esp)
		mov    %ax,0x000004(%esp)

	_04e1f9_jump:
		mov    (%esp),%ecx
		mov    _0e46fc_data,%ax
		cmp    %cx,%ax
		jle    _04e209_jump
		mov    %ecx,%eax

	_04e209_jump:
		mov    0x00000c(%esp),%esi
		mov    _0e4700_data,%dx
		cmp    %si,%dx
		jle    _04e21b_jump
		mov    %esi,%edx

	_04e21b_jump:
		mov    _0e46fa_data,%ecx
		mov    _0e4702_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    -0x000002(%esp),%esi
		add    %ebx,%ecx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%esi
		sar    $0x000010,%ebx
		add    %esi,%ebx
		cmp    %ebx,%ecx
		jle    _04e24c_jump
		movswl %ax,%ebx
		sub    %ebx,%ecx
		mov    %ecx,%ebx
		jmp    _04e251_jump

	_04e24c_jump:
		movswl %ax,%ecx
		sub    %ecx,%ebx

	_04e251_jump:
		mov    _0e46fc_data,%ecx
		mov    %ebx,%esi
		mov    _0e46fe_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x00000a(%esp),%edi
		add    %ecx,%ebx
		mov    0x000002(%esp),%ecx
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		add    %edi,%ecx
		cmp    %ecx,%ebx
		jle    _04e282_jump
		movswl %dx,%ecx
		sub    %ecx,%ebx
		jmp    _04e289_jump

	_04e282_jump:
		movswl %dx,%ebx
		sub    %ebx,%ecx
		mov    %ecx,%ebx

	_04e289_jump:
		mov    (%esp),%ecx
		mov    $_04ddfc_func,%edi
		mov    %cx,_0e46fc_data
		mov    0x00000c(%esp),%ecx
		push   $0x000001
		mov    %cx,_0e4700_data
		mov    0x00000c(%esp),%ecx
		movswl %dx,%edx
		mov    %cx,_0e4704_data
		mov    0x000008(%esp),%ecx
		cwtl   
		mov    %cx,_0e46fe_data
		movswl %bx,%ecx
		movswl %si,%ebx
		mov    %edi,_0e46d8_data
		call   _04f6dc_func

	_04e2d0_jump:
		mov    $_04defc_func,%eax
		call   _03ca88_func
		cmpb   $0x000000,_095e1b_data
		jne    _04e2f2_jump
		call   _03ca10_func
		call   _03c9c0_func
		jmp    _04e466_jump

	_04e2f2_jump:
		mov    _0cf428_data,%al
		cmp    $0x000001,%al
		jb     _04e306_jump
		jbe    _04e337_jump
		cmp    $0x000002,%al
		je     _04e360_jump
		jmp    _04e387_jump

	_04e306_jump:
		test   %al,%al
		jne    _04e387_jump
		mov    $0x00003c,%edx
		mov    $0x000008,%ebx
		mov    $0x0000c0,%ecx
		mov    $0x0000bb,%esi
		mov    %dx,(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000008(%esp)
		mov    %si,0x000004(%esp)
		jmp    _04e387_jump

	_04e337_jump:
		mov    $0x00003c,%ecx
		mov    $0x000008,%esi
		mov    $0x0000c0,%edi
		mov    $0x0000bb,%eax
		mov    %cx,(%esp)
		mov    %si,0x00000c(%esp)
		mov    %di,0x000008(%esp)
		mov    %ax,0x000004(%esp)
		jmp    _04e387_jump

	_04e360_jump:
		mov    $0x000032,%edi
		mov    $0x000008,%eax
		mov    $0x0000d6,%edx
		mov    $0x0000be,%ebx
		mov    %di,(%esp)
		mov    %ax,0x00000c(%esp)
		mov    %dx,0x000008(%esp)
		mov    %bx,0x000004(%esp)

	_04e387_jump:
		mov    (%esp),%edi
		mov    _0e46fc_data,%ax
		cmp    %di,%ax
		jle    _04e399_jump
		mov    %edi,%ebx
		jmp    _04e39b_jump

	_04e399_jump:
		mov    %eax,%ebx

	_04e39b_jump:
		mov    0x00000c(%esp),%edx
		mov    _0e4700_data,%ax
		cmp    %dx,%ax
		jg     _04e3ac_jump
		mov    %eax,%edx

	_04e3ac_jump:
		mov    _0e46fa_data,%ecx
		mov    _0e4702_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		mov    0x000006(%esp),%esi
		add    %ecx,%eax
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		add    %esi,%ecx
		cmp    %ecx,%eax
		jle    _04e3dc_jump
		movswl %bx,%ecx
		sub    %ecx,%eax
		mov    %eax,%ecx
		jmp    _04e3e1_jump

	_04e3dc_jump:
		movswl %bx,%eax
		sub    %eax,%ecx

	_04e3e1_jump:
		mov    _0e46fc_data,%eax
		mov    %ecx,%esi
		mov    _0e46fe_data,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		mov    0x000002(%esp),%edi
		add    %ecx,%eax
		mov    0x00000a(%esp),%ecx
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		add    %edi,%ecx
		cmp    %ecx,%eax
		jle    _04e413_jump
		movswl %dx,%ecx
		sub    %ecx,%eax
		mov    %eax,%ecx
		jmp    _04e418_jump

	_04e413_jump:
		movswl %dx,%eax
		sub    %eax,%ecx

	_04e418_jump:
		mov    (%esp),%eax
		mov    %ax,_0e46fc_data
		mov    0x00000c(%esp),%eax
		mov    $_04b518_func,%ebp
		mov    %ax,_0e4700_data
		mov    0x000008(%esp),%eax
		movswl %cx,%ecx
		mov    %ax,_0e4704_data
		mov    0x000004(%esp),%eax
		movswl %dx,%edx
		mov    %ax,_0e46fe_data
		call   _04b3bc_func
		push   $0x000001
		movswl %si,%eax
		movswl %bx,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		mov    %ebp,_0e46d8_data
		call   _04f6dc_func

	_04e466_jump:
		push   $_0cf142_data
		mov    $_0cf148_data,%ecx
		mov    $_0cf140_data,%ebx
		mov    $_0cf146_data,%edx
		mov    _0e46dc_data,%eax
		push   $_0cf144_data
		mov    %eax,_0e46d0_data
		mov    $_0cf14a_data,%eax
		call   _042174_func
		mov    $_04b35c_func,%eax
		mov    _095e1b_data,%bl
		mov    %eax,_0e46cc_data
		test   %bl,%bl
		jne    _04e4ae_jump
		call   _04e6cc_func
		jmp    _04e4b3_jump

	_04e4ae_jump:
		call   _04e694_func

	_04e4b3_jump:
		mov    _0e46d0_data,%eax
		mov    _095e1b_data,%bh
		mov    %eax,_0e46dc_data
		test   %bh,%bh
		jne    _04e4dd_jump
		call   _03ca10_func
		call   _04b978_func
		call   _04ba78_func
		call   _03c9c0_func
		jmp    _04e4e7_jump

	_04e4dd_jump:
		call   _04b978_func
		call   _04ba78_func

	_04e4e7_jump:
		cmpl   $0x000000,_0e46e0_data
		je     _04e525_jump
		xor    %edx,%edx
		mov    _0cf474_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7938_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e3dbc_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_04e525_jump:
		call   _036ed0_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e534_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _0420e8_func
		call   _01cbc8_func
		cmpb   $0x000000,_095e6a_data
		je     _04e59f_jump
		mov    _0cf13e_data,%ax
		cmp    _0cf146_data,%ax
		jge    _04e564_jump
		mov    $0x000001,%dl
		mov    %ax,_0cf146_data
		jmp    _04e575_jump

	_04e564_jump:
		cmp    _0cf14a_data,%ax
		jle    _04e575_jump
		mov    $0x000001,%dl
		mov    %ax,_0cf14a_data

	_04e575_jump:
		mov    _0cf13c_data,%ax
		cmp    _0cf148_data,%ax
		jge    _04e58e_jump
		mov    $0x000001,%dl
		mov    %ax,_0cf148_data
		jmp    _04e59f_jump

	_04e58e_jump:
		cmp    _0cf140_data,%ax
		jle    _04e59f_jump
		mov    $0x000001,%dl
		mov    %ax,_0cf140_data

	_04e59f_jump:
		test   %dl,%dl
		je     _04e5c6_jump
		push   $_0cf142_data
		mov    $_0cf148_data,%ecx
		mov    $_0cf140_data,%ebx
		push   $_0cf144_data
		mov    $_0cf146_data,%edx
		mov    $_0cf14a_data,%eax
		call   _042174_func

	_04e5c6_jump:
		cmpl   $0x000000,_0e46d8_data
		je     _04e5d5_jump
		call   *_0e46d8_data

	_04e5d5_jump:
		cmpb   $0x000000,_095e69_data
		je     _04e5ff_jump
		xor    %dh,%dh
		mov    %dh,_095e69_data
		call   _016ded_func
		call   _016ddd_func
		mov    $0x000001,%eax
		call   _023d4c_func
		call   _03b3e0_func

	_04e5ff_jump:
		cmpb   $0x000000,_0cf46d_data
		jne    _04e625_jump
		mov    _0cf17e_data,%ax
		test   %ax,%ax
		jne    _04e625_jump
		cmpb   $0x000000,_0cf42b_data
		jne    _04e625_jump
		cmpb   $0x000000,_0cf425_data
		je     _04e62a_jump

	_04e625_jump:
		mov    $0x000001,%eax

	_04e62a_jump:
		mov    %eax,%edx
		test   %ax,%ax
		jne    _04e68d_jump
		cmpl   $0x000000,_0e46d4_data
		je     _04e64a_jump
		cmpw   $0x000000,_0cf2d0_data
		jne    _04e64a_jump
		call   *_0e46d4_data

	_04e64a_jump:
		call   _0373f0_func
		test   %al,%al
		je     _04e678_jump
		mov    _0cf1a4_data,%ax
		cmp    _0cf14c_data,%ax
		jne    _04e678_jump
		mov    $0x000001,%esi
		mov    $0x000045,%eax
		mov    %si,_0cf17e_data
		call   _072210_func

	_04e678_jump:
		cmpb   $0x000000,_0cf42b_data
		je     _04e68b_jump
		mov    $0x00004d,%eax
		call   _072210_func

	_04e68b_jump:
		mov    %edx,%eax

	_04e68d_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e694_func:
		cmpl   $0x000000,_0e46cc_data
		je     _04e6a3_jump
		call   *_0e46cc_data

	_04e6a3_jump:
		cmpl   $0x000000,_0e46c8_data
		je     _04e6b2_jump
		call   *_0e46c8_data

	_04e6b2_jump:
		mov    $_04e534_func,%eax
		call   _03ca88_func
		cmpl   $0x000000,_0e46dc_data
		je     _04e6cb_jump
		call   *_0e46dc_data

	_04e6cb_jump:
		ret    



_04e6cc_func:
		push   %ecx
		push   %esi
		push   %edi
		cmpl   $0x000000,_0e46cc_data
		je     _04e6de_jump
		call   *_0e46cc_data

	_04e6de_jump:
		cmpl   $0x000000,_0e46c8_data
		je     _04e6ed_jump
		call   *_0e46c8_data

	_04e6ed_jump:
		cmpl   $0x000000,_0e46e0_data
		je     _04e6fc_jump
		call   *_0e46e0_data

	_04e6fc_jump:
		cmpw   $0x000001,_0cf282_data
		jne    _04e710_jump
		cmpw   $0x000009,_0cf270_data
		je     _04e74c_jump

	_04e710_jump:
		cmpw   $0x000002,_0cf282_data
		jne    _04e724_jump
		cmpw   $0x000004,_0cf270_data
		je     _04e74c_jump

	_04e724_jump:
		cmpw   $0x000004,_0cf282_data
		jne    _04e738_jump
		cmpw   $0x000009,_0cf270_data
		je     _04e74c_jump

	_04e738_jump:
		cmpw   $0x000005,_0cf282_data
		jne    _04e775_jump
		cmpw   $0x000004,_0cf270_data
		jne    _04e775_jump

	_04e74c_jump:
		mov    _0cf136_data,%esi
		sar    $0x000010,%esi
		lea    0x000000(,%esi,4),%eax
		mov    $0x000300,%ecx
		sub    %esi,%eax
		mov    _0cd224_data,%esi
		shl    $0x000008,%eax
		mov    $_0e3dbc_data,%edi
		add    %eax,%esi
		jmp    _04e7cd_jump

	_04e775_jump:
		movzbl _0cf474_data,%esi
		lea    0x000000(,%esi,4),%eax
		mov    $0x000300,%ecx
		sub    %esi,%eax
		mov    $_0c7938_data,%esi
		shl    $0x000008,%eax
		mov    $_0e3dbc_data,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		movzbl _0cf474_data,%esi
		lea    0x000000(,%esi,4),%eax
		mov    $_0c7938_data,%edi
		sub    %esi,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0c7638_data,%esi
		add    %eax,%edi

	_04e7cd_jump:
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _024960_func
		xor    %eax,%eax
		call   _023d4c_func
		mov    $_04e534_func,%eax
		call   _03ca88_func
		cmpl   $0x000000,_0e46dc_data
		je     _04e802_jump
		call   *_0e46dc_data

	_04e802_jump:
		movzbl _0cf474_data,%esi
		lea    0x000000(,%esi,4),%eax
		mov    $_0c7938_data,%edi
		sub    %esi,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e3dbc_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04e83c_func:
		push   %ebx
		push   %edx
		xor    %eax,%eax

	_04e840_jump:
		movswl %ax,%edx
		mov    _095df8_data(,%edx,4),%ebx
		mov    (%ebx),%bl
		inc    %eax
		mov    %bl,_095e14_data(%edx)
		cmp    $0x000007,%ax
		jl     _04e840_jump
		mov    _095df8_data,%edx
		movb   $0x00004b,(%edx)
		mov    _095dfc_data,%edx
		movb   $0x000048,(%edx)
		mov    _095e00_data,%edx
		movb   $0x00004d,(%edx)
		mov    _095e04_data,%edx
		movb   $0x000050,(%edx)
		mov    _095e08_data,%edx
		movb   $0x000038,(%edx)
		mov    _095e0c_data,%edx
		movb   $0x000039,(%edx)
		mov    _095e10_data,%edx
		movb   $0x00001d,(%edx)
		pop    %edx
		pop    %ebx
		ret    



_04e89c_func:
		push   %ebx
		push   %edx
		xor    %eax,%eax

	_04e8a0_jump:
		movswl %ax,%edx
		mov    _095df8_data(,%edx,4),%ebx
		mov    _095e14_data(%edx),%dl
		inc    %eax
		mov    %dl,(%ebx)
		cmp    $0x000007,%ax
		jl     _04e8a0_jump
		pop    %edx
		pop    %ebx
		ret    



_04e8bc_func:
		push   %ebx
		push   %edx
		push   %edi
		cmpw   $0x000000,_0cd15e_data
		jne    _04e977_jump
		cmpw   $0x000002,_0cd162_data
		jne    _04e8de_jump
		xor    %eax,%eax
		jmp    _04ea10_jump

	_04e8de_jump:
		mov    _0cd160_data,%edx
		sar    $0x000010,%edx
		mov    _0cd164_data,%di
		mov    _095e58_data(,%edx,2),%ax
		shl    $0x000003,%edx
		test   %di,%di
		je     _04e911_jump
		mov    _0cd15e_data,%ebx
		sar    $0x000010,%ebx
		add    _095e28_data(%edx,%ebx,2),%ax
		jmp    _04e922_jump

	_04e911_jump:
		mov    _0cd15e_data,%ebx
		sar    $0x000010,%ebx
		add    _095e38_data(%edx,%ebx,2),%ax

	_04e922_jump:
		cmpw   $0x000000,_0cd168_data
		je     _04e956_jump
		mov    _0cd160_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,8),%ebx
		mov    _0cd15e_data,%edx
		sar    $0x000010,%edx
		mov    _095e48_data(%ebx,%edx,2),%dx
		add    %edx,%edx
		add    %edx,%eax
		jmp    _04ea10_jump

	_04e956_jump:
		mov    _0cd15e_data,%ebx
		mov    _0cd160_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %ebx,%ebx
		add    _095e48_data(%ebx,%edx,8),%ax
		jmp    _04ea10_jump

	_04e977_jump:
		cmpb   $0x000000,_0cf40b_data
		jne    _04e9ca_jump
		mov    _0cd160_data,%eax
		sar    $0x000010,%eax
		mov    _095e62_data(,%eax,2),%edx
		sar    $0x000010,%edx
		mov    %edx,%ebx
		sar    %ebx
		movswl %bx,%eax
		mov    _0cd164_data,%di
		add    %ebx,%eax
		test   %di,%di
		je     _04e9ad_jump
		sar    $0x000003,%edx
		cwtl   
		add    %edx,%eax

	_04e9ad_jump:
		cmpw   $0x000000,_0cd166_data
		je     _04ea10_jump
		mov    _0cd160_data,%edx
		sar    $0x000010,%edx
		add    _095e5c_data(,%edx,2),%ax
		jmp    _04ea10_jump

	_04e9ca_jump:
		mov    _0cd160_data,%eax
		sar    $0x000010,%eax
		mov    _095e62_data(,%eax,2),%edx
		sar    $0x000010,%edx
		mov    %edx,%ebx
		sar    %ebx
		movswl %bx,%eax
		add    %ebx,%eax
		cmpw   $0x000000,_0cd164_data
		je     _04e9f5_jump
		sar    $0x000003,%edx
		cwtl   
		add    %edx,%eax

	_04e9f5_jump:
		cmpw   $0x000000,_0cd166_data
		je     _04ea10_jump
		mov    _0cd160_data,%edx
		sar    $0x000010,%edx
		add    _095e60_data(,%edx,2),%ax

	_04ea10_jump:
		cmpw   $0x000100,_0e4702_data
		jle    _04ea24_jump
		mov    $0x000080,%eax
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    

	_04ea24_jump:
		cmp    $0x000080,%ax
		jge    _04ea33_jump
		mov    $0x000100,%eax
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    

	_04ea33_jump:
		mov    $0x000100,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		add    $0x000080,%eax
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    



_04ea48_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		mov    %ebx,%edi
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000064,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		mov    %eax,%ebx
		sub    %edx,%eax
		sar    %eax
		add    $0x00000b,%eax
		movswl %cx,%edx
		mov    %ax,_0cf194_data
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000064,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    _0cf18c_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ecx
		mov    %esi,%eax
		shl    $0x000004,%eax
		mov    %ecx,%edx
		sub    %esi,%eax
		sub    %eax,%edx
		inc    %esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%esi
		mov    %ax,_0cf19e_data
		cwtl   
		add    $0x00000f,%eax
		add    %ebx,%eax
		movswl %di,%edx
		mov    %ax,_0cf1b4_data
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000064,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		add    $0x00000b,%eax
		add    %ebx,%eax
		xor    %edx,%edx
		add    %eax,%ecx
		mov    %dx,_0cf17e_data
		mov    %cx,_0cf19c_data
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04eb1c_func:
		push   %edx
		mov    _0cf1a2_data,%dx
		cmp    _0cf1a8_data,%dx
		jge    _04eb39_jump
		cmpb   $0x000000,_0cf470_data
		jne    _04eb39_jump
		inc    %edx
		jmp    _04eb55_jump

	_04eb39_jump:
		cmpb   $0x000000,_0cf470_data
		jne    _04eb53_jump
		mov    _0cf186_data,%dx
		inc    %edx
		mov    %dx,_0cf1a2_data
		pop    %edx
		ret    

	_04eb53_jump:
		xor    %edx,%edx

	_04eb55_jump:
		mov    %dx,_0cf1a2_data
		pop    %edx
		ret    



_04eb60_func:
		push   %edx
		call   _041de8_func
		test   %ax,%ax
		jne    _04ebd4_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _04ebd4_jump
		call   _041d08_func
		test   %ax,%ax
		jne    _04ebd4_jump
		call   _041c98_func
		test   %ax,%ax
		jne    _04ebd4_jump
		call   _041e58_func
		test   %ax,%ax
		jne    _04ebbc_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _04ebbc_jump
		call   _041f70_func
		test   %ax,%ax
		jne    _04ebbc_jump
		call   _041ffc_func
		test   %ax,%ax
		jne    _04ebbc_jump
		mov    $0x000001,%eax
		jmp    _04ebbe_jump

	_04ebbc_jump:
		xor    %eax,%eax

	_04ebbe_jump:
		test   %eax,%eax
		je     _04ebd4_jump
		movb   $0x000001,_0cf470_data
		xor    %edx,%edx
		mov    %dx,_0cf1a2_data
		pop    %edx
		ret    

	_04ebd4_jump:
		xor    %ah,%ah
		mov    %ah,_0cf470_data
		pop    %edx
		ret    



_04ebe0_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		cmpb   $0x000000,_0967a0_data
		jne    _04ec27_jump
		mov    0x0000cc(%esi),%ecx
		xor    %eax,%eax
		mov    0x0000ca(%esi),%ebx
		mov    %dl,%al
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		mov    0x0000c8(%esi),%edx
		mov    0x0000c6(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _023f6c_func
		mov    %esi,%eax
		call   _01a820_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_04ec27_jump:
		mov    0x0000d0(%esi),%ebx
		mov    0x0000ce(%esi),%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x0000d7(%esi),%al
		sar    $0x000010,%edx
		push   %eax
		mov    0x0000d4(%esi),%cl
		mov    %esi,%eax
		call   _01a168_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04ec58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x0000cc(%eax),%ecx
		mov    0x0000ca(%eax),%ebx
		mov    0x0000c8(%eax),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x0000c6(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0244a8_func
		mov    %esi,%eax
		call   _01a820_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04ec94_jump:
		xor    %ah,%ah
		mov    %ah,_0967a2_data
		call   _0420e8_func
		cmpl   $0x000000,_0e46d8_data
		je     _04ecb0_jump
		call   *_0e46d8_data

	_04ecb0_jump:
		mov    _0e46bc_data,%eax
		call   _04ec58_func
		cmpl   $0x000000,_0e46e4_data
		je     _04ecc9_jump
		call   *_0e46e4_data

	_04ecc9_jump:
		call   _037514_func
		test   %al,%al
		jne    _04ecdb_jump
		cmpb   $0x000000,_0967a2_data
		je     _04ece1_jump

	_04ecdb_jump:
		mov    $0x000001,%eax
		ret    

	_04ece1_jump:
		xor    %ah,%ah
		ret    



_04ece4_func:
		push   %ebx
		push   %edx
		mov    _0e46d8_data,%edx
		mov    %eax,_0e46bc_data
		test   %edx,%edx
		je     _04ecfb_jump
		call   *_0e46d8_data

	_04ecfb_jump:
		call   _016ded_func
		call   _016ddd_func
		call   _024150_func
		call   _03b3e0_func
		mov    $0x000001,%ah
		xor    %ebx,%ebx
		xor    %dl,%dl
		mov    %ah,_0967a0_data
		mov    $_04ec94_jump,%eax
		mov    %ebx,_0e46e4_data
		call   _03ca88_func
		mov    %dl,_0967a0_data
		movb   $0x000001,_095e69_data
		call   _0426c0_func
		pop    %edx
		pop    %ebx
		ret    



_04ed40_func:
		push   %ebx
		mov    %eax,_0e46bc_data
		mov    %edx,_0e46e4_data
		mov    $0x000001,%ah
		xor    %edx,%edx
		mov    %ah,_0967a0_data
		call   _016ded_func
		call   _016ddd_func
		call   _024150_func

	_04ed65_jump:
		cmp    _0e46d8_data,%edx
		je     _04ed73_jump
		call   *_0e46d8_data

	_04ed73_jump:
		mov    _0e46bc_data,%eax
		call   _04ec58_func
		call   _04edd0_func
		call   _016ded_func
		call   _016ddd_func
		call   _03c998_func
		call   _03b3e0_func
		call   _0420e8_func
		call   _0373f0_func
		test   %al,%al
		jne    _04ed65_jump
		mov    _0cf2d0_data,%bx
		cmp    %bx,%dx
		jne    _04ed65_jump
		mov    $_04ec94_jump,%eax
		xor    %bl,%dl
		call   _03ca88_func
		mov    %dl,_0967a0_data
		movb   $0x000001,_095e69_data
		call   _0426c0_func
		pop    %ebx
		ret    



_04edd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cf443_data
		jne    _04ee33_jump
		mov    _0e46bc_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		push   $0x000001
		sub    $0x000019,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    _0c2aa4_data,%eax
		call   _01a168_func
		mov    _0e46bc_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		push   $0x000000
		jmp    _04ee88_jump

	_04ee33_jump:
		mov    _0e46bc_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		push   $0x000000
		sub    $0x000019,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    _0c2aa4_data,%eax
		call   _01a168_func
		mov    _0e46bc_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		push   $0x000001

	_04ee88_jump:
		add    $0x000023,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    _0c2aa8_data,%eax
		call   _01a168_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04eea4_func:
		push   %ebx
		push   %edx
		call   _04eb1c_func
		call   _041c98_func
		test   %ax,%ax
		jne    _04eebf_jump
		call   _041d08_func
		test   %ax,%ax
		je     _04ef22_jump

	_04eebf_jump:
		call   _041d78_func
		test   %ax,%ax
		jne    _04ef22_jump
		call   _041de8_func
		test   %ax,%ax
		jne    _04ef22_jump
		cmpb   $0x000000,_0cf470_data
		jne    _04ef08_jump
		mov    _0cf1a2_data,%ax
		cmp    _0cf186_data,%ax
		jle    _04ef22_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04ef22_jump

	_04ef08_jump:
		mov    _0cf443_data,%dl
		test   %dl,%dl
		sete   %al
		mov    %al,_0cf443_data
		mov    $0x000044,%eax
		call   _072210_func

	_04ef22_jump:
		call   _04edd0_func
		call   _037514_func
		test   %al,%al
		je     _04ef3e_jump
		mov    $0x000001,%dh
		mov    %dh,_0cf443_data
		mov    %dh,_0967a2_data

	_04ef3e_jump:
		call   _0373f0_func
		test   %al,%al
		je     _04ef57_jump
		cmpb   $0x000000,_0cf470_data
		je     _04ef57_jump
		movb   $0x000001,_0967a2_data

	_04ef57_jump:
		call   _04eb60_func
		pop    %edx
		pop    %ebx
		ret    

_04ef60_switch:
		.long   _04efbc_case
		.long   _04f029_case
		.long   _04f083_case
		.long   _04f0de_case
		.long   _04f1ca_case




_04ef74_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0000a0,%edx
		mov    $0x000064,%ebx
		mov    $0x000002,%ah
		mov    %dx,_0cac90_data
		mov    %bx,_0cac92_data
		mov    %ah,_0cac94_data
		xor    %dh,%dh
		mov    %ah,_0cac96_data
		mov    %dh,_0cac95_data
		cmp    $0x000004,%al
		ja     _04f2be_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_04ef60_switch(,%eax,4)

	_04efbc_case:
		mov    $0x000001,%ah
		mov    _095e1b_data,%dl
		mov    %ah,_0cf443_data
		test   %dl,%dl
		je     _04efdb_jump
		mov    $_0cabc0_data,%edi
		mov    _0c2a64_data,%esi
		jmp    _04efe6_jump

	_04efdb_jump:
		mov    $_0cabc0_data,%edi
		mov    _0c2a68_data,%esi

	_04efe6_jump:
		push   %edi

	_04efe7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04efff_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04efe7_jump

	_04efff_jump:
		pop    %edi
		mov    $_0cabc0_data,%eax
		mov    $_04eea4_func,%edx
		call   _01ed18_func
		mov    $_0cabc0_data,%eax
		call   _04ed40_func
		cmpb   $0x000000,_0cf443_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04f029_case:
		mov    $0x000001,%al
		mov    $_03465c_func,%esi
		mov    $_0cabc0_data,%edi
		mov    %esi,_0e46d8_data
		mov    _0c2a5c_data,%esi
		mov    %al,_0cf443_data
		push   %edi

	_04f047_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04f05f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04f047_jump

	_04f05f_jump:
		pop    %edi
		mov    %edi,%eax
		mov    $_04eea4_func,%edx
		call   _01ed18_func
		mov    %edi,%eax
		call   _04ed40_func
		cmpb   $0x000000,_0cf443_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04f083_case:
		mov    $0x000001,%ch
		mov    $_0cabc0_data,%edi
		mov    %ch,_0cf443_data
		mov    $_03465c_func,%ecx
		mov    _0c2a60_data,%esi
		mov    %ecx,_0e46d8_data
		push   %edi

	_04f0a2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04f0ba_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04f0a2_jump

	_04f0ba_jump:
		pop    %edi
		mov    %edi,%eax
		mov    $_04eea4_func,%edx
		call   _01ed18_func
		mov    %edi,%eax
		call   _04ed40_func
		cmpb   $0x000000,_0cf443_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04f0de_case:
		call   _04e83c_func
		mov    $0x000001,%cl
		mov    $_0c7938_data,%esi
		mov    $_0e40bc_data,%edi
		mov    $0x000001,%edx
		mov    %cl,_0cf443_data
		mov    $0x000300,%ecx
		mov    $_03cd54_func,%ebx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _02450c_func
		mov    _0cd158_data,%eax
		mov    $_0dde30_data,%esi
		call   _0246bc_func
		call   _03ca10_func
		mov    _0cd158_data,%edi
		mov    $_04eea4_func,%edx
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    $0x000300,%ecx
		mov    $_0c7938_data,%edi
		call   _03c9c0_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_0cabc0_data,%edi
		mov    _0c2a60_data,%esi
		mov    %ebx,_0e46d8_data
		push   %edi

	_04f175_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04f18d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04f175_jump

	_04f18d_jump:
		pop    %edi
		mov    %edi,%eax
		mov    $0x000300,%ecx
		call   _01ed18_func
		mov    %edi,%eax
		mov    $_0e40bc_data,%esi
		call   _04ed40_func
		mov    $_0c7938_data,%edi
		call   _03ca10_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03c9c0_func
		jmp    _04f2b9_jump

	_04f1ca_case:
		call   _04e83c_func
		mov    $0x000001,%bl
		mov    $0x000300,%ecx
		mov    $_0c7938_data,%esi
		mov    $_0e40bc_data,%edi
		mov    $0x000001,%edx
		mov    %bl,_0cf443_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _02450c_func
		mov    _0cd158_data,%eax
		mov    $_0dde30_data,%esi
		call   _0246bc_func
		call   _03ca10_func
		xor    %bh,%bh
		mov    _0cd158_data,%edi
		mov    $_03cd54_func,%edx
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    $0x000300,%ecx
		mov    $_0c7938_data,%edi
		call   _03c9c0_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_0cabc0_data,%edi
		mov    $0x000300,%ecx
		mov    _0c2a64_data,%esi
		mov    %edx,_0e46d8_data
		push   %edi

	_04f263_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04f27b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04f263_jump

	_04f27b_jump:
		pop    %edi
		mov    %edi,%eax
		mov    $_04eea4_func,%edx
		call   _01ed18_func
		mov    %edi,%eax
		mov    $_0e40bc_data,%esi
		call   _04ed40_func
		mov    $_0c7938_data,%edi
		call   _03ca10_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03c9c0_func
		mov    %bh,_095e69_data

	_04f2b9_jump:
		call   _04e89c_func

	_04f2be_jump:
		cmpb   $0x000000,_0cf443_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f2d0_func:
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,(%esp)

	_04f2d9_jump:
		call   _016ded_func
		call   _016ddd_func
		mov    $_0e3abc_data,%esi
		mov    $_0000ff_case,%ecx
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		call   _03b3e0_func
		call   *(%esp)
		test   %ax,%ax
		je     _04f2d9_jump
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_04f31c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0e46f2_data,%di
		mov    _0cca48_data,%ebp
		mov    $0x000140,%eax
		sub    %edi,%eax
		mov    %ax,(%esp)
		call   _01cbc8_func
		call   _03cd54_func
		mov    _0ccad8_data,%edx
		mov    _0e46f4_data,%eax
		add    $0x00fa00,%edx
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ecx
		mov    _0e46f6_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _0e46f2_data,%edx
		sar    $0x000010,%edx
		shl    $0x000006,%eax
		neg    %edx
		add    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0e46f2_data,%di
		mov    %ax,0x000004(%esp)
		jmp    _04f436_jump

	_04f39a_jump:
		mov    0x000004(%esp),%eax
		imul   _0e46fa_data,%ax
		add    $0x000064,%eax
		cwtl   
		imul   $0x000140,%eax,%esi
		mov    _0ccae4_data,%edx
		mov    _0cca54_data,%ebx
		add    %edx,%esi
		cmp    %ebx,%eax
		jle    _04f420_jump
		cmp    _0cca50_data,%eax
		jge    _04f420_jump
		movswl %di,%edx
		neg    %edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%ebx
		jmp    _04f402_jump

	_04f3de_jump:
		mov    _0e46fa_data,%ax
		imul   %ebx,%eax
		add    $0x0000a0,%eax
		movswl %ax,%edx
		cmp    _0cca4c_data,%edx
		jle    _04f400_jump
		cmp    %ebp,%edx
		jge    _04f400_jump
		mov    (%ecx),%al
		mov    %al,(%edx,%esi,1)

	_04f400_jump:
		inc    %ebx
		inc    %ecx

	_04f402_jump:
		movswl %di,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %bx,%edx
		cmp    %eax,%edx
		jl     _04f3de_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    %eax,%ecx
		jmp    _04f426_jump

	_04f420_jump:
		add    $0x000140,%ecx

	_04f426_jump:
		mov    0x000004(%esp),%esi
		inc    %esi
		mov    %ebp,_0cca48_data
		mov    %si,0x000004(%esp)

	_04f436_jump:
		mov    _0e46f2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    _0cca48_data,%ebp
		cmp    %eax,%edx
		jl     _04f39a_jump
		cmpb   $0x000000,_0e470b_data
		je     _04f480_jump
		mov    _0e46fa_data,%si
		dec    %esi
		mov    %si,_0e46fa_data
		cmp    $0x000001,%si
		sete   %bl
		xor    %bh,%bh
		jmp    _04f4c0_jump

	_04f480_jump:
		mov    _0e46fa_data,%dx
		mov    %di,_0e46f2_data
		cmp    $0x000010,%dx
		jne    _04f499_jump
		call   _03c9e8_func

	_04f499_jump:
		mov    _0e46fa_data,%bx
		mov    _0cca48_data,%ebp
		inc    %ebx
		mov    _0e46f2_data,%di
		mov    %bx,_0e46fa_data
		cmp    $0x000020,%bx
		sete   %al
		xor    %ah,%ah
		mov    %eax,%ebx

	_04f4c0_jump:
		mov    %ebx,%eax
		mov    %ebp,_0cca48_data
		mov    %di,_0e46f2_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f4dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    $0x000140,%eax
		mov    _0e46f2_data,%dx
		mov    _0e46f6_data,%ebx
		mov    _0ccae4_data,%ecx
		sar    $0x000010,%ebx
		sub    %edx,%eax
		mov    _0e46f4_data,%edx
		mov    %eax,(%esp)
		lea    0x000000(,%ebx,4),%eax
		sar    $0x000010,%edx
		add    %ebx,%eax
		add    %edx,%ecx
		shl    $0x000006,%eax
		lea    (%ecx,%eax,1),%ebx
		mov    _0ccad8_data,%ecx
		mov    $0x000011,%ebp
		add    $0x00fa00,%ecx
		xor    %esi,%esi
		add    %edx,%ecx
		mov    %esi,0x000004(%esp)
		jmp    _04f591_jump

	_04f53a_jump:
		xor    %esi,%esi
		jmp    _04f56f_jump

	_04f53e_jump:
		mov    (%ebx),%al
		cmp    (%ecx),%al
		je     _04f56c_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0e46f8_data,%eax
		mov    $0x000010,%edi
		sar    $0x000010,%eax
		sub    %eax,%edi
		imul   %edi,%edx
		movzbl (%ecx),%edi
		add    %edi,%edx
		mov    %ebp,%edi
		sub    %eax,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %al,(%ebx)

	_04f56c_jump:
		inc    %esi
		inc    %ebx
		inc    %ecx

	_04f56f_jump:
		xor    %edx,%edx
		mov    _0e46f0_data,%eax
		mov    %si,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _04f53e_jump
		mov    0x000004(%esp),%edi
		xor    %eax,%eax
		inc    %edi
		mov    (%esp),%ax
		mov    %edi,0x000004(%esp)
		add    %eax,%ebx

	_04f591_jump:
		add    %eax,%ecx
		xor    %eax,%eax
		mov    _0e46f2_data,%edx
		mov    0x000004(%esp),%ax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jl     _04f53a_jump
		mov    _0e46fa_data,%ax
		inc    %eax
		mov    %ax,_0e46fa_data
		cmp    $0x000010,%ax
		sete   %al
		xor    %ah,%ah
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f5c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000001,%ebx
		xor    %edx,%edx

	_04f5d4_jump:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    _0e3abc_data(%eax),%cl
		mov    _0e40bc_data(%eax),%ch
		cmp    %ch,%cl
		je     _04f623_jump
		movzbl %ch,%esi
		xor    %ecx,%ecx
		lea    0x000002(%esi),%edi
		mov    _0e3abc_data(%eax),%cl
		xor    %ebx,%ebx
		cmp    %edi,%ecx
		jle    _04f60b_jump
		mov    %cl,%ch
		sub    $0x000002,%ch
		mov    %ch,_0e3abc_data(%eax)
		jmp    _04f623_jump

	_04f60b_jump:
		sub    $0x000002,%esi
		cmp    %esi,%ecx
		jge    _04f617_jump
		add    $0x000002,%cl
		jmp    _04f61d_jump

	_04f617_jump:
		mov    _0e40bc_data(%eax),%cl

	_04f61d_jump:
		mov    %cl,_0e3abc_data(%eax)

	_04f623_jump:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    _0e40bd_data(%eax),%cl
		cmp    _0e3abd_data(%eax),%cl
		je     _04f674_jump
		xor    %ecx,%ecx
		mov    _0e40bd_data(%eax),%cl
		movzbl _0e3abd_data(%eax),%esi
		lea    0x000002(%ecx),%edi
		xor    %ebx,%ebx
		cmp    %edi,%esi
		jle    _04f658_jump
		subb   $0x000002,_0e3abd_data(%eax)
		jmp    _04f674_jump

	_04f658_jump:
		sub    $0x000002,%ecx
		cmp    %ecx,%esi
		jge    _04f668_jump
		addb   $0x000002,_0e3abd_data(%eax)
		jmp    _04f674_jump

	_04f668_jump:
		mov    _0e40bd_data(%eax),%cl
		mov    %cl,_0e3abd_data(%eax)

	_04f674_jump:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    _0e3abe_data(%eax),%cl
		cmp    _0e40be_data(%eax),%cl
		je     _04f6c5_jump
		xor    %ecx,%ecx
		mov    _0e40be_data(%eax),%cl
		movzbl _0e3abe_data(%eax),%esi
		lea    0x000002(%ecx),%edi
		xor    %ebx,%ebx
		cmp    %edi,%esi
		jle    _04f6a9_jump
		subb   $0x000002,_0e3abe_data(%eax)
		jmp    _04f6c5_jump

	_04f6a9_jump:
		sub    $0x000002,%ecx
		cmp    %ecx,%esi
		jge    _04f6b9_jump
		addb   $0x000002,_0e3abe_data(%eax)
		jmp    _04f6c5_jump

	_04f6b9_jump:
		mov    _0e40be_data(%eax),%cl
		mov    %cl,_0e3abe_data(%eax)

	_04f6c5_jump:
		inc    %edx
		cmp    $0x000100,%dx
		jl     _04f5d4_jump
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f6dc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %ecx,%esi
		mov    0x000014(%esp),%cl
		cmp    $0x000001,%cl
		jb     _04f6f6_jump
		jbe    _04f70c_jump
		cmp    $0x000002,%cl
		je     _04f717_jump
		jmp    _04f728_jump

	_04f6f6_jump:
		test   %cl,%cl
		jne    _04f728_jump
		movw   $0x000020,_0e46fa_data
		movb   $0x000001,_0e470b_data
		jmp    _04f728_jump

	_04f70c_jump:
		xor    %edi,%edi
		mov    %di,_0e46fa_data
		jmp    _04f728_jump

	_04f717_jump:
		movw   $0x000001,_0e46fa_data
		xor    %ch,%ch
		mov    %ch,_0e470b_data

	_04f728_jump:
		mov    %eax,%ecx
		xor    %ah,%ch
		mov    $0x000004,%edi
		and    $0x000003,%cl
		sub    %ecx,%edi
		add    %edi,%eax
		mov    %ax,_0e46f6_data
		mov    %ebx,%eax
		mov    %dx,_0e46f8_data
		xor    %bh,%ah
		mov    $0x000004,%edx
		and    $0x000003,%al
		sub    %eax,%edx
		mov    %edx,%eax
		add    %ebx,%eax
		add    $0x000002,%esi
		add    $0x000002,%eax
		mov    %si,_0e46f4_data
		mov    %ax,_0e46f2_data
		mov    $0x000140,%eax
		mov    _0e46f2_data,%si
		sub    %esi,%eax
		mov    %eax,(%esp)
		mov    0x000014(%esp),%al
		test   %al,%al
		jne    _04f909_jump
		cmpb   $0x000000,_095de5_data
		jne    _04f838_jump
		mov    $0x000001,%edx
		mov    _0cd154_data,%eax
		call   _0246bc_func
		testb  $0x000004,_0cf221_data
		je     _04f7f1_jump
		mov    _096782_data,%ecx
		mov    _09677a_data,%ebx
		mov    _096772_data,%edx
		mov    _09676a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05c124_func
		mov    _0cca50_data,%edx
		mov    _0cca54_data,%ecx
		mov    _0cca48_data,%ebx
		mov    _0cca4c_data,%eax
		call   _01614e_func

	_04f7f1_jump:
		call   _03ca10_func
		mov    _095e20_data,%eax
		sar    $0x000010,%eax
		mov    _096782_data(,%eax,2),%ecx
		mov    _09677a_data(,%eax,2),%ebx
		mov    _096772_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09676a_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05c124_func
		mov    _0ccae4_data,%edi
		call   _014bed_func
		jmp    _04f864_jump

	_04f838_jump:
		mov    $0x000001,%edx
		mov    _0cd158_data,%eax
		call   _0246bc_func
		call   _03ca10_func
		xor    %eax,%eax
		mov    _0cf43c_data,%al
		call   _03d90c_func
		xor    %eax,%eax
		mov    _095e24_data,%al
		call   _048cc8_func

	_04f864_jump:
		cmpw   $0x000001,_0cf282_data
		jne    _04f878_jump
		cmpw   $0x000009,_0cf270_data
		je     _04f8b4_jump

	_04f878_jump:
		cmpw   $0x000002,_0cf282_data
		jne    _04f88c_jump
		cmpw   $0x000004,_0cf270_data
		je     _04f8b4_jump

	_04f88c_jump:
		cmpw   $0x000004,_0cf282_data
		jne    _04f8a0_jump
		cmpw   $0x000009,_0cf270_data
		je     _04f8b4_jump

	_04f8a0_jump:
		cmpw   $0x000005,_0cf282_data
		jne    _04f8f0_jump
		cmpw   $0x000004,_0cf270_data
		jne    _04f8f0_jump

	_04f8b4_jump:
		xor    %edx,%edx
		mov    _0cf474_data,%dl
		mov    $_0c7938_data,%edi
		lea    0x000000(,%edx,4),%eax
		mov    $0x000300,%ecx
		sub    %edx,%eax
		mov    _0cd224_data,%esi
		shl    $0x000008,%eax
		add    $0x002d00,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_04f8f0_jump:
		call   _02450c_func
		mov    _0ccae4_data,%eax
		mov    %eax,_0cd154_data
		call   _03cd54_func
		jmp    _04fa3d_jump

	_04f909_jump:
		cmp    $0x000001,%al
		jne    _04fa3d_jump
		mov    $0x000003,%esi
		xor    %ecx,%ecx

	_04f918_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		lea    (%ebx,%ebx,2),%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0dde31_data(%ebx),%al
		mov    _0dde30_data(%ebx),%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0dde32_data(%ebx),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		and    $_0000ff_case,%eax
		add    $0x000080,%eax
		imul   %esi,%eax
		mov    _0dde30_data(%eax),%dl
		mov    %dl,_0e40bc_data(%ebx)
		mov    _0dde31_data(%eax),%dl
		mov    _0dde32_data(%eax),%al
		mov    %dl,_0e40bd_data(%ebx)
		inc    %ecx
		mov    %al,_0e40be_data(%ebx)
		cmp    $0x000100,%cx
		jb     _04f918_jump
		mov    $0x000300,%ecx
		mov    $_0dde30_data,%esi
		mov    $_0e3abc_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_04f5c8_func,%eax
		call   _04f2d0_func
		mov    _0e46f4_data,%ebx
		mov    _0ccae4_data,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		mov    _0e46f6_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		xor    %edi,%edi
		jmp    _04fa2a_jump

	_04f9cf_jump:
		xor    %ecx,%ecx
		jmp    _04fa11_jump

	_04f9d3_jump:
		mov    (%ebx),%al
		xor    %edx,%edx
		mov    %al,%dl
		lea    (%edx,%edx,2),%edx
		xor    %eax,%eax
		movzbl _0dde31_data(%edx),%esi
		mov    _0dde30_data(%edx),%al
		mov    _0dde32_data(%edx),%dl
		add    %esi,%eax
		and    $_0000ff_case,%edx
		add    %eax,%edx
		mov    $0x000003,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		inc    %ebx
		add    $0x000080,%eax
		inc    %ecx
		mov    %al,-0x000001(%ebx)

	_04fa11_jump:
		xor    %eax,%eax
		mov    _0e46f0_data,%edx
		mov    %cx,%ax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jl     _04f9d3_jump
		xor    %eax,%eax
		mov    (%esp),%ax
		inc    %edi

	_04fa2a_jump:
		add    %eax,%ebx
		xor    %edx,%edx
		mov    _0e46f2_data,%eax
		mov    %di,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _04f9cf_jump

	_04fa3d_jump:
		mov    _0ccad8_data,%eax
		add    $0x00fa00,%eax
		mov    %eax,_0cd154_data
		call   *_0e46d8_data
		mov    _0ccae4_data,%eax
		mov    0x000014(%esp),%bl
		mov    %eax,_0cd154_data
		cmp    $0x000001,%bl
		jne    _04fb08_jump
		mov    _0ccad8_data,%edx
		mov    _0e46f4_data,%eax
		add    $0x00fa00,%edx
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ebx
		mov    _0e46f6_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		xor    %edi,%edi
		add    %eax,%ebx
		mov    $0x000003,%ebp
		jmp    _04faf7_jump

	_04faa0_jump:
		xor    %ecx,%ecx
		jmp    _04fadd_jump

	_04faa4_jump:
		mov    (%ebx),%al
		xor    %edx,%edx
		mov    %al,%dl
		lea    (%edx,%edx,2),%edx
		xor    %eax,%eax
		mov    _0dde31_data(%edx),%al
		movzbl _0dde30_data(%edx),%esi
		mov    _0dde32_data(%edx),%dl
		add    %esi,%eax
		and    $_0000ff_case,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		inc    %ebx
		add    $0x000080,%eax
		inc    %ecx
		mov    %al,-0x000001(%ebx)

	_04fadd_jump:
		xor    %edx,%edx
		mov    _0e46f0_data,%eax
		mov    %cx,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _04faa4_jump
		xor    %eax,%eax
		mov    (%esp),%ax
		inc    %edi
		add    %eax,%ebx

	_04faf7_jump:
		xor    %edx,%edx
		mov    _0e46f2_data,%eax
		mov    %di,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _04faa0_jump

	_04fb08_jump:
		mov    0x000014(%esp),%bh
		test   %bh,%bh
		jne    _04fbcb_jump
		xor    %edx,%edx
		mov    _0cf474_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7938_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e40bc_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cf474_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7938_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0dde30_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03c9c0_func
		mov    $_04f31c_func,%eax
		xor    %edx,%edx
		call   _03ca88_func
		mov    _0cf474_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7938_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e40bc_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_04fbcb_jump:
		cmp    $0x000001,%bh
		jne    _04fc81_jump
		mov    $_04f4dc_func,%eax
		mov    $0x000003,%esi
		call   _03ca88_func
		xor    %ecx,%ecx

	_04fbe5_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		lea    (%ebx,%ebx,2),%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0dde31_data(%ebx),%al
		mov    _0dde30_data(%ebx),%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0dde32_data(%ebx),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		and    $_0000ff_case,%eax
		add    $0x000080,%eax
		imul   %esi,%eax
		mov    _0dde30_data(%eax),%dl
		mov    %dl,_0e3abc_data(%ebx)
		mov    _0dde31_data(%eax),%dl
		mov    _0dde32_data(%eax),%al
		mov    %dl,_0e3abd_data(%ebx)
		inc    %ecx
		mov    %al,_0e3abe_data(%ebx)
		cmp    $0x000100,%cx
		jb     _04fbe5_jump
		mov    $0x000300,%ecx
		mov    $_0dde30_data,%esi
		mov    $_0e40bc_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   *_0e46d8_data
		mov    $_04f5c8_func,%eax
		call   _04f2d0_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_04fc81_jump:
		cmp    $0x000002,%bh
		jne    _04fe0e_jump
		xor    %edx,%edx
		mov    _0cf474_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7938_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e40bc_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cf474_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7938_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0dde30_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_04f31c_func,%eax
		call   _03ca88_func
		cmpb   $0x000001,_095de5_data
		jne    _04fd1f_jump
		xor    %eax,%eax
		mov    _0cf43c_data,%al
		call   _03d7e0_func
		xor    %eax,%eax
		mov    _095e24_data,%al
		call   _048cc8_func

	_04fd1f_jump:
		cmpw   $0x000001,_0cf282_data
		jne    _04fd33_jump
		cmpw   $0x000009,_0cf270_data
		je     _04fd6f_jump

	_04fd33_jump:
		cmpw   $0x000002,_0cf282_data
		jne    _04fd47_jump
		cmpw   $0x000004,_0cf270_data
		je     _04fd6f_jump

	_04fd47_jump:
		cmpw   $0x000004,_0cf282_data
		jne    _04fd5b_jump
		cmpw   $0x000009,_0cf270_data
		je     _04fd6f_jump

	_04fd5b_jump:
		cmpw   $0x000005,_0cf282_data
		jne    _04fdac_jump
		cmpw   $0x000004,_0cf270_data
		jne    _04fdac_jump

	_04fd6f_jump:
		mov    _0cf136_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0cd224_data,%esi
		sub    %edx,%eax
		xor    %edx,%edx
		shl    $0x000008,%eax
		mov    _0cf474_data,%dl
		add    %eax,%esi
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7938_data,%edi
		shl    $0x000008,%eax
		mov    $0x000300,%ecx
		jmp    _04fdcf_jump

	_04fdac_jump:
		xor    %edx,%edx
		mov    _0cf474_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7938_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e40bc_data,%esi

	_04fdcf_jump:
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,_0cf474_data
		je     _04fe09_jump
		mov    $0x000300,%ecx
		mov    $_0e43bc_data,%esi
		mov    $_0c7938_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_04fe09_jump:
		call   _03c9c0_func

	_04fe0e_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_04fe18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    $0x000140,%eax
		mov    _0e46f2_data,%dx
		mov    _0e46f6_data,%esi
		mov    _0ccae4_data,%edi
		sar    $0x000010,%esi
		sub    %edx,%eax
		mov    _0e46f4_data,%edx
		mov    %eax,(%esp)
		lea    0x000000(,%esi,4),%eax
		sar    $0x000010,%edx
		add    %eax,%esi
		add    %edx,%edi
		shl    $0x000006,%esi
		lea    (%edi,%esi,1),%eax
		mov    _0ccad8_data,%edi
		add    $0x00fa00,%edi
		xor    %ebx,%ebx
		add    %edi,%edx
		mov    %ebx,0x000004(%esp)
		jmp    _04feb9_jump

	_04fe70_jump:
		xor    %ecx,%ecx
		jmp    _04fe96_jump

	_04fe74_jump:
		xor    %edi,%edi
		mov    _0e46f8_data,%esi
		mov    %bx,%di
		sar    $0x000010,%esi
		cmp    %esi,%edi
		jne    _04fe92_jump
		mov    (%eax),%bl
		mov    (%edx),%bh
		cmp    %bh,%bl
		je     _04fe90_jump
		mov    %bh,(%eax)

	_04fe90_jump:
		xor    %ebx,%ebx

	_04fe92_jump:
		inc    %ecx
		inc    %eax
		inc    %edx
		inc    %ebx

	_04fe96_jump:
		xor    %esi,%esi
		mov    _0e46f0_data,%edi
		mov    %cx,%si
		sar    $0x000010,%edi
		cmp    %edi,%esi
		jl     _04fe74_jump
		mov    0x000004(%esp),%edi
		xor    %esi,%esi
		inc    %edi
		mov    (%esp),%si
		mov    %edi,0x000004(%esp)
		add    %esi,%eax

	_04feb9_jump:
		add    %esi,%edx
		xor    %esi,%esi
		mov    _0e46f2_data,%edi
		mov    0x000004(%esp),%si
		sar    $0x000010,%edi
		cmp    %edi,%esi
		jl     _04fe70_jump
		mov    _0e46fa_data,%ax
		dec    %ax
		mov    %ax,_0e46fa_data
		sete   %al
		xor    %ah,%ah
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04feec_func:
		mov    %ax,_0e46f6_data
		mov    %dx,_0e46f8_data
		mov    %bx,_0e46f2_data
		mov    %cx,_0e46f4_data
		mov    _0ccad8_data,%eax
		mov    $0x000010,%edx
		add    $0x00fa00,%eax
		mov    %dx,_0e46fa_data
		mov    %eax,_0cd154_data
		call   *_0e46d8_data
		mov    _0ccae4_data,%eax
		mov    %eax,_0cd154_data
		mov    $_04fe18_func,%eax
		jmp    _03ca88_func



_04ff40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xffffffff,%ecx
		mov    _0cc7a0_data,%edx
		mov    _0cc7a4_data,%bx
		xor    %eax,%eax
		mov    %ecx,%esi
		test   %bx,%bx
		jle    _04ff83_jump

	_04ff60_jump:
		mov    0x000060(%edx),%di
		cmp    $0x0000cb,%di
		jne    _04ff6f_jump
		mov    %eax,%ecx
		jmp    _04ff77_jump

	_04ff6f_jump:
		cmp    $0x000070,%di
		jne    _04ff77_jump
		mov    %eax,%esi

	_04ff77_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _04ff60_jump

	_04ff83_jump:
		mov    %si,_0e479c_data
		mov    %cx,_0e47a0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ff98_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,_0cf45a_data
		jne    _05005b_jump
		mov    _0cf260_data,%ecx
		mov    _0cf2a2_data,%eax
		mov    _0cf25e_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _04ffdf_jump
		cmp    %ecx,%eax
		jg     _04ffdf_jump
		mov    $0x000001,%eax
		jmp    _04ffe1_jump

	_04ffdf_jump:
		xor    %eax,%eax

	_04ffe1_jump:
		test   %eax,%eax
		je     _050024_jump
		mov    _0cf262_data,%ecx
		mov    _0cf2a4_data,%eax
		mov    _0cf25c_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0cf2ae_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _05001a_jump
		cmp    %ecx,%eax
		jg     _05001a_jump
		mov    $0x000001,%eax
		jmp    _05001c_jump

	_05001a_jump:
		xor    %eax,%eax

	_05001c_jump:
		test   %eax,%eax
		je     _050024_jump
		mov    $0x000001,%al
		jmp    _050026_jump

	_050024_jump:
		xor    %al,%al

	_050026_jump:
		mov    %al,_0cf45a_data
		test   %al,%al
		je     _05008b_jump
		mov    _0cf2ae_data,%ax
		mov    %ax,_0cf268_data
		mov    %ax,_0cf25a_data
		mov    _0cf25e_data,%ax
		mov    %ax,_0cf25c_data
		mov    _0cf264_data,%ax
		mov    %ax,_0cf266_data
		jmp    _05008b_jump

	_05005b_jump:
		mov    0x00007f(%edx),%bl
		test   %bl,%bl
		je     _050072_jump
		cmpb   $0x000000,_0cf3ef_data
		jne    _050072_jump
		mov    %bl,%cl
		dec    %cl
		mov    %cl,0x00007f(%edx)

	_050072_jump:
		mov    _0cf25c_data,%ax
		mov    _0cf2b0_data,%bx
		cmp    %bx,%ax
		jge    _05008b_jump
		mov    %bx,_0cf25c_data

	_05008b_jump:
		cmpb   $0x000000,_0cf45a_data
		je     _0500a0_jump
		cmpb   $0x000000,0x00007f(%edx)
		jne    _0500a0_jump
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0500a0_jump:
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0500a8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		test   %dl,%dl
		jbe    _0500ba_jump
		cmp    $0x000001,%dl
		je     _0500e5_jump
		jmp    _050112_jump

	_0500ba_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0cf258_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dh
		mov    %eax,0x000028(%ebx)
		or     $0x000008,%dh
		mov    $0xffffffff,%eax
		mov    %dh,0x000081(%ebx)
		jmp    _05017b_jump

	_0500e5_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0cf266_data,%eax
		sar    $0x000010,%eax
		add    $0x000130,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dl
		mov    %eax,0x000028(%ebx)
		and    $0x0000f7,%dl
		mov    $0x000001,%eax
		mov    %dl,0x000081(%ebx)
		jmp    _05017b_jump

	_050112_jump:
		mov    _0cf258_data,%esi
		mov    _0cf266_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		lea    0x000140(%esi,%edi,1),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x000068(%ebx),%cl
		add    %ecx,%ebp
		sub    %eax,%ebp
		mov    %ebp,%eax
		test   %ax,%ax
		jle    _050167_jump
		add    $0x000130,%edi
		sub    %ecx,%edi
		mov    0x000081(%ebx),%ch
		mov    %edi,0x000028(%ebx)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%ebx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_050167_jump:
		sub    %ecx,%esi
		mov    0x000081(%ebx),%cl
		mov    %esi,0x000028(%ebx)
		or     $0x000008,%cl
		mov    %cl,0x000081(%ebx)

	_05017b_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_050184_func:
		push   %edx
		mov    _0e47a4_data,%eax
		sar    $0x000010,%eax
		call   _05d270_func
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000009,%edx
		sbb    %edx,%eax
		sar    $0x000009,%eax
		mov    _0e47a0_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    %ax,_0cf252_data
		mov    _0e47a4_data,%eax
		sar    $0x000010,%eax
		call   _05d230_func
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000009,%edx
		sbb    %edx,%eax
		sar    $0x000009,%eax
		mov    _0e47a2_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    _0e47a6_data,%dx
		add    $0x000004,%edx
		mov    %ax,_0cf23c_data
		mov    %dx,_0e47a6_data
		cmp    $0x000200,%dx
		jle    _05021d_jump
		movw   $0x008300,_0e47a6_data

	_05021d_jump:
		pop    %edx
		ret    

_050220_switch:
		.long   _05027f_case
		.long   _0502c8_case
		.long   _05028d_case
		.long   _0502c8_case
		.long   _05028d_case
		.long   _0502c8_case
		.long   _0502b0_case




_05023c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,(%esp)

	_05024b_jump:
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%di
		xor    %eax,%eax
		test   %di,%di
		jle    _0503a8_jump
		mov    0x00006c(%esi),%dl
		dec    %dl

	_050268_jump:
		xor    %bl,%bl
		mov    %bl,0x000004(%esp)
		cmp    $0x000006,%dl
		ja     _0502c8_case
		xor    %ebx,%ebx
		mov    %dl,%bl
		jmp    *%cs:_050220_switch(,%ebx,4)

	_05027f_case:
		xor    %bh,%bh
		mov    $0x000001,%dh
		mov    %bh,0x000008(%esp)
		mov    %dh,0x00000c(%esp)
		jmp    _0502c8_case

	_05028d_case:
		testb  $0x000008,0x000081(%esi)
		je     _0502a4_jump
		mov    $0x000004,%dh
		mov    $0x000005,%bl
		mov    %dh,0x000008(%esp)
		mov    %bl,0x00000c(%esp)
		jmp    _0502c8_case

	_0502a4_jump:
		movb   $0x000002,0x000008(%esp)
		movb   $0x000003,0x00000c(%esp)
		jmp    _0502c8_case

	_0502b0_case:
		testb  $0x000008,0x000081(%esi)
		je     _0502be_jump
		movb   $0x000001,0x000004(%esp)

	_0502be_jump:
		movb   $0x000006,0x000008(%esp)
		movb   $0x000007,0x00000c(%esp)

	_0502c8_case:
		cmpw   $0x0000c2,0x000060(%ecx)
		jne    _050398_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _050398_jump
		mov    0x000008(%esp),%bl
		mov    0x00006c(%ecx),%dh
		cmp    %bl,%dh
		je     _0502f3_jump
		cmp    0x00000c(%esp),%dh
		jne    _050398_jump

	_0502f3_jump:
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f3d4_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    (%esp),%bl
		mov    %eax,0x00002c(%ecx)
		test   %bl,%bl
		je     _05034a_jump
		mov    0x00000c(%esp),%al
		jmp    _05034e_jump

	_05034a_jump:
		mov    0x000008(%esp),%al

	_05034e_jump:
		xor    %ebx,%ebx
		mov    $0x000001,%edx
		mov    %al,%bl
		mov    %ecx,%eax
		call   _01d444_func
		mov    %ecx,%eax
		mov    0x000004(%esp),%bh
		call   _01dc5c_func
		mov    $0x000001,%eax
		test   %bh,%bh
		je     _05037f_jump
		cmpb   $0x000000,(%esp)
		sete   %dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		jmp    _050389_jump

	_05037f_jump:
		mov    (%esp),%dh
		xor    %ebx,%ebx
		test   %dh,%dh
		setne  %bl

	_050389_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    %eax,%ebx
		mov    %ecx,%eax
		call   _060460_func
		jmp    _0503a8_jump

	_050398_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %di,%ax
		jl     _050268_jump

	_0503a8_jump:
		mov    (%esp),%dl
		add    $0x000002,%dl
		mov    %dl,(%esp)
		cmp    $0x000002,%dl
		jbe    _05024b_jump
		mov    %esi,%eax
		call   _07abbc_func
		mov    0x000032(%esi),%edx
		mov    $0x0000dc,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		mov    0x000081(%esi),%bh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0503f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		mov    $0xffffffff,%edi

	_0503fc_jump:
		xor    %eax,%eax

	_0503fe_jump:
		movswl %si,%edx
		movswl %ax,%ebx
		shl    $0x000004,%edx
		add    %ebx,%ebx
		add    %edx,%ebx
		mov    _0e470e_data(%ebx),%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _050431_jump
		imul   $0x000084,%edx,%edx
		mov    _0cc7a0_data,%ecx
		movb   $0x000046,0x00007f(%ecx,%edx,1)
		mov    %di,_0e4710_data(%ebx)

	_050431_jump:
		inc    %eax
		cmp    $0x000008,%ax
		jl     _0503fe_jump
		inc    %esi
		cmp    $0x000008,%si
		jl     _0503fc_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_050448_switch:
		.long   _050673_case
		.long   _050682_case
		.long   _05069a_case
		.long   _0506c8_case
		.long   _050673_case
		.long   _050682_case
		.long   _0506b2_case
		.long   _0506c8_case
		.long   _0506df_case




_05046c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		cmpb   $0x0000fe,_0e47ac_data
		jne    _050599_jump
		mov    _0e479c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		jne    _050599_jump
		mov    _0ce06c_data,%dx
		movzbw 0x000068(%edi),%si
		mov    0x000028(%edi),%bx
		xor    %eax,%eax
		add    %ebx,%esi
		mov    _0ce0ac_data,%al
		movswl %si,%ebx
		add    %edx,%eax
		lea    0x000008(%ebx),%ecx
		cwtl   
		sub    $0x000008,%ebx
		cmp    %ebx,%eax
		jl     _0504cb_jump
		cmp    %ecx,%eax
		jg     _0504cb_jump
		mov    $0x000001,%eax
		jmp    _0504cd_jump

	_0504cb_jump:
		xor    %eax,%eax

	_0504cd_jump:
		test   %eax,%eax
		je     _050844_jump
		mov    _0cc7a0_data,%ebx
		mov    _0cc7a4_data,%ax
		xor    %edx,%edx
		test   %ax,%ax
		jle    _050580_jump

	_0504ec_jump:
		cmpw   $0x0000c1,0x000060(%ebx)
		jne    _050570_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _050570_jump
		andb   $0x0000f7,0x000081(%ebx)
		xor    %edx,%edx
		movswl %si,%eax
		mov    0x000068(%ebx),%dl
		movb   $0x000000,0x00006c(%ebx)
		sub    %edx,%eax
		mov    %eax,0x000028(%ebx)
		xor    %eax,%eax
		mov    $0x000012,%ecx
		mov    0x000069(%edi),%al
		mov    0x00002c(%edi),%edi
		mov    _0cca54_data,%ebp
		add    %eax,%edi
		xor    %eax,%eax
		mov    _0cca50_data,%edx
		mov    0x000069(%ebx),%al
		sub    %ebp,%edx
		sub    %eax,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		movl   $0x000001,0x000024(%ebx)
		mov    %eax,%edx
		mov    0x000081(%ebx),%cl
		shl    $0x000002,%eax
		or     $0x000004,%cl
		sub    %edx,%eax
		mov    %cl,0x000081(%ebx)
		sub    %eax,%edi
		mov    %ebx,%eax
		mov    %edi,0x00002c(%ebx)
		call   _01f3d4_func
		movb   $0x000032,0x00007f(%ebx)
		jmp    _050580_jump

	_050570_jump:
		inc    %edx
		add    $0x000084,%ebx
		cmp    %ax,%dx
		jl     _0504ec_jump

	_050580_jump:
		mov    $_0000ff_case,%ch
		mov    %si,_0e479e_data
		mov    %ch,_0e47ac_data
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050599_jump:
		xor    %dl,%dl
		mov    %dl,0x000010(%esp)

	_05059f_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		cmpb   $0x000007,_0e4790_data(%edx)
		jne    _0505cc_jump
		mov    $_0000ff_case,%al
		mov    $0xffff8300,%ebx
		mov    %al,_0e47ac_data
		mov    %bx,_0e479e_data
		mov    %al,_0e4790_data(%edx)
		jmp    _050831_jump

	_0505cc_jump:
		xor    %eax,%eax
		mov    0x000028(%edi),%dx
		mov    0x000068(%edi),%al
		add    %eax,%edx
		mov    0x000010(%esp),%ah
		mov    %dx,0x000008(%esp)
		test   %ah,%ah
		jne    _05061f_jump
		mov    _0cca48_data,%edx
		sub    _0cca4c_data,%edx
		mov    $0x000009,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000006(%esp),%ebx
		mov    %eax,%edx
		mov    _0e479c_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %eax,%eax
		jge    _050617_jump
		neg    %eax

	_050617_jump:
		cmp    %edx,%eax
		jl     _050844_jump

	_05061f_jump:
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0e47ac_data,%al
		mov    0x000010(%esp),%bl
		lea    0x000000(,%eax,4),%edx
		mov    _0e4790_data(%ebx),%cl
		lea    0x000000(,%ebx,4),%eax
		mov    _096d44_data(%edx),%edx
		inc    %cl
		add    %edx,%eax
		xor    %edx,%edx
		mov    %cl,_0e4790_data(%ebx)
		mov    %cl,%dl
		mov    (%eax),%eax
		add    %edx,%edx
		mov    (%edx,%eax,1),%ax
		cmp    $0x000008,%ax
		ja     _0506f6_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_050448_switch(,%eax,4)

	_050673_case:
		xor    %cl,%cl
		mov    %cl,0x000014(%esp)
		mov    %cl,0x00000c(%esp)
		jmp    _0506f6_jump

	_050682_case:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		mov    $0x000002,%bh
		shr    $0x000007,%al
		mov    %bh,0x000014(%esp)
		mov    %al,0x00000c(%esp)
		jmp    _0506f6_jump

	_05069a_case:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		mov    $0x000006,%bl
		shr    $0x000007,%al
		mov    %bl,0x000014(%esp)
		mov    %al,0x00000c(%esp)
		jmp    _0506f6_jump

	_0506b2_case:
		mov    $0x000006,%ch
		mov    0x000081(%edi),%ah
		mov    %ch,0x000014(%esp)
		test   $0x000008,%ah
		sete   0x00000c(%esp)
		jmp    _0506f6_jump

	_0506c8_case:
		movb   $0x000004,0x000014(%esp)
		mov    0x000081(%edi),%dh
		test   $0x000008,%dh
		sete   %al
		mov    %al,0x00000c(%esp)
		jmp    _0506f6_jump

	_0506df_case:
		mov    $0xffffffff,%esi
		xor    %eax,%eax
		shl    $0x000004,%ebx
		mov    %ax,0x000008(%esp)
		mov    %si,_0e4710_data(%edx,%ebx,1)

	_0506f6_jump:
		cmpw   $0x000000,0x000008(%esp)
		je     _050820_jump
		mov    _0cc7a0_data,%ebx
		mov    _0cc7a4_data,%si
		xor    %ecx,%ecx
		test   %si,%si
		jle    _050800_jump

	_05071a_jump:
		cmpw   $0x0000c1,0x000060(%ebx)
		jne    _0507f0_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _0507f0_jump
		mov    0x000081(%ebx),%dl
		mov    0x000014(%esp),%al
		and    $0x0000f7,%dl
		mov    %al,0x00006c(%ebx)
		mov    0x00000c(%esp),%al
		mov    %dl,0x000081(%ebx)
		and    $0x000001,%al
		mov    %dl,%dh
		shl    $0x000003,%al
		movzbl 0x000010(%esp),%ebp
		or     %al,%dh
		xor    %eax,%eax
		mov    %dh,0x000081(%ebx)
		mov    %ebp,%edx
		mov    _0e4790_data(%ebp),%al
		shl    $0x000004,%edx
		add    %eax,%eax
		add    %edx,%eax
		mov    %cx,_0e4710_data(%eax)
		xor    %eax,%eax
		mov    0x000068(%ebx),%al
		mov    %eax,0x000004(%esp)
		mov    0x000006(%esp),%eax
		mov    0x000004(%esp),%edx
		sar    $0x000010,%eax
		movb   $0x000000,0x00006b(%ebx)
		sub    %edx,%eax
		mov    %eax,0x000028(%ebx)
		xor    %eax,%eax
		mov    0x00002c(%edi),%edx
		mov    0x000069(%edi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%ebx),%dl
		sub    %edx,%eax
		mov    _0cca50_data,%edx
		mov    %eax,0x000004(%esp)
		sub    _0cca54_data,%edx
		movl   $0x000012,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		sub    $0x000006,%ebp
		imul   %ebp,%eax
		mov    0x000004(%esp),%edx
		add    %eax,%edx
		mov    0x000081(%ebx),%al
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%al
		mov    %al,0x000081(%ebx)
		mov    %ebx,%eax
		mov    %edx,0x00002c(%ebx)
		call   _01f3d4_func
		jmp    _050800_jump

	_0507f0_jump:
		inc    %ecx
		add    $0x000084,%ebx
		cmp    %si,%cx
		jl     _05071a_jump

	_050800_jump:
		cmp    %si,%cx
		jl     _050820_jump
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		xor    %eax,%eax
		mov    _0e4790_data(%edx),%al
		shl    $0x000004,%edx
		movw   $0x00ffff,_0e4710_data(%edx,%eax,2)

	_050820_jump:
		xor    %eax,%eax
		mov    0x000028(%edi),%dx
		mov    0x000068(%edi),%al
		add    %edx,%eax
		mov    %ax,_0e479e_data

	_050831_jump:
		mov    0x000010(%esp),%ah
		inc    %ah
		mov    %ah,0x000010(%esp)
		cmp    $0x000008,%ah
		jb     _05059f_jump

	_050844_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050850_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		movzbl %dl,%esi
		mov    %esi,%ebx
		xor    %edx,%edx
		call   _01d444_func
		mov    0x00000c(%ecx),%eax
		lea    0x000000(,%esi,8),%edx
		movb   $0x000000,0x00006b(%ecx)
		mov    (%eax),%esi
		mov    0x000002(%edx,%esi,1),%dl
		mov    %dl,0x00006a(%ecx)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_05087c_func:
		test   %dl,%dl
		je     _050888_jump
		movw   $0x0000d5,0x000060(%eax)
		jmp    _05088e_jump

	_050888_jump:
		movw   $0x000062,0x000060(%eax)

	_05088e_jump:
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		mov    _0933a6_data(,%edx,2),%dx
		mov    %dx,0x00005c(%eax)
		ret    

_0508a4_switch:
		.long   _050a2f_case
		.long   _050a35_case
		.long   _050a46_case
		.long   _0509e5_case
		.long   _0509e5_case
		.long   _050c9d_case
		.long   _0509e5_case
		.long   _050d19_case
		.long   _050de6_case
		.long   _0509e5_case
		.long   _0509e5_case
		.long   _0509e5_case
		.long   _050e5d_case
		.long   _050f55_case
		.long   _050fa1_case
		.long   _05105d_case
		.long   _0510a4_case
		.long   _0509e5_case
		.long   _0511b1_case
		.long   _051377_case
		.long   _0509e5_case
		.long   _0513a9_case
		.long   _05144c_case
		.long   _051518_case
		.long   _051685_case
		.long   _051511_case
		.long   _05117f_case
		.long   _05174f_case
		.long   _0517d4_case
		.long   _05196a_case
		.long   _0514ed_case
		.long   _051708_case
		.long   _0512b1_case
		.long   _0512b1_case
		.long   _0511f3_case
		.long   _05123b_case
		.long   _050fe2_case
		.long   _0516be_case
		.long   _050ed5_case
		.long   _0513db_case
		.long   _050ba9_case
		.long   _050cc1_case
		.long   _050ac6_case
		.long   _0512b1_case
		.long   _050b01_case
		.long   _051518_case
		.long   _050a7b_case

_050960_switch:
		.long   _050b1b_case
		.long   _050b1b_case
		.long   _050b1b_case
		.long   _050b1b_case
		.long   _050b1b_case
		.long   _050b77_case

_050978_switch:
		.long   _051264_case
		.long   _05127c_case
		.long   _051264_case
		.long   _051251_case
		.long   _051264_case




_05098c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    _0e479e_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cc7a0_data,%edi
		add    %edx,%eax
		mov    _0e479a_data,%edx
		shl    $0x000002,%eax
		sar    $0x000010,%edx
		lea    (%edi,%eax,1),%ebp
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edi
		mov    _0e47a4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		jne    _0519c0_jump
		mov    %esi,%eax
		add    $0x000081,%eax
		mov    %eax,(%esp)

	_0509e5_case:
		cmpb   $0x000000,_0cf45e_data
		je     _0519c0_jump
		xor    %eax,%eax
		mov    _0cf460_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cf461_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096e14_data(%edx),%edx
		mov    %al,_0cf461_data
		mov    (%edx,%ebx,1),%al
		mov    %al,0x000004(%esp)
		cmp    $0x00002e,%al
		ja     _0509e5_case
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		jmp    *%cs:_0508a4_switch(,%eax,4)

	_050a2f_case:
		incb   _0cf460_data

	_050a35_case:
		xor    %ch,%ch
		mov    $0x000001,%al
		mov    %ch,_0cf461_data
		mov    %al,_0cf45e_data
		jmp    _0509e5_case

	_050a46_case:
		mov    _0cf45b_data,%al
		mov    %al,_0cf460_data
		mov    _0cf459_data,%al
		mov    %al,_0cf461_data
		cmp    $_0000ff_case,%al
		jne    _050a68_jump
		mov    %al,%dh
		inc    %dh
		mov    %dh,_0cf461_data

	_050a68_jump:
		movb   $0x000001,_0cf45e_data
		movb   $_0000ff_case,_0cf45b_data
		jmp    _0509e5_case

	_050a7b_case:
		mov    $0xffff8300,%edx
		mov    $0x000007,%ebx
		mov    $_0ce044_data,%eax
		mov    %dx,_0cf256_data
		mov    $0x000003,%edx
		call   _01d444_func
		mov    $0x000001,%dh
		mov    $_0ce044_data,%eax
		mov    %dh,_0cf465_data
		mov    $0x000001,%edx
		xor    %bl,%bl
		call   _01d2f4_func
		sub    $0x000003,%eax
		mov    %bl,_0cf45e_data
		mov    %ax,0x000048(%esi)
		jmp    _0509e5_case

	_050ac6_case:
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    _0ce06c_data,%ax
		xor    %edx,%edx
		mov    %ax,_0cf256_data
		mov    %esi,%eax
		call   _060460_func
		mov    $0x000001,%dh
		movw   $0x000000,0x000048(%esi)
		mov    %dh,_0cf45e_data
		jmp    _0509e5_case

	_050b01_case:
		mov    0x00006c(%edi),%al
		sub    $0x000025,%al
		cmp    $0x000005,%al
		ja     _050b9d_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_050960_switch(,%eax,4)

	_050b1b_case:
		mov    $0x000010,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x00002b,%edx
		mov    %ebp,%eax
		call   _050850_func
		mov    0x00006c(%edi),%al
		xor    %edx,%edx
		inc    %al
		mov    %al,%dl
		mov    %edi,%eax
		mov    $0x000001,%ebx
		call   _01d434_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%edi)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%edi)
		xor    %ah,%ah
		movb   $0x000000,0x00006b(%edi)
		mov    %ah,_0cf45e_data
		movb   $_0000ff_case,_0cf45f_data
		jmp    _0509e5_case

	_050b77_case:
		mov    $0x000006,%cl
		mov    0x000081(%ebp),%bh
		mov    $0x000001,%al
		and    $0x0000fb,%bh
		mov    %cl,_0cf460_data
		mov    %al,_0cf45e_data
		xor    %ch,%ch
		mov    %bh,0x000081(%ebp)
		mov    %ch,_0cf461_data

	_050b9d_jump:
		movb   $_0000ff_case,_0cf45f_data
		jmp    _0509e5_case

	_050ba9_case:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    0x00002c(%esi),%ax
		mov    %ax,_0cf23c_data
		mov    _0ce0d0_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		je     _050c82_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		mov    0x00000c(%esi),%eax
		mov    (%eax),%eax
		mov    0x000046(%esi),%edx
		mov    0x00000d(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %ax,_0cf252_data
		mov    _0ce0d0_data,%eax
		mov    0x000040(%eax),%cx
		test   %cx,%cx
		jge    _050c2a_jump
		mov    _0cf252_data,%cx
		mov    0x000028(%esi),%ax
		add    %eax,%ecx
		mov    %cx,_0cf252_data
		jmp    _050c3f_jump

	_050c2a_jump:
		jle    _050c3f_jump
		mov    _0cf252_data,%bx
		mov    0x000028(%esi),%ax
		sub    %ebx,%eax
		mov    %ax,_0cf252_data

	_050c3f_jump:
		mov    $_0000ff_case,%cl
		mov    $0x000001,%al
		mov    $0x000001,%edx
		mov    %cl,_0cf455_data
		mov    %cl,_0cf456_data
		mov    %al,_0cf45c_data
		mov    $_0000ff_case,%ecx
		mov    %esi,%eax
		mov    %ecx,%ebx
		call   _018670_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		xor    %ah,%ah
		mov    %ah,_0cf45e_data
		jmp    _0509e5_case

	_050c82_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		xor    %ah,%ah
		mov    %ah,_0cf45e_data
		jmp    _0509e5_case

	_050c9d_case:
		mov    %esi,%eax
		call   _079d94_func
		movw   $0x000001,_0cf272_data
		orb    $0x000020,_0cf228_data
		xor    %ah,%ah
		mov    %ah,_0cf45e_data
		jmp    _0509e5_case

	_050cc1_case:
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		call   _01dbe4_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _050d0d_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		xor    %bh,%bh
		mov    %bh,_0cf45e_data
		jmp    _0509e5_case

	_050d0d_jump:
		movb   $0x000001,_0cf45e_data
		jmp    _0509e5_case

	_050d19_case:
		mov    $0x000001,%edx
		xor    %ah,%ah
		mov    $0x00002c,%ebx
		mov    %ah,_0e47aa_data
		mov    %ah,_0e47ab_data
		mov    %esi,%eax
		movb   $0x000003,0x00007e(%esi)
		call   _05087c_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0500a8_func
		mov    0x000081(%esi),%dh
		mov    0x000028(%esi),%eax
		and    $0x0000f7,%dh
		sub    $0x000090,%eax
		mov    %dh,0x000081(%esi)
		mov    %eax,0x000028(%esi)
		mov    _0cf210_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%dl
		mov    $_0000ff_case,%ecx
		sub    %edx,%eax
		mov    $0x000001,%bl
		sub    $0x000020,%eax
		mov    %bl,_0cf45c_data
		mov    %eax,0x00002c(%esi)
		xor    %eax,%eax
		mov    _0cf25a_data,%dx
		mov    0x000068(%esi),%al
		mov    $_0000ff_case,%bh
		sub    %eax,%edx
		mov    %bh,_0cf455_data
		mov    %edx,%eax
		mov    %bh,_0cf456_data
		add    $0x000032,%eax
		mov    %ecx,%ebx
		mov    %ax,_0cf252_data
		mov    0x00002c(%esi),%ax
		mov    $0x000001,%edx
		mov    %ax,_0cf23c_data
		mov    %esi,%eax
		call   _018670_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _060460_func
		mov    %ch,_0cf45e_data
		jmp    _0509e5_case

	_050de6_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000004,%ecx
		call   _05087c_func
		mov    $0x000001,%edx
		mov    0x000028(%esi),%ax
		mov    %cx,_0e47a6_data
		mov    %ax,_0e47a2_data
		mov    0x00002c(%esi),%ax
		mov    $_0000ff_case,%ecx
		sub    $0x00003c,%eax
		mov    %ecx,%ebx
		mov    %ax,_0e47a4_data
		call   _050184_func
		mov    %esi,%eax
		call   _018670_func
		mov    $0x000001,%bh
		mov    $_0000ff_case,%cl
		mov    %esi,%eax
		mov    %bh,_0cf45c_data
		mov    $0x000001,%ebx
		mov    %cl,_0cf455_data
		mov    %ebx,%edx
		mov    %cl,_0cf456_data
		call   _060460_func
		xor    %al,%al
		mov    %al,_0cf45e_data
		jmp    _0509e5_case

	_050e5d_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _05087c_func
		mov    0x000028(%esi),%ax
		add    $0x00006e,%eax
		mov    %ax,_0cf252_data
		xor    %eax,%eax
		mov    _0cf212_data,%dx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    $_0000ff_case,%ecx
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x00007c,%eax
		mov    $_0000ff_case,%dl
		mov    %ax,_0cf23c_data
		mov    %dl,_0cf455_data
		mov    %dl,_0cf456_data
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ah,_0cf45c_data
		mov    %esi,%eax
		call   _018670_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		xor    %bl,%bl
		mov    %bl,_0cf45e_data
		jmp    _0509e5_case

	_050ed5_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _05087c_func
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   _01d444_func
		mov    $_0000ff_case,%bl
		xor    %edx,%edx
		mov    _0cf212_data,%ax
		mov    0x000069(%esi),%dl
		mov    %bl,_0cf455_data
		sub    %edx,%eax
		xor    %bh,%bh
		mov    $0x000001,%dh
		mov    %ax,_0cf23c_data
		mov    %bh,_0cf456_data
		mov    $_0000ff_case,%ebx
		mov    %dh,_0cf45c_data
		mov    0x000028(%esi),%ax
		mov    $0x000001,%edx
		mov    %ax,_0cf252_data
		mov    %esi,%eax
		call   _018670_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %cl,%cl
		call   _060460_func
		mov    %cl,_0cf45e_data
		jmp    _0509e5_case

	_050f55_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x00000a,%ebx
		call   _05087c_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ebp)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ebp)
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%edi)
		mov    $0x000001,%ebx
		mov    0x00002c(%esi),%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%edi)
		mov    %esi,%eax
		call   _060460_func
		xor    %al,%al
		mov    %al,_0cf45e_data
		jmp    _0509e5_case

	_050fa1_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000025,%ebx
		call   _05087c_func
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    0x000081(%edi),%cl
		or     $0x000004,%cl
		mov    %edi,%eax
		mov    %cl,0x000081(%edi)
		call   _01f3d4_func
		mov    %edi,%eax
		mov    $0x000001,%ch
		call   _01dc5c_func
		mov    %ch,_0cf45e_data
		jmp    _0509e5_case

	_050fe2_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _05087c_func
		testb  $0x000004,0x000081(%edi)
		jne    _050ffe_jump
		mov    %edi,%eax
		call   _01f3d4_func

	_050ffe_jump:
		orb    $0x000004,0x000081(%edi)
		movb   $0x000006,0x00007e(%esi)
		testb  $0x000004,0x000081(%ebp)
		jne    _051019_jump
		mov    %ebp,%eax
		call   _01f3d4_func

	_051019_jump:
		mov    0x000081(%ebp),%bh
		mov    %esi,%eax
		or     $0x000004,%bh
		xor    %edx,%edx
		mov    %bh,0x000081(%ebp)
		mov    $0x000013,%ebx
		call   _01d444_func
		mov    $0x000024,%edx
		mov    %ebp,%eax
		mov    $0x000001,%ebx
		call   _050850_func
		mov    %esi,%eax
		xor    %edx,%edx
		xor    %cl,%cl
		call   _060460_func
		mov    %cl,_0cf45e_data
		jmp    _0509e5_case

	_05105d_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05087c_func
		mov    $0x000001,%eax
		call   _06b8d0_func
		test   %ax,%ax
		je     _05107b_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		jmp    _051082_jump

	_05107b_jump:
		mov    $0x000009,%ebx
		mov    %esi,%eax

	_051082_jump:
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		xor    %bh,%bh
		mov    %bh,_0cf45e_data
		jmp    _0509e5_case

	_0510a4_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000001,%ebx
		call   _05087c_func
		mov    _0e47aa_data,%ch
		mov    %ebx,%edx
		inc    %ch
		mov    %esi,%eax
		mov    %ch,_0e47aa_data
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		mov    0x00002c(%esi),%ax
		mov    %ax,_0cf23c_data
		mov    0x00000c(%esi),%eax
		mov    0x000004(%eax),%eax
		mov    0x000046(%esi),%edx
		mov    0x000005(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %ax,_0cf252_data
		testb  $0x000008,0x000081(%esi)
		je     _051128_jump
		mov    _0cf252_data,%bx
		mov    0x000028(%esi),%ax
		add    %eax,%ebx
		mov    %bx,_0cf252_data
		jmp    _05113b_jump

	_051128_jump:
		mov    _0cf252_data,%dx
		mov    0x000028(%esi),%ax
		sub    %edx,%eax
		mov    %ax,_0cf252_data

	_05113b_jump:
		mov    $0x000001,%ah
		mov    $_0000ff_case,%dl
		mov    $_0000ff_case,%ecx
		mov    %ah,_0cf45c_data
		mov    %dl,_0cf455_data
		mov    %dl,_0cf456_data
		mov    %ecx,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _018670_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		xor    %bl,%bl
		mov    %bl,_0cf45e_data
		jmp    _0509e5_case

	_05117f_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000005,%ebx
		call   _05087c_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		xor    %ah,%ah
		mov    %ah,_0cf45e_data
		jmp    _0509e5_case

	_0511b1_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000005,%bl
		call   _05087c_func
		mov    %bl,_0cf45f_data
		mov    %esi,%eax
		mov    $0x000004,%bh
		xor    %edx,%edx
		mov    %bh,_0e47a9_data
		mov    $0x000007,%ebx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		xor    %cl,%cl
		call   _060460_func
		mov    %cl,_0cf45e_data
		jmp    _0509e5_case

	_0511f3_case:
		mov    0x00006c(%esi),%al
		cmp    $0x000015,%al
		jb     _05120f_jump
		jbe    _051228_jump
		cmp    $0x00001f,%al
		jb     _05127c_case
		jbe    _051228_jump
		cmp    $0x000022,%al
		je     _051215_jump
		jmp    _05127c_case

	_05120f_jump:
		cmp    $0x000013,%al
		je     _051228_jump
		jmp    _05127c_case

	_051215_jump:
		mov    $0x00001f,%edx
		mov    %esi,%eax
		call   _01d434_func
		mov    $0x000021,%edx
		jmp    _051275_jump

	_051228_jump:
		mov    $0x000018,%edx
		mov    %esi,%eax
		call   _01d434_func
		mov    $0x000019,%edx
		jmp    _051275_jump

	_05123b_case:
		mov    0x00006c(%esi),%al
		sub    $0x000013,%al
		cmp    $0x000004,%al
		ja     _05127c_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_050978_switch(,%eax,4)

	_051251_case:
		mov    $0x000017,%edx
		mov    %esi,%eax
		call   _01d434_func
		mov    $0x00001a,%edx
		jmp    _051275_jump

	_051264_case:
		mov    $0x00001e,%edx
		mov    %esi,%eax
		call   _01d434_func
		mov    $0x000020,%edx

	_051275_jump:
		mov    %ebp,%eax
		call   _050850_func

	_05127c_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _05087c_func
		mov    0x000081(%ebp),%ch
		mov    %esi,%eax
		or     $0x000004,%ch
		xor    %edx,%edx
		mov    %ch,0x000081(%ebp)
		call   _060460_func
		xor    %al,%al
		mov    %al,_0cf45e_data
		jmp    _0509e5_case

	_0512b1_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _05087c_func
		movb   $0x000008,_0cf45f_data
		xor    %eax,%eax
		mov    _0cf460_data,%al
		lea    0x000000(,%eax,4),%ebx
		xor    %edx,%edx
		mov    _0cf461_data,%al
		mov    %al,%dl
		inc    %al
		mov    _096e14_data(%ebx),%ebx
		mov    %al,_0cf461_data
		mov    (%edx,%ebx,1),%al
		mov    0x000004(%esp),%dl
		mov    %al,_0e47a9_data
		cmp    $0x000021,%dl
		jb     _051302_jump
		jbe    _051309_jump
		cmp    $0x00002b,%dl
		je     _051333_jump
		jmp    _05134d_jump

	_051302_jump:
		cmp    $0x000020,%dl
		je     _05131e_jump
		jmp    _05134d_jump

	_051309_jump:
		mov    $0x000016,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000012,%edx
		jmp    _051346_jump

	_05131e_jump:
		mov    $0x000015,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000011,%edx
		jmp    _051346_jump

	_051333_jump:
		mov    $0x000022,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000023,%edx

	_051346_jump:
		mov    %ebp,%eax
		call   _050850_func

	_05134d_jump:
		mov    $0x000001,%ebx
		mov    0x000081(%ebp),%cl
		mov    %esi,%eax
		or     $0x000004,%cl
		xor    %edx,%edx
		mov    %cl,0x000081(%ebp)
		xor    %ch,%ch
		call   _060460_func
		mov    %ch,_0cf45e_data
		jmp    _0509e5_case

	_051377_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000008,%ebx
		call   _05087c_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		xor    %dh,%dh
		mov    %dh,_0cf45e_data
		jmp    _0509e5_case

	_0513a9_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000b,%ebx
		call   _05087c_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		xor    %dl,%dl
		mov    %dl,_0cf45e_data
		jmp    _0509e5_case

	_0513db_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05087c_func
		mov    0x000081(%edi),%dl
		mov    $0x000001,%ebx
		or     $0x000004,%dl
		mov    %edi,%eax
		mov    %dl,0x000081(%edi)
		call   _01f3d4_func
		mov    $0x000002,%edx
		movb   $0x000003,0x00007e(%esi)
		mov    %edi,%eax
		movw   $0x00fffa,0x000042(%edi)
		call   _01d444_func
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%edi),%al
		movsbw (%edx,%eax,8),%ax
		mov    $0x00000e,%ebx
		mov    %ax,0x000040(%edi)
		neg    %eax
		xor    %edx,%edx
		mov    %ax,0x000040(%edi)
		mov    %esi,%eax
		call   _01d444_func
		addl   $0x000064,0x000028(%esi)
		jmp    _051463_jump

	_05144c_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000d,%ebx
		call   _05087c_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func

	_051463_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,_0cf252_data
		xor    %eax,%eax
		mov    _0cf266_data,%dx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    $_0000ff_case,%ecx
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x000010,%eax
		mov    $0x000001,%edx
		mov    %ax,_0cf23c_data
		mov    %esi,%eax
		call   _018670_func
		cmpb   $0x000016,0x000004(%esp)
		jne    _0514d2_jump
		mov    $0x000020,%bh
		mov    $0x000002,%ch
		mov    0x000081(%esi),%al
		mov    %bh,_0cf455_data
		mov    %bh,_0cf456_data
		mov    %ch,_0cf45c_data
		test   $0x000008,%al
		je     _0514ca_jump
		addw   $0x000050,_0cf252_data
		jmp    _0514d2_jump

	_0514ca_jump:
		subw   $0x000050,_0cf252_data

	_0514d2_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		xor    %ah,%ah
		mov    %ah,_0cf45e_data
		jmp    _0509e5_case

	_0514ed_case:
		mov    0x000081(%esi),%dh
		mov    (%esp),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)
		jmp    _051518_case

	_051511_case:
		orb    $0x000008,0x000081(%esi)

	_051518_case:
		mov    $0x00003c,%ecx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    %ecx,_0e4798_data
		call   _05087c_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		mov    %esi,%eax
		mov    0x000004(%esp),%bl
		call   _0500a8_func
		cmp    $0x00002d,%bl
		jne    _051578_jump
		mov    _0ce06c_data,%bx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0ce0ac_data,%dl
		mov    0x000068(%esi),%al
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %dx,_0cf252_data
		mov    _0cf250_data,%eax
		sar    $0x000010,%eax
		jmp    _0515ff_jump

	_051578_jump:
		cmp    $0x000019,%bl
		jne    _0515ae_jump
		mov    _0e479a_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%edx
		mov    0x000028(%edx,%eax,1),%ax
		add    $0x000064,%eax
		mov    %ax,_0cf252_data
		mov    _0cf250_data,%eax
		sar    $0x000010,%eax
		add    $0x000050,%eax
		jmp    _0515ff_jump

	_0515ae_jump:
		testb  $0x000008,0x000081(%esi)
		je     _0515d3_jump
		mov    0x000028(%esi),%ax
		add    $0x000030,%eax
		mov    %ax,_0cf252_data
		mov    _0cf250_data,%eax
		sar    $0x000010,%eax
		add    $0x000050,%eax
		jmp    _0515ff_jump

	_0515d3_jump:
		mov    0x000028(%esi),%ax
		sub    $0x0000a0,%eax
		mov    %ax,_0cf252_data
		cmp    $0x000019,%bl
		jne    _0515f4_jump
		mov    %eax,%edx
		add    $0x000070,%edx
		mov    %dx,_0cf252_data

	_0515f4_jump:
		mov    _0cf250_data,%eax
		sar    $0x000010,%eax
		sub    $0x000050,%eax

	_0515ff_jump:
		mov    %eax,0x000028(%esi)
		mov    _0cf264_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		sub    $0x000010,%edx
		mov    $_0000ff_case,%ecx
		mov    %edx,0x00002c(%esi)
		mov    %ecx,%ebx
		mov    0x00002c(%esi),%ax
		mov    $0x000001,%dl
		mov    %ax,_0cf23c_data
		mov    %dl,_0cf45c_data
		mov    $0x000018,%al
		mov    $0x000001,%edx
		mov    %al,_0cf455_data
		mov    %al,_0cf456_data
		mov    %esi,%eax
		call   _018670_func
		xor    %edx,%edx
		mov    _0cf212_data,%ax
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    $0x00000e,%ebx
		mov    %ax,_0cf23c_data
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		xor    %dh,%dh
		mov    %dh,_0cf45e_data
		jmp    _0509e5_case

	_051685_case:
		mov    %esi,%eax
		call   _01dbe4_func
		xor    %edx,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _05087c_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		xor    %dh,%dh
		mov    %dh,_0cf45e_data
		jmp    _0509e5_case

	_0516be_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _05087c_func
		andb   $0x0000fb,0x000081(%ebp)
		mov    0x000081(%edi),%al
		mov    $0x000006,%ebx
		and    $0x0000fb,%al
		xor    %edx,%edx
		mov    %al,0x000081(%edi)
		mov    %esi,%eax
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		xor    %ah,%ah
		mov    %ah,_0cf45e_data
		jmp    _0509e5_case

	_051708_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _05087c_func
		subl   $0x000064,0x000028(%esi)
		mov    0x000081(%edi),%al
		xor    %edx,%edx
		and    $0x0000fb,%al
		mov    $0x000014,%ebx
		mov    %al,0x000081(%edi)
		mov    %esi,%eax
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		xor    %ah,%ah
		mov    %ah,_0cf45e_data
		jmp    _0509e5_case

	_05174f_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000f,%ebx
		call   _05087c_func
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000001,%cl
		call   _01d444_func
		mov    $_0000ff_case,%bl
		mov    _0cf266_data,%dx
		mov    0x000028(%esi),%ax
		mov    %cl,_0cf45c_data
		mov    %ax,_0cf252_data
		xor    %eax,%eax
		mov    $_0000ff_case,%ecx
		mov    0x000069(%esi),%al
		mov    %bl,_0cf455_data
		sub    %eax,%edx
		mov    %bl,_0cf456_data
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x000010,%eax
		mov    $0x000001,%edx
		mov    %ax,_0cf23c_data
		mov    %esi,%eax
		call   _018670_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _060460_func
		mov    $_0000ff_case,%al
		mov    %ch,_0cf45e_data
		mov    %al,_0e47ac_data
		jmp    _0509e5_case

	_0517d4_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05087c_func
		mov    0x000081(%esi),%bh
		xor    %edx,%edx
		test   $0x000008,%bh
		sete   %dl
		mov    %esi,%eax
		call   _0500a8_func
		testb  $0x000008,0x000081(%esi)
		je     _051833_jump
		mov    $0x000090,%eax
		mov    _0cca54_data,%edx
		mov    0x000028(%esi),%ebx
		sub    %edx,%eax
		mov    _0cf268_data,%dx
		sub    %eax,%ebx
		xor    %eax,%eax
		add    $0x000140,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		add    $0x000090,%edx
		mov    %ebx,0x000028(%esi)
		mov    %dx,_0cf252_data
		jmp    _05185b_jump

	_051833_jump:
		xor    %eax,%eax
		mov    _0cf25a_data,%dx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000028(%esi),%ecx
		mov    %edx,%eax
		add    $0x000088,%ecx
		sub    $0x000090,%eax
		mov    %ecx,0x000028(%esi)
		mov    %ax,_0cf252_data

	_05185b_jump:
		xor    %eax,%eax
		mov    _0cf460_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cf461_data,%al
		mov    _096e14_data(%edx),%edx
		mov    %al,%bl
		inc    %al
		mov    (%edx,%ebx,1),%dl
		mov    %al,_0cf461_data
		mov    _0cf210_data,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%bl
		sub    %ebx,%eax
		and    $_0000ff_case,%edx
		sub    $0x000020,%eax
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    $0x00000f,%ebx
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %ax,_0cf23c_data
		mov    %esi,%eax
		mov    $_0000ff_case,%ch
		call   _01d444_func
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ch,_0cf455_data
		mov    %ch,_0cf456_data
		mov    $_0000ff_case,%ecx
		mov    %ah,_0cf45c_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018670_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		xor    %eax,%eax
		mov    $0x000029,%dl
		mov    _0cf460_data,%al
		mov    %dl,_0e47a8_data
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cf461_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096e14_data(%edx),%edx
		mov    %al,_0cf461_data
		mov    (%edx,%ebx,1),%al
		mov    %al,_0e47ac_data
		cmp    $_0000ff_case,%al
		jne    _05193d_jump

	_051926_jump:
		mov    $0x000006,%eax
		call   _06b8d0_func
		mov    %al,_0e47ac_data
		cmp    $0x000001,%al
		je     _051926_jump
		cmp    $0x000006,%al
		je     _051926_jump

	_05193d_jump:
		mov    $_0000ff_case,%bl
		xor    %edx,%edx

	_051941_jump:
		movswl %dx,%eax
		inc    %edx
		mov    %bl,_0e4790_data(%eax)
		cmp    $0x000008,%dx
		jl     _051941_jump
		mov    $0xffff8300,%edx
		xor    %bh,%bh
		mov    %dx,_0e479e_data
		mov    %bh,_0cf45e_data
		jmp    _0509e5_case

	_05196a_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05087c_func
		mov    0x000081(%esi),%cl
		mov    (%esp),%eax
		test   $0x000008,%cl
		sete   %dl
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    %ch,%dh
		mov    %ch,(%eax)
		or     %dl,%dh
		xor    %ebx,%ebx
		mov    %dh,(%eax)
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		xor    %bl,%bl
		call   _0503f0_func
		mov    %bl,_0cf45e_data
		jmp    _0509e5_case

	_0519c0_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0519cc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dl,0x000010(%esp)
		mov    0x000048(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%edi
		shl    $0x000005,%edi
		add    %edx,%edi
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edi
		mov    %esp,%ecx
		add    %eax,%edi
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		mov    0x000050(%esi),%edx
		push   %eax
		sar    $0x000010,%edx
		mov    %edi,%eax
		call   _01d7e0_func
		cmpb   $0x000000,0x000010(%esp)
		je     _051a99_jump
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		mov    (%eax),%eax
		shl    $0x000003,%edx
		add    %eax,%edx
		mov    0x00006c(%edi),%al
		cmp    $0x000012,%al
		jb     _051a40_jump
		jbe    _051a50_jump
		cmp    $0x000023,%al
		je     _051a4a_jump
		jmp    _051a54_jump

	_051a40_jump:
		cmp    $0x000011,%al
		jne    _051a54_jump
		movb   $0x00002f,0x000002(%edx)
		jmp    _051a54_jump

	_051a4a_jump:
		movb   $0x000030,0x000002(%edx)
		jmp    _051a54_jump

	_051a50_jump:
		movb   $0x00002e,0x000002(%edx)

	_051a54_jump:
		mov    0x000002(%edx),%al
		mov    %al,0x00006a(%edi)
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _051a8c_jump
		movb   $0x000001,0x000070(%esi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000028(%esi),%ebx
		sub    $0x000005,%eax
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		jmp    _051a99_jump

	_051a8c_jump:
		mov    0x000028(%esi),%edx
		movb   $0x000000,0x000070(%esi)
		add    $0x000005,%edx
		mov    %edx,0x000028(%esi)

	_051a99_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%al
		mov    0x000074(%esi),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movw   $0x000000,0x000042(%esi)
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		mov    -0x000002(%esp),%edx
		sar    %ebx
		sar    $0x000010,%edx
		add    %ebx,%edx
		sub    %eax,%edx
		add    $0x000002,%edx
		mov    %edx,0x00002c(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_051ad8_switch:
		.long   _051b09_case
		.long   _051b16_case
		.long   _051b23_case
		.long   _051b30_case




_051ae8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    _0e47a9_data,%al
		dec    %al
		cmp    $0x000003,%al
		ja     _051b3b_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_051ad8_switch(,%edx,4)

	_051b09_case:
		mov    $0x000003,%ch
		mov    $0x0000c0,%al
		mov    %ch,0x000004(%esp)
		mov    %al,(%esp)
		jmp    _051b3b_jump

	_051b16_case:
		mov    $0x000004,%bh
		mov    $0x0000c0,%cl
		mov    %bh,0x000004(%esp)
		mov    %cl,(%esp)
		jmp    _051b3b_jump

	_051b23_case:
		mov    $0x000002,%dh
		mov    $0x0000c0,%bl
		mov    %dh,0x000004(%esp)
		mov    %bl,(%esp)
		jmp    _051b3b_jump

	_051b30_case:
		mov    $0x000004,%ah
		mov    $0x0000f4,%dl
		mov    %ah,0x000004(%esp)
		mov    %dl,(%esp)

	_051b3b_jump:
		mov    _0cc7a0_data,%ebx
		mov    _0cc7a4_data,%si
		xor    %eax,%eax
		test   %si,%si
		jle    _051c27_jump

	_051b53_jump:
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    (%esp),%cl
		mov    0x000060(%ebx),%dx
		cmp    %ecx,%edx
		jne    _051c17_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _051c17_jump
		cmpw   $0x0000d5,0x000060(%edi)
		jne    _051b93_jump
		mov    _0e479e_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0cc7a0_data,%edi
		shl    $0x000002,%edx
		add    %edx,%edi

	_051b93_jump:
		mov    0x000034(%edi),%ax
		mov    %ax,0x00004a(%ebx)
		xor    %eax,%eax
		mov    _0cf45f_data,%al
		mov    %ax,0x000052(%ebx)
		mov    0x000081(%ebx),%ah
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%ebx)
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    %ah,%dl
		and    $0x0000f7,%dl
		mov    %dl,0x000081(%ebx)
		mov    %dl,%dh
		movb   $0x000000,0x00006b(%ebx)
		or     %al,%dh
		mov    0x000004(%esp),%al
		mov    %dh,0x000081(%ebx)
		mov    %al,0x00006c(%ebx)
		mov    0x000034(%ebx),%ax
		mov    $0x000001,%edx
		mov    %ax,0x00004a(%edi)
		mov    %ebx,%eax
		call   _0519cc_func
		mov    0x000081(%ebx),%cl
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%cl
		mov    %ebx,%eax
		mov    %cl,0x000081(%ebx)
		call   _01f3d4_func
		mov    %ebx,%eax
		call   _01dc5c_func
		jmp    _051c27_jump

	_051c17_jump:
		inc    %eax
		add    $0x000084,%ebx
		cmp    %si,%ax
		jl     _051b53_jump

	_051c27_jump:
		mov    $_0000ff_case,%ch
		xor    %al,%al
		mov    %ch,_0cf45f_data
		mov    %al,_0e47a9_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051c40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0e4798_data,%edx
		test   %edx,%edx
		je     _051c5e_jump
		lea    -0x000001(%edx),%ebx
		mov    %ebx,_0e4798_data
		jmp    _051d55_jump

	_051c5e_jump:
		call   _04ff98_func
		test   %al,%al
		je     _051d55_jump
		mov    _0cf45d_data,%ah
		test   %ah,%ah
		je     _051c7f_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0cf45d_data

	_051c7f_jump:
		testb  $0x000001,0x000081(%esi)
		jne    _051d4e_jump
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		jne    _051cce_jump
		cmpb   $_0000ff_case,_0cf45f_data
		je     _051ca3_jump
		mov    %esi,%eax
		call   _051ae8_func

	_051ca3_jump:
		movw   $0x000000,0x000040(%esi)
		mov    $0xffff8300,%edx
		movw   $0x000000,0x000042(%esi)
		mov    %dx,_0cf252_data
		mov    %dx,_0cf23c_data
		mov    %dx,_0e47a6_data
		jmp    _051d47_jump

	_051cce_jump:
		mov    _0e47a4_data,%edx
		mov    $_0000ff_case,%bl
		sar    $0x000010,%edx
		mov    %bl,_0cf45f_data
		cmp    $0xffff8300,%edx
		je     _051cee_jump
		call   _050184_func
		jmp    _051d28_jump

	_051cee_jump:
		cmpb   $0x000000,_0e47a8_data
		jne    _051d14_jump
		cmp    _0e47ac_data,%bl
		je     _051d14_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _051d14_jump
		cmpb   $0x00000f,0x00006c(%esi)
		jne    _051d14_jump
		mov    %esi,%eax
		call   _05046c_func
		jmp    _051d28_jump

	_051d14_jump:
		mov    _0e47a8_data,%ah
		test   %ah,%ah
		je     _051d28_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0e47a8_data

	_051d28_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0cf456_data,%cl
		mov    _0cf455_data,%bl
		mov    _0cf45c_data,%dl
		call   _018670_func

	_051d47_jump:
		mov    %esi,%eax
		call   _018844_func

	_051d4e_jump:
		mov    %esi,%eax
		call   _05098c_func

	_051d55_jump:
		andb   $0x0000fe,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_051d64_switch:
		.long   _051db8_case
		.long   _051dd7_case
		.long   _051de3_case
		.long   _051de3_case
		.long   _051de3_case




_051d78_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf460_data,%ah
		cmp    $0x000008,%ah
		je     _051d8b_jump
		cmp    $0x000009,%ah
		jne    _051d97_jump

	_051d8b_jump:
		mov    $_0cf45b_data,%eax
		mov    $_0cf459_data,%ebx
		jmp    _051da1_jump

	_051d97_jump:
		mov    $_0cf460_data,%eax
		mov    $_0cf461_data,%ebx

	_051da1_jump:
		mov    (%eax),%dh
		mov    %dh,%dl
		dec    %dl
		cmp    $0x000004,%dl
		ja     _051de3_case
		xor    %ecx,%ecx
		mov    %dl,%cl
		jmp    *%cs:_051d64_switch(,%ecx,4)

	_051db8_case:
		cmpb   $0x000002,_0e47ab_data
		jb     _051de3_case
		cmpb   $0x000002,_0e47aa_data
		jbe    _051de3_case
		xor    %cl,%cl
		movb   $0x000002,(%eax)
		mov    %cl,_0e47aa_data
		jmp    _051de3_case

	_051dd7_case:
		cmpb   $0x000003,_0e47ab_data
		jb     _051de3_case
		movb   $0x000003,(%eax)

	_051de3_case:
		cmp    (%eax),%dh
		je     _051df1_jump
		xor    %al,%al
		movb   $0x000000,(%ebx)
		mov    %al,_0e47ab_data

	_051df1_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051df8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf461_data,%dl
		mov    _0cf460_data,%dh

	_051e07_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %dh,%bl
		mov    %dl,%cl
		mov    _096e14_data(,%ebx,4),%ebx
		xor    %ah,%ah
		mov    (%ecx,%ebx,1),%al
		cmp    $0x000018,%al
		jb     _051e5d_jump
		jbe    _051e89_jump
		cmp    $0x00001d,%al
		jb     _051e4d_jump
		jbe    _051e92_jump
		cmp    $0x000022,%al
		jb     _051e44_jump
		cmp    $0x000024,%al
		jbe    _051e89_jump
		cmp    $0x00002b,%al
		je     _051e87_jump
		jmp    _051e9e_jump

	_051e44_jump:
		cmp    $0x000021,%al
		je     _051e87_jump
		jmp    _051e9e_jump

	_051e4d_jump:
		cmp    $0x00001a,%al
		jb     _051e9e_jump
		jbe    _051e89_jump
		cmp    $0x00001c,%al
		je     _051e8f_jump
		jmp    _051e9e_jump

	_051e5d_jump:
		cmp    $0x00000f,%al
		jb     _051e71_jump
		jbe    _051e89_jump
		cmp    $0x000012,%al
		jb     _051e9e_jump
		cmp    $0x000013,%al
		jbe    _051e89_jump
		cmp    $0x000016,%al
		je     _051e96_jump
		jmp    _051e9e_jump

	_051e71_jump:
		test   %al,%al
		jbe    _051e7f_jump
		cmp    $0x000001,%al
		jne    _051e9e_jump
		mov    %al,%ah
		xor    %dl,%dl
		jmp    _051e9e_jump

	_051e7f_jump:
		mov    $0x000001,%ah
		xor    %dl,%dl
		add    %ah,%dh
		jmp    _051e9e_jump

	_051e87_jump:
		inc    %dl

	_051e89_jump:
		mov    $0x000001,%ah
		add    %ah,%dl
		jmp    _051e9e_jump

	_051e8f_jump:
		add    $0x000002,%dl

	_051e92_jump:
		mov    $0x000001,%ah
		jmp    _051e9e_jump

	_051e96_jump:
		test   %dl,%dl
		je     _051e9e_jump
		mov    $0x000001,%ah
		sub    %ah,%dl

	_051e9e_jump:
		test   %ah,%ah
		jne    _051e07_jump
		mov    %dl,_0cf459_data
		mov    %dh,_0cf45b_data
		mov    %dh,_0cf460_data
		mov    %dl,_0cf461_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051ec4_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		xor    %ecx,%ecx
		mov    0x00006d(%eax),%cl
		mov    0x00000c(%ebx),%esi
		lea    0x000000(,%ecx,4),%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    (%esi),%esi
		mov    0x00006c(%ebx),%al
		testb  $0x000001,0x000007(%esi,%eax,8)
		je     _052010_jump
		cmpb   $0x000000,_0cf45d_data
		jne    _052010_jump
		shl    $0x000008,%ecx
		add    %ecx,%eax
		cmp    $0x000013,%eax
		jb     _051f4b_jump
		jbe    _051f71_jump
		cmp    $0x000022,%eax
		jb     _051f31_jump
		jbe    _051f71_jump
		cmp    $0x000025,%eax
		jb     _051f7f_jump
		jbe    _051f78_jump
		cmp    $0x00002c,%eax
		je     _051f78_jump
		jmp    _051f7f_jump

	_051f31_jump:
		cmp    $0x000015,%eax
		jb     _051f7f_jump
		cmp    $0x000018,%eax
		jbe    _051f71_jump
		cmp    $0x00001e,%eax
		jb     _051f7f_jump
		cmp    $0x00001f,%eax
		jbe    _051f71_jump
		jmp    _051f7f_jump

	_051f4b_jump:
		cmp    $0x00000a,%eax
		jb     _051f63_jump
		cmp    $0x00000b,%eax
		jbe    _051f78_jump
		cmp    $0x00000d,%eax
		jb     _051f7f_jump
		jbe    _051f78_jump
		cmp    $0x00000f,%eax
		je     _051f78_jump
		jmp    _051f7f_jump

	_051f63_jump:
		cmp    $0x000002,%eax
		jb     _051f7f_jump
		jbe    _051f78_jump
		cmp    $0x000006,%eax
		je     _051f78_jump
		jmp    _051f7f_jump

	_051f71_jump:
		mov    $_0000ff_case,%eax
		jmp    _051f84_jump

	_051f78_jump:
		mov    $0xffffffff,%eax
		jmp    _051f84_jump

	_051f7f_jump:
		mov    $0x000001,%eax

	_051f84_jump:
		cmp    %dx,%ax
		jne    _052010_jump
		cmp    $0x000001,%dx
		jne    _051fac_jump
		movb   $0x000001,_0ce173_data
		mov    %ebx,%eax
		call   _01e7ac_func
		incb   _0e47ab_data
		call   _051d78_func

	_051fac_jump:
		cmpb   $0x000000,0x000076(%ebx)
		je     _051fdd_jump
		mov    _0cf460_data,%al
		cmp    $0x000008,%al
		je     _051feb_jump
		cmp    $0x000009,%al
		je     _051feb_jump
		call   _051df8_func
		cmpw   $0x000062,0x000060(%ebx)
		jne    _051fd4_jump
		movb   $0x000008,_0cf460_data
		jmp    _051feb_jump

	_051fd4_jump:
		movb   $0x000009,_0cf460_data
		jmp    _051feb_jump

	_051fdd_jump:
		movb   $0x00000a,_0cf460_data
		movb   $0x000001,_0cf467_data

	_051feb_jump:
		xor    %cl,%cl
		mov    $0x000001,%al
		mov    %cl,_0cf461_data
		mov    %al,_0cf45e_data
		mov    0x000081(%ebx),%ah
		mov    $_0000ff_case,%ch
		or     %al,%ah
		mov    %ch,_0cf45d_data
		mov    %ah,0x000081(%ebx)

	_052010_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_052014_switch:
		.long   _052047_case
		.long   _05203f_case
		.long   _052043_case
		.long   _05203f_case




_052024_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x00006c(%eax),%al
		sub    $0x000002,%al
		cmp    $0x000003,%al
		ja     _052049_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_052014_switch(,%eax,4)

	_05203f_case:
		xor    %dl,%dl
		jmp    _052049_jump

	_052043_case:
		mov    $0x000007,%dl
		jmp    _052049_jump

	_052047_case:
		mov    $0x00000e,%dl

	_052049_jump:
		cmp    0x00006b(%ebx),%dl
		jb     _05205c_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _0519cc_func
		jmp    _0520d5_jump

	_05205c_jump:
		mov    0x000048(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x000034(%ebx),%cx
		cmp    0x00004a(%eax),%cx
		jne    _0520d5_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		mov    (%ecx),%ecx
		shl    $0x000003,%edx
		mov    0x00006a(%eax),%al
		add    %ecx,%edx
		cmp    $0x00002f,%al
		jb     _0520af_jump
		jbe    _0520c2_jump
		cmp    $0x000030,%al
		je     _0520d1_jump
		mov    %ebx,%eax
		call   _0552b4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0520af_jump:
		cmp    $0x00002e,%al
		jne    _0520d5_jump
		movb   $0x000001,0x000002(%edx)
		mov    %ebx,%eax
		call   _0552b4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0520c2_jump:
		movb   $0x000000,0x000002(%edx)
		mov    %ebx,%eax
		call   _0552b4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0520d1_jump:
		movb   $0x00001c,0x000002(%edx)

	_0520d5_jump:
		mov    %ebx,%eax
		call   _0552b4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0520e0_func:
		push   %edx
		mov    0x00007f(%eax),%dl
		test   %dl,%dl
		je     _0520f6_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x00007f(%eax)
		jne    _0520f6_jump
		call   _05023c_func

	_0520f6_jump:
		pop    %edx
		ret    



_052100_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%ebx
		mov    _0ce0d0_data,%edx
		cmpl   $0x000000,0x000024(%edx)
		jne    _05214f_jump
		xor    %ecx,%ecx
		mov    _0ce06c_data,%di
		mov    _0ce0ac_data,%cl
		movzbl _0ce0b8_data,%esi
		add    %edi,%ecx
		movzbl _0ce0ad_data,%edi
		add    %edi,%esi
		mov    _0ce070_data,%ebp
		sar    %esi
		movw   $0x000000,0x000040(%edx)
		add    %ebp,%esi
		movw   $0x000000,0x000042(%edx)
		sub    $0x00000a,%esi
		jmp    _05216c_jump

	_05214f_jump:
		xor    %ecx,%ecx
		mov    0x000028(%edx),%si
		mov    0x000068(%edx),%cl
		movzbl 0x000069(%edx),%edi
		add    %esi,%ecx
		movzbl 0x000074(%edx),%esi
		add    %edi,%esi
		sar    %esi
		add    0x00002c(%edx),%esi
		sub    $0x000003,%esi

	_05216c_jump:
		xor    %edx,%edx
		movzbl 0x000074(%eax),%edi
		mov    0x000069(%eax),%dl
		add    %edi,%edx
		sar    %edx
		mov    0x00002c(%eax),%edi
		add    %edx,%edi
		movswl %si,%edx
		mov    0x000028(%eax),%si
		sub    %esi,%ecx
		mov    %ecx,%esi
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		sub    %edx,%edi
		sub    %ecx,%esi
		mov    %edi,%edx
		mov    %si,(%ebx)
		test   %di,%di
		jge    _0521e3_jump
		mov    _0ce0d0_data,%ebx
		cmpw   $0x000000,0x000042(%ebx)
		jle    _0521cd_jump
		movswl %dx,%edx
		cmp    $0xffffffe2,%edx
		jle    _0521bb_jump
		addw   $0x000002,0x000042(%eax)
		jmp    _05222c_jump

	_0521bb_jump:
		cmp    $0xffffffd0,%edx
		jle    _05222c_jump
		incw   0x000042(%eax)
		jmp    _05222c_jump

	_0521cd_jump:
		movswl %dx,%edx
		cmp    $0xffffffe2,%edx
		jle    _0521dc_jump
		subw   $0x000002,0x000042(%eax)
		jmp    _05222c_jump

	_0521dc_jump:
		cmp    $0xffffffd0,%edx
		jle    _05222c_jump
		jmp    _052228_jump

	_0521e3_jump:
		mov    _0ce0d0_data,%ebx
		cmpw   $0x000000,0x000042(%ebx)
		jl     _052211_jump
		cmp    $0x00001e,%dx
		jge    _052201_jump
		addw   $0x000002,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_052201_jump:
		cmp    $0x000030,%dx
		jge    _05222c_jump
		incw   0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_052211_jump:
		cmp    $0x00001e,%dx
		jge    _052222_jump
		subw   $0x000002,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_052222_jump:
		cmp    $0x000030,%dx
		jge    _05222c_jump

	_052228_jump:
		decw   0x000042(%eax)

	_05222c_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_052234_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    0x00006d(%eax),%dl
		xor    %cl,%cl
		cmp    $0x000002,%dl
		je     _05226e_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%eax),%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000001,0x000007(%ebx,%edx,8)
		je     _052297_jump
		mov    $0x000001,%ebx
		mov    %ebx,%edx
		call   _060460_func
		jmp    _052297_jump

	_05226e_jump:
		cmp    %dl,%dl
		jne    _052295_jump
		cmpb   $0x000001,0x00006c(%eax)
		jne    _052295_jump
		cmpb   $0x000000,0x00006b(%eax)
		jne    _052295_jump
		movw   $0x00fffb,0x000042(%eax)
		mov    %cl,0x000071(%eax)
		mov    0x00002c(%eax),%edx
		mov    %cl,0x000072(%eax)
		sub    $0x00000e,%edx
		mov    %edx,0x00002c(%eax)
		jmp    _052297_jump

	_052295_jump:
		mov    $0x000001,%cl

	_052297_jump:
		mov    %cl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0522a0_func:
		testb  $0x000008,0x000081(%eax)
		jne    _0522ae_jump
		test   %dx,%dx
		jg     _0522bc_jump

	_0522ae_jump:
		testb  $0x000008,0x000081(%eax)
		je     _0522bf_jump
		test   %dx,%dx
		jge    _0522bf_jump

	_0522bc_jump:
		mov    $0x000001,%al
		ret    

	_0522bf_jump:
		xor    %al,%al
		ret    



_0522c4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000002,0x00006d(%eax)
		je     _0522da_jump
		cmpb   $0x000001,0x00006d(%ebx)
		jne    _05242b_jump

	_0522da_jump:
		movswl %dx,%edx
		mov    %ebx,%eax
		call   _0522a0_func
		test   %al,%al
		je     _052332_jump
		cmpb   $0x000002,0x00006d(%ebx)
		jne    _05230d_jump
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _05230d_jump
		cmpb   $0x000000,0x00006c(%ebx)
		setne  %al
		and    $_0000ff_case,%eax
		je     _05230d_jump
		incw   0x000042(%ebx)
		jmp    _052314_jump

	_05230d_jump:
		mov    %ebx,%eax
		call   _052234_func

	_052314_jump:
		testb  $0x000008,0x000081(%ebx)
		jne    _052324_jump
		mov    $0x000004,%eax
		jmp    _052329_jump

	_052324_jump:
		mov    $0xfffffffc,%eax

	_052329_jump:
		mov    %ax,0x000040(%ebx)
		jmp    _0523a2_jump

	_052332_jump:
		mov    _0ce084_data,%ax
		mov    %eax,%edx
		mov    %ax,0x000040(%ebx)
		neg    %edx
		mov    0x00003a(%ebx),%eax
		mov    %dx,0x000040(%ebx)
		sar    $0x000010,%eax
		cmp    0x000028(%ebx),%eax
		jle    _052373_jump
		testb  $0x000008,0x000081(%ebx)
		je     _052373_jump
		mov    0x000040(%ebx),%di
		test   %di,%di
		jge    _052369_jump
		movw   $0x000000,0x000040(%ebx)
		jmp    _0523a2_jump

	_052369_jump:
		mov    %edi,%eax
		add    %edi,%eax
		mov    %ax,0x000040(%ebx)
		jmp    _0523a2_jump

	_052373_jump:
		mov    0x00003a(%ebx),%eax
		mov    0x000028(%ebx),%ecx
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		jge    _0523a2_jump
		testb  $0x000008,0x000081(%ebx)
		jne    _0523a2_jump
		mov    0x000040(%ebx),%cx
		test   %cx,%cx
		jle    _05239a_jump
		movw   $0x000000,0x000040(%ebx)
		jmp    _0523a2_jump

	_05239a_jump:
		mov    %ecx,%esi
		add    %ecx,%esi
		mov    %si,0x000040(%ebx)

	_0523a2_jump:
		mov    0x00006d(%ebx),%cl
		cmp    $0x000001,%cl
		jne    _052403_jump
		xor    %eax,%eax
		mov    %cl,%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    0x000081(%ebx),%ch
		add    $0x000007,%eax
		test   $0x000008,%ch
		jne    _0523d7_jump
		cmpw   $0x000000,0x000040(%ebx)
		jg     _0523e7_jump

	_0523d7_jump:
		testb  $0x000008,0x000081(%ebx)
		je     _0523ee_jump
		cmpw   $0x000000,0x000040(%ebx)
		jge    _0523ee_jump

	_0523e7_jump:
		mov    $0x000001,%edx
		jmp    _0523f0_jump

	_0523ee_jump:
		xor    %edx,%edx

	_0523f0_jump:
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		mov    %dh,(%eax)
		shl    $0x000004,%dl
		mov    %dh,%cl
		or     %dl,%cl
		mov    %cl,(%eax)

	_052403_jump:
		cmpw   $0x000004,0x000040(%ebx)
		jle    _052415_jump
		movw   $0x000004,0x000040(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_052415_jump:
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffc,%eax
		jge    _052432_jump
		movw   $0x00fffc,0x000040(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05242b_jump:
		mov    %ebx,%eax
		call   _0552b4_func

	_052432_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_052438_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _05246a_jump
		cmpb   $0x00000a,0x00006c(%ebx)
		jne    _05246a_jump
		mov    0x00004a(%ebx),%cx
		cmp    $0x000032,%cx
		jle    _0526e4_jump
		mov    %ecx,%esi
		sub    $0x000032,%esi
		mov    %si,0x00004a(%ebx)
		jmp    _0526e4_jump

	_05246a_jump:
		mov    %ebx,%eax
		call   _052234_func
		test   %al,%al
		je     _0526e4_jump
		cmpb   $0x000001,0x00006c(%ebx)
		setne  %al
		and    $_0000ff_case,%eax
		je     _0524bf_jump
		cmpw   $0x0001f4,0x00004a(%ebx)
		jne    _0524bf_jump
		movb   $0x00008c,0x00007d(%ebx)
		mov    0x00004a(%ebx),%dx
		mov    0x000028(%ebx),%ax
		inc    %edx
		mov    %ax,0x00004e(%ebx)
		mov    %ebx,%eax
		mov    %dx,0x00004a(%ebx)
		mov    $0x000003,%edx
		movw   $0x000000,0x000042(%ebx)
		call   _01d434_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0524bf_jump:
		mov    0x00006c(%ebx),%cl
		cmp    $0x000003,%cl
		jne    _0524ee_jump
		cmpb   $0x000000,0x000072(%ebx)
		je     _0526e4_jump
		mov    0x000042(%ebx),%di
		test   %di,%di
		jl     _0526e4_jump
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x000042(%ebx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0524ee_jump:
		cmp    $0x000004,%cl
		jne    _0526e4_jump
		mov    0x00004c(%ebx),%eax
		mov    0x000028(%ebx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _05250a_jump
		neg    %eax

	_05250a_jump:
		mov    %eax,%edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    _0ce06c_data,%esi
		mov    _0ce0ac_data,%al
		add    %eax,%esi
		mov    0x00004c(%ebx),%eax
		sar    $0x000010,%eax
		sub    %eax,%esi
		mov    %esi,%eax
		movzbl 0x000068(%ebx),%esi
		sub    %esi,%eax
		sub    $0x00000a,%eax
		test   %eax,%eax
		jge    _052536_jump
		neg    %eax

	_052536_jump:
		movzbw 0x00007d(%ebx),%si
		mov    %ax,(%esp)
		cmp    %si,%dx
		jg     _05254f_jump
		cmp    %ax,%dx
		jle    _05259e_jump
		cmpb   $0x00008c,0x00007d(%ebx)
		jne    _05259e_jump

	_05254f_jump:
		cmpb   $0x00008c,0x00007d(%ebx)
		jne    _052563_jump
		cmpw   $0x00008c,(%esp)
		jge    _052563_jump
		mov    (%esp),%al
		mov    %al,0x00007d(%ebx)

	_052563_jump:
		cmpb   $0x000001,0x000072(%ebx)
		jne    _05257c_jump
		testb  $0x000008,0x000081(%ebx)
		jne    _052578_jump
		incw   0x000040(%ebx)
		jmp    _05257c_jump

	_052578_jump:
		decw   0x000040(%ebx)

	_05257c_jump:
		cmpb   $0x000001,0x000071(%ebx)
		jne    _0526b6_jump
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jle    _0526b6_jump
		decw   0x000042(%ebx)
		jmp    _0526b6_jump

	_05259e_jump:
		xor    %eax,%eax
		mov    _0ce070_data,%di
		mov    0x000069(%ebx),%al
		mov    0x00002c(%ebx),%si
		mov    %eax,%edx
		xor    %eax,%eax
		add    %esi,%edx
		mov    _0ce0ad_data,%al
		sub    %edi,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		cmpw   $0x000000,0x000040(%ebx)
		jg     _0525cf_jump
		testb  $0x000008,0x000081(%ebx)
		je     _0525df_jump

	_0525cf_jump:
		cmpw   $0x000000,0x000040(%ebx)
		jl     _052633_jump
		testb  $0x000008,0x000081(%ebx)
		je     _052633_jump

	_0525df_jump:
		testb  $0x000008,0x000081(%ebx)
		jne    _0525f0_jump
		movw   $0x00fffc,0x000040(%ebx)
		jmp    _0525f6_jump

	_0525f0_jump:
		movw   $0x000004,0x000040(%ebx)

	_0525f6_jump:
		cmp    $0x00000a,%ax
		jle    _052607_jump
		movw   $0x00ffff,0x000042(%ebx)
		jmp    _0526b6_jump

	_052607_jump:
		cwtl   
		cmp    $0xffffffec,%eax
		jge    _052618_jump
		movw   $0x000002,0x000042(%ebx)
		jmp    _0526b6_jump

	_052618_jump:
		cmp    $0xfffffff6,%eax
		jge    _052628_jump
		movw   $0x000001,0x000042(%ebx)
		jmp    _0526b6_jump

	_052628_jump:
		movw   $0x000000,0x000042(%ebx)
		jmp    _0526b6_jump

	_052633_jump:
		cwtl   
		cmp    $0xfffffff6,%eax
		jle    _05264a_jump
		cmpb   $0x000000,_0ce0b1_data
		jne    _05264a_jump
		movw   $0x000000,0x000042(%ebx)
		jmp    _052650_jump

	_05264a_jump:
		movw   $0x000001,0x000042(%ebx)

	_052650_jump:
		cmp    $0x000008,%cx
		jge    _05265f_jump
		testb  $0x000008,0x000081(%ebx)
		je     _05266e_jump

	_05265f_jump:
		cmp    $0x000008,%cx
		jle    _052685_jump
		testb  $0x000008,0x000081(%ebx)
		je     _052685_jump

	_05266e_jump:
		decw   0x000040(%ebx)
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffc,%eax
		jge    _05269a_jump
		movw   $0x00fffc,0x000040(%ebx)
		jmp    _05269a_jump

	_052685_jump:
		mov    0x000040(%ebx),%di
		inc    %edi
		mov    %di,0x000040(%ebx)
		cmp    $0x000004,%di
		jle    _05269a_jump
		movw   $0x000004,0x000040(%ebx)

	_05269a_jump:
		mov    0x000040(%ebx),%si
		test   %si,%si
		jne    _0526b6_jump
		cmp    $0x000008,%cx
		jge    _0526b6_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		mov    %si,0x00004a(%ebx)
		call   _01d434_func

	_0526b6_jump:
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _024f68_func
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _0526e4_jump
		cmpw   $0x000000,0x000040(%ebx)
		jle    _0526db_jump
		mov    $0xffffffff,%eax
		jmp    _0526e0_jump

	_0526db_jump:
		mov    $0x000001,%eax

	_0526e0_jump:
		mov    %ax,0x000040(%ebx)

	_0526e4_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0526f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00006d(%eax),%ah
		xor    %bl,%bl
		test   %ah,%ah
		jne    _052726_jump
		cmpb   $0x000003,0x00006c(%edx)
		jne    _052726_jump
		movw   $0x00fffc,0x000042(%edx)
		mov    0x000081(%edx),%cl
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%cl
		mov    $0x000001,%bl
		mov    %cl,0x000081(%edx)
		jmp    _0527e6_jump

	_052726_jump:
		cmpb   $0x000001,0x00006d(%edx)
		jne    _052732_jump
		cmpb   $0x000002,0x00006c(%edx)
		je     _05275a_jump

	_052732_jump:
		cmpb   $0x000000,0x00006d(%edx)
		jne    _052745_jump
		mov    0x00006c(%edx),%ah
		cmp    $0x000002,%ah
		je     _05275a_jump
		cmp    $0x000004,%ah
		je     _05275a_jump

	_052745_jump:
		mov    0x00006d(%edx),%cl
		cmp    $0x000002,%cl
		jne    _0527e6_jump
		cmp    0x00006c(%edx),%cl
		jne    _0527e6_jump

	_05275a_jump:
		mov    %edx,%eax
		mov    $0x000001,%bl
		call   _01cca0_func
		test   %al,%al
		je     _052773_jump
		movw   $0x000000,0x00004a(%edx)
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_052773_jump:
		cmpb   $0x000002,0x00006d(%edx)
		je     _052786_jump
		mov    %edx,%eax
		call   _0552b4_func
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_052786_jump:
		mov    0x00004a(%edx),%cx
		movw   $0x000000,0x000042(%edx)
		cmp    $0x0001f4,%cx
		jl     _0527e6_jump
		mov    0x00004c(%edx),%eax
		mov    0x000028(%edx),%ecx
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _0527aa_jump
		neg    %eax

	_0527aa_jump:
		cmp    $0x000008,%ax
		jge    _0527cd_jump
		testb  $0x000008,0x000081(%edx)
		jne    _0527c3_jump
		decw   0x000040(%edx)
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0527c3_jump:
		incw   0x000040(%edx)
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0527cd_jump:
		testb  $0x000008,0x000081(%edx)
		jne    _0527dd_jump
		mov    $0x000004,%eax
		jmp    _0527e2_jump

	_0527dd_jump:
		mov    $0xfffffffc,%eax

	_0527e2_jump:
		mov    %ax,0x000040(%edx)

	_0527e6_jump:
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0527ec_switch:
		.long   _0529f8_case
		.long   _052a23_case
		.long   _052a98_case
		.long   _0529f8_case




_0527fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		mov    (%edx),%ebp
		shl    $0x000003,%eax
		add    %eax,%ebp
		mov    %ecx,%eax
		call   _0526f0_func
		test   %al,%al
		jne    _052bfd_jump
		cmpw   $0x0001f4,0x00004a(%ecx)
		jl     _052847_jump
		mov    %ecx,%eax
		call   _052438_func
		jmp    _052bfd_jump

	_052847_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _052857_jump
		cmpb   $0x000007,0x00006c(%ecx)
		je     _052bfd_jump

	_052857_jump:
		mov    0x000070(%ecx),%dh
		test   %dh,%dh
		jne    _052867_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _052873_jump

	_052867_jump:
		cmp    $0x000001,%dh
		jne    _052873_jump
		orb    $0x000008,0x000081(%ecx)

	_052873_jump:
		cmpb   $0x000000,0x00007b(%ecx)
		je     _052b59_jump
		xor    %eax,%eax
		mov    _0ce06c_data,%bx
		mov    _0ce0ac_data,%al
		mov    0x000028(%ecx),%si
		add    %ebx,%eax
		sub    %esi,%eax
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%esi
		movswl %si,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _0528a7_jump
		neg    %eax

	_0528a7_jump:
		sar    %eax
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%ecx),%bx
		mov    0x000069(%ecx),%al
		add    %ebx,%eax
		mov    _0ce070_data,%bx
		sub    %ebx,%eax
		mov    %eax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%ebx
		mov    _0ce0ad_data,%al
		sub    %eax,%ebx
		incw   0x00004a(%ecx)
		mov    %ecx,%eax
		mov    %ebx,0x000008(%esp)
		call   _0522a0_func
		test   %al,%al
		je     _05290c_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _052900_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _052900_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d434_func
		jmp    _052ad5_jump

	_052900_jump:
		mov    %ecx,%eax
		call   _052234_func
		jmp    _052ad5_jump

	_05290c_jump:
		cmpb   $0x000000,_0ce172_data
		jne    _052922_jump
		cmpb   $0x000000,_0ce174_data
		je     _0529de_jump

	_052922_jump:
		mov    %esp,%edx
		mov    %ecx,%eax
		call   _052100_func
		testb  $0x000008,0x000081(%ecx)
		jne    _052958_jump
		movswl %si,%eax
		cmp    $0xfffffff6,%eax
		jge    _052958_jump
		movswl %di,%eax
		mov    -0x000002(%esp),%edx
		neg    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _052979_jump
		mov    _0ce0d0_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jge    _052979_jump

	_052958_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _05299f_jump
		cmp    $0x00000a,%si
		jle    _05299f_jump
		cmp    (%esp),%di
		jg     _052979_jump
		mov    _0ce0d0_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jg     _05299f_jump

	_052979_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _052989_jump
		mov    %ecx,%eax
		call   _052234_func
		jmp    _0529b7_jump

	_052989_jump:
		testb  $0x000004,0x000007(%ebp)
		je     _0529b7_jump
		mov    $0x000009,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		jmp    _0529b7_jump

	_05299f_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0529b7_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _0529b7_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d434_func

	_0529b7_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _0529c8_jump
		movw   $0x00fffd,0x000042(%ecx)

	_0529c8_jump:
		cmpw   $0x000003,0x000042(%ecx)
		jle    _052ad5_jump
		movw   $0x000003,0x000042(%ecx)
		jmp    _052ad5_jump

	_0529de_jump:
		mov    _0ce0b1_data,%al
		cmp    $0x000003,%al
		ja     _052ad5_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_0527ec_switch(,%eax,4)

	_0529f8_case:
		mov    0x00006d(%ecx),%dl
		cmp    $0x000001,%dl
		je     _052a0a_jump
		test   %dl,%dl
		jne    _052a18_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _052a18_jump

	_052a0a_jump:
		mov    $0x000008,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func

	_052a18_jump:
		movw   $0x000000,0x000040(%ecx)
		jmp    _052ad5_jump

	_052a23_case:
		cmpb   $0x000002,0x00006d(%ecx)
		setne  %al
		and    $_0000ff_case,%eax
		je     _052ad5_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _052a41_jump
		cmpb   $0x000009,0x00006c(%ecx)
		je     _052a48_jump

	_052a41_jump:
		mov    $0x000001,%edx
		jmp    _052a4a_jump

	_052a48_jump:
		xor    %edx,%edx

	_052a4a_jump:
		test   %edx,%edx
		je     _052ad5_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _052a5e_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		je     _052a65_jump

	_052a5e_jump:
		mov    $0x000001,%edx
		jmp    _052a67_jump

	_052a65_jump:
		xor    %edx,%edx

	_052a67_jump:
		test   %edx,%edx
		je     _052ad5_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _052a7b_jump
		cmpb   $0x00000b,0x00006c(%ecx)
		je     _052a82_jump

	_052a7b_jump:
		mov    $0x000001,%eax
		jmp    _052a84_jump

	_052a82_jump:
		xor    %eax,%eax

	_052a84_jump:
		test   %eax,%eax
		je     _052ad5_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		jmp    _052ad5_jump

	_052a98_case:
		mov    %ecx,%eax
		call   _052234_func
		test   %al,%al
		je     _052ad5_jump
		cmpw   $0x000000,0x000008(%esp)
		jle    _052ac8_jump
		cmpb   $0x000001,0x000071(%ecx)
		jne    _052ad5_jump
		decw   0x000042(%ecx)
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _052ad5_jump
		movw   $0x00fffd,0x000042(%ecx)
		jmp    _052ad5_jump

	_052ac8_jump:
		cmpw   $0x000001,0x000042(%ecx)
		jle    _052ad5_jump
		movw   $0x000001,0x000042(%ecx)

	_052ad5_jump:
		cmp    $0x000028,%di
		jge    _052b15_jump
		cmpw   $0x00000a,0x000008(%esp)
		jge    _052b15_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _052b15_jump
		testb  $0x000002,0x000007(%ebp)
		je     _052b15_jump
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _052aff_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d43c_func

	_052aff_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _01d434_func
		movw   $0x000001,0x000052(%ecx)
		movb   $0x000000,0x00007f(%ecx)

	_052b15_jump:
		cmpw   $0x000001,0x000052(%ecx)
		jne    _052b2f_jump
		mov    0x00007f(%ecx),%dl
		inc    %dl
		mov    %dl,0x00007f(%ecx)
		cmp    $0x000028,%dl
		jbe    _052b2f_jump
		movw   $0x000000,0x000052(%ecx)

	_052b2f_jump:
		mov    _0cf2ae_data,%eax
		mov    0x00002c(%ecx),%ebx
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000074(%ecx),%dl
		sub    $0x000032,%eax
		add    %ebx,%edx
		cmp    %eax,%edx
		jge    _052b4d_jump
		addw   $0x000002,0x000042(%ecx)

	_052b4d_jump:
		movswl %si,%edx
		mov    %ecx,%eax
		call   _0522c4_func
		jmp    _052bbf_jump

	_052b59_jump:
		mov    0x00006d(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x000002,%dl
		je     _052bbf_jump
		cmp    $0x000001,%dl
		jne    _052b8b_jump
		mov    $0x000008,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _060460_func

	_052b8b_jump:
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01dbe4_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _052bbf_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _060460_func

	_052bbf_jump:
		xor    %eax,%eax
		mov    0x000065(%ecx),%al
		testb  $0x000001,_0924f4_data(%eax)
		je     _052bd3_jump
		movw   $0x000000,0x000042(%ecx)

	_052bd3_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024f68_func
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _052bf0_jump
		movw   $0x000000,0x000040(%ecx)

	_052bf0_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		je     _052bfd_jump
		mov    %ecx,%eax
		call   _025590_func

	_052bfd_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052c08_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x000001,%dx
		jne    _052c46_jump
		call   _01e7ac_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _052c31_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _060460_func
		pop    %ecx
		pop    %ebx
		ret    

	_052c31_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		andb   $0x0000ef,0x000081(%ecx)

	_052c46_jump:
		pop    %ecx
		pop    %ebx
		ret    



_052c4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _052c7e_jump
		cmpb   $0x000003,0x00006c(%ecx)
		jne    _052c7e_jump
		movw   $0x000000,0x000040(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x00fff8,0x000042(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_052c7e_jump:
		mov    %ecx,%eax
		call   _052e38_func
		cmpw   $0x000000,0x00004a(%ecx)
		je     _052cae_jump
		mov    %ecx,%eax
		call   _052234_func
		test   %al,%al
		je     _052cae_jump
		testb  $0x000008,0x000081(%ecx)
		je     _052ca8_jump
		movw   $0x000002,0x000040(%ecx)
		jmp    _052cae_jump

	_052ca8_jump:
		movw   $0x00fffe,0x000040(%ecx)

	_052cae_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		je     _052cea_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01d6f4_func
		test   %ax,%ax
		je     _052cdc_jump
		movw   $0x0001f6,0x00004a(%ecx)
		movw   $0x000000,0x000040(%ecx)

	_052cdc_jump:
		mov    %ecx,%eax
		call   _0552b4_func
		mov    %ecx,%eax
		call   _025590_func

	_052cea_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024f68_func
		mov    0x00006d(%ecx),%bh
		movzbw %al,%si
		cmp    $0x000002,%bh
		jne    _052d3f_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000074(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e1b4_func
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _052d6c_jump
		cmpw   $0x000000,0x000042(%ecx)
		jge    _052d6c_jump
		movw   $0x000001,0x000042(%ecx)
		jmp    _052d6c_jump

	_052d3f_jump:
		xor    %eax,%eax
		mov    0x000066(%ecx),%al
		testb  $0x000002,_0924f4_data(%eax)
		jne    _052d6c_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _060460_func

	_052d6c_jump:
		movswl %si,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _052dcc_jump
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _052d8a_jump
		mov    %ecx,%eax
		call   _01dc88_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_052d8a_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $_0000ff_case,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		and    $0x000001,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    0x000040(%ecx),%si
		mov    %ah,0x000081(%ecx)
		shl    $0x000003,%al
		neg    %esi
		mov    %ah,%dl
		mov    %si,0x000040(%ecx)
		or     %al,%dl
		mov    %dl,0x000081(%ecx)

	_052dcc_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052dd4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x000001,%dx
		jne    _052e34_jump
		mov    _0ce0d0_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _052df5_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _052dfe_jump

	_052df5_jump:
		jge    _052dfe_jump
		orb    $0x000008,0x000081(%ecx)

	_052dfe_jump:
		mov    %ecx,%eax
		call   _01e7ac_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _052e1f_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _060460_func
		pop    %ecx
		pop    %ebx
		ret    

	_052e1f_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		andb   $0x0000ef,0x000081(%ecx)

	_052e34_jump:
		pop    %ecx
		pop    %ebx
		ret    



_052e38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		cmpb   $0x000000,_0ce172_data
		jne    _052e57_jump
		cmpb   $0x000000,_0ce174_data
		je     _052f4e_jump

	_052e57_jump:
		lea    0x000008(%esp),%ecx
		mov    %esp,%ebx
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _07b560_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _052e75_jump
		neg    %eax

	_052e75_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jg     _052f7d_jump
		cmpw   $0x000023,(%esp)
		jge    _052f7d_jump
		cmpb   $0x000001,0x00006d(%esi)
		jne    _052f7d_jump
		testb  $0x000008,0x000081(%esi)
		jne    _052eaa_jump
		cmpw   $0x000000,0x000004(%esp)
		jl     _052ec3_jump

	_052eaa_jump:
		testb  $0x000008,0x000081(%esi)
		je     _052f7d_jump
		cmpw   $0x000000,0x000004(%esp)
		jle    _052f7d_jump

	_052ec3_jump:
		mov    _0ce0d0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _052edc_jump
		mov    $0x000001,%eax
		jg     _052edc_jump
		neg    %eax

	_052edc_jump:
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		neg    %edx
		cmp    $0x000000,%eax
		je     _052ef4_jump
		mov    $0x000001,%eax
		jg     _052ef4_jump
		neg    %eax

	_052ef4_jump:
		cmp    %edx,%eax
		jne    _052f7d_jump
		movw   $0x000000,0x000040(%esi)
		mov    _0ce0b1_data,%al
		movw   $0x000000,0x000042(%esi)
		cmp    $0x000002,%al
		je     _052f19_jump
		movw   $0x0001f5,0x00004a(%esi)
		jmp    _052f7d_jump

	_052f19_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _052f7d_jump
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _052f76_jump

	_052f4e_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _052f7d_jump
		cmpb   $0x00000a,0x00006c(%esi)
		jne    _052f7d_jump
		mov    $0x00000c,%edx
		mov    $0x000001,%ebx
		mov    %esi,%eax
		movw   $0x000000,0x00004a(%esi)
		call   _01d434_func
		mov    $0x000008,%edx

	_052f76_jump:
		mov    %esi,%eax
		call   _060460_func

	_052f7d_jump:
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052f90_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cf24c_data,%ecx
		mov    _0cf248_data,%esi
		sar    $0x000010,%ecx
		sar    $0x000010,%esi
		sar    %ecx
		add    %esi,%ecx
		mov    %ecx,%esi
		mov    _0cf268_data,%ecx
		mov    _0cf24a_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%edi
		sar    %ecx
		add    %edi,%ecx
		mov    %ecx,(%esp)
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		sub    %ecx,%esi
		mov    %si,(%edx)
		testb  $0x000008,0x000081(%eax)
		je     _052fe2_jump
		sub    $0x000030,%esi
		mov    %si,(%edx)
		jmp    _052fea_jump

	_052fe2_jump:
		mov    %esi,%ecx
		add    $0x000030,%ecx
		mov    %cx,(%edx)

	_052fea_jump:
		mov    (%esp),%eax
		sub    $0x000070,%eax
		mov    %ax,(%ebx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_052ffc_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    %ebx,%edi
		lea    0x000004(%esp),%ebx
		mov    %esp,%edx
		call   _052f90_func
		mov    (%esp),%edx
		mov    0x000028(%ecx),%ax
		sub    %eax,%edx
		mov    %dx,(%esp)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05302d_jump
		neg    %eax

	_05302d_jump:
		mov    %ax,(%esp)
		mov    0x000004(%esp),%ebx
		mov    0x00002c(%ecx),%ax
		sub    %eax,%ebx
		mov    %bx,0x000004(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		test   %eax,%eax
		jge    _05304f_jump
		neg    %eax

	_05304f_jump:
		mov    -0x000002(%esp),%ebx
		mov    %si,%dx
		sar    $0x000010,%ebx
		mov    %ax,0x000004(%esp)
		cmp    %edx,%ebx
		jge    _053072_jump
		movswl %ax,%edx
		xor    %eax,%eax
		mov    %di,%ax
		cmp    %eax,%edx
		jge    _053072_jump
		mov    $0x000001,%al
		jmp    _053074_jump

	_053072_jump:
		xor    %al,%al

	_053074_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05307c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		cmpb   $0x000000,_0cf45a_data
		jne    _053140_jump
		mov    _0cf260_data,%ecx
		mov    _0cf2a2_data,%eax
		mov    _0cf25e_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _0530c4_jump
		cmp    %ecx,%eax
		jg     _0530c4_jump
		mov    $0x000001,%eax
		jmp    _0530c6_jump

	_0530c4_jump:
		xor    %eax,%eax

	_0530c6_jump:
		test   %eax,%eax
		je     _053109_jump
		mov    _0cf262_data,%ecx
		mov    _0cf2a4_data,%eax
		mov    _0cf25c_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0cf2ae_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _0530ff_jump
		cmp    %ecx,%eax
		jg     _0530ff_jump
		mov    $0x000001,%eax
		jmp    _053101_jump

	_0530ff_jump:
		xor    %eax,%eax

	_053101_jump:
		test   %eax,%eax
		je     _053109_jump
		mov    $0x000001,%al
		jmp    _05310b_jump

	_053109_jump:
		xor    %al,%al

	_05310b_jump:
		mov    %al,_0cf45a_data
		test   %al,%al
		je     _053177_jump
		mov    _0cf2ae_data,%ax
		mov    %ax,_0cf268_data
		mov    %ax,_0cf25a_data
		mov    _0cf25e_data,%ax
		mov    %ax,_0cf25c_data
		mov    _0cf264_data,%ax
		mov    %ax,_0cf266_data
		jmp    _053177_jump

	_053140_jump:
		mov    _0cf25c_data,%ax
		mov    _0cf2b0_data,%bx
		cmp    %bx,%ax
		jge    _053159_jump
		mov    %bx,_0cf25c_data

	_053159_jump:
		mov    0x00007f(%edx),%bl
		test   %bl,%bl
		je     _053167_jump
		mov    %bl,%bh
		dec    %bh
		mov    %bh,0x00007f(%edx)

	_053167_jump:
		mov    0x00005a(%edx),%cx
		test   %cx,%cx
		je     _053177_jump
		mov    %ecx,%esi
		dec    %esi
		mov    %si,0x00005a(%edx)

	_053177_jump:
		cmpb   $0x000000,_0cf45a_data
		je     _05318d_jump
		cmpb   $0x000000,0x00007f(%edx)
		jne    _05318d_jump
		mov    $0x000001,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05318d_jump:
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053194_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		test   %dl,%dl
		jbe    _0531a6_jump
		cmp    $0x000001,%dl
		je     _0531d1_jump
		jmp    _0531fe_jump

	_0531a6_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0cf258_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dh
		mov    %eax,0x000028(%ebx)
		and    $0x0000f7,%dh
		mov    $0xffffffff,%eax
		mov    %dh,0x000081(%ebx)
		jmp    _053267_jump

	_0531d1_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0cf266_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dl
		mov    %eax,0x000028(%ebx)
		or     $0x000008,%dl
		mov    $0x000001,%eax
		mov    %dl,0x000081(%ebx)
		jmp    _053267_jump

	_0531fe_jump:
		mov    _0cf258_data,%esi
		mov    _0cf266_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		lea    0x000140(%esi,%edi,1),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x000068(%ebx),%cl
		add    %ecx,%ebp
		sub    %eax,%ebp
		mov    %ebp,%eax
		test   %ax,%ax
		jle    _053253_jump
		add    $0x000140,%edi
		sub    %ecx,%edi
		mov    0x000081(%ebx),%ch
		mov    %edi,0x000028(%ebx)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%ebx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_053253_jump:
		sub    %ecx,%esi
		mov    0x000081(%ebx),%cl
		mov    %esi,0x000028(%ebx)
		or     $0x000008,%cl
		mov    %cl,0x000081(%ebx)

	_053267_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_053270_switch:
		.long   _053361_case
		.long   _05335b_case
		.long   _05389d_case
		.long   _053375_case
		.long   _053740_case
		.long   _053a9f_case
		.long   _053aad_case
		.long   _053bc0_case
		.long   _05397c_case
		.long   _05386d_case
		.long   _05349d_case
		.long   _0539e3_case
		.long   _053953_case
		.long   _05392a_case
		.long   _053717_case
		.long   _05368f_case
		.long   _053cd0_case
		.long   _053cd0_case
		.long   _053ddf_case
		.long   _053d89_case
		.long   _05353a_case
		.long   _053832_case
		.long   _0535f7_case
		.long   _0534ce_case
		.long   _053769_case




_0532d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    _0cf258_data,%edx
		mov    _0cf266_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		lea    0x000140(%eax),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edi
		cmpb   $0x000000,_0cf45e_data
		je     _053eae_jump

	_053310_jump:
		xor    %eax,%eax
		mov    _0cf460_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cf461_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096ed0_data(%edx),%edx
		mov    %al,_0cf461_data
		mov    (%edx,%ebx,1),%al
		mov    %al,_0e47b0_data
		xor    %ebx,%ebx
		sub    $0x000002,%al
		mov    %ebx,_0cdfb8_data
		cmp    $0x000018,%al
		ja     _053ea1_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_053270_switch(,%eax,4)

	_05335b_case:
		incb   _0cf460_data

	_053361_case:
		xor    %dl,%dl
		mov    %dl,_0cf461_data
		movb   $0x000001,_0cf45e_data
		jmp    _053ea1_jump

	_053375_case:
		mov    _0cf45b_data,%al
		mov    %al,_0cf460_data
		mov    _0cf459_data,%al
		mov    %al,_0cf461_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cf460_data,%al
		mov    _0cf461_data,%dl
		mov    _096ed0_data(,%eax,4),%eax
		mov    (%edx,%eax,1),%al
		mov    %al,_0e47b0_data
		cmp    $0x00001a,%al
		je     _0533af_jump
		cmp    $0x00000e,%al
		jne    _0533ed_jump

	_0533af_jump:
		mov    _0e47b0_data,%bl
		cmp    $0x00001a,%bl
		je     _0533c3_jump
		cmp    $0x00000e,%bl
		jne    _053481_jump

	_0533c3_jump:
		mov    _0cf461_data,%cl
		xor    %eax,%eax
		xor    %edx,%edx
		inc    %cl
		mov    _0cf460_data,%al
		mov    %cl,%dl
		mov    _096ed0_data(,%eax,4),%eax
		mov    (%edx,%eax,1),%al
		mov    %cl,_0cf461_data
		mov    %al,_0e47b0_data
		jmp    _0533af_jump

	_0533ed_jump:
		cmp    $0x000014,%al
		jne    _053400_jump
		mov    %dl,%dh
		inc    %dh
		mov    %dh,_0cf461_data
		jmp    _053481_jump

	_053400_jump:
		cmp    $0x000012,%al
		je     _053410_jump
		cmp    $0x000013,%al
		je     _053410_jump
		cmp    $0x000015,%al
		jne    _053481_jump

	_053410_jump:
		cmpb   $0x000015,_0e47b0_data
		jne    _05341f_jump
		incb   _0cf461_data

	_05341f_jump:
		mov    _0cf461_data,%dl
		xor    %eax,%eax
		inc    %dl
		mov    _0cf460_data,%al
		mov    %dl,_0cf461_data

	_053434_jump:
		xor    %edx,%edx
		mov    _096ed0_data(,%eax,4),%eax
		mov    _0cf461_data,%dl
		mov    (%edx,%eax,1),%al
		mov    %al,_0e47b0_data
		mov    _0e47b0_data,%ch
		cmp    $0x000015,%ch
		je     _05345b_jump
		cmp    $0x000014,%ch
		jne    _053481_jump

	_05345b_jump:
		cmpb   $0x000015,_0e47b0_data
		jne    _05346a_jump
		incb   _0cf461_data

	_05346a_jump:
		mov    _0cf461_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    _0cf460_data,%al
		mov    %dh,_0cf461_data
		jmp    _053434_jump

	_053481_jump:
		mov    $0x000001,%al
		mov    $_0000ff_case,%ch
		mov    %al,_0cf45e_data
		xor    %ah,%ah
		mov    %ch,_0cf45b_data
		mov    %ah,_0e47b2_data
		jmp    _053ea1_jump

	_05349d_case:
		mov    _0cf461_data,%al
		xor    %cl,%cl
		and    $_0000ff_case,%eax
		mov    %cl,_0cf461_data
		mov    (%edx,%eax,1),%al
		cmp    _0cf460_data,%al
		jne    _0534bc_jump
		inc    %al

	_0534bc_jump:
		mov    %al,_0cf460_data
		xor    %ah,%ah
		mov    %ah,_0cf45e_data
		jmp    _053ea1_jump

	_0534ce_case:
		cmpb   $0x000005,0x000077(%esi)
		jne    _0534e2_jump
		call   _07b8b0_func
		orb    $0x000001,_0cf228_data
		jmp    _05352d_jump

	_0534e2_jump:
		mov    $0xffff8300,%ebx
		mov    _0cf228_data,%dl
		mov    $_0ce044_data,%eax
		or     $0x000002,%dl
		mov    %bx,_0cf256_data
		mov    $0x000007,%ebx
		mov    %dl,_0cf228_data
		mov    $0x000003,%edx
		call   _01d444_func
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		call   _01d2f4_func
		mov    $0x000001,%dh
		inc    %eax
		mov    %dh,_0cf465_data
		mov    %ax,0x000048(%esi)

	_05352d_jump:
		xor    %bh,%bh
		mov    %bh,_0cf45e_data
		jmp    _053ea1_jump

	_05353a_case:
		cmpb   $0x00000c,0x000077(%esi)
		jne    _053553_jump
		mov    $0x000013,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		jmp    _0535cf_jump

	_053553_jump:
		mov    _0cc7a0_data,%eax
		mov    _0cc7a4_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jle    _0535cf_jump

	_053566_jump:
		cmpw   $0x0000ab,0x000060(%eax)
		jne    _0535c4_jump
		mov    (%eax),%edx
		mov    %edx,(%esi)
		mov    0x000004(%eax),%edx
		mov    %edx,0x000004(%esi)
		mov    0x000008(%eax),%edx
		mov    %edx,0x000008(%esi)
		mov    0x00000c(%eax),%edx
		mov    %edx,0x00000c(%esi)
		mov    0x000044(%eax),%dx
		mov    %dx,0x000044(%esi)
		mov    0x00006d(%eax),%dl
		mov    %dl,0x00006d(%esi)
		mov    0x00006c(%eax),%dl
		mov    0x000069(%esi),%bl
		mov    %dl,0x00006c(%esi)
		add    $0x000004,%bl
		mov    0x00006a(%eax),%al
		movb   $0x000000,0x00006b(%esi)
		mov    %bl,0x000069(%esi)
		mov    0x000081(%esi),%bh
		mov    %al,0x00006a(%esi)
		and    $0x0000f7,%bh
		xor    %ecx,%ecx
		mov    %bh,0x000081(%esi)
		mov    %ecx,_0ce068_data
		jmp    _0535cf_jump

	_0535c4_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %dx,%bx
		jl     _053566_jump

	_0535cf_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		mov    0x000048(%esi),%ax
		xor    %cl,%cl
		add    $0x000080,%eax
		mov    %cl,_0cf45e_data
		mov    %ax,0x000048(%esi)
		jmp    _053ea1_jump

	_0535f7_case:
		cmpb   $0x00000c,0x000077(%esi)
		jne    _053601_jump
		subb   $0x000010,0x000069(%esi)

	_053601_jump:
		mov    0x000081(%esi),%al
		and    $0x0000f7,%al
		mov    _0cf25a_data,%dx
		mov    %al,0x000081(%esi)
		xor    %eax,%eax
		add    $0x0000a0,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %dx,_0cf252_data
		mov    _0cf250_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		xor    %eax,%eax
		mov    _0cf212_data,%dx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    $0x000001,%ebx
		mov    %dx,_0cf23c_data
		mov    %esi,%eax
		mov    $0x000002,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _060460_func
		xor    %dl,%dl
		mov    $_0000ff_case,%ah
		mov    %dl,_0cf456_data
		mov    $0x000001,%dh
		mov    %ah,_0cf455_data
		mov    %dh,_0cf45c_data
		mov    %dl,_0cf45e_data
		jmp    _053ea1_jump

	_05368f_case:
		mov    _0cf25a_data,%ax
		xor    %edx,%edx
		add    $0x0000a0,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %ax,_0cf252_data
		mov    _0cf212_data,%ax
		mov    _0cca54_data,%dx
		sub    $0x0000e6,%eax
		add    %edx,%eax
		mov    $0x000006,%ebx
		mov    %ax,_0cf23c_data
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		mov    $_0000ff_case,%ch
		call   _060460_func
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ch,_0cf455_data
		mov    %ch,_0cf456_data
		mov    $_0000ff_case,%ecx
		mov    %ah,_0cf45c_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018670_func
		xor    %dl,%dl
		mov    %dl,_0cf45e_data
		jmp    _053ea1_jump

	_053717_case:
		mov    $0x000005,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		xor    %dh,%dh
		mov    %dh,_0cf45e_data
		jmp    _053ea1_jump

	_053740_case:
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		xor    %ah,%ah
		mov    %ah,_0cf45e_data
		jmp    _053ea1_jump

	_053769_case:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0537a1_jump
		cmpb   $0x000014,0x00006c(%esi)
		jne    _0537a1_jump
		mov    %esi,%eax
		call   _01dbe4_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		xor    %al,%al
		mov    %al,_0cf45e_data
		jmp    _053ea1_jump

	_0537a1_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		mov    %esi,%eax
		call   _01dbe4_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _053ea1_jump
		mov    %dl,%al
		mov    0x000081(%esi),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		xor    %edx,%edx
		shl    $0x000003,%al
		mov    %bh,%cl
		mov    %bh,0x000081(%esi)
		or     %al,%cl
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    %cl,0x000081(%esi)
		call   _01d444_func
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01d2f4_func
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		mov    0x000048(%esi),%dx
		add    %ecx,%edx
		xor    %ch,%ch
		mov    %dx,0x000048(%esi)
		jmp    _053e9b_jump

	_053832_case:
		mov    _0cf25a_data,%dx
		xor    %eax,%eax
		add    $0x0000a0,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		sub    $0x000030,%edx
		mov    _0ce06c_data,%bh
		mov    %dx,_0cf256_data
		test   $0x000001,%bh
		je     _053864_jump
		orb    $0x000001,_0cf256_data
		jmp    _05389d_case

	_053864_jump:
		andb   $0x0000fe,_0cf256_data
		jmp    _05389d_case

	_05386d_case:
		xor    %dl,%dl
		mov    %dl,_0cf45d_data
		mov    _0e47b2_data,%dh
		movb   $0x000003,0x00007e(%esi)
		test   %dh,%dh
		jne    _05388f_jump
		movb   $0x000001,_0cf45e_data
		jmp    _053ea1_jump

	_05388f_jump:
		mov    $0x000004,%bh
		mov    %dl,_0e47b2_data
		mov    %bh,_0e47b0_data

	_05389d_case:
		mov    _0cf25c_data,%dx
		mov    _0cca54_data,%cx
		mov    _0e47b0_data,%bl
		add    %ecx,%edx
		mov    0x000028(%esi),%ax
		sub    $0x000080,%edx
		mov    %ax,_0cf252_data
		mov    %dx,_0cf23c_data
		cmp    $0x000004,%bl
		jne    _0538d6_jump
		mov    $0x000008,%ebx
		jmp    _0538db_jump

	_0538d6_jump:
		mov    $0x000006,%ebx

	_0538db_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $_0000ff_case,%bh
		mov    $0x000001,%ch
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    %bh,_0cf455_data
		mov    %ch,_0cf45c_data
		mov    $_0000ff_case,%ecx
		mov    %bh,_0cf456_data
		mov    %ecx,%ebx
		call   _018670_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _060460_func
		xor    %al,%al
		mov    %al,_0cf45e_data
		jmp    _053ea1_jump

	_05392a_case:
		mov    $0x000014,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		xor    %bl,%bl
		mov    %bl,_0cf45e_data
		jmp    _053ea1_jump

	_053953_case:
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		xor    %bh,%bh
		mov    %bh,_0cf45e_data
		jmp    _053ea1_jump

	_05397c_case:
		mov    %esi,%eax
		call   _01dbe4_func
		mov    0x000081(%esi),%ch
		xor    %edx,%edx
		test   $0x000008,%ch
		sete   %dl
		mov    %esi,%eax
		call   _053194_func
		mov    _0cf25a_data,%eax
		sar    $0x000010,%eax
		sub    $0x000080,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000081(%esi)
		je     _0539cb_jump
		mov    0x000028(%esi),%ecx
		mov    0x000081(%esi),%dl
		sub    $0x000030,%ecx
		and    $0x0000f7,%dl
		mov    %ecx,0x000028(%esi)
		mov    %dl,0x000081(%esi)
		jmp    _0539e3_case

	_0539cb_jump:
		mov    0x000028(%esi),%ebx
		mov    0x000081(%esi),%ah
		add    $0x000030,%ebx
		or     $0x000008,%ah
		mov    %ebx,0x000028(%esi)
		mov    %ah,0x000081(%esi)

	_0539e3_case:
		mov    0x000081(%esi),%al
		mov    $_0cf23c_data,%ebx
		shl    $0x000004,%al
		xor    %dh,%dh
		shr    $0x000007,%al
		mov    %dh,_0e47b1_data
		mov    %al,(%esp)
		mov    %esi,%eax
		mov    $_0cf252_data,%edx
		call   _01dbe4_func
		mov    %esi,%eax
		call   _052f90_func
		mov    $0x000008,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000002,%cl
		call   _01d444_func
		mov    $0x000010,%bl
		mov    $0x000001,%edx
		mov    %cl,_0cf45c_data
		mov    %esi,%eax
		mov    $_0000ff_case,%ecx
		mov    %bl,_0cf455_data
		mov    %bl,_0cf456_data
		mov    %ecx,%ebx
		call   _018670_func
		cmpb   $0x00000d,_0e47b0_data
		jne    _053a5a_jump
		movw   $0x00ffc0,0x000042(%esi)
		jmp    _053a60_jump

	_053a5a_jump:
		movw   $0x000000,0x000040(%esi)

	_053a60_jump:
		mov    (%esp),%al
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%esi)
		shl    $0x000003,%al
		mov    %ah,%dl
		mov    $0x000001,%ebx
		or     %al,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		mov    $0x000002,%edx
		call   _060460_func
		xor    %dh,%dh
		mov    %dh,_0cf45e_data
		jmp    _053ea1_jump

	_053a9f_case:
		mov    $0x00000c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func

	_053aad_case:
		cmpb   $0x000008,_0e47b0_data
		jne    _053ac4_jump
		mov    $0x00000b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func

	_053ac4_jump:
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _053194_func
		test   %ax,%ax
		jle    _053b02_jump
		mov    _0cf25a_data,%dx
		mov    0x000081(%esi),%bl
		xor    %eax,%eax
		and    $0x0000f7,%bl
		mov    0x000068(%esi),%al
		mov    %bl,0x000081(%esi)
		sub    %eax,%edx
		mov    0x000028(%esi),%ebx
		mov    %edx,%eax
		add    $0x000030,%ebx
		sub    $0x000030,%eax
		mov    %ebx,0x000028(%esi)
		jmp    _053b29_jump

	_053b02_jump:
		orb    $0x000008,0x000081(%esi)
		mov    0x000028(%esi),%edx
		sub    $0x000030,%edx
		mov    _0cf268_data,%ax
		mov    %edx,0x000028(%esi)
		xor    %edx,%edx
		add    $0x000140,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		add    $0x000030,%eax

	_053b29_jump:
		mov    %ax,_0cf252_data
		mov    _0cf210_data,%eax
		sar    $0x000010,%eax
		sub    $0x0000e6,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,_0cf23c_data
		xor    %eax,%eax
		mov    _0cf460_data,%al
		mov    $0x000001,%ch
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cf461_data,%al
		mov    %ch,_0cf45c_data
		mov    %al,%bl
		inc    %al
		mov    _096ed0_data(%edx),%edx
		mov    %al,_0cf461_data
		xor    %eax,%eax
		mov    $_0000ff_case,%ecx
		mov    (%edx,%ebx,1),%al
		mov    $_0000ff_case,%bh
		shl    $0x00000a,%eax
		mov    $0x000001,%edx
		mov    %eax,_0cdfb8_data
		mov    %bh,_0cf455_data
		mov    %bh,_0cf456_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018670_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _060460_func
		xor    %al,%al
		mov    %al,_0cf45e_data
		jmp    _053ea1_jump

	_053bc0_case:
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _053194_func
		test   %ax,%ax
		jle    _053c07_jump
		addl   $0x000050,0x000028(%esi)
		xor    %eax,%eax
		mov    _0cf25a_data,%dx
		mov    0x000068(%esi),%al
		mov    0x000081(%esi),%bh
		sub    %eax,%edx
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%esi)
		sub    $0x000050,%eax
		jmp    _053c36_jump

	_053c07_jump:
		mov    _0cf268_data,%ax
		mov    0x000081(%esi),%bl
		mov    0x000028(%esi),%ebp
		xor    %edx,%edx
		or     $0x000008,%bl
		sub    $0x000060,%ebp
		add    $0x000140,%eax
		mov    0x000068(%esi),%dl
		mov    %bl,0x000081(%esi)
		sub    %edx,%eax
		mov    %ebp,0x000028(%esi)
		add    $0x000040,%eax

	_053c36_jump:
		mov    %ax,_0cf252_data
		mov    _0cf210_data,%eax
		sar    $0x000010,%eax
		sub    $0x0000b4,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,_0cf23c_data
		xor    %eax,%eax
		mov    _0cf460_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cf461_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096ed0_data(%edx),%edx
		mov    %al,_0cf461_data
		mov    (%edx,%ebx,1),%al
		mov    $_0000ff_case,%cl
		and    $_0000ff_case,%eax
		mov    $0x000001,%edx
		shl    $0x00000a,%eax
		mov    %cl,_0cf455_data
		mov    %cl,_0cf456_data
		mov    $_0000ff_case,%ecx
		mov    %eax,_0cdfb8_data
		mov    $0x000001,%al
		mov    %ecx,%ebx
		mov    %al,_0cf45c_data
		mov    %esi,%eax
		call   _018670_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _060460_func
		xor    %ah,%ah
		mov    %ah,_0cf45e_data
		jmp    _053ea1_jump

	_053cd0_case:
		mov    _0cf210_data,%eax
		sar    $0x000010,%eax
		sub    $0x000048,%eax
		mov    %eax,0x00002c(%esi)
		cmpb   $0x000013,_0e47b0_data
		jne    _053ceb_jump
		subl   $0x000030,0x00002c(%esi)

	_053ceb_jump:
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _053194_func
		test   %ax,%ax
		jle    _053d10_jump
		andb   $0x0000f7,0x000081(%esi)
		addl   $0x000044,0x000028(%esi)
		mov    0x000028(%esi),%ax
		sub    $0x000018,%eax
		jmp    _053d24_jump

	_053d10_jump:
		orb    $0x000008,0x000081(%esi)
		subl   $0x00004c,0x000028(%esi)
		mov    0x000028(%esi),%ax
		add    $0x000010,%eax

	_053d24_jump:
		mov    %ax,_0cf252_data
		mov    $0x00000e,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $_0000ff_case,%ecx
		call   _01d444_func
		mov    $_0000ff_case,%dh
		mov    0x00002c(%esi),%ax
		mov    $0x000001,%bh
		mov    %ax,_0cf23c_data
		mov    %dh,_0cf455_data
		mov    %dh,_0cf456_data
		mov    %bh,_0cf45c_data
		mov    $0x000001,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018670_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %cl,%cl
		call   _060460_func
		mov    %cl,_0cf45e_data
		jmp    _053ea1_jump

	_053d89_case:
		mov    $0x00000e,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		mov    _0cf461_data,%al
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    _0cf460_data,%dl
		mov    %al,%bl
		inc    %al
		mov    _096ed0_data(,%edx,4),%edx
		mov    %al,_0cf461_data
		mov    (%edx,%ebx,1),%al
		mov    0x000048(%esi),%dx
		xor    %ah,%ah
		imul   %eax,%edx
		mov    %ah,_0cf45e_data
		mov    %dx,0x000048(%esi)
		jmp    _053ea1_jump

	_053ddf_case:
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		movswl %di,%edx
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _053e1a_jump
		mov    0x000081(%esi),%dh
		xor    %eax,%eax
		and    $0x0000f7,%dh
		mov    0x000068(%esi),%al
		mov    %dh,0x000081(%esi)
		mov    _0cf25a_data,%dx
		sub    %eax,%edx
		mov    %edx,%eax
		sub    $0x000038,%eax
		mov    %ax,_0cf252_data
		jmp    _053e47_jump

	_053e1a_jump:
		mov    0x000081(%esi),%dl
		or     $0x000008,%dl
		xor    %eax,%eax
		mov    %dl,0x000081(%esi)
		mov    _0cf268_data,%dx
		mov    0x000068(%esi),%al
		add    $0x000140,%edx
		sub    %eax,%edx
		add    $0x000030,%edx
		mov    %dx,_0cf252_data

	_053e47_jump:
		mov    $0x000004,%ebx
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %ax,_0cf23c_data
		mov    %esi,%eax
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		mov    $0x000001,%cl
		call   _060460_func
		mov    $_0000ff_case,%bl
		mov    $0x000001,%edx
		mov    %cl,_0cf45c_data
		mov    %esi,%eax
		mov    $_0000ff_case,%ecx
		mov    %bl,_0cf455_data
		mov    %bl,_0cf456_data
		mov    %ecx,%ebx
		call   _018670_func
		xor    %ch,%ch

	_053e9b_jump:
		mov    %ch,_0cf45e_data

	_053ea1_jump:
		cmpb   $0x000000,_0cf45e_data
		jne    _053310_jump

	_053eae_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053eb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		mov    0x00006c(%eax),%al
		xor    %ebp,%ebp
		cmp    $0x00000b,%al
		jb     _053eec_jump
		jbe    _053ee0_jump
		cmp    $0x00000c,%al
		jne    _053eec_jump
		mov    $0x000003,%ah
		mov    $0x000033,%dl
		mov    %ah,0x000014(%esp)
		mov    %dl,0x000010(%esp)
		jmp    _053eec_jump

	_053ee0_jump:
		mov    $0x000003,%dh
		mov    $0x000034,%bl
		mov    %dh,0x000014(%esp)
		mov    %bl,0x000010(%esp)

	_053eec_jump:
		mov    _0cc7a0_data,%esi
		mov    _0cc7a4_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jle    _05405b_jump

	_053f04_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000010(%esp),%dl
		mov    0x000060(%esi),%bx
		cmp    %edx,%ebx
		jne    _05404b_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _05404b_jump
		lea    0x000004(%esp),%edx
		lea    0x00000c(%esp),%ecx
		mov    0x000081(%esi),%bh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f3d4_func
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		xor    %edx,%edx
		mov    %edi,%eax
		mov    0x00001c(%esp),%dl
		call   _01d7e0_func
		mov    -0x000002(%esp),%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sar    %edx
		add    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		xor    %edx,%edx
		mov    0x00000a(%esp),%ebx
		mov    0x000074(%esi),%dl
		mov    0x000028(%esi),%ax
		sar    $0x000010,%ebx
		mov    %ax,0x00003c(%esi)
		sub    %edx,%ebx
		mov    %ebx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    0x000010(%esp),%cl
		mov    %ax,0x00003e(%esi)
		cmp    $0x000033,%cl
		jb     _053fcb_jump
		jbe    _053faf_jump
		cmp    $0x000034,%cl
		je     _053fbd_jump
		jmp    _053fcb_jump

	_053faf_jump:
		movw   $0x000001,0x000050(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _053fcb_jump

	_053fbd_jump:
		movw   $0x000003,0x000050(%esi)
		mov    0x000040(%edi),%ax
		mov    %ax,0x000040(%esi)

	_053fcb_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		movw   $0x000000,0x000042(%esi)
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		mov    0x000002(%ebx,%edx,8),%al
		mov    %al,0x00006a(%esi)
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01dc5c_func
		movb   $0x000000,0x000071(%esi)
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		mov    0x000081(%esi),%dl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%dl
		and    $0x000008,%al
		mov    %dl,0x000081(%esi)
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,%bl
		mov    %dh,0x000081(%esi)
		and    $0x0000bf,%bl
		mov    %esi,%ebp
		mov    %bl,0x000081(%esi)
		mov    %ebp,%eax
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05404b_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %cx,%ax
		jl     _053f04_jump

	_05405b_jump:
		mov    %ebp,%eax
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054068_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		movzbw 0x000068(%eax),%di
		add    0x000028(%eax),%di
		mov    0x00006c(%eax),%al
		mov    %di,0x000008(%esp)
		cmp    $0x00000b,%al
		jb     _0540e1_jump
		jbe    _0540c2_jump
		cmp    $0x00000c,%al
		jne    _0540e1_jump
		mov    0x00003e(%esi),%eax
		mov    _0ce082_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		add    %eax,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %di,%edi
		sub    %eax,%edi
		jmp    _0540e1_jump

	_0540c2_jump:
		mov    0x00003e(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %eax,%ebx

	_0540e1_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _0540ea_jump
		neg    %eax

	_0540ea_jump:
		mov    %ax,0x000004(%esp)
		test   %bx,%bx
		jge    _0540f6_jump
		add    %ebx,%edi

	_0540f6_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		mov    _0cf25c_data,%bx
		add    %eax,%edx
		mov    _0cf266_data,%ax
		sub    %ebx,%eax
		mov    _0cf266_data,%ecx
		add    $0x0000c8,%eax
		mov    %dx,0x000010(%esp)
		mov    %ax,(%esp)
		mov    _0cf24c_data,%eax
		mov    _0cf248_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		sar    $0x000010,%ecx
		add    %eax,%edx
		mov    _0cf268_data,%eax
		mov    _0cf24a_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    $0x000130,%ecx
		add    %ebx,%eax
		mov    _0cf258_data,%ebx
		mov    %ax,0x00000c(%esp)
		mov    0x000006(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _05417b_jump
		cmp    %ecx,%eax
		jg     _05417b_jump
		mov    $0x000001,%eax
		jmp    _05417d_jump

	_05417b_jump:
		xor    %eax,%eax

	_05417d_jump:
		test   %eax,%eax
		je     _0541dc_jump
		cmp    %di,%dx
		jl     _0541dc_jump
		mov    0x00000c(%esp),%eax
		cmp    0x000010(%esp),%ax
		jl     _0541dc_jump
		mov    0x000002(%esp),%eax
		movswl %di,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		add    %ebx,%eax
		cmp    %eax,%edx
		jg     _0541dc_jump
		mov    0x00000e(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _0541dc_jump
		mov    %esi,%eax
		mov    $0x000010,%ebx
		call   _053eb8_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d444_func
		subw   $0x000040,_0cf23c_data

	_0541dc_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0541e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		call   _05307c_func
		test   %al,%al
		je     _0543d4_jump
		mov    0x00005a(%esi),%dx
		test   %dx,%dx
		je     _05420b_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x00005a(%esi)

	_05420b_jump:
		mov    _0cf45d_data,%ah
		test   %ah,%ah
		je     _05421f_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0cf45d_data

	_05421f_jump:
		mov    0x000081(%esi),%dh
		test   $0x000001,%dh
		jne    _0543cd_jump
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		jne    _054288_jump
		cmpw   $0x00000e,_096ef8_data
		jne    _054264_jump
		cmpb   $0x00000f,0x00006a(%esi)
		jne    _054264_jump
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)

	_054264_jump:
		mov    $0xffff8300,%ecx
		mov    %cx,_0cf252_data
		mov    %cx,_0cf23c_data
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		jmp    _0543c6_jump

	_054288_jump:
		mov    _0e47b0_data,%al
		cmp    $0x00000a,%al
		jb     _05429c_jump
		jbe    _0542a5_jump
		cmp    $0x00000d,%al
		je     _0542a5_jump
		jmp    _05438d_jump

	_05429c_jump:
		cmp    $0x000004,%al
		je     _0542d6_jump
		jmp    _05438d_jump

	_0542a5_jump:
		mov    $_0cf23c_data,%ebx
		mov    %esi,%eax
		mov    $_0cf252_data,%edx
		call   _01dbe4_func
		mov    %esi,%eax
		call   _052f90_func
		mov    $0x000018,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _052ffc_func
		test   %al,%al
		je     _0542d6_jump
		movb   $0x000001,_0cf45e_data

	_0542d6_jump:
		cmpb   $0x000002,0x000076(%esi)
		jae    _05438d_jump
		cmpb   $0x000000,_0ce172_data
		je     _05438d_jump
		cmpb   $0x000000,_0e47b1_data
		jne    _05438d_jump
		cmpb   $0x000000,_0cf425_data
		jne    _05438d_jump
		cmpb   $0x000000,_0ca8c4_data
		jne    _05438d_jump
		mov    $0x000001,%dl
		xor    %eax,%eax
		mov    %dl,_0e47b1_data
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    0x000069(%esi),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00002c(%esi),%ecx
		mov    _0ce0d0_data,%ebx
		add    %eax,%ecx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%ebx),%dl
		mov    0x000074(%ebx),%al
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		add    0x00002c(%ebx),%eax
		cmp    %eax,%ecx
		jle    _05435f_jump
		addw   $0x000050,0x000042(%esi)
		jmp    _054364_jump

	_05435f_jump:
		subw   $0x000050,0x000042(%esi)

	_054364_jump:
		xor    %edx,%edx
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%dl
		mov    _0ce0d0_data,%eax
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000028(%eax),%ecx
		mov    0x000068(%eax),%bl
		add    %ecx,%ebx
		cmp    %ebx,%edx
		jle    _054388_jump
		addw   $0x000050,0x000040(%esi)
		jmp    _05438d_jump

	_054388_jump:
		subw   $0x000050,0x000040(%esi)

	_05438d_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0cf456_data,%cl
		mov    _0cf455_data,%bl
		mov    _0cf45c_data,%dl
		call   _018670_func
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0543c6_jump
		mov    0x00006c(%esi),%bl
		cmp    $0x00000c,%bl
		je     _0543bf_jump
		cmp    $0x00000b,%bl
		jne    _0543c6_jump

	_0543bf_jump:
		mov    %esi,%eax
		call   _054068_func

	_0543c6_jump:
		mov    %esi,%eax
		call   _018844_func

	_0543cd_jump:
		mov    %esi,%eax
		call   _0532d4_func

	_0543d4_jump:
		xor    %eax,%eax
		mov    0x000081(%esi),%bh
		mov    0x00006a(%esi),%al
		and    $0x0000fe,%bh
		mov    %ax,_096ef8_data
		mov    %bh,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0543f4_switch:
		.long   _05446b_case
		.long   _054471_case
		.long   _054496_case
		.long   _05447e_case
		.long   _054496_case
		.long   _054496_case
		.long   _054496_case
		.long   _054496_case
		.long   _054496_case
		.long   _054496_case
		.long   _054487_case




_054420_func:
		push   %ebx
		push   %edx
		mov    _0cf460_data,%bl
		cmp    $0x000008,%bl
		je     _05443b_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %bl,%al
		mov    _0cf461_data,%dl
		jmp    _05444a_jump

	_05443b_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cf45b_data,%al
		mov    _0cf459_data,%dl

	_05444a_jump:
		mov    _096ed0_data(,%eax,4),%eax
		add    %edx,%eax
		mov    (%eax),%dl
		sub    $0x000002,%dl
		cmp    $0x00000a,%dl
		ja     _054496_case
		and    $_0000ff_case,%edx
		jmp    *%cs:_0543f4_switch(,%edx,4)

	_05446b_case:
		xor    %eax,%eax
		mov    %bl,%al
		jmp    _05448f_jump

	_054471_case:
		xor    %eax,%eax
		mov    %bl,%al
		mov    _096ed4_data(,%eax,4),%eax
		jmp    _054496_case

	_05447e_case:
		xor    %eax,%eax
		mov    _0cf45b_data,%al
		jmp    _05448f_jump

	_054487_case:
		mov    0x000001(%eax),%al
		and    $_0000ff_case,%eax

	_05448f_jump:
		mov    _096ed0_data(,%eax,4),%eax

	_054496_case:
		mov    (%eax),%al
		mov    %bl,_0cf460_data
		pop    %edx
		pop    %ebx
		ret    



_0544a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000008,_0cf460_data
		jne    _0544be_jump
		mov    $_0cf45b_data,%eax
		mov    $_0cf459_data,%ebx
		jmp    _0544c8_jump

	_0544be_jump:
		mov    $_0cf460_data,%eax
		mov    $_0cf461_data,%ebx

	_0544c8_jump:
		mov    (%eax),%cl
		cmpb   $0x00000c,0x000077(%edx)
		jne    _05450c_jump
		mov    0x000076(%edx),%ch
		cmp    $0x000009,%ch
		jbe    _0544dd_jump
		movb   $0x000003,(%eax)
		jmp    _054505_jump

	_0544dd_jump:
		cmp    $0x000007,%ch
		jbe    _0544e7_jump
		movb   $0x000005,(%eax)
		jmp    _054505_jump

	_0544e7_jump:
		cmp    $0x000004,%ch
		jbe    _0544f1_jump
		movb   $0x000006,(%eax)
		jmp    _054505_jump

	_0544f1_jump:
		test   %ch,%ch
		jbe    _0544fa_jump
		movb   $0x000007,(%eax)
		jmp    _054505_jump

	_0544fa_jump:
		xor    %dl,%dl
		movb   $0x000009,(%eax)
		mov    %dl,_0cf45d_data

	_054505_jump:
		cmp    (%eax),%cl
		je     _05450c_jump
		movb   $0x000000,(%ebx)

	_05450c_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054510_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmpb   $0x000000,_0cf45d_data
		jne    _0545f6_jump
		mov    $0x000001,%dl
		mov    %ebx,%eax
		mov    %dl,_0ce173_data
		call   _01e7ac_func
		mov    $_0000ff_case,%dh
		mov    0x000081(%ebx),%cl
		mov    %ebx,%eax
		or     %dl,%cl
		mov    %dh,_0cf45d_data
		mov    %cl,0x000081(%ebx)
		call   _0544a4_func
		call   _054420_func
		cmp    $0x000007,%al
		jb     _054569_jump
		cmp    $0x00000a,%al
		jbe    _054562_jump
		cmp    $0x000012,%al
		jb     _054569_jump
		cmp    $0x000015,%al
		ja     _054569_jump

	_054562_jump:
		movb   $0x000001,_0e47b2_data

	_054569_jump:
		mov    0x000076(%ebx),%al
		test   %al,%al
		je     _0545cb_jump
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    %al,%cl
		mov    0x000077(%ebx),%dl
		add    %edx,%ecx
		lea    0x000000(,%edx,4),%ebx
		sub    %edx,%ebx
		mov    %ebx,%edx
		shl    $0x00000e,%edx
		mov    $0x00000c,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x004000,%eax
		mov    _0cf460_data,%dh
		mov    %eax,_0cdfb0_data
		cmp    $0x000008,%dh
		je     _0545e6_jump
		mov    $0x000008,%bl
		mov    _0cf461_data,%al
		mov    %dh,_0cf45b_data
		mov    %al,_0cf459_data
		mov    %bl,_0cf460_data
		jmp    _0545e6_jump

	_0545cb_jump:
		mov    $0x004000,%edx
		mov    $0x000009,%ah
		mov    %edx,_0cdfb0_data
		mov    $0x000001,%dl
		mov    %ah,_0cf460_data
		mov    %dl,_0cf467_data

	_0545e6_jump:
		xor    %bh,%bh
		mov    $0x000001,%cl
		mov    %bh,_0cf461_data
		mov    %cl,_0cf45e_data

	_0545f6_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0545fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpb   $0x000000,0x000076(%eax)
		jne    _05478e_jump
		mov    0x00007f(%eax),%cl
		cmp    $0x000001,%cl
		jb     _054624_jump
		jbe    _054651_jump
		cmp    $0x000002,%cl
		je     _054694_jump
		jmp    _0546c3_jump

	_054624_jump:
		test   %cl,%cl
		jne    _0546c3_jump
		mov    _0ce06c_data,%dx
		sub    $0x000032,%edx
		mov    %dx,0x00004a(%eax)
		mov    _0ce070_data,%dx
		sub    $0x000050,%edx
		mov    $0x000001,%ebx
		mov    %dx,0x000056(%eax)
		mov    %ebx,%edx
		jmp    _0546c3_jump

	_054651_jump:
		cmpw   $0x000000,_0cf254_data
		jg     _05465f_jump
		movb   $0x000002,0x00007f(%eax)

	_05465f_jump:
		mov    _0cf2ae_data,%dx
		add    0x000050(%eax),%dx
		sub    $0x000064,%edx
		mov    0x000052(%eax),%cx
		mov    %dx,0x00004a(%eax)
		mov    _0cf2b0_data,%dx
		add    %ecx,%edx
		mov    _0cf2a4_data,%bx
		sub    $0x00000a,%edx
		inc    %ebx
		mov    %dx,0x000056(%eax)
		mov    $0x000002,%edx
		jmp    _0546c3_jump

	_054694_jump:
		mov    _0cf2ae_data,%dx
		add    $0x0003e8,%edx
		mov    %dx,0x00004a(%eax)
		mov    _0ce070_data,%dx
		movw   $0x0001f4,0x000050(%eax)
		sub    $0x00007d,%edx
		mov    $0x000003,%ebx
		mov    %dx,0x000056(%eax)
		mov    $0x000001,%edx

	_0546c3_jump:
		mov    _0cf2c4_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _0546db_jump
		cmpb   $0x000002,0x00007f(%eax)
		je     _0546db_jump
		movb   $0x000001,0x00007f(%eax)

	_0546db_jump:
		cmpb   $0x000000,_0cf3f2_data
		je     _05478e_jump
		mov    0x000048(%eax),%ecx
		mov    0x000028(%eax),%esi
		sar    $0x000010,%ecx
		cmp    %esi,%ecx
		jle    _054723_jump
		mov    0x000040(%eax),%di
		inc    %edi
		mov    %di,0x000040(%eax)
		cmp    %di,%bx
		jge    _054707_jump
		mov    %bx,0x000040(%eax)

	_054707_jump:
		mov    0x00003e(%eax),%esi
		mov    0x000028(%eax),%edi
		mov    0x000048(%eax),%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		add    %edi,%esi
		cmp    %ecx,%esi
		jle    _054738_jump
		dec    %ebx
		mov    %bx,0x000040(%eax)
		jmp    _054738_jump

	_054723_jump:
		decw   0x000040(%eax)
		mov    0x00003e(%eax),%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jge    _054738_jump
		movw   $0x00ffff,0x000040(%eax)

	_054738_jump:
		mov    0x000040(%eax),%ebx
		mov    0x00002c(%eax),%ebp
		mov    0x000054(%eax),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		add    %ebp,%ebx
		cmp    %ebx,%esi
		jle    _054761_jump
		mov    0x000042(%eax),%bx
		inc    %ebx
		mov    %bx,0x000042(%eax)
		cmp    %bx,%dx
		jge    _05478e_jump
		mov    %dx,0x000042(%eax)
		jmp    _05478e_jump

	_054761_jump:
		movswl %dx,%ecx
		sub    %ecx,%ebx
		cmp    %ebx,%esi
		jge    _054788_jump
		decw   0x000042(%eax)
		mov    0x000040(%eax),%ebx
		neg    %ecx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jge    _05478e_jump
		mov    %edx,%edi
		mov    %dx,0x000042(%eax)
		neg    %edi
		mov    %di,0x000042(%eax)
		jmp    _05478e_jump

	_054788_jump:
		movw   $0x000000,0x000042(%eax)

	_05478e_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_054798_switch:
		.long   _0547eb_case
		.long   _0547f4_case
		.long   _0547fd_case
		.long   _054806_case
		.long   _05480f_case




_0547ac_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    _0cf26a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpw   $0x0001f4,0x000050(%eax)
		je     _054815_jump
		mov    0x000076(%ebx),%dl
		dec    %dl
		cmp    $0x000004,%dl
		ja     _054815_jump
		and    $_0000ff_case,%edx
		jmp    *%cs:_054798_switch(,%edx,4)

	_0547eb_case:
		movw   $0x000064,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_0547f4_case:
		movw   $0x000000,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_0547fd_case:
		movw   $0x00ffb0,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_054806_case:
		movw   $0x00ff9c,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_05480f_case:
		movw   $0x000000,0x000052(%eax)

	_054815_jump:
		pop    %edx
		pop    %ebx
		ret    



_054818_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		je     _054841_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _054841_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000001,0x000050(%ecx)
		call   _060460_func
		movb   $0x000004,0x000072(%ecx)

	_054841_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054850_func:
		push   %ecx
		push   %edx
		mov    $0x000019,%ecx
		mov    $_0cf3ed_data,%eax
		xor    %edx,%edx
		call   _085150_func
		pop    %edx
		pop    %ecx
		ret    



_054868_func:
		push   %ebx
		push   %edx
		mov    %al,%bl
		xor    %eax,%eax

	_05486e_jump:
		incb   _0cf3ed_data(%eax)
		xor    %edx,%edx
		mov    _0cf3ed_data(%eax),%dl
		cmp    %eax,%edx
		jl     _054888_jump
		xor    %dh,%dh
		mov    %dh,_0cf3ed_data(%eax)

	_054888_jump:
		inc    %eax
		cmp    $0x000019,%eax
		jl     _05486e_jump
		xor    %eax,%eax
		mov    _0cd2c4_data,%edx
		mov    %bl,%al
		add    %eax,%edx
		mov    %edx,_0cd2c4_data
		pop    %edx
		pop    %ebx
		ret    

_0548a4_switch:
		.long   _0548f1_case
		.long   _0549e4_case
		.long   _054ad5_case
		.long   _054bc6_case
		.long   _054cb7_case
		.long   _054da7_case




_0548bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		mov    $0xfffffffe,%edi

	_0548cc_jump:
		movswl %bx,%eax
		mov    %edx,%ecx
		add    %eax,%eax
		dec    %ecx
		add    $_0ca938_data,%eax
		cmp    $0x000005,%cx
		ja     _054e83_jump
		and    $0x00ffff,%ecx
		jmp    *%cs:_0548a4_switch(,%ecx,4)

	_0548f1_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x00001e,(%eax)
		add    $0x000002,%eax
		movw   $0x00002d,(%eax)
		add    $0x000002,%eax
		movw   $0x000023,(%eax)
		add    $0x000002,%eax
		movw   $0x000019,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0548cc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0549e4_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x000028,(%eax)
		add    $0x000002,%eax
		movw   $0x000019,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0548cc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054ad5_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x00002d,(%eax)
		add    $0x000002,%eax
		movw   $0x000014,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0548cc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054bc6_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x000023,(%eax)
		add    $0x000002,%eax
		movw   $0x000032,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0548cc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054cb7_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x000023,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000024(%eax)
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0548cc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054da7_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x00003e(%eax)
		mov    %di,-0x00003c(%eax)
		mov    %di,-0x00003a(%eax)
		mov    %di,-0x000038(%eax)
		mov    %di,-0x000036(%eax)
		mov    %di,-0x000034(%eax)
		mov    %di,-0x000032(%eax)
		mov    %di,-0x000030(%eax)
		mov    %di,-0x00002e(%eax)
		mov    %di,-0x00002c(%eax)
		mov    %di,-0x00002a(%eax)
		mov    %di,-0x000028(%eax)
		mov    %di,-0x000026(%eax)
		mov    %di,-0x000024(%eax)
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)

	_054e83_jump:
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0548cc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054e98_func:
		push   %ebx
		push   %ecx
		cmpl   $0x000000,_0cd2c4_data
		jne    _054ea8_jump
		call   _03c9c0_func

	_054ea8_jump:
		mov    $0x000020,%ebx
		mov    _0cf1da_data,%ecx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    _0cf471_data,%al
		add    $0x000021,%ecx
		cmp    %ebx,%eax
		jl     _054ecf_jump
		cmp    %ecx,%eax
		jg     _054ecf_jump
		mov    $0x000001,%eax
		jmp    _054ed1_jump

	_054ecf_jump:
		xor    %eax,%eax

	_054ed1_jump:
		test   %eax,%eax
		je     _054ee3_jump
		cmpb   $0x000041,_0cf478_data
		jne    _054ee3_jump
		call   _03c9e8_func

	_054ee3_jump:
		testb  $0x000040,_0cf478_data
		jne    _054ef1_jump
		call   _03c998_func

	_054ef1_jump:
		pop    %ecx
		pop    %ebx
		ret    



_054ef4_func:
		push   %ecx
		cwtl   
		mov    $0x000007,%cl
		mov    _094bcc_data(,%eax,2),%ax
		test   %ax,%ax
		js     _054f0a_jump
		sar    %cl,%ax
		jmp    _054f13_jump

	_054f0a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_054f13_jump:
		pop    %ecx
		ret    



_054f18_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpw   $0x000000,_0cf242_data
		je     _054f5b_jump
		mov    _0cf240_data,%eax
		sar    $0x000010,%eax
		call   _054ef4_func
		mov    _0cf242_data,%bx
		inc    %ebx
		mov    %eax,%edx
		mov    %bx,_0cf242_data
		cmp    $_0000ff_case,%ax
		jne    _054f54_jump
		xor    %ecx,%ecx
		xor    %eax,%edx
		mov    %cx,_0cf242_data

	_054f54_jump:
		add    %dx,_0cf2b0_data

	_054f5b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054f60_func:
		push   %ebx
		push   %edx
		mov    _0cf23e_data,%dx
		movswl %dx,%eax
		mov    _094c4a_data(,%eax,2),%ax
		cmp    $_0000ff_case,%ax
		je     _054f8d_jump
		mov    _0cf2b0_data,%bx
		add    %eax,%ebx
		inc    %edx
		mov    %bx,_0cf2b0_data
		jmp    _054f8f_jump

	_054f8d_jump:
		xor    %edx,%edx

	_054f8f_jump:
		mov    %dx,_0cf23e_data
		pop    %edx
		pop    %ebx
		ret    



_054f9c_func:
		push   %ebx
		push   %edx
		mov    _0cf240_data,%dx
		movswl %dx,%eax
		mov    _094c4a_data(,%eax,2),%ax
		cmp    $_0000ff_case,%ax
		je     _054fc9_jump
		mov    _0cf2ae_data,%bx
		add    %eax,%ebx
		inc    %edx
		mov    %bx,_0cf2ae_data
		jmp    _054fcb_jump

	_054fc9_jump:
		xor    %edx,%edx

	_054fcb_jump:
		mov    %dx,_0cf240_data
		pop    %edx
		pop    %ebx
		ret    



_054fd8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    _0cf2b0_data,%cx
		mov    _0cf2ae_data,%si
		mov    %eax,%ebx
		cmpw   $_0000ff_case,(%edx)
		jne    _054ff8_jump
		movw   $0x000000,(%edx)

	_054ff8_jump:
		cmpw   $0x000006,_0cf282_data
		jne    _055011_jump
		cmpw   $0x000004,_0cf270_data
		jne    _055011_jump
		movw   $0x000000,(%ebx)

	_055011_jump:
		cmpw   $0x000005,_0cf282_data
		jne    _05502a_jump
		cmpw   $0x00000b,_0cf270_data
		jne    _05502a_jump
		movw   $0x000000,(%ebx)

	_05502a_jump:
		mov    _0cf282_data,%ax
		mov    %cx,_0cf2b0_data
		mov    %si,_0cf2ae_data
		cmp    $0x000005,%ax
		jne    _055058_jump
		cmpw   $0x000003,_0cf270_data
		jne    _055058_jump
		movw   $0x000000,(%ebx)
		movw   $0x000000,(%edx)

	_055058_jump:
		call   _054f18_func
		cmpw   $0x000000,_0cf240_data
		jle    _05506c_jump
		call   _054f9c_func

	_05506c_jump:
		cmpw   $0x000000,_0cf23e_data
		jle    _05507b_jump
		call   _054f60_func

	_05507b_jump:
		mov    _0cf2b0_data,%cx
		mov    (%edx),%ax
		mov    _0cf2ae_data,%si
		add    %eax,%ecx
		mov    (%ebx),%ax
		mov    _0cf25a_data,%di
		add    %eax,%esi
		cmp    %di,%si
		jge    _0550b3_jump
		mov    %edi,%eax
		sub    %esi,%eax
		add    %ax,(%ebx)
		mov    %edi,%esi
		xor    %edi,%edi
		mov    %di,_0924d8_data
		jmp    _0550d5_jump

	_0550b3_jump:
		mov    _0cf268_data,%di
		cmp    %di,%si
		jle    _0550d5_jump
		mov    %esi,%eax
		mov    %edi,%esi
		sub    %edi,%eax
		mov    (%ebx),%di
		sub    %eax,%edi
		xor    %eax,%eax
		mov    %di,(%ebx)
		mov    %ax,_0924d8_data

	_0550d5_jump:
		mov    _0cf25c_data,%bx
		cmp    %bx,%cx
		jge    _0550ff_jump
		mov    %ebx,%eax
		xor    %edi,%edi
		mov    (%edx),%bx
		sub    %ecx,%eax
		mov    %di,_0924da_data
		add    %eax,%ebx
		mov    _0cf25c_data,%cx
		mov    %bx,(%edx)
		jmp    _055122_jump

	_0550ff_jump:
		mov    _0cf266_data,%di
		cmp    %di,%cx
		jle    _055122_jump
		mov    %ecx,%eax
		mov    (%edx),%cx
		sub    %edi,%eax
		sub    %eax,%ecx
		mov    %cx,(%edx)
		mov    %edi,%ecx
		xor    %edi,%edi
		mov    %di,_0924da_data

	_055122_jump:
		mov    $_0ce044_data,%eax
		mov    %cx,_0cf2b0_data
		mov    %si,_0cf2ae_data
		call   _01dc5c_func
		mov    _0cf2b0_data,%cx
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_055148_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edi
		xor    %esi,%esi

	_055151_jump:
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _05521b_jump

	_055169_jump:
		cmpw   $0x0000d0,0x000060(%ecx)
		jne    _05520b_jump
		mov    0x000024(%ecx),%ebx
		test   %ebx,%ebx
		jne    _05520b_jump
		mov    0x000081(%ecx),%ah
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01f3d4_func
		movw   $0x000000,0x00005e(%ecx)
		mov    %ecx,%eax
		mov    %ebx,0x000030(%ecx)
		test   %si,%si
		setne  %bl
		call   _01d444_func
		xor    %ebx,%ebx
		mov    0x000028(%edi),%eax
		mov    0x000068(%edi),%bl
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    0x000069(%edi),%bl
		mov    0x00002c(%edi),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		sub    %ebx,%eax
		mov    %eax,0x00002c(%ecx)
		test   %si,%si
		je     _0551e9_jump
		mov    $0x000002,%ebx
		jmp    _0551ee_jump

	_0551e9_jump:
		mov    $0x000007,%ebx

	_0551ee_jump:
		mov    %ecx,%eax
		mov    %bl,0x00007e(%ecx)
		call   _01dc5c_func
		add    $0x000002,%esi
		cmp    $0x000002,%si
		jle    _055151_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05520b_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _055169_jump

	_05521b_jump:
		add    $0x000002,%esi
		cmp    $0x000002,%si
		jle    _055151_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055230_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edx
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _055244_jump
		sar    %cl,%ax
		jmp    _05524d_jump

	_055244_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05524d_jump:
		movswl %dx,%edx
		movswl %ax,%ebx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _05525b_jump
		neg    %eax

	_05525b_jump:
		mov    %eax,%esi
		and    $0x00000f,%esi
		je     _0552aa_jump
		mov    _0cd2c4_data,%edi
		imul   %esi,%edi
		mov    $0x000004,%cl
		mov    %edi,%eax
		test   %eax,%eax
		je     _055277_jump
		sar    %cl,%eax
		jmp    _05527d_jump

	_055277_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_05527d_jump:
		mov    %eax,%ebp
		mov    %edi,%eax
		mov    $0x000004,%cl
		sub    %esi,%eax
		test   %eax,%eax
		je     _05528d_jump
		sar    %cl,%eax
		jmp    _055293_jump

	_05528d_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_055293_jump:
		sub    %eax,%ebp
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _0552a5_jump
		mov    $0x000001,%eax
		jg     _0552a5_jump
		neg    %eax

	_0552a5_jump:
		imul   %ebp,%eax
		add    %eax,%ebx

	_0552aa_jump:
		mov    %ebx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0552b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ecx,%ecx
		mov    0x00006a(%eax),%cl
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    0x000004(%edx),%ecx
		mov    0x000008(%ecx,%eax,4),%ax
		xor    %al,%al
		and    $0x0000c0,%ah
		and    $0x00ffff,%eax
		sar    $0x00000e,%eax
		xor    %ecx,%ecx
		inc    %eax
		mov    %al,%cl
		cmpb   $0x000000,_0cf3ed_data(%ecx)
		jne    _055337_jump
		xor    %ecx,%ecx
		mov    0x00006d(%edx),%cl
		mov    0x000081(%edx),%ah
		lea    0x000000(,%ecx,4),%esi
		shl    $0x000004,%ah
		mov    0x00000c(%edx),%ecx
		add    %esi,%ecx
		movzbl 0x00006c(%edx),%esi
		mov    (%ecx),%ecx
		shl    $0x000003,%esi
		shr    $0x000007,%ah
		add    %esi,%ecx
		test   %ah,%ah
		jbe    _05531e_jump
		cmp    $0x000001,%ah
		je     _05532a_jump
		jmp    _055339_jump

	_05531e_jump:
		movsbw 0x000001(%ecx),%bx
		xor    %ah,%ah
		imul   %eax,%ebx
		jmp    _055339_jump

	_05532a_jump:
		xor    %ebx,%ebx
		movsbw (%ecx),%cx
		mov    %al,%bl
		imul   %ecx,%ebx
		jmp    _055339_jump

	_055337_jump:
		xor    %ebx,%ebx

	_055339_jump:
		cmpw   $0x000017,0x000060(%edx)
		jne    _055362_jump
		testb  $0x000002,_0cf221_data
		je     _055362_jump
		mov    $0x000001,%cl
		mov    %ebx,%eax
		test   %ax,%ax
		js     _055357_jump
		sar    %cl,%ax
		jmp    _055360_jump

	_055357_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_055360_jump:
		mov    %eax,%ebx

	_055362_jump:
		mov    %bx,0x000040(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_05536a_jump:
		ret    



_05536c_func:
		movl   $0x000001,0x000024(%eax)
		movl   $0x000001,0x00001c(%eax)
		movl   $0x000000,0x000030(%eax)
		test   %dl,%dl
		je     _05536a_jump
		jmp    _07af48_func



_05538c_func:
		testb  $0x000004,0x000081(%eax)
		je     _05536a_jump
		movl   $0x000001,0x000024(%eax)
		movl   $0x000001,0x00001c(%eax)
		movl   $0x000000,0x000030(%eax)
		test   %dl,%dl
		je     _05536a_jump
		jmp    _07af48_func



_0553b4_func:
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dx,0x000008(%esp)
		mov    %ebx,%edi
		mov    %cl,0x000010(%esp)
		xor    %edx,%edx
		mov    _0e47b4_data,%dx
		xor    %ecx,%ecx
		mov    _092b5a_data(,%edx,2),%ax
		mov    _09294e_data(,%edx,2),%bx
		mov    %ax,0x000004(%esp)
		mov    0x000068(%edi),%al
		shl    $0x000002,%edx
		mov    %al,0x00000c(%esp)
		mov    _092534_data(%edx),%ah
		mov    %bx,(%esp)
		test   $0x000010,%ah
		je     _0555cd_jump
		test   $0x000080,%ah
		je     _05541b_jump
		cmpb   $0x000000,_0cf488_data
		je     _05541b_jump

	_055411_jump:
		mov    $0x000001,%ecx
		jmp    _0555cd_jump

	_05541b_jump:
		mov    _0e47b4_data,%ax
		cmp    $0x00009d,%ax
		jb     _05548b_jump
		jbe    _055583_jump
		cmp    $0x0000d7,%ax
		jb     _05545f_jump
		jbe    _055411_jump
		cmp    $0x0000dc,%ax
		jb     _055450_jump
		jbe    _055505_jump
		cmp    $0x0000f4,%ax
		je     _0555c8_jump
		jmp    _0555cd_jump

	_055450_jump:
		cmp    $0x0000db,%ax
		je     _05555f_jump
		jmp    _0555cd_jump

	_05545f_jump:
		cmp    $0x0000c0,%ax
		jb     _055480_jump
		jbe    _0555c8_jump
		cmp    $0x0000cc,%ax
		jb     _0555cd_jump
		cmp    $0x0000cd,%ax
		jbe    _055411_jump
		jmp    _0555cd_jump

	_055480_jump:
		cmp    $0x0000be,%ax
		je     _055411_jump
		jmp    _0555cd_jump

	_05548b_jump:
		cmp    $0x000078,%ax
		jb     _0554c1_jump
		jbe    _055411_jump
		cmp    $0x00008f,%ax
		jb     _0554b2_jump
		jbe    _055411_jump
		cmp    $0x000099,%ax
		je     _055411_jump
		jmp    _0555cd_jump

	_0554b2_jump:
		cmp    $0x00007a,%ax
		je     _05559b_jump
		jmp    _0555cd_jump

	_0554c1_jump:
		cmp    $0x00005e,%ax
		jb     _0554d8_jump
		jbe    _055411_jump
		cmp    $0x000061,%ax
		je     _0554e2_jump
		jmp    _0555cd_jump

	_0554d8_jump:
		cmp    $0x00000a,%ax
		jne    _0555cd_jump

	_0554e2_jump:
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _0555cd_jump
		cmp    $0x0001bc,%si
		jge    _0555cd_jump
		mov    $0x000001,%ecx
		jmp    _0555cd_jump

	_055505_jump:
		mov    0x000006(%esp),%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		cmp    $0xffffffce,%eax
		jle    _05555f_jump
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _05555f_jump
		cmp    $0x0001f4,%si
		jge    _05555f_jump
		mov    _0cf282_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpb   $0x000000,0x000076(%eax)
		jne    _05555f_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movb   $0x00000a,0x000076(%eax)
		call   _01d444_func

	_05555f_jump:
		mov    _0cf282_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		cmpb   $0x000000,0x000076(%edx,%eax,4)
		jbe    _0555cd_jump
		mov    $0x000001,%ecx
		jmp    _0555cd_jump

	_055583_jump:
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _0555cd_jump
		cmp    $0x0001f4,%si
		jge    _0555cd_jump
		mov    $0x000001,%ecx
		jmp    _0555cd_jump

	_05559b_jump:
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _0555cd_jump
		cmp    $0x0001bc,%si
		jge    _0555cd_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff9c,%eax
		jle    _0555cd_jump
		cmpw   $0x0000fa,0x000008(%esp)
		jge    _0555cd_jump
		mov    $0x000001,%ecx
		jmp    _0555cd_jump

	_0555c8_jump:
		movb   $0x000080,0x00000c(%esp)

	_0555cd_jump:
		test   %cx,%cx
		jne    _055681_jump
		cmpb   $0x000000,0x000010(%esp)
		je     _0555f3_jump
		mov    (%esp),%ebx
		mov    0x000004(%esp),%ecx
		add    $0x00003c,%ebx
		add    $0x00003c,%ecx
		mov    %bx,(%esp)
		mov    %cx,0x000004(%esp)

	_0555f3_jump:
		mov    -0x000002(%esp),%eax
		mov    $0xfffffee4,%ebx
		sar    $0x000010,%eax
		movswl %si,%edx
		sub    %eax,%ebx
		cmp    %ebx,%edx
		jl     _055678_jump
		add    $0x0001bc,%eax
		cmp    %eax,%edx
		jg     _055678_jump
		mov    0x000002(%esp),%eax
		mov    $0xffffff70,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %eax,%ebx
		cmp    %ebx,%edx
		jl     _055678_jump
		add    $0x000130,%eax
		cmp    %eax,%edx
		jg     _055678_jump
		xor    %eax,%eax
		mov    0x00002c(%edi),%edx
		mov    0x000069(%edi),%al
		add    %edx,%eax
		cmp    $0xffffffe2,%eax
		jl     _055678_jump
		mov    _0ce038_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		add    $0x00001e,%eax
		cmp    %edx,%eax
		jl     _055678_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		mov    0x000028(%edi),%ecx
		add    %eax,%eax
		add    %ecx,%eax
		test   %eax,%eax
		jl     _055678_jump
		mov    _0ce036_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ecx,%eax
		jge    _05567c_jump

	_055678_jump:
		xor    %ecx,%ecx
		jmp    _055681_jump

	_05567c_jump:
		mov    $0x000001,%ecx

	_055681_jump:
		cmp    $0x000001,%cx
		jne    _0556ce_jump
		xor    %eax,%eax
		mov    _0e47b4_data,%ax
		testb  $0x000080,_092534_data(,%eax,4)
		je     _0556ce_jump
		mov    $0x000001,%dh
		mov    _0cf462_data,%bl
		mov    %dh,_0cf488_data
		test   %bl,%bl
		jne    _0556ba_jump
		cmpb   $0x000000,0x000076(%edi)
		je     _0556ba_jump
		cmpb   $0x000000,_0cf45a_data
		jne    _0556c9_jump

	_0556ba_jump:
		cmpb   $0x000000,_0cf462_data
		je     _0556ce_jump
		cmpb   $0x000000,0x000076(%edi)
		jne    _0556ce_jump

	_0556c9_jump:
		call   _01f390_func

	_0556ce_jump:
		cmp    $0x000001,%cx
		sete   %al
		xor    %ah,%ah
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		ret    



_0556e0_func:
		push   %edx
		movl   $0xffff8300,0x000028(%eax)
		movl   $0xffff8300,0x00002c(%eax)
		mov    0x000081(%eax),%dl
		movl   $0x000001,0x000030(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    



_055708_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %ebx,%esi
		mov    0x000060(%ebx),%bx
		mov    %bx,_0e47b4_data
		mov    0x000024(%esi),%bl
		mov    %bl,(%esp)
		mov    0x000081(%esi),%bl
		movl   $0x000000,0x000024(%esi)
		test   $0x000004,%bl
		je     _055969_jump
		movswl %dx,%edx
		cwtl   
		xor    %ecx,%ecx
		mov    %esi,%ebx
		mov    (%esp),%cl
		call   _0553b4_func
		test   %ax,%ax
		je     _055851_jump
		cmpw   $0x000000,0x00005e(%esi)
		jne    _055835_jump
		xor    %eax,%eax
		mov    _0e47b4_data,%ax
		testb  $0x000001,_092535_data(,%eax,4)
		jne    _055786_jump
		mov    0x000030(%esi),%edx
		cmp    $0x000002,%edx
		jl     _055786_jump
		je     _055835_jump
		cmp    $0x00000a,%ax
		jne    _055835_jump

	_055786_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		mov    %eax,0x000024(%esi)
		xor    %eax,%eax
		mov    _0e47b4_data,%ax
		shl    $0x000002,%eax
		testb  $0x000001,_092534_data(%eax)
		jne    _0557ab_jump
		testb  $0x000040,_092537_data(%eax)
		je     _0557d9_jump

	_0557ab_jump:
		cmpl   $0x000000,0x000024(%esi)
		jne    _0557c7_jump
		xor    %eax,%eax
		mov    _0e47b4_data,%ax
		testb  $0x000001,_092535_data(,%eax,4)
		je     _0557c7_jump
		mov    $0x000001,%al
		jmp    _0557c9_jump

	_0557c7_jump:
		xor    %al,%al

	_0557c9_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _05536c_func
		jmp    _055969_jump

	_0557d9_jump:
		mov    0x000034(%esi),%ax
		xor    %ecx,%ecx

	_0557df_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%ebx
		add    %eax,%ebx
		cmp    0x000024(%ebx),%ecx
		jne    _055807_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000001,_092535_data(,%eax,4)
		je     _055807_jump
		mov    $0x000001,%al
		jmp    _055809_jump

	_055807_jump:
		mov    %cl,%al

	_055809_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebx,%eax
		call   _05538c_func
		mov    0x000032(%ebx),%eax
		mov    _0ce8d4_data,%edx
		sar    $0x000010,%eax
		mov    0x000034(%esi),%di
		mov    (%edx,%eax,2),%ax
		cmp    %di,%ax
		jne    _0557df_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_055835_jump:
		mov    0x00005e(%esi),%di
		test   %di,%di
		jle    _055969_jump
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x00005e(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_055851_jump:
		mov    0x000030(%esi),%ax
		cmp    $0x000001,%ax
		je     _055969_jump
		xor    %edx,%edx
		mov    _0e47b4_data,%dx
		movw   $0x000000,0x00005e(%esi)
		testb  $0x000020,_092536_data(,%edx,4)
		je     _055887_jump
		mov    %esi,%eax
		call   _0556e0_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_055887_jump:
		cmp    $0x000002,%ax
		jne    _05589c_jump
		movl   $0x000001,0x000030(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05589c_jump:
		test   %ax,%ax
		je     _0558ab_jump
		cmp    $0x000004,%ax
		jne    _055969_jump

	_0558ab_jump:
		xor    %eax,%eax
		mov    _0e47b4_data,%ax
		testb  $0x000001,_092534_data(,%eax,4)
		je     _0558cc_jump
		mov    %esi,%eax
		call   _05f4cc_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0558cc_jump:
		movl   $0x000004,0x000030(%esi)
		mov    _0e47b4_data,%dx
		mov    0x000034(%esi),%ax
		movl   $0x000001,0x000024(%esi)
		xor    %bl,%bl
		cmp    $0x00000a,%dx
		je     _05591c_jump

	_0558ed_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%edx
		add    %edx,%eax
		cmpl   $0x000004,0x000030(%eax)
		je     _055906_jump
		mov    $0x000001,%bl
		jmp    _05591c_jump

	_055906_jump:
		mov    0x000032(%eax),%eax
		mov    _0ce8d4_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%esi),%ax
		jne    _0558ed_jump

	_05591c_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%al
		add    %ebp,%eax
		cmp    $0xffffffe2,%eax
		jge    _055932_jump
		movl   $0x000000,0x000024(%esi)

	_055932_jump:
		test   %bl,%bl
		jne    _055969_jump
		mov    0x000034(%esi),%ax

	_05593a_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%ebx
		add    %eax,%ebx
		mov    %ebx,%eax
		call   _05f4cc_func
		mov    0x000032(%ebx),%eax
		mov    _0ce8d4_data,%edx
		sar    $0x000010,%eax
		mov    0x000034(%esi),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _05593a_jump

	_055969_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_055974_switch:
		.long   _055a37_case
		.long   _055a4d_case
		.long   _055a63_case
		.long   _055a84_case
		.long   _055a9f_case
		.long   _055a1e_case
		.long   _055ae1_case
		.long   _055ae1_case
		.long   _055ae1_case
		.long   _055aac_case
		.long   _055ac6_case




_0559a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ecx,%ecx
		mov    0x00006d(%edx),%cl
		mov    0x00000c(%edx),%esi
		shl    $0x000002,%ecx
		add    %esi,%ecx
		movzbl 0x00006c(%edx),%esi
		mov    (%ecx),%ecx
		mov    0x000005(%ecx,%esi,8),%cl
		xor    %ebx,%ebx
		shr    $0x000004,%cl
		xor    %eax,%eax
		test   %cl,%cl
		je     _055afa_jump
		mov    0x000060(%edx),%si
		cmp    $0x000057,%si
		je     _0559dc_jump
		cmp    $0x000058,%si
		jne    _055a05_jump

	_0559dc_jump:
		mov    0x00007d(%edx),%cl
		test   %cl,%cl
		jbe    _0559ed_jump
		dec    %cl
		mov    %cl,0x00007d(%edx)
		jmp    _055ae1_case

	_0559ed_jump:
		cmpb   $0x000000,0x000071(%edx)
		jne    _055ae1_case
		mov    $0x000001,%ebx
		add    %bx,0x000042(%edx)
		jmp    _055ae1_case

	_055a05_jump:
		dec    %cl
		cmp    $0x00000a,%cl
		ja     _055ae1_case
		and    $_0000ff_case,%ecx
		jmp    *%cs:_055974_switch(,%ecx,4)

	_055a1e_case:
		cmpb   $0x000000,_0cf3ef_data
		jne    _055ae1_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _055ae1_case

	_055a37_case:
		cmpb   $0x000000,0x000071(%edx)
		jne    _055ae1_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _055ae1_case

	_055a4d_case:
		cmpb   $0x000000,0x000072(%edx)
		jne    _055ae1_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _055ae1_case

	_055a63_case:
		mov    0x000042(%edx),%cx
		cmp    $0x000001,%cx
		jge    _055a77_jump
		mov    $0x000001,%eax
		jmp    _055ae1_case

	_055a77_jump:
		jle    _055ae1_case
		mov    $0xffffffff,%eax
		jmp    _055ae1_case

	_055a84_case:
		mov    0x000040(%edx),%ecx
		sar    $0x000010,%ecx
		cmp    $0xfffffffe,%ecx
		jle    _055a96_jump
		mov    $0xffffffff,%eax
		jmp    _055ae1_case

	_055a96_jump:
		jge    _055ae1_case
		mov    $0x000001,%eax
		jmp    _055ae1_case

	_055a9f_case:
		cmpb   $0x000000,0x000071(%edx)
		jne    _055ae1_case
		mov    $0xffffffff,%eax
		jmp    _055ae1_case

	_055aac_case:
		mov    0x000071(%edx),%cl
		inc    %cl
		mov    %cl,0x000071(%edx)
		cmp    0x000072(%edx),%cl
		jb     _055ae1_case
		mov    $0x000001,%eax
		movb   $0x000000,0x000071(%edx)
		mov    %eax,%ebx
		jmp    _055ae1_case

	_055ac6_case:
		mov    0x000071(%edx),%cl
		inc    %cl
		mov    %cl,0x000071(%edx)
		cmp    0x000072(%edx),%cl
		jb     _055ae1_case
		mov    $0xffffffff,%eax
		mov    $0x000001,%ebx
		movb   $0x000000,0x000071(%edx)

	_055ae1_case:
		xor    %ecx,%ecx
		mov    0x000060(%edx),%cx
		testb  $0x000020,_092535_data(,%ecx,4)
		je     _055af6_jump
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax

	_055af6_jump:
		add    %ax,0x000042(%edx)

	_055afa_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055b04_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%ecx),%ebx
		mov    0x00000a(%ebx,%eax,4),%ax
		dec    %eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%ecx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%ebx,%eax,8)
		je     _055b61_jump
		xor    %ebx,%ebx
		mov    -0x000002(%esp),%eax
		mov    %dl,%bl
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _055b56_jump
		mov    %ebx,%eax

	_055b56_jump:
		mov    (%esp),%ah
		sub    %al,%ah
		mov    %ah,%al
		inc    %al
		jmp    _055b72_jump

	_055b61_jump:
		xor    %ebx,%ebx
		mov    -0x000002(%esp),%eax
		mov    %dl,%bl
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _055b72_jump
		mov    %ebx,%eax

	_055b72_jump:
		mov    %al,0x00006b(%ecx)
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_055b7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		mov    %eax,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    (%edx),%ebx
		shl    $0x000003,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		lea    0x000000(,%eax,4),%edi
		sub    %eax,%edi
		mov    0x000004(%esi),%ebp
		shl    $0x000002,%edi
		mov    0x000005(%ebx),%al
		add    %edi,%ebp
		and    $0x00000f,%al
		je     _055bf3_jump
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _055bf3_jump
		mov    0x000007(%ebx),%al
		shl    $0x000003,%al
		shr    $0x000007,%al
		test   %al,%al
		jne    _055bf0_jump
		incb   0x00006b(%esi)
		jmp    _055bf3_jump

	_055bf0_jump:
		decb   0x00006b(%esi)

	_055bf3_jump:
		mov    0x000002(%ebx),%al
		mov    %al,0x00006a(%esi)
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		lea    0x000000(,%eax,4),%edi
		sub    %eax,%edi
		shl    $0x000002,%edi
		mov    0x000004(%esi),%eax
		add    %eax,%edi
		mov    0x000073(%esi),%al
		cmp    $0x000001,%al
		jb     _055c9b_jump
		jbe    _055c25_jump
		cmp    $0x000002,%al
		je     _055c4f_jump
		jmp    _055c9b_jump

	_055c25_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x00006a(%esi),%al
		cmp    %dx,%ax
		je     _055c47_jump
		testb  $0x000010,0x000007(%ebx)
		jne    _055c3f_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _055c47_jump

	_055c3f_jump:
		mov    0x00000a(%edi),%al
		dec    %al
		mov    %al,0x00006b(%esi)

	_055c47_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _055c9b_jump
		jmp    _055c69_jump

	_055c4f_jump:
		testb  $0x000010,0x000007(%ebx)
		jne    _055c5b_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _055c63_jump

	_055c5b_jump:
		mov    0x00000a(%edi),%al
		dec    %al
		mov    %al,0x00006b(%esi)

	_055c63_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _055c9b_jump

	_055c69_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%ecx),%eax
		mov    (%esp),%ecx
		mov    0x000032(%esi),%edx
		add    %ecx,%eax
		sar    $0x000010,%edx
		mov    0x000006(%eax),%al
		and    $_0000ff_case,%eax
		call   _071b3c_func

	_055c9b_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00006b(%esi),%dl
		mov    0x00000a(%edi),%ax
		cmp    %eax,%edx
		jge    _055cb3_jump
		cmp    $_0000ff_case,%dl
		jne    _055da0_jump

	_055cb3_jump:
		mov    0x000004(%ebx),%al
		mov    %al,0x00006c(%esi)
		mov    0x000003(%ebx),%al
		mov    %al,0x00006d(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		xor    %ebx,%ebx
		lea    0x000000(,%eax,4),%edx
		mov    0x00006c(%esi),%bl
		mov    0x00000c(%esi),%eax
		shl    $0x000003,%ebx
		mov    (%edx,%eax,1),%eax
		add    %eax,%ebx
		mov    0x000002(%ebx),%al
		mov    %al,0x00006a(%esi)
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		lea    0x000000(,%eax,4),%edi
		sub    %eax,%edi
		lea    0x000000(,%edi,4),%eax
		mov    0x000004(%esi),%edi
		mov    0x000060(%esi),%cx
		add    %eax,%edi
		cmp    $0x000017,%cx
		jne    _055d28_jump
		cmpw   $0x000008,_0cf2ca_data
		jne    _055d28_jump
		mov    _0cf2b8_data,%dx
		cmp    $0x000002,%dx
		je     _055d22_jump
		cmp    $0x000006,%dx
		jne    _055d28_jump

	_055d22_jump:
		cmpb   $0x000008,0x00006c(%esi)
		jne    _055d42_jump

	_055d28_jump:
		cmpw   $0x00003d,_0cf2ca_data
		jne    _055d5e_jump
		cmpw   $0x000000,_0cf2b8_data
		jne    _055d5e_jump
		cmpb   $0x00003d,0x00006c(%esi)
		je     _055d5e_jump

	_055d42_jump:
		cmpw   $0x00003c,_0ce09a_data
		jle    _055d5e_jump
		testb  $0x000080,_0cf221_data
		jne    _055d5e_jump
		movw   $0x00003c,_0ce09a_data

	_055d5e_jump:
		testb  $0x000010,0x000007(%ebx)
		je     _055d6d_jump
		xor    %eax,%eax
		mov    0x00000a(%edi),%ax
		dec    %eax
		jmp    _055d6f_jump

	_055d6d_jump:
		xor    %eax,%eax

	_055d6f_jump:
		mov    %al,0x00006b(%esi)
		cmpl   $0x000000,0x000024(%esi)
		je     _055da0_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000032(%esi),%edx
		xor    %ebx,%ebx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%bl
		sar    $0x000010,%edx
		mov    0x000006(%eax,%ebx,8),%al
		and    $_0000ff_case,%eax
		call   _071b3c_func

	_055da0_jump:
		mov    0x000081(%esi),%al
		movb   $0x000000,0x000073(%esi)
		test   $0x000020,%al
		je     _055dc0_jump
		mov    0x000002(%esp),%ecx
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		sar    $0x000010,%ecx
		call   _01d730_func

	_055dc0_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x00006b(%esi),%al
		lea    0x000081(%esi),%ebx
		cmp    %dx,%ax
		jne    _055de2_jump
		xor    %edx,%eax
		mov    0x000008(%esp),%ecx
		mov    0x00006a(%esi),%al
		cmp    %cx,%ax
		je     _055de9_jump

	_055de2_jump:
		mov    $0x000001,%eax
		jmp    _055deb_jump

	_055de9_jump:
		xor    %eax,%eax

	_055deb_jump:
		and    $0x000001,%al
		mov    (%ebx),%ah
		and    $0x00007f,%ah
		mov    %ah,(%ebx)
		shl    $0x000007,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,(%ebx)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055e08_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		mov    0x00002c(%eax),%ax
		add    %edx,%eax
		xor    %ah,%ah
		and    $0x00000f,%al
		pop    %edx
		ret    



_055e1c_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %dl,(%esp)
		cmpw   $0x000001,0x000042(%eax)
		jg     _055e5a_jump
		movw   $0x000000,0x000042(%eax)
		xor    %edx,%edx
		and    $_0000ff_case,%ebx
		mov    (%esp),%dl
		call   _01d444_func
		cmpb   $0x000002,(%esp)
		je     _055f8d_jump
		mov    %ecx,%eax
		call   _0258a0_func
		jmp    _055f8d_jump

	_055e5a_jump:
		cmpb   $0x000000,_0cf3ef_data
		jne    _055f7d_jump
		mov    0x000062(%ecx),%al
		cmp    $0x00000c,%al
		jb     _055eba_jump
		jbe    _055f7d_jump
		cmp    $0x000014,%al
		jb     _055e9d_jump
		cmp    $0x000015,%al
		jbe    _055f2a_jump
		cmp    $0x000018,%al
		jb     _055f49_jump
		cmp    $0x000019,%al
		jbe    _055f7d_jump
		cmp    $0x00001e,%al
		je     _055f63_jump
		jmp    _055f7d_jump

	_055e9d_jump:
		cmp    $0x000012,%al
		jb     _055ea5_jump
		jbe    _055ee7_jump
		jmp    _055f0a_jump

	_055ea5_jump:
		cmp    $0x00000e,%al
		jb     _055f7d_jump
		cmp    $0x00000f,%al
		jbe    _055f63_jump
		jmp    _055f7d_jump

	_055eba_jump:
		cmp    $0x000004,%al
		jb     _055edd_jump
		cmp    $0x000005,%al
		jbe    _055f2a_jump
		cmp    $0x000008,%al
		jb     _055f49_jump
		jbe    _055f7d_jump
		cmp    $0x000009,%al
		je     _055f6c_jump
		jmp    _055f7d_jump

	_055edd_jump:
		cmp    $0x000002,%al
		jb     _055f7d_jump
		ja     _055f0a_jump

	_055ee7_jump:
		mov    $0x000001,%ebx
		mov    0x000040(%ecx),%edx
		mov    0x000040(%ecx),%ax
		sar    $0x000010,%edx
		sub    $0x000002,%eax
		sar    %edx
		mov    %ax,0x000040(%ecx)
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		jmp    _055f7d_jump

	_055f0a_jump:
		mov    $0x000001,%ebx
		mov    0x000040(%ecx),%edx
		mov    0x000040(%ecx),%di
		sar    $0x000010,%edx
		add    $0x000002,%edi
		sar    %edx
		mov    %di,0x000040(%ecx)
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		jmp    _055f7d_jump

	_055f2a_jump:
		mov    0x000040(%ecx),%edx
		mov    $0x000001,%ebx
		sar    $0x000010,%edx
		mov    0x000040(%ecx),%si
		inc    %edx
		dec    %esi
		sar    %edx
		mov    %si,0x000040(%ecx)
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		jmp    _055f7d_jump

	_055f49_jump:
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		inc    %edx
		mov    $0x000001,%ebx
		sar    %edx
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		incw   0x000040(%ecx)
		jmp    _055f7d_jump

	_055f63_jump:
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		inc    %edx
		jmp    _055f75_jump

	_055f6c_jump:
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		add    $0x000003,%edx

	_055f75_jump:
		sar    %edx
		neg    %edx
		mov    %dx,0x000042(%ecx)

	_055f7d_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _055f8d_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d434_func

	_055f8d_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_055f94_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000062(%eax),%dl
		testb  $0x000001,_0924f4_data(%edx)
		je     _055fb8_jump
		mov    0x000065(%eax),%al
		and    $_0000ff_case,%eax
		testb  $0x000040,_0924f4_data(%eax)
		je     _055fb8_jump
		mov    $0x000001,%al
		pop    %edx
		ret    

	_055fb8_jump:
		xor    %al,%al
		pop    %edx
		ret    



_055fbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    0x000060(%eax),%si
		cmp    $0x00002f,%si
		jne    _055fd8_jump
		mov    $0x000020,%ecx
		mov    $0xfffffffc,%ebx
		jmp    _055fe8_jump

	_055fd8_jump:
		cmp    $0x000045,%si
		jne    _055fe8_jump
		mov    $0x000030,%ecx
		mov    $0xfffffffa,%ebx

	_055fe8_jump:
		mov    %edx,%eax
		call   _055f94_func
		test   %al,%al
		je     _055ff9_jump
		mov    0x000065(%edx),%al
		mov    %al,0x000062(%edx)

	_055ff9_jump:
		mov    0x000062(%edx),%al
		cmp    $0x00000e,%al
		jb     _05602d_jump
		cmp    $0x00000f,%al
		jbe    _056096_jump
		cmp    $0x000014,%al
		jb     _056021_jump
		cmp    $0x000015,%al
		jbe    _056047_jump
		cmp    $0x000017,%al
		jbe    _05605f_jump
		cmp    $0x00001e,%al
		je     _056096_jump
		jmp    _05609a_jump

	_056021_jump:
		cmp    $0x000012,%al
		jb     _05609a_jump
		jbe    _056074_jump
		jmp    _056059_jump

	_05602d_jump:
		cmp    $0x000004,%al
		jb     _05603f_jump
		cmp    $0x000005,%al
		jbe    _056047_jump
		cmp    $0x000007,%al
		jbe    _05605f_jump
		cmp    $0x000009,%al
		je     _056093_jump
		jmp    _05609a_jump

	_05603f_jump:
		cmp    $0x000002,%al
		jb     _05609a_jump
		jbe    _056074_jump
		jmp    _056059_jump

	_056047_jump:
		mov    %bx,0x000042(%edx)
		mov    %ecx,%eax
		mov    %cx,0x000040(%edx)
		neg    %eax
		mov    %ax,0x000040(%edx)
		jmp    _05609a_jump

	_056059_jump:
		add    $0x000002,%ebx
		add    $0x000010,%ecx

	_05605f_jump:
		mov    %bx,0x000042(%edx)
		mov    %cx,0x000040(%edx)
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056074_jump:
		add    $0x000002,%ebx
		mov    %bx,0x000042(%edx)
		mov    $0xfffffff0,%ebx
		sub    %ecx,%ebx
		mov    %bx,0x000040(%edx)
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056093_jump:
		sub    $0x000003,%ebx

	_056096_jump:
		mov    %bx,0x000042(%edx)

	_05609a_jump:
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0560a8_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%edi
		mov    $0x000005,%esi
		mov    0x00006d(%eax),%ah
		mov    $0x000003,%edx
		cmp    $0x000002,%ah
		jne    _0560d7_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _0560d7_jump
		mov    $0xffffffff,%edx
		mov    %ecx,%eax
		call   _07cd3c_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0560d7_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _0560fc_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _0560fc_jump
		mov    %ecx,%eax
		mov    0x000060(%ecx),%dx
		movw   $0x00002f,0x000060(%ecx)
		call   _055fbc_func
		mov    %dx,0x000060(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0560fc_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jl     _05629d_jump
		mov    %ecx,%eax
		call   _055f94_func
		mov    %al,%ah
		test   %al,%al
		je     _056119_jump
		mov    0x000065(%ecx),%al
		jmp    _05611c_jump

	_056119_jump:
		mov    0x000062(%ecx),%al

	_05611c_jump:
		cmp    $0x00000c,%al
		jb     _05614b_jump
		jbe    _0561f4_jump
		cmp    $0x000014,%al
		jb     _05613f_jump
		cmp    $0x000015,%al
		jbe    _0561ae_jump
		cmp    $0x000018,%al
		jb     _0561c9_jump
		jmp    _0561f4_jump

	_05613f_jump:
		cmp    $0x000012,%al
		jb     _0561f4_jump
		jbe    _056178_jump
		jmp    _056193_jump

	_05614b_jump:
		cmp    $0x000004,%al
		jb     _05616e_jump
		cmp    $0x000005,%al
		jbe    _0561ae_jump
		cmp    $0x000008,%al
		jb     _0561c9_jump
		jbe    _0561f4_jump
		cmp    $0x000009,%al
		je     _0561e4_jump
		jmp    _0561f4_jump

	_05616e_jump:
		cmp    $0x000002,%al
		jb     _0561f4_jump
		ja     _056193_jump

	_056178_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _056188_jump
		mov    $0x000001,%edx
		mov    %dx,0x000042(%ecx)

	_056188_jump:
		imul   0x000042(%ecx),%si
		sub    %si,0x000040(%ecx)
		jmp    _0561f4_jump

	_056193_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _0561a3_jump
		mov    $0x000001,%edx
		mov    %dx,0x000042(%ecx)

	_0561a3_jump:
		imul   0x000042(%ecx),%si
		add    %si,0x000040(%ecx)
		jmp    _0561f4_jump

	_0561ae_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _0561be_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_0561be_jump:
		imul   0x000042(%ecx),%dx
		sub    %dx,0x000040(%ecx)
		jmp    _0561f4_jump

	_0561c9_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _0561d9_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_0561d9_jump:
		imul   0x000042(%ecx),%dx
		add    %dx,0x000040(%ecx)
		jmp    _0561f4_jump

	_0561e4_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _0561f4_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_0561f4_jump:
		test   %bx,%bx
		jle    _05621d_jump
		mov    0x000042(%ecx),%si
		cmp    $0x000001,%si
		jle    _056215_jump
		sub    %esi,%ebx
		mov    %bx,0x000042(%ecx)
		test   %di,%di
		je     _056223_jump
		inc    %ebx
		mov    %bx,0x000042(%ecx)
		jmp    _056223_jump

	_056215_jump:
		movw   $0x000000,0x000042(%ecx)
		jmp    _056223_jump

	_05621d_jump:
		movw   $0x00fffd,0x000042(%ecx)

	_056223_jump:
		test   %ah,%ah
		je     _056264_jump

	_056227_jump:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e1b4_func
		cmp    0x000062(%ecx),%al
		jne    _056254_jump
		decl   0x00002c(%ecx)
		jmp    _056227_jump

	_056254_jump:
		mov    %ecx,%eax
		call   _0258a0_func
		mov    %ecx,%eax
		call   _01e3bc_func
		jmp    _05629d_jump

	_056264_jump:
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000001,_0924f4_data(%eax)
		je     _056296_jump
		mov    %ecx,%eax
		call   _055e08_func
		cmp    $0x000004,%ax
		jl     _056296_jump
		mov    0x000042(%ecx),%si
		cmp    $0x000002,%si
		jg     _056296_jump
		test   %si,%si
		jne    _05629d_jump
		movw   $0x000001,0x000042(%ecx)
		jmp    _05629d_jump

	_056296_jump:
		mov    %ecx,%eax
		call   _0258a0_func

	_05629d_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %edx,%eax
		movb   $0x000000,0x000071(%ecx)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		shr    $0x000004,%al
		cmp    $0x00000b,%al
		je     _0562cc_jump
		cmp    $0x00000a,%al
		je     _0562cc_jump
		movb   $0x000000,0x000072(%ecx)

	_0562cc_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0562d0_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,0x000004(%esp)
		cmpw   $0x000026,0x000060(%eax)
		jne    _0562fb_jump
		mov    $0x000001,%eax
		mov    $0x000002,%edi
		mov    %eax,%ebx
		mov    %eax,%edx
		mov    %ax,0x000008(%esp)
		jmp    _056316_jump

	_0562fb_jump:
		mov    $0x000005,%eax
		mov    $0x000004,%ebx
		mov    $0x000003,%ecx
		mov    $0x000001,%edi
		mov    %eax,%edx
		mov    %cx,0x000008(%esp)

	_056316_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _0565a3_jump
		mov    0x000040(%esi),%cx
		test   %cx,%cx
		jle    _05632e_jump
		sub    %eax,%ecx
		jmp    _056332_jump

	_05632e_jump:
		jge    _056336_jump
		add    %eax,%ecx

	_056332_jump:
		mov    %cx,0x000040(%esi)

	_056336_jump:
		movswl %bx,%ecx
		mov    0x00003e(%esi),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jl     _056352_jump
		cmp    %ecx,%eax
		jg     _056352_jump
		mov    $0x000001,%eax
		jmp    _056354_jump

	_056352_jump:
		xor    %eax,%eax

	_056354_jump:
		test   %eax,%eax
		je     _05635e_jump
		movw   $0x000000,0x000040(%esi)

	_05635e_jump:
		mov    %esi,%eax
		call   _055f94_func
		mov    %al,%cl
		test   %al,%al
		je     _056370_jump
		mov    0x000065(%esi),%al
		jmp    _056373_jump

	_056370_jump:
		mov    0x000062(%esi),%al

	_056373_jump:
		cmp    $0x00000c,%al
		jb     _0563a2_jump
		jbe    _05648f_jump
		cmp    $0x000014,%al
		jb     _056396_jump
		cmp    $0x000015,%al
		jbe    _05640b_jump
		cmp    $0x000018,%al
		jb     _056445_jump
		jmp    _05648f_jump

	_056396_jump:
		cmp    $0x000012,%al
		jb     _05648f_jump
		jbe    _0563cf_jump
		jmp    _0563ed_jump

	_0563a2_jump:
		cmp    $0x000004,%al
		jb     _0563c5_jump
		cmp    $0x000005,%al
		jbe    _05640b_jump
		cmp    $0x000008,%al
		jb     _056445_jump
		jbe    _05648f_jump
		cmp    $0x000009,%al
		je     _05647f_jump
		jmp    _05648f_jump

	_0563c5_jump:
		cmp    $0x000002,%al
		jb     _05648f_jump
		ja     _0563ed_jump

	_0563cf_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _0563df_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%esi)

	_0563df_jump:
		imul   0x000042(%esi),%dx
		sub    %dx,0x000040(%esi)
		jmp    _05648f_jump

	_0563ed_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _0563fd_jump
		mov    $0x000001,%edi
		mov    %di,0x000042(%esi)

	_0563fd_jump:
		imul   0x000042(%esi),%dx
		add    %dx,0x000040(%esi)
		jmp    _05648f_jump

	_05640b_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _05641b_jump
		mov    $0x000001,%edx
		mov    %dx,0x000042(%esi)

	_05641b_jump:
		mov    0x000040(%esi),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %di,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000040(%esi)
		jmp    _05648f_jump

	_056445_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _056455_jump
		mov    $0x000001,%ebx
		mov    %bx,0x000042(%esi)

	_056455_jump:
		mov    0x000040(%esi),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %di,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000040(%esi)
		jmp    _05648f_jump

	_05647f_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _05648f_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%esi)

	_05648f_jump:
		mov    0x000004(%esp),%eax
		test   %ax,%ax
		jle    _0564cd_jump
		mov    0x000042(%esi),%dx
		cmp    $0x000001,%dx
		jle    _0564be_jump
		sub    %edx,%eax
		mov    (%esp),%edi
		mov    %ax,0x000042(%esi)
		test   %di,%di
		je     _056530_jump
		inc    %eax
		mov    %ax,0x000042(%esi)
		jmp    _056530_jump

	_0564be_jump:
		movw   $0x000000,0x000042(%esi)
		movb   $0x000002,0x000076(%esi)
		jmp    _056530_jump

	_0564cd_jump:
		mov    0x000060(%esi),%dx
		cmp    $0x000008,%dx
		je     _0564f2_jump
		cmp    $0x000086,%dx
		je     _0564f2_jump
		cmp    $0x0000a7,%dx
		je     _0564f2_jump
		cmp    $0x0000b1,%dx
		je     _0564f2_jump
		cmp    $0x000006,%dx
		jne    _05652a_jump

	_0564f2_jump:
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _056517_jump
		testb  $0x000002,_0cf221_data
		je     _05650f_jump
		movw   $0x00fffc,0x000042(%esi)
		jmp    _05651d_jump

	_05650f_jump:
		movw   $0x00fffd,0x000042(%esi)
		jmp    _05651d_jump

	_056517_jump:
		movw   $0x00fffb,0x000042(%esi)

	_05651d_jump:
		cmpw   $0x000006,0x000060(%esi)
		jne    _056530_jump
		incw   0x000042(%esi)
		jmp    _056530_jump

	_05652a_jump:
		movw   $0x00fffd,0x000042(%esi)

	_056530_jump:
		test   %cl,%cl
		je     _05656a_jump

	_056534_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e1b4_func
		cmp    0x000062(%esi),%al
		jne    _056561_jump
		decl   0x00002c(%esi)
		jmp    _056534_jump

	_056561_jump:
		mov    %esi,%eax
		call   _01e3bc_func
		jmp    _05659c_jump

	_05656a_jump:
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000001,_0924f4_data(%eax)
		je     _05659c_jump
		mov    %esi,%eax
		call   _055e08_func
		cmp    $0x000004,%ax
		jl     _05659c_jump
		mov    0x000042(%esi),%dx
		cmp    $0x000002,%dx
		jg     _05659c_jump
		test   %dx,%dx
		jne    _0565a3_jump
		movw   $0x000001,0x000042(%esi)
		jmp    _0565a3_jump

	_05659c_jump:
		mov    %esi,%eax
		call   _0258a0_func

	_0565a3_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %edx,%eax
		movb   $0x000000,0x000071(%esi)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		shr    $0x000004,%al
		cmp    $0x00000b,%al
		je     _0565d2_jump
		cmp    $0x00000a,%al
		je     _0565d2_jump
		movb   $0x000000,0x000072(%esi)

	_0565d2_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0565dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		call   _01d444_func
		movw   $0x000000,0x000042(%ecx)
		movw   $0x000000,0x000040(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056600_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _0258a0_func
		mov    0x000076(%ecx),%dl
		cmp    0x000077(%ecx),%dl
		je     _05664b_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%bl
		testb  $0x000040,0x000007(%edx,%ebx,8)
		je     _056634_jump
		mov    $0x000002,%edx
		jmp    _056639_jump

	_056634_jump:
		mov    $0x00000b,%edx

	_056639_jump:
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %dl,%bl
		mov    $0x000001,%edx
		call   _01d444_func
		jmp    _056660_jump

	_05664b_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		orb    $0x000010,0x000081(%ecx)

	_056660_jump:
		mov    %ecx,%eax
		call   _01dbe4_func
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		test   $0x000008,%ah
		setne  %dl
		and    $_0000ff_case,%edx
		add    $0x000002,%edx
		and    $_0000ff_case,%edx
		mov    %ecx,%eax
		call   _060460_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056694_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpw   $0x000000,0x000042(%eax)
		jle    _0566c4_jump
		call   _0258a0_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _060460_func
		cmpw   $0x0001f4,0x00004a(%ecx)
		jle    _0566c4_jump
		movw   $0x000000,0x00004a(%ecx)

	_0566c4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0566c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,_0cf469_data
		je     _0566ee_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _0566ee_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _055e1c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0566ee_jump:
		cmpb   $0x000000,0x00006c(%ecx)
		je     _05670f_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _060460_func
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _0258a0_func

	_05670f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056714_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006c(%eax)
		jne    _056737_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _060460_func
		mov    %ecx,%eax
		call   _0258a0_func

	_056737_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05673c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %edx,%eax
		lea    -0x000002(%eax),%ebx
		lea    0x000002(%eax),%esi
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edi
		mov    0x000069(%ecx),%al
		mov    _0ce036_data,%edx
		add    %edi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %eax,%edx
		sar    $0x000004,%ebx
		add    %edx,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0ce040_data,%ebx
		sar    $0x000004,%esi
		mov    0x000002(%ebx,%eax,2),%al
		xor    %ah,%ah
		add    %esi,%edx
		mov    %ax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    0x000002(%ebx,%eax,2),%dl
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _05687b_jump
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000002,_0924f4_data(%eax)
		jne    _05687b_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _0567d7_jump
		testb  $0x000008,0x000081(%ecx)
		je     _0567f4_jump

	_0567d7_jump:
		movswl %dx,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _05687b_jump
		testb  $0x000008,0x000081(%ecx)
		je     _05687b_jump

	_0567f4_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _05682a_jump
		testb  $0x000008,0x000081(%ecx)
		je     _056817_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _060460_func
		jmp    _05687b_jump

	_056817_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _060460_func
		jmp    _05687b_jump

	_05682a_jump:
		mov    0x00003e(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%ebp
		mov    $0x000004,%edx
		add    %eax,%ebp
		mov    %ecx,%eax
		mov    %ebp,0x000028(%ecx)
		call   _060460_func
		mov    0x000081(%ecx),%bl
		lea    0x000081(%ecx),%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		mov    %bh,(%eax)
		or     %dl,%cl
		mov    %cl,(%eax)

	_05687b_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056888_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		call   _01d444_func
		testb  $0x000008,0x000081(%ecx)
		je     _0568b0_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		jmp    _0568b9_jump

	_0568b0_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_0568b9_jump:
		call   _060460_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0568c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006e(%eax),%bl
		mov    0x00006f(%eax),%dl
		call   _01d444_func
		mov    %ecx,%eax
		call   _0258a0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0568e4_switch:
		.long   _056f98_case
		.long   _056fde_case
		.long   _056bae_case
		.long   _056f98_case
		.long   _056bae_case
		.long   _056bae_case
		.long   _056f8d_case




_056900_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		shr    $0x000004,%al
		cmp    $0x00000b,%al
		je     _05694f_jump
		cmp    $0x00000a,%al
		je     _05694f_jump
		mov    0x000071(%esi),%ah
		inc    %ah
		mov    %ah,0x000071(%esi)
		cmp    $0x000003,%ah
		jb     _05693e_jump
		movb   $0x000000,0x000071(%esi)

	_05693e_jump:
		mov    0x000072(%esi),%dh
		inc    %dh
		mov    %dh,0x000072(%esi)
		cmp    $0x000004,%dh
		jb     _05694f_jump
		movb   $0x000000,0x000072(%esi)

	_05694f_jump:
		mov    %esi,%eax
		call   _0559a0_func
		mov    0x000060(%esi),%dx
		mov    %eax,%edi
		cmp    $0x000003,%dx
		jne    _0569b4_jump
		cmpw   $0x000000,0x000042(%esi)
		jl     _05697b_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _05697b_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d434_func

	_05697b_jump:
		cmpb   $0x000000,_0cf469_data
		jne    _056a28_jump
		cmpw   $0x000003,0x000042(%esi)
		jl     _056a28_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _056a28_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d434_func
		movw   $0x000000,0x000040(%esi)
		jmp    _056a28_jump

	_0569b4_jump:
		cmp    $0x000028,%dx
		je     _0569c0_jump
		cmp    $0x00007a,%dx
		jne    _056a0f_jump

	_0569c0_jump:
		mov    %esi,%eax
		call   _05673c_func
		mov    0x00006d(%esi),%bh
		cmp    $0x000002,%bh
		jne    _056a28_jump
		mov    0x000042(%esi),%cx
		test   %cx,%cx
		jle    _0569eb_jump
		cmp    0x00006c(%esi),%bh
		je     _056a28_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d434_func
		jmp    _056a28_jump

	_0569eb_jump:
		jge    _056a28_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _024cd0_func
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _056a28_jump
		movw   $0x000000,0x000042(%esi)
		jmp    _056a28_jump

	_056a0f_jump:
		cmp    $0x00005b,%dx
		jne    _056a28_jump
		mov    0x000056(%esi),%dx
		dec    %dx
		mov    %dx,0x000056(%esi)
		jne    _056a28_jump
		mov    %esi,%eax
		call   _0757b8_func

	_056a28_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000004,_092537_data(,%eax,4)
		je     _056ade_jump
		cmpw   $0x000000,0x000042(%esi)
		jge    _056ade_jump
		testb  $0x000020,0x000081(%esi)
		je     _056a86_jump
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d7e0_func
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x000074(%esi),%al
		jmp    _056a9e_jump

	_056a86_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		mov    0x00002c(%esi),%dx

	_056a9e_jump:
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		mov    0x000040(%esi),%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e1b4_func
		and    $_0000ff_case,%eax
		testb  $0x000010,_0924f4_data(%eax)
		je     _056ade_jump
		movw   $0x000000,0x000042(%esi)

	_056ade_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000001,_092536_data(,%eax,4)
		je     _056bae_case
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000002,_0924f4_data(%eax)
		je     _056bae_case
		mov    0x000060(%esi),%ax
		cmp    $0x000064,%ax
		jb     _056d35_jump
		jbe    _057022_jump
		cmp    $0x0000ac,%ax
		jb     _056c56_jump
		jbe    _05702e_jump
		cmp    $0x0000cc,%ax
		jb     _056bed_jump
		cmp    $0x0000cd,%ax
		jbe    _056bae_case
		cmp    $0x0000d9,%ax
		jb     _056b82_jump
		jbe    _057022_jump
		cmp    $0x0000de,%ax
		jb     _056b73_jump
		jbe    _056bae_case
		cmp    $0x0000e3,%ax
		jb     _056ba7_jump
		jbe    _056bae_case
		cmp    $0x0000ef,%ax
		je     _057228_jump
		jmp    _056ba7_jump

	_056b73_jump:
		cmp    $0x0000da,%ax
		je     _056f0f_jump
		jmp    _056ba7_jump

	_056b82_jump:
		cmp    $0x0000d4,%ax
		jb     _056b9d_jump
		jbe    _056bae_case
		cmp    $0x0000d5,%ax
		je     _056bae_case
		jmp    _056ba7_jump

	_056b9d_jump:
		cmp    $0x0000d3,%ax
		je     _057328_jump

	_056ba7_jump:
		mov    %esi,%eax
		call   _0568c4_func

	_056bae_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000020,_092535_data(,%eax,4)
		je     _057395_jump
		cmpw   $0x000060,0x000042(%esi)
		jle    _056bcf_jump
		movw   $0x000060,0x000042(%esi)

	_056bcf_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff80,%eax
		jge    _0573b3_jump
		movw   $0x00ff80,0x000042(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056bed_jump:
		cmp    $0x0000bb,%ax
		jb     _056c2c_jump
		jbe    _057310_jump
		cmp    $0x0000c3,%ax
		jb     _056c1d_jump
		jbe    _057334_jump
		cmp    $0x0000c6,%ax
		jb     _056ba7_jump
		jbe    _0572e0_jump
		cmp    $0x0000c8,%ax
		je     _0572ec_jump
		jmp    _056ba7_jump

	_056c1d_jump:
		cmp    $0x0000be,%ax
		je     _05731c_jump
		jmp    _056ba7_jump

	_056c2c_jump:
		cmp    $0x0000b4,%ax
		jb     _056c47_jump
		jbe    _0572f8_jump
		cmp    $0x0000b6,%ax
		je     _057299_jump
		jmp    _056ba7_jump

	_056c47_jump:
		cmp    $0x0000b1,%ax
		je     _057191_jump
		jmp    _056ba7_jump

	_056c56_jump:
		cmp    $0x000084,%ax
		jb     _056cc7_jump
		jbe    _056bae_case
		cmp    $0x000093,%ax
		jb     _056ca8_jump
		jbe    _056bae_case
		cmp    $0x000097,%ax
		jb     _056c99_jump
		jbe    _056bae_case
		cmp    $0x0000a5,%ax
		jb     _056ba7_jump
		jbe    _05706f_jump
		cmp    $0x0000a7,%ax
		je     _057191_jump
		jmp    _056ba7_jump

	_056c99_jump:
		cmp    $0x000096,%ax
		je     _056bae_case
		jmp    _056ba7_jump

	_056ca8_jump:
		cmp    $0x000086,%ax
		jb     _057288_jump
		jbe    _057191_jump
		cmp    $0x00008b,%ax
		je     _056bae_case
		jmp    _056ba7_jump

	_056cc7_jump:
		cmp    $0x000070,%ax
		jb     _056d07_jump
		jbe    _056ffb_jump
		cmp    $0x00007a,%ax
		jb     _056cf8_jump
		jbe    _0570c9_jump
		cmp    $0x00007b,%ax
		jbe    _056f73_jump
		cmp    $0x000082,%ax
		je     _057191_jump
		jmp    _056ba7_jump

	_056cf8_jump:
		cmp    $0x000077,%ax
		je     _057053_jump
		jmp    _056ba7_jump

	_056d07_jump:
		cmp    $0x000067,%ax
		jb     _056d26_jump
		cmp    $0x000068,%ax
		jbe    _056bae_case
		cmp    $0x00006e,%ax
		je     _056bae_case
		jmp    _056ba7_jump

	_056d26_jump:
		cmp    $0x000066,%ax
		je     _056bae_case
		jmp    _056ba7_jump

	_056d35_jump:
		cmp    $0x000034,%ax
		jb     _056e32_jump
		jbe    _057159_jump
		cmp    $0x000048,%ax
		jb     _056dc8_jump
		jbe    _057262_jump
		cmp    $0x00004e,%ax
		jb     _056da9_jump
		jbe    _0570d5_jump
		cmp    $0x00005a,%ax
		jb     _056d90_jump
		cmp    $0x00005d,%ax
		jbe    _057299_jump
		cmp    $0x000061,%ax
		jb     _056ba7_jump
		jbe    _0572a5_jump
		cmp    $0x000062,%ax
		je     _056bae_case
		jmp    _056ba7_jump

	_056d90_jump:
		cmp    $0x000057,%ax
		jb     _056ba7_jump
		cmp    $0x000058,%ax
		jbe    _056bae_case
		jmp    _056ba7_jump

	_056da9_jump:
		cmp    $0x00004a,%ax
		jb     _056bae_case
		jbe    _057304_jump
		cmp    $0x00004d,%ax
		je     _057228_jump
		jmp    _056ba7_jump

	_056dc8_jump:
		cmp    $0x00003e,%ax
		jb     _056e08_jump
		jbe    _057016_jump
		cmp    $0x000044,%ax
		jb     _056df9_jump
		jbe    _056bae_case
		cmp    $0x000045,%ax
		jbe    _05707b_jump
		cmp    $0x000046,%ax
		je     _056f03_jump
		jmp    _056ba7_jump

	_056df9_jump:
		cmp    $0x000041,%ax
		je     _0572bd_jump
		jmp    _056ba7_jump

	_056e08_jump:
		cmp    $0x00003a,%ax
		jb     _056e23_jump
		jbe    _057203_jump
		cmp    $0x00003c,%ax
		jb     _056ba7_jump
		jmp    _0572b1_jump

	_056e23_jump:
		cmp    $0x000035,%ax
		je     _0570e9_jump
		jmp    _056ba7_jump

	_056e32_jump:
		cmp    $0x00001b,%ax
		jb     _056ea4_jump
		jbe    _056bae_case
		cmp    $0x000028,%ax
		jb     _056e7a_jump
		jbe    _0570c9_jump
		cmp    $0x00002f,%ax
		jb     _056e6b_jump
		jbe    _05707b_jump
		cmp    $0x000032,%ax
		jb     _056ba7_jump
		jbe    _056bae_case
		jmp    _057121_jump

	_056e6b_jump:
		cmp    $0x00002e,%ax
		je     _0572c9_jump
		jmp    _056ba7_jump

	_056e7a_jump:
		cmp    $0x000024,%ax
		jb     _056e95_jump
		jbe    _05709e_jump
		cmp    $0x000026,%ax
		je     _057191_jump
		jmp    _056ba7_jump

	_056e95_jump:
		cmp    $0x000020,%ax
		je     _056bae_case
		jmp    _056ba7_jump

	_056ea4_jump:
		cmp    $0x000008,%ax
		jb     _056eda_jump
		jbe    _057191_jump
		cmp    $0x00000d,%ax
		jb     _056ecb_jump
		jbe    _056bae_case
		cmp    $0x00000f,%ax
		je     _056bae_case
		jmp    _056ba7_jump

	_056ecb_jump:
		cmp    $0x000009,%ax
		je     _05706f_jump
		jmp    _056ba7_jump

	_056eda_jump:
		cmp    $0x000003,%ax
		jb     _056ef5_jump
		jbe    _05721c_jump
		cmp    $0x000006,%ax
		je     _057191_jump
		jmp    _056ba7_jump

	_056ef5_jump:
		test   %ax,%ax
		je     _05706f_jump
		jmp    _056ba7_jump

	_056f03_jump:
		mov    %esi,%eax
		call   _07df9c_func
		jmp    _056bae_case

	_056f0f_jump:
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01dbe4_func
		mov    %esi,%eax
		mov    $0x000003,%edx
		call   _0258a0_func
		mov    %esi,%eax
		call   _060460_func
		cmpb   $0x000002,_0ce0b1_data
		je     _056f65_jump
		mov    %esi,%eax
		call   _055148_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		mov    $0x000001,%ah
		mov    $0xfffffff8,%ebx
		mov    %ah,_0cf470_data
		call   _06c6b0_func
		mov    %bx,_0ce086_data

	_056f65_jump:
		movw   $0x000001,_0cf242_data
		jmp    _056bae_case

	_056f73_jump:
		mov    0x000075(%esi),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _056bae_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_0568e4_switch(,%eax,4)

	_056f8d_case:
		mov    %esi,%eax
		movb   $0x000002,0x00007d(%esi)
		call   _01dbe4_func

	_056f98_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		testb  $0x000008,0x000081(%esi)
		je     _056fbb_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _056fc5_jump

	_056fbb_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_056fc5_jump:
		mov    %esi,%eax
		call   _060460_func
		mov    %esi,%eax
		call   _0258a0_func
		movw   $0x000000,0x000042(%esi)
		jmp    _056bae_case

	_056fde_case:
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d444_func
		mov    %esi,%eax
		call   _0258a0_func
		movw   $0x000000,0x000042(%esi)
		jmp    _056bae_case

	_056ffb_jump:
		cmpw   $0x000000,0x000042(%esi)
		jle    _056bae_case
		mov    %esi,%eax
		call   _0258a0_func
		negw   0x000042(%esi)
		jmp    _056bae_case

	_057016_jump:
		mov    %esi,%eax
		call   _0565dc_func
		jmp    _056bae_case

	_057022_jump:
		mov    %esi,%eax
		call   _056694_func
		jmp    _056bae_case

	_05702e_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _056bae_case
		mov    $0x000001,%ebx
		mov    $0x000010,%edx
		mov    %esi,%eax
		call   _060460_func
		movb   $0x000000,0x00007d(%esi)
		jmp    _056bae_case

	_057053_jump:
		mov    0x000032(%esi),%edx
		mov    $0x0000bb,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		mov    %esi,%eax
		call   _07ac90_func
		jmp    _056bae_case

	_05706f_jump:
		mov    %esi,%eax
		call   _056600_func
		jmp    _056bae_case

	_05707b_jump:
		cmpw   $0x000000,0x000042(%esi)
		je     _057092_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _071b3c_func

	_057092_jump:
		mov    %esi,%eax
		call   _055fbc_func
		jmp    _056bae_case

	_05709e_jump:
		cmpw   $0x000000,0x000042(%esi)
		je     _0570b5_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _071b3c_func

	_0570b5_jump:
		mov    $0x000001,%ebx
		movswl %di,%edx
		mov    %esi,%eax
		call   _0560a8_func
		jmp    _056bae_case

	_0570c9_jump:
		mov    %esi,%eax
		call   _056714_func
		jmp    _056bae_case

	_0570d5_jump:
		mov    $0x000001,%ebx
		movswl %di,%edx
		mov    %esi,%eax
		call   _0562d0_func
		jmp    _056bae_case

	_0570e9_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _056bae_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _071b3c_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000006,0x000042(%esi)
		call   _0562d0_func
		decw   0x000050(%esi)
		jmp    _056bae_case

	_057121_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _056bae_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _071b3c_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000007,0x000042(%esi)
		call   _0562d0_func
		decw   0x000050(%esi)
		jmp    _056bae_case

	_057159_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _056bae_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _071b3c_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000006,0x000042(%esi)
		call   _0560a8_func
		decw   0x000050(%esi)
		jmp    _056bae_case

	_057191_jump:
		mov    0x000060(%esi),%dx
		cmp    $0x000082,%dx
		jb     _0571b9_jump
		jbe    _0571e5_jump
		cmp    $0x0000a7,%dx
		jb     _0571b0_jump
		jbe    _0571d1_jump
		cmp    $0x0000b1,%dx
		je     _0571db_jump
		jmp    _0571f2_jump

	_0571b0_jump:
		cmp    $0x000086,%dx
		je     _0571d1_jump
		jmp    _0571f2_jump

	_0571b9_jump:
		cmp    $0x000008,%dx
		jb     _0571c9_jump
		jbe    _0571d1_jump
		cmp    $0x000026,%dx
		je     _0571e5_jump
		jmp    _0571f2_jump

	_0571c9_jump:
		cmp    $0x000006,%dx
		je     _0571db_jump
		jmp    _0571f2_jump

	_0571d1_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		jmp    _0571ea_jump

	_0571db_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00008c,%eax
		jmp    _0571ea_jump

	_0571e5_jump:
		mov    0x000032(%esi),%edx
		xor    %eax,%eax

	_0571ea_jump:
		sar    $0x000010,%edx
		call   _071b3c_func

	_0571f2_jump:
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _0562d0_func
		jmp    _056bae_case

	_057203_jump:
		mov    $0x00000b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000042(%esi)
		jmp    _056bae_case

	_05721c_jump:
		mov    %esi,%eax
		call   _0566c8_func
		jmp    _056bae_case

	_057228_jump:
		cmpb   $0x000002,0x00006c(%esi)
		jne    _057235_jump
		mov    $0x000007,%ebx
		jmp    _057241_jump

	_057235_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _05724a_jump
		mov    $0x00000a,%ebx

	_057241_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func

	_05724a_jump:
		mov    %esi,%eax
		call   _0258a0_func
		movw   $0x000000,0x000042(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _056bae_case

	_057262_jump:
		mov    %esi,%eax
		mov    $0x000005,%ebx
		call   _0258a0_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d444_func
		movw   $0x000000,0x000042(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _056bae_case

	_057288_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		jmp    _056bae_case

	_057299_jump:
		mov    %esi,%eax
		call   _075a54_func
		jmp    _056bae_case

	_0572a5_jump:
		mov    %esi,%eax
		call   _0203e4_func
		jmp    _056bae_case

	_0572b1_jump:
		mov    %esi,%eax
		call   _02b22c_func
		jmp    _056bae_case

	_0572bd_jump:
		mov    %esi,%eax
		call   _056888_func
		jmp    _056bae_case

	_0572c9_jump:
		cmpw   $0x00000a,0x000056(%esi)
		jge    _056bae_case
		mov    %esi,%eax
		call   _021268_func
		jmp    _056bae_case

	_0572e0_jump:
		mov    %esi,%eax
		call   _022808_func
		jmp    _056bae_case

	_0572ec_jump:
		mov    %esi,%eax
		call   _022b0c_func
		jmp    _056bae_case

	_0572f8_jump:
		mov    %esi,%eax
		call   _076fd0_func
		jmp    _056bae_case

	_057304_jump:
		mov    %esi,%eax
		call   _076a64_func
		jmp    _056bae_case

	_057310_jump:
		mov    %esi,%eax
		call   _06559c_func
		jmp    _056bae_case

	_05731c_jump:
		mov    %esi,%eax
		call   _06548c_func
		jmp    _056bae_case

	_057328_jump:
		mov    %esi,%eax
		call   _020334_func
		jmp    _056bae_case

	_057334_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _056bae_case
		cmpw   $0x000000,0x000042(%esi)
		jle    _056bae_case
		mov    $0x00001d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000028(%esi),%ebx
		mov    _0ce06c_data,%edx
		lea    0x000081(%esi),%eax
		cmp    %ebx,%edx
		setg   %dl
		and    $_0000ff_case,%edx
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)
		jmp    _056bae_case

	_057395_jump:
		cmpw   $0x000006,0x000042(%esi)
		jle    _0573a2_jump
		movw   $0x000006,0x000042(%esi)

	_0573a2_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff8,%eax
		jge    _0573b3_jump
		movw   $0x00fff8,0x000042(%esi)

	_0573b3_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0573bc_func:
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x00000a,0x000062(%eax)
		jne    _05744f_jump
		cmpw   $0x000017,0x000060(%edx)
		jne    _0573da_jump
		cmpb   $0x000006,_0ce0b1_data
		je     _0573e1_jump

	_0573da_jump:
		mov    $0x000001,%eax
		jmp    _0573e3_jump

	_0573e1_jump:
		xor    %eax,%eax

	_0573e3_jump:
		test   %eax,%eax
		je     _05744f_jump
		mov    0x000060(%edx),%cx
		cmp    $0x000034,%cx
		jne    _0573fb_jump
		andb   $0x0000fb,0x000081(%edx)
		pop    %edx
		pop    %ecx
		ret    

	_0573fb_jump:
		xor    %eax,%eax
		mov    %cx,%ax
		testb  $0x000002,_092536_data(,%eax,4)
		je     _05744f_jump
		testb  $0x000040,0x000081(%edx)
		jne    _057428_jump
		mov    %edx,%eax
		call   _07a640_func
		movw   $0x000000,0x000042(%edx)
		mov    0x000042(%edx),%ax
		mov    %ax,0x000040(%edx)

	_057428_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000002,_092537_data(,%eax,4)
		je     _05744f_jump
		mov    _0cf2ae_data,%eax
		sar    $0x000010,%eax
		movl   $0x000000,0x000024(%edx)
		add    $0x0001e4,%eax
		mov    %eax,0x00002c(%edx)

	_05744f_jump:
		pop    %edx
		pop    %ecx
		ret    



_057454_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpw   $0x000000,0x000040(%eax)
		jne    _057471_jump
		cmpw   $0x000000,0x000042(%eax)
		je     _057627_jump

	_057471_jump:
		xor    %ebx,%ebx
		mov    0x000060(%esi),%bx
		mov    0x000040(%esi),%dx
		mov    _092536_data(,%ebx,4),%cl
		mov    0x000042(%esi),%ax
		test   $0x000080,%cl
		je     _0574b6_jump
		cmpb   $0x000001,0x00007d(%esi)
		jne    _0574b6_jump
		cmpb   $0x000000,_0cf401_data
		jne    _0574b6_jump
		test   %dx,%dx
		jle    _0574a4_jump
		mov    %edx,%ebx
		dec    %ebx
		jmp    _0574a7_jump

	_0574a4_jump:
		mov    %edx,%ebx
		inc    %ebx

	_0574a7_jump:
		mov    %bx,0x000040(%esi)
		cmpw   $0x000000,0x000040(%esi)
		jne    _0574b6_jump
		movb   $0x000000,0x00007d(%esi)

	_0574b6_jump:
		cmpw   $0x00005e,0x000060(%esi)
		jne    _0574eb_jump
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax
		mov    _0ce164_data,%ecx
		mov    0x000028(%esi),%ebp
		add    %eax,%ecx
		mov    0x00003e(%esi),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		sar    $0x000004,%ebx
		add    %eax,%ebp
		mov    %ebx,0x00002c(%esi)
		mov    %ecx,_0ce164_data
		mov    %ebp,0x000028(%esi)
		jmp    _0575ec_jump

	_0574eb_jump:
		xor    %ebx,%ebx
		mov    0x000060(%esi),%bx
		testb  $0x000020,_092535_data(,%ebx,4)
		je     _057506_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		call   _055230_func

	_057506_jump:
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000010,_092535_data(,%eax,4)
		je     _057529_jump
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		call   _055230_func
		mov    %eax,%edi
		jmp    _05752b_jump

	_057529_jump:
		mov    %edx,%edi

	_05752b_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000040,_092536_data(,%eax,4)
		je     _0575d2_jump
		mov    0x000028(%esi),%cx
		mov    0x00002c(%esi),%bx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%dl
		mov    0x000068(%esi),%al
		add    %ebx,%edx
		add    %ecx,%eax
		sub    $0x000008,%edx
		mov    %eax,%ecx
		movswl %dx,%ebx
		cwtl   
		sar    $0x000004,%ebx
		sar    $0x000004,%eax
		movswl %bx,%ebx
		cwtl   
		mov    %ebx,%edx
		add    %edi,%ecx
		call   _01e1b4_func
		and    $_0000ff_case,%eax
		testb  $0x000010,_0924f4_data(%eax)
		jne    _05759b_jump
		movswl %cx,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e1b4_func
		and    $_0000ff_case,%eax
		testb  $0x000010,_0924f4_data(%eax)
		jne    _0575c6_jump

	_05759b_jump:
		mov    _0cf284_data,%ebx
		sar    $0x000010,%ebx
		add    $0x000130,%ebx
		movswl %cx,%eax
		mov    %ebx,%ecx
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jl     _0575c0_jump
		cmp    %ecx,%eax
		jg     _0575c0_jump
		mov    $0x000001,%eax
		jmp    _0575c2_jump

	_0575c0_jump:
		xor    %eax,%eax

	_0575c2_jump:
		test   %eax,%eax
		jne    _0575d2_jump

	_0575c6_jump:
		mov    0x000040(%esi),%cx
		neg    %ecx
		neg    %edi
		mov    %cx,0x000040(%esi)

	_0575d2_jump:
		movswl %di,%eax
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		mov    -0x000002(%esp),%eax
		mov    0x00002c(%esi),%ebx
		sar    $0x000010,%eax
		mov    %edx,0x000028(%esi)
		add    %eax,%ebx
		mov    %ebx,0x00002c(%esi)

	_0575ec_jump:
		lea    0x000082(%esi),%ebx
		test   %di,%di
		jne    _0575fe_jump
		cmpw   $0x000000,(%esp)
		je     _057605_jump

	_0575fe_jump:
		mov    $0x000001,%eax
		jmp    _057607_jump

	_057605_jump:
		xor    %eax,%eax

	_057607_jump:
		mov    (%ebx),%cl
		and    $0x0000fe,%cl
		and    $0x000001,%al
		mov    %cl,(%ebx)
		mov    %cl,%ch
		or     %al,%ch
		mov    %esi,%eax
		mov    %ch,(%ebx)
		call   _0573bc_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_057627_jump:
		mov    0x000082(%eax),%ah
		and    $0x0000fe,%ah
		mov    %ah,0x000082(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057640_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _01dc20_func
		test   %ax,%ax
		je     _057668_jump
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		lea    0x000000(,%ebx,4),%eax
		add    %eax,%ebx
		shl    $0x000002,%ebx
		mov    %edx,%eax
		call   *_0935c0_data(%ebx)

	_057668_jump:
		pop    %edx
		pop    %ebx
		mov    %eax,%eax
		ret    



_057670_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0e47b4_data,%ax
		testb  $0x000002,_092534_data(,%eax,4)
		je     _05768d_jump
		mov    %edx,%eax
		call   _07a73c_func

	_05768d_jump:
		xor    %eax,%eax
		mov    _0e47b4_data,%ax
		testb  $0x000020,_092534_data(,%eax,4)
		je     _0576a6_jump
		mov    %edx,%eax
		call   _02e0b8_func

	_0576a6_jump:
		xor    %eax,%eax
		mov    _0e47b4_data,%ax
		testb  $0x000001,_092536_data(,%eax,4)
		je     _0576bf_jump
		mov    %edx,%eax
		call   _01e3bc_func

	_0576bf_jump:
		xor    %eax,%eax
		mov    _0e47b4_data,%ax
		testb  $0x000080,_092535_data(,%eax,4)
		je     _0576da_jump
		mov    %edx,%eax
		call   _0603ec_func
		jmp    _0576de_jump

	_0576da_jump:
		movb   $0x00001e,0x000070(%edx)

	_0576de_jump:
		xor    %ebx,%ebx
		mov    _0e47b4_data,%bx
		lea    0x000000(,%ebx,4),%eax
		add    %eax,%ebx
		shl    $0x000002,%ebx
		mov    %edx,%eax
		call   *_0935b4_data(%ebx)
		cmpb   $0x000002,0x00006d(%edx)
		jne    _057708_jump
		mov    %edx,%eax
		call   _056900_func

	_057708_jump:
		testb  $0x000020,0x000081(%edx)
		je     _05771a_jump
		mov    %edx,%eax
		call   _02d600_func
		jmp    _057720_jump

	_05771a_jump:
		movw   $0x002710,0x000054(%edx)

	_057720_jump:
		xor    %eax,%eax
		mov    _0e47b4_data,%ax
		testb  $0x000040,_092535_data(,%eax,4)
		je     _057739_jump
		mov    %edx,%eax
		call   _062a00_func

	_057739_jump:
		xor    %eax,%eax
		mov    _0e47b4_data,%ax
		testb  $0x000020,_092534_data(,%eax,4)
		je     _057752_jump
		mov    %edx,%eax
		call   _057640_func

	_057752_jump:
		pop    %edx
		pop    %ebx
		ret    



_057758_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    $0xffffffff,%ebx
		xor    %edx,%edx
		mov    _0cf2ac_data,%eax
		mov    %dx,_0cea1c_data
		sar    $0x000010,%eax
		mov    %bx,_0ce954_data
		mov    %eax,0x000004(%esp)
		mov    _0cf2ae_data,%ebx
		mov    0x000004(%esp),%edx
		sar    $0x000010,%ebx
		add    $0x000528,%eax
		mov    %ebx,(%esp)
		sub    %edx,%eax
		mov    (%esp),%ecx
		sar    %eax
		add    $0x0004b0,%ebx
		mov    %eax,0x00000c(%esp)
		add    %edx,%eax
		sub    %ecx,%ebx
		sub    $0x0001f4,%eax
		sar    %ebx
		mov    %eax,0x000004(%esp)
		lea    -0x0001f4(%ecx,%ebx,1),%eax
		mov    %eax,(%esp)
		mov    _0cc7a8_data,%eax
		movswl (%eax),%ecx
		mov    %ecx,%eax
		xor    %edi,%edi
		shl    $0x000005,%eax
		mov    %ebx,0x000010(%esp)
		add    %ecx,%eax
		mov    _0cc7a0_data,%ecx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%ecx
		xor    %eax,%eax
		jmp    _05780b_jump

	_0577e7_jump:
		movl   $0x000000,0x00001c(%ecx)
		mov    _0cc7a8_data,%ecx
		movswl 0x000002(%ecx,%eax,1),%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0cc7a0_data,%esi
		add    $0x000002,%eax
		inc    %ebx
		add    %esi,%ecx

	_05780b_jump:
		mov    _0cc7aa_data,%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%ebx
		jl     _0577e7_jump
		mov    $_0ce954_data,%esi
		mov    _0cea1a_data,%eax
		dec    %ebp
		sar    $0x000010,%eax
		mov    %ebp,0x000014(%esp)
		add    %eax,%eax
		lea    0x000000(%ebp,%ebp,1),%ecx
		add    %eax,%esi
		mov    _0cc7a8_data,%eax
		movswl (%ecx,%eax,1),%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		shl    $0x000002,%eax
		mov    %esi,0x000008(%esp)
		add    %eax,%ebx
		test   %ebp,%ebp
		jl     _05792b_jump

	_057859_jump:
		cmpl   $0x000000,0x00001c(%ebx)
		jne    _0578ff_jump
		mov    0x000004(%esp),%edx
		mov    0x000028(%ebx),%eax
		sub    %edx,%eax
		mov    0x00000c(%esp),%ebp
		test   %eax,%eax
		jge    _057876_jump
		neg    %eax

	_057876_jump:
		cmp    %ebp,%eax
		jge    _0578bc_jump
		mov    (%esp),%edx
		mov    0x00002c(%ebx),%eax
		sub    %edx,%eax
		mov    0x000010(%esp),%ebp
		test   %eax,%eax
		jge    _05788c_jump
		neg    %eax

	_05788c_jump:
		cmp    %ebp,%eax
		jge    _0578bc_jump
		mov    _0cf2b0_data,%dx
		mov    0x00002c(%ebx),%ax
		sub    %edx,%eax
		mov    _0cf2ae_data,%dx
		movswl %ax,%ebp
		mov    0x000028(%ebx),%ax
		sub    %edx,%eax
		add    $0x000008,%eax
		mov    %ebp,%edx
		cwtl   
		call   _055708_func
		jmp    _0578ff_jump

	_0578bc_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000010,_092534_data(,%eax,4)
		je     _0578f8_jump
		mov    _0cf2b0_data,%dx
		mov    0x00002c(%ebx),%ax
		sub    %edx,%eax
		mov    _0cf2ae_data,%dx
		movswl %ax,%ebp
		mov    0x000028(%ebx),%ax
		sub    %edx,%eax
		add    $0x000008,%eax
		mov    %ebp,%edx
		cwtl   
		call   _055708_func
		jmp    _0578ff_jump

	_0578f8_jump:
		movl   $0x000000,0x000024(%ebx)

	_0578ff_jump:
		mov    _0cc7a8_data,%eax
		movswl -0x000002(%ecx,%eax,1),%eax
		imul   $0x000084,%eax,%eax
		mov    0x000014(%esp),%edx
		mov    _0cc7a0_data,%ebx
		dec    %edx
		sub    $0x000002,%ecx
		mov    %edx,0x000014(%esp)
		add    %eax,%ebx
		test   %ecx,%ecx
		jge    _057859_jump

	_05792b_jump:
		mov    _0cc7aa_data,%ebp
		sar    $0x000010,%ebp
		dec    %ebp
		mov    _0cc7a8_data,%eax
		lea    0x000000(,%ebp,2),%ecx
		movswl (%ecx,%eax,1),%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		test   %ebp,%ebp
		jl     _0579e8_jump
		mov    %ecx,%ebx

	_057961_jump:
		cmpl   $0x000000,0x000024(%eax)
		je     _0579a9_jump
		mov    _0cf2ae_data,%dx
		mov    0x000028(%eax),%cx
		sub    %edx,%ecx
		add    $0x000008,%ecx
		mov    %cx,0x000036(%eax)
		mov    _0cf2b0_data,%dx
		mov    0x00002c(%eax),%cx
		sub    %edx,%ecx
		mov    %cx,0x000038(%eax)
		add    $0x000002,%esi
		mov    0x000034(%eax),%ax
		inc    %edi
		mov    %ax,-0x000002(%esi)
		cmp    $0x000064,%edi
		jle    _0579c4_jump
		mov    $_0c0fe8_data,%eax
		call   _01f474_func
		jmp    _0579c4_jump

	_0579a9_jump:
		xor    %ecx,%ecx
		mov    0x000060(%eax),%cx
		testb  $0x000001,_092534_data(,%ecx,4)
		je     _0579c4_jump
		mov    0x000032(%eax),%eax
		sar    $0x000010,%eax
		call   _01f404_func

	_0579c4_jump:
		mov    _0cc7a8_data,%eax
		movswl -0x000002(%ebx,%eax,1),%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%ecx
		sub    $0x000002,%ebx
		dec    %ebp
		add    %ecx,%eax
		test   %ebx,%ebx
		jge    _057961_jump

	_0579e8_jump:
		mov    0x000008(%esp),%ebx
		movw   $0x00ffff,(%esi)
		sub    %ebx,%esi
		mov    _0cea1a_data,%eax
		mov    %esi,%ebx
		sar    $0x000010,%eax
		sar    %ebx
		add    %ebx,%eax
		mov    %ax,_0cea1c_data
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057a14_func:
		push   %edx
		mov    _0ce94a_data,%dx
		inc    %edx
		mov    %dx,_0ce94a_data
		cmp    $0x000063,%dx
		jle    _057a33_jump
		movw   $0x000063,_0ce94a_data

	_057a33_jump:
		mov    _0ce953_data,%ah
		cmp    $0x000004,%ah
		jne    _057a46_jump
		mov    %ah,_0ce0ba_data
		pop    %edx
		ret    

	_057a46_jump:
		movb   $0x000002,_0ce0ba_data
		pop    %edx
		ret    



_057a50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    _0cf220_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _057ac1_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x00007f(%edx),%ah
		test   %ah,%ah
		jbe    _057a84_jump
		mov    %ah,%bl
		movb   $0x000000,0x00006b(%edx)
		dec    %bl
		mov    %bl,0x00007f(%edx)

	_057a84_jump:
		mov    %edx,%eax
		call   _055b7c_func
		mov    %edx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _057ac1_jump
		mov    $0xffffffff,%ebx
		mov    _0cf254_data,%cx
		mov    %bx,_0cf222_data
		cmp    $0x000003,%cx
		je     _057aba_jump
		cmp    $0x000004,%cx
		je     _057aba_jump
		call   _057a14_func

	_057aba_jump:
		andb   $0x0000fb,0x000081(%edx)

	_057ac1_jump:
		mov    _0cf238_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _057b1f_jump
		mov    %edx,%eax
		shl    $0x000005,%edx
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    0x00007f(%edx),%cl
		test   %cl,%cl
		jbe    _057af3_jump
		mov    %cl,%ch
		movb   $0x000000,0x00006b(%edx)
		dec    %ch
		mov    %ch,0x00007f(%edx)

	_057af3_jump:
		mov    %edx,%eax
		call   _055b7c_func
		mov    %edx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _057b1f_jump
		mov    0x000081(%edx),%al
		mov    $0xffffffff,%edi
		and    $0x0000fb,%al
		mov    %di,_0cf23a_data
		mov    %al,0x000081(%edx)

	_057b1f_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057b24_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce952_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _0cea1c_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _057b90_jump

	_057b51_jump:
		mov    0x000060(%eax),%si
		cmp    $0x0000cc,%si
		je     _057b68_jump
		cmp    $0x0000cd,%si
		je     _057b68_jump
		call   _055b7c_func

	_057b68_jump:
		inc    %edx
		movswl %dx,%eax
		mov    _0ce952_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%ebx
		mov    _0cea1c_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _057b51_jump

	_057b90_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057b98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cf220_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _057bb6_jump
		mov    _0cf238_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _057bbb_jump

	_057bb6_jump:
		call   _057a50_func

	_057bbb_jump:
		cmpb   $0x000000,_0cf457_data
		je     _057bdb_jump
		mov    $0x000007,%edx
		mov    _0cdfb4_data,%eax
		call   _029094_func
		xor    %dl,%dl
		mov    %dl,_0cf457_data

	_057bdb_jump:
		mov    _0ce952_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cea1c_data,%cx
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%edx
		test   %cx,%cx
		jle    _057cd1_jump

	_057c08_jump:
		mov    0x000060(%edx),%ax
		mov    %ax,_0e47b4_data
		xor    %eax,%eax
		mov    _0e47b4_data,%ax
		testb  $0x000008,_092537_data(,%eax,4)
		jne    _057c50_jump
		cmp    $0x0000a1,%ax
		jne    _057c30_jump
		cmpb   $0x000017,0x00006c(%edx)
		je     _057c50_jump

	_057c30_jump:
		cmpw   $0x000053,_0e47b4_data
		jne    _057c40_jump
		cmpb   $0x000001,0x00006c(%edx)
		je     _057c50_jump

	_057c40_jump:
		cmpw   $0x000021,_0e47b4_data
		jne    _057c57_jump
		cmpb   $0x000023,0x00006c(%edx)
		je     _057c57_jump

	_057c50_jump:
		mov    %edx,%eax
		call   _01e744_func

	_057c57_jump:
		cmpw   $0x0000a1,_0e47b4_data
		je     _057ca5_jump
		cmpl   $0x000000,0x000024(%edx)
		je     _057ca5_jump
		mov    %edx,%eax
		call   _057670_func
		xor    %eax,%eax
		mov    _0e47b4_data,%ax
		testb  $0x000080,_092534_data(,%eax,4)
		jne    _057ca5_jump
		cmpb   $0x000000,0x000076(%edx)
		jne    _057ca5_jump
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    (%eax),%eax
		mov    0x00006c(%edx),%cl
		testb  $0x000008,0x000007(%eax,%ecx,8)
		je     _057ca5_jump
		incb   0x000076(%edx)

	_057ca5_jump:
		inc    %ebx
		movswl %bx,%eax
		mov    _0ce952_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%edx
		mov    _0cea1c_data,%si
		add    %eax,%edx
		cmp    %si,%bx
		jl     _057c08_jump

	_057cd1_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057cd8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ce952_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    _0cea1c_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _057d30_jump

	_057d03_jump:
		inc    %edx
		call   _057454_func
		movswl %dx,%eax
		mov    _0ce952_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%ebx
		mov    _0cea1c_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _057d03_jump

	_057d30_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057d34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    _0ce952_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _0cea1c_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _057d91_jump

	_057d65_jump:
		inc    %edx
		call   _01dc5c_func
		movswl %dx,%eax
		mov    _0ce952_data(,%eax,2),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0cc7a0_data,%eax
		mov    _0cea1c_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _057d65_jump

	_057d91_jump:
		mov    _0ce08c_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _057e60_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmpl   $0x000000,0x000024(%esi)
		je     _057e60_jump
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d7e0_func
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000074(%esi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0ce0ad_data,%dl
		sub    %edx,%eax
		mov    0x000060(%esi),%di
		mov    %eax,_0ce070_data
		cmp    $0x0000fe,%di
		jne    _057e56_jump
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		xor    %ebx,%ebx
		mov    _0ce06c_data,%ecx
		mov    _0ce0ac_data,%bl
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %ecx,%ebx
		add    %edx,%eax
		sub    %eax,%ebx
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _057e3e_jump
		sar    %cl,%ax
		jmp    _057e47_jump

	_057e3e_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_057e47_jump:
		mov    _0ce070_data,%esi
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0ce070_data

	_057e56_jump:
		mov    $_0ce044_data,%eax
		call   _01dc5c_func

	_057e60_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_057e6c_switch:
		.long   _058028_case
		.long   _0580f2_case
		.long   _057ec5_case
		.long   _057f75_case




_057e7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ce0c5_data,%dl
		xor    %ebx,%ebx
		test   $0x000008,%dl
		je     _057e9a_jump
		mov    _0ce06c_data,%si
		add    $0x000046,%esi
		jmp    _057ea4_jump

	_057e9a_jump:
		mov    _0ce06c_data,%si
		add    $0x00003a,%esi

	_057ea4_jump:
		mov    _0ce070_data,%di
		add    $0x000020,%edi
		cmp    $0x000003,%ax
		ja     _0581b0_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_057e6c_switch(,%eax,4)

	_057ec5_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x000003,%edx
		jge    _0581b0_jump
		mov    _0ce036_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce040_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $_0000ff_case,%edx
		testb  $0x000001,_0924f4_data(%edx)
		je     _057f1c_jump
		mov    $0x000001,%ebx

	_057f1c_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce040_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $_0000ff_case,%edx
		testb  $0x000001,_0924f4_data(%edx)
		je     _057f44_jump
		mov    $0x000001,%ebx

	_057f44_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _0581b0_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_057f75_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x00000c,%edx
		jle    _0581b0_jump
		add    $0x000040,%ecx
		mov    _0ce036_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce040_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $_0000ff_case,%edx
		testb  $0x000001,_0924f4_data(%edx)
		je     _057fcf_jump
		mov    $0x000001,%ebx

	_057fcf_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce040_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $_0000ff_case,%edx
		testb  $0x000001,_0924f4_data(%edx)
		je     _057ff7_jump
		mov    $0x000001,%ebx

	_057ff7_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _0581b0_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058028_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000003,%edx
		jge    _0581b0_jump
		movswl %di,%eax
		mov    _0ce036_data,%edx
		add    %esi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		dec    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce040_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $_0000ff_case,%edx
		testb  $0x000001,_0924f4_data(%edx)
		je     _058083_jump
		mov    $0x000001,%ebx

	_058083_jump:
		mov    _0ce036_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce040_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $_0000ff_case,%edx
		testb  $0x000001,_0924f4_data(%edx)
		je     _0580b5_jump
		mov    $0x000001,%ebx

	_0580b5_jump:
		mov    _0ce036_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _0581b0_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0580f2_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x00000c,%edx
		jle    _0581b0_jump
		movswl %di,%eax
		mov    _0ce036_data,%edx
		add    %esi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		lea    0x000003(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0ce040_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _05814e_jump
		mov    $0x000001,%ebx

	_05814e_jump:
		mov    _0ce036_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ecx
		mov    _0ce040_data,%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _058180_jump
		mov    $0x000001,%ebx

	_058180_jump:
		mov    _0ce036_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _0581b0_jump
		mov    $0x000001,%ebx

	_0581b0_jump:
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0581b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpw   $0x000002,_0cf254_data
		jne    _0581de_jump
		mov    $0x000002,%eax
		call   _057e7c_func
		test   %ax,%ax
		je     _0581de_jump
		xor    %ebx,%ebx
		mov    %bx,_0ce086_data

	_0581de_jump:
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0ce050_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce0b0_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _05820c_jump
		testb  $0x000002,_0cf221_data
		je     _058213_jump

	_05820c_jump:
		mov    $0x000028,%eax
		jmp    _058218_jump

	_058213_jump:
		mov    $0x000019,%eax

	_058218_jump:
		mov    _0ce084_data,%edx
		mov    _0ce070_data,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		mov    _0cf25a_data,%edx
		mov    %ebx,_0ce070_data
		sar    $0x000010,%edx
		movswl %ax,%ebx
		lea    -0x000014(%edx),%eax
		mov    _0ce070_data,%ecx
		sub    %ebx,%eax
		cmp    %ecx,%eax
		jle    _05827f_jump
		mov    %eax,_0ce070_data
		mov    _0ce08c_data,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    %cx,_0ce086_data
		cmp    $0xffffffff,%eax
		je     _05827f_jump
		mov    _0ce098_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		cmp    $0xffffffff,%eax
		sete   %al
		and    $_0000ff_case,%eax
		call   _02dd0c_func

	_05827f_jump:
		mov    $_0ce044_data,%eax
		xor    %esi,%esi
		call   _01dc5c_func
		mov    %si,_0cf2a6_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058298_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpw   $0x000002,_0cf254_data
		jne    _0582be_jump
		mov    $0x000003,%eax
		call   _057e7c_func
		test   %ax,%ax
		je     _0582be_jump
		xor    %ebx,%ebx
		mov    %bx,_0ce086_data

	_0582be_jump:
		mov    _0ce084_data,%eax
		mov    _0ce070_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    $_0ce044_data,%eax
		mov    %edx,_0ce070_data
		call   _01dc5c_func
		cmpb   $0x000002,_0ce0b1_data
		jne    _05833a_jump
		mov    _0cf264_data,%eax
		mov    _0cf2ae_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0ce084_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _058331_jump
		cmpw   $0x000064,_0ce07c_data
		jge    _058320_jump
		xor    %edi,%edi
		mov    %di,_0cf2a6_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058320_jump:
		mov    _0ce086_data,%ax
		mov    %ax,_0cf2a6_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058331_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cf2a6_data

	_05833a_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058340_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000003,_0ce0b1_data
		jne    _05835b_jump
		cmpb   $0x000017,_0ce0b0_data
		je     _0587e2_jump

	_05835b_jump:
		mov    _0cf2c6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05856c_jump
		mov    _0cf268_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _0ce0ad_data,%al
		sar    %edx
		sub    %eax,%edx
		mov    _0ce0b1_data,%bl
		add    $0x000072,%edx
		cmp    $0x000002,%bl
		setne  %al
		and    $_0000ff_case,%eax
		jne    _0583b0_jump
		cmpb   $0x00000f,_0ce0b0_data
		jne    _0584e8_jump
		cmpb   $0x000000,_0cf464_data
		je     _0584e8_jump

	_0583b0_jump:
		cmpw   $0x000000,_0cf242_data
		jne    _0584e8_jump
		cmpw   $_0000ff_case,_0cf2a6_data
		jne    _0583d7_jump
		cmpw   $0x000000,_0cf250_data
		je     _0584ac_jump

	_0583d7_jump:
		mov    _0ce07c_data,%ax
		sub    %edx,%eax
		mov    $0x000002,%cl
		mov    %eax,%edx
		test   %ax,%ax
		js     _0583ed_jump
		sar    %cl,%ax
		jmp    _0583f6_jump

	_0583ed_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0583f6_jump:
		mov    %ax,_0cf2a6_data
		mov    _0ce084_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05840a_jump
		neg    %eax

	_05840a_jump:
		mov    %eax,%ebx
		mov    _0cf2a4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05841a_jump
		neg    %eax

	_05841a_jump:
		cmp    %eax,%ebx
		jg     _05856c_jump
		mov    _0ce084_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _058430_jump
		neg    %eax

	_058430_jump:
		mov    %eax,%ebx
		mov    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _05843d_jump
		mov    %ebx,%eax

	_05843d_jump:
		mov    _0cf2a6_data,%bx
		test   %bx,%bx
		jle    _058465_jump
		movswl %ax,%ebx
		mov    _0cf2a4_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _05845a_jump
		mov    %ebx,%eax

	_05845a_jump:
		mov    %ax,_0cf2a6_data
		jmp    _05856c_jump

	_058465_jump:
		jge    _058485_jump
		movswl %ax,%ebx
		mov    _0cf2a4_data,%eax
		neg    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _05847a_jump
		mov    %ebx,%eax

	_05847a_jump:
		mov    %ax,_0cf2a6_data
		jmp    _05856c_jump

	_058485_jump:
		test   %dx,%dx
		jle    _058498_jump
		movw   $0x000001,_0cf2a6_data
		jmp    _05856c_jump

	_058498_jump:
		jge    _05856c_jump
		movw   $0x00ffff,_0cf2a6_data
		jmp    _05856c_jump

	_0584ac_jump:
		cmpb   $0x000001,_0ce0b1_data
		je     _05856c_jump
		mov    _0ce07a_data,%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		add    $0x000030,%eax
		cmp    %eax,%ebx
		jge    _0584da_jump
		movw   $0x00fffc,_0cf2a6_data
		jmp    _05856c_jump

	_0584da_jump:
		xor    %edi,%edi
		mov    %di,_0cf2a6_data
		jmp    _05856c_jump

	_0584e8_jump:
		mov    _0cf2b0_data,%ax
		cmp    _0cf266_data,%ax
		je     _05851b_jump
		mov    _0ce07a_data,%ebx
		mov    _0ce084_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _05851b_jump
		cmpw   $0x000000,_0ce086_data
		jg     _05854d_jump

	_05851b_jump:
		mov    _0cf2b0_data,%ax
		cmp    _0cf25c_data,%ax
		je     _05856c_jump
		xor    %eax,%eax
		mov    _0ce0b8_data,%al
		mov    _0ce07a_data,%edx
		neg    %eax
		sar    $0x000010,%edx
		sub    $0x000010,%eax
		cmp    %eax,%edx
		jg     _05856c_jump
		cmpw   $0x000000,_0ce086_data
		jge    _05856c_jump

	_05854d_jump:
		mov    _0ce086_data,%dx
		cmp    $0x000010,%dx
		jg     _058563_jump
		mov    %dx,_0cf2a6_data
		jmp    _05856c_jump

	_058563_jump:
		xor    %ebx,%ebx
		mov    %bx,_0cf2a6_data

	_05856c_jump:
		mov    _0cf2c4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _058773_jump
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0ce0ac_data,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    %edx,%ebx
		mov    _0cf298_data,%dx
		sub    $0x000030,%ebx
		add    $0x000030,%eax
		sub    %edx,%ebx
		mov    _0cf2a0_data,%dx
		mov    _0cf250_data,%cx
		add    %eax,%edx
		test   %cx,%cx
		jg     _0585c1_jump
		mov    _0ce084_data,%si
		test   %si,%si
		jle    _058606_jump

	_0585c1_jump:
		mov    _0ce07a_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _0585d5_jump
		sar    %cl,%ax
		jmp    _0585de_jump

	_0585d5_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0585de_jump:
		mov    _0924d8_data,%cx
		cmp    %cx,%ax
		jge    _0585f8_jump
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,_0924d8_data
		jmp    _0586da_jump

	_0585f8_jump:
		jle    _0586da_jump
		mov    %ecx,%edi
		inc    %edi
		jmp    _0586d3_jump

	_058606_jump:
		test   %cx,%cx
		jl     _058610_jump
		test   %si,%si
		jge    _058652_jump

	_058610_jump:
		mov    _0ce07a_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _058624_jump
		sar    %cl,%ax
		jmp    _05862d_jump

	_058624_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05862d_jump:
		mov    _0924d8_data,%cx
		cmp    %cx,%ax
		jle    _058647_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_0924d8_data
		jmp    _0586da_jump

	_058647_jump:
		jge    _0586da_jump
		jmp    _0586d0_jump

	_058652_jump:
		mov    _0ce0c5_data,%al
		test   $0x000008,%al
		je     _058696_jump
		mov    _0ce07a_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _05866f_jump
		sar    %cl,%ax
		jmp    _058678_jump

	_05866f_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_058678_jump:
		mov    _0924d8_data,%cx
		cmp    %cx,%ax
		jge    _05868f_jump
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,_0924d8_data
		jmp    _0586da_jump

	_05868f_jump:
		jle    _0586da_jump
		mov    %ecx,%edi
		inc    %edi
		jmp    _0586d3_jump

	_058696_jump:
		test   $0x000008,%al
		jne    _0586da_jump
		mov    _0ce07a_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _0586ae_jump
		sar    %cl,%ax
		jmp    _0586b7_jump

	_0586ae_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0586b7_jump:
		mov    _0924d8_data,%cx
		cmp    %cx,%ax
		jle    _0586ce_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_0924d8_data
		jmp    _0586da_jump

	_0586ce_jump:
		jge    _0586da_jump

	_0586d0_jump:
		mov    %ecx,%edi
		dec    %edi

	_0586d3_jump:
		mov    %di,_0924d8_data

	_0586da_jump:
		cmpb   $0x000000,_0cf445_data
		je     _058712_jump
		mov    _0924d6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0586f1_jump
		neg    %eax

	_0586f1_jump:
		cmp    $0x000004,%eax
		jle    _058712_jump
		cmpw   $0x000000,_0924d8_data
		jle    _058707_jump
		mov    $0x000004,%eax
		jmp    _05870c_jump

	_058707_jump:
		mov    $0xfffffffc,%eax

	_05870c_jump:
		mov    %ax,_0924d8_data

	_058712_jump:
		mov    $0x000002,%cl
		mov    _0924d8_data,%ax
		test   %ax,%ax
		js     _058724_jump
		sar    %cl,%ax
		jmp    _05872d_jump

	_058724_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05872d_jump:
		mov    _0cf2a4_data,%si
		add    %eax,%esi
		mov    _0ce07a_data,%di
		mov    %si,_0cf2a4_data
		cmp    %di,%dx
		jle    _058753_jump
		cmpw   $0x000000,_0ce084_data
		jl     _058766_jump

	_058753_jump:
		cmp    _0ce07a_data,%bx
		jge    _058773_jump
		cmpw   $0x000000,_0ce084_data
		jle    _058773_jump

	_058766_jump:
		mov    _0ce084_data,%ax
		add    %ax,_0cf2a4_data

	_058773_jump:
		mov    _0cf2c6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0587e2_jump
		mov    _0ce08c_data,%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		je     _0587e2_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000020,_092535_data(,%eax,4)
		je     _0587c3_jump
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		call   _055230_func
		add    %ax,_0cf2a6_data
		jmp    _0587d7_jump

	_0587c3_jump:
		mov    _0cf2a6_data,%si
		mov    0x000042(%edx),%ax
		add    %eax,%esi
		mov    %si,_0cf2a6_data

	_0587d7_jump:
		mov    0x00004c(%edx),%ax
		add    %ax,_0cf2a6_data

	_0587e2_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0587e8_func:
		push   %ebx
		push   %edx
		push   %esi
		cmpw   $0x000002,_0cf254_data
		jne    _058814_jump
		mov    $0x000001,%eax
		call   _057e7c_func
		test   %ax,%ax
		je     _058814_jump
		xor    %ebx,%ebx
		mov    %bx,_0ce084_data
		mov    %bx,_0cf250_data

	_058814_jump:
		mov    _0ce082_data,%eax
		mov    _0ce06c_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0cf152_data,%ax
		cwtl   
		mov    %edx,_0ce06c_data
		cmp    %edx,%eax
		jge    _05885c_jump
		mov    %eax,_0ce06c_data
		xor    %esi,%esi
		mov    _0ce0b1_data,%ah
		mov    %si,_0ce084_data
		mov    %si,_0cf250_data
		cmp    $0x000002,%ah
		je     _05885c_jump
		mov    %si,_0ce086_data

	_05885c_jump:
		mov    $_0ce044_data,%eax
		call   _01dc5c_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_05886c_func:
		push   %ebx
		push   %edx
		push   %esi
		cmpw   $0x000002,_0cf254_data
		jne    _058895_jump
		xor    %eax,%eax
		call   _057e7c_func
		test   %ax,%ax
		je     _058895_jump
		xor    %ebx,%ebx
		mov    %bx,_0ce084_data
		mov    %bx,_0cf250_data

	_058895_jump:
		mov    _0ce082_data,%eax
		mov    _0ce06c_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0cf2c4_data,%eax
		sar    $0x000010,%eax
		mov    %edx,_0ce06c_data
		cmp    $0xffffffff,%eax
		jne    _0588e3_jump
		mov    _0cf14e_data,%ax
		cwtl   
		cmp    %edx,%eax
		jle    _0588e3_jump
		mov    %eax,_0ce06c_data
		xor    %esi,%esi
		mov    _0ce0b1_data,%ah
		mov    %si,_0cf250_data
		cmp    $0x000002,%ah
		je     _0588e3_jump
		mov    %si,_0ce086_data

	_0588e3_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_0588e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000002,_0ce953_data
		jne    _058908_jump
		mov    _0ce0ba_data,%al
		xor    %bh,%bh
		mov    %al,_0ce94f_data
		mov    %bh,_0ce94e_data
		jmp    _05892f_jump

	_058908_jump:
		mov    _0ce0ba_data,%dl
		cmp    $0x000002,%dl
		ja     _05891d_jump
		xor    %bl,%bl
		mov    %dl,_0ce94f_data
		jmp    _058929_jump

	_05891d_jump:
		mov    $0x000002,%dh
		mov    %dl,%bl
		sub    %dh,%bl
		mov    %dh,_0ce94f_data

	_058929_jump:
		mov    %bl,_0ce94e_data

	_05892f_jump:
		mov    _0ce948_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _05894d_jump
		xor    %cl,%cl
		mov    %cl,_0ce94d_data
		mov    %cl,_0ce94c_data
		jmp    _05896f_jump

	_05894d_jump:
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,_0ce94d_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %al,_0ce94c_data

	_05896f_jump:
		cmpb   $0x000063,_0ce950_data
		jbe    _05897f_jump
		mov    $0x000063,%eax
		jmp    _058986_jump

	_05897f_jump:
		xor    %eax,%eax
		mov    _0ce950_data,%al

	_058986_jump:
		xor    %ebx,%ebx
		mov    $0x00000a,%ecx
		mov    %al,%bl
		mov    %al,_0ce950_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %al,_0ce951_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,_0ce952_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0589b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce8d4_data,%esi
		mov    _0cf1fc_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _058a1e_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		cmpl   $0x000000,0x000020(%ecx)
		je     _058a1e_jump
		mov    0x000032(%ecx),%eax
		mov    %esi,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%ecx),%ax
		je     _058a1e_jump

	_0589fa_jump:
		cwtl   
		imul   $0x000084,%eax,%ebx
		mov    _0cc7a0_data,%edx
		andb   $0x0000fb,0x000081(%edx,%ebx,1)
		mov    %esi,%edx
		mov    0x000034(%ecx),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _0589fa_jump

	_058a1e_jump:
		mov    %esi,_0ce8d4_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058a2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    _0ce8d4_data,%esi
		mov    %eax,%ecx
		xor    %ah,%ah
		mov    0x000032(%ecx),%edx
		mov    %ah,(%esp)
		sar    $0x000010,%edx
		mov    %esi,%eax
		mov    (%eax,%edx,2),%ax
		cmp    0x000034(%ecx),%ax
		je     _058a7d_jump

	_058a52_jump:
		cwtl   
		imul   $0x000084,%eax,%edx
		mov    _0cc7a0_data,%ebx
		cmpw   $0x0000a4,0x000060(%edx,%ebx,1)
		jne    _058a6e_jump
		movb   $0x000001,(%esp)
		jmp    _058a7d_jump

	_058a6e_jump:
		mov    %esi,%edx
		mov    0x000034(%ecx),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _058a52_jump

	_058a7d_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		mov    %esi,_0ce8d4_data
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058a90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    _0cc7a0_data,%ebx
		mov    _0cc7a4_data,%ax
		xor    %edi,%edi
		mov    %eax,(%esp)
		test   %ax,%ax
		jle    _058bc1_jump

	_058ab7_jump:
		cmpw   $0x0000a4,0x000060(%ebx)
		jne    _058bae_jump
		mov    _0ce8d4_data,%ecx
		movswl %di,%eax
		mov    (%ecx,%eax,2),%ax
		mov    %edi,%edx
		cmp    %di,%ax
		je     _058b16_jump

	_058ad7_jump:
		cmp    %di,%ax
		je     _058b16_jump
		testb  $0x000004,0x000081(%ebx)
		je     _058b04_jump
		cmpw   $0x0000a4,0x000060(%ebx)
		jne    _058b04_jump
		movswl %ax,%edx
		imul   $0x000084,%edx,%ecx
		mov    _0cc7a0_data,%edx
		andb   $0x0000fb,0x000081(%ecx,%edx,1)

	_058b04_jump:
		mov    _0ce8d4_data,%ecx
		mov    %eax,%edx
		cwtl   
		mov    (%ecx,%eax,2),%ax
		cmp    %dx,%ax
		jne    _058ad7_jump

	_058b16_jump:
		cmp    %di,%ax
		jne    _058b6c_jump
		movswl %di,%ecx
		mov    _0ce8d4_data,%eax
		add    %ecx,%ecx
		lea    (%eax,%ecx,1),%esi
		movswl %dx,%ecx
		lea    (%ecx,%ecx,1),%ebp
		add    %ebp,%eax
		mov    (%esi),%si
		mov    %si,(%eax)
		cmp    %si,%dx
		jne    _058b4e_jump
		imul   $0x000084,%ecx,%ecx
		mov    _0cc7a0_data,%eax
		movl   $0x000000,0x000020(%ecx,%eax,1)

	_058b4e_jump:
		movswl %di,%eax
		mov    _0ce8d4_data,%edx
		add    %eax,%eax
		add    %edx,%eax
		mov    (%eax),%dx
		mov    %dx,0x000052(%ebx)
		mov    %di,(%eax)
		movl   $0x000000,0x000020(%ebx)

	_058b6c_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _058bae_jump
		testb  $0x000004,0x000081(%ebx)
		jne    _058bae_jump
		mov    0x000052(%ebx),%si

	_058b80_jump:
		movswl %si,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0ce8d4_data,%eax
		mov    (%edx,%eax,1),%dx
		movswl %dx,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%ecx
		add    %ecx,%eax
		call   _058bcc_func
		cmp    %si,%dx
		jne    _058b80_jump

	_058bae_jump:
		mov    (%esp),%ecx
		inc    %edi
		add    $0x000084,%ebx
		cmp    %cx,%di
		jl     _058ab7_jump

	_058bc1_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058bcc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0ce8d4_data,%esi
		mov    %eax,%ebx
		mov    0x000034(%eax),%cx
		mov    %esi,%edx
		movswl %cx,%eax
		mov    (%edx,%eax,2),%ax
		cmp    %cx,%ax
		je     _058bfd_jump

	_058bec_jump:
		mov    %eax,%ecx
		movswl %ax,%edx
		mov    %esi,%eax
		mov    (%eax,%edx,2),%ax
		cmp    0x000034(%ebx),%ax
		jne    _058bec_jump

	_058bfd_jump:
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		lea    (%esi,%eax,1),%ebp
		movswl %cx,%eax
		lea    (%eax,%eax,1),%edi
		lea    (%esi,%edi,1),%edx
		mov    0x000000(%ebp),%di
		mov    %di,(%edx)
		cmp    %di,%cx
		jne    _058c32_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		movl   $0x000000,0x000020(%edx,%eax,4)

	_058c32_jump:
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		lea    (%esi,%eax,1),%edx
		mov    0x000034(%ebx),%ax
		mov    %ax,(%edx)
		movl   $0x000000,0x000020(%ebx)
		mov    %esi,_0ce8d4_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058c58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cc7a0_data,%edx
		mov    _0cc7a4_data,%si
		xor    %ebx,%ebx
		test   %si,%si
		jle    _058cc9_jump

	_058c70_jump:
		mov    _0ce8d4_data,%ecx
		movswl %bx,%eax
		cmp    (%ecx,%eax,2),%bx
		je     _058cb6_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		shl    $0x000002,%eax
		mov    _092537_data(%eax),%cl
		test   $0x000040,%cl
		jne    _058ca4_jump
		test   $0x000020,%cl
		je     _058cad_jump
		mov    %edx,%eax
		call   _058a2c_func
		test   %ax,%ax
		jne    _058cad_jump

	_058ca4_jump:
		mov    %edx,%eax
		call   _058bcc_func
		jmp    _058cbd_jump

	_058cad_jump:
		movl   $0x000001,0x000020(%edx)
		jmp    _058cbd_jump

	_058cb6_jump:
		movl   $0x000000,0x000020(%edx)

	_058cbd_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %si,%bx
		jl     _058c70_jump

	_058cc9_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058cd0_func:
		push   %ebx
		push   %edx
		mov    $0x000002,%bl
		mov    _0cf220_data,%ah
		mov    _0cf221_data,%dl
		and    $0x000048,%ah
		and    $0x000002,%dl
		mov    %bl,_0ce953_data
		mov    %ah,_0cf220_data
		mov    %dl,_0cf221_data
		xor    %bh,%bh
		mov    _0ce0c5_data,%dh
		mov    %bh,_0ce950_data
		and    $0x0000fe,%dh
		mov    %bh,_0cf44a_data
		mov    %dh,_0ce0c5_data
		pop    %edx
		pop    %ebx
		ret    



_058d18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		xor    %ah,%ah
		mov    _0ce0b1_data,%dl
		mov    %ah,_0cf453_data
		cmp    $0x000006,%dl
		sete   %al
		xor    %ah,%ah
		xor    %edx,%edx
		inc    %eax
		mov    %dx,_0cf16a_data
		mov    _0cf221_data,%dh
		mov    %ax,_0cf254_data
		test   $0x000002,%dh
		je     _058d6f_jump
		mov    $0x000021,%ecx
		mov    _0ce0ba_data,%al
		mov    $_0ce044_data,%edi
		mov    $_0ce7cc_data,%esi
		mov    %al,_0ce842_data
		rep movsl %ds:(%esi),%es:(%edi)

	_058d6f_jump:
		mov    $0x000017,%esi
		mov    $0x000064,%edx
		mov    $0x000014,%cl
		xor    %al,%al
		xor    %ebx,%ebx
		mov    _0ce0c5_data,%ah
		mov    %bx,_0cf2ae_data
		mov    %bx,_0cf2b0_data
		mov    %si,_0ce0a4_data
		mov    %bx,_0ce07a_data
		mov    %bx,_0ce07c_data
		mov    %bx,_0ce084_data
		mov    %bx,_0ce086_data
		mov    %edx,_0ce06c_data
		mov    %cl,_0ce0b8_data
		mov    $0x00000a,%ebx
		mov    $0x000002,%dl
		or     $0x00000c,%ah
		xor    %ch,%ch
		mov    %ebx,_0ce070_data
		mov    %ch,_0ce0ae_data
		mov    %ch,_0ce0af_data
		mov    %ah,_0ce0c5_data
		mov    %dl,_0ce0b1_data
		mov    %dl,_0ce0b0_data
		mov    %al,_0ce0c1_data
		mov    %al,_0ce0c3_data
		mov    $0x000050,%bl
		mov    $0xffffffff,%ecx
		xor    %dl,%dl
		mov    %bl,_0ce0ac_data
		mov    %cx,_0ce08e_data
		mov    %ecx,%edi
		mov    %cx,_0ce096_data
		xor    %dh,%dh
		mov    $0x00004e,%bh
		mov    $0x000001,%ecx
		mov    %di,_0ce09a_data
		mov    %dx,_0cf250_data
		mov    _0ce06c_data,%dx
		mov    %bh,_0ce0ad_data
		mov    %ecx,_0ce068_data
		mov    %ah,%cl
		xor    %bl,%bl
		mov    $0xffff8300,%eax
		and    $0x0000bf,%cl
		mov    %bl,_0cf47f_data
		mov    %bl,_0cf468_data
		mov    %bl,_0cf47b_data
		mov    %cl,_0ce0c5_data
		mov    %ax,_0cf256_data
		xor    %al,%al
		mov    $0x000001,%ch
		xor    %ah,%ah
		mov    %ch,_0cf46a_data
		mov    %al,_0cf485_data
		mov    %al,_0cf46e_data
		mov    %al,_0cf466_data
		mov    %al,_0cf42d_data

	_058e8f_jump:
		movswl %ax,%ebx
		inc    %eax
		mov    %dx,_0cdfbc_data(,%ebx,2)
		cmp    $0x00000a,%ax
		jl     _058e8f_jump
		xor    %ch,%ch
		mov    (%esp),%ah
		mov    %ch,_0ce172_data
		mov    %ch,_0ce174_data
		test   %ah,%ah
		je     _058ebd_jump
		andb   $0x0000f7,_0cf220_data

	_058ebd_jump:
		cmpw   $0x000009,_0cf270_data
		jne    _058ed1_jump
		cmpw   $0x000001,_0cf282_data
		je     _058eea_jump

	_058ed1_jump:
		cmpb   $0x000000,_0cf425_data
		jne    _058eea_jump
		cmpb   $0x000000,_0ca8c4_data
		jne    _058eea_jump
		andb   $0x0000bf,_0cf220_data

	_058eea_jump:
		mov    _0cf221_data,%cl
		test   $0x000080,%cl
		je     _058f1d_jump
		mov    %cl,%al
		mov    %cl,%ah
		shr    $0x000007,%ah
		and    $0x000001,%ah
		and    $0x0000fd,%al
		mov    %al,_0cf221_data
		mov    %ah,%al
		mov    _0cf221_data,%ch
		add    %ah,%al
		or     %al,%ch
		mov    %ch,_0cf221_data
		call   _05a734_func

	_058f1d_jump:
		andb   $0x0000e5,_0cf221_data
		cmpb   $0x000000,_0ce4d4_data
		je     _058f62_jump
		mov    _0ce2c4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _058f62_jump
		mov    _0cf221_data,%bl
		and    $0x00009f,%bl
		mov    _0cf282_data,%si
		mov    %bl,_0cf221_data
		cmp    $0x000006,%si
		jne    _058f81_jump
		cmpw   $0x000003,_0cf270_data
		jne    _058f81_jump
		jmp    _058f7c_jump

	_058f62_jump:
		mov    _0cf221_data,%dl
		and    $0x00009f,%dl
		mov    %dl,_0cf221_data
		mov    %dl,%dh
		or     $0x000020,%dh
		mov    %dh,_0cf221_data

	_058f7c_jump:
		call   _05a460_func

	_058f81_jump:
		mov    _0cc7a0_data,%edx
		mov    _0cc7a4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _059094_jump

	_058f99_jump:
		cmpw   $0x000063,0x000060(%edx)
		jne    _059084_jump
		cmpb   $0x000000,_0cf44a_data
		jne    _058fc4_jump
		mov    _0ce0c5_data,%cl
		xor    %esi,%esi
		and    $0x0000fb,%cl
		mov    %esi,_0ce068_data
		mov    %cl,_0ce0c5_data

	_058fc4_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%si
		mov    0x000068(%edx),%al
		add    %esi,%eax
		sub    $0x0000a0,%eax
		mov    %ax,_0cf2ae_data
		mov    0x00002c(%edx),%ax
		sub    $0x00000a,%eax
		mov    _095de5_data,%ch
		mov    %ax,_0cf2b0_data
		test   %ch,%ch
		jne    _058ff9_jump
		call   _05be90_func
		jmp    _059050_jump

	_058ff9_jump:
		mov    _0cf2ae_data,%ax
		mov    _0cf286_data,%di
		cmp    %di,%ax
		jl     _059012_jump
		mov    %di,_0cf2ae_data

	_059012_jump:
		mov    _0cf2b0_data,%ax
		mov    _0cf278_data,%bx
		cmp    %bx,%ax
		jl     _05902b_jump
		mov    %bx,_0cf2b0_data

	_05902b_jump:
		cmpw   $0x000000,_0cf2ae_data
		jge    _05903e_jump
		xor    %esi,%esi
		mov    %si,_0cf2ae_data

	_05903e_jump:
		cmpw   $0x000000,_0cf2b0_data
		jge    _059050_jump
		xor    %eax,%eax
		mov    %ax,_0cf2b0_data

	_059050_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%ebx
		mov    0x000068(%edx),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce0ac_data,%al
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%al
		mov    0x00002c(%edx),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0ce0ad_data,%al
		sub    %eax,%edx
		mov    %ebx,_0ce06c_data
		mov    %edx,_0ce070_data
		jmp    _059094_jump

	_059084_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _058f99_jump

	_059094_jump:
		cmpb   $0x000000,_0cf48a_data
		je     _0590a9_jump
		mov    $_0ce044_data,%eax
		call   _01e3bc_func
		jmp    _0590b9_jump

	_0590a9_jump:
		xor    %eax,%eax

	_0590ab_jump:
		inc    %eax
		xor    %dl,%dl
		mov    %dl,_0ce0a5_data(%eax)
		cmp    $0x000005,%eax
		jb     _0590ab_jump

	_0590b9_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0590c4_func:
		push   %edx
		and    $_0000ff_case,%eax
		mov    _0924f4_data(%eax),%dl
		test   $0x000040,%dl
		je     _0590e1_jump
		test   $0x000008,%dl
		je     _0590e1_jump
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_0590e1_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_0590e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		cmpb   $0x000007,_0ce0b1_data
		je     _059264_jump
		mov    _0ce06c_data,%si
		xor    %eax,%eax
		mov    _0ce070_data,%dx
		mov    _0ce0ac_data,%al
		xor    %ebx,%ebx
		add    %eax,%esi
		xor    %eax,%eax
		mov    _0ce0ad_data,%bl
		mov    _0ce0a6_data,%al
		add    %edx,%ebx
		testb  $0x000040,_0924f4_data(%eax)
		je     _059130_jump
		sub    $0x000008,%ebx

	_059130_jump:
		mov    _0ce084_data,%ax
		add    %eax,%eax
		movswl %bx,%ecx
		add    %eax,%esi
		lea    -0x000008(%ecx),%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		movswl %ax,%ebx
		mov    %ebx,%eax
		call   _01e1b4_func
		mov    %al,0x000008(%esp)
		lea    -0x000018(%ecx),%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _01e1b4_func
		mov    %al,(%esp)
		mov    %al,0x000004(%esp)
		lea    -0x000028(%ecx),%eax
		sar    $0x000004,%eax
		sub    $0x000038,%ecx
		movswl %ax,%edx
		mov    %ebx,%eax
		sar    $0x000004,%ecx
		call   _01e1b4_func
		mov    %al,0x00000c(%esp)
		movswl %cx,%edx
		mov    %ebx,%eax
		call   _01e1b4_func
		mov    %al,%cl
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    _0924f4_data(%eax),%dh
		xor    %ebx,%ebx
		test   $0x000010,%dh
		je     _0591be_jump
		xor    %eax,%eax
		mov    (%esp),%al
		call   _0590c4_func
		test   %ax,%ax
		jne    _0591be_jump
		mov    $0x000001,%ebx

	_0591be_jump:
		test   %bx,%bx
		jne    _059237_jump
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0ce050_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0ce0b0_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		jne    _059237_jump
		testb  $0x000002,_0cf221_data
		jne    _059237_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		testb  $0x000010,_0924f4_data(%eax)
		je     _059215_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		call   _0590c4_func
		test   %ax,%ax
		je     _059232_jump

	_059215_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		testb  $0x000010,_0924f4_data(%eax)
		je     _059237_jump
		xor    %eax,%eax
		mov    %cl,%al
		call   _0590c4_func
		test   %ax,%ax
		jne    _059237_jump

	_059232_jump:
		mov    $0x000001,%ebx

	_059237_jump:
		test   %bx,%bx
		je     _059264_jump
		xor    %ebx,%ebx
		mov    $0x000001,%eax
		mov    %bx,_0ce084_data
		mov    %bx,_0cf250_data
		mov    %bx,_0ce08c_data
		call   _06c468_func
		xor    %eax,%eax
		call   _06c468_func

	_059264_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05926c_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		mov    %dx,_0cf2a4_data
		mov    %dx,_0cf2a6_data
		mov    %dx,_0ce084_data
		mov    %dx,_0ce086_data
		call   _041d08_func
		test   %ax,%ax
		je     _0592b1_jump
		xor    %eax,%eax
		mov    _0ce084_data,%dx
		mov    _0cf463_data,%al
		add    %eax,%edx
		mov    %dx,_0ce084_data
		jmp    _0592d2_jump

	_0592b1_jump:
		call   _041c98_func
		test   %ax,%ax
		je     _0592d2_jump
		xor    %eax,%eax
		mov    _0ce084_data,%di
		mov    _0cf463_data,%al
		sub    %eax,%edi
		mov    %di,_0ce084_data

	_0592d2_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _0592f2_jump
		xor    %edx,%edx
		mov    _0ce084_data,%eax
		mov    _0cf463_data,%dl
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		jmp    _059310_jump

	_0592f2_jump:
		call   _041de8_func
		test   %ax,%ax
		je     _059316_jump
		xor    %edx,%edx
		mov    _0ce084_data,%eax
		mov    _0cf463_data,%dl
		sar    $0x000010,%eax
		sar    %edx
		sub    %edx,%eax

	_059310_jump:
		mov    %ax,_0ce086_data

	_059316_jump:
		mov    _0ce086_data,%bx
		test   %bx,%bx
		jle    _059329_jump
		call   _058298_func
		jmp    _059330_jump

	_059329_jump:
		jge    _059330_jump
		call   _0581b8_func

	_059330_jump:
		mov    _0ce084_data,%si
		test   %si,%si
		jge    _059343_jump
		call   _05886c_func
		jmp    _05934a_jump

	_059343_jump:
		jle    _05934a_jump
		call   _0587e8_func

	_05934a_jump:
		mov    $_0ce044_data,%eax
		call   _01dc5c_func
		mov    _0ce084_data,%ax
		mov    %ax,_0cf2a4_data
		mov    _0ce086_data,%ax
		mov    %ax,_0cf2a6_data
		call   _02eb5c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_059378_switch:
		.long   _059402_case
		.long   _059437_case
		.long   _05946c_case
		.long   _059487_case




_059388_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0ce06c_data,%ax
		mov    _0ce070_data,%di
		mov    _0cf26e_data,%cx
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ax,(%esp)
		mov    %dx,_0cf2c6_data
		mov    $0xffffffff,%edx
		test   %cx,%cx
		jle    _059517_jump

	_0593c2_jump:
		movswl %bx,%eax
		mov    _0cdfd2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%esi
		add    %esi,%eax
		cmpw   $0x000040,0x000060(%eax)
		jne    _059517_jump
		mov    0x000076(%eax),%cl
		cmp    $0x000003,%cl
		ja     _059506_jump
		and    $_0000ff_case,%ecx
		jmp    *%cs:_059378_switch(,%ecx,4)

	_059402_case:
		mov    -0x000002(%esp),%ecx
		mov    0x000028(%eax),%ebp
		sar    $0x000010,%ecx
		cmp    %ebp,%ecx
		jl     _059506_jump
		mov    0x00003a(%eax),%ecx
		mov    _0cf2c6_data,%si
		sar    $0x000010,%ecx
		inc    %esi
		sub    $0x0000c8,%ecx
		mov    %si,_0cf2c6_data
		mov    %ecx,0x000028(%eax)
		jmp    _059506_jump

	_059437_case:
		mov    -0x000002(%esp),%ecx
		mov    0x000028(%eax),%esi
		sar    $0x000010,%ecx
		cmp    %esi,%ecx
		jl     _059506_jump
		mov    0x00003a(%eax),%ecx
		mov    _0cf2c6_data,%si
		sar    $0x000010,%ecx
		dec    %esi
		sub    $0x0000c8,%ecx
		mov    %si,_0cf2c6_data
		mov    %ecx,0x000028(%eax)
		jmp    _059506_jump

	_05946c_case:
		movswl %di,%ecx
		cmp    0x00002c(%eax),%ecx
		jl     _05947b_jump
		neg    %edx
		jmp    _059506_jump

	_05947b_jump:
		movl   $0x002710,0x00002c(%eax)
		jmp    _059506_jump

	_059487_case:
		mov    _0cf272_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _0594aa_jump
		imul   $0x000084,%ecx,%ecx
		add    %ecx,%esi
		cmpb   $0x000000,0x000076(%esi)
		jne    _059506_jump
		cmpw   $0x000000,0x000050(%esi)
		jne    _059506_jump

	_0594aa_jump:
		movswl %di,%ecx
		cmp    0x00002c(%eax),%ecx
		jl     _0594d9_jump
		movswl %dx,%eax
		mov    %dx,_0cf2c8_data
		test   %eax,%eax
		jge    _0594c2_jump
		neg    %eax

	_0594c2_jump:
		mov    _0cf2c8_data,%dx
		cmp    $0x000001,%eax
		jne    _0594d5_jump
		mov    $0x000002,%edx
		jmp    _0594e0_jump

	_0594d5_jump:
		neg    %edx
		jmp    _0594e0_jump

	_0594d9_jump:
		movl   $0x002710,0x00002c(%eax)

	_0594e0_jump:
		mov    _0cf272_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _059506_jump
		cmp    $0x000002,%dx
		je     _059506_jump
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%ecx
		movw   $0x000002,0x000056(%ecx,%eax,1)

	_059506_jump:
		mov    _0cf26e_data,%si
		inc    %ebx
		cmp    %si,%bx
		jl     _0593c2_jump

	_059517_jump:
		mov    _0cf2c6_data,%si
		mov    $0x000001,%al
		test   %si,%si
		jg     _05952f_jump
		mov    %esi,%edi
		dec    %edi
		mov    %di,_0cf2c6_data

	_05952f_jump:
		test   %al,%al
		je     _05959d_jump
		mov    _0cf2c6_data,%ax
		test   %ax,%ax
		jg     _059556_jump
		mov    _0cf2c4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jge    _05955c_jump
		mov    _0cf2c6_data,%ax
		inc    %eax

	_059556_jump:
		mov    %ax,_0cf2a4_data

	_05955c_jump:
		cmp    $0x000001,%dx
		jne    _05956d_jump
		movw   $0x00ffff,_0cf2a6_data
		jmp    _05959d_jump

	_05956d_jump:
		cmp    $0x000002,%dx
		jne    _059590_jump
		cmpb   $0x000000,_0cf3ef_data
		je     _059587_jump
		movw   $0x00ffff,_0cf2a6_data
		jmp    _059590_jump

	_059587_jump:
		xor    %ebx,%ebx
		mov    %bx,_0cf2a6_data

	_059590_jump:
		movswl %dx,%eax
		cmp    $0xfffffffe,%eax
		jne    _05959d_jump
		mov    $0xffffffff,%edx

	_05959d_jump:
		mov    %dx,_0cf2c8_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0595b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %al,%cl
		mov    _0cc7a0_data,%edx
		mov    _0cc7a4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _0595de_jump

	_0595cb_jump:
		add    $0x000084,%edx
		inc    %eax
		movl   $0x000000,-0x000068(%edx)
		cmp    %bx,%ax
		jl     _0595cb_jump

	_0595de_jump:
		xor    %ebx,%ebx
		xor    %esi,%esi

	_0595e2_jump:
		movswl %bx,%edx
		imul   $0x000282,%edx,%edx
		mov    %esi,%eax
		mov    %si,_0c96a0_data(%edx)
		add    $_0c9420_data,%edx

	_0595fa_jump:
		add    $0x000002,%edx
		inc    %eax
		mov    %si,-0x000002(%edx)
		cmp    $0x000140,%ax
		jl     _0595fa_jump
		inc    %ebx
		cmp    $0x000008,%bx
		jl     _0595e2_jump
		cmpb   $0x000000,_0cf44a_data
		jne    _05961d_jump
		call   _05ad60_func

	_05961d_jump:
		cmpw   $0x000001,_0cf282_data
		jne    _05963b_jump
		cmpw   $0x000009,_0cf270_data
		jne    _05963b_jump
		mov    $0x00000b,%eax
		call   _05b7fc_jump

	_05963b_jump:
		mov    _0cf229_data,%al
		xor    %dl,%dl
		xor    %esi,%esi
		xor    %bl,%bl
		mov    %dl,_0cf45a_data
		mov    %si,_0cf206_data
		mov    %bl,_0cf445_data
		mov    %si,_0cf2e6_data
		shl    $0x000005,%al
		mov    %si,_0cf2ec_data
		shr    $0x000007,%al
		xor    %dh,%dh
		xor    %bh,%bh
		mov    %dl,_0cf431_data
		mov    %dx,_0cf2e4_data
		mov    %bh,_0cf47d_data
		mov    _0cf282_data,%bx
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ax,_0cf17c_data
		mov    %edx,_0ce8ec_data
		cmp    $0x000005,%bx
		jne    _0596c8_jump
		cmpw   $0x00000a,_0cf270_data
		jne    _0596c8_jump
		mov    $0x000020,%edi
		mov    $0x000138,%eax
		mov    %di,_0ce03a_data
		mov    %ax,_0cf266_data
		mov    %ax,_0cf278_data

	_0596c8_jump:
		mov    $0xfffffffe,%esi
		xor    %ch,%ch
		xor    %ebx,%ebx
		mov    %ch,_0cf441_data
		mov    %ebx,_0cd2c4_data
		mov    %esi,_0cd2c8_data
		call   _054850_func
		mov    $0xffffffff,%ebx
		mov    _095de5_data,%al
		xor    %esi,%esi
		mov    %bx,_0ce078_data
		mov    %si,_0cea1c_data
		mov    %bx,_0ce954_data
		mov    %si,_0cf2ae_data
		mov    %si,_0cf2b0_data
		test   %al,%al
		jne    _059722_jump
		call   _05bde4_func
		jmp    _059792_jump

	_059722_jump:
		mov    _0ce03a_data,%ax
		shl    $0x000004,%eax
		sub    $0x0000c8,%eax
		mov    %ax,_0cf278_data
		mov    _0ce038_data,%ax
		shl    $0x000004,%eax
		sub    $0x000131,%eax
		mov    %ax,_0cf286_data
		test   %ax,%ax
		jge    _059758_jump
		mov    %si,_0cf286_data

	_059758_jump:
		cmpw   $0x000000,_0cf278_data
		jge    _05976a_jump
		xor    %eax,%eax
		mov    %ax,_0cf278_data

	_05976a_jump:
		xor    %edx,%edx
		mov    _0cf286_data,%ax
		mov    %dx,_0cf25a_data
		mov    %ax,_0cf268_data
		mov    _0cf278_data,%ax
		mov    %dx,_0cf25c_data
		mov    %ax,_0cf266_data

	_059792_jump:
		mov    $0xffffffff,%ebx
		mov    _0cf46d_data,%ch
		xor    %esi,%esi
		xor    %ah,%ah
		mov    %si,_0cf2a6_data
		mov    %si,_0cf2a4_data
		mov    %si,_0924da_data
		mov    %si,_0924d8_data
		mov    %si,_0cf296_data
		mov    %ah,_0cf469_data
		mov    %si,_0cf250_data
		mov    %si,_0cf276_data
		mov    %si,_0cf242_data
		xor    %al,%al
		mov    %bx,_0cf2aa_data
		mov    %ax,_0cf27c_data
		mov    %al,_0cf457_data
		mov    %al,_0cf465_data
		mov    %al,_0cf467_data
		mov    %al,_0cf479_data
		test   %ch,%ch
		jne    _05980d_jump
		movb   $0x000040,_0cf471_data

	_05980d_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _058d18_func
		cmpw   $0x000000,_0cf1fc_data
		jne    _059849_jump
		cmpw   $0x000000,_0cf292_data
		je     _059849_jump
		cmpb   $0x000000,_0ce4d9_data
		je     _059849_jump
		mov    $_0ce280_data,%eax
		mov    _0ce950_data,%dl
		call   _073674_func
		mov    %dl,_0ce950_data

	_059849_jump:
		cmpw   $0x000000,_0cf292_data
		jne    _0598d2_jump
		mov    _0cf475_data,%al
		mov    %al,_0ce4d9_data
		mov    _0cf29a_data,%eax
		mov    $0x000001,%edi
		sar    $0x000010,%eax
		mov    _0ce0c5_data,%dh
		mov    %eax,_0ce06c_data
		mov    _0cf292_data,%eax
		mov    %edi,_0ce068_data
		sar    $0x000010,%eax
		and    $0x0000fb,%dh
		mov    %eax,_0ce070_data
		mov    _0cf477_data,%al
		mov    %dh,_0ce0c5_data
		inc    %al
		mov    %dh,%bl
		mov    %al,_0cf474_data
		xor    %eax,%eax
		or     $0x000004,%bl
		mov    _0cf477_data,%al
		mov    %bl,_0ce0c5_data
		call   _03c62c_func
		mov    _0cf2a8_data,%ax
		mov    %ax,_0cf2ae_data
		mov    _0cf2ac_data,%ax
		mov    %ax,_0cf2b0_data
		jmp    _0598da_jump

	_0598d2_jump:
		xor    %dl,%dl
		mov    %dl,_0cf446_data

	_0598da_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _05e544_func
		call   _058c58_func
		call   _0589b8_func
		call   _05f508_func
		cmpw   $0x000005,_0cf232_data
		jne    _059918_jump
		cmpw   $0x000004,_0cf224_data
		jne    _059918_jump
		testb  $0x000002,_0cf229_data
		je     _059918_jump
		orb    $0x000004,_0cf221_data
		jmp    _05991f_jump

	_059918_jump:
		andb   $0x0000fb,_0cf221_data

	_05991f_jump:
		testb  $0x000004,_0cf221_data
		je     _05992d_jump
		call   _04818c_func

	_05992d_jump:
		call   _057b98_func
		cmpw   $0x000014,_0ce038_data
		jg     _05994e_jump
		mov    _0cf268_data,%ax
		mov    %ax,_0cf25a_data
		mov    %ax,_0cf2ae_data

	_05994e_jump:
		cmpb   $0x000000,_0cf40f_data
		je     _059969_jump
		mov    _0cf25a_data,%ax
		mov    %ax,_0cf268_data
		mov    %ax,_0cf2ae_data

	_059969_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059970_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _0548bc_func
		call   _0238fc_func
		call   _01f36c_func
		call   _0259ec_func
		mov    $0x000001,%edx
		mov    $0x000003,%ecx
		mov    $0x000002,%ah
		mov    $0xffffffff,%edi
		xor    %bl,%bl
		mov    %dx,_0cf272_data
		mov    %edx,%esi
		mov    %dx,_0cf288_data
		mov    %cx,_0ce94a_data
		mov    %ah,_0ce0ba_data
		mov    %bl,_0cf453_data
		mov    $0x000001,%dl
		mov    $0x0000a0,%eax
		mov    %si,_0cf292_data
		xor    %bh,%bh
		mov    %dl,_0ce170_data
		mov    $0x000005,%dh
		xor    %cl,%cl
		mov    %dh,_0cf434_data
		mov    $0x0000aa,%edx
		mov    %bl,_0cf432_data
		call   _01d18c_func
		call   _058cd0_func
		mov    $0x000005,%eax
		mov    %di,_0cf2c6_data
		mov    %di,_0cf2c8_data
		mov    %bx,_0cf2a0_data
		xor    %edx,%edx
		mov    %cl,_0cf46b_data
		mov    %dx,_0cf298_data
		call   _06b8d0_func
		movswl %ax,%edx
		add    %edx,%edx
		mov    _095dc8_data(%edx),%cx
		mov    %ax,_0cf15e_data
		cmp    $0x000005,%cx
		jne    _059a59_jump
		cmpw   $0x00000a,_095dd4_data(%edx)
		jne    _059a59_jump
		inc    %eax
		mov    %ax,_0cf15e_data
		cmp    $0x000006,%ax
		jne    _059a59_jump
		xor    %eax,%eax
		mov    %ax,_0cf15e_data

	_059a59_jump:
		mov    $0x000001,%ch
		mov    $0xfffffffe,%edx
		xor    %ah,%ah
		mov    %ch,_0cf42e_data
		mov    %ch,_0cf42f_data
		mov    %edx,_0cd2c8_data
		mov    %ah,_0cf48b_data
		mov    $0x000708,%edx
		mov    %ah,_0cf430_data
		mov    %dx,_0cf15c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059a94_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    %dx,_0cf288_data
		mov    %bx,_0cf272_data
		pop    %edx
		pop    %ebx
		ret    



_059ab0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    _0cca4c_data,%eax
		mov    %eax,_0cca40_data
		mov    _0cca48_data,%eax
		mov    %eax,_0cca34_data
		mov    _0cca54_data,%eax
		mov    %eax,_0cca30_data
		mov    _0cca50_data,%eax
		mov    %eax,_0cca2c_data
		cmpb   $0x000000,_0cf46d_data
		jne    _059b93_jump
		call   _023770_func
		cwtl   
		cmp    $0xfffffffe,%eax
		setne  %al
		xor    %ah,%ah
		mov    %ax,_0cf1fc_data
		test   %ax,%ax
		jne    _059b1a_jump
		cmpw   $0x000000,_0cf292_data
		je     _059b1a_jump
		cmpb   $0x000000,_0cf44a_data
		jne    _059b1a_jump
		mov    $0x000001,%al
		jmp    _059b1c_jump

	_059b1a_jump:
		xor    %al,%al

	_059b1c_jump:
		mov    %al,%bl
		test   %al,%al
		je     _059b30_jump
		xor    %ecx,%ecx
		call   _073430_func
		mov    %cx,_0cf1f8_data

	_059b30_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _0595b0_func
		test   %bl,%bl
		je     _059b49_jump
		mov    $_0ce280_data,%edx
		xor    %eax,%eax
		call   _07343c_func

	_059b49_jump:
		cmpw   $0x000000,_0cf292_data
		jne    _059b63_jump
		movw   $0x000001,_0cf292_data
		call   _01cd88_func
		jmp    _059b6b_jump

	_059b63_jump:
		xor    %bh,%bh
		mov    %bh,_0cf446_data

	_059b6b_jump:
		mov    $0x000001,%edx
		xor    %eax,%eax
		mov    $0x000010,%cl
		call   _058a90_func
		mov    %dx,_0cf254_data
		xor    %eax,%eax
		mov    %cl,_0cf463_data
		mov    %ax,_0cf272_data
		call   _057758_func

	_059b93_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059b98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    _0cc7a0_data,%esi
		xor    %edx,%edx
		mov    _0cc7a4_data,%ax
		mov    %edx,(%esp)
		mov    %eax,0x000004(%esp)
		test   %ax,%ax
		jle    _059c96_jump

	_059bbe_jump:
		cmpw   $0x0000a4,0x000060(%esi)
		jne    _059c7c_jump
		testb  $0x000004,0x000081(%esi)
		je     _059c1f_jump
		mov    _0ce8d4_data,%ebx
		mov    0x000052(%esi),%ax

	_059bdd_jump:
		mov    %eax,%edx
		cwtl   
		mov    0x000052(%esi),%cx
		mov    (%ebx,%eax,2),%ax
		cmp    %cx,%ax
		jne    _059bdd_jump
		mov    0x000032(%esi),%ecx
		sar    $0x000010,%ecx
		mov    %ax,(%ebx,%ecx,2)
		movswl %dx,%eax
		mov    0x000034(%esi),%dx
		mov    %dx,(%ebx,%eax,2)
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%ebx
		movl   $0x000001,0x000020(%esi)
		movl   $0x000001,0x000020(%ebx,%eax,1)
		jmp    _059c7c_jump

	_059c1f_jump:
		mov    0x000034(%esi),%dx
		movswl %dx,%eax
		mov    _0ce2c8_data(,%eax,2),%ax
		cmp    %ax,%dx
		je     _059c7c_jump

	_059c33_jump:
		movswl %dx,%ebx
		mov    _0ce8d4_data,%edi
		mov    _0ce2c8_data(,%ebx,2),%ax
		mov    %ax,(%edi,%ebx,2)
		imul   $0x000084,%ebx,%ebx
		cmp    %ax,%dx
		je     _059c63_jump
		mov    _0cc7a0_data,%ecx
		movl   $0x000001,0x000020(%ecx,%ebx,1)
		jmp    _059c71_jump

	_059c63_jump:
		mov    _0cc7a0_data,%ecx
		movl   $0x000000,0x000020(%ecx,%ebx,1)

	_059c71_jump:
		mov    0x000034(%esi),%bx
		mov    %eax,%edx
		cmp    %bx,%ax
		jne    _059c33_jump

	_059c7c_jump:
		mov    (%esp),%ecx
		mov    0x000004(%esp),%edi
		inc    %ecx
		add    $0x000084,%esi
		mov    %ecx,(%esp)
		cmp    %di,%cx
		jl     _059bbe_jump

	_059c96_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059ca0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _059b98_func
		cmpw   $0x000000,_0cf1fc_data
		jne    _059cdd_jump
		cmpw   $0x000000,_0cf292_data
		je     _059cdd_jump
		xor    %eax,%eax
		mov    _0cf270_data,%al
		call   _0606f4_func
		test   %ax,%ax
		jne    _059cdd_jump
		cmpb   $0x000000,_0cf44a_data
		jne    _059cdd_jump
		call   _073430_func

	_059cdd_jump:
		mov    _0cf288_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _059d5f_jump
		cmpw   $0x000000,_0cf272_data
		jne    _059cfe_jump
		cmpw   $0x000000,_0cf288_data
		je     _059d5f_jump

	_059cfe_jump:
		mov    $0x000021,%ecx
		mov    $_0ce850_data,%edi
		mov    $_0ce044_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0ce044_data,%edi
		mov    $_0ce7cc_data,%esi
		mov    $0x000001,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		call   _058d18_func
		mov    _0ce8c6_data,%al
		mov    %al,_0ce0ba_data
		mov    _0ce8c7_data,%al
		xor    %ebx,%ebx
		mov    %al,_0ce0bb_data
		mov    _0ce8c9_data,%al
		xor    %edx,%edx
		mov    %al,_0ce0bd_data
		mov    $_0ce044_data,%eax
		xor    %edi,%edi
		call   _01d444_func
		mov    %di,_0cf254_data

	_059d5f_jump:
		cmpb   $0x000000,_0cf462_data
		je     _059d6d_jump
		call   _01f390_func

	_059d6d_jump:
		mov    _0cf27c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _059d82_jump
		xor    %dh,%dh
		mov    %dh,_0ca8c5_data

	_059d82_jump:
		mov    $_0cd248_data,%eax
		call   _07f424_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059d94_func:
		push   %edx
		cmpb   $0x000000,_0cf471_data
		jne    _059db1_jump
		call   _059b98_func
		xor    %eax,%eax
		call   _0595b0_func
		xor    %eax,%eax
		call   _058a90_func

	_059db1_jump:
		cmpw   $0x000000,_0cf1fc_data
		jne    _059dd9_jump
		cmpw   $0x000000,_0cf292_data
		je     _059dd9_jump
		mov    $_0ce4dc_data,%edx
		xor    %eax,%eax
		call   _07343c_func
		xor    %dl,%dl
		mov    %dl,_0cf48b_data

	_059dd9_jump:
		pop    %edx
		ret    



_059ddc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cf47a_data
		je     _059e9c_jump
		mov    _0cf288_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _059e81_jump
		mov    $0x000021,%ecx
		mov    $_0ce7cc_data,%edi
		mov    $_0ce044_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%esi
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %esi,%eax
		mov    _0cc7a0_data,%esi
		shl    $0x000002,%eax
		mov    $_0ce044_data,%edi
		add    %eax,%esi
		mov    $0x000001,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		call   _058d18_func
		mov    _0ce842_data,%al
		mov    %al,_0ce0ba_data
		mov    _0ce843_data,%al
		mov    $0x000006,%edx
		mov    %al,_0ce0bb_data
		mov    _0ce845_data,%al
		xor    %ebx,%ebx
		mov    %al,_0ce0bd_data
		mov    $_0ce044_data,%eax
		call   _01d444_func
		mov    $0x000002,%edx
		xor    %bl,%bl
		mov    %dx,_0cf254_data
		mov    %bl,_0cf47a_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059e81_jump:
		cmpb   $0x000000,_0cf43b_data
		je     _059e9c_jump
		mov    $0x000001,%eax
		xor    %dh,%dh
		call   _058d18_func
		mov    %dh,_0cf47a_data

	_059e9c_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059ea4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpb   $0x000000,_0cf425_data
		je     _059ef2_jump
		mov    $0x000201,%edx
		sub    %eax,%eax
		in     (%dx),%al
		test   $0x000010,%al
		je     _059ed9_jump
		test   $0x000020,%al
		je     _059ed9_jump
		test   $0x000040,%al
		je     _059ed9_jump
		test   $0x000080,%al
		je     _059ed9_jump
		mov    _0cf425_data,%dl
		cmp    $0x000003,%dl
		je     _059ed9_jump
		cmp    $0x000004,%dl
		jne    _059ef2_jump

	_059ed9_jump:
		mov    $0x000001,%edx
		mov    $0x000002,%bl
		mov    %dx,_0cf288_data
		call   _03ca10_func
		mov    %bl,_0cf425_data

	_059ef2_jump:
		call   _037964_func
		mov    $0x000001,%eax
		call   _054868_func
		call   _023798_func
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    %ax,_0cf2b8_data
		xor    %eax,%eax
		mov    _0ce0b0_data,%al
		mov    %ax,_0cf2ca_data
		mov    _0cf2ae_data,%ax
		mov    %ax,_0cf2a2_data
		mov    _0cf2b0_data,%ax
		mov    _095de4_data,%bh
		mov    %ax,_0cf29e_data
		cmp    $0x000001,%bh
		jne    _059f78_jump
		xor    %eax,%eax
		mov    _0cf2ae_data,%dx
		mov    _0ce0ac_data,%al
		add    $0x000140,%edx
		sub    %eax,%edx
		sub    $0x000024,%edx
		mov    %dx,_0cf152_data
		mov    _0cf2ae_data,%dx
		add    $0x000014,%edx
		sub    %eax,%edx
		mov    %dx,_0cf14e_data
		jmp    _059fb6_jump

	_059f78_jump:
		mov    _0cf2ae_data,%ax
		xor    %edx,%edx
		mov    _0cca48_data,%bx
		mov    _0ce0ac_data,%dl
		add    %ebx,%eax
		sub    %edx,%eax
		sub    $0x000024,%eax
		mov    _0cca4c_data,%cx
		mov    %ax,_0cf152_data
		mov    _0cf2ae_data,%ax
		add    %ecx,%eax
		add    $0x000014,%eax
		sub    %edx,%eax
		mov    %ax,_0cf14e_data

	_059fb6_jump:
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _059fdd_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    _0e47b6_data,%dl
		mov    %dl,0x00007e(%eax)

	_059fdd_jump:
		testb  $0x000004,_0cf221_data
		je     _059feb_jump
		call   _048260_func

	_059feb_jump:
		cmpw   $0x000003,_0cf282_data
		je     _05a003_jump
		mov    _0cf27c_data,%ax
		mov    %ax,_0cf276_data
		jmp    _05a00c_jump

	_05a003_jump:
		xor    %edi,%edi
		mov    %di,_0cf276_data

	_05a00c_jump:
		call   _057b98_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05a018_switch:
		.long   _05a079_case
		.long   _05a080_case
		.long   _05a0a1_case
		.long   _05a0a1_case
		.long   _05a0a8_case




_05a02c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _023898_func
		call   _023b60_func
		call   _057b24_func
		testb  $0x000004,_0ce0c5_data
		je     _05a2fe_jump
		cmpb   $0x000040,_0cf471_data
		je     _05a05f_jump
		movw   $0x00ffff,_0ce08e_data

	_05a05f_jump:
		mov    _0cf254_data,%ax
		dec    %eax
		cmp    $0x000004,%ax
		ja     _05a0af_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_05a018_switch(,%eax,4)

	_05a079_case:
		call   _070cac_func
		jmp    _05a0b4_jump

	_05a080_case:
		cmpb   $0x000006,_0ce0b1_data
		je     _05a09a_jump
		mov    $0x000006,%edx
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx
		call   _01d444_func

	_05a09a_jump:
		call   _070968_func
		jmp    _05a0b4_jump

	_05a0a1_case:
		call   _070458_func
		jmp    _05a0b4_jump

	_05a0a8_case:
		call   _0289bc_func
		jmp    _05a0b4_jump

	_05a0af_jump:
		call   _05926c_func

	_05a0b4_jump:
		cmpw   $0x000000,_0cf26e_data
		jle    _05a0cf_jump
		cmpw   $0x000000,_0cf254_data
		jle    _05a0cf_jump
		call   _059388_func
		jmp    _05a0e2_jump

	_05a0cf_jump:
		mov    $0xffffffff,%edi
		mov    %di,_0cf2c6_data
		mov    %di,_0cf2c8_data

	_05a0e2_jump:
		call   _057cd8_func
		mov    $_0ce044_data,%eax
		call   _01dc5c_func
		mov    _0cf2c6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05a112_jump
		cmpw   $_0000ff_case,_0cf2a6_data
		jne    _05a112_jump
		xor    %ebx,%ebx
		mov    %bx,_0cf2a6_data

	_05a112_jump:
		cmpw   $0x000000,_0cf254_data
		jle    _05a121_jump
		call   _058340_func

	_05a121_jump:
		cmpw   $0x000002,_0cf254_data
		jne    _05a2b1_jump
		mov    _0cf2c4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05a173_jump
		mov    _0ce084_data,%ax
		mov    %ax,_0cf2c6_data
		mov    _0cf2a4_data,%ax
		mov    %ax,_0ce084_data
		test   %ax,%ax
		jle    _05a160_jump
		call   _0587e8_func
		jmp    _05a167_jump

	_05a160_jump:
		jge    _05a167_jump
		call   _05886c_func

	_05a167_jump:
		mov    _0cf2c6_data,%ax
		mov    %ax,_0ce084_data

	_05a173_jump:
		mov    _0ce0b0_data,%cl
		cmp    $0x00000e,%cl
		je     _05a28a_jump
		mov    %cl,%al
		cmp    $0x000001,%cl
		jb     _05a199_jump
		jbe    _05a1df_jump
		cmp    $0x000005,%cl
		je     _05a257_jump
		jmp    _05a27e_jump

	_05a199_jump:
		test   %cl,%cl
		jne    _05a27e_jump
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05a1af_jump
		neg    %eax

	_05a1af_jump:
		cmp    $0x000001,%eax
		jg     _05a1cb_jump
		mov    _0cf2a2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05a1c2_jump
		neg    %eax

	_05a1c2_jump:
		cmp    $0x000001,%eax
		jle    _05a27e_jump

	_05a1cb_jump:
		mov    $0x000006,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func
		jmp    _05a27e_jump

	_05a1df_jump:
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05a1ed_jump
		neg    %eax

	_05a1ed_jump:
		cmp    $0x000001,%eax
		jg     _05a216_jump
		mov    _0cf2a2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05a200_jump
		neg    %eax

	_05a200_jump:
		cmp    $0x000001,%eax
		jg     _05a216_jump
		mov    $0x000007,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func
		jmp    _05a27e_jump

	_05a216_jump:
		mov    _0cf2a2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05a224_jump
		neg    %eax

	_05a224_jump:
		cmp    $0x000004,%eax
		jle    _05a27e_jump
		mov    _0cf284_data,%edx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    $0x000064,%edx
		cmp    %edx,%eax
		jge    _05a27e_jump
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func
		call   _01cbb0_func
		jmp    _05a27e_jump

	_05a257_jump:
		mov    _0cf2a2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05a265_jump
		neg    %eax

	_05a265_jump:
		cmp    $0x000004,%eax
		jg     _05a27e_jump
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func
		call   _01cbb0_func

	_05a27e_jump:
		mov    _0cf2ae_data,%ax
		mov    %ax,_0cf25a_data

	_05a28a_jump:
		mov    _0cf2a2_data,%edx
		mov    _0ce0d0_data,%eax
		sar    $0x000010,%edx
		mov    0x000028(%eax),%ebx
		add    %edx,%ebx
		mov    _0cf2a4_data,%edx
		mov    0x00002c(%eax),%ecx
		sar    $0x000010,%edx
		mov    %ebx,0x000028(%eax)
		add    %edx,%ecx
		mov    %ecx,0x00002c(%eax)

	_05a2b1_jump:
		mov    $_0cf2a6_data,%edx
		mov    $_0cf2a4_data,%eax
		call   _054fd8_func
		call   _057758_func
		call   _057d34_func
		mov    _0ce08c_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _05a328_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x00007e(%eax),%dl
		mov    %dl,_0e47b6_data
		cmp    $0x000003,%dl
		jbe    _05a328_jump
		movb   $0x000003,0x00007e(%eax)
		jmp    _05a328_jump

	_05a2fe_jump:
		mov    $0xffffffff,%edx
		call   _057cd8_func
		mov    %dx,_0cf2c8_data
		call   _057758_func
		mov    _0cf471_data,%dl
		test   %dl,%dl
		je     _05a328_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0cf471_data

	_05a328_jump:
		call   _0588e8_func
		cmpw   $0x000000,_0cf1f8_data
		je     _05a364_jump
		mov    _0cf29c_data,%ecx
		mov    _0cf2a0_data,%ebx
		mov    _0cf2ae_data,%edx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05af38_func
		call   _05b638_func

	_05a364_jump:
		call   _07b744_func
		testb  $0x000002,_0cf221_data
		je     _05a459_jump
		xor    %eax,%eax
		call   _01d27c_func
		testb  $0x000080,_0cf221_data
		je     _05a3a6_jump
		mov    _0ce098_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05a3bc_jump
		mov    _0ce09e_data,%bx
		cmp    $0x000100,%bx
		je     _05a3a6_jump
		test   %bx,%bx
		jne    _05a3bc_jump

	_05a3a6_jump:
		mov    $0x000100,%esi
		mov    $0x0000c8,%cl
		mov    %si,_0ce09e_data
		mov    %cl,_0cf489_data
		jmp    _05a406_jump

	_05a3bc_jump:
		testb  $0x000080,_0cf221_data
		je     _05a406_jump
		cmpb   $0x000005,_0ce0b1_data
		setne  %al
		and    $_0000ff_case,%eax
		je     _05a406_jump
		mov    _0cf489_data,%bl
		test   %bl,%bl
		jne    _05a3fc_jump
		mov    _0ce09c_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		sub    $0x000005,%ebx
		cmp    %ebx,%eax
		jge    _05a3f4_jump
		mov    %ebx,%eax

	_05a3f4_jump:
		mov    %ax,_0ce09e_data
		jmp    _05a406_jump

	_05a3fc_jump:
		mov    %bl,%bh
		dec    %bh
		mov    %bh,_0cf489_data

	_05a406_jump:
		testb  $0x000008,_0ce0c5_data
		je     _05a430_jump
		xor    %eax,%eax
		mov    _0ce07c_data,%cx
		mov    _0ce0ad_data,%al
		add    %ecx,%eax
		mov    _0ce07a_data,%bx
		movswl %ax,%edx
		xor    %eax,%eax
		sub    $0x000008,%ebx
		jmp    _05a44c_jump

	_05a430_jump:
		xor    %eax,%eax
		mov    _0ce07c_data,%di
		mov    _0ce0ad_data,%al
		add    %edi,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0ce07a_data,%bx

	_05a44c_jump:
		mov    _0ce0ac_data,%al
		add    %ebx,%eax
		cwtl   
		call   _01d18c_func

	_05a459_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a460_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ce0c8_data,%edx
		mov    _0ce0cc_data,%ebx
		mov    _0cf221_data,%al
		and    $0x00009f,%al
		testb  $0x000060,_0cf221_data
		jne    _05a4be_jump
		or     $0x000020,%al
		mov    %al,_0cf221_data
		test   %ebx,%ebx
		je     _05a4a4_jump
		movl   $0x000001,0x000024(%ebx)
		mov    0x000081(%ebx),%cl
		movb   $0x000003,0x00007e(%ebx)
		or     $0x000004,%cl
		mov    %cl,0x000081(%ebx)

	_05a4a4_jump:
		test   %edx,%edx
		je     _05a4ff_jump
		movl   $0x000001,0x000024(%edx)
		mov    0x000081(%edx),%ch
		movb   $0x000001,0x00007e(%edx)
		or     $0x000004,%ch
		jmp    _05a4f9_jump

	_05a4be_jump:
		mov    %al,_0cf221_data
		test   %ebx,%ebx
		je     _05a4e1_jump
		movl   $0x000000,0x000024(%ebx)
		mov    0x000081(%ebx),%cl
		movb   $0x000003,0x00007e(%ebx)
		and    $0x0000fb,%cl
		mov    %cl,0x000081(%ebx)

	_05a4e1_jump:
		test   %edx,%edx
		je     _05a4ff_jump
		movl   $0x000000,0x000024(%edx)
		mov    0x000081(%edx),%ch
		movb   $0x000003,0x00007e(%edx)
		and    $0x0000fb,%ch

	_05a4f9_jump:
		mov    %ch,0x000081(%edx)

	_05a4ff_jump:
		mov    %ebx,_0ce0cc_data
		mov    %edx,_0ce0c8_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a510_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf221_data,%ah
		test   $0x000002,%ah
		sete   %al
		and    $0x000001,%al
		mov    %ah,%dl
		and    $0x0000fd,%dl
		add    %al,%al
		mov    %dl,_0cf221_data
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,_0cf221_data
		test   $0x000002,%dh
		je     _05a58d_jump
		mov    $0x000021,%ecx
		mov    $_0ce7cc_data,%edi
		mov    $_0ce044_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0cf278_data,%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %esi,%eax
		mov    _0cc7a0_data,%esi
		shl    $0x000002,%eax
		mov    $_0ce044_data,%edi
		add    %eax,%esi
		mov    _0ce7d0_data,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0xffffffff,%edx
		mov    %eax,_0ce048_data
		mov    $0x0000ce,%eax
		jmp    _05a5ca_jump

	_05a58d_jump:
		mov    $0x000021,%ecx
		mov    $_0ce850_data,%edi
		mov    $_0ce7cc_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0ce7cc_data,%edi
		mov    $_0ce044_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0ce044_data,%edi
		mov    $_0ce850_data,%esi
		mov    $0xffffffff,%edx
		mov    $0x0000cf,%eax
		rep movsl %ds:(%esi),%es:(%edi)

	_05a5ca_jump:
		call   _071b3c_func
		mov    _0ce802_data,%ax
		mov    %ax,_0ce07a_data
		mov    _0ce804_data,%ax
		mov    %ax,_0ce07c_data
		mov    _0ce80c_data,%ax
		mov    %ax,_0ce084_data
		mov    _0ce80e_data,%ax
		mov    %ax,_0ce086_data
		mov    _0ce7f4_data,%eax
		mov    %eax,_0ce06c_data
		mov    _0ce7f8_data,%eax
		mov    %eax,_0ce070_data
		mov    _0ce834_data,%al
		mov    %al,_0ce0ac_data
		mov    _0ce835_data,%al
		mov    %al,_0ce0ad_data
		mov    _0ce840_data,%al
		mov    %al,_0ce0b8_data
		mov    _0ce836_data,%al
		mov    _0ce0c5_data,%bh
		mov    %al,_0ce0ae_data
		mov    _0ce837_data,%al
		and    $0x0000f7,%bh
		mov    %al,_0ce0af_data
		mov    _0ce84d_data,%al
		mov    %bh,%cl
		and    $0x000008,%al
		or     %al,%cl
		mov    _0ce81c_data,%ax
		mov    %ax,_0ce094_data
		mov    _0ce839_data,%al
		mov    %al,_0ce0b1_data
		mov    _0ce838_data,%al
		mov    $0x000017,%edx
		mov    %al,_0ce0b0_data
		mov    _0ce816_data,%ax
		mov    %dx,_0ce0a4_data
		mov    %ax,_0ce08e_data
		mov    _0ce81e_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0ce096_data
		mov    _0ce822_data,%ax
		mov    %bh,_0ce0c5_data
		mov    %ax,_0ce09a_data
		mov    _0ce849_data,%al
		mov    %edx,_0ce068_data
		mov    %al,_0ce0c1_data
		mov    _0ce84b_data,%al
		mov    $0x000002,%edx
		mov    %al,_0ce0c3_data
		mov    _0ce842_data,%al
		mov    %cl,_0ce0c5_data
		mov    %al,_0ce0ba_data
		mov    _0ce843_data,%al
		mov    %cl,%ch
		mov    %al,_0ce0bb_data
		mov    _0ce845_data,%al
		or     $0x000004,%ch
		mov    %al,_0ce0bd_data
		mov    $_0ce044_data,%eax
		mov    %ch,_0ce0c5_data
		call   _024cd0_func
		and    $_0000ff_case,%eax
		testb  $0x000010,_0924f4_data(%eax)
		je     _05a72b_jump
		mov    $0x00000f,%ebx
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		call   _01d444_func

	_05a72b_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a734_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf221_data,%dl
		mov    _0cf221_data,%al
		shl    $0x000006,%dl
		mov    %al,%ah
		shr    $0x000007,%dl
		shr    $0x000007,%ah
		cmp    %ah,%dl
		jne    _05aa1e_jump
		test   $0x000080,%al
		sete   %al
		and    $0x000001,%al
		mov    _0cf221_data,%ah
		and    $0x00007f,%ah
		mov    %ah,_0cf221_data
		shl    $0x000007,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,%al
		mov    %dl,%ah
		shr    $0x000007,%ah
		and    $0x000001,%ah
		mov    %dl,_0cf221_data
		and    $0x0000fd,%al
		mov    %al,_0cf221_data
		mov    %ah,%al
		mov    _0cf221_data,%dh
		add    %ah,%al
		or     %al,%dh
		mov    %dh,_0cf221_data
		test   $0x000080,%dh
		je     _05a851_jump
		mov    $0x000021,%ecx
		mov    _0cf278_data,%edx
		mov    $_0ce7cc_data,%edi
		sar    $0x000010,%edx
		mov    $_0ce044_data,%esi
		mov    %edx,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %edx,%eax
		mov    _0cc7a0_data,%esi
		shl    $0x000002,%eax
		mov    $_0ce044_data,%edi
		add    %eax,%esi
		mov    _0ce7d0_data,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,_0ce048_data
		mov    _0ce7d4_data,%eax
		mov    %eax,_0ce04c_data
		mov    _0ce7cc_data,%eax
		mov    %eax,_0ce044_data
		mov    _0cf220_data,%ax
		mov    %ax,_0cf21e_data
		mov    _0cf221_data,%al
		and    $0x000006,%al
		mov    %al,_0cf221_data
		mov    %al,%ah
		or     $0x000080,%ah
		mov    %ah,_0cf221_data
		mov    %ah,%al
		shr    $0x000007,%ah
		and    $0x000001,%ah
		and    $0x0000fd,%al
		mov    _0cf220_data,%ch
		mov    %al,_0cf221_data
		mov    %ah,%al
		mov    _0cf221_data,%dl
		add    %ah,%al
		and    $0x000041,%ch
		or     %al,%dl
		mov    %ch,_0cf220_data
		mov    %dl,_0cf221_data
		jmp    _05a8c2_jump

	_05a851_jump:
		mov    $0x000021,%ecx
		mov    $_0ce850_data,%edi
		mov    $_0ce7cc_data,%esi
		mov    _0cf21e_data,%ax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %ax,_0cf220_data
		mov    $0x000021,%ecx
		mov    $_0ce7cc_data,%edi
		mov    _0cf221_data,%bh
		mov    $_0ce044_data,%esi
		and    $0x00007f,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %bh,%al
		mov    $0x000021,%ecx
		mov    %bh,%ah
		mov    $_0ce044_data,%edi
		shr    $0x000007,%ah
		mov    $_0ce850_data,%esi
		and    $0x000001,%ah
		mov    %bh,_0cf221_data
		and    $0x0000fd,%al
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %al,_0cf221_data
		mov    %ah,%al
		mov    _0cf221_data,%cl
		add    %ah,%al
		or     %al,%cl
		mov    %cl,_0cf221_data

	_05a8c2_jump:
		mov    _0ce802_data,%ax
		mov    %ax,_0ce07a_data
		mov    _0ce804_data,%ax
		mov    %ax,_0ce07c_data
		mov    _0ce80c_data,%ax
		mov    %ax,_0ce084_data
		mov    _0ce80e_data,%ax
		mov    %ax,_0ce086_data
		mov    _0ce7f4_data,%eax
		mov    %eax,_0ce06c_data
		mov    _0ce7f8_data,%eax
		mov    %eax,_0ce070_data
		mov    _0ce834_data,%al
		mov    %al,_0ce0ac_data
		mov    _0ce835_data,%al
		mov    $0x000017,%edx
		mov    %al,_0ce0ad_data
		mov    _0ce840_data,%al
		mov    %dx,_0ce0a4_data
		mov    %al,_0ce0b8_data
		mov    _0ce836_data,%al
		mov    _0ce0c5_data,%dh
		mov    %al,_0ce0ae_data
		mov    _0ce837_data,%al
		and    $0x0000f7,%dh
		mov    %al,_0ce0af_data
		mov    _0ce84d_data,%al
		mov    %dh,%bl
		and    $0x000008,%al
		or     %al,%bl
		mov    _0ce81c_data,%ax
		mov    %ax,_0ce094_data
		mov    _0ce839_data,%al
		mov    %al,_0ce0b1_data
		mov    _0ce838_data,%al
		mov    %al,_0ce0b0_data
		mov    _0ce816_data,%ax
		mov    %ax,_0ce08e_data
		mov    _0ce81e_data,%ax
		mov    %dh,_0ce0c5_data
		mov    %ax,_0ce096_data
		mov    _0ce822_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0ce09a_data
		mov    _0ce849_data,%al
		mov    %edx,_0ce068_data
		mov    %al,_0ce0c1_data
		mov    _0ce84b_data,%al
		mov    $0x000002,%edx
		mov    %al,_0ce0c3_data
		mov    _0ce842_data,%al
		mov    %bl,_0ce0c5_data
		mov    %al,_0ce0ba_data
		mov    _0ce843_data,%al
		mov    %bl,%bh
		mov    %al,_0ce0bb_data
		mov    _0ce845_data,%al
		or     $0x000004,%bh
		mov    %al,_0ce0bd_data
		mov    $_0ce044_data,%eax
		mov    %bh,_0ce0c5_data
		call   _024cd0_func
		and    $_0000ff_case,%eax
		testb  $0x000010,_0924f4_data(%eax)
		je     _05aa1e_jump
		mov    $0x00000f,%ebx
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		call   _01d444_func

	_05aa1e_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05aa24_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf453_data,%ah
		cmp    $0x000003,%ah
		je     _05ab51_jump
		cmp    $0x000002,%ah
		jne    _05aa68_jump
		mov    $0x000001,%eax
		call   _054868_func
		call   _061390_func
		xor    %edx,%edx
		mov    $_0ce044_data,%eax
		mov    %dx,_0cf2a4_data
		mov    %dx,_0cf2a6_data
		call   _055b7c_func
		jmp    _05aa6d_jump

	_05aa68_jump:
		call   _028e20_func

	_05aa6d_jump:
		cmpw   $0x000000,_0cf1f8_data
		je     _05aab9_jump
		mov    $0x000001,%esi
		mov    _0cf29c_data,%ecx
		mov    _0cf2a0_data,%ebx
		mov    _0cf2ae_data,%edx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		xor    %edi,%edi
		call   _05af38_func
		call   _05b638_func
		mov    %si,_0cf13a_data
		mov    %di,_0cf138_data

	_05aab9_jump:
		mov    _0ce952_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0cea1c_data,%ax
		xor    %ebx,%ebx
		test   %ax,%ax
		jle    _05ab51_jump

	_05aae5_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000008,_092537_data(,%eax,4)
		jne    _05ab1b_jump
		cmp    $0x0000a1,%ax
		jne    _05ab01_jump
		cmpb   $0x000017,0x00006c(%edx)
		je     _05ab1b_jump

	_05ab01_jump:
		cmpw   $0x000053,0x000060(%edx)
		jne    _05ab0e_jump
		cmpb   $0x000001,0x00006c(%edx)
		je     _05ab1b_jump

	_05ab0e_jump:
		cmpw   $0x000021,0x000060(%edx)
		jne    _05ab29_jump
		cmpb   $0x000023,0x00006c(%edx)
		je     _05ab29_jump

	_05ab1b_jump:
		mov    %edx,%eax
		call   _055b7c_func
		mov    %edx,%eax
		call   _01e744_func

	_05ab29_jump:
		inc    %ebx
		movswl %bx,%eax
		mov    _0ce952_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%edx
		mov    _0cea1c_data,%cx
		add    %eax,%edx
		cmp    %cx,%bx
		jl     _05aae5_jump

	_05ab51_jump:
		call   _057758_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ab60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpw   $0x000000,_0cf1f8_data
		je     _05ac00_jump
		cmpb   $0x000000,_0ce4d9_data
		je     _05ac00_jump
		mov    _0ce2c4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05ac00_jump
		cmpb   $0x000000,_0cf44a_data
		jne    _05ac00_jump
		xor    %esi,%esi

	_05ab98_jump:
		movswl %si,%edx
		mov    _0cf29c_data,%ecx
		mov    %edx,%eax
		mov    _0cf2a0_data,%ebx
		call   _06b8d0_func
		add    _0cf2b0_data,%ax
		movswl %ax,%edi
		mov    %edx,%eax
		call   _06b8d0_func
		mov    _0cf2ae_data,%dx
		sar    $0x000010,%ecx
		add    %edx,%eax
		sar    $0x000010,%ebx
		cwtl   
		mov    %edi,%edx
		call   _05af38_func
		call   _05b638_func
		xor    %eax,%eax
		call   _054868_func
		mov    _0cf2ae_data,%ax
		mov    %ax,_0cf2a2_data
		mov    _0cf2b0_data,%ax
		inc    %esi
		mov    %ax,_0cf29e_data
		cmp    $0x000064,%esi
		jl     _05ab98_jump

	_05ac00_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ac08_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x0001ff,%eax
		mov    $0x000007,%edx
		call   _06b8d0_func
		xor    %ebx,%ebx
		mov    %eax,%ecx

	_05ac1e_jump:
		movswl %dx,%eax
		add    %eax,%eax
		cmp    _0ca8c8_data(%eax),%cx
		jle    _05ac38_jump
		mov    $0x000001,%ebx
		add    %bx,_0ca908_data(%eax)

	_05ac38_jump:
		dec    %edx
		test   %bx,%bx
		je     _05ac1e_jump
		movswl %dx,%eax
		add    %eax,%eax
		mov    _0ca90a_data(%eax),%dx
		cmp    _0ca92a_data(%eax),%dx
		jle    _05ac5d_jump
		mov    %edx,%ecx
		dec    %ecx
		mov    %cx,_0ca90a_data(%eax)

	_05ac5d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ac64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x00000a,%edx
		mov    $0x00000f,%ebx
		mov    $0x000019,%ecx
		mov    $0x00001e,%esi
		mov    $0x000023,%edi
		mov    $0x000028,%eax
		mov    %dx,_0ca908_data
		mov    %bx,_0ca90a_data
		mov    %cx,_0ca90c_data
		mov    %si,_0ca90e_data
		mov    %di,_0ca910_data
		mov    %ax,_0ca912_data
		mov    $0x00002b,%edx
		mov    $0x000035,%ebx
		mov    %dx,_0ca914_data
		mov    %bx,_0ca916_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05acd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0001ff,%eax
		mov    $0x000007,%edx
		call   _06b8d0_func
		xor    %ebx,%ebx
		mov    %eax,%ecx

	_05ace8_jump:
		movswl %dx,%eax
		add    %eax,%eax
		cmp    _0ca8c8_data(%eax),%cx
		jl     _05ad12_jump
		mov    _0ca908_data(%eax),%di
		test   %di,%di
		jle    _05ad12_jump
		mov    $0x000001,%ebx
		mov    %edi,%esi
		sub    %ebx,%esi
		mov    %si,_0ca908_data(%eax)

	_05ad12_jump:
		dec    %edx
		test   %bx,%bx
		jne    _05ad1d_jump
		test   %dx,%dx
		jge    _05ace8_jump

	_05ad1d_jump:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		jne    _05ad5a_jump
		mov    $0x000007,%eax
		xor    %ebx,%ebx
		xor    %ecx,%ecx

	_05ad2e_jump:
		movswl %ax,%edx
		add    %edx,%edx
		mov    _0ca908_data(%edx),%di
		cmp    %di,%cx
		jge    _05ad4f_jump
		mov    $0x000001,%ebx
		mov    %edi,%esi
		sub    %ebx,%esi
		mov    %si,_0ca908_data(%edx)

	_05ad4f_jump:
		dec    %eax
		test   %bx,%bx
		jne    _05ad5a_jump
		test   %ax,%ax
		jge    _05ad2e_jump

	_05ad5a_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ad60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    $0x000014,%edx
		mov    $0x00001e,%ebx
		mov    $0x000032,%ecx
		mov    $0x00003c,%esi
		mov    $0x000046,%edi
		mov    $0x000050,%eax
		mov    %dx,_0ca928_data
		mov    %bx,_0ca92a_data
		mov    %cx,_0ca92c_data
		mov    %si,_0ca92e_data
		mov    %di,_0ca930_data
		mov    %ax,_0ca932_data
		mov    $0x000060,%edx
		mov    $0x00006a,%ebx
		mov    $0xffffffc0,%edi
		xor    %ecx,%ecx
		mov    %dx,_0ca934_data
		mov    %bx,_0ca936_data
		mov    %cx,0x00000c(%esp)
		mov    %cx,0x000004(%esp)
		mov    %di,(%esp)
		mov    $0x000190,%ebp

	_05ade2_jump:
		mov    0x000002(%esp),%ecx
		mov    0x00000c(%esp),%eax
		mov    -0x000002(%esp),%ebx
		xor    %esi,%esi
		sar    $0x000010,%ecx
		xor    %edx,%edx
		mov    %ax,_0ca8c8_data(,%ecx,2)
		mov    (%esp),%eax
		sar    $0x000010,%ebx
		mov    %ax,0x000010(%esp)
		mov    %ebx,%eax
		mov    %si,_0ca908_data(,%ecx,2)
		call   _01d2bc_func
		mov    $0x0000c8,%edx
		mov    %ax,_0ca8d8_data(,%ecx,2)
		mov    %ebx,%eax
		call   _01d2bc_func
		xor    %edx,%edx
		mov    %ax,_0ca8f8_data(,%ecx,2)
		mov    %ebx,%eax
		call   _01d284_func
		mov    $0x000140,%edx
		mov    %ax,_0ca8e8_data(,%ecx,2)
		mov    %ebx,%eax
		mov    %esi,0x000008(%esp)
		call   _01d284_func
		mov    %ax,_0ca918_data(,%ecx,2)
		jmp    _05aee2_jump

	_05ae61_jump:
		mov    $0x0002bc,%eax
		mov    0x00000e(%esp),%ebx
		call   _06b8d0_func
		mov    %eax,%esi
		mov    %ebp,%eax
		sar    $0x000010,%ebx
		call   _06b8d0_func
		movswl %si,%edx
		mov    %eax,%edi
		mov    %ebx,%eax
		sub    $0x000096,%edi
		call   _01d204_func
		mov    %eax,%ecx
		movswl %di,%edx
		mov    %ebx,%eax
		call   _01d240_func
		cmp    $0x000140,%cx
		jge    _05ae61_jump
		test   %cx,%cx
		jle    _05ae61_jump
		cmp    $0x0000c8,%ax
		jge    _05ae61_jump
		test   %ax,%ax
		jle    _05ae61_jump
		mov    0x00000a(%esp),%edx
		mov    0x000010(%esp),%eax
		mov    0x00000c(%esp),%ecx
		mov    _0cd2b4_data,%ebx
		inc    %ecx
		sar    $0x000010,%edx
		mov    %cx,0x00000c(%esp)
		mov    %si,(%ebx,%edx,8)
		mov    0x000008(%esp),%esi
		mov    %di,0x000002(%ebx,%edx,8)
		inc    %esi
		mov    %ax,0x000004(%ebx,%edx,8)
		mov    %esi,0x000008(%esp)

	_05aee2_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    0x000008(%esp),%eax
		cmp    _0ca928_data(,%edx,2),%ax
		jl     _05ae61_jump
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		add    $0x000020,%eax
		inc    %edx
		mov    %ax,(%esp)
		mov    %dx,0x000004(%esp)
		cmp    $0x000008,%dx
		jl     _05ade2_jump
		xor    %edi,%edi
		mov    %di,_0cf21c_data
		mov    %di,_0cf21a_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05af38_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    %eax,0x000034(%esp)
		mov    %edx,0x000038(%esp)
		mov    %ebx,0x000004(%esp)
		mov    %ecx,0x000008(%esp)
		mov    _0cf21a_data,%ax
		mov    %eax,0x00000c(%esp)
		mov    _0cf21c_data,%ax
		mov    %ax,0x000010(%esp)
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edi
		mov    0x00000c(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,_0cf21a_data
		mov    _0cf218_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%ebp
		mov    %eax,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %edx,%ebx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		movswl %bx,%eax
		test   %eax,%eax
		jge    _05afc6_jump
		neg    %eax

	_05afc6_jump:
		cmp    $0x000001,%eax
		jne    _05afec_jump
		cmpb   $0x000000,_0cf3f1_data
		jne    _05afec_jump
		mov    _0cf21a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _05afea_jump
		mov    $0x000001,%eax
		jg     _05afea_jump
		neg    %eax

	_05afea_jump:
		add    %eax,%edi

	_05afec_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _05aff5_jump
		neg    %eax

	_05aff5_jump:
		cmp    $0x000002,%eax
		jne    _05b01b_jump
		cmpb   $0x000000,_0cf3ef_data
		jne    _05b01b_jump
		mov    _0cf21a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _05b019_jump
		mov    $0x000001,%eax
		jg     _05b019_jump
		neg    %eax

	_05b019_jump:
		add    %eax,%edi

	_05b01b_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _05b024_jump
		neg    %eax

	_05b024_jump:
		cmp    $0x000003,%eax
		jne    _05b04a_jump
		cmpb   $0x000003,_0cf3f1_data
		jae    _05b04a_jump
		mov    _0cf21a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _05b048_jump
		mov    $0x000001,%eax
		jg     _05b048_jump
		neg    %eax

	_05b048_jump:
		add    %eax,%edi

	_05b04a_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _05b053_jump
		neg    %eax

	_05b053_jump:
		cmp    $0x000001,%eax
		jne    _05b079_jump
		cmpb   $0x000000,_0cf3f1_data
		jne    _05b079_jump
		mov    _0cf218_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _05b077_jump
		mov    $0x000001,%eax
		jg     _05b077_jump
		neg    %eax

	_05b077_jump:
		add    %eax,%esi

	_05b079_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _05b082_jump
		neg    %eax

	_05b082_jump:
		cmp    $0x000002,%eax
		jne    _05b0a8_jump
		cmpb   $0x000000,_0cf3ef_data
		jne    _05b0a8_jump
		mov    _0cf218_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _05b0a6_jump
		mov    $0x000001,%eax
		jg     _05b0a6_jump
		neg    %eax

	_05b0a6_jump:
		add    %eax,%esi

	_05b0a8_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _05b0b1_jump
		neg    %eax

	_05b0b1_jump:
		cmp    $0x000003,%eax
		jne    _05b0d7_jump
		cmpb   $0x000003,_0cf3f1_data
		jae    _05b0d7_jump
		mov    _0cf218_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _05b0d5_jump
		mov    $0x000001,%eax
		jg     _05b0d5_jump
		neg    %eax

	_05b0d5_jump:
		add    %eax,%esi

	_05b0d7_jump:
		mov    $0x0000aa,%edx
		mov    $0x0000a0,%eax
		mov    $0xffffffc0,%ebx
		mov    0x000038(%esp),%ecx
		call   _01d18c_func
		mov    0x000008(%esp),%eax
		mov    %ebx,0x00001c(%esp)
		xor    %edx,%edx
		mov    0x000034(%esp),%ebx
		mov    %dx,0x000020(%esp)
		mov    0x000004(%esp),%edx
		sub    %ecx,%eax
		sub    %ebx,%edx
		add    %esi,%eax
		add    %edi,%edx
		mov    %eax,0x000018(%esp)
		mov    %edx,0x000014(%esp)

	_05b116_jump:
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		mov    _0ca8c6_data(,%edx,2),%ebx
		mov    _0cd2b4_data,%eax
		sar    $0x000010,%ebx
		mov    _0ca8d8_data(,%edx,2),%si
		shl    $0x000003,%ebx
		mov    _0ca8e8_data(,%edx,2),%cx
		add    %ebx,%eax
		mov    0x000018(%esp),%ebx
		mov    _0ca8c8_data(,%edx,2),%di
		mov    %ebx,0x000028(%esp)
		mov    0x000014(%esp),%ebx
		mov    %edi,(%esp)
		mov    %ebx,0x000024(%esp)
		mov    _0ca8f8_data(,%edx,2),%bx
		add    _0ca908_data(,%edx,2),%di
		mov    %ebx,0x000030(%esp)
		mov    _0ca918_data(,%edx,2),%bx
		mov    (%esp),%edx
		mov    %edi,0x00002c(%esp)
		cmp    %di,%dx
		jge    _05b1d3_jump

	_05b184_jump:
		mov    0x000024(%esp),%edi
		add    %di,(%eax)
		mov    0x000028(%esp),%edi
		add    %di,0x000002(%eax)
		mov    (%eax),%di
		cmp    %di,%bx
		jge    _05b1a0_jump
		mov    %cx,(%eax)
		jmp    _05b1a8_jump

	_05b1a0_jump:
		cmp    %di,%cx
		jle    _05b1a8_jump
		mov    %bx,(%eax)

	_05b1a8_jump:
		mov    0x000002(%eax),%di
		cmp    0x000030(%esp),%di
		jle    _05b1b9_jump
		mov    %si,0x000002(%eax)
		jmp    _05b1c6_jump

	_05b1b9_jump:
		cmp    %di,%si
		jle    _05b1c6_jump
		mov    0x000030(%esp),%edi
		mov    %di,0x000002(%eax)

	_05b1c6_jump:
		mov    0x00002c(%esp),%edi
		inc    %edx
		add    $0x000008,%eax
		cmp    %di,%dx
		jl     _05b184_jump

	_05b1d3_jump:
		mov    0x000020(%esp),%ecx
		mov    0x00001c(%esp),%esi
		inc    %ecx
		add    $0x000020,%esi
		mov    %cx,0x000020(%esp)
		mov    %esi,0x00001c(%esp)
		cmp    $0x0000c0,%si
		jl     _05b116_jump
		mov    0x00000c(%esp),%eax
		mov    %ax,_0cf21a_data
		mov    0x000010(%esp),%eax
		mov    %ax,_0cf21c_data
		cmpw   $0x000001,_0cf282_data
		je     _05b22b_jump
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %ax,_0cf27c_data

	_05b22b_jump:
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_05b234_func:
		push   %ebx
		mov    %ax,_0cf208_data
		xor    %ebx,%ebx
		cwtl   
		mov    %bx,_0cf1f6_data
		mov    %dx,_0ca830_data(,%eax,2)
		pop    %ebx
		ret    

	_05b24f_jump:
		cmp    %si,%dx
		jne    _05b271_jump
		movw   $0x000004,(%eax)
		add    $0x000002,%eax
		movw   $0x000003,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		jmp    _05b5ac_jump

	_05b271_jump:
		cmp    $0x000002,%dx
		jne    _05b294_jump
		movw   $0x000004,(%eax)
		add    $0x000002,%eax
		movw   $0x000003,(%eax)
		add    $0x000002,%eax
		movw   $0x000200,(%eax)
		add    $0x000002,%eax
		jmp    _05b5ac_jump

	_05b294_jump:
		cmp    $0x000003,%dx
		jne    _05b2ed_jump
		cmp    $0x000008,%cx
		je     _05b2a7_jump
		movw   $0x000004,(%eax)
		jmp    _05b2ac_jump

	_05b2a7_jump:
		movw   $0x000002,(%eax)

	_05b2ac_jump:
		add    $0x000002,%eax
		lea    0x000002(%eax),%esi
		mov    %ecx,%edx
		lea    0x000004(%eax),%edi
		add    %ecx,%edx
		cmp    $0x000008,%cx
		jle    _05b2d1_jump
		sub    $0x000010,%edx
		movw   $0x000008,(%eax)
		mov    %edi,%eax
		mov    %dx,(%esi)
		jmp    _05b5ac_jump

	_05b2d1_jump:
		jge    _05b5ac_jump
		movw   $0x000009,(%eax)
		mov    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,(%esi)
		mov    %edi,%eax
		jmp    _05b5ac_jump

	_05b2ed_jump:
		cmp    $0x000004,%dx
		jne    _05b33a_jump
		test   %cx,%cx
		je     _05b301_jump
		add    $0x000002,%eax
		mov    %dx,-0x000002(%eax)
		jmp    _05b309_jump

	_05b301_jump:
		movw   $0x000002,(%eax)
		add    $0x000002,%eax

	_05b309_jump:
		lea    0x000002(%eax),%edx
		lea    0x000004(%eax),%esi
		test   %cx,%cx
		jle    _05b31f_jump
		movw   $0x000008,(%eax)
		mov    %ecx,%eax
		add    %ecx,%eax
		jmp    _05b330_jump

	_05b31f_jump:
		jge    _05b5ac_jump
		movw   $0x000009,(%eax)
		mov    %ecx,%eax
		neg    %eax
		add    %eax,%eax

	_05b330_jump:
		mov    %ax,(%edx)
		mov    %esi,%eax
		jmp    _05b5ac_jump

	_05b33a_jump:
		add    $0x000002,%eax
		cmp    $0x000005,%dx
		jne    _05b3a2_jump
		movswl %bx,%edx
		cmp    $0xfffffff8,%edx
		je     _05b356_jump
		movw   $0x000004,_0c91a8_data
		jmp    _05b35f_jump

	_05b356_jump:
		movw   $0x000002,_0c91a8_data

	_05b35f_jump:
		mov    %ebx,%esi
		movswl %bx,%edx
		add    %ebx,%esi
		lea    0x000002(%eax),%edi
		mov    %esi,(%esp)
		lea    0x000004(%eax),%esi
		cmp    $0xfffffff8,%edx
		jle    _05b383_jump
		movw   $0x000006,(%eax)
		mov    (%esp),%eax
		add    $0x000010,%eax
		jmp    _05b398_jump

	_05b383_jump:
		jge    _05b5ac_jump
		mov    (%esp),%edx
		movw   $0x000007,(%eax)
		mov    $0xfffffff0,%eax
		sub    %edx,%eax

	_05b398_jump:
		mov    %ax,(%edi)
		mov    %esi,%eax
		jmp    _05b5ac_jump

	_05b3a2_jump:
		cmp    $0x000006,%dx
		jne    _05b400_jump
		cmp    $0x000008,%bx
		je     _05b3b9_jump
		movw   $0x000004,_0c91a8_data
		jmp    _05b3c2_jump

	_05b3b9_jump:
		movw   $0x000002,_0c91a8_data

	_05b3c2_jump:
		lea    0x000002(%eax),%esi
		mov    %ebx,%edx
		lea    0x000004(%eax),%edi
		add    %ebx,%edx
		cmp    $0x000008,%bx
		jle    _05b3e4_jump
		sub    $0x000010,%edx
		movw   $0x000006,(%eax)
		mov    %edi,%eax
		mov    %dx,(%esi)
		jmp    _05b5ac_jump

	_05b3e4_jump:
		jge    _05b5ac_jump
		movw   $0x000007,(%eax)
		mov    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,(%esi)
		mov    %edi,%eax
		jmp    _05b5ac_jump

	_05b400_jump:
		cmp    $0x000007,%dx
		jne    _05b468_jump
		movswl %bx,%edx
		cmp    $0xfffffff0,%edx
		je     _05b419_jump
		movw   $0x000004,_0c91a8_data
		jmp    _05b422_jump

	_05b419_jump:
		movw   $0x000002,_0c91a8_data

	_05b422_jump:
		mov    %ebx,%edi
		movswl %bx,%edx
		add    %ebx,%edi
		lea    0x000002(%eax),%esi
		mov    %edi,0x000004(%esp)
		lea    0x000004(%eax),%edi
		cmp    $0xfffffff0,%edx
		jle    _05b448_jump
		movw   $0x000006,(%eax)
		mov    0x000004(%esp),%eax
		add    $0x000020,%eax
		jmp    _05b45e_jump

	_05b448_jump:
		jge    _05b5ac_jump
		mov    0x000004(%esp),%edx
		movw   $0x000007,(%eax)
		mov    $0xffffffe0,%eax
		sub    %edx,%eax

	_05b45e_jump:
		mov    %ax,(%esi)
		mov    %edi,%eax
		jmp    _05b5ac_jump

	_05b468_jump:
		cmp    $0x000008,%dx
		jne    _05b4c6_jump
		cmp    $0x000010,%bx
		je     _05b47f_jump
		movw   $0x000004,_0c91a8_data
		jmp    _05b488_jump

	_05b47f_jump:
		movw   $0x000002,_0c91a8_data

	_05b488_jump:
		lea    0x000002(%eax),%edi
		mov    %ebx,%esi
		lea    0x000004(%eax),%edx
		add    %ebx,%esi
		cmp    $0x000010,%bx
		jle    _05b4aa_jump
		sub    $0x000020,%esi
		movw   $0x000006,(%eax)
		mov    %edx,%eax
		mov    %si,(%edi)
		jmp    _05b5ac_jump

	_05b4aa_jump:
		jge    _05b5ac_jump
		movw   $0x000007,(%eax)
		mov    $0x000020,%eax
		sub    %esi,%eax
		mov    %ax,(%edi)
		mov    %edx,%eax
		jmp    _05b5ac_jump

	_05b4c6_jump:
		cmp    $0x000009,%dx
		jne    _05b513_jump
		test   %bx,%bx
		je     _05b4dc_jump
		movw   $0x000004,_0c91a8_data
		jmp    _05b4e5_jump

	_05b4dc_jump:
		movw   $0x000002,_0c91a8_data

	_05b4e5_jump:
		lea    0x000002(%eax),%edx
		lea    0x000004(%eax),%esi
		jle    _05b4f8_jump
		movw   $0x000006,(%eax)
		mov    %ebx,%eax
		add    %ebx,%eax
		jmp    _05b509_jump

	_05b4f8_jump:
		jge    _05b5ac_jump
		movw   $0x000007,(%eax)
		mov    %ebx,%eax
		neg    %eax
		add    %eax,%eax

	_05b509_jump:
		mov    %ax,(%edx)
		mov    %esi,%eax
		jmp    _05b5ac_jump

	_05b513_jump:
		cmp    $0x00000a,%dx
		jne    _05b58e_jump
		movswl %cx,%edx
		cmp    $0xfffffff0,%edx
		je     _05b530_jump
		movw   $0x000006,_0c91a8_data
		jmp    _05b539_jump

	_05b530_jump:
		movw   $0x000004,_0c91a8_data

	_05b539_jump:
		movswl %cx,%edx
		lea    0x000002(%eax),%ebp
		mov    %ecx,%edi
		lea    0x000004(%eax),%esi
		add    %ecx,%edi
		cmp    $0xfffffff0,%edx
		jle    _05b55b_jump
		add    $0x000020,%edi
		movw   $0x000008,(%eax)
		mov    %esi,%eax
		mov    %di,0x000000(%ebp)
		jmp    _05b56f_jump

	_05b55b_jump:
		jge    _05b56f_jump
		movw   $0x000009,(%eax)
		mov    $0xffffffe0,%eax
		sub    %edi,%eax
		mov    %ax,0x000000(%ebp)
		mov    %esi,%eax

	_05b56f_jump:
		movw   $0x000000,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		movw   $0x000009,(%eax)
		add    $0x000002,%eax
		movw   $0x000020,(%eax)
		jmp    _05b5b9_jump

	_05b58e_jump:
		cmp    $0x00000b,%dx
		jne    _05b5b9_jump
		movw   $0x000004,_0c91a8_data
		movw   $0x00000a,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %si,-0x000002(%eax)

	_05b5ac_jump:
		movw   $0x000000,(%eax)
		add    $0x000002,%eax

	_05b5b4_jump:
		movw   $0x007fff,(%eax)

	_05b5b9_jump:
		mov    $0x000001,%esi
		mov    _0c91aa_data,%edx
		mov    _0c91a8_data,%eax
		mov    %bx,_0cf21c_data
		mov    %cx,_0cf21a_data
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %si,_0cf1f2_data
		call   _05b234_func
		mov    _0cf1f2_data,%di
		add    $0x000002,%edi
		mov    _0cf21c_data,%bx
		mov    %di,_0cf1f2_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05b60c_switch:
		.long   _05b6ef_case
		.long   _05b661_case
		.long   _05b676_case
		.long   _05b680_case
		.long   _05b693_case
		.long   _05b6a5_case
		.long   _05b68a_case
		.long   _05b69c_case
		.long   _05b6ae_case
		.long   _05b6c0_case
		.long   _05b6d2_case




_05b638_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf1f2_data,%cx
		mov    _0cf208_data,%ax
		cmp    $0x00000a,%ax
		ja     _05b6ef_case
		and    $0x00ffff,%eax
		jmp    *%cs:_05b60c_switch(,%eax,4)

	_05b661_case:
		xor    %edi,%edi
		mov    %di,_0cf21c_data
		mov    %di,_0cf21a_data
		jmp    _05b6ef_case

	_05b676_case:
		call   _05ac08_func
		jmp    _05b6ef_case

	_05b680_case:
		call   _05acd0_func
		jmp    _05b6ef_case

	_05b68a_case:
		cmpb   $0x000000,_0cf3ef_data
		jne    _05b6ef_case

	_05b693_case:
		decw   _0cf21c_data
		jmp    _05b6ef_case

	_05b69c_case:
		cmpb   $0x000000,_0cf3ef_data
		jne    _05b6ef_case

	_05b6a5_case:
		incw   _0cf21c_data
		jmp    _05b6ef_case

	_05b6ae_case:
		cmpb   $0x000000,_0cf3ef_data
		jne    _05b6ef_case
		decw   _0cf21a_data
		jmp    _05b6ef_case

	_05b6c0_case:
		cmpb   $0x000000,_0cf3ef_data
		jne    _05b6ef_case
		incw   _0cf21a_data
		jmp    _05b6ef_case

	_05b6d2_case:
		mov    $0xfffffff8,%edx
		mov    $0x000008,%ebx
		mov    %dx,_0cf21c_data
		mov    %bx,_0cf21a_data
		call   _05ac64_func

	_05b6ef_case:
		mov    _0cf206_data,%eax
		sar    $0x000010,%eax
		mov    _0cf1f6_data,%bx
		lea    0x000000(,%eax,2),%edx
		mov    _0cf1f2_data,%cx
		inc    %ebx
		mov    _0ca830_data(%edx),%si
		mov    %bx,_0cf1f6_data
		cmp    %si,%bx
		jne    _05b75f_jump
		movswl %cx,%eax
		inc    %ecx
		mov    _0c91a8_data(,%eax,2),%bx
		movswl %cx,%eax
		mov    _0c91a8_data(,%eax,2),%ax
		inc    %ecx
		movswl %ax,%edx
		movswl %bx,%eax
		mov    %cx,_0cf1f2_data
		call   _05b234_func
		mov    _0cf1f2_data,%cx
		mov    _0c91a8_data,%di
		cmp    %di,%cx
		jne    _05b75f_jump
		xor    %edi,%ecx

	_05b75f_jump:
		mov    %cx,_0cf1f2_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_05b76b_jump:
		ret    

_05b76c_switch:
		.long   _05b7bd_case
		.long   _05b7c4_case
		.long   _05b7cb_case
		.long   _05b7d2_case
		.long   _05b7d9_case
		.long   _05b7e0_case
		.long   _05b7e7_case
		.long   _05b7ee_case
		.long   _05b7f5_case
		.long   _05b853_case
		.long   _05b76b_jump
		.long   _05b7b9_case




_05b79c_func:
		andb   $0x0000fb,0x000081(%eax)
		mov    0x00006c(%eax),%al
		sub    $0x000015,%al
		cmp    $0x00000b,%al
		ja     _05b76b_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_05b76c_switch(,%eax,4)

	_05b7b9_case:
		xor    %eax,%eax
		jmp    _05b7fc_jump

	_05b7bd_case:
		mov    $0x000001,%eax
		jmp    _05b7fc_jump

	_05b7c4_case:
		mov    $0x000002,%eax
		jmp    _05b7fc_jump

	_05b7cb_case:
		mov    $0x000003,%eax
		jmp    _05b7fc_jump

	_05b7d2_case:
		mov    $0x000004,%eax
		jmp    _05b7fc_jump

	_05b7d9_case:
		mov    $0x000005,%eax
		jmp    _05b7fc_jump

	_05b7e0_case:
		mov    $0x000006,%eax
		jmp    _05b7fc_jump

	_05b7e7_case:
		mov    $0x000007,%eax
		jmp    _05b7fc_jump

	_05b7ee_case:
		mov    $0x000008,%eax
		jmp    _05b7fc_jump

	_05b7f5_case:
		mov    $0x000009,%eax
		mov    %eax,%eax

	_05b7fc_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0cf21c_data,%bx
		mov    _0cf21a_data,%cx
		mov    %eax,%edx
		mov    $0x000001,%esi
		mov    $_0c91a8_data,%eax
		mov    %si,_0cf1f8_data
		test   %dx,%dx
		jne    _05b24f_jump
		movw   $0x000004,(%eax)
		add    $0x000002,%eax
		movw   $0x000002,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %dx,-0x000002(%eax)
		jmp    _05b5b4_jump

	_05b853_case:
		mov    $0x00000a,%eax
		jmp    _05b7fc_jump



_05bbec_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    _0ce040_data,%eax
		mov    %ebx,0x00000c(%edx)
		mov    %eax,(%edx)
		mov    _0ce03c_data,%edx
		mov    %esi,%eax
		shl    $0x000002,%edx
		call   _07ee30_func
		mov    $0x000008,%edx
		mov    %eax,0x000004(%ecx)
		mov    %esi,%eax
		call   _07ee30_func
		mov    _0ce03c_data,%edx
		xor    %esi,%esi
		mov    %eax,0x000008(%ecx)
		test   %edx,%edx
		jle    _05bcb4_jump
		xor    %eax,%eax
		xor    %edx,%edx

	_05bc37_jump:
		mov    (%ecx),%ebx
		mov    (%edx,%ebx,1),%bx
		and    $0x00ffff,%ebx
		mov    0x00000c(%ecx),%edi
		mov    _0c3f78_data(,%ebx,4),%ebx
		add    %ebx,%edi
		mov    %edi,(%esp)
		mov    0x000004(%ecx),%edi
		mov    (%esp),%ebp
		mov    %ebp,(%edi,%eax,1)
		imul   $0x000120,_0cca04_data,%edi
		cmp    %edi,%ebx
		ja     _05bc77_jump
		mov    0x000004(%ecx),%ebx
		mov    (%ebx,%eax,1),%ebx
		mov    0x000100(%ebx),%ebx
		jmp    _05bc83_jump

	_05bc77_jump:
		mov    0x000004(%ecx),%ebx
		mov    (%ebx,%eax,1),%ebx
		mov    0x000200(%ebx),%ebx

	_05bc83_jump:
		cmp    $0xaaaaaaaa,%ebx
		jne    _05bc8f_jump
		mov    $0x000001,%bl
		jmp    _05bc9d_jump

	_05bc8f_jump:
		cmp    $0x55555555,%ebx
		jne    _05bc9b_jump
		xor    %bl,%bl
		jmp    _05bc9d_jump

	_05bc9b_jump:
		mov    $0x000002,%bl

	_05bc9d_jump:
		mov    (%ecx),%edi
		add    $0x000004,%eax
		inc    %esi
		mov    %bl,0x000004(%edx,%edi,1)
		mov    _0ce03c_data,%ebx
		add    $0x000006,%edx
		cmp    %ebx,%esi
		jl     _05bc37_jump

	_05bcb4_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05bcbc_func:
		mov    _0ce038_data,%dx
		mov    %dx,0x000016(%eax)
		mov    _0ce03a_data,%dx
		mov    %dx,0x000018(%eax)
		mov    %eax,%eax



_05bcd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0cf2ac_data,%ecx
		mov    _0cca4c_data,%ebx
		sar    $0x000010,%ecx
		add    %ebx,%ecx
		mov    _0cf2ae_data,%ebx
		mov    _0cca54_data,%esi
		sar    $0x000010,%ebx
		add    %esi,%ebx
		mov    0x000014(%edx),%edx
		mov    %ebx,%esi
		sar    $0x000010,%edx
		sar    $0x000004,%esi
		imul   %edx,%esi
		sub    $0x000008,%ecx
		mov    %ecx,%edx
		mov    0x000008(%eax),%eax
		sar    $0x000004,%edx
		xor    %ch,%ch
		add    %esi,%edx
		and    $0x00000f,%cl
		mov    %dx,0x000006(%eax)
		mov    _0cca4c_data,%dx
		xor    %bh,%bh
		sub    %ecx,%edx
		and    $0x00000f,%bl
		mov    %dx,(%eax)
		mov    _0cca54_data,%dx
		sub    %ebx,%edx
		movswl (%eax),%ebx
		mov    %dx,0x000002(%eax)
		mov    _0cca48_data,%edx
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    (%eax),%edx
		mov    _0cca50_data,%ecx
		sar    $0x000010,%edx
		sub    %edx,%ecx
		mov    %ecx,%edx
		test   $0x00000f,%bl
		setne  %cl
		and    $_0000ff_case,%ecx
		sar    $0x000004,%ebx
		add    %ecx,%ebx
		mov    %bl,0x000004(%eax)
		test   $0x00000f,%dl
		setne  %bl
		and    $_0000ff_case,%ebx
		sar    $0x000004,%edx
		add    %ebx,%edx
		mov    %dl,0x000005(%eax)
		mov    (%eax),%ax
		xor    %ah,%ah
		and    $0x000003,%al
		mov    $0x000004,%ebx
		cwtl   
		mov    _0ccae8_data,%edx
		sub    %eax,%ebx
		add    %ebx,%edx
		mov    %ebx,_0ccadc_data
		mov    %edx,_0ccae4_data
		mov    %edx,_0cd154_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05bdb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x0000c8,%ebx
		mov    $0x000004,%ecx
		xor    %edx,%edx
		mov    $0x000140,%esi
		mov    %edx,_0cca54_data
		mov    %ebx,_0cca50_data
		mov    %ecx,_0cca4c_data
		mov    %esi,_0cca48_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05bde4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce038_data,%cx
		shl    $0x000004,%ecx
		mov    _0cca48_data,%dx
		mov    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0ce03a_data,%ax
		mov    _0cca50_data,%bx
		shl    $0x000004,%eax
		sub    $0x000140,%ecx
		mov    %eax,%esi
		mov    %cx,_0cf150_data
		sub    %ebx,%esi
		sub    $0x0000c8,%eax
		mov    %esi,%ebx
		mov    %ax,_0cf154_data
		test   %dx,%dx
		jge    _05be35_jump
		xor    %edx,%edx

	_05be35_jump:
		test   %bx,%bx
		jge    _05be3c_jump
		xor    %ebx,%ebx

	_05be3c_jump:
		mov    _0cca4c_data,%ax
		neg    %eax
		add    $0x000008,%eax
		mov    %ax,_0cf25a_data
		mov    %edx,%eax
		add    $0x000008,%eax
		mov    %ax,_0cf268_data
		mov    _0cca54_data,%ax
		mov    %eax,%ecx
		mov    %ax,_0cf25c_data
		neg    %ecx
		mov    %bx,_0cf266_data
		mov    %cx,_0cf25c_data
		mov    %bx,_0cf278_data
		mov    %dx,_0cf286_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05be90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cf2ae_data,%bx
		mov    _0cf2b0_data,%cx
		mov    _0cca4c_data,%eax
		movswl %bx,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _05beb9_jump
		mov    _0cca4c_data,%bx
		neg    %ebx

	_05beb9_jump:
		mov    _0cf286_data,%dx
		cmp    %dx,%bx
		jle    _05bec7_jump
		mov    %edx,%ebx

	_05bec7_jump:
		mov    _0cca54_data,%eax
		movswl %cx,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _05bede_jump
		mov    _0cca54_data,%cx
		neg    %ecx

	_05bede_jump:
		mov    _0cf278_data,%si
		cmp    %si,%cx
		jle    _05beec_jump
		mov    %esi,%ecx

	_05beec_jump:
		mov    %cx,_0cf2b0_data
		mov    %bx,_0cf2ae_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05c124_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    _0cf286_data,%di
		mov    %eax,%esi
		sub    _0cca4c_data,%ax
		mov    %eax,0x00000c(%esp)
		mov    _0cca48_data,%ax
		sub    %edx,%eax
		mov    %eax,(%esp)
		mov    %ebx,%eax
		sub    _0cca54_data,%ax
		mov    %eax,0x000008(%esp)
		mov    _0cca50_data,%ax
		sub    %ecx,%eax
		mov    %eax,0x000004(%esp)
		movswl %bx,%eax
		mov    %eax,_0cca54_data
		movswl %cx,%eax
		mov    %eax,_0cca50_data
		movswl %si,%eax
		mov    %eax,_0cca4c_data
		movswl %dx,%eax
		mov    _0cca50_data,%edx
		mov    %eax,_0cca48_data
		cmp    $0x0000c8,%edx
		jle    _05c199_jump
		movl   $0x0000c8,_0cca50_data

	_05c199_jump:
		cmpl   $0x000000,_0cca54_data
		jge    _05c1aa_jump
		xor    %esi,%esi
		mov    %esi,_0cca54_data

	_05c1aa_jump:
		cmpl   $0x000140,_0cca48_data
		jle    _05c1c0_jump
		movl   $0x000140,_0cca48_data

	_05c1c0_jump:
		cmpl   $0x000004,_0cca4c_data
		jge    _05c1d3_jump
		movl   $0x000004,_0cca4c_data

	_05c1d3_jump:
		cmpl   $0x000004,_0cca4c_data
		jl     _05c25e_jump
		mov    0x00000c(%esp),%eax
		mov    _0cf25a_data,%dx
		mov    _0cf268_data,%bx
		sub    %eax,%edx
		add    (%esp),%ebx
		mov    %dx,_0cf25a_data
		mov    %bx,_0cf268_data
		cmp    $0x00000c,%dx
		jle    _05c214_jump
		movw   $0x00000c,_0cf25a_data

	_05c214_jump:
		mov    _0cf14e_data,%eax
		mov    _0cf266_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    $0x000008,%eax
		cmp    %eax,%edx
		jge    _05c23d_jump
		mov    _0cf150_data,%ax
		add    $0x000008,%eax
		mov    %ax,_0cf268_data

	_05c23d_jump:
		mov    (%esp),%eax
		mov    _0cf150_data,%dx
		add    %eax,%edi
		cmp    %dx,%di
		jge    _05c250_jump
		mov    %edx,%edi

	_05c250_jump:
		mov    _0cf2ae_data,%bx
		cmp    %bx,%di
		jge    _05c25e_jump
		mov    %ebx,%edi

	_05c25e_jump:
		cmpl   $0x000000,_0cca54_data
		jl     _05c2f8_jump
		mov    0x000008(%esp),%eax
		mov    _0cf25c_data,%cx
		mov    _0cf266_data,%si
		sub    %eax,%ecx
		add    0x000004(%esp),%esi
		mov    %cx,_0cf25c_data
		mov    %si,_0cf266_data
		test   %cx,%cx
		jle    _05c29f_jump
		xor    %edx,%edx
		mov    %dx,_0cf25c_data

	_05c29f_jump:
		mov    _0cf266_data,%ax
		mov    _0cf154_data,%bx
		cmp    %bx,%ax
		jge    _05c2b8_jump
		mov    %bx,_0cf266_data

	_05c2b8_jump:
		mov    0x000004(%esp),%eax
		mov    _0cf278_data,%cx
		add    %eax,%ecx
		mov    _0cf154_data,%si
		mov    %cx,_0cf278_data
		cmp    %si,%cx
		jge    _05c2df_jump
		mov    %si,_0cf278_data

	_05c2df_jump:
		mov    _0cf278_data,%ax
		mov    _0cf2b0_data,%dx
		cmp    %dx,%ax
		jge    _05c2f8_jump
		mov    %dx,_0cf278_data

	_05c2f8_jump:
		mov    %di,_0cf286_data
		call   _05be90_func
		xor    %ebx,%ebx
		mov    _0cf286_data,%di
		mov    _0cca48_data,%dx
		movswl %di,%ecx
		mov    %dx,%bx
		add    %ebx,%ecx
		mov    _0ce036_data,%ebx
		sar    $0x000010,%ebx
		shl    $0x000004,%ebx
		mov    _0cca50_data,%ax
		cmp    %ebx,%ecx
		jle    _05c33e_jump
		mov    _0ce038_data,%di
		shl    $0x000004,%edi
		sub    %edx,%edi

	_05c33e_jump:
		mov    _0cf276_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    %ax,%dx
		add    %edx,%ebx
		mov    _0ce038_data,%edx
		sar    $0x000010,%edx
		shl    $0x000004,%edx
		cmp    %edx,%ebx
		jle    _05c371_jump
		mov    _0ce03a_data,%dx
		shl    $0x000004,%edx
		sub    %eax,%edx
		mov    %dx,_0cf278_data

	_05c371_jump:
		mov    _0cca4c_data,%eax
		mov    %eax,_0cca40_data
		mov    _0cca48_data,%eax
		mov    %eax,_0cca34_data
		mov    _0cca54_data,%eax
		mov    %eax,_0cca30_data
		mov    _0cca50_data,%eax
		mov    %eax,_0cca2c_data
		mov    %di,_0cf286_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    



_05c3a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%edx
		mov    $0x00000c,%ebx
		mov    _0ce738_data,%eax
		mov    $0x000004,%ebp
		mov    %edx,0x000008(%esp)
		mov    0x000044(%eax),%ax
		mov    %ebx,0x000004(%esp)
		mov    %ax,0x00000c(%esp)
		jmp    _05c474_jump

	_05c3de_jump:
		mov    _0ce738_data,%esi
		mov    0x000004(%esp),%edi
		mov    (%esi),%esi
		add    %edi,%esi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000006(%esi),%dl
		mov    0x000005(%esi),%al
		mov    %dx,0x000010(%esp)
		test   $0x000001,%al
		je     _05c404_jump
		and    $0x010000,%eax

	_05c404_jump:
		mov    0x00000e(%esp),%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    (%esp),%eax
		call   _07ee30_func
		mov    %eax,_0c1ee8_data(%ebp)
		mov    _0ce738_data,%eax
		mov    0x000008(%eax),%ebx
		mov    (%esi),%eax
		xor    %edi,%edi
		add    %eax,%ebx
		mov    _0c1ee8_data(%ebp),%eax
		jmp    _05c452_jump

	_05c433_jump:
		xor    %edx,%edx
		jmp    _05c448_jump

	_05c437_jump:
		mov    (%ebx),%cl
		test   %cl,%cl
		jne    _05c442_jump
		movb   $_0000ff_case,(%eax)
		jmp    _05c445_jump

	_05c442_jump:
		movb   $0x000000,(%eax)

	_05c445_jump:
		inc    %ebx
		inc    %eax
		inc    %edx

	_05c448_jump:
		xor    %ecx,%ecx
		mov    0x000005(%esi),%cl
		cmp    %ecx,%edx
		jb     _05c437_jump
		inc    %edi

	_05c452_jump:
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%edi
		jb     _05c433_jump
		mov    0x000004(%esp),%edx
		mov    0x000008(%esp),%ebx
		add    $0x000004,%ebp
		add    $0x00000c,%edx
		inc    %ebx
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)

	_05c474_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000008(%esp),%ecx
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		ja     _05c3de_jump
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05c4a0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000044,%esp
		mov    %eax,%ebp
		mov    %edx,%ecx
		mov    0x000008(%edx),%eax
		mov    0x000005(%eax),%dl
		mov    %eax,0x000028(%esp)
		cmp    $0x000001,%dl
		jbe    _05c814_jump
		cmpb   $0x000001,0x000004(%eax)
		jbe    _05c814_jump
		mov    (%eax),%eax
		mov    0x000028(%esp),%ebx
		sar    $0x000010,%eax
		movswl (%ebx),%ebx
		mov    %eax,%edx
		add    %ebx,%ebp
		shl    $0x000008,%edx
		shl    $0x000006,%eax
		add    %edx,%ebp
		mov    0x000028(%esp),%edx
		add    %eax,%ebp
		xor    %eax,%eax
		mov    0x000006(%edx),%ax
		mov    %eax,0x000008(%esp)
		mov    (%edx),%ax
		mov    %ax,0x000040(%esp)
		mov    %eax,%edx
		mov    0x000028(%esp),%eax
		mov    0x000002(%eax),%ax
		xor    %ebx,%ebx
		mov    %eax,0x000038(%esp)
		mov    %ax,0x00003c(%esp)
		mov    0x000008(%esp),%eax
		mov    %ebx,0x00002c(%esp)
		mov    %eax,(%esp)
		mov    %eax,%ebx
		shl    $0x000002,%eax
		sub    %ebx,%eax
		add    %eax,%eax
		mov    %eax,0x00001c(%esp)
		mov    %ebx,%eax
		shl    $0x000002,%eax
		mov    %ebp,0x000010(%esp)
		mov    %eax,0x000024(%esp)
		jmp    _05c5b4_jump

	_05c538_jump:
		mov    0x00001c(%esp),%ebx
		mov    (%ecx),%eax
		add    %ebx,%eax
		mov    0x000004(%eax),%bl
		test   %bl,%bl
		je     _05c586_jump
		cmp    $0x000001,%bl
		jne    _05c56a_jump
		mov    0x00003a(%esp),%ebx
		mov    0x000024(%esp),%edi
		mov    0x000004(%ecx),%esi
		movswl %dx,%eax
		add    %edi,%esi
		sar    $0x000010,%ebx
		mov    %ebp,%edi
		mov    (%esi),%esi
		call   _0154bd_func
		jmp    _05c586_jump

	_05c56a_jump:
		mov    0x00003a(%esp),%ebx
		mov    0x000024(%esp),%edi
		mov    0x000004(%ecx),%esi
		movswl %dx,%eax
		add    %edi,%esi
		sar    $0x000010,%ebx
		mov    %ebp,%edi
		mov    (%esi),%esi
		call   _015325_func

	_05c586_jump:
		mov    0x00001c(%esp),%eax
		mov    0x000024(%esp),%ebx
		mov    0x000008(%esp),%esi
		mov    0x00002c(%esp),%edi
		add    $0x000010,%ebp
		add    $0x000010,%edx
		add    $0x000006,%eax
		add    $0x000004,%ebx
		inc    %esi
		inc    %edi
		mov    %eax,0x00001c(%esp)
		mov    %ebx,0x000024(%esp)
		mov    %esi,0x000008(%esp)
		mov    %edi,0x00002c(%esp)

	_05c5b4_jump:
		mov    0x000028(%esp),%ebx
		xor    %eax,%eax
		mov    0x00002c(%esp),%esi
		mov    0x000004(%ebx),%al
		cmp    %esi,%eax
		jg     _05c538_jump
		mov    0x000010(%esp),%edx
		mov    (%esp),%ebx
		mov    0x000014(%ecx),%eax
		mov    $0x000001,%edi
		sar    $0x000010,%eax
		add    $0x001400,%edx
		add    %eax,%ebx
		mov    %edi,0x000014(%esp)
		jmp    _05c72c_jump

	_05c5ec_jump:
		mov    0x000018(%esp),%eax
		mov    %eax,0x00000c(%esp)
		imul   $0x000006,%eax,%esi
		mov    (%ecx),%eax
		add    %eax,%esi
		mov    0x000004(%esi),%al
		mov    %edx,0x000004(%esp)
		test   %al,%al
		je     _05c63a_jump
		cmp    $0x000001,%al
		jne    _05c623_jump
		mov    0x00003e(%esp),%eax
		movswl %bx,%ebx
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _0154bd_func
		jmp    _05c63a_jump

	_05c623_jump:
		mov    0x00003e(%esp),%eax
		movswl %bx,%ebx
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _015325_func

	_05c63a_jump:
		mov    $0x000001,%ebx
		mov    0x000018(%esp),%esi
		add    %ebx,%esi
		mov    %ebx,0x00002c(%esp)
		mov    %esi,0x000018(%esp)
		lea    0x000000(,%esi,4),%ebx
		add    $0x000010,%edx
		imul   $0x000006,%esi,%ebp
		jmp    _05c6a2_jump

	_05c65c_jump:
		mov    (%ecx),%esi
		add    %ebp,%esi
		mov    0x000004(%esi),%al
		test   %al,%al
		je     _05c687_jump
		cmp    $0x000001,%al
		jne    _05c67a_jump
		mov    0x000004(%ecx),%esi
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		call   _014fa0_func
		jmp    _05c687_jump

	_05c67a_jump:
		mov    0x000004(%ecx),%esi
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		call   _014dc3_func

	_05c687_jump:
		mov    0x000018(%esp),%eax
		mov    0x00002c(%esp),%esi
		add    $0x000010,%edx
		add    $0x000004,%ebx
		add    $0x000006,%ebp
		inc    %eax
		inc    %esi
		mov    %eax,0x000018(%esp)
		mov    %esi,0x00002c(%esp)

	_05c6a2_jump:
		mov    0x000028(%esp),%esi
		movzbl 0x000004(%esi),%esi
		mov    0x00002c(%esp),%edi
		dec    %esi
		cmp    %edi,%esi
		jg     _05c65c_jump
		mov    (%ecx),%eax
		add    %eax,%ebp
		cmpb   $0x000000,0x000004(%ebp)
		je     _05c70d_jump
		mov    0x000014(%esp),%esi
		mov    0x000038(%esp),%eax
		mov    0x00002c(%esp),%edi
		shl    $0x000004,%esi
		shl    $0x000004,%edi
		add    %eax,%esi
		add    0x000040(%esp),%edi
		cmpb   $0x000001,0x000004(%ebp)
		jne    _05c6f6_jump
		movswl %si,%eax
		mov    0x000004(%ecx),%ebp
		movswl %di,%esi
		mov    (%ebx,%ebp,1),%ebp
		mov    %eax,%ebx
		mov    %edx,%edi
		mov    %esi,%eax
		mov    %ebp,%esi
		call   _0154bd_func
		jmp    _05c70d_jump

	_05c6f6_jump:
		movswl %si,%eax
		mov    0x000004(%ecx),%esi
		movswl %di,%ebp
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		mov    %eax,%ebx
		mov    %ebp,%eax
		call   _015325_func

	_05c70d_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000014(%esp),%ebp
		mov    0x000014(%ecx),%eax
		add    $0x001400,%edx
		sar    $0x000010,%eax
		inc    %ebp
		add    %eax,%ebx
		mov    %ebp,0x000014(%esp)

	_05c72c_jump:
		mov    %ebx,0x000018(%esp)
		mov    0x000028(%esp),%ebx
		xor    %eax,%eax
		mov    0x000038(%esp),%esi
		mov    0x000005(%ebx),%al
		mov    0x000014(%esp),%ebx
		mov    0x000018(%esp),%ebp
		shl    $0x000004,%ebx
		dec    %eax
		add    %esi,%ebx
		mov    0x000014(%esp),%esi
		shl    $0x000002,%ebp
		cmp    %esi,%eax
		jg     _05c5ec_jump
		mov    0x000040(%esp),%eax
		mov    %bx,0x000034(%esp)
		mov    0x000018(%esp),%ebx
		mov    %ax,0x000030(%esp)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		xor    %edi,%edi
		add    %eax,%eax
		mov    %edi,0x00002c(%esp)
		mov    %eax,0x000020(%esp)
		jmp    _05c801_jump

	_05c786_jump:
		mov    0x000020(%esp),%esi
		mov    (%ecx),%eax
		add    %esi,%eax
		mov    0x000004(%eax),%bl
		test   %bl,%bl
		je     _05c7d2_jump
		cmp    $0x000001,%bl
		jne    _05c7b7_jump
		mov    0x000032(%esp),%ebx
		mov    0x00002e(%esp),%eax
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _0154bd_func
		jmp    _05c7d2_jump

	_05c7b7_jump:
		mov    0x000032(%esp),%ebx
		mov    0x00002e(%esp),%eax
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _015325_func

	_05c7d2_jump:
		mov    0x000030(%esp),%edi
		mov    0x000018(%esp),%eax
		mov    0x00002c(%esp),%ebx
		add    $0x000010,%edx
		add    $0x000004,%ebp
		add    $0x000010,%edi
		inc    %eax
		inc    %ebx
		mov    %di,0x000030(%esp)
		mov    0x000020(%esp),%edi
		mov    %eax,0x000018(%esp)
		add    $0x000006,%edi
		mov    %ebx,0x00002c(%esp)
		mov    %edi,0x000020(%esp)

	_05c801_jump:
		mov    0x000028(%esp),%ebx
		xor    %eax,%eax
		mov    0x000004(%ebx),%al
		cmp    0x00002c(%esp),%eax
		jg     _05c786_jump

	_05c814_jump:
		add    $0x000044,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_05c820_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    _0cca50_data,%edx
		mov    _0cca54_data,%ecx
		mov    _0cca48_data,%ebx
		mov    _0cca4c_data,%eax
		call   _01614e_func
		mov    _0ccae4_data,%eax
		mov    $_014c59_func,%edx
		mov    %eax,_0ccae8_data
		mov    %edx,_0ccabc_data
		lea    0x000004(%eax),%ebx
		mov    _0cd244_data,%edx
		mov    $_0c1fb0_data,%eax
		mov    %ebx,_0ccae4_data
		call   _05bcbc_func
		mov    $0x00fa00,%ebx
		mov    _095de0_data,%eax
		xor    %edx,%edx
		call   _07fcc0_func
		mov    _0ccae4_data,%edi
		call   _014bed_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05c890_func:
		mov    _0ccae8_data,%eax
		mov    %eax,_0ccae4_data
		mov    %eax,_0cd154_data
		ret    



_05c8a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cf1fc_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _05c8d9_jump
		mov    %edx,%eax
		push   $0xffffffcd
		shl    $0x000005,%eax
		mov    $0x000015,%ecx
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000002,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01ce30_func

	_05c8d9_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05c8e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    _0cf1fc_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _05c97c_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		lea    0x00000c(%esp),%ebx
		push   %ebx
		lea    0x00000c(%esp),%ebx
		lea    0x000008(%esp),%ecx
		push   %ebx
		mov    $0x000002,%edx
		lea    0x000008(%esp),%ebx
		call   _01d7e0_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    $0x000015,%eax
		mov    %eax,0x000028(%esi)
		mov    0x000004(%esp),%eax
		sub    $0x000043,%eax
		mov    %ax,0x00000c(%esp)
		mov    0x000040(%esi),%ebx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		lea    (%eax,%ebx,1),%ecx
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x00002c(%esi),%eax
		cmp    %ebx,%eax
		jl     _05c968_jump
		cmp    %ecx,%eax
		jg     _05c968_jump
		mov    $0x000001,%eax
		jmp    _05c96a_jump

	_05c968_jump:
		xor    %eax,%eax

	_05c96a_jump:
		test   %eax,%eax
		je     _05c97c_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d444_func

	_05c97c_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05c984_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,0x000008(%esp)
		mov    _0cc7a0_data,%esi
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _05cb32_jump

	_05c9a9_jump:
		cmpw   $0x000049,0x000060(%esi)
		jne    _05cb22_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _05cb22_jump
		test   %bl,%bl
		je     _05c9e5_jump
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000081(%esi)
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _05ca0a_jump

	_05c9e5_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_05ca0a_jump:
		mov    0x000008(%esp),%eax
		mov    %ax,0x000042(%esi)
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %edi,%eax
		call   _01d7e0_func
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _05ca57_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ebp
		mov    %ebp,0x000028(%esi)

	_05ca57_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000074(%esi),%dl
		mov    0x000069(%esi),%al
		add    %edx,%eax
		mov    0x00000e(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000081(%esi),%al
		mov    %edx,0x00002c(%esi)
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _060460_func
		mov    %esi,%eax
		call   _01dc5c_func
		orb    $0x000004,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f3d4_func
		mov    0x000081(%esi),%dl
		xor    %eax,%eax
		and    $0x0000bf,%dl
		mov    _0ce0ac_data,%al
		mov    %dl,0x000081(%esi)
		mov    _0ce06c_data,%dx
		mov    0x000028(%esi),%bx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		testb  $0x000008,0x000081(%esi)
		je     _05cae5_jump
		mov    $0x000001,%edx
		jmp    _05caea_jump

	_05cae5_jump:
		mov    $0xffffffff,%edx

	_05caea_jump:
		cwtl   
		imul   %edx,%eax
		xor    %ebx,%ebx
		cwtl   
		cmp    %ebx,%eax
		jge    _05caf7_jump
		mov    %ebx,%eax

	_05caf7_jump:
		mov    0x000081(%esi),%bl
		add    $0x00000f,%eax
		and    $0x0000fc,%bl
		mov    %ax,0x000052(%esi)
		mov    %bl,0x000081(%esi)
		mov    0x000034(%edi),%ax
		mov    %ax,0x000050(%esi)
		decb   0x00007d(%edi)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05cb22_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _05c9a9_jump

	_05cb32_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05cb3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x00001a,0x00006b(%eax)
		jae    _05cb4d_jump
		movw   $0x000000,0x000052(%ecx)

	_05cb4d_jump:
		cmpw   $0x000000,0x000052(%ecx)
		jne    _05cb9d_jump
		cmpb   $0x00001a,0x00006b(%ecx)
		jne    _05cb9d_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _05cb9d_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _05c984_func
		movw   $0x000001,0x000052(%ecx)

	_05cb9d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05cba4_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _05cbb2_jump
		cmpb   $0x000000,0x00006c(%eax)
		je     _05cbbe_jump

	_05cbb2_jump:
		cmpb   $0x000001,0x00006d(%eax)
		jne    _05cbd0_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _05cbd0_jump

	_05cbbe_jump:
		cmpb   $0x000000,0x00007d(%eax)
		jbe    _05cbd0_jump
		mov    $0x000002,%ebx
		xor    %edx,%edx
		call   _01d444_func

	_05cbd0_jump:
		pop    %edx
		pop    %ebx
		ret    



_05cbd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    0x000081(%eax),%bl
		call   _01dbe4_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		shl    $0x000004,%bl
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x00006c(%ecx),%al
		shr    $0x000007,%bl
		add    %edx,%eax
		mov    %bl,%dl
		and    $0x000001,%dl
		shl    $0x000003,%dl
		cmp    $0x000006,%eax
		jb     _05cc60_jump
		jbe    _05ce45_jump
		cmp    $0x000100,%eax
		jb     _05cc49_jump
		jbe    _05cd59_jump
		cmp    $0x000205,%eax
		jb     _05cc39_jump
		jbe    _05cee4_jump
		cmp    $0x000207,%eax
		je     _05ce2d_jump
		jmp    _05ceea_jump

	_05cc39_jump:
		cmp    $0x000202,%eax
		jb     _05ceea_jump
		jmp    _05ce39_jump

	_05cc49_jump:
		cmp    $0x000007,%eax
		jbe    _05cec0_jump
		cmp    $0x000008,%eax
		je     _05ce89_jump
		jmp    _05ceea_jump

	_05cc60_jump:
		cmp    $0x000002,%eax
		jb     _05cc7b_jump
		jbe    _05cd11_jump
		cmp    $0x000004,%eax
		jb     _05cc84_jump
		jbe    _05ce45_jump
		jmp    _05cee4_jump

	_05cc7b_jump:
		test   %eax,%eax
		jbe    _05cc8f_jump
		jmp    _05cee0_jump

	_05cc84_jump:
		movw   $0x00fff8,0x000042(%ecx)
		jmp    _05cee4_jump

	_05cc8f_jump:
		mov    _0ce172_data,%dl
		movw   $0x000000,0x000040(%ecx)
		test   %dl,%dl
		je     _05ccb2_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		jmp    _05ceea_jump

	_05ccb2_jump:
		cmpb   $0x000001,0x00007d(%ecx)
		jne    _05ccec_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %bl,%al
		je     _05ccd9_jump
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _01d434_func
		jmp    _05ceea_jump

	_05ccd9_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		jmp    _05ceea_jump

	_05ccec_jump:
		mov    %bl,%al
		mov    0x000081(%ecx),%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,0x000081(%ecx)
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,0x000081(%ecx)
		jmp    _05ceea_jump

	_05cd11_jump:
		mov    0x000081(%ecx),%bh
		and    $0x0000f7,%bh
		mov    %bh,%al
		mov    %bh,0x000081(%ecx)
		or     %dl,%al
		mov    %al,0x000081(%ecx)
		mov    _0ce172_data,%ah
		movw   $0x000000,0x000040(%ecx)
		test   %ah,%ah
		je     _05cd4d_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		jmp    _05ceea_jump

	_05cd4d_jump:
		mov    %ecx,%eax
		call   _05cb3c_func
		jmp    _05ceea_jump

	_05cd59_jump:
		cmpb   $0x000000,_0ce172_data
		je     _05cd75_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		jmp    _05ceea_jump

	_05cd75_jump:
		cmpb   $0x000001,0x00007d(%ecx)
		jne    _05ce1d_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _024f68_func
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		jne    _05cdd2_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%esi
		mov    0x000068(%ecx),%al
		add    %eax,%esi
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		add    %esi,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e1b4_func
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		jne    _05cdec_jump

	_05cdd2_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%bl
		jne    _05cdec_jump
		testb  $0x000008,0x000081(%ecx)
		sete   %bl

	_05cdec_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %bl,%al
		je     _05ce0a_jump
		mov    $0x000006,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func

	_05ce0a_jump:
		mov    %ecx,%eax
		call   _0552b4_func
		mov    %ecx,%eax
		call   _025590_func
		jmp    _05ceea_jump

	_05ce1d_jump:
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d444_func
		jmp    _05ceea_jump

	_05ce2d_jump:
		mov    %ecx,%eax
		call   _05c8e0_func
		jmp    _05ceea_jump

	_05ce39_jump:
		mov    %ecx,%eax
		call   _05c8a0_func
		jmp    _05ceea_jump

	_05ce45_jump:
		mov    %bl,%al
		mov    0x000081(%ecx),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%ecx)
		mov    %dl,%dh
		movw   $0x000000,0x000040(%ecx)
		or     %al,%dh
		mov    _0ce172_data,%bl
		mov    %dh,0x000081(%ecx)
		test   %bl,%bl
		je     _05ceea_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		jmp    _05ceea_jump

	_05ce89_jump:
		mov    0x000081(%ecx),%dh
		and    $0x0000f7,%dh
		mov    %dh,%bl
		mov    %dh,0x000081(%ecx)
		or     %dl,%bl
		mov    %bl,0x000081(%ecx)
		mov    _0ce172_data,%bh
		movw   $0x000000,0x000040(%ecx)
		test   %bh,%bh
		jne    _05ceea_jump
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _01d434_func
		jmp    _05ceea_jump

	_05cec0_jump:
		mov    0x000081(%ecx),%al
		and    $0x0000f7,%al
		mov    %al,0x000081(%ecx)
		mov    %al,%ah
		movw   $0x000000,0x000040(%ecx)
		or     %dl,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _05ceea_jump

	_05cee0_jump:
		movb   $0x000064,0x00007f(%ecx)

	_05cee4_jump:
		movw   $0x000000,0x000040(%ecx)

	_05ceea_jump:
		mov    0x00007f(%ecx),%al
		test   %al,%al
		je     _05cef8_jump
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x00007f(%ecx)

	_05cef8_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05cf00_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00007f(%eax)
		jne    _05cfc5_jump
		mov    $0x000001,%dl
		mov    %ecx,%eax
		mov    %dl,_0ce173_data
		call   _01e7ac_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _05cf76_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    _0cf1fc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05cfc5_jump
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%ecx
		add    %ecx,%eax
		call   _0603c0_func
		mov    _0cf1fc_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc7a0_data,%eax
		movw   $0x000000,0x000048(%eax,%ecx,4)
		pop    %ecx
		pop    %ebx
		ret    

	_05cf76_jump:
		mov    _0ce0d0_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _05cf8d_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _05cfb7_jump

	_05cf8d_jump:
		jl     _05cfb0_jump
		testb  $0x000008,0x000081(%eax)
		je     _05cfb0_jump
		andb   $0x0000f7,0x000081(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		pop    %ecx
		pop    %ebx
		ret    

	_05cfb0_jump:
		orb    $0x000008,0x000081(%ecx)

	_05cfb7_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func

	_05cfc5_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05cfc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		mov    0x00004e(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _05d008_jump
		mov    0x000081(%ebx),%dh
		and    $0x0000fb,%dh
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		call   _07af48_func
		jmp    _05d14d_jump

	_05d008_jump:
		cmpw   $0x000000,0x000052(%ebx)
		jg     _05d076_jump
		mov    0x000081(%ebx),%dh
		test   $0x000001,%dh
		je     _05d039_jump
		mov    0x000081(%ebx),%ch
		movl   $0x000000,0x000024(%ebx)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%ebx)
		incb   0x00007d(%eax)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05d039_jump:
		mov    %dh,%cl
		or     $0x000003,%cl
		xor    %edx,%edx
		mov    %cl,0x000081(%ebx)
		mov    0x000068(%ebx),%dl
		mov    0x000028(%ebx),%cx
		mov    0x000028(%eax),%si
		add    %ecx,%edx
		mov    0x000068(%eax),%al
		sub    %esi,%edx
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %dx,0x000052(%ebx)
		mov    0x000050(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05d06c_jump
		neg    %eax

	_05d06c_jump:
		mov    %ax,0x000052(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05d076_jump:
		andb   $0x0000fd,0x000081(%ebx)
		mov    0x000070(%ebx),%al
		cmp    $0x000014,%al
		jne    _05d14d_jump
		mov    0x000056(%ebx),%ax
		mov    0x00004a(%ebx),%si
		mov    %ax,0x000040(%ebx)
		test   %si,%si
		je     _05d0a3_jump
		mov    %si,0x000042(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05d0a3_jump:
		testb  $0x000001,0x000081(%ebx)
		je     _05d137_jump
		mov    0x00004e(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    0x000028(%eax),%di
		mov    0x000028(%ebx),%cx
		add    %edi,%edx
		sub    %ecx,%edx
		mov    %edx,%ecx
		xor    %edx,%edx
		mov    0x000068(%ebx),%dl
		sub    %edx,%ecx
		xor    %edx,%edx
		mov    %cx,0x000052(%ebx)
		xor    %ecx,%ecx
		mov    0x000074(%eax),%dl
		mov    0x000069(%eax),%cl
		add    %ecx,%edx
		sar    %edx
		mov    0x00002c(%eax),%ecx
		add    %edx,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%ebx),%al
		mov    0x000069(%ebx),%dl
		add    %edx,%eax
		mov    0x00002c(%ebx),%esi
		sar    %eax
		add    %esi,%eax
		sub    %eax,%ecx
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		imul   %ecx,%eax
		mov    0x000052(%ebx),%si
		mov    %ax,0x000042(%ebx)
		test   %si,%si
		je     _05d127_jump
		cwtd   
		idiv   %si
		mov    %ax,0x000042(%ebx)

	_05d127_jump:
		mov    0x000050(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05d133_jump
		neg    %eax

	_05d133_jump:
		mov    %ax,0x000052(%ebx)

	_05d137_jump:
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05d143_jump
		neg    %eax

	_05d143_jump:
		cwtl   
		call   _055230_func
		sub    %ax,0x000052(%ebx)

	_05d14d_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d160_func:
		push   %ecx
		push   %esi
		mov    $0x00000f,%esi
		and    $_0000ff_case,%edx
		sub    %edx,%esi
		lea    (%esi,%esi,1),%edx
		mov    $0x000003,%esi
		mov    %dl,%cl
		mov    $0xffffffff,%edx
		shl    %cl,%esi
		shl    %cl,%ebx
		mov    (%eax),%ecx
		sub    %esi,%edx
		and    %edx,%ecx
		mov    %ecx,%esi
		mov    %ecx,(%eax)
		or     %ebx,%esi
		mov    %esi,(%eax)
		pop    %esi
		pop    %ecx
		ret    



_05d194_func:
		push   %esi
		push   %edi
		mov    %ecx,%esi
		mov    (%eax),%eax
		mov    $0x00000f,%ecx
		and    $_0000ff_case,%edx
		sub    %edx,%ecx
		lea    (%ecx,%ecx,1),%edx
		mov    $0x000003,%edi
		mov    %dl,%cl
		shl    %cl,%edi
		and    %edi,%eax
		sar    %cl,%eax
		mov    %eax,%edx
		and    $0x000002,%edx
		sar    %edx
		and    $0x000001,%eax
		mov    %edx,(%ebx)
		mov    %eax,(%esi)
		pop    %edi
		pop    %esi
		ret    

	_05d1c8_jump:
		push   %ebx
		push   %ecx
		xor    %ebx,%ebx
		mov    %dl,%cl
		mov    %dx,%bx
		and    $0x000007,%cl
		sar    $0x000003,%ebx
		mov    $0x000001,%dl
		movswl %bx,%ebx
		shl    %cl,%dl
		or     %dl,(%ebx,%eax,1)
		pop    %ecx
		pop    %ebx
		ret    

	_05d208_jump:
		push   %ebx
		push   %ecx
		xor    %ebx,%ebx
		mov    %dx,%bx
		sar    $0x000003,%ebx
		mov    %dl,%cl
		movswl %bx,%ebx
		and    $0x000007,%cl
		add    %eax,%ebx
		mov    $0x000001,%al
		shl    %cl,%al
		and    (%ebx),%al
		pop    %ecx
		pop    %ebx
		ret    



_05d230_func:
		add    $0x000080,%eax
		and    $0x000001,%ah
		cmp    $0x000100,%ax
		jge    _05d255_jump
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05d24b_jump
		neg    %eax

	_05d24b_jump:
		cwtl   
		mov    _096efc_data(,%eax,2),%ax
		ret    

	_05d255_jump:
		sub    $0x000180,%eax
		test   %ax,%ax
		jge    _05d262_jump
		neg    %eax

	_05d262_jump:
		cwtl   
		mov    _096efc_data(,%eax,2),%ax
		neg    %eax
		ret    



_05d270_func:
		and    $0x000001,%ah
		cmp    $0x000100,%ax
		jge    _05d290_jump
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05d286_jump
		neg    %eax

	_05d286_jump:
		cwtl   
		mov    _096efc_data(,%eax,2),%ax
		ret    

	_05d290_jump:
		sub    $0x000180,%eax
		test   %ax,%ax
		jge    _05d29d_jump
		neg    %eax

	_05d29d_jump:
		cwtl   
		mov    _096efc_data(,%eax,2),%ax
		neg    %eax
		ret    



_05d2ac_func:
		push   %ecx
		push   %esi
		push   %edi
		and    $0x000001,%ah
		cmp    $0x000100,%ax
		jge    _05d30a_jump
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05d2dc_jump
		neg    %eax
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096efc_data(,%esi,2),%cx
		mov    %cx,(%ebx)
		jmp    _05d2f8_jump

	_05d2dc_jump:
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096efc_data(,%esi,2),%cx
		mov    %ecx,%edi
		mov    %cx,(%ebx)
		neg    %edi
		mov    %di,(%ebx)

	_05d2f8_jump:
		movswl %ax,%ebx
		mov    _096efc_data(,%ebx,2),%ax
		mov    %ax,(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05d30a_jump:
		sub    $0x000180,%eax
		test   %ax,%ax
		jge    _05d330_jump
		neg    %eax
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096efc_data(,%esi,2),%cx
		mov    %cx,(%ebx)
		neg    %ecx
		jmp    _05d342_jump

	_05d330_jump:
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096efc_data(,%esi,2),%cx

	_05d342_jump:
		mov    %cx,(%ebx)
		movswl %ax,%ebx
		mov    _096efc_data(,%ebx,2),%ax
		mov    %eax,%esi
		mov    %ax,(%edx)
		neg    %esi
		mov    %si,(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05d37c_func:
		add    $0x000080,%eax
		xor    %ah,%ah
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05d390_jump
		neg    %eax

	_05d390_jump:
		cwtl   
		mov    _096efc_data(,%eax,2),%ax
		ret    



_05d39c_func:
		push   %ecx
		xor    %ah,%ah
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05d3ac_jump
		neg    %eax

	_05d3ac_jump:
		cwtl   
		mov    _096efc_data(,%eax,2),%cx
		mov    %cx,(%edx)
		mov    $0x000080,%edx
		sub    %eax,%edx
		mov    _096efc_data(,%edx,2),%ax
		mov    %ax,(%ebx)
		pop    %ecx
		ret    



_05d3d0_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x00008d,%ax
		jb     _05d628_jump
		jbe    _05d85a_jump
		cmp    $0x0000c4,%ax
		jb     _05d50e_jump
		jbe    _05d8a9_jump
		cmp    $0x0000ea,%ax
		jb     _05d494_jump
		jbe    _05d624_jump
		cmp    $0x0000f6,%ax
		jb     _05d455_jump
		jbe    _05d89d_jump
		cmp    $0x0000fb,%ax
		jb     _05d437_jump
		jbe    _05d89d_jump
		cmp    $0x0000fc,%ax
		jbe    _05d8a5_jump
		cmp    $0x0000fd,%ax
		je     _05d882_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d437_jump:
		cmp    $0x0000f8,%ax
		jb     _05d8a9_jump
		jbe    _05d624_jump
		cmp    $0x0000f9,%ax
		je     _05d87e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d455_jump:
		cmp    $0x0000ef,%ax
		jb     _05d476_jump
		jbe    _05d87e_jump
		cmp    $0x0000f4,%ax
		jb     _05d8a9_jump
		jbe    _05d8a9_jump
		jmp    _05d85a_jump

	_05d476_jump:
		cmp    $0x0000ec,%ax
		jb     _05d8a9_jump
		jbe    _05d85a_jump
		cmp    $0x0000ee,%ax
		je     _05d85a_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d494_jump:
		cmp    $0x0000cb,%ax
		jb     _05d4e6_jump
		jbe    _05d87e_jump
		cmp    $0x0000d5,%ax
		jb     _05d4ce_jump
		jbe    _05d85a_jump
		cmp    $0x0000dc,%ax
		jb     _05d8a9_jump
		cmp    $0x0000dd,%ax
		jbe    _05d624_jump
		cmp    $0x0000e0,%ax
		je     _05d624_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d4ce_jump:
		cmp    $0x0000cc,%ax
		jbe    _05d85a_jump
		cmp    $0x0000d3,%ax
		je     _05d87e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d4e6_jump:
		cmp    $0x0000c6,%ax
		jb     _05d85e_jump
		jbe    _05d87e_jump
		cmp    $0x0000c7,%ax
		jbe    _05d85a_jump
		cmp    $0x0000c9,%ax
		jbe    _05d87e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d50e_jump:
		cmp    $0x0000a1,%ax
		jb     _05d5a8_jump
		jbe    _05d624_jump
		cmp    $0x0000b4,%ax
		jb     _05d570_jump
		jbe    _05d87e_jump
		cmp    $0x0000bb,%ax
		jb     _05d558_jump
		jbe    _05d87e_jump
		cmp    $0x0000be,%ax
		jb     _05d8a9_jump
		jbe    _05d87e_jump
		cmp    $0x0000c0,%ax
		jb     _05d8a9_jump
		cmp    $0x0000c2,%ax
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d558_jump:
		cmp    $0x0000b5,%ax
		jbe    _05d85a_jump
		cmp    $0x0000b7,%ax
		je     _05d87e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d570_jump:
		cmp    $0x0000a8,%ax
		jb     _05d59a_jump
		jbe    _05d624_jump
		cmp    $0x0000aa,%ax
		jb     _05d8a9_jump
		jbe    _05d624_jump
		cmp    $0x0000ad,%ax
		je     _05d8a1_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d59a_jump:
		cmp    $0x0000a4,%ax
		je     _05d85a_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d5a8_jump:
		cmp    $0x000094,%ax
		jb     _05d5fa_jump
		jbe    _05d8a1_jump
		cmp    $0x00009a,%ax
		jb     _05d5e2_jump
		cmp    $0x00009b,%ax
		jbe    _05d87e_jump
		cmp    $0x00009d,%ax
		jb     _05d8a9_jump
		jbe    _05d85e_jump
		cmp    $0x00009e,%ax
		je     _05d85a_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d5e2_jump:
		cmp    $0x000095,%ax
		jbe    _05d85e_jump
		cmp    $0x000096,%ax
		je     _05d624_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d5fa_jump:
		cmp    $0x00008f,%ax
		jb     _05d8a1_jump
		jbe    _05d624_jump
		cmp    $0x000092,%ax
		jb     _05d8a9_jump
		jbe    _05d624_jump
		cmpb   $0x000000,0x000076(%edx)
		jne    _05d85a_jump

	_05d624_jump:
		mov    $0x000002,%al
		pop    %edx
		ret    

	_05d628_jump:
		cmp    $0x00004b,%ax
		jb     _05d74e_jump
		jbe    _05d624_jump
		cmp    $0x000062,%ax
		jb     _05d6ce_jump
		jbe    _05d85a_jump
		cmp    $0x000079,%ax
		jb     _05d690_jump
		jbe    _05d624_jump
		cmp    $0x000087,%ax
		jb     _05d672_jump
		jbe    _05d624_jump
		cmp    $0x000089,%ax
		jb     _05d8a9_jump
		jbe    _05d8a1_jump
		cmp    $0x00008a,%ax
		je     _05d87e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d672_jump:
		cmp    $0x00007b,%ax
		jb     _05d8a9_jump
		jbe    _05d862_jump
		cmp    $0x000085,%ax
		je     _05d87e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d690_jump:
		cmp    $0x00006e,%ax
		jb     _05d6b0_jump
		jbe    _05d624_jump
		cmp    $0x000070,%ax
		jbe    _05d89d_jump
		cmp    $0x000077,%ax
		je     _05d87e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d6b0_jump:
		cmp    $0x000066,%ax
		jb     _05d8a9_jump
		jbe    _05d624_jump
		cmp    $0x00006d,%ax
		je     _05d89d_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d6ce_jump:
		cmp    $0x000056,%ax
		jb     _05d712_jump
		jbe    _05d87e_jump
		cmp    $0x00005f,%ax
		jb     _05d6f4_jump
		jbe    _05d8a1_jump
		cmp    $0x000060,%ax
		jbe    _05d89d_jump
		mov    $0x000003,%al
		pop    %edx
		ret    

	_05d6f4_jump:
		cmp    $0x000058,%ax
		jb     _05d8a9_jump
		jbe    _05d8a5_jump
		cmp    $0x00005a,%ax
		jb     _05d8a9_jump
		mov    $0x000002,%al
		pop    %edx
		ret    

	_05d712_jump:
		cmp    $0x00004e,%ax
		jb     _05d740_jump
		cmp    $0x00004f,%ax
		jbe    _05d624_jump
		cmp    $0x000052,%ax
		jb     _05d8a9_jump
		jbe    _05d8a1_jump
		cmp    $0x000053,%ax
		je     _05d624_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d740_jump:
		cmp    $0x00004d,%ax
		je     _05d87e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d74e_jump:
		cmp    $0x000029,%ax
		jb     _05d7e8_jump
		jbe    _05d624_jump
		cmp    $0x000030,%ax
		jb     _05d7b6_jump
		jbe    _05d624_jump
		cmp    $0x00003a,%ax
		jb     _05d798_jump
		cmp    $0x00003b,%ax
		jbe    _05d87e_jump
		cmp    $0x000042,%ax
		jb     _05d8a9_jump
		jbe    _05d87e_jump
		cmp    $0x000048,%ax
		jb     _05d8a9_jump
		mov    $0x000003,%al
		pop    %edx
		ret    

	_05d798_jump:
		cmp    $0x000037,%ax
		jb     _05d8a9_jump
		jbe    _05d8a1_jump
		cmp    $0x000039,%ax
		je     _05d624_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d7b6_jump:
		cmp    $0x00002c,%ax
		jb     _05d7da_jump
		jbe    _05d87e_jump
		cmp    $0x00002d,%ax
		jbe    _05d624_jump
		cmp    $0x00002e,%ax
		je     _05d87e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d7da_jump:
		cmp    $0x00002a,%ax
		je     _05d8a5_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d7e8_jump:
		cmp    $0x000013,%ax
		jb     _05d832_jump
		jbe    _05d624_jump
		cmp    $0x00001c,%ax
		jb     _05d81a_jump
		jbe    _05d87e_jump
		cmp    $0x00001e,%ax
		jb     _05d8a9_jump
		jbe    _05d85a_jump
		cmp    $0x00001f,%ax
		je     _05d8a1_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d81a_jump:
		cmp    $0x000014,%ax
		jbe    _05d89d_jump
		cmp    $0x000015,%ax
		je     _05d624_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d832_jump:
		cmp    $0x000004,%ax
		jb     _05d850_jump
		jbe    _05d8a5_jump
		cmp    $0x000007,%ax
		jb     _05d8a9_jump
		jbe    _05d89d_jump
		cmp    $0x00000b,%ax
		je     _05d624_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d850_jump:
		cmp    $0x000002,%ax
		je     _05d8a1_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05d85a_jump:
		xor    %al,%al
		pop    %edx
		ret    

	_05d85e_jump:
		mov    $0x000001,%al
		pop    %edx
		ret    

	_05d862_jump:
		cmpw   $0x000001,_0cf282_data
		jne    _05d624_jump
		cmpw   $0x00000e,_0cf270_data
		jne    _05d624_jump

	_05d87e_jump:
		mov    $0x000003,%al
		pop    %edx
		ret    

	_05d882_jump:
		mov    _0cf1fc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05d896_jump
		mov    $0x000004,%eax
		pop    %edx
		ret    

	_05d896_jump:
		mov    $0x000007,%eax
		pop    %edx
		ret    

	_05d89d_jump:
		mov    $0x000005,%al
		pop    %edx
		ret    

	_05d8a1_jump:
		mov    $0x000006,%al
		pop    %edx
		ret    

	_05d8a5_jump:
		mov    $0x000007,%al
		pop    %edx
		ret    

	_05d8a9_jump:
		mov    $0x000004,%al
		pop    %edx
		ret    



_05d8b0_func:
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000001,_092534_data(,%eax,4)
		jne    _05d8d4_jump
		test   %ax,%ax
		je     _05d8ce_jump
		cmp    $0x000009,%ax
		jne    _05d8e2_jump

	_05d8ce_jump:
		cmpl   $0x000000,0x000028(%edx)
		jge    _05d8e2_jump

	_05d8d4_jump:
		movl   $0xffff8300,0x000028(%edx)
		movl   $0xffff8300,0x00002c(%edx)

	_05d8e2_jump:
		movw   $0x000000,0x00005a(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    0x00006d(%edx),%al
		mov    %al,0x00006f(%edx)
		mov    0x00006c(%edx),%al
		mov    %al,0x00006e(%edx)
		mov    0x000076(%edx),%al
		mov    %al,0x000077(%edx)
		mov    0x000060(%edx),%ax
		movl   $0x000001,0x000030(%edx)
		cmp    $0x000062,%ax
		jb     _05da5d_jump
		jbe    _05db83_jump
		cmp    $0x0000ae,%ax
		jb     _05d9bd_jump
		jbe    _05dbc3_jump
		cmp    $0x0000d5,%ax
		jb     _05d975_jump
		jbe    _05db83_jump
		cmp    $0x0000e1,%ax
		jb     _05d966_jump
		jbe    _05dbc3_jump
		cmp    $0x0000e2,%ax
		jbe    _05dbcf_jump
		cmp    $0x0000e3,%ax
		je     _05db99_jump
		jmp    _05dc01_jump

	_05d966_jump:
		cmp    $0x0000d9,%ax
		je     _05db93_jump
		jmp    _05dc01_jump

	_05d975_jump:
		cmp    $0x0000b8,%ax
		jb     _05d9a7_jump
		jbe    _05dbcf_jump
		cmp    $0x0000bb,%ax
		jb     _05dc01_jump
		jbe    _05dbc3_jump
		cmp    $0x0000d4,%ax
		je     _05dbc3_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05d9a7_jump:
		cmp    $0x0000b7,%ax
		je     _05db9f_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05d9bd_jump:
		cmp    $0x00007a,%ax
		jb     _05da15_jump
		jbe    _05dbb7_jump
		cmp    $0x000099,%ax
		jb     _05d9ff_jump
		jbe    _05db8d_jump
		cmp    $0x0000a8,%ax
		jb     _05dc01_jump
		cmp    $0x0000a9,%ax
		jbe    _05dbe7_jump
		cmp    $0x0000ac,%ax
		je     _05dbab_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05d9ff_jump:
		cmp    $0x000096,%ax
		je     _05db93_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05da15_jump:
		cmp    $0x000071,%ax
		jb     _05da47_jump
		jbe    _05dbf3_jump
		cmp    $0x000074,%ax
		jb     _05dc01_jump
		jbe    _05db8d_jump
		cmp    $0x000078,%ax
		je     _05dbb7_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05da47_jump:
		cmp    $0x000064,%ax
		je     _05dbab_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05da5d_jump:
		cmp    $0x000032,%ax
		jb     _05db03_jump
		jbe    _05db99_jump
		cmp    $0x00003d,%ax
		jb     _05dac1_jump
		jbe    _05dbc3_jump
		cmp    $0x000046,%ax
		jb     _05daab_jump
		jbe    _05db93_jump
		cmp    $0x000048,%ax
		jb     _05dc01_jump
		jbe    _05dbb7_jump
		cmp    $0x000051,%ax
		je     _05dbe7_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05daab_jump:
		cmp    $0x000041,%ax
		je     _05db99_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05dac1_jump:
		cmp    $0x000038,%ax
		jb     _05daed_jump
		jbe    _05dbab_jump
		cmp    $0x000039,%ax
		jbe    _05dbdb_jump
		cmp    $0x00003c,%ax
		je     _05dbab_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05daed_jump:
		cmp    $0x000037,%ax
		je     _05dbb7_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05db03_jump:
		cmp    $0x000014,%ax
		jb     _05db57_jump
		jbe    _05db9f_jump
		cmp    $0x000023,%ax
		jb     _05db41_jump
		jbe    _05dbb7_jump
		cmp    $0x000028,%ax
		jb     _05dc01_jump
		jbe    _05dbb7_jump
		cmp    $0x00002b,%ax
		je     _05dbb7_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05db41_jump:
		cmp    $0x000020,%ax
		je     _05dbc3_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05db57_jump:
		cmp    $0x00000c,%ax
		jb     _05db71_jump
		jbe    _05db9f_jump
		cmp    $0x00000e,%ax
		je     _05db9f_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05db71_jump:
		cmp    $0x000005,%ax
		je     _05db99_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05db83_jump:
		call   _04ff40_func
		jmp    _05dc05_jump

	_05db8d_jump:
		movb   $0x0000c8,0x00007a(%edx)
		jmp    _05dc05_jump

	_05db93_jump:
		movb   $0x0000a0,0x00007a(%edx)
		jmp    _05dc05_jump

	_05db99_jump:
		movb   $0x00003c,0x00007a(%edx)
		jmp    _05dc05_jump

	_05db9f_jump:
		movb   $0x0000b4,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05dbab_jump:
		movb   $0x0000dc,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05dbb7_jump:
		movb   $0x000064,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05dbc3_jump:
		movb   $0x000096,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05dbcf_jump:
		movb   $0x000032,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05dbdb_jump:
		movb   $0x0000fa,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05dbe7_jump:
		movb   $0x000000,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05dbf3_jump:
		movw   $0x000000,0x000050(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05dc01_jump:
		movb   $0x000028,0x00007a(%edx)

	_05dc05_jump:
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

_05dc10_switch:
		.long   _05e240_case
		.long   _05e24f_case
		.long   _05e25e_case
		.long   _05e26d_case
		.long   _05e27c_case
		.long   _05e291_case
		.long   _05e2a0_case




_05dc2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		movw   $0x000000,0x000048(%eax)
		movl   $0x000000,0x000024(%eax)
		call   _05d3d0_func
		mov    %al,0x00007e(%ecx)
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		mov    _0933a6_data(,%eax,2),%ax
		mov    0x000060(%ecx),%dx
		mov    %ax,0x00005c(%ecx)
		cmp    $0x0000a3,%dx
		je     _05dc72_jump
		mov    0x00006f(%ecx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%ecx),%al
		mov    %al,0x00006c(%ecx)

	_05dc72_jump:
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00003c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		movw   $0x000000,0x000040(%ecx)
		add    %eax,%edx
		movw   $0x000000,0x000042(%ecx)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000002(%edx,%eax,8),%al
		movb   $0x000000,0x000073(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000000,0x000072(%ecx)
		movw   $0x00ffff,0x000056(%ecx)
		movw   $0x00ffff,0x00004a(%ecx)
		movb   $0x000000,0x00007b(%ecx)
		mov    %al,0x00006a(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x00ffff,0x000046(%ecx)
		and    $0x0000f7,%ah
		mov    0x000010(%ecx),%ebx
		mov    %ah,0x000081(%ecx)
		lea    0x000081(%ecx),%eax
		test   %ebx,%ebx
		setne  %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		mov    %dh,(%eax)
		shl    $0x000004,%dl
		mov    %dh,%bl
		or     %dl,%bl
		xor    %edx,%edx
		mov    %bl,(%eax)
		mov    $0x000005,%ebx
		lea    0x000062(%ecx),%eax
		call   _07fcc0_func
		mov    %ecx,%eax
		call   _0603ec_func
		movw   $0x000000,0x000058(%ecx)
		movb   $_0000ff_case,0x00007c(%ecx)
		movl   $0x000001,0x000030(%ecx)
		mov    0x000077(%ecx),%al
		movb   $0x000000,0x00007f(%ecx)
		mov    %al,0x000076(%ecx)
		mov    0x000082(%ecx),%al
		movb   $0x000000,0x00007d(%ecx)
		and    $0x0000fe,%al
		mov    0x000081(%ecx),%bh
		mov    %al,0x000082(%ecx)
		and    $0x00003f,%bh
		mov    0x000060(%ecx),%ax
		mov    %bh,0x000081(%ecx)
		cmp    $0x0000af,%ax
		jb     _05dec4_jump
		cmp    $0x0000af,%ax
		jbe    _05e109_jump
		cmp    $0x0000df,%ax
		jb     _05de15_jump
		jbe    _05e451_jump
		cmp    $0x0000ed,%ax
		jb     _05ddd2_jump
		jbe    _05e383_jump
		cmp    $0x0000f1,%ax
		jb     _05ddbd_jump
		jbe    _05e3a3_jump
		cmp    $0x0000fa,%ax
		jb     _05ddae_jump
		jbe    _05e109_jump
		cmp    $0x0000fc,%ax
		jbe    _05e080_jump
		jmp    _05e451_jump

	_05ddae_jump:
		cmp    $0x0000f3,%ax
		je     _05e383_jump
		jmp    _05e451_jump

	_05ddbd_jump:
		cmp    $0x0000ef,%ax
		jb     _05e451_jump
		jbe    _05e2cd_jump
		jmp    _05e0d5_jump

	_05ddd2_jump:
		cmp    $0x0000e4,%ax
		jb     _05ddf9_jump
		jbe    _05e040_jump
		cmp    $0x0000e6,%ax
		jbe    _05e109_jump
		cmp    $0x0000eb,%ax
		je     _05e0fc_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ddf9_jump:
		cmp    $0x0000e2,%ax
		jb     _05e451_jump
		jbe    _05e3e1_jump
		movb   $0x000002,_0cf460_data
		jmp    _05e1af_jump

	_05de15_jump:
		cmp    $0x0000bf,%ax
		jb     _05de7c_jump
		jbe    _05e0fc_jump
		cmp    $0x0000d4,%ax
		jb     _05de5b_jump
		jbe    _05e3ef_jump
		cmp    $0x0000d9,%ax
		jb     _05de4a_jump
		jbe    _05e3fc_jump
		cmp    $0x0000da,%ax
		je     _05e095_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05de4a_jump:
		cmp    $0x0000d5,%ax
		je     _05e14d_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05de5b_jump:
		cmp    $0x0000c5,%ax
		jb     _05e451_jump
		jbe    _05e3c4_jump
		cmp    $0x0000ca,%ax
		je     _05e41d_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05de7c_jump:
		cmp    $0x0000b4,%ax
		jb     _05dea9_jump
		jbe    _05e032_jump
		cmp    $0x0000b7,%ax
		jb     _05e451_jump
		jbe    _05e032_jump
		cmp    $0x0000b8,%ax
		je     _05e3e1_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dea9_jump:
		cmp    $0x0000b0,%ax
		jbe    _05e0d5_jump
		cmp    $0x0000b2,%ax
		je     _05e3a3_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dec4_jump:
		cmp    $0x000048,%ax
		jb     _05df97_jump
		jbe    _05e2c2_jump
		cmp    $0x00007b,%ax
		jb     _05df3f_jump
		jbe    _05e226_jump
		cmp    $0x000096,%ax
		jb     _05df1e_jump
		jbe    _05e3b0_jump
		cmp    $0x0000a8,%ax
		jb     _05df0d_jump
		cmp    $0x0000a9,%ax
		jbe    _05e3a3_jump
		cmp    $0x0000aa,%ax
		je     _05e3c4_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05df0d_jump:
		cmp    $0x000098,%ax
		je     _05e383_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05df1e_jump:
		cmp    $0x000090,%ax
		jb     _05e451_jump
		jbe    _05e219_jump
		cmp    $0x000091,%ax
		je     _05e2af_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05df3f_jump:
		cmp    $0x00004d,%ax
		jb     _05df76_jump
		jbe    _05e2cd_jump
		cmp    $0x000062,%ax
		jb     _05e451_jump
		jbe    _05e147_jump
		cmp    $0x000074,%ax
		jb     _05e451_jump
		cmp    $0x000076,%ax
		jbe    _05e39f_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05df76_jump:
		cmp    $0x00004a,%ax
		jb     _05e451_jump
		jbe    _05e032_jump
		cmp    $0x00004b,%ax
		je     _05e3c4_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05df97_jump:
		cmp    $0x00001c,%ax
		jb     _05dfeb_jump
		jbe    _05e2f0_jump
		cmp    $0x000032,%ax
		jb     _05dfd0_jump
		jbe    _05e1a7_jump
		cmp    $0x000034,%ax
		jb     _05e131_jump
		jbe    _05e13c_jump
		cmp    $0x000035,%ax
		je     _05e131_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dfd0_jump:
		cmp    $0x00001d,%ax
		jbe    _05e383_jump
		cmp    $0x000022,%ax
		je     _05e383_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dfeb_jump:
		cmp    $0x000015,%ax
		jb     _05e018_jump
		jbe    _05e391_jump
		cmp    $0x000019,%ax
		jb     _05e451_jump
		jbe    _05e35f_jump
		cmp    $0x00001a,%ax
		je     _05e314_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e018_jump:
		test   %ax,%ax
		jbe    _05e200_jump
		cmp    $0x000007,%ax
		je     _05e391_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e032_jump:
		mov    %ecx,%eax
		call   _075258_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e040_jump:
		testb  $0x000004,_0cf229_data
		je     _05e451_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    %bx,_0cf184_data
		mov    $0x000002,%ebx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		movb   $0x000002,0x00006e(%ecx)
		call   _060460_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e080_jump:
		movw   $0x00fff1,0x00003c(%ecx)
		mov    0x00003c(%ecx),%ax
		cwtl   
		mov    %eax,0x000028(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e095_jump:
		mov    0x000028(%ecx),%ax
		xor    %edx,%edx
		xor    %esi,%esi
		mov    %ax,_0cf252_data
		mov    0x000069(%ecx),%dl
		mov    $_0ce044_data,%eax
		mov    $0x004000,%ecx
		call   _0188b0_func
		sub    %edx,%eax
		mov    %ecx,_0cdfb0_data
		add    $0x000010,%eax
		mov    %esi,_0cdfb8_data
		mov    %ax,_0cf23c_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e0d5_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		dec    %eax
		cwtl   
		call   _06b8d0_func
		mov    %al,0x00006b(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e0fc_jump:
		mov    0x000076(%ecx),%al
		mov    %al,0x00006b(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e109_jump:
		mov    0x000076(%ecx),%al
		mov    0x000081(%ecx),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,0x000081(%ecx)
		or     %al,%bl
		mov    %bl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e131_jump:
		movb   $0x000005,0x000072(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e13c_jump:
		movb   $0x00000a,0x000072(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e147_jump:
		movw   $0x0000d5,0x000060(%ecx)

	_05e14d_jump:
		mov    $0x000001,%edx
		mov    $0x004000,%edi
		mov    %ecx,%eax
		mov    $_0000ff_case,%bh
		call   _05087c_func
		mov    %ecx,%eax
		xor    %ebp,%ebp
		call   _018a6c_func
		mov    %edi,_0cdfb0_data
		mov    %ebp,_0cdfb8_data
		mov    %bh,_0cf45f_data
		mov    %bh,_0cf45b_data
		xor    %al,%al
		movb   $0x0000b4,0x00007f(%ecx)
		mov    %al,_0cf488_data
		mov    %al,_0cf45a_data
		mov    %al,_0cf461_data
		mov    %al,_0cf45e_data
		mov    %al,_0cf460_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e1a7_jump:
		xor    %dh,%dh
		mov    %dh,_0cf460_data

	_05e1af_jump:
		mov    %ecx,%eax
		movw   $_0000ff_case,0x00005a(%ecx)
		call   _018a6c_func
		xor    %edx,%edx
		xor    %bl,%bl
		mov    $0x004000,%eax
		mov    %edx,_0cdfb8_data
		mov    %bl,_0cf488_data
		movb   $0x000064,0x00007f(%ecx)
		mov    $_0000ff_case,%cl
		xor    %bh,%bh
		mov    %eax,_0cdfb0_data
		mov    %bh,_0cf45a_data
		mov    %cl,_0cf45b_data
		xor    %al,%al
		xor    %ch,%ch
		mov    %al,_0cf45e_data
		mov    %ch,_0cf461_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e200_jump:
		mov    0x000081(%ecx),%al
		movb   $0x00001e,0x000074(%ecx)
		and    $0x0000df,%al
		mov    %al,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e219_jump:
		movw   $0x000000,0x000056(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e226_jump:
		mov    0x000075(%ecx),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _05e451_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_05dc10_switch(,%eax,4)

	_05e240_case:
		movb   $0x000002,0x00007d(%ecx)
		movb   $0x000000,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e24f_case:
		movb   $0x000008,0x00007d(%ecx)
		movb   $0x00003c,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e25e_case:
		movb   $0x000018,0x00007d(%ecx)
		movb   $0x0000aa,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e26d_case:
		movb   $0x00000a,0x00007d(%ecx)
		movb   $0x000064,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e27c_case:
		movw   $0x000000,0x00004a(%ecx)
		movb   $0x000001,0x00007d(%ecx)
		movb   $0x000000,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e291_case:
		movb   $0x000004,0x00007d(%ecx)
		movb   $0x00003c,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e2a0_case:
		movb   $0x000024,0x00007d(%ecx)
		movb   $0x000078,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e2af_jump:
		movw   $0x000028,0x000050(%ecx)
		movw   $0x000028,0x000056(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e2c2_jump:
		movb   $0x000001,0x00007d(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e2cd_jump:
		mov    0x00006e(%ecx),%ah
		xor    %edx,%edx
		cmp    $0x00000e,%ah
		sete   %dl
		mov    %ecx,%eax
		call   _03da60_func
		movw   $0x000000,0x000056(%ecx)
		movb   $0x000050,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e2f0_jump:
		movw   $0x000064,0x00004a(%ecx)
		mov    0x000081(%ecx),%dl
		mov    0x00004a(%ecx),%ax
		or     $0x000004,%dl
		mov    %ax,0x000056(%ecx)
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e314_jump:
		cmpw   $0x000001,_0cf282_data
		je     _05e337_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d2f4_func
		sub    $0x000002,%eax
		mov    %ax,0x000050(%ecx)
		mov    %ax,0x000056(%ecx)
		jmp    _05e343_jump

	_05e337_jump:
		movw   $0x000028,0x000050(%ecx)
		movw   $0x000014,0x000056(%ecx)

	_05e343_jump:
		mov    0x000081(%ecx),%dh
		movw   $0x000014,0x000052(%ecx)
		or     $0x000024,%dh
		mov    %dh,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e35f_jump:
		movw   $0x00000f,0x00004a(%ecx)
		mov    0x000081(%ecx),%bl
		mov    0x00004a(%ecx),%ax
		or     $0x000004,%bl
		mov    %ax,0x000056(%ecx)
		mov    %bl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e383_jump:
		movw   $0x000001,0x00004a(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000056(%ecx)

	_05e391_jump:
		orb    $0x000004,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e39f_jump:
		movb   $0x000000,0x00007d(%ecx)

	_05e3a3_jump:
		movw   $0x000000,0x000052(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e3b0_jump:
		movb   $0x0000a0,0x00007a(%ecx)
		xor    %ecx,%ecx
		mov    %cx,_0cf20e_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e3c4_jump:
		mov    0x000081(%ecx),%dl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e3e1_jump:
		orb    $0x000008,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e3ef_jump:
		movw   $0x000000,0x000050(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e3fc_jump:
		mov    0x00000c(%ecx),%eax
		mov    0x000004(%eax),%eax
		andb   $0x0000ef,0x000007(%eax)
		mov    0x00000c(%ecx),%eax
		mov    0x000004(%eax),%eax
		andb   $0x0000ef,0x000017(%eax)
		movw   $0x000000,0x00004a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e41d_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _05e431_jump
		cmpb   $0x000039,0x00006c(%ecx)
		jne    _05e431_jump
		mov    %ecx,_0ce0cc_data
		jmp    _05e437_jump

	_05e431_jump:
		mov    %ecx,_0ce0c8_data

	_05e437_jump:
		movb   $0x000003,0x00007e(%ecx)
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)

	_05e451_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e458_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    _0cc7a4_data,%cx
		mov    %dx,_0cc79c_data
		mov    %dx,_0cc7ac_data
		test   %cx,%cx
		jle    _05e4a1_jump
		xor    %ecx,%ecx

	_05e47d_jump:
		mov    _0cc798_data,%ebx
		movswl %dx,%eax
		mov    %cx,(%ebx,%eax,2)
		mov    _0cc7a8_data,%ebx
		mov    _0cc7a4_data,%si
		inc    %edx
		mov    %cx,(%ebx,%eax,2)
		cmp    %si,%dx
		jl     _05e47d_jump

	_05e4a1_jump:
		mov    _0cc7a0_data,%ebx
		mov    _0cc7a4_data,%ax
		xor    %edx,%edx
		mov    %eax,(%esp)
		test   %ax,%ax
		jle    _05e539_jump

	_05e4bb_jump:
		cmpw   $0x000000,_0cf1fc_data
		jne    _05e4e4_jump
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000002,_092535_data(,%eax,4)
		je     _05e4e4_jump
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		call   _073b58_func
		test   %al,%al
		jne    _05e52a_jump

	_05e4e4_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000001,_092534_data(,%eax,4)
		je     _05e510_jump
		mov    _0cc79c_data,%ax
		movswl %ax,%ecx
		inc    %eax
		mov    _0cc798_data,%esi
		mov    %ax,_0cc79c_data
		mov    %dx,(%esi,%ecx,2)
		jmp    _05e52a_jump

	_05e510_jump:
		mov    _0cc7ac_data,%ax
		mov    _0cc7a8_data,%ecx
		movswl %ax,%esi
		inc    %eax
		mov    %dx,(%ecx,%esi,2)
		mov    %ax,_0cc7ac_data

	_05e52a_jump:
		mov    (%esp),%eax
		inc    %edx
		add    $0x000084,%ebx
		cmp    %ax,%dx
		jl     _05e4bb_jump

	_05e539_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e544_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %al,0x00000c(%esp)
		mov    $0xffffffff,%edx
		xor    %ah,%ah
		xor    %esi,%esi
		mov    %dx,(%esp)
		mov    %edx,%ebx
		mov    %dx,0x000008(%esp)
		mov    %ah,_0cf44b_data
		mov    %ah,_0cf46c_data
		mov    %ah,_0cf488_data
		mov    %dx,_0cf28c_data
		mov    %si,_0cf26e_data
		mov    %dx,_0cf28a_data
		mov    %dx,_0cf27a_data
		mov    %dx,_0cf222_data
		mov    %dx,_0cf23a_data
		mov    %dx,_0cf27e_data
		mov    %dx,_0cf274_data
		mov    %dx,_0cf26c_data
		mov    %dx,_0cf1fe_data
		mov    %dx,_0cf202_data
		mov    %dx,_0cf2b2_data
		mov    %dx,_0cf284_data
		mov    %dx,_0cf2c0_data
		mov    %dx,_0cf20c_data
		mov    %dx,_0cf2c4_data
		mov    %dx,_0cf2ce_data
		mov    %dx,_0cf2bc_data
		mov    %dx,_0cf2cc_data
		mov    %dx,_0cf2c2_data
		mov    _0cc7a0_data,%eax
		xor    %dl,%bl
		mov    %edx,%esi
		mov    %bl,_0cf447_data
		xor    %edx,%esi
		mov    _0cc7a4_data,%dx
		mov    %eax,%ecx
		mov    %edx,0x000004(%esp)
		test   %dx,%dx
		jle    _05f45e_jump
		lea    0x000081(%eax),%edi

	_05e630_jump:
		mov    0x00000c(%esp),%al
		mov    %si,0x000034(%ecx)
		test   %al,%al
		je     _05e643_jump
		mov    %ecx,%eax
		call   _05d8b0_func

	_05e643_jump:
		mov    0x000060(%ecx),%bx
		movw   $0x000000,0x00005e(%ecx)
		cmp    $0x0000a3,%bx
		jne    _05e660_jump
		mov    0x00006f(%ecx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%ecx),%al
		mov    %al,0x00006c(%ecx)

	_05e660_jump:
		mov    %ecx,%eax
		call   _05dc2c_func
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000001,_092534_data(,%eax,4)
		je     _05e696_jump
		movl   $0xffff8300,0x000028(%ecx)
		mov    0x000081(%ecx),%bl
		movl   $0xffff8300,0x00002c(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _05e69d_jump

	_05e696_jump:
		orb    $0x000004,0x000081(%ecx)

	_05e69d_jump:
		mov    0x000060(%ecx),%ax
		cmp    $0x000077,%ax
		jb     _05e929_jump
		jbe    _05f214_jump
		cmp    $0x0000c4,%ax
		jb     _05e7ef_jump
		cmp    $0x0000c5,%ax
		jbe    _05f214_jump
		cmp    $0x0000dc,%ax
		jb     _05e76f_jump
		jbe    _05ecd5_jump
		cmp    $0x0000ee,%ax
		jb     _05e72b_jump
		jbe    _05f1fd_jump
		cmp    $0x0000f6,%ax
		jb     _05e70c_jump
		jbe    _05ebff_jump
		cmp    $0x0000f9,%ax
		jb     _05f3ba_jump
		jbe    _05eb8b_jump
		cmp    $0x000101,%ax
		je     _05ebdf_jump
		jmp    _05f3ba_jump

	_05e70c_jump:
		cmp    $0x0000f2,%ax
		jb     _05f3ba_jump
		jbe    _05ed67_jump
		cmp    $0x0000f4,%ax
		je     _05f214_jump
		jmp    _05f3ba_jump

	_05e72b_jump:
		cmp    $0x0000e7,%ax
		jb     _05e750_jump
		jbe    _05ec63_jump
		cmp    $0x0000e8,%ax
		jbe    _05ec96_jump
		cmp    $0x0000e9,%ax
		je     _05f214_jump
		jmp    _05f3ba_jump

	_05e750_jump:
		cmp    $0x0000df,%ax
		jb     _05f3ba_jump
		jbe    _05ec0e_jump
		cmp    $0x0000e0,%ax
		je     _05f1fd_jump
		jmp    _05f3ba_jump

	_05e76f_jump:
		cmp    $0x0000cd,%ax
		jb     _05e7bf_jump
		jbe    _05f171_jump
		cmp    $0x0000d7,%ax
		jb     _05e79c_jump
		jbe    _05f214_jump
		cmp    $0x0000da,%ax
		jb     _05f3ba_jump
		jbe    _05ec39_jump
		jmp    _05ece7_jump

	_05e79c_jump:
		cmp    $0x0000ce,%ax
		jbe    _05f214_jump
		cmp    $0x0000d1,%ax
		jb     _05f3ba_jump
		cmp    $0x0000d2,%ax
		jbe    _05f214_jump
		jmp    _05f3ba_jump

	_05e7bf_jump:
		cmp    $0x0000c8,%ax
		jb     _05e7e0_jump
		jbe    _05f2f3_jump
		cmp    $0x0000cb,%ax
		jb     _05f3ba_jump
		jbe    _05f1fd_jump
		jmp    _05f240_jump

	_05e7e0_jump:
		cmp    $0x0000c6,%ax
		je     _05f2f3_jump
		jmp    _05f3ba_jump

	_05e7ef_jump:
		cmp    $0x000093,%ax
		jb     _05e899_jump
		jbe    _05eff8_jump
		cmp    $0x0000ad,%ax
		jb     _05e85f_jump
		jbe    _05f367_jump
		cmp    $0x0000bb,%ax
		jb     _05e840_jump
		jbe    _05f380_jump
		cmp    $0x0000be,%ax
		jb     _05f3ba_jump
		jbe    _05f271_jump
		cmp    $0x0000c0,%ax
		jb     _05f3ba_jump
		cmp    $0x0000c2,%ax
		jbe    _05f214_jump
		jmp    _05f3ba_jump

	_05e840_jump:
		cmp    $0x0000b3,%ax
		jb     _05f3ba_jump
		jbe    _05ed67_jump
		cmp    $0x0000ba,%ax
		je     _05f214_jump
		jmp    _05f3ba_jump

	_05e85f_jump:
		cmp    $0x000099,%ax
		jb     _05e88a_jump
		jbe    _05efec_jump
		cmp    $0x00009d,%ax
		jb     _05f3ba_jump
		jbe    _05ed89_jump
		cmp    $0x0000a5,%ax
		je     _05f122_jump
		jmp    _05f3ba_jump

	_05e88a_jump:
		cmp    $0x000094,%ax
		je     _05f318_jump
		jmp    _05f3ba_jump

	_05e899_jump:
		cmp    $0x000088,%ax
		jb     _05e8e5_jump
		jbe    _05f072_jump
		cmp    $0x00008f,%ax
		jb     _05e8c6_jump
		jbe    _05f214_jump
		cmp    $0x000091,%ax
		jb     _05f3ba_jump
		jbe    _05f1ec_jump
		jmp    _05f214_jump

	_05e8c6_jump:
		cmp    $0x00008b,%ax
		jb     _05f3ba_jump
		jbe    _05f214_jump
		cmp    $0x00008e,%ax
		je     _05f318_jump
		jmp    _05f3ba_jump

	_05e8e5_jump:
		cmp    $0x000082,%ax
		jb     _05e910_jump
		jbe    _05f214_jump
		cmp    $0x000085,%ax
		jb     _05f3ba_jump
		jbe    _05eba4_jump
		cmp    $0x000087,%ax
		je     _05f214_jump
		jmp    _05f3ba_jump

	_05e910_jump:
		cmp    $0x000079,%ax
		jb     _05f3ba_jump
		cmp    $0x00007a,%ax
		jbe    _05f214_jump
		jmp    _05f3ba_jump

	_05e929_jump:
		cmp    $0x00003b,%ax
		jb     _05ea5f_jump
		jbe    _05f214_jump
		cmp    $0x00005a,%ax
		jb     _05e9d1_jump
		cmp    $0x00005d,%ax
		jbe    _05f214_jump
		cmp    $0x00006c,%ax
		jb     _05e98d_jump
		jbe    _05f214_jump
		cmp    $0x00006f,%ax
		jb     _05e97e_jump
		jbe    _05f2ff_jump
		cmp    $0x000070,%ax
		jbe    _05f214_jump
		cmp    $0x000073,%ax
		je     _05f214_jump
		jmp    _05f3ba_jump

	_05e97e_jump:
		cmp    $0x00006d,%ax
		jbe    _05f318_jump
		jmp    _05f214_jump

	_05e98d_jump:
		cmp    $0x000061,%ax
		jb     _05e9b8_jump
		jbe    _05f214_jump
		cmp    $0x000063,%ax
		jb     _05f3ba_jump
		jbe    _05f094_jump
		cmp    $0x000066,%ax
		je     _05f214_jump
		jmp    _05f3ba_jump

	_05e9b8_jump:
		cmp    $0x00005e,%ax
		jbe    _05f187_jump
		cmp    $0x000060,%ax
		je     _05ebee_jump
		jmp    _05f3ba_jump

	_05e9d1_jump:
		cmp    $0x000047,%ax
		jb     _05ea2b_jump
		jbe    _05f214_jump
		cmp    $0x000051,%ax
		jb     _05ea02_jump
		jbe    _05f131_jump
		cmp    $0x000052,%ax
		jbe    _05f318_jump
		cmp    $0x000053,%ax
		je     _05f214_jump
		jmp    _05f3ba_jump

	_05ea02_jump:
		cmp    $0x000049,%ax
		jb     _05f3ba_jump
		jbe    _05f214_jump
		cmp    $0x00004e,%ax
		jb     _05f3ba_jump
		cmp    $0x00004f,%ax
		jbe    _05f214_jump
		jmp    _05f3ba_jump

	_05ea2b_jump:
		cmp    $0x000040,%ax
		jb     _05ea50_jump
		jbe    _05f0d7_jump
		cmp    $0x000041,%ax
		jbe    _05f209_jump
		cmp    $0x000042,%ax
		je     _05f214_jump
		jmp    _05f3ba_jump

	_05ea50_jump:
		cmp    $0x00003e,%ax
		je     _05f214_jump
		jmp    _05f3ba_jump

	_05ea5f_jump:
		cmp    $0x00001f,%ax
		jb     _05eb07_jump
		jbe    _05f352_jump
		cmp    $0x000026,%ax
		jb     _05eac3_jump
		jbe    _05f1fd_jump
		cmp    $0x00002e,%ax
		jb     _05eaaa_jump
		jbe    _05f2f3_jump
		cmp    $0x000033,%ax
		jb     _05f3ba_jump
		cmp    $0x000034,%ax
		jbe    _05f214_jump
		cmp    $0x000037,%ax
		je     _05f321_jump
		jmp    _05f3ba_jump

	_05eaaa_jump:
		cmp    $0x000027,%ax
		jbe    _05f1f7_jump
		cmp    $0x00002c,%ax
		je     _05f214_jump
		jmp    _05f3ba_jump

	_05eac3_jump:
		cmp    $0x000021,%ax
		jb     _05f389_jump
		jbe    _05f214_jump
		cmp    $0x000024,%ax
		jb     _05f3ba_jump
		jbe    _05f214_jump
		mov    _0cf220_data,%dh
		mov    (%edi),%bl
		test   $0x000040,%dh
		sete   %dl
		and    $0x0000fb,%bl
		and    $0x000001,%dl
		mov    %bl,(%edi)
		shl    $0x000002,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%edi)
		jmp    _05f3ba_jump

	_05eb07_jump:
		cmp    $0x00000d,%ax
		jb     _05eb57_jump
		jbe    _05f214_jump
		cmp    $0x000014,%ax
		jb     _05eb38_jump
		jbe    _05f233_jump
		cmp    $0x000015,%ax
		jbe    _05f37a_jump
		cmp    $0x000017,%ax
		je     _05f156_jump
		jmp    _05f3ba_jump

	_05eb38_jump:
		cmp    $0x00000f,%ax
		jb     _05f3ba_jump
		jbe    _05f214_jump
		cmp    $0x000013,%ax
		je     _05f116_jump
		jmp    _05f3ba_jump

	_05eb57_jump:
		cmp    $0x000009,%ax
		jb     _05eb7c_jump
		jbe    _05f122_jump
		cmp    $0x00000a,%ax
		jbe    _05f29e_jump
		cmp    $0x00000b,%ax
		je     _05f1cd_jump
		jmp    _05f3ba_jump

	_05eb7c_jump:
		cmp    $0x000003,%ax
		je     _05f21b_jump
		jmp    _05f3ba_jump

	_05eb8b_jump:
		cmpb   $0x000002,0x00006e(%ecx)
		jne    _05f3ba_jump
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cf2c0_data
		jmp    _05f3ba_jump

	_05eba4_jump:
		testb  $0x000008,_0cf220_data
		jne    _05f1fd_jump
		mov    _0cf229_data,%al
		mov    0x000081(%ecx),%dl
		shl    $0x000004,%al
		and    $0x0000fb,%dl
		shr    $0x000007,%al
		mov    %dl,0x000081(%ecx)
		and    $0x000001,%al
		mov    %dl,%dh
		shl    $0x000002,%al
		or     %al,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05ebdf_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cf20c_data
		jmp    _05f3ba_jump

	_05ebee_jump:
		movw   $0x000000,0x000050(%ecx)
		movw   $0x000000,0x000056(%ecx)
		jmp    _05f3ba_jump

	_05ebff_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cf2c2_data
		jmp    _05f3ba_jump

	_05ec0e_jump:
		movw   $0x000000,0x000050(%ecx)
		mov    0x000034(%ecx),%ax
		mov    0x000081(%ecx),%bh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %ax,_0cf2c4_data
		mov    %bh,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05ec39_jump:
		mov    0x000034(%ecx),%ax
		movw   $0x000000,0x000050(%ecx)
		mov    %ax,_0cf2cc_data
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05ec63_jump:
		movw   $0x000000,0x000050(%ecx)
		mov    0x000034(%ecx),%ax
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		mov    %ax,_0cf2ce_data
		and    $0x0000fb,%dh
		mov    0x000034(%ecx),%ax
		mov    %dh,0x000081(%ecx)
		mov    %ax,(%esp)
		jmp    _05f3ba_jump

	_05ec96_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cf2bc_data
		mov    0x000034(%ecx),%ax
		mov    %ax,0x000008(%esp)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000050(%ecx)
		or     $0x000008,%ah
		movl   $0x000000,0x000024(%ecx)
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05ecd5_jump:
		mov    %si,_0cf284_data
		movw   $0x000000,0x000056(%ecx)
		jmp    _05f3ba_jump

	_05ece7_jump:
		xor    %eax,%eax
		mov    0x000077(%ecx),%al
		sar    $0x000002,%eax
		mov    %al,0x000076(%ecx)
		mov    _0cf282_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05f3ba_jump
		mov    _0cf282_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%edx
		add    %eax,%edx
		mov    0x000028(%ecx),%eax
		cmp    0x000028(%edx),%eax
		jge    _05ed3e_jump
		mov    _0cf282_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%edx
		mov    0x00002c(%edx,%eax,1),%eax
		add    $0x000070,%eax
		jmp    _05ed59_jump

	_05ed3e_jump:
		mov    _0cf282_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%edx
		mov    0x00002c(%edx,%eax,1),%eax
		add    $0x000078,%eax

	_05ed59_jump:
		mov    %eax,0x00002c(%ecx)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		jmp    _05f3b7_jump

	_05ed67_jump:
		mov    0x00001c(%ecx),%ebp
		test   %ebp,%ebp
		jne    _05f3ba_jump
		mov    0x000081(%ecx),%bh
		mov    %ebp,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05ed89_jump:
		cmpb   $0x000000,0x000076(%ecx)
		je     _05ee85_jump
		mov    _0cf2ac_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    _0cf282_data,%bx
		mov    %edx,0x000028(%ecx)
		cmp    $0x000001,%bx
		jne    _05edd5_jump
		testb  $0x000040,_0cf220_data
		je     _05edc0_jump
		movb   $0x000001,0x000076(%ecx)

	_05edc0_jump:
		mov    _0cf276_data,%eax
		sar    $0x000010,%eax
		add    $0x0000c8,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _05ee56_jump

	_05edd5_jump:
		mov    0x000028(%ecx),%ax
		movb   $0x000000,0x000076(%ecx)
		mov    %ax,0x000050(%ecx)
		cmp    $0x000003,%bx
		jne    _05edf1_jump
		cmpw   $0x000007,_0cf270_data
		je     _05ee50_jump

	_05edf1_jump:
		mov    _0cf276_data,%eax
		sar    $0x000010,%eax
		add    $0x000078,%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0cf278_data,%ax
		add    $0x000078,%eax
		mov    _0cf282_data,%bx
		mov    %ax,0x00003e(%ecx)
		cmp    $0x000005,%bx
		jne    _05ee25_jump
		cmpw   $0x000008,_0cf270_data
		je     _05ee2f_jump

	_05ee25_jump:
		cmpw   $0x000004,_0cf282_data
		jne    _05ee56_jump

	_05ee2f_jump:
		mov    _0cf276_data,%eax
		sar    $0x000010,%eax
		add    $0x000082,%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0cf278_data,%ax
		add    $0x000082,%eax
		mov    %ax,0x00003e(%ecx)
		jmp    _05ee56_jump

	_05ee50_jump:
		movw   $0x000000,0x00003a(%ecx)

	_05ee56_jump:
		movl   $0x000001,0x000024(%ecx)
		mov    %si,_0cf274_data
		mov    0x000081(%ecx),%dl
		movw   $0x000000,0x000056(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01dc5c_func
		jmp    _05f3ba_jump

	_05ee85_jump:
		mov    _0cf272_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05efd1_jump
		cmpw   $0x000001,_0cf282_data
		je     _05efd1_jump
		mov    _0cf272_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    0x000081(%ecx),%dl
		movw   $0x000000,0x000042(%ecx)
		and    $0x0000f7,%dl
		mov    %dl,0x000081(%ecx)
		mov    _0cc7a0_data,%edx
		movw   $0x000000,0x000040(%ecx)
		addw   $0x000065,0x000050(%edx,%eax,1)
		mov    0x00004e(%edx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0cf272_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    0x00002c(%edx,%eax,1),%eax
		mov    %eax,0x00002c(%ecx)
		cmpw   $0x000003,_0cf282_data
		jne    _05ef0c_jump
		cmpw   $0x000007,_0cf270_data
		je     _05ef76_jump

	_05ef0c_jump:
		mov    _0cf278_data,%ax
		add    $0x000078,%eax
		mov    _0cf282_data,%bx
		mov    %ax,0x00003e(%ecx)
		cmp    $0x000004,%bx
		jne    _05ef37_jump
		mov    _0cf278_data,%ax
		add    $0x000082,%eax
		mov    %ax,0x00003e(%ecx)

	_05ef37_jump:
		cmpw   $0x000005,_0cf282_data
		jne    _05ef84_jump
		cmpw   $0x000008,_0cf270_data
		jne    _05ef84_jump
		mov    _0cf272_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%ebx
		mov    _0cc7a0_data,%edx
		mov    0x00002c(%edx,%ebx,1),%edx
		add    %eax,%edx
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		mov    0x00002c(%ecx),%ax
		jmp    _05ef80_jump

	_05ef76_jump:
		mov    0x00002c(%ecx),%ax
		movw   $0x000000,0x00003a(%ecx)

	_05ef80_jump:
		mov    %ax,0x00003e(%ecx)

	_05ef84_jump:
		mov    %ecx,%eax
		call   _01dc5c_func
		mov    _0cf272_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		orb    $0x000004,0x000081(%ecx)
		mov    _0cc7a0_data,%edx
		movl   $0x000001,0x000024(%ecx)
		mov    0x000076(%edx,%eax,1),%bl
		inc    %bl
		mov    %bl,0x000076(%edx,%eax,1)
		mov    %bl,0x00006c(%ecx)
		cmp    $0x000003,%bl
		jbe    _05efc6_jump
		mov    %bl,%al
		sub    $0x000004,%al
		mov    %al,0x00006c(%ecx)

	_05efc6_jump:
		movw   $0x000000,0x000056(%ecx)
		jmp    _05f3ba_jump

	_05efd1_jump:
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05efec_jump:
		mov    %si,_0cf27e_data
		jmp    _05f3ba_jump

	_05eff8_jump:
		cmpb   $0x000000,0x000076(%ecx)
		jne    _05f3ba_jump
		mov    _0ce06c_data,%ax
		sub    $0x0000c8,%eax
		mov    %ax,0x00003c(%ecx)
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0ce070_data,%eax
		mov    $0x000009,%ebx
		sub    $0x000032,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01d444_func
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		movl   $0x000001,0x000024(%ecx)
		movw   $0x000000,0x000050(%ecx)
		movw   $0x000000,0x000052(%ecx)
		mov    0x000081(%ecx),%bl
		movb   $0x000000,0x00007f(%ecx)
		or     $0x000008,%bl
		mov    %si,_0cf26c_data
		mov    %bl,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05f072_jump:
		mov    0x000081(%ecx),%bh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %si,_0cf27a_data
		mov    %bh,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05f094_jump:
		cmpb   $0x000000,_0ce4d9_data
		je     _05f0ae_jump
		cmpw   $0x000000,_0cf1fc_data
		jne    _05f0ae_jump
		andb   $0x0000fb,0x000081(%ecx)

	_05f0ae_jump:
		mov    0x00006d(%ecx),%al
		test   %al,%al
		jbe    _05f0be_jump
		cmp    $0x000005,%al
		je     _05f0ce_jump
		jmp    _05f3ba_jump

	_05f0be_jump:
		movb   $0x000000,0x00007f(%ecx)
		movl   $0x000000,0x000024(%ecx)
		jmp    _05f3ba_jump

	_05f0ce_jump:
		movb   $0x00001e,0x00007f(%ecx)
		jmp    _05f3ba_jump

	_05f0d7_jump:
		mov    _0cf26c_data,%eax
		sar    $0x000010,%eax
		mov    %si,_0cdfd4_data(,%eax,2)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0cf26e_data,%ax
		inc    %eax
		mov    %ax,_0cf26e_data
		cmp    $0x000032,%ax
		jl     _05f116_jump
		mov    $_0c1000_data,%eax
		call   _01f474_func

	_05f116_jump:
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05f122_jump:
		mov    0x00000c(%ecx),%eax
		mov    0x000008(%eax),%eax
		movb   $0x000000,0x000016(%eax)
		jmp    _05f3ba_jump

	_05f131_jump:
		mov    _0cf46c_data,%al
		mov    _0cf46c_data,%dh
		and    $_0000ff_case,%eax
		inc    %dh
		mov    %si,_0cdfd0_data(,%eax,2)
		mov    %dh,_0cf46c_data
		jmp    _05f3ba_jump

	_05f156_jump:
		mov    0x000081(%ecx),%dl
		and    $0x0000fb,%dl
		mov    %si,_0cf28a_data
		mov    %dl,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05f171_jump:
		andb   $0x0000fb,0x000081(%ecx)
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cf2d2_data
		jmp    _05f3ba_jump

	_05f187_jump:
		mov    _0ce170_data,%al
		mov    %al,0x00006e(%ecx)
		mov    %si,_0cf280_data
		mov    %al,0x00006c(%ecx)
		mov    _0cf27e_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%edx
		add    %eax,%edx
		mov    %edx,_0ce0d0_data
		mov    0x000081(%ecx),%dl
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05f1cd_jump:
		mov    0x000081(%ecx),%bh
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%bh
		mov    %si,_0cf29a_data
		mov    %bh,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05f1ec_jump:
		movw   $0x000028,0x000056(%ecx)
		jmp    _05f3ba_jump

	_05f1f7_jump:
		movw   $0x000000,0x000056(%ecx)

	_05f1fd_jump:
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05f209_jump:
		movw   $0x000000,0x000052(%ecx)
		jmp    _05f3ba_jump

	_05f214_jump:
		movl   $0x000000,0x000024(%ecx)

	_05f21b_jump:
		mov    0x000081(%ecx),%bl
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05f233_jump:
		movb   $0x000007,0x000078(%ecx)
		movb   $0x000000,0x00007f(%ecx)
		jmp    _05f3ba_jump

	_05f240_jump:
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000007,0x000078(%ecx)
		mov    _0ce048_data,%eax
		mov    0x000081(%ecx),%dl
		mov    %eax,0x000004(%ecx)
		and    $0x0000fb,%dl
		mov    0x000034(%ecx),%ax
		mov    %dl,0x000081(%ecx)
		mov    %ax,_0cf2b2_data
		jmp    _05f3ba_jump

	_05f271_jump:
		movw   $0x000001,0x00004a(%ecx)
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000007,0x000078(%ecx)
		mov    0x000081(%ecx),%bl
		mov    0x00004a(%ecx),%ax
		and    $0x0000fb,%bl
		mov    %ax,0x000056(%ecx)
		mov    %bl,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05f29e_jump:
		cmp    $0x000001,%si
		jl     _05f3ba_jump
		movswl %si,%eax
		dec    %eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%edx
		add    %edx,%eax
		orb    $0x000004,0x000081(%ecx)
		cmpw   $0x00000a,0x000060(%eax)
		jne    _05f3ba_jump
		mov    0x000028(%eax),%eax
		cmp    0x000028(%ecx),%eax
		jne    _05f3ba_jump
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05f2f3_jump:
		mov    %ecx,%eax
		call   _0209bc_func
		jmp    _05f3ba_jump

	_05f2ff_jump:
		testb  $0x000008,_0cf229_data
		je     _05f318_jump
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d434_func
		movb   $0x00000a,0x00006e(%ecx)

	_05f318_jump:
		movb   $0x000007,0x000078(%ecx)
		jmp    _05f3ba_jump

	_05f321_jump:
		mov    _0cf229_data,%bh
		mov    0x000034(%ecx),%ax
		movb   $0x000007,0x000078(%ecx)
		mov    %ax,_0cf28c_data
		test   $0x000008,%bh
		je     _05f3ba_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movb   $0x000004,0x00006e(%ecx)
		call   _01d444_func
		jmp    _05f3ba_jump

	_05f352_jump:
		mov    0x000081(%ecx),%ah
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _05f3ba_jump

	_05f367_jump:
		movw   $0x00ffff,0x000050(%ecx)
		movw   $0x000000,0x000052(%ecx)
		mov    %si,_0cf1fe_data

	_05f37a_jump:
		movb   $0x000000,0x00007f(%ecx)
		jmp    _05f3ba_jump

	_05f380_jump:
		mov    %si,_0cf202_data
		jmp    _05f3ba_jump

	_05f389_jump:
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x00003c(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%ecx)
		mov    0x00003c(%ecx),%ax
		movw   $0x000000,0x00003e(%ecx)
		cwtl   
		mov    %eax,0x000028(%ecx)
		mov    0x00003e(%ecx),%ax
		movl   $0x000000,0x000024(%ecx)
		cwtl   

	_05f3b7_jump:
		mov    %eax,0x00002c(%ecx)

	_05f3ba_jump:
		xor    %eax,%eax
		mov    _0cf44f_data,%al
		imul   $0x000014,%eax,%eax
		cmpb   $0x000006,_094d1d_data(%eax)
		jne    _05f3ed_jump
		cmpw   $0x00003a,0x000060(%ecx)
		jne    _05f3ed_jump
		andb   $0x0000fb,0x000081(%ecx)
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		movl   $0x000000,0x000024(%ecx)
		call   _073b20_func

	_05f3ed_jump:
		cmpw   $0x000000,_0cf1fc_data
		jne    _05f42c_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000002,_092535_data(,%eax,4)
		je     _05f42c_jump
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		call   _073b58_func
		test   %al,%al
		je     _05f42c_jump
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)

	_05f42c_jump:
		cmpw   $0x000000,_0cf1fc_data
		je     _05f444_jump
		cmpw   $0x0000a1,0x000060(%ecx)
		jne    _05f444_jump
		incb   _0cf447_data

	_05f444_jump:
		mov    0x000004(%esp),%eax
		add    $0x000084,%edi
		inc    %esi
		add    $0x000084,%ecx
		cmp    %ax,%si
		jl     _05e630_jump

	_05f45e_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05f49f_jump
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _05f49f_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		mov    0x000008(%esp),%ecx
		mov    %cx,0x000052(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    (%esp),%edx
		mov    %dx,0x000052(%eax)

	_05f49f_jump:
		cmpw   $0x000000,_0cf1fc_data
		je     _05f4bd_jump
		xor    %eax,%eax
		mov    _0ce950_data,%al
		xor    %bh,%bh
		mov    %eax,_0cd2b0_data
		mov    %bh,_0ce950_data

	_05f4bd_jump:
		call   _05e458_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f4cc_func:
		push   %edx
		mov    %eax,%edx
		call   _05dc2c_func
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000002,0x000030(%edx)
		call   _01dc5c_func
		cmpl   $0x000000,0x000020(%edx)
		je     _05f4f3_jump
		xor    %eax,%eax
		jmp    _05f4f8_jump

	_05f4f3_jump:
		mov    $0x000078,%eax

	_05f4f8_jump:
		movl   $0x000000,0x000024(%edx)
		mov    %ax,0x00005e(%edx)
		pop    %edx
		ret    



_05f508_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf270_data,%si
		mov    _0cf282_data,%di
		xor    %eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx

	_05f521_jump:
		test   %eax,%eax
		jne    _05f53f_jump
		cmp    $0x000003,%si
		jne    _05f536_jump
		movw   $0x00ff88,_09294e_data(%ebx)
		jmp    _05f53f_jump

	_05f536_jump:
		xor    %ecx,%ecx
		mov    %cx,_09294e_data(%ebx)

	_05f53f_jump:
		cmp    $0x000011,%eax
		je     _05f54e_jump
		cmp    $0x000010,%eax
		je     _05f54e_jump
		cmp    $0x000018,%eax
		jne    _05f564_jump

	_05f54e_jump:
		cmp    $0x000001,%di
		jne    _05f55d_jump
		orb    $0x000008,_092535_data(%edx)
		jmp    _05f564_jump

	_05f55d_jump:
		andb   $0x0000f7,_092535_data(%edx)

	_05f564_jump:
		add    $0x000002,%ebx
		inc    %eax
		add    $0x000004,%edx
		cmp    $0x000106,%eax
		jl     _05f521_jump
		mov    %di,_0cf282_data
		mov    %si,_0cf270_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05f590_switch:
		.long   _05f7af_case
		.long   _05f78a_case
		.long   _05f76c_case
		.long   _05f775_case
		.long   _05f784_case
		.long   _05f793_case
		.long   _05f7a2_case
		.long   _05f7b8_case
		.long   _05f7f0_case
		.long   _05f81a_case
		.long   _05f844_case
		.long   _05f87c_case
		.long   _05f8a0_case
		.long   _05f8cf_case
		.long   _05f900_case




_05f5cc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%ebx
		mov    _0e47b8_data,%edx
		mov    0x000034(%edx),%ecx
		call   _010010_func
		test   %bx,%bx
		jl     _05f5fd_jump
		mov    $0x000001,%eax
		movswl %bx,%ebx
		cmp    %ebx,%eax
		jge    _05f5f9_jump
		mov    %ebx,%eax

	_05f5f9_jump:
		neg    %eax
		jmp    _05f60d_jump

	_05f5fd_jump:
		movswl %bx,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _05f60d_jump
		mov    %ebx,%eax

	_05f60d_jump:
		xor    %ebx,%ebx
		mov    %ax,0x000004(%edx)
		mov    (%esp),%bl
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _05f621_jump
		mov    %ebx,%eax

	_05f621_jump:
		mov    $0x00000f,%ebx
		cmp    %ebx,%eax
		jle    _05f62c_jump
		mov    %ebx,%eax

	_05f62c_jump:
		mov    %al,0x00001d(%edx)
		movl   $0x000000,0x000014(%ecx)
		movl   $0x000000,0x000054(%ecx)
		movl   $0x00013f,0x00003c(%ecx)
		movl   $0x0000c7,0x000068(%ecx)
		movl   $0x0000a0,0x000064(%ecx)
		movl   $0x000000,0x00006c(%ecx)
		mov    0x000014(%ecx),%eax
		mov    %eax,(%ecx)
		mov    0x000054(%ecx),%eax
		mov    %eax,0x000040(%ecx)
		mov    %eax,0x000004(%ecx)
		mov    0x00003c(%ecx),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x000068(%ecx),%eax
		mov    %eax,0x00002c(%ecx)
		mov    %eax,0x000018(%ecx)
		mov    0x000064(%ecx),%eax
		mov    %eax,0x000050(%ecx)
		mov    0x00006c(%ecx),%eax
		mov    %eax,0x000058(%ecx)
		mov    %eax,0x000044(%ecx)
		mov    %eax,0x000030(%ecx)
		mov    %eax,0x00001c(%ecx)
		mov    %eax,0x000008(%ecx)
		mov    0x000030(%edx),%ecx
		mov    0x000028(%edx),%eax
		movb   $0x000000,0x000026(%ecx)
		movb   $0x00009f,0x00002a(%ecx)
		movb   $0x000000,0x00002b(%ecx)
		movb   $0x0000c7,0x000029(%ecx)
		mov    %eax,(%ecx)
		mov    0x000026(%ecx),%al
		mov    %al,0x000024(%ecx)
		mov    0x00002a(%ecx),%al
		mov    %al,0x000028(%ecx)
		mov    0x00002b(%ecx),%al
		mov    %al,0x000025(%ecx)
		mov    0x000029(%ecx),%al
		mov    %al,0x000027(%ecx)
		mov    0x000030(%edx),%ecx
		add    $0x00002c,%ecx
		mov    0x00002c(%edx),%eax
		movb   $0x000000,0x000026(%ecx)
		mov    %eax,(%ecx)
		mov    0x000026(%ecx),%al
		mov    %al,0x000024(%ecx)
		movb   $0x00009f,0x00002a(%ecx)
		movb   $0x000000,0x00002b(%ecx)
		movb   $0x0000c7,0x000029(%ecx)
		mov    0x00002a(%ecx),%al
		mov    %al,0x000028(%ecx)
		mov    0x00002b(%ecx),%al
		mov    %al,0x000025(%ecx)
		mov    0x000029(%ecx),%al
		mov    %al,0x000027(%ecx)
		movw   $0x000000,(%edx)
		movw   $0x000200,0x000002(%edx)
		movw   $0x000000,0x00000a(%edx)
		movw   $0x000000,0x000010(%edx)
		movw   $0x000000,0x000016(%edx)
		movw   $0x0000a0,0x000018(%edx)
		mov    0x00000a(%edx),%ax
		mov    %ax,0x000008(%edx)
		mov    %ax,0x000006(%edx)
		mov    0x000010(%edx),%ax
		mov    %ax,0x00000e(%edx)
		mov    %ax,0x00000c(%edx)
		mov    0x000016(%edx),%ax
		mov    %ax,0x000014(%edx)
		mov    %ax,0x000012(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x000064,0x00001a(%edx)
		sar    $0x000010,%eax
		movb   $0x000000,0x00001c(%edx)
		test   %eax,%eax
		jge    _05f74e_jump
		neg    %eax

	_05f74e_jump:
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    0x00001d(%edx),%al
		dec    %al
		cmp    $0x00000e,%al
		ja     _05f921_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_05f590_switch(,%eax,4)

	_05f76c_case:
		mov    %cx,0x000016(%edx)
		jmp    _05f921_jump

	_05f775_case:
		mov    %cx,0x000014(%edx)
		add    %ecx,%ecx
		mov    %cx,0x000012(%edx)
		jmp    _05f921_jump

	_05f784_case:
		mov    %cx,0x000016(%edx)
		add    %ecx,%ecx

	_05f78a_case:
		mov    %cx,0x000014(%edx)
		jmp    _05f921_jump

	_05f793_case:
		mov    %cx,0x000016(%edx)
		add    %ecx,%ecx
		mov    %cx,0x000012(%edx)
		jmp    _05f921_jump

	_05f7a2_case:
		mov    %cx,0x000016(%edx)
		imul   $0x000003,%ecx,%eax
		add    %ecx,%ecx
		mov    %ax,0x000014(%edx)

	_05f7af_case:
		mov    %cx,0x000012(%edx)
		jmp    _05f921_jump

	_05f7b8_case:
		movw   $0x000200,0x000006(%edx)
		movw   $0x0000c9,0x00001a(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %eax,%edi
		mov    %ax,0x000012(%edx)
		neg    %edi
		mov    0x000004(%edx),%ax
		mov    %di,0x000012(%edx)
		test   %ax,%ax
		jg     _05f921_jump
		movw   $0x000180,0x000006(%edx)
		jmp    _05f921_jump

	_05f7f0_case:
		movw   $0x0000c9,0x00001a(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%si
		mov    %ax,0x000012(%edx)
		test   %si,%si
		jg     _05f921_jump
		movw   $0x000080,0x000006(%edx)
		jmp    _05f921_jump

	_05f81a_case:
		movw   $0x00fffe,0x00001a(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%cx
		mov    %ax,0x000012(%edx)
		test   %cx,%cx
		jg     _05f921_jump
		movw   $0x000080,0x000006(%edx)
		jmp    _05f921_jump

	_05f844_case:
		movw   $0x000200,0x000006(%edx)
		movw   $0x00fffe,0x00001a(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %eax,%edi
		mov    %ax,0x000012(%edx)
		neg    %edi
		mov    0x000004(%edx),%ax
		mov    %di,0x000012(%edx)
		test   %ax,%ax
		jg     _05f921_jump
		movw   $0x000180,0x000006(%edx)
		jmp    _05f921_jump

	_05f87c_case:
		movw   $0x00fffe,0x000018(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%si
		mov    %ax,0x000014(%edx)
		test   %si,%si
		jg     _05f921_jump
		jmp    _05f91b_jump

	_05f8a0_case:
		movw   $0x000200,0x000008(%edx)
		movw   $0x00fffe,0x000018(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %ax,0x000014(%edx)
		neg    %eax
		mov    0x000004(%edx),%cx
		mov    %ax,0x000014(%edx)
		test   %cx,%cx
		jg     _05f921_jump
		movw   $0x000180,0x000008(%edx)
		jmp    _05f921_jump

	_05f8cf_case:
		movw   $0x000200,0x000008(%edx)
		movw   $0x000141,0x000018(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %eax,%esi
		mov    %ax,0x000014(%edx)
		neg    %esi
		mov    0x000004(%edx),%di
		mov    %si,0x000014(%edx)
		test   %di,%di
		jg     _05f921_jump
		movw   $0x000180,0x000008(%edx)
		jmp    _05f921_jump

	_05f900_case:
		movw   $0x000141,0x000018(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%cx
		mov    %ax,0x000014(%edx)
		test   %cx,%cx
		jg     _05f921_jump

	_05f91b_jump:
		movw   $0x000080,0x000008(%edx)

	_05f921_jump:
		cmpb   $0x000001,0x00001c(%edx)
		jne    _05f931_jump
		add    $0x000080,%ebx
		mov    %bx,0x000002(%edx)

	_05f931_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05f93c_case:
		push   %edx
		mov    _0e47b8_data,%edx
		test   %edx,%edx
		je     _05f976_jump
		cmpl   $0x000000,0x000030(%edx)
		je     _05f955_jump
		lea    0x000030(%edx),%eax
		call   _07f44c_func

	_05f955_jump:
		cmpl   $0x000000,0x000034(%edx)
		je     _05f963_jump
		lea    0x000034(%edx),%eax
		call   _07f44c_func

	_05f963_jump:
		cmpl   $0x000000,_0e47b8_data
		je     _05f976_jump
		mov    $_0e47b8_data,%eax
		call   _07f44c_func

	_05f976_jump:
		pop    %edx
		ret    



_05f978_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %ecx,%edi
		xor    %cl,%cl
		test   %ebx,%ebx
		je     _05f9e3_jump
		test   %edi,%edi
		je     _05f9e3_jump
		mov    $0x000038,%eax
		call   _07f434_func
		mov    %eax,%edx
		mov    %eax,_0e47b8_data
		test   %eax,%eax
		je     _05f9e3_jump
		mov    %ebx,0x000020(%eax)
		mov    %eax,%esi
		mov    %edi,0x000024(%eax)
		mov    $0x000058,%eax
		call   _07f434_func
		mov    %eax,0x000030(%edx)
		test   %eax,%eax
		je     _05f9e3_jump
		mov    $0x000078,%eax
		call   _07f434_func
		mov    %eax,0x000034(%edx)
		test   %eax,%eax
		je     _05f9e3_jump
		mov    _0ccad8_data,%eax
		mov    %eax,0x000028(%edx)
		lea    0x00c800(%eax),%ebx
		mov    $0x000001,%cl
		mov    %ebx,0x00002c(%edx)

	_05f9e3_jump:
		test   %cl,%cl
		je     _05fa20_jump
		mov    $0x0000a0,%ebx
		mov    0x000028(%esi),%edx
		mov    0x000020(%esi),%eax
		call   _07dc80_func
		mov    $0x0000a0,%ebx
		mov    0x000020(%esi),%eax
		mov    0x00002c(%esi),%edx
		add    $0x0000a0,%eax
		call   _07dc80_func
		xor    %eax,%eax
		mov    -0x000002(%esp),%edx
		mov    0x000004(%esp),%al
		sar    $0x000010,%edx
		call   _05f5cc_func
		jmp    _05fa25_jump

	_05fa20_jump:
		call   _05f93c_case

	_05fa25_jump:
		mov    %cl,%al
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_05fa30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    _0e47b8_data,%ecx
		mov    0x00001c(%ecx),%ah
		mov    0x000034(%ecx),%edi
		test   %ah,%ah
		jne    _05fa74_jump
		cmpw   $0x000000,0x000004(%ecx)
		jl     _05fa55_jump
		mov    (%ecx),%ax
		jmp    _05fa5e_jump

	_05fa55_jump:
		mov    0x000002(%ecx),%ax
		mov    (%ecx),%si
		sub    %esi,%eax

	_05fa5e_jump:
		mov    %ax,0x00002c(%esp)
		mov    0x00002c(%esp),%eax
		shl    $0x000002,%eax
		add    $0x000002,%ah
		mov    %ax,0x00002c(%esp)
		jmp    _05fa7b_jump

	_05fa74_jump:
		movw   $0x000200,0x00002c(%esp)

	_05fa7b_jump:
		lea    0x000028(%esp),%ebx
		mov    0x000004(%ecx),%eax
		lea    0x000024(%esp),%edx
		sar    $0x000010,%eax
		call   _05d2ac_func
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000028(%esp),%ebx
		mov    %eax,0x000014(%esp)
		mov    0x000006(%ecx),%eax
		lea    0x000024(%esp),%edx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%ebp
		call   _05d2ac_func
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00001c(%esp)
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000028(%esp),%ebx
		mov    %eax,0x000018(%esp)
		mov    0x000008(%ecx),%eax
		lea    0x000024(%esp),%edx
		sar    $0x000010,%eax
		call   _05d2ac_func
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000010,%ebp
		mov    %eax,0x000020(%esp)
		mov    0x000026(%esp),%eax
		xor    %dl,%dl
		sar    $0x000010,%eax
		mov    %dl,0x000030(%esp)
		mov    %eax,0x000010(%esp)

	_05faf8_jump:
		mov    0x000016(%ecx),%eax
		mov    (%edi),%edx
		sar    $0x000010,%eax
		mov    0x000018(%ecx),%esi
		sub    %eax,%edx
		sar    $0x000010,%esi
		mov    %edx,%eax
		mov    0x000004(%edi),%edx
		sub    %esi,%edx
		mov    %edx,%esi
		mov    0x00000a(%ecx),%dx
		mov    0x000008(%edi),%ebx
		test   %dx,%dx
		je     _05fb53_jump
		mov    0x000010(%esp),%edx
		imul   %eax,%edx
		mov    %edx,0x000008(%esp)
		mov    0x000020(%esp),%edx
		imul   %esi,%edx
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		sub    0x000004(%esp),%edx
		mov    %edx,(%esp)
		imul   0x000020(%esp),%eax
		imul   0x000010(%esp),%esi
		add    %eax,%esi
		mov    (%esp),%eax
		sar    $0x000009,%esi
		sar    $0x000009,%eax

	_05fb53_jump:
		cmpw   $0x000000,0x000008(%ecx)
		je     _05fb90_jump
		mov    0x00001c(%esp),%edx
		imul   %ebx,%edx
		mov    %edx,0x000008(%esp)
		mov    0x000018(%esp),%edx
		imul   %eax,%edx
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		add    0x000004(%esp),%edx
		mov    %edx,(%esp)
		imul   0x000018(%esp),%ebx
		imul   0x00001c(%esp),%eax
		sub    %eax,%ebx
		mov    (%esp),%eax
		sar    $0x000009,%ebx
		sar    $0x000009,%eax

	_05fb90_jump:
		cmpw   $0x000000,0x000006(%ecx)
		je     _05fbd5_jump
		mov    0x000014(%esp),%edx
		imul   %ebx,%edx
		imul   %ebp,%ebx
		mov    %edx,0x000004(%esp)
		mov    %esi,%edx
		imul   %ebp,%edx
		mov    %ebx,0x00000c(%esp)
		mov    0x000014(%esp),%ebx
		imul   %esi,%ebx
		mov    %edx,0x000008(%esp)
		mov    0x000004(%esp),%edx
		add    0x000008(%esp),%edx
		mov    %edx,(%esp)
		mov    0x00000c(%esp),%edx
		sub    %ebx,%edx
		mov    (%esp),%esi
		mov    %edx,%ebx
		sar    $0x000009,%esi
		sar    $0x000009,%ebx

	_05fbd5_jump:
		mov    0x00002a(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000009,%eax
		add    %edx,%ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000016(%ecx),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,0x00000c(%edi)
		mov    %esi,%edx
		shl    $0x000009,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000018(%ecx),%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    0x000030(%esp),%dh
		add    $0x000014,%edi
		inc    %dh
		mov    %eax,-0x000004(%edi)
		mov    %dh,0x000030(%esp)
		cmp    $0x000006,%dh
		jb     _05faf8_jump
		mov    0x000012(%ecx),%ax
		mov    0x000006(%ecx),%di
		mov    0x000008(%ecx),%dx
		mov    0x00000a(%ecx),%bx
		add    %eax,%edi
		mov    0x000014(%ecx),%ax
		mov    %di,0x000006(%ecx)
		add    %eax,%edx
		mov    0x000016(%ecx),%ax
		mov    %dx,0x000008(%ecx)
		add    %eax,%ebx
		mov    %bx,0x00000a(%ecx)
		mov    0x000034(%ecx),%edx
		mov    0x000030(%ecx),%eax
		mov    0x00000c(%edx),%ebx
		mov    %ebx,0x000004(%eax)
		mov    0x000010(%edx),%ebx
		mov    %ebx,0x000008(%eax)
		mov    0x000020(%edx),%ebx
		mov    %ebx,0x00000c(%eax)
		mov    0x000024(%edx),%ebx
		mov    %ebx,0x000010(%eax)
		mov    0x000070(%edx),%ebx
		mov    %ebx,0x000014(%eax)
		mov    0x000074(%edx),%ebx
		mov    %ebx,0x000018(%eax)
		mov    0x00005c(%edx),%ebx
		mov    %ebx,0x00001c(%eax)
		mov    0x000060(%edx),%ebx
		mov    %ebx,0x000020(%eax)
		mov    0x000030(%ecx),%eax
		mov    0x00005c(%edx),%ebx
		mov    %ebx,0x000030(%eax)
		mov    0x000060(%edx),%ebx
		mov    %ebx,0x000034(%eax)
		mov    0x000070(%edx),%ebx
		mov    %ebx,0x000038(%eax)
		mov    0x000074(%edx),%ebx
		mov    %ebx,0x00003c(%eax)
		mov    0x000034(%edx),%ebx
		mov    %ebx,0x000040(%eax)
		mov    0x000038(%edx),%ebx
		mov    %ebx,0x000044(%eax)
		mov    0x000048(%edx),%ebx
		mov    %ebx,0x000048(%eax)
		add    $0x00002c,%eax
		mov    0x00004c(%edx),%edx
		mov    %edx,0x000020(%eax)
		mov    0x000002(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05fcc2_jump
		neg    %eax

	_05fcc2_jump:
		mov    (%ecx),%si
		add    %eax,%esi
		mov    0x000002(%ecx),%di
		mov    %si,(%ecx)
		cmp    %di,%si
		jbe    _05fcd8_jump
		movw   $0x000000,(%ecx)

	_05fcd8_jump:
		mov    (%ecx),%ax
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05fce8_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    _0e47b8_data,%ebx
		mov    0x000030(%ebx),%edx
		mov    0x000024(%ebx),%eax
		mov    %edx,%esi
		call   _010045_func
		lea    0x00002c(%edx),%esi
		mov    0x000024(%ebx),%eax
		call   _010045_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_05fd10_func:
		push   %edx
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		mov    0x000018(%eax,%edx,4),%dx
		mov    %dx,0x000046(%eax)
		decb   0x00007c(%eax)
		pop    %edx
		ret    



_05fd24_func:
		push   %edx
		cmp    $0x00007f,%al
		jbe    _05fd38_jump
		mov    $0x000100,%edx
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %edx,%eax
		neg    %eax
		pop    %edx
		ret    

	_05fd38_jump:
		xor    %ah,%ah
		pop    %edx
		ret    

	_05fd3c_jump:
		xor    %al,%al
		ret    



_05fd40_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000048(%eax)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_05fd60_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000048(%eax)
		cmp    $0x000004,%dx
		ja     _05fd94_jump
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000050(%eax)

	_05fd94_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_05fd9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		sar    $0x000010,%ebx
		mov    0x000010(%eax),%eax
		mov    (%ebx,%eax,1),%al
		and    $_0000ff_case,%eax
		call   _05fd24_func
		mov    0x000046(%edx),%cx
		mov    %ax,0x000048(%edx)
		inc    %ecx
		mov    %cx,0x000046(%edx)
		mov    0x000044(%edx),%ebx
		mov    0x000010(%edx),%eax
		sar    $0x000010,%ebx
		mov    (%ebx,%eax,1),%al
		and    $_0000ff_case,%eax
		call   _05fd24_func
		mov    %ax,0x000052(%edx)
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05fde8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		sar    $0x000010,%ebx
		mov    0x000010(%eax),%eax
		mov    (%ebx,%eax,1),%al
		mov    0x000046(%edx),%cx
		xor    %ah,%ah
		inc    %ecx
		mov    %ax,0x000048(%edx)
		mov    %cx,0x000046(%edx)
		mov    0x000044(%edx),%eax
		mov    0x000010(%edx),%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,1),%al
		and    $_0000ff_case,%eax
		call   _05fd24_func
		mov    0x000046(%edx),%si
		mov    %ax,0x000056(%edx)
		inc    %esi
		mov    %si,0x000046(%edx)
		mov    0x000044(%edx),%eax
		mov    0x000010(%edx),%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,1),%al
		and    $_0000ff_case,%eax
		call   _05fd24_func
		mov    %ax,0x00004a(%edx)
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05fe54_func:
		movw   $0x00ffff,0x000046(%eax)
		call   _060394_func
		mov    $0x000001,%al
		ret    

	_05fe64_jump:
		incw   0x000046(%eax)
		xor    %al,%al
		ret    



_05fe6c_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		cmp    $0x000004,%dl
		ja     _05fe87_jump
		incw   0x000046(%eax)

	_05fe87_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_05fe8c_jump:
		addw   $0x000002,0x000046(%eax)
		xor    %al,%al
		ret    



_05fe94_func:
		addw   $0x000003,0x000046(%eax)
		lea    0x000000(%eax),%eax

	_05fe9c_jump:
		xor    %al,%al
		ret    



_05fea0_func:
		movw   $0x00ffff,0x000046(%eax)
		call   _0603c0_func
		nop



_05feac_func:
		mov    $0x000001,%al
		ret    



_05feb0_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		movb   $0x000001,0x000073(%eax)
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		movb   $0x000002,0x000070(%eax)
		call   _01d2f4_func
		dec    %eax
		mov    %ax,0x000048(%ebx)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_05fed0_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    $0x000001,%edx
		call   _060434_func
		mov    0x000046(%ebx),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,2),%edx
		mov    0x000014(%ebx),%eax
		mov    (%edx,%eax,1),%ax
		mov    %ax,0x000046(%ebx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05fefc_func:
		push   %ebx
		push   %edx
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ff1c_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _05ff3f_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_05ff3f_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ff44_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _05ff67_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_05ff67_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ff6c_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _05ff8f_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_05ff8f_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ff94_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _05ffb7_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_05ffb7_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ffbc_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000046(%eax),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000050(%edx),%ebx
		shl    $0x000002,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %eax,0x000028(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ffe8_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000046(%eax),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000050(%edx),%ebx
		shl    $0x000002,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_060014_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _060460_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_06002c_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _01d43c_func
		movw   $0x000000,0x000040(%ebx)
		mov    $0x000001,%al
		movw   $0x000000,0x000042(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_06004c_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _01d434_func
		movw   $0x000000,0x000040(%ebx)
		mov    $0x000001,%al
		movw   $0x000000,0x000042(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_06006c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x000048(%eax),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _060089_jump

	_06007c_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _0603c0_func
		cmp    %cx,%dx
		jl     _06007c_jump

	_060089_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060090_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _060434_func
		mov    $0x000001,%al
		pop    %edx
		ret    



_0600a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%edx
		mov    $0x000001,%ebx
		call   _060434_func
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000048(%ecx),%dl
		call   _060460_func
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0600c8_func:
		call   _05fd10_func
		mov    $0x000001,%al
		ret    



_0600d0_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		mov    0x00001a(%eax,%edx,4),%bx
		dec    %ebx
		mov    %bx,0x00001a(%eax,%edx,4)
		test   %bx,%bx
		jle    _0600fa_jump
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		mov    0x000018(%eax,%edx,4),%dx
		mov    %dx,0x000046(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    

	_0600fa_jump:
		decb   0x00007c(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_060104_func:
		movw   $0x00ffff,0x000046(%eax)
		mov    $0x000001,%al
		ret    



_060110_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _06012f_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _060460_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_06012f_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_060134_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _060153_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _060460_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_060153_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_060158_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		testb  $0x000002,0x000081(%eax)
		je     _06017e_jump
		mov    0x000048(%ebx),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _06017e_jump

	_060171_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _0603c0_func
		cmp    %cx,%dx
		jl     _060171_jump

	_06017e_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060184_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		testb  $0x000002,0x000081(%eax)
		jne    _0601aa_jump
		mov    0x000048(%ebx),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _0601aa_jump

	_06019d_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _0603c0_func
		cmp    %cx,%dx
		jl     _06019d_jump

	_0601aa_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0601b0_func:
		push   %ebx
		push   %edx
		mov    0x000048(%eax),%dl
		and    $0x000001,%dl
		mov    0x000081(%eax),%dh
		and    $0x0000fd,%dh
		mov    %dh,0x000081(%eax)
		add    %dl,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,0x000081(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_0601d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000048(%eax),%ax
		cmp    $0x000003,%ax
		jb     _060219_jump
		jbe    _06034e_jump
		cmp    $0x000046,%ax
		jb     _06020a_jump
		jbe    _060238_jump
		cmp    $0x000047,%ax
		jbe    _060254_jump
		cmp    $0x000048,%ax
		je     _060280_jump
		jmp    _06038b_jump

	_06020a_jump:
		cmp    $0x000004,%ax
		je     _060369_jump
		jmp    _06038b_jump

	_060219_jump:
		cmp    $0x000001,%ax
		jb     _06022a_jump
		jbe    _0602d1_jump
		jmp    _0602f2_jump

	_06022a_jump:
		test   %ax,%ax
		je     _0602ad_jump
		jmp    _06038b_jump

	_060238_jump:
		mov    %edx,%eax
		call   _01dc20_func
		test   %ax,%ax
		je     _060384_jump
		orb    $0x000002,0x000081(%edx)
		jmp    _06038b_jump

	_060254_jump:
		mov    0x000081(%edx),%cl
		test   $0x000001,%cl
		je     _06026f_jump
		mov    %cl,%al
		or     $0x000002,%al
		mov    %al,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06026f_jump:
		mov    %cl,%ch
		and    $0x0000fd,%ch
		mov    %ch,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060280_jump:
		mov    0x000081(%edx),%ah
		test   $0x000010,%ah
		jne    _06029c_jump
		mov    %ah,%bh
		or     $0x000002,%bh
		mov    %bh,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06029c_jump:
		mov    %ah,%bl
		and    $0x0000fd,%bl
		mov    %bl,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0602ad_jump:
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		mov    0x000050(%edx),%cl
		shr    $0x000007,%al
		cmp    %cl,%al
		jne    _060384_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0602d1_jump:
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		call   _06b8d0_func
		test   %ax,%ax
		jne    _060384_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0602f2_jump:
		mov    %edx,%eax
		mov    0x000081(%edx),%bl
		call   _01dbe4_func
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		shl    $0x000004,%bl
		mov    0x000050(%edx),%ah
		shr    $0x000007,%bl
		cmp    %ah,%al
		jne    _060321_jump
		orb    $0x000002,0x000081(%edx)
		jmp    _060328_jump

	_060321_jump:
		andb   $0x0000fd,0x000081(%edx)

	_060328_jump:
		mov    %bl,%al
		mov    0x000081(%edx),%ch
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		mov    %ch,%ah
		mov    %ch,0x000081(%edx)
		or     %al,%ah
		mov    %ah,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06034e_jump:
		xor    %eax,%eax
		mov    0x000050(%edx),%cx
		mov    0x00006d(%edx),%al
		cmp    %cx,%ax
		jne    _060384_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060369_jump:
		xor    %eax,%eax
		mov    0x000050(%edx),%bx
		mov    0x00006c(%edx),%al
		cmp    %bx,%ax
		jne    _060384_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060384_jump:
		andb   $0x0000fd,0x000081(%edx)

	_06038b_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060394_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		mov    0x000010(%eax),%edx
		sar    $0x000010,%ebx
		mov    (%edx,%ebx,1),%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %dl,0x000070(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		call   *_097000_data(,%edx,4)
		pop    %edx
		pop    %ebx
		ret    



_0603c0_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		mov    0x000010(%eax),%edx
		sar    $0x000010,%ebx
		mov    (%edx,%ebx,1),%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %dl,0x000070(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		call   *_097004_data(,%edx,4)
		pop    %edx
		pop    %ebx
		ret    



_0603ec_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		cmpl   $0x000000,0x000010(%eax)
		je     _06042d_jump
		testb  $0x000010,0x000081(%eax)
		je     _060431_jump
		mov    0x000048(%edx),%ax
		mov    %eax,%ebx
		dec    %ebx
		mov    %bx,0x000048(%edx)
		test   %ax,%ax
		jne    _060431_jump

	_06040f_jump:
		mov    %edx,%eax
		call   _060394_func
		xor    %eax,%eax
		mov    0x000070(%edx),%al
		imul   $0x00000c,%eax,%ebx
		mov    %edx,%eax
		call   *_097008_data(%ebx)
		test   %al,%al
		jne    _06040f_jump
		pop    %edx
		pop    %ebx
		ret    

	_06042d_jump:
		movb   $0x00001e,0x000070(%eax)

	_060431_jump:
		pop    %edx
		pop    %ebx
		ret    



_060434_func:
		push   %ebx
		push   %ecx
		mov    0x00007c(%eax),%dh
		xor    %ebx,%ebx
		inc    %dh
		mov    %dh,%bl
		shl    $0x000002,%ebx
		mov    %dh,0x00007c(%eax)
		lea    (%eax,%ebx,1),%ecx
		mov    0x000046(%eax),%bx
		mov    %bx,0x000018(%ecx)
		xor    %ebx,%ebx
		mov    0x00007c(%eax),%bl
		xor    %dh,%dh
		mov    %dx,0x00001a(%eax,%ebx,4)
		pop    %ecx
		pop    %ebx
		ret    



_060460_func:
		push   %ecx
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		mov    %dl,0x000008(%esp)
		mov    %bl,(%esp)
		mov    0x000046(%eax),%bx
		mov    0x000081(%eax),%al
		shl    $0x000003,%al
		shr    $0x000007,%al
		mov    %al,0x000004(%esp)

	_060481_jump:
		mov    %ecx,%eax
		call   _0603c0_func
		cmp    0x000046(%ecx),%bx
		je     _0604a6_jump
		cmpb   $0x00000b,0x000070(%ecx)
		jne    _060481_jump
		mov    0x000044(%ecx),%eax
		mov    0x000010(%ecx),%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,1),%al
		cmp    0x000008(%esp),%al
		jne    _060481_jump

	_0604a6_jump:
		cmpb   $0x000000,(%esp)
		je     _0604f5_jump
		cmp    0x000046(%ecx),%bx
		je     _0604f9_jump
		mov    0x000081(%ecx),%bl
		movw   $0x000000,0x000048(%ecx)
		or     $0x000010,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _0603ec_func
		mov    0x000004(%esp),%al
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000ef,%bh
		shl    $0x000004,%al
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		add    $0x00000c,%esp
		pop    %ecx
		ret    

	_0604f5_jump:
		movb   $0x00001e,0x000070(%ecx)

	_0604f9_jump:
		add    $0x00000c,%esp
		pop    %ecx
		ret    



_060500_func:
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %dl,(%esp)
		mov    $0x000001,%edx
		call   _060434_func
		and    $_0000ff_case,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    (%esp),%dl
		call   _060460_func
		add    $0x000004,%esp
		pop    %ecx
		ret    



_060530_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000081(%edx),%bl
		add    $0x000081,%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		mov    %bh,(%eax)
		or     %dl,%cl
		mov    %cl,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060560_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x00006c(%eax),%al
		cmp    $0x000003,%al
		jb     _06057a_jump
		jbe    _0605d1_jump
		cmp    $0x000005,%al
		je     _060619_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06057a_jump:
		cmp    $0x000001,%al
		jne    _0606aa_jump
		cmpb   $0x00000a,_0ce950_data
		jb     _0605ba_jump
		xor    %eax,%eax
		mov    _0ce950_data,%al
		mov    $0x000002,%edx
		mov    %ax,0x000052(%ecx)
		mov    %ecx,%eax
		mov    $0x000009,%ebx
		call   _01d434_func
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0605ba_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d434_func
		andb   $0x0000f7,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0605d1_jump:
		mov    $0x00000a,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		cmpb   $0x000000,_0cf3ef_data
		jne    _0606aa_jump
		xor    %edx,%edx
		mov    0x000050(%ecx),%eax
		mov    _0ce950_data,%dl
		sar    $0x000010,%eax
		sub    %edx,%eax
		cmp    $0x00000a,%eax
		jge    _0606aa_jump
		mov    %dl,%cl
		dec    %cl
		mov    %cl,_0ce950_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060619_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _060641_jump
		mov    _0ce0b0_data,%dl
		cmp    $0x00000b,%dl
		je     _060641_jump
		cmp    $0x00000c,%dl
		je     _060641_jump
		mov    $0x00000b,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func

	_060641_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ecx),%eax
		mov    0x00000a(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jl     _0606aa_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d434_func
		mov    %ecx,%eax
		call   _079d94_func
		call   _01cd18_func
		mov    _0ce0c5_data,%bl
		mov    _0ce4d9_data,%al
		or     $0x000001,%bl
		mov    %al,_0cf475_data
		mov    _0cf474_data,%al
		mov    %bl,_0ce0c5_data
		mov    %al,_0cf477_data
		call   _03ca10_func

	_0606aa_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0606b0_switch:
		.long   _06071a_case
		.long   _060754_case
		.long   _060789_case
		.long   _06076b_case
		.long   _06077f_case
		.long   _060789_case

_0606c8_switch:
		.long   _060734_case
		.long   _060789_case
		.long   _06073c_case
		.long   _060789_case
		.long   _060789_case
		.long   _060789_case
		.long   _060789_case
		.long   _060789_case
		.long   _060789_case
		.long   _060744_case
		.long   _06074c_case




_0606f4_func:
		push   %ebx
		push   %edx
		mov    %al,%dl
		mov    _0cf282_data,%bx
		dec    %ebx
		xor    %eax,%eax
		cmp    $0x000005,%bx
		ja     _060789_case
		and    $0x00ffff,%ebx
		jmp    *%cs:_0606b0_switch(,%ebx,4)

	_06071a_case:
		sub    $0x000002,%dl
		cmp    $0x00000a,%dl
		ja     _060789_case
		and    $_0000ff_case,%edx
		jmp    *%cs:_0606c8_switch(,%edx,4)

	_060734_case:
		mov    $0x000015,%eax
		pop    %edx
		pop    %ebx
		ret    

	_06073c_case:
		mov    $0x000014,%eax
		pop    %edx
		pop    %ebx
		ret    

	_060744_case:
		mov    $0x000012,%eax
		pop    %edx
		pop    %ebx
		ret    

	_06074c_case:
		mov    $0x000013,%eax
		pop    %edx
		pop    %ebx
		ret    

	_060754_case:
		cmp    $0x000004,%dl
		jb     _060789_case
		jbe    _060763_jump
		cmp    $0x000009,%dl
		je     _060744_case
		pop    %edx
		pop    %ebx
		ret    

	_060763_jump:
		mov    $0x000011,%eax
		pop    %edx
		pop    %ebx
		ret    

	_06076b_case:
		cmp    $0x000003,%dl
		jb     _060789_case
		jbe    _060784_jump
		cmp    $0x000009,%dl
		jne    _060789_case
		mov    $0x00000d,%eax
		pop    %edx
		pop    %ebx
		ret    

	_06077f_case:
		cmp    $0x000002,%dl
		jne    _060789_case

	_060784_jump:
		mov    $0x00000c,%eax

	_060789_case:
		pop    %edx
		pop    %ebx
		ret    



_06078c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		testb  $0x000002,_0cf221_data
		jne    _0607cc_jump
		testb  $0x000001,_0ce0c5_data
		jne    _0607d0_jump
		mov    _0ce0b1_data,%dh
		test   %dh,%dh
		je     _0607bd_jump
		cmp    $0x000003,%dh
		je     _0607bd_jump
		mov    $0x000001,%eax
		jmp    _0607bf_jump

	_0607bd_jump:
		xor    %eax,%eax

	_0607bf_jump:
		test   %eax,%eax
		jne    _0607cc_jump
		cmpb   $0x000000,_0cf446_data
		je     _0607d0_jump

	_0607cc_jump:
		movb   $0x000000,0x00007b(%esi)

	_0607d0_jump:
		mov    _0ce0c5_data,%al
		mov    0x00006c(%esi),%cl
		and    $0x0000fe,%al
		test   %cl,%cl
		jne    _0608a3_jump
		testb  $0x000001,_0ce0c5_data
		je     _06082d_jump
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    _0ce950_data,%dl
		mov    _0cf446_data,%bl
		add    %ebx,%edx
		cmp    $0x00000a,%edx
		jl     _060823_jump
		mov    $0x00012c,%edx
		mov    %esi,%eax
		mov    %dx,_095e20_data
		mov    $0x00000b,%edx
		call   _01d434_func
		movb   $0x0000c8,0x00007f(%esi)
		jmp    _060aca_jump

	_060823_jump:
		mov    %al,_0ce0c5_data
		jmp    _060aca_jump

	_06082d_jump:
		cmpb   $0x000001,0x00007b(%esi)
		jb     _060874_jump
		cmpb   $0x000014,0x00006b(%esi)
		jae    _060874_jump
		cmpb   $0x00000a,_0ce950_data
		jb     _06084e_jump
		movb   $0x000014,0x00006b(%esi)
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06084e_jump:
		mov    $0x000096,%eax
		mov    $0x00000a,%edx
		mov    %ax,_095e20_data
		mov    %esi,%eax
		call   _01d434_func
		andb   $0x0000f7,0x000081(%esi)
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060874_jump:
		mov    0x00007b(%esi),%ah
		test   %ah,%ah
		jne    _060aca_jump
		cmpb   $0x000013,0x00006b(%esi)
		jne    _060aca_jump
		mov    %ah,0x00006b(%esi)
		test   %ah,%ah
		jne    _060aca_jump
		andb   $0x0000fe,_0ce0c5_data
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0608a3_jump:
		mov    0x00007b(%esi),%ch
		test   %ch,%ch
		je     _060aa7_jump
		testb  $0x000001,_0ce0c5_data
		je     _0608d9_jump
		cmp    $0x00000b,%cl
		jne    _0608d9_jump
		mov    0x00007f(%esi),%bl
		dec    %bl
		mov    %bl,0x00007f(%esi)
		jne    _060aca_jump
		mov    $0x000001,%edx
		mov    %al,_0ce0c5_data
		jmp    _060ac3_jump

	_0608d9_jump:
		mov    0x00006c(%esi),%cl
		cmp    $0x000001,%cl
		jne    _060a98_jump
		cmpb   $0x000000,_0ce0b1_data
		jne    _0608ff_jump
		mov    _0ce0b0_data,%al
		test   %al,%al
		je     _06090c_jump
		cmp    %cl,%al
		je     _06090c_jump
		cmp    $0x000002,%al
		je     _06090c_jump

	_0608ff_jump:
		cmpb   $0x000001,_0ce0b1_data
		jne    _060aca_jump

	_06090c_jump:
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		mov    _0ce06c_data,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    _0ce0ac_data,%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    %edx,%ebx
		sar    %eax
		sub    %eax,%ebx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0ce070_data,%ecx
		mov    _0ce0ad_data,%al
		add    %eax,%ecx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _06097a_jump
		neg    %eax

	_06097a_jump:
		cmp    $0x000008,%eax
		jg     _060aca_jump
		movswl %bx,%eax
		test   %eax,%eax
		jge    _06098c_jump
		neg    %eax

	_06098c_jump:
		cmp    $0x000010,%eax
		jg     _06099a_jump
		testb  $0x000008,_0ce0c5_data
		jne    _0609b9_jump

	_06099a_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _0609a3_jump
		neg    %eax

	_0609a3_jump:
		cmp    $0x000010,%eax
		jg     _060aca_jump
		testb  $0x000008,_0ce0c5_data
		jne    _060aca_jump

	_0609b9_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _0609c2_jump
		neg    %eax

	_0609c2_jump:
		cmp    $0x000010,%eax
		jg     _060a02_jump
		testb  $0x000008,_0ce0c5_data
		je     _060a02_jump
		mov    0x000081(%esi),%dh
		and    $0x0000f7,%dh
		xor    %eax,%eax
		mov    %dh,0x000081(%esi)
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0ce0ac_data,%al
		sub    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		sub    %eax,%edx
		lea    -0x00000c(%edx),%eax
		jmp    _060a49_jump

	_060a02_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _060a0b_jump
		neg    %eax

	_060a0b_jump:
		cmp    $0x000010,%eax
		jg     _060a4e_jump
		testb  $0x000008,_0ce0c5_data
		jne    _060a4e_jump
		mov    0x000081(%esi),%dl
		or     $0x000008,%dl
		xor    %eax,%eax
		mov    %dl,0x000081(%esi)
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0ce0ac_data,%al
		sub    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %edx,%eax
		add    $0x00000c,%eax

	_060a49_jump:
		mov    %eax,_0ce06c_data

	_060a4e_jump:
		xor    %eax,%eax
		mov    _0ce070_data,%edx
		mov    _0ce0ad_data,%al
		add    %eax,%edx
		sar    $0x000004,%edx
		shl    $0x000004,%edx
		sub    %eax,%edx
		mov    %edx,_0ce070_data
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %dx,_0ce084_data
		mov    %dx,_0cf250_data
		mov    %dx,_0ce086_data
		mov    %dx,_0ce096_data
		call   _060560_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060a98_jump:
		mov    %esi,%eax
		call   _060560_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060aa7_jump:
		cmp    $0x00000a,%cl
		je     _060aca_jump
		test   %ch,%ch
		jne    _060aca_jump
		cmpb   $0x000003,_0ce0b1_data
		je     _060aca_jump
		cmp    $0x000001,%cl
		je     _060aca_jump
		mov    $0x000001,%edx

	_060ac3_jump:
		mov    %esi,%eax
		call   _01d434_func

	_060aca_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060ad4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		call   _02f788_func
		mov    0x00006d(%esi),%ah
		test   %ah,%ah
		jne    _060ba3_jump
		cmpb   $0x000004,0x00006c(%esi)
		jne    _060ba3_jump
		mov    $0x000001,%dh
		mov    _0cc7a0_data,%ecx
		mov    %dh,_0cf431_data
		mov    _0cc7a4_data,%dx
		xor    %al,%al
		test   %dx,%dx
		jle    _060ba3_jump

	_060b14_jump:
		cmpw   $0x000026,0x000060(%ecx)
		jne    _060b93_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _060b93_jump
		mov    0x000081(%ecx),%bl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _01f3d4_func
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d444_func
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		add    $0x000032,%eax
		movw   $0x00fffe,0x000042(%ecx)
		mov    $0x000003,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		movw   $0x000001,0x000040(%ecx)
		call   _01dc5c_func
		mov    %esi,%eax
		call   _01d434_func
		movw   $0x00fff8,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060b93_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _060b14_jump

	_060ba3_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060ba8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d444_func
		movb   $0x000000,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_060bc0_func:
		push   %esi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %ebx,0x000004(%esp)
		mov    %ecx,(%esp)
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _060cc8_jump

	_060be5_jump:
		cmpw   $0x000000,0x000060(%ecx)
		jne    _060bf2_jump
		cmp    $0x000001,%dx
		je     _060c07_jump

	_060bf2_jump:
		cmpw   $0x000009,0x000060(%ecx)
		jne    _060cb8_jump
		cmp    $0x000002,%dx
		jne    _060cb8_jump

	_060c07_jump:
		cmpw   $0x000000,0x00003c(%ecx)
		jg     _060cb8_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _060cb8_jump
		andb   $0x0000bb,0x000081(%ecx)
		mov    $0x000002,%ebx
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    %ebx,%edx
		movw   $0x000000,0x00005e(%ecx)
		call   _01d444_func
		movl   $0x000001,0x000030(%ecx)
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %edx,0x000028(%ecx)
		mov    0x000069(%ecx),%al
		mov    0x00002c(%esi),%esi
		sar    $0x000002,%eax
		sub    %eax,%esi
		mov    %ecx,%eax
		mov    %esi,0x00002c(%ecx)
		call   _01dbe4_func
		mov    (%esp),%eax
		mov    0x000081(%ecx),%dh
		mov    %ax,0x000042(%ecx)
		test   $0x000008,%dh
		je     _060c97_jump
		mov    0x000004(%esp),%eax
		jmp    _060ca1_jump

	_060c97_jump:
		mov    0x000004(%esp),%eax
		mov    %ax,0x000040(%ecx)
		neg    %eax

	_060ca1_jump:
		mov    %ax,0x000040(%ecx)
		mov    %ecx,%eax
		call   _01dc5c_func
		andb   $0x0000ef,0x000081(%ecx)
		add    $0x000008,%esp
		pop    %esi
		ret    

	_060cb8_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jl     _060be5_jump

	_060cc8_jump:
		add    $0x000008,%esp
		pop    %esi
		ret    



_060cd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		call   _02f788_func
		cmpb   $0x000000,_0ce172_data
		jne    _060cf4_jump
		cmpb   $0x000000,_0ce174_data
		je     _060dcf_jump

	_060cf4_jump:
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		mov    %esp,%edx
		mov    %esi,%eax
		call   _07b560_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _060d12_jump
		neg    %eax

	_060d12_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jg     _060dc1_jump
		cmpw   $0x00000f,0x000008(%esp)
		jge    _060dc1_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _060d39_jump
		cmpb   $0x000000,0x00006c(%esi)
		je     _060d4f_jump

	_060d39_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _060d45_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _060d4f_jump

	_060d45_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _060de7_jump

	_060d4f_jump:
		mov    _0ce0d0_data,%eax
		mov    0x000081(%eax),%ah
		shl    $0x000004,%ah
		shr    $0x000007,%ah
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%ah
		je     _060de7_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		movw   $0x000000,0x000040(%esi)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%esi)
		call   _01d444_func
		andb   $0x0000ef,0x000081(%esi)
		mov    0x000081(%esi),%cl
		mov    $0x000001,%ebx
		test   $0x000008,%cl
		setne  %al
		and    $_0000ff_case,%eax
		xor    %edx,%edx
		add    $0x000002,%eax
		mov    %al,%dl
		mov    %esi,%eax
		call   _060460_func
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060dc1_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _060de7_jump
		cmpb   $0x000010,0x00006c(%esi)
		jne    _060de7_jump
		jmp    _060ddb_jump

	_060dcf_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _060de7_jump
		cmpb   $0x000010,0x00006c(%esi)
		jne    _060de7_jump

	_060ddb_jump:
		mov    $0x000011,%edx
		mov    %esi,%eax
		call   _01d434_func

	_060de7_jump:
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060df0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    _0ce0d0_data,%eax
		mov    0x000034(%eax),%eax
		mov    0x000034(%ecx),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    $0x00001e,%eax
		cmp    %edx,%eax
		jle    _060e45_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _060e45_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _060e45_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _060460_func
		movw   $0x000001,_0cf184_data
		mov    _0cf229_data,%dh
		or     $0x000004,%dh
		movb   $0x000002,0x00006e(%ecx)
		mov    %dh,_0cf229_data

	_060e45_jump:
		pop    %ecx
		pop    %ebx
		ret    



_060e48_func:
		push   %edx
		mov    0x000076(%eax),%dl
		cmp    $0x000002,%dl
		ja     _060e58_jump
		dec    %dl
		mov    %dl,0x00006b(%eax)
		pop    %edx
		ret    

	_060e58_jump:
		sub    $0x000003,%dl
		mov    %dl,0x00006b(%eax)
		pop    %edx
		ret    



_060e60_func:
		mov    0x000076(%eax),%dl
		cmp    $0x000002,%dl
		je     _060e6d_jump
		cmp    $0x000004,%dl
		jne    _060e70_jump

	_060e6d_jump:
		decb   0x000076(%eax)

	_060e70_jump:
		ret    



_060e74_func:
		push   %edx
		mov    %eax,%edx
		call   _02f788_func
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		pop    %edx
		ret    



_060e8c_func:
		push   %ebx
		mov    %eax,%ebx
		testb  $0x000080,_0cf220_data
		je     _060ebf_jump
		cmpw   $0x000003,_0cf254_data
		je     _060ebf_jump
		mov    0x000032(%ebx),%edx
		mov    $0x0000c2,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		mov    _0ce0d0_data,%eax
		mov    0x000034(%ebx),%dx
		mov    %dx,0x00004a(%eax)

	_060ebf_jump:
		pop    %ebx
		ret    



_060ec4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		call   _07af48_func
		mov    0x000032(%ebx),%edx
		mov    $0x0000c2,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		mov    _0cf220_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _060f10_jump
		call   _057a14_func
		mov    _0cf220_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,1)

	_060f10_jump:
		movw   $0x00012c,_095e20_data
		call   _07b158_func
		mov    %ax,_0cf222_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _060f2f_jump
		call   _057a14_func

	_060f2f_jump:
		mov    0x000081(%ebx),%ch
		mov    0x000032(%ebx),%eax
		and    $0x0000fb,%ch
		sar    $0x000010,%eax
		mov    %ch,0x000081(%ebx)
		call   _073b20_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060f50_func:
		push   %ebx
		cmp    $0x000004,%dx
		jne    _060f8f_jump
		cmpb   $0x000005,0x00006c(%eax)
		jne    _060f8f_jump
		mov    _0ce0d0_data,%edx
		mov    0x000040(%edx),%bx
		test   %bx,%bx
		jl     _060f85_jump
		jle    _060f75_jump
		mov    $0x000009,%edx
		jmp    _060f8a_jump

	_060f75_jump:
		testb  $0x000008,0x000081(%edx)
		je     _060f85_jump
		mov    $0x000009,%edx
		jmp    _060f8a_jump

	_060f85_jump:
		mov    $0x000006,%edx

	_060f8a_jump:
		call   _01d434_func

	_060f8f_jump:
		pop    %ebx
		ret    



_060f94_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _07af48_func
		mov    _0cf220_data,%ah
		mov    0x000081(%edx),%bl
		or     $0x000080,%ah
		and    $0x0000fb,%bl
		mov    %ah,_0cf220_data
		mov    %bl,0x000081(%edx)
		pop    %edx
		pop    %ebx
		ret    

_060fc0_switch:
		.long   _06107b_case
		.long   _061091_case
		.long   _061081_case
		.long   _061091_case
		.long   _061081_case
		.long   _061091_case
		.long   _061091_case
		.long   _061087_case
		.long   _061091_case
		.long   _06108d_case
		.long   _061091_case
		.long   _06108d_case




_060ff0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000007,0x00006c(%eax)
		jne    _061044_jump
		testb  $0x000001,_0cf220_data
		jne    _061012_jump
		mov    _0ce0d0_data,%eax
		movb   $0x000008,0x00006e(%eax)
		jmp    _061091_case

	_061012_jump:
		mov    _0ce0d0_data,%ebx
		mov    0x00006e(%ebx),%al
		cmp    $0x000003,%al
		jb     _06102a_jump
		jbe    _061038_jump
		cmp    $0x000005,%al
		je     _06103e_jump
		jmp    _061091_case

	_06102a_jump:
		cmp    $0x000001,%al
		jne    _061091_case
		movb   $0x000008,0x00006e(%ebx)
		jmp    _061091_case

	_061038_jump:
		movb   $0x00000a,0x00006e(%ebx)
		jmp    _061091_case

	_06103e_jump:
		movb   $0x00000c,0x00006e(%ebx)
		jmp    _061091_case

	_061044_jump:
		cmpb   $0x00000e,0x00006c(%edx)
		jne    _061091_case
		testb  $0x000001,_0cf220_data
		jne    _06105e_jump
		mov    _0ce0d0_data,%eax
		movb   $0x000001,0x00006e(%eax)
		jmp    _061091_case

	_06105e_jump:
		mov    _0ce0d0_data,%eax
		mov    0x00006e(%eax),%bl
		dec    %bl
		cmp    $0x00000b,%bl
		ja     _061091_case
		and    $_0000ff_case,%ebx
		jmp    *%cs:_060fc0_switch(,%ebx,4)

	_06107b_case:
		movb   $0x000003,0x00006e(%eax)
		jmp    _061091_case

	_061081_case:
		movb   $0x000005,0x00006e(%eax)
		jmp    _061091_case

	_061087_case:
		movb   $0x00000a,0x00006e(%eax)
		jmp    _061091_case

	_06108d_case:
		movb   $0x00000c,0x00006e(%eax)

	_061091_case:
		mov    %edx,%eax
		call   _07af48_func
		mov    _0cf220_data,%al
		mov    0x000081(%edx),%ch
		or     $0x000001,%al
		and    $0x0000fb,%ch
		mov    %al,_0cf220_data
		mov    _0ce0d0_data,%eax
		mov    %ch,0x000081(%edx)
		mov    0x00006e(%eax),%bl
		mov    %bl,0x00006c(%eax)
		mov    %bl,_0ce170_data
		mov    0x000032(%edx),%edx
		mov    $0x00000b,%eax
		sar    $0x000010,%edx
		mov    %bl,_0ce4d3_data
		call   _071b3c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0610e0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _07af48_func
		mov    0x000076(%edx),%al
		mov    _0ce0ba_data,%ah
		add    %al,%ah
		mov    _0ce953_data,%bl
		mov    %ah,_0ce0ba_data
		cmp    %bl,%ah
		jbe    _06110a_jump
		mov    %bl,_0ce0ba_data

	_06110a_jump:
		andb   $0x0000fb,0x000081(%edx)
		mov    0x000032(%edx),%edx
		mov    $0x000008,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		pop    %edx
		pop    %ebx
		ret    



_061124_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000032(%eax),%edx
		mov    $0x0000d5,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		mov    %ebx,%eax
		call   _07af48_func
		mov    _0cf220_data,%ah
		mov    0x000081(%ebx),%dl
		or     $0x000008,%ah
		and    $0x0000fb,%dl
		mov    %ah,_0cf220_data
		mov    %dl,0x000081(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_061160_func:
		push   %edx
		orb    $0x000040,_0cf220_data
		mov    0x000081(%eax),%dh
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%eax)
		mov    0x000032(%eax),%edx
		mov    $0x00000a,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		pop    %edx
		ret    



_061190_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000032(%eax),%edx
		mov    $0x00000e,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		mov    $0x000017,%edx
		mov    %ebx,%eax
		call   _01d434_func
		cmpw   $0x000000,_0cf1fc_data
		je     _0611f0_jump
		mov    _0cf447_data,%dl
		dec    %dl
		mov    %dl,_0cf447_data
		mov    _0cf446_data,%dh
		inc    %dh
		mov    %dh,_0cf446_data
		mov    %dh,_0ce950_data
		test   %dl,%dl
		jne    _0611f6_jump
		movw   $0x00ffe0,_0cf206_data
		call   _03c9e8_func
		jmp    _0611f6_jump

	_0611f0_jump:
		incb   _0ce950_data

	_0611f6_jump:
		cmpb   $0x000063,_0ce950_data
		jbe    _061246_jump
		mov    %ebx,%eax
		call   _07af48_func
		cmpw   $0x000000,_0cf1fc_data
		je     _06121b_jump
		movw   $0x00ffff,_0cf222_data
		jmp    _061226_jump

	_06121b_jump:
		call   _07b158_func
		mov    %ax,_0cf222_data

	_061226_jump:
		mov    _0cf220_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _061238_jump
		call   _057a14_func

	_061238_jump:
		movb   $0x000001,_0cf48b_data
		subb   $0x000064,_0ce950_data

	_061246_jump:
		mov    0x000038(%ebx),%ax
		add    $0x00000a,%eax
		movswl %ax,%edx
		mov    0x000036(%ebx),%ax
		add    $0x00000a,%eax
		cwtl   
		call   _07b640_func
		pop    %edx
		pop    %ebx
		ret    



_061264_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _07af48_func
		mov    _0cf238_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _0612a1_jump
		mov    $0x000004,%ah
		mov    %ah,_0ce0ba_data
		mov    %ah,_0ce953_data
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%ebx
		andb   $0x0000fb,0x000081(%ebx,%eax,1)

	_0612a1_jump:
		movw   $0x00012c,_095e20_data
		call   _07b158_func
		mov    %ax,_0cf23a_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _0612c7_jump
		mov    $0x000004,%al
		mov    %al,_0ce0ba_data
		mov    %al,_0ce953_data

	_0612c7_jump:
		andb   $0x0000fb,0x000081(%edx)
		mov    0x000032(%edx),%edx
		mov    $0x00000c,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		mov    _0cf254_data,%cx
		cmp    $0x000003,%cx
		je     _0612ff_jump
		cmp    $0x000004,%cx
		je     _0612ff_jump
		mov    $0x000004,%bh
		mov    %bh,_0ce0ba_data
		mov    %bh,_0ce953_data

	_0612ff_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061304_func:
		push   %edx
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		call   _02eac8_func
		pop    %edx
		ret    



_061324_func:
		push   %ebx
		push   %edx
		mov    0x000076(%eax),%dl
		cmp    0x000077(%eax),%dl
		jae    _061340_jump
		mov    %dl,%bl
		dec    %bl
		mov    %bl,0x000076(%eax)
		cmp    $0x000001,%bl
		jae    _061340_jump
		mov    0x000077(%eax),%dl
		mov    %dl,0x000076(%eax)

	_061340_jump:
		pop    %edx
		pop    %ebx
		ret    



_061344_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0cf278_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06137d_jump
		mov    0x000076(%edx),%al
		cmp    0x000077(%edx),%al
		jne    _06137d_jump
		mov    %edx,%eax
		call   _07af48_func
		movw   $0x000000,0x000040(%edx)
		mov    0x000076(%edx),%bl
		movw   $0x000000,0x000042(%edx)
		dec    %bl
		mov    %bl,0x000076(%edx)
		call   _05a510_func

	_06137d_jump:
		pop    %edx
		pop    %ebx
		ret    



_061380_func:
		call   _061390_func
		xor    %ah,%ah
		mov    %ah,_0cf48b_data
		ret    



_061390_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000002,_0ce0b1_data
		jne    _061409_jump
		cmpb   $0x000008,_0ce0b0_data
		setne  %al
		and    $_0000ff_case,%eax
		je     _061409_jump
		cmpw   $0x000000,_0ce084_data
		je     _0613d8_jump
		cmpw   $0x000000,_0cf250_data
		jne    _0613d8_jump
		mov    _0ce082_data,%eax
		mov    _0ce06c_data,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,_0ce06c_data

	_0613d8_jump:
		mov    $0x000001,%cl
		mov    _0ce086_data,%bx
		xor    %eax,%eax
		mov    %cl,_0cf468_data
		mov    %ax,_0ce084_data
		mov    %ax,_0cf250_data
		test   %bx,%bx
		jge    _061736_jump
		mov    %ax,_0ce086_data
		jmp    _061736_jump

	_061409_jump:
		mov    _0ce0b1_data,%dh
		test   %dh,%dh
		je     _06141c_jump
		cmp    $0x000001,%dh
		jne    _061599_jump

	_06141c_jump:
		mov    _0ce098_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _061599_jump
		cmpb   $0x000000,_0cf453_data
		jne    _061599_jump
		call   _0714c0_func
		cmpb   $0x000000,_0cf465_data
		je     _06145e_jump
		mov    $0x000007,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		jmp    _06147a_jump

	_06145e_jump:
		mov    $0x000017,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		xor    %bh,%bh
		mov    %bh,_0ce0af_data

	_06147a_jump:
		cmpb   $0x000000,_0ce172_data
		je     _0614ab_jump
		mov    _0ce0d0_data,%eax
		mov    0x000081(%eax),%ch
		xor    %dl,%dl
		and    $0x0000fb,%ch
		mov    %dl,_0ce172_data
		mov    %ch,0x000081(%eax)
		call   _07af48_func
		xor    %eax,%eax
		call   _065de4_func

	_0614ab_jump:
		call   _07bc28_func
		cmpb   $0x000001,_0cf44b_data
		jne    _0614e7_jump
		mov    _0cf21e_data,%ax
		xor    %esi,%esi
		mov    %ax,_0cf220_data
		xor    %eax,%eax
		mov    %si,_0cf250_data
		call   _06c468_func
		mov    $0x000001,%eax
		xor    %bl,%bl
		call   _06c468_func
		mov    %bl,_0cf44b_data

	_0614e7_jump:
		mov    _0cf220_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _061520_jump
		movw   $0x00ffff,_0cf222_data
		call   _057a14_func
		mov    _0cf220_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,4)

	_061520_jump:
		mov    _0cf238_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06155c_jump
		mov    $0xffffffff,%eax
		mov    $0x000004,%cl
		mov    %ax,_0cf23a_data
		mov    _0cc7a0_data,%eax
		mov    %cl,_0ce0ba_data
		mov    -0x000003(%eax),%dl
		sub    $0x000084,%eax
		and    $0x0000fb,%dl
		mov    %cl,_0ce953_data
		mov    %dl,0x000081(%eax)

	_06155c_jump:
		xor    %edx,%edx
		mov    %dx,_0cf250_data
		mov    %dx,_0ce084_data
		cmpb   $0x000000,_0cf465_data
		jne    _06158f_jump
		cmpb   $0x000000,_0cf44b_data
		jne    _06158f_jump
		cmpw   $0x000006,_0cf282_data
		je     _06158f_jump
		movb   $0x000002,_0cf453_data

	_06158f_jump:
		call   _01cbb0_func
		jmp    _061736_jump

	_061599_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _0615ab_jump
		cmpb   $0x000017,_0ce0b0_data
		je     _0615c5_jump

	_0615ab_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _0616c3_jump
		cmpb   $0x000007,_0ce0b0_data
		jne    _0616c3_jump

	_0615c5_jump:
		mov    $_0ce044_data,%eax
		call   _01cca0_func
		test   %al,%al
		je     _0615f3_jump
		cmpb   $0x000000,_0cf465_data
		je     _0615e6_jump
		cmpw   $0x000006,_0cf282_data
		je     _0615ed_jump

	_0615e6_jump:
		mov    $0x000001,%eax
		jmp    _0615ef_jump

	_0615ed_jump:
		xor    %eax,%eax

	_0615ef_jump:
		test   %eax,%eax
		jne    _061626_jump

	_0615f3_jump:
		cmpb   $0x000000,_0cf465_data
		je     _06163d_jump
		cmpw   $0x000006,_0cf282_data
		jne    _06163d_jump
		call   _037514_func
		test   %al,%al
		jne    _061626_jump
		cmpb   $0x000000,_0cf435_data
		je     _06163d_jump
		mov    $_0ce044_data,%eax
		call   _01cca0_func
		test   %al,%al
		je     _06163d_jump

	_061626_jump:
		call   _03ca10_func
		xor    %dh,%dh
		call   _07b8b0_func
		mov    %dh,_0cf453_data
		jmp    _061736_jump

	_06163d_jump:
		xor    %eax,%eax
		mov    _0ce08c_data,%edx
		mov    %ax,_0ce084_data
		mov    %ax,_0ce086_data
		mov    %ax,_0cf250_data
		sar    $0x000010,%edx
		mov    %ax,_0cf26e_data
		cmp    $0xffffffff,%edx
		je     _061736_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0ce08c_data,%ebx
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		sar    $0x000010,%ebx
		movw   $0x000000,0x000042(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ce08c_data,%ebx
		sar    $0x000010,%ebx
		movw   $0x000000,0x000040(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ce08c_data,%ebx
		sar    $0x000010,%ebx
		movb   $0x000000,0x000071(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movb   $0x000000,0x000072(%edx,%eax,4)
		jmp    _061736_jump

	_0616c3_jump:
		cmpb   $0x000006,_0ce0b1_data
		jne    _061736_jump
		cmpb   $0x00000e,_0ce0b0_data
		je     _0616f1_jump
		mov    $0x00000e,%edx
		mov    $_0ce044_data,%eax
		xor    %bl,%bl
		call   _01d434_func
		mov    %bl,_0ce0af_data
		call   _01cbb0_func

	_0616f1_jump:
		mov    $0x000002,%bh
		mov    _0ce0b0_data,%cl
		xor    %edx,%edx
		mov    %bh,_0cf453_data
		mov    %dx,_0cf250_data
		mov    %dx,_0ce084_data
		mov    %dx,_0ce086_data
		cmp    $0x00000e,%cl
		jne    _061736_jump
		mov    $_0ce044_data,%eax
		call   _01cca0_func
		test   %al,%al
		je     _061736_jump
		xor    %ch,%ch
		call   _07b8b0_func
		mov    %ch,_0cf453_data

	_061736_jump:
		cmpb   $0x000000,_0cf453_data
		je     _061767_jump
		xor    %esi,%esi
		mov    _0cf2a2_data,%ax
		mov    %si,_0cf2a4_data
		mov    %ax,_0cf2ae_data
		mov    _0cf29e_data,%ax
		mov    %si,_0cf2a6_data
		mov    %ax,_0cf2b0_data

	_061767_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06176c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpw   $0x000000,_0cf1fc_data
		je     _0617af_jump
		mov    _0cd2b0_data,%al
		xor    %edx,%edx
		xor    %edi,%edi
		mov    %al,_0ce950_data
		mov    %edx,_0cd2b0_data
		mov    $_0ce044_data,%eax
		mov    %di,_0cf292_data
		call   _079d94_func
		call   _0714c0_func
		call   _03ca10_func
		jmp    _061821_jump

	_0617af_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _0617c1_jump
		cmpb   $0x000008,_0ce0b0_data
		je     _061821_jump

	_0617c1_jump:
		cmpb   $_0000ff_case,_0ce0ba_data
		je     _061821_jump
		cmpb   $0x000000,_0cf453_data
		jne    _061821_jump
		call   _0714c0_func
		call   _03ca10_func
		mov    $_0ce4dc_data,%eax
		mov    $0x000001,%ebx
		call   _073674_func
		mov    %bx,_0cf288_data
		cmpb   $0x000000,_0cf48b_data
		je     _061821_jump
		decw   _0ce94a_data
		mov    _0ce948_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _061819_jump
		xor    %esi,%esi
		mov    %si,_0ce94a_data

	_061819_jump:
		xor    %cl,%cl
		mov    %cl,_0cf48b_data

	_061821_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061828_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _06187e_jump
		cmpb   $0x000004,0x00006c(%eax)
		jne    _06187e_jump
		call   _01cca0_func
		test   %al,%al
		je     _06187e_jump
		mov    _0cf229_data,%bl
		test   $0x000008,%bl
		jne    _06187e_jump
		mov    _0cf28a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		mov    $0x000001,%cl
		shl    $0x000005,%eax
		mov    %bl,%bh
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		or     $0x000008,%bh
		add    %edx,%eax
		mov    %bh,_0cf229_data
		call   _07bac4_func
		mov    %cl,_0cf431_data

	_06187e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061884_func:
		push   %edx
		cmpb   $0x000001,0x00006c(%eax)
		jne    _061895_jump
		mov    $0x000005,%edx
		call   _01d434_func

	_061895_jump:
		pop    %edx
		ret    



_061898_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000070(%eax)
		jne    _0618b1_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _0618be_jump

	_0618b1_jump:
		cmpb   $0x000001,0x000070(%esi)
		jne    _0618be_jump
		orb    $0x000008,0x000081(%esi)

	_0618be_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _061960_jump
		cmpb   $0x00000b,0x00006c(%esi)
		jne    _061960_jump
		cmpb   $0x000005,0x00006b(%esi)
		jb     _061949_jump
		cmpb   $0x000000,0x00007f(%esi)
		jne    _061949_jump
		mov    0x00007f(%esi),%dh
		mov    0x00007d(%esi),%bl
		inc    %dh
		inc    %bl
		mov    %dh,0x00007f(%esi)
		mov    %bl,0x00007d(%esi)
		cmp    $0x000002,%bl
		jbe    _0618f7_jump
		movb   $0x000001,0x00007d(%esi)

	_0618f7_jump:
		cmpb   $0x000001,0x000076(%esi)
		je     _061918_jump
		mov    $0xffffffff,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		mov    0x00007d(%esi),%dl
		call   _060bc0_func
		jmp    _061a8a_jump

	_061918_jump:
		mov    $0xfffffffe,%ecx
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _060bc0_func
		mov    $0xffffffff,%ecx
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _060bc0_func
		jmp    _061a8a_jump

	_061949_jump:
		cmpb   $0x000002,0x00006b(%esi)
		jae    _061a8a_jump
		movb   $0x000000,0x00007f(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061960_jump:
		mov    0x00006d(%esi),%ch
		test   %ch,%ch
		jne    _0619f8_jump
		cmpb   $0x000015,0x00006c(%esi)
		jne    _0619f8_jump
		cmpb   $0x000005,0x00006b(%esi)
		jb     _0619e1_jump
		cmpb   $0x000000,0x00007f(%esi)
		jne    _0619e1_jump
		mov    %ch,(%esp)
		mov    0x00007f(%esi),%ch
		inc    %ch
		mov    $0xfffffffc,%edi
		mov    %ch,0x00007f(%esi)

	_061991_jump:
		xor    %edx,%edx
		mov    (%esp),%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		inc    %edx
		xor    %dh,%dh
		mov    $0x000003,%eax
		mov    %edx,%ebx
		sub    %edx,%eax
		neg    %ebx
		movswl %ax,%edx
		movswl %bx,%ecx
		mov    %esi,%eax
		movswl %di,%ebx
		inc    %edi
		call   _060bc0_func
		movswl %di,%edx
		cmp    $0xfffffffe,%edx
		jne    _0619ce_jump
		mov    $0x000003,%edi

	_0619ce_jump:
		mov    (%esp),%ch
		inc    %ch
		mov    %ch,(%esp)
		cmp    $0x000004,%ch
		jae    _061a8a_jump
		jmp    _061991_jump

	_0619e1_jump:
		cmpb   $0x000002,0x00006b(%esi)
		jae    _061a8a_jump
		movb   $0x000000,0x00007f(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0619f8_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _061a55_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000003,%dl
		jne    _061a55_jump
		mov    0x00007f(%esi),%cl
		inc    %cl
		mov    %cl,0x00007f(%esi)
		cmp    0x00007d(%esi),%dl
		je     _061a22_jump
		cmp    $0x0000fd,%cl
		jb     _061a22_jump
		mov    %esi,%eax
		call   _07a980_func
		mov    %dl,0x00007d(%esi)

	_061a22_jump:
		movw   $0x000000,0x000040(%esi)
		mov    0x00006b(%esi),%ah
		movw   $0x000000,0x000042(%esi)
		cmp    $0x00000c,%ah
		jbe    _061a43_jump
		movb   $0x000003,0x00006b(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061a43_jump:
		cmp    $0x000001,%ah
		ja     _061a8a_jump
		movb   $0x000000,0x00007f(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061a55_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _061a8a_jump
		cmpw   $0x000000,0x000052(%esi)
		je     _061a65_jump
		incb   0x00007f(%esi)

	_061a65_jump:
		cmpb   $0x0000fe,0x00007f(%esi)
		jb     _061a7c_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _060460_func

	_061a7c_jump:
		mov    %esi,%eax
		call   _0552b4_func
		mov    %esi,%eax
		call   _025590_func

	_061a8a_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061a94_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		test   %dx,%dx
		jne    _061ae3_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _061aa9_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _061ab0_jump

	_061aa9_jump:
		mov    $0x000001,%eax
		jmp    _061ab2_jump

	_061ab0_jump:
		xor    %eax,%eax

	_061ab2_jump:
		test   %eax,%eax
		je     _061ae3_jump
		mov    $0x000001,%dh
		mov    %ecx,%eax
		mov    %dh,_0ce173_data
		call   _01e7ac_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _061ad7_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _061aed_jump

	_061ad7_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		jmp    _061aed_jump

	_061ae3_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_061aed_jump:
		mov    %ecx,%eax
		call   _060460_func
		pop    %ecx
		pop    %ebx
		ret    



_061af8_func:
		movw   $0x000001,0x000052(%eax)
		ret    



_061b00_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _061b65_jump
		mov    %ecx,%eax
		call   _01e7ac_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _061b43_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		jmp    _061b4c_jump

	_061b43_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_061b4c_jump:
		call   _01d444_func
		testb  $0x000008,0x000081(%ecx)
		jne    _061b61_jump
		movb   $0x000000,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_061b61_jump:
		movb   $0x000001,0x000070(%ecx)

	_061b65_jump:
		pop    %ecx
		pop    %ebx
		ret    



_061b68_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _061bc4_jump
		mov    0x00006c(%ecx),%dl
		test   %dl,%dl
		je     _061b7f_jump
		cmp    $0x000002,%dl
		jne    _061bc4_jump

	_061b7f_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		call   _01d444_func
		mov    0x000081(%ecx),%bl
		and    $0x0000ef,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _01dbe4_func
		testb  $0x000008,0x000081(%ecx)
		je     _061bc0_jump
		movb   $0x000001,0x000070(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061bc0_jump:
		movb   $0x000000,0x000070(%ecx)

	_061bc4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061c18_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $_0000ff_case,%dx
		je     _061c42_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		testb  $0x000001,0x000007(%eax,%edx,8)
		je     _061d0e_jump

	_061c42_jump:
		mov    %ecx,%eax
		call   _01e7ac_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _061c89_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _060460_func
		mov    0x00002c(%ecx),%ebx
		mov    0x000081(%ecx),%dh
		sub    $0x000002,%ebx
		and    $0x0000ef,%dh
		mov    %ebx,0x00002c(%ecx)
		mov    %dh,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_061c89_jump:
		mov    _0ce0d0_data,%eax
		testb  $0x000008,0x000081(%eax)
		je     _061cb2_jump
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jle    _061cae_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _061cd4_jump

	_061cae_jump:
		jge    _061cdb_jump
		jmp    _061cca_jump

	_061cb2_jump:
		mov    0x000040(%eax),%dx
		cmp    $0x000001,%dx
		jle    _061cc8_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _061cd4_jump

	_061cc8_jump:
		jge    _061cdb_jump

	_061cca_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_061cd4_jump:
		mov    %ecx,%eax
		call   _060460_func

	_061cdb_jump:
		mov    $0x000002,%ebx
		mov    0x00002c(%ecx),%edx
		movw   $0x000000,0x000040(%ecx)
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    %ebx,%edx
		movw   $0x00fffc,0x000042(%ecx)
		call   _01d444_func
		mov    0x000032(%ecx),%edx
		mov    $0x00001c,%eax
		sar    $0x000010,%edx
		call   _071b3c_func

	_061d0e_jump:
		pop    %ecx
		pop    %ebx
		ret    



_061d14_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000001,0x00006d(%eax)
		jne    _061d35_jump
		cmpb   $0x00000b,0x00006c(%ecx)
		jne    _061d35_jump
		mov    $0x00000e,%edx
		mov    %ecx,%eax
		call   _01d434_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061d35_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _061d41_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _061d4d_jump

	_061d41_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _061d8e_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _061d8e_jump

	_061d4d_jump:
		mov    $0x00000b,%ebx
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d444_func
		mov    0x000081(%ecx),%ah
		and    $0x0000ef,%ah
		mov    $0x000001,%ebx
		mov    %ah,0x000081(%ecx)
		test   $0x000008,%ah
		setne  %dl
		and    $_0000ff_case,%edx
		add    $0x000002,%edx
		and    $_0000ff_case,%edx
		mov    %ecx,%eax
		call   _060460_func

	_061d8e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061d94_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e7ac_func
		mov    _0ce0d0_data,%ebx
		mov    0x000040(%ebx),%dx
		test   %dx,%dx
		jle    _061db8_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _061dc4_jump

	_061db8_jump:
		jge    _061dcb_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_061dc4_jump:
		mov    %ecx,%eax
		call   _060460_func

	_061dcb_jump:
		mov    0x00002c(%ecx),%edx
		movw   $0x000000,0x000040(%ecx)
		sub    $0x000002,%edx
		mov    0x000076(%ecx),%ah
		mov    %edx,0x00002c(%ecx)
		test   %ah,%ah
		je     _061e37_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%ecx),%edx
		add    %ebx,%edx
		movw   $0x00fffc,0x000042(%ecx)
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%bl
		testb  $0x000040,0x000007(%edx,%ebx,8)
		je     _061e0d_jump
		mov    $0x00000a,%ebx
		jmp    _061e12_jump

	_061e0d_jump:
		mov    $0x000002,%ebx

	_061e12_jump:
		mov    $0x000002,%edx
		and    $_0000ff_case,%ebx
		mov    %ecx,%eax
		call   _01d444_func
		mov    0x000032(%ecx),%edx
		mov    $0x00001c,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		pop    %ecx
		pop    %ebx
		ret    

	_061e37_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		movw   $0x00fff8,0x000042(%ecx)
		lea    0x000000(,%edx,8),%eax
		mov    (%ebx),%edx
		testb  $0x000040,0x000007(%edx,%eax,1)
		je     _061e66_jump
		mov    $0x000006,%ebx
		jmp    _061e6b_jump

	_061e66_jump:
		mov    $0x000003,%ebx

	_061e6b_jump:
		and    $_0000ff_case,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		pop    %ecx
		pop    %ebx
		ret    



_061e80_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000081(%eax),%ah
		shl    $0x000004,%ah
		shr    $0x000007,%ah
		mov    _0ce0c5_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %ah,%al
		je     _061f0e_jump
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _061eb0_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _061ebc_jump

	_061eb0_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _061f0e_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _061f0e_jump

	_061ebc_jump:
		cmpb   $0x000000,_0ce0b1_data
		jne    _061f0e_jump
		cmpb   $0x000012,_0ce0b0_data
		jne    _061f0e_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		call   _01d444_func
		testb  $0x000008,0x000081(%ecx)
		je     _061efd_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		jmp    _061f07_jump

	_061efd_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx

	_061f07_jump:
		mov    %ecx,%eax
		call   _060460_func

	_061f0e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061f14_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000070(%eax),%al
		cmp    $0x000002,%al
		jb     _061f80_jump
		jbe    _061f2a_jump
		cmp    $0x00001e,%al
		jne    _061fa2_jump

	_061f2a_jump:
		mov    %edx,%eax
		call   _0552b4_func
		mov    %edx,%eax
		call   _025590_func
		cmpb   $0x000000,0x00006d(%edx)
		jne    _061fa2_jump
		cmpb   $0x000002,0x00006c(%edx)
		jne    _061fa2_jump
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		mov    0x000076(%edx),%bh
		shr    $0x000007,%al
		cmp    %bh,%al
		je     _061fa2_jump
		lea    0x000081(%edx),%eax
		test   $0x000001,%bh
		setne  %dl
		and    $_0000ff_case,%edx
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    %ch,%dh
		mov    %ch,(%eax)
		or     %dl,%dh
		mov    %dh,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061f80_jump:
		test   %al,%al
		jne    _061f8d_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _061f94_jump

	_061f8d_jump:
		orb    $0x000008,0x000081(%edx)

	_061f94_jump:
		mov    %edx,%eax
		call   _0552b4_func
		mov    %edx,%eax
		call   _025590_func

	_061fa2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061fa8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _061fb8_jump
		cmpb   $0x000002,0x00006c(%ecx)
		je     _062001_jump

	_061fb8_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d444_func
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		jne    _061fe5_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		or     $0x000008,%bh
		mov    $0x000003,%edx
		mov    %bh,0x000081(%ecx)
		jmp    _061ff7_jump

	_061fe5_jump:
		mov    %dh,%bl
		mov    %ecx,%eax
		and    $0x0000f7,%bl
		mov    $0x000002,%edx
		mov    %bl,0x000081(%ecx)

	_061ff7_jump:
		mov    $0x000001,%ebx
		call   _060460_func

	_062001_jump:
		pop    %ecx
		pop    %ebx
		ret    



_062004_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _062049_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _062049_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		testb  $0x000008,0x000081(%ecx)
		je     _062038_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _062042_jump

	_062038_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_062042_jump:
		mov    %ecx,%eax
		call   _060460_func

	_062049_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062050_func:
		push   %ebx
		push   %edx
		cmpb   $0x000004,0x00006c(%eax)
		jne    _062067_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		call   _060460_func

	_062067_jump:
		pop    %edx
		pop    %ebx
		ret    



_06206c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02f788_func
		cmpw   $0x000000,_0cf184_data
		je     _0620fe_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _06209e_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _06209e_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _060460_func

	_06209e_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0620d1_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _0620d1_jump
		mov    0x000004(%ecx),%eax
		mov    0x000016(%eax),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jl     _0620d1_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _060460_func

	_0620d1_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _06210c_jump
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _06210c_jump
		mov    0x000004(%ecx),%eax
		mov    0x000022(%eax),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jl     _06210c_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		jmp    _062107_jump

	_0620fe_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_062107_jump:
		call   _060460_func

	_06210c_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062110_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		cmpw   $0x000000,_0cf17c_data
		je     _06218e_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _062139_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _062139_jump
		movw   $0x000001,_0cf176_data

	_062139_jump:
		mov    0x00006d(%ecx),%dh
		test   %dh,%dh
		jne    _06218e_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _06218e_jump
		cmpw   $0x000000,_0cf176_data
		je     _06216b_jump
		mov    _0cf229_data,%bh
		xor    %edi,%edi
		mov    %dh,0x00007f(%ecx)
		or     $0x000002,%bh
		mov    %di,_0cf176_data
		mov    %bh,_0cf229_data

	_06216b_jump:
		mov    0x00007f(%ecx),%al
		inc    %al
		mov    %al,0x00007f(%ecx)
		cmp    $0x000064,%al
		jne    _06217e_jump
		call   _035598_func
		jmp    _06218e_jump

	_06217e_jump:
		cmp    $0x000065,%al
		jne    _06218e_jump
		call   _07b8b0_func
		orb    $0x000004,_0cf221_data

	_06218e_jump:
		cmpw   $0x000008,_0cf270_data
		jne    _0621cb_jump
		cmpw   $0x000000,_0cf184_data
		je     _0621c4_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0621cb_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _0621cb_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _060460_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0621c4_jump:
		andb   $0x0000fb,0x000081(%ecx)

	_0621cb_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0621d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _062212_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _062212_jump
		cmpw   $0x000000,_0cf17c_data
		jne    _062212_jump
		mov    $0x000002,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %bx,_0cf176_data
		mov    $0x000001,%ebx
		mov    $0x000001,%esi
		call   _060460_func
		mov    %si,_0cf17c_data

	_062212_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _06222f_jump
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _06222f_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _060460_func

	_06222f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062234_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		add    %ebx,%eax
		sub    $0x00000c,%eax
		cwtl   
		call   _07ba0c_func
		mov    0x000054(%edx),%ebx
		cwtl   
		sar    $0x000010,%ebx
		sub    $0x00002b,%eax
		add    %ebx,%eax
		mov    0x000034(%edx),%cx
		mov    %eax,0x00002c(%edx)
		cmp    _0ce08e_data,%cx
		jne    _062272_jump
		movw   $0x00000d,0x000050(%edx)
		jmp    _062278_jump

	_062272_jump:
		movw   $0x000000,0x000050(%edx)

	_062278_jump:
		mov    0x000056(%edx),%ax
		mov    0x000050(%edx),%si
		cmp    %si,%ax
		jge    _062291_jump
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,0x000056(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062291_jump:
		jle    _062298_jump
		dec    %eax
		mov    %ax,0x000056(%edx)

	_062298_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0622a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		call   _02f788_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		cmpb   $0x000004,0x00006a(%esi)
		jne    _0622f4_jump
		cmpb   $0x00000a,0x00006b(%esi)
		jne    _0622f4_jump
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _0622f4_jump
		mov    0x000032(%esi),%edx
		mov    $0x000028,%eax
		sar    $0x000010,%edx
		call   _071b3c_func

	_0622f4_jump:
		mov    0x00006c(%esi),%bl
		cmp    $0x000001,%bl
		jne    _062312_jump
		mov    0x00007f(%esi),%dh
		add    %bl,%dh
		mov    %dh,0x00007f(%esi)
		jne    _062439_jump
		mov    %bl,0x00007f(%esi)
		jmp    _062439_jump

	_062312_jump:
		cmpb   $0x000000,0x00007f(%esi)
		je     _06235a_jump
		mov    $0x000001,%ecx
		mov    $0x000001,%ebx
		mov    $_0ce280_data,%edx
		xor    %edi,%edi
		mov    %cx,_0cf13a_data
		mov    %di,_0cf138_data
		mov    %ebx,_0ce068_data
		call   _059b98_func
		mov    %esi,%eax
		call   _07343c_func
		mov    %ebx,%eax
		call   _058a90_func
		movb   $0x000000,0x00007f(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06235a_jump:
		testb  $0x000002,_0cf221_data
		jne    _062439_jump
		testb  $0x000001,0x000081(%esi)
		jne    _062439_jump
		mov    %esi,%eax
		call   _01dc20_func
		test   %ax,%ax
		je     _062439_jump
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _062439_jump
		cmpw   $0x000000,_0cf250_data
		jne    _062439_jump
		cmpb   $0x000000,_0ce0b1_data
		jne    _062439_jump
		cmpb   $0x000000,_0ce0b0_data
		jne    _062439_jump
		mov    _0cf268_data,%edx
		sar    $0x000010,%edx
		push   %edx
		mov    _0cf24c_data,%edx
		mov    $0x00000f,%ecx
		sar    $0x000010,%edx
		mov    0x000028(%esi),%ax
		push   %edx
		mov    _0cf24a_data,%edx
		mov    0x00002c(%esi),%bx
		sar    $0x000010,%edx
		add    $0x00002a,%eax
		push   %edx
		mov    _0cf248_data,%edx
		add    $0x000030,%ebx
		sar    $0x000010,%edx
		cwtl   
		push   %edx
		movswl %bx,%edx
		mov    $0x000005,%ebx
		call   _02b560_func
		test   %ax,%ax
		je     _062439_jump
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		xor    %ebx,%ebx
		or     $0x000001,%dl
		mov    %bx,_0ce084_data
		mov    %dl,0x000081(%esi)
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    %edx,_0ce068_data
		call   _060460_func

	_062439_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062440_func:
		jmp    _0714b0_jump



_062448_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x000073(%eax),%eax
		sar    $0x000018,%eax
		cmp    $0x000000,%eax
		je     _062465_jump
		mov    $0x000001,%eax
		jg     _062465_jump
		neg    %eax

	_062465_jump:
		mov    %ax,0x000004(%esp)
		mov    0x000034(%esi),%dx
		cmp    _0ce08e_data,%dx
		je     _06249f_jump
		cmpb   $0x000000,_0cf3f7_data
		jne    _062532_jump
		mov    0x000076(%esi),%bl
		test   %bl,%bl
		je     _062532_jump
		mov    0x000004(%esp),%al
		mov    %bl,%bh
		sub    %al,%bh
		mov    %bh,0x000076(%esi)
		jmp    _062532_jump

	_06249f_jump:
		cmpb   $0x000000,_0cf3f5_data
		jne    _062532_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d7e0_func
		xor    %eax,%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000074(%esi),%al
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0ce0ac_data,%dl
		mov    %ebx,0x00000c(%esp)
		add    _0ce06c_data,%edx
		mov    0x00000e(%esp),%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    %ebx
		add    %ebx,%eax
		sub    %eax,%edx
		mov    $0x000003,%cl
		mov    %edx,%eax
		mov    %edx,(%esp)
		test   %ax,%ax
		js     _06250a_jump
		sar    %cl,%ax
		jmp    _062513_jump

	_06250a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_062513_jump:
		sub    %al,0x000076(%esi)
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _062522_jump
		neg    %eax

	_062522_jump:
		cmp    $0x000010,%eax
		jl     _062532_jump
		mov    0x000004(%esp),%al
		mov    $0x00000f,%ah
		mul    %ah
		mov    %al,0x000076(%esi)

	_062532_jump:
		add    $0x000014,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062540_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		call   _01d450_func
		mov    %eax,%edx
		mov    %eax,%esi
		mov    %edi,%eax
		call   _01d580_func
		movswl %dx,%edx
		mov    %eax,%ecx
		movswl %ax,%ebx
		mov    %edi,%eax
		call   _01d6f4_func
		test   %ax,%ax
		je     _062636_jump
		mov    0x00006c(%edi),%ah
		cmp    $0x00000d,%ah
		je     _062590_jump
		cmp    $0x00001c,%ah
		je     _062590_jump
		cmp    $0x00000e,%ah
		je     _062590_jump
		cmp    $0x00001d,%ah
		je     _062590_jump
		mov    $0x000001,%edx
		jmp    _062592_jump

	_062590_jump:
		xor    %edx,%edx

	_062592_jump:
		test   %edx,%edx
		je     _062636_jump
		mov    0x000042(%edi),%dx
		test   %dx,%dx
		jle    _0625d9_jump
		mov    %edx,%eax
		dec    %eax
		mov    0x000060(%edi),%dx
		mov    %ax,0x000042(%edi)
		cmp    $0x0000ae,%dx
		je     _0625bc_jump
		cmp    $0x0000e1,%dx
		jne    _0625c4_jump

	_0625bc_jump:
		movw   $0x00ffdc,0x000040(%edi)
		jmp    _0625ca_jump

	_0625c4_jump:
		movw   $0x000024,0x000040(%edi)

	_0625ca_jump:
		movswl %cx,%ebx
		movswl %si,%edx
		mov    %edi,%eax
		call   _02f310_func
		jmp    _062636_jump

	_0625d9_jump:
		movswl %cx,%ebx
		movswl %si,%edx
		mov    %edi,%eax
		call   _02f310_func
		test   %ax,%ax
		je     _062636_jump
		mov    0x000060(%edi),%bx
		movw   $0x00ffff,0x000042(%edi)
		cmp    $0x0000ae,%bx
		je     _062603_jump
		cmp    $0x0000e1,%bx
		jne    _06260b_jump

	_062603_jump:
		movw   $0x00fff0,0x000040(%edi)
		jmp    _062611_jump

	_06260b_jump:
		movw   $0x000010,0x000040(%edi)

	_062611_jump:
		mov    0x00006c(%edi),%bh
		cmp    $0x000006,%bh
		jne    _062620_jump
		mov    $0x000007,%ebx
		jmp    _06262a_jump

	_062620_jump:
		cmp    $0x000015,%bh
		jne    _062636_jump
		mov    $0x000016,%ebx

	_06262a_jump:
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _01d444_func

	_062636_jump:
		mov    0x00006c(%edi),%ch
		cmp    $0x00000d,%ch
		je     _062647_jump
		cmp    $0x00001c,%ch
		jne    _062780_jump

	_062647_jump:
		cmpb   $0x000006,0x00006b(%edi)
		jne    _062780_jump
		cmpb   $0x000000,_0cf3ef_data
		je     _062780_jump
		mov    _0cc7a0_data,%esi
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _062806_jump

	_062676_jump:
		cmpw   $0x0000ba,0x000060(%esi)
		jne    _062767_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _062767_jump
		lea    0x000004(%esp),%edx
		lea    0x00000c(%esp),%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d7e0_func
		testb  $0x000008,0x000081(%edi)
		je     _0626ea_jump
		mov    -0x000002(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sar    %edx
		add    %ebx,%edx
		movw   $0x00000d,0x000040(%esi)
		add    $0x00000d,%edx
		mov    0x000081(%esi),%bh
		mov    %edx,0x000028(%esi)
		or     $0x000008,%bh
		mov    %dx,0x00003c(%esi)
		mov    %bh,0x000081(%esi)
		jmp    _062713_jump

	_0626ea_jump:
		mov    -0x000002(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sar    %edx
		add    %ebx,%edx
		movw   $0x00fff3,0x000040(%esi)
		sub    $0x00000d,%edx
		mov    %edx,0x000028(%esi)
		mov    %dx,0x00003c(%esi)

	_062713_jump:
		mov    0x00000a(%esp),%ebx
		mov    0x000081(%esi),%cl
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000069(%esi),%dl
		or     $0x000004,%cl
		sub    %edx,%ebx
		mov    0x000002(%esp),%edx
		movw   $0x000002,0x000042(%esi)
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%esi)
		add    %ebx,%edx
		mov    %cl,0x000081(%esi)
		add    $0x000002,%edx
		mov    %edx,0x00002c(%esi)
		mov    %esi,%eax
		mov    %dx,0x00003e(%esi)
		call   _01f3d4_func
		andb   $0x0000ef,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062767_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _062676_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062780_jump:
		mov    0x00006c(%edi),%dh
		cmp    $0x00000e,%dh
		je     _06278d_jump
		cmp    $0x00001d,%dh
		jne    _0627b1_jump

	_06278d_jump:
		movw   $0x00fff8,0x000042(%edi)
		mov    0x000081(%edi),%dh
		movw   $0x000000,0x000040(%edi)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%edi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0627b1_jump:
		mov    0x000040(%edi),%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _062806_jump
		mov    0x00006c(%edi),%bh
		cmp    $0x000006,%bh
		jne    _0627cb_jump
		mov    $0x000007,%ebx
		jmp    _0627fa_jump

	_0627cb_jump:
		cmp    $0x000015,%bh
		jne    _0627d7_jump
		mov    $0x000016,%ebx
		jmp    _0627fa_jump

	_0627d7_jump:
		cmp    $0x00000b,%bh
		jne    _0627e9_jump
		cmpb   $0x000036,0x00006b(%edi)
		jne    _0627e9_jump
		mov    $0x000002,%ebx
		jmp    _0627fa_jump

	_0627e9_jump:
		cmpb   $0x00001a,0x00006c(%edi)
		jne    _062806_jump
		cmpb   $0x000036,0x00006b(%edi)
		jne    _062806_jump
		mov    $0x000013,%ebx

	_0627fa_jump:
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _01d444_func

	_062806_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062810_func:
		push   %ebx
		push   %ecx
		mov    0x00006c(%eax),%dl
		test   %dl,%dl
		je     _06281e_jump
		cmp    $0x000001,%dl
		jne    _06283c_jump

	_06281e_jump:
		mov    0x000076(%eax),%bl
		dec    %bl
		mov    %bl,0x000076(%eax)
		jne    _062832_jump
		mov    $0x00000d,%ebx
		jmp    _062940_jump

	_062832_jump:
		mov    $0x00000a,%ebx
		jmp    _062940_jump

	_06283c_jump:
		cmp    $0x000007,%dl
		je     _062850_jump
		cmp    $0x000002,%dl
		je     _062850_jump
		cmp    $0x000003,%dl
		je     _062850_jump
		cmp    $0x000004,%dl
		jne    _062878_jump

	_062850_jump:
		mov    0x000076(%eax),%dl
		dec    %dl
		mov    %dl,0x000076(%eax)
		jne    _062869_jump
		mov    $0x00000d,%ebx
		xor    %edx,%edx
		call   _01d444_func
		pop    %ecx
		pop    %ebx
		ret    

	_062869_jump:
		mov    $0x00000c,%ebx
		xor    %edx,%edx
		call   _01d444_func
		pop    %ecx
		pop    %ebx
		ret    

	_062878_jump:
		cmp    $0x000005,%dl
		je     _062882_jump
		cmp    $0x000006,%dl
		jne    _0628aa_jump

	_062882_jump:
		mov    0x000076(%eax),%cl
		dec    %cl
		mov    %cl,0x000076(%eax)
		jne    _06289b_jump
		mov    $0x00000d,%ebx
		xor    %edx,%edx
		call   _01d444_func
		pop    %ecx
		pop    %ebx
		ret    

	_06289b_jump:
		mov    $0x00000b,%ebx
		xor    %edx,%edx
		call   _01d444_func
		pop    %ecx
		pop    %ebx
		ret    

	_0628aa_jump:
		cmp    $0x00000f,%dl
		je     _0628b4_jump
		cmp    $0x000010,%dl
		jne    _0628dc_jump

	_0628b4_jump:
		mov    0x000076(%eax),%bl
		dec    %bl
		mov    %bl,0x000076(%eax)
		jne    _0628cd_jump
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		call   _01d444_func
		pop    %ecx
		pop    %ebx
		ret    

	_0628cd_jump:
		mov    $0x000019,%ebx
		xor    %edx,%edx
		call   _01d444_func
		pop    %ecx
		pop    %ebx
		ret    

	_0628dc_jump:
		cmp    $0x000016,%dl
		je     _0628f0_jump
		cmp    $0x000011,%dl
		je     _0628f0_jump
		cmp    $0x000012,%dl
		je     _0628f0_jump
		cmp    $0x000013,%dl
		jne    _062918_jump

	_0628f0_jump:
		mov    0x000076(%eax),%dl
		dec    %dl
		mov    %dl,0x000076(%eax)
		jne    _062909_jump
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		call   _01d444_func
		pop    %ecx
		pop    %ebx
		ret    

	_062909_jump:
		mov    $0x00001b,%ebx
		xor    %edx,%edx
		call   _01d444_func
		pop    %ecx
		pop    %ebx
		ret    

	_062918_jump:
		cmp    $0x000014,%dl
		je     _062922_jump
		cmp    $0x000015,%dl
		jne    _062947_jump

	_062922_jump:
		mov    0x000076(%eax),%cl
		dec    %cl
		mov    %cl,0x000076(%eax)
		jne    _06293b_jump
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		call   _01d444_func
		pop    %ecx
		pop    %ebx
		ret    

	_06293b_jump:
		mov    $0x00001a,%ebx

	_062940_jump:
		xor    %edx,%edx
		call   _01d444_func

	_062947_jump:
		pop    %ecx
		pop    %ebx
		ret    



_06294c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0629f8_jump
		mov    0x00006c(%ecx),%dl
		test   %dl,%dl
		je     _062977_jump
		cmp    $0x000001,%dl
		je     _062977_jump
		cmp    $0x00000f,%dl
		je     _062977_jump
		cmp    $0x000010,%dl
		jne    _0629f8_jump

	_062977_jump:
		mov    0x00006c(%ecx),%al
		test   %al,%al
		je     _062982_jump
		cmp    $0x000001,%al
		jne    _062989_jump

	_062982_jump:
		mov    $0x000005,%ebx
		jmp    _062996_jump

	_062989_jump:
		cmp    $0x00000f,%al
		je     _062991_jump
		cmp    $0x000010,%al
		jne    _0629a2_jump

	_062991_jump:
		mov    $0x000014,%ebx

	_062996_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d444_func

	_0629a2_jump:
		mov    0x000060(%ecx),%dx
		cmp    $0x0000ae,%dx
		je     _0629b4_jump
		cmp    $0x0000b8,%dx
		jne    _0629d5_jump

	_0629b4_jump:
		mov    0x000060(%ecx),%di
		movw   $0x000003,0x000042(%ecx)
		cmp    $0x0000ae,%di
		jne    _0629cd_jump
		movw   $0x00ffe8,0x000040(%ecx)
		jmp    _0629f8_jump

	_0629cd_jump:
		movw   $0x000018,0x000040(%ecx)
		jmp    _0629f8_jump

	_0629d5_jump:
		mov    0x000060(%ecx),%si
		movw   $0x000002,0x000042(%ecx)
		cmp    $0x0000e1,%si
		jne    _0629f2_jump
		movw   $0x00ffdc,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0629f2_jump:
		movw   $0x000024,0x000040(%ecx)

	_0629f8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062a00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		testb  $0x000002,_0cf221_data
		je     _062a1b_jump
		mov    $0x000100,%edx
		jmp    _062a20_jump

	_062a1b_jump:
		mov    $0x000200,%edx

	_062a20_jump:
		mov    _0cf24e_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		test   %eax,%eax
		jge    _062a31_jump
		neg    %eax

	_062a31_jump:
		cmp    %edx,%eax
		setg   %cl
		mov    0x000060(%esi),%ax
		cmp    $0x000022,%ax
		jb     _062a97_jump
		cmp    $0x000022,%ax
		jbe    _062acd_jump
		cmp    $0x000098,%ax
		jb     _062a78_jump
		jbe    _062acd_jump
		cmp    $0x0000ed,%ax
		jb     _062a69_jump
		jbe    _062acd_jump
		cmp    $0x0000f3,%ax
		je     _062acd_jump
		jmp    _0635af_jump

	_062a69_jump:
		cmp    $0x0000be,%ax
		je     _062ce0_jump
		jmp    _0635af_jump

	_062a78_jump:
		cmp    $0x000044,%ax
		jb     _0635af_jump
		jbe    _062fdc_jump
		cmp    $0x000073,%ax
		je     _0634a0_jump
		jmp    _0635af_jump

	_062a97_jump:
		cmp    $0x00001b,%ax
		jb     _062ab8_jump
		jbe    _0631d1_jump
		cmp    $0x00001c,%ax
		jbe    _0633cf_jump
		cmp    $0x00001d,%ax
		je     _062acd_jump
		jmp    _0635af_jump

	_062ab8_jump:
		cmp    $0x000019,%ax
		jb     _0635af_jump
		jbe    _062c4d_jump
		jmp    _062de6_jump

	_062acd_jump:
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _062c3b_jump
		mov    0x000056(%esi),%di
		test   %di,%di
		je     _062aed_jump
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x000056(%esi)

	_062aed_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _0635af_jump
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0ce0b0_data,%al
		mov    $0x000001,%cl
		add    %edx,%eax
		mov    %cl,_0cf470_data
		cmp    $0x00000b,%eax
		jb     _062b24_jump
		cmp    $0x00000c,%eax
		ja     _062b24_jump
		call   _06595c_func

	_062b24_jump:
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d444_func
		call   _06c6b0_func
		movw   $0x002710,0x000054(%esi)
		mov    $0x00000c,%ebx
		mov    _0ce086_data,%cx
		mov    0x000060(%esi),%di
		sub    $0x000003,%ecx
		mov    %bx,_0cf296_data
		mov    %cx,_0ce086_data
		cmp    $0x0000f3,%di
		jne    _062b75_jump
		mov    $0x000011,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		jmp    _062bd3_jump

	_062b75_jump:
		cmp    $0x000098,%di
		jne    _062ba8_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _062b88_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _062b98_jump

	_062b88_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		jmp    _062bd3_jump

	_062b98_jump:
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		jmp    _062bd3_jump

	_062ba8_jump:
		cmp    $0x0000ed,%di
		jne    _062bd3_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _062bd3_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _062bd3_jump
		mov    $_0ce044_data,%eax
		mov    $0x000001,%ebx
		call   _07bb74_func
		mov    %ebx,%edx
		mov    %esi,%eax
		call   _060460_func

	_062bd3_jump:
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d7e0_func
		mov    0x000006(%esp),%eax
		xor    %edx,%edx
		mov    _0ce06c_data,%ecx
		mov    _0ce0ac_data,%dl
		sar    $0x000010,%eax
		add    %ecx,%edx
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		cmp    %eax,%edx
		jge    _062c28_jump
		movw   $0x00fe00,_0cf250_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062c28_jump:
		movw   $0x000200,_0cf250_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062c3b_jump:
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000056(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062c4d_jump:
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _062c3b_jump
		mov    0x000056(%esi),%cx
		test   %cx,%cx
		je     _062c69_jump
		mov    %ecx,%edi
		dec    %edi
		mov    %di,0x000056(%esi)

	_062c69_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _0635af_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d7e0_func
		xor    %edx,%edx
		xor    %eax,%eax
		call   _02dd0c_func
		xor    %eax,%eax
		mov    _0ce06c_data,%edx
		mov    _0ce0ac_data,%al
		add    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		cmp    %eax,%edx
		jge    _062ccf_jump
		orb    $0x000008,_0ce0c5_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062ccf_jump:
		andb   $0x0000f7,_0ce0c5_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062ce0_jump:
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _062c3b_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _062c3b_jump
		cmpb   $0x000009,0x00006c(%esi)
		jne    _062c3b_jump
		mov    0x000056(%esi),%bx
		test   %bx,%bx
		je     _062d14_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,0x000056(%esi)

	_062d14_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _0635af_jump
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0ce0b0_data,%al
		mov    $0x000001,%bl
		add    %edx,%eax
		mov    %bl,_0cf470_data
		cmp    $0x00000b,%eax
		jb     _062d4b_jump
		cmp    $0x00000c,%eax
		ja     _062d4b_jump
		call   _06595c_func

	_062d4b_jump:
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d444_func
		call   _06c6b0_func
		mov    $0x00000c,%eax
		movw   $0x002710,0x000054(%esi)
		mov    $0x00000a,%ebx
		mov    _0ce086_data,%dx
		mov    %ax,_0cf296_data
		sub    $0x000004,%edx
		mov    %esi,%eax
		mov    %dx,_0ce086_data
		xor    %edx,%edx
		mov    %esp,%ecx
		call   _01d444_func
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d7e0_func
		xor    %eax,%eax
		mov    _0ce06c_data,%edx
		mov    _0ce0ac_data,%al
		add    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		cmp    %eax,%edx
		jge    _062c28_jump
		movw   $0x00fe00,_0cf250_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062de6_jump:
		mov    0x000052(%esi),%di
		test   %di,%di
		je     _062e2b_jump
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		je     _062e05_jump
		cmp    $0x000014,%di
		je     _0635af_jump

	_062e05_jump:
		mov    0x000052(%esi),%ax
		dec    %ax
		mov    %ax,0x000052(%esi)
		jne    _0635af_jump
		mov    $0x00000b,%edx
		mov    %esi,%eax
		call   _01d434_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062e2b_jump:
		mov    0x000050(%esi),%ax
		test   %ax,%ax
		je     _062ecc_jump
		mov    %eax,%edi
		dec    %edi
		mov    _0cf282_data,%ax
		mov    %di,0x000050(%esi)
		cmp    $0x000001,%ax
		jne    _062e5e_jump
		cmpb   $0x000000,_0cf3ef_data
		je     _062e5a_jump
		movb   $0x000000,0x00007e(%esi)
		jmp    _062e5e_jump

	_062e5a_jump:
		movb   $0x000004,0x00007e(%esi)

	_062e5e_jump:
		mov    0x000050(%esi),%ax
		cmp    0x000056(%esi),%ax
		jg     _0635af_jump
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _062ebb_jump
		mov    $0xffffffff,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		mov    %di,_0ce08e_data
		call   _01d444_func
		xor    %eax,%eax
		mov    %cl,%al
		call   _06c468_func
		xor    %eax,%eax
		mov    %ax,_0ce096_data
		movw   $0x002710,0x000054(%esi)
		mov    %ax,_0cf296_data
		mov    %ax,_0ce086_data

	_062ebb_jump:
		andb   $0x0000df,0x000081(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062ecc_jump:
		cmpw   $0x000001,_0cf282_data
		je     _062f5e_jump
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _062f2b_jump
		mov    $0xffffffff,%eax
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ax,_0ce08e_data
		mov    $_0ce044_data,%eax
		call   _01d444_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %edx,%edx
		call   _06c468_func
		mov    %dx,_0cf296_data
		mov    %dx,_0ce096_data
		mov    %dx,_0ce086_data
		movw   $0x002710,0x000054(%esi)

	_062f2b_jump:
		cmpb   $0x000006,0x00006c(%esi)
		jne    _062f43_jump
		mov    %esi,%eax
		call   _01cca0_func
		test   %al,%al
		je     _062f43_jump
		mov    %esi,%eax
		call   _05dc2c_func

	_062f43_jump:
		cmpb   $0x000014,0x00006c(%esi)
		jne    _0635af_jump
		orb    $0x000020,0x000081(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062f5e_jump:
		movl   $0x000000,0x000024(%esi)
		movl   $0x000004,0x000030(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x000004,0x00007e(%esi)
		or     $0x000020,%bh
		mov    %bh,0x000081(%esi)
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0635af_jump
		mov    $0xffffffff,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		mov    %di,_0ce08e_data
		call   _01d444_func
		xor    %eax,%eax
		mov    %cl,%al
		call   _06c468_func
		xor    %eax,%eax
		mov    %ax,_0cf296_data
		mov    %ax,_0ce096_data
		mov    %ax,_0ce086_data
		movw   $0x002710,0x000054(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062fdc_jump:
		mov    _0ce08e_data,%ax
		mov    0x000034(%esi),%dx
		xor    %cl,%cl
		cmp    %dx,%ax
		jne    _06304b_jump
		cmpb   $0x000002,0x00006d(%esi)
		setne  %al
		and    $_0000ff_case,%eax
		je     _063038_jump
		cmpw   $0x000000,0x00004a(%esi)
		je     _063038_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d444_func
		movw   $0x000000,0x000052(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00004a(%esi),%ax
		movb   $0x000000,0x000072(%esi)
		inc    %eax
		movw   $0x000000,0x00004a(%esi)
		mov    %ax,0x000056(%esi)
		mov    $0x000001,%cl
		mov    %ax,0x000042(%esi)
		jmp    _06304b_jump

	_063038_jump:
		mov    0x000048(%esi),%eax
		mov    0x000054(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		jne    _06304b_jump
		mov    $0x000001,%cl

	_06304b_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _0635af_jump
		mov    0x000054(%esi),%edx
		mov    0x000040(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		neg    %edx
		cmp    %edx,%eax
		jge    _063112_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000056(%esi)
		mov    0x00003c(%esi),%eax
		movw   $0x000000,0x000042(%esi)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000034(%esi),%dx
		cmp    _0ce08e_data,%dx
		jne    _0635af_jump
		mov    0x00003c(%esi),%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%eax
		mov    _0ce070_data,%ebx
		sub    %edx,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0ce0b0_data,%al
		add    %edx,%eax
		mov    %ebx,_0ce070_data
		cmp    $0x00000b,%eax
		jb     _0630dc_jump
		cmp    $0x00000c,%eax
		ja     _0630dc_jump
		call   _06595c_func

	_0630dc_jump:
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d444_func
		movb   $0x000001,_0cf470_data
		call   _06c6b0_func
		mov    $0x00000c,%ebx
		movw   $0x002710,0x000054(%esi)
		mov    %bx,_0cf296_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063112_jump:
		test   %cl,%cl
		jne    _0635af_jump
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0635af_jump
		xor    %edx,%edx
		mov    _0cf470_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _0635af_jump
		call   *_0c3f58_data
		test   %ax,%ax
		je     _0635af_jump
		call   _06c6b0_func
		cmpb   $0x000002,_0ce0b1_data
		jne    _06316a_jump
		movw   $0x002710,0x000054(%esi)

	_06316a_jump:
		mov    $0x000002,%ecx
		mov    0x000040(%esi),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _063189_jump
		cmp    %ecx,%eax
		jg     _063189_jump
		mov    $0x000001,%eax
		jmp    _06318b_jump

	_063189_jump:
		xor    %eax,%eax

	_06318b_jump:
		test   %eax,%eax
		je     _0631a1_jump
		subw   $0x000002,_0ce086_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0631a1_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _0635af_jump
		mov    0x000042(%esi),%ax
		mov    _0ce086_data,%si
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    %si,_0ce086_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0631d1_jump:
		mov    _0ce08e_data,%ax
		mov    0x000034(%esi),%dx
		xor    %cl,%cl
		cmp    %dx,%ax
		jne    _063240_jump
		cmpb   $0x000002,0x00006d(%esi)
		setne  %al
		and    $_0000ff_case,%eax
		je     _06322d_jump
		cmpw   $0x000000,0x00004a(%esi)
		je     _06322d_jump
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d444_func
		movw   $0x000000,0x000052(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00004a(%esi),%ax
		movb   $0x000000,0x000072(%esi)
		inc    %eax
		movw   $0x000000,0x00004a(%esi)
		mov    %ax,0x000056(%esi)
		mov    $0x000001,%cl
		mov    %ax,0x000042(%esi)
		jmp    _063240_jump

	_06322d_jump:
		mov    0x000048(%esi),%eax
		mov    0x000054(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		jne    _063240_jump
		mov    $0x000001,%cl

	_063240_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _0635af_jump
		mov    0x000054(%esi),%edx
		mov    0x000040(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		neg    %edx
		cmp    %edx,%eax
		jge    _063302_jump
		mov    $0x000018,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000056(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000034(%esi),%dx
		cmp    _0ce08e_data,%dx
		jne    _0632ef_jump
		mov    0x00003c(%esi),%eax
		mov    0x00002c(%esi),%edi
		sar    $0x000010,%eax
		mov    _0ce070_data,%ebp
		sub    %edi,%eax
		add    %eax,%ebp
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0ce0b1_data,%al
		mov    _0ce0b0_data,%dl
		shl    $0x000008,%eax
		add    %edx,%eax
		mov    %ebp,_0ce070_data
		cmp    $0x00000b,%eax
		jb     _0632c3_jump
		cmp    $0x00000c,%eax
		ja     _0632c3_jump
		call   _06595c_func

	_0632c3_jump:
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d444_func
		movb   $0x000001,_0cf470_data
		call   _06c6b0_func
		mov    $0x00000c,%ebx
		movw   $0x002710,0x000054(%esi)
		mov    %bx,_0cf296_data

	_0632ef_jump:
		mov    0x00003c(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063302_jump:
		test   %cl,%cl
		jne    _0635af_jump
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0635af_jump
		xor    %edx,%edx
		mov    _0cf470_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _0635af_jump
		call   *_0c3f58_data
		test   %ax,%ax
		je     _0635af_jump
		call   _06c6b0_func
		cmpb   $0x000002,_0ce0b1_data
		jne    _06335a_jump
		movw   $0x002710,0x000054(%esi)

	_06335a_jump:
		mov    $0x000002,%ecx
		mov    0x000040(%esi),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _063379_jump
		cmp    %ecx,%eax
		jg     _063379_jump
		mov    $0x000001,%eax
		jmp    _06337b_jump

	_063379_jump:
		xor    %eax,%eax

	_06337b_jump:
		test   %eax,%eax
		je     _063391_jump
		subw   $0x000002,_0ce086_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063391_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _0635af_jump
		mov    0x000042(%esi),%ax
		add    %ax,_0ce086_data
		mov    _0ce084_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff9,%eax
		jge    _0635af_jump
		movw   $0x00fff9,_0ce086_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0633cf_jump:
		cmpb   $0x000014,0x00006c(%esi)
		jne    _06341a_jump
		mov    0x000056(%esi),%di
		test   %di,%di
		jne    _063413_jump
		mov    0x00004a(%esi),%ax
		mov    _0cf282_data,%dx
		mov    %ax,0x000056(%esi)
		cmp    $0x000001,%dx
		je     _063401_jump
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d434_func
		jmp    _06341a_jump

	_063401_jump:
		cmpb   $0x000000,0x00007e(%esi)
		je     _06340d_jump
		movb   $0x000000,0x00007e(%esi)
		jmp    _06341a_jump

	_06340d_jump:
		movb   $0x000003,0x00007e(%esi)
		jmp    _06341a_jump

	_063413_jump:
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x000056(%esi)

	_06341a_jump:
		cmpw   $0x000001,_0cf282_data
		jne    _06342a_jump
		cmpb   $0x000000,0x00007e(%esi)
		je     _06344a_jump

	_06342a_jump:
		cmpw   $0x000001,_0cf282_data
		je     _0635af_jump
		cmpb   $0x000014,0x00006c(%esi)
		setne  %al
		and    $_0000ff_case,%eax
		je     _0635af_jump

	_06344a_jump:
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _063490_jump
		movw   $0x00ffff,_0ce08e_data
		mov    $0x000002,%ebx
		mov    $_0ce044_data,%eax
		mov    %ebx,%edx
		call   _01d444_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %ecx,%ecx
		call   _06c468_func
		mov    %cx,_0cf296_data
		mov    %cx,_0ce096_data
		mov    %cx,_0ce086_data

	_063490_jump:
		movw   $0x0003e8,0x000054(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0634a0_jump:
		mov    0x00006c(%esi),%bh
		cmp    $0x000007,%bh
		jne    _063562_jump
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _063514_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    %bh,%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _063514_jump
		mov    0x000081(%esi),%al
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%al
		mov    %al,0x000081(%esi)

	_063514_jump:
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _06355c_jump
		mov    $0xffffffff,%eax
		mov    $0x000002,%ebx
		mov    %ax,_0ce08e_data
		mov    %ebx,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %edx,%edx
		call   _06c468_func
		mov    %dx,_0cf296_data
		mov    %dx,_0ce096_data
		mov    %dx,_0ce086_data

	_06355c_jump:
		movw   $0x0003e8,0x000054(%esi)

	_063562_jump:
		cmpb   $0x000014,0x00006c(%esi)
		jne    _0635af_jump
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		je     _06357e_jump
		mov    0x000052(%esi),%ax
		cmp    0x000050(%esi),%ax
		je     _063582_jump

	_06357e_jump:
		decw   0x000052(%esi)

	_063582_jump:
		mov    0x000056(%esi),%cx
		test   %cx,%cx
		je     _063592_jump
		cmpw   $0x000000,0x000052(%esi)
		jne    _0635a8_jump

	_063592_jump:
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d434_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0635a8_jump:
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,0x000056(%esi)

	_0635af_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0635bc_func:
		push   %ebx
		xor    %ebx,%ebx
		mov    0x000079(%eax),%bl
		cmp    %bx,%dx
		jne    _0635e9_jump
		mov    _0ce0d0_data,%edx
		mov    0x000040(%edx),%bx
		test   %bx,%bx
		jle    _0635dd_jump
		mov    $0x000019,%edx
		jmp    _0635e4_jump

	_0635dd_jump:
		jge    _0635e9_jump
		mov    $0x00001a,%edx

	_0635e4_jump:
		call   _01d434_func

	_0635e9_jump:
		pop    %ebx
		ret    



_0635f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cf1fc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06362d_jump
		push   $0xffffffa2
		mov    %eax,%edx
		shl    $0x000005,%eax
		mov    $0xffffff5b,%ecx
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000006,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01ce30_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06362d_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063640_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cc7a0_data,%edx
		mov    _0cc7a4_data,%si
		xor    %bl,%bl
		xor    %ecx,%ecx
		test   %si,%si
		jle    _0636f8_jump

	_06365f_jump:
		cmp    $0x000005,%bl
		jae    _0636f8_jump
		cmpw   $0x0000be,0x000060(%edx)
		jne    _0636e8_jump
		xor    %eax,%eax
		mov    %bl,%al
		imul   $0x000014,%eax,%eax
		xor    %edi,%edi
		mov    %di,_0e47bc_data(%eax)
		xor    %bh,%bh
		mov    %di,_0e47be_data(%eax)
		mov    %bh,_0e47cc_data(%eax)
		mov    %bh,_0e47cd_data(%eax)
		mov    %cx,_0e47ca_data(%eax)
		mov    $0x000001,%edi
		mov    %di,_0e47c0_data(%eax)
		mov    $0x000005,%bh
		mov    %di,_0e47c2_data(%eax)
		mov    %bh,_0e47ce_data(%eax)
		movw   $0x00000f,_0e47c4_data(%eax)
		xor    %edi,%edi
		mov    %di,_0e47c6_data(%eax)
		mov    %di,_0e47c8_data(%eax)
		andb   $0x0000fb,0x000081(%edx)
		xor    %eax,%eax
		movl   $0x000000,0x000024(%edx)
		mov    %bl,%al
		inc    %bl
		mov    %ax,0x000050(%edx)

	_0636e8_jump:
		inc    %ecx
		add    $0x000084,%edx
		cmp    %si,%cx
		jl     _06365f_jump

	_0636f8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063700_func:
		push   %edx
		xor    %al,%al

	_063703_jump:
		xor    %edx,%edx
		mov    %al,%dl
		imul   $0x000014,%edx,%edx
		xor    %ah,%ah
		mov    %ah,_0e47cd_data(%edx)
		inc    %al
		cmp    $0x000005,%al
		jb     _063703_jump
		pop    %edx
		ret    



_06371c_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		xor    %al,%al

	_063722_jump:
		xor    %edx,%edx
		mov    %al,%dl
		imul   $0x000014,%edx,%edx
		mov    _0e47cd_data(%edx),%bl
		cmp    $0x000001,%bl
		jne    _063736_jump
		add    %bl,%ah

	_063736_jump:
		inc    %al
		cmp    $0x000005,%al
		jb     _063722_jump
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    _0e4829_data,%dl
		mov    _0e4828_data,%bl
		mov    _09719e_data(%ebx,%edx,2),%dl
		and    $_0000ff_case,%edx
		cmp    _097198_data(%edx),%ah
		sete   %al
		pop    %edx
		pop    %ebx
		ret    



_063768_func:
		mov    0x000050(%eax),%al
		cmp    $0x000005,%al
		jb     _063771_jump
		mov    $_0000ff_case,%al

	_063771_jump:
		ret    



_063774_func:
		push   %ebx
		push   %ecx
		mov    %al,%bl
		test   %dl,%dl
		jne    _063783_jump
		xor    %dh,%dh
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_063783_jump:
		xor    %ecx,%ecx
		mov    $0x0000f0,%eax
		mov    %dl,%cl
		mov    %eax,%edx
		add    %ecx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		and    $_0000ff_case,%ebx
		add    %ebx,%ebx
		inc    %ebx
		imul   %ebx,%eax
		mov    _0cf200_data,%ebx
		sar    $0x000010,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		testb  $0x000008,0x000081(%ebx,%eax,4)
		je     _0637c6_jump
		add    $0x000050,%edx

	_0637c6_jump:
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_0637cc_func:
		test   %dx,%dx
		jne    _0637d7_jump
		mov    $0x00002c,%eax
		ret    

	_0637d7_jump:
		shl    $0x000004,%eax
		add    $0x00002c,%eax
		ret    



_0637e0_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%ebx
		movswl %dx,%edx
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx

	_0637f4_jump:
		cwtl   
		call   _01e1b4_func
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		jne    _06381c_jump
		add    $0x000010,%ebx
		movswl %bx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %cx,%eax
		sar    $0x000004,%eax
		jmp    _0637f4_jump

	_06381c_jump:
		xor    %ch,%ch
		and    $0x0000f0,%bl
		and    $0x00000f,%cl
		mov    %ebx,%esi
		movswl %cx,%edx
		xor    %ebx,%ebx
		call   _024c1c_func
		mov    %esi,%ebx
		add    %ebx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_063838_switch:
		.long   _0638d9_case
		.long   _0638d9_case
		.long   _0638d9_case
		.long   _063921_case
		.long   _063921_case
		.long   _0638d9_case




_063850_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000084,%esp
		call   _063768_func
		mov    %al,%bl
		cmp    $_0000ff_case,%al
		je     _0639bf_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,4),%ebp
		add    %edx,%ebp
		shl    $0x000002,%ebp
		mov    _0e47c8_data(%ebp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %edx,%eax
		mov    _0cc7a0_data,%esi
		shl    $0x000002,%eax
		mov    %esp,%edi
		add    %eax,%esi
		xor    %eax,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    0x000068(%esp),%al
		mov    0x000028(%esp),%esi
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x00002c(%esp),%ecx
		mov    0x000069(%esp),%al
		add    %eax,%ecx
		xor    %ah,%ah
		mov    %ah,_0e47cd_data(%ebp)
		mov    _0e482a_data,%al
		cmp    $0x000005,%al
		ja     _0639bf_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_063838_switch(,%eax,4)

	_0638d9_case:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    %si,_0e47bc_data(,%eax,4)
		mov    $0x000002,%bl
		mov    %cx,_0e47be_data(,%eax,4)
		mov    $0x000001,%edi
		mov    %bl,_0e47ce_data(,%eax,4)
		mov    %di,_0e47c0_data(,%eax,4)
		mov    %di,_0e47c2_data(,%eax,4)
		add    $0x000084,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063921_case:
		cmpb   $0x000003,_0e482a_data
		jne    _06392e_jump
		mov    $0x000004,%al
		jmp    _063930_jump

	_06392e_jump:
		xor    %al,%al

	_063930_jump:
		cmp    $0x000001,%bl
		je     _06393b_jump
		mov    $0x000004,%ah
		sub    %al,%ah
		mov    %ah,%al

	_06393b_jump:
		mov    $0x000006,%edx
		and    $_0000ff_case,%eax
		xor    %ecx,%ecx
		call   _063774_func
		mov    %bl,%cl
		mov    %eax,%edx
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		mov    %dx,_0e47bc_data(,%eax,4)
		xor    %eax,%eax
		mov    $0x000009,%edx
		mov    %bl,%al
		sub    %eax,%edx
		movswl %dx,%eax
		mov    $0x000001,%edx
		call   _0637cc_func
		xor    %edx,%edx
		mov    %bl,%dl
		mov    %eax,%ecx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		add    $0x000008,%ecx
		shl    $0x000002,%eax
		xor    %dh,%dh
		mov    %cx,_0e47be_data(%eax)
		mov    %dh,_0e47ce_data(%eax)
		test   %bl,%bl
		movw   $0x000032,_0e47c0_data(%eax)
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		movw   $0x000046,_0e47c2_data(,%eax,4)

	_0639bf_jump:
		add    $0x000084,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0639cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %al,%cl
		cmp    _0e4827_data,%al
		jae    _063c74_jump
		cmp    $0x000005,%al
		jae    _063c74_jump
		movzbl %al,%ebp
		lea    0x000000(,%ebp,4),%edi
		add    %ebp,%edi
		shl    $0x000002,%edi
		mov    _0e47c8_data(%edi),%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		cmpl   $0x000000,0x000024(%esi)
		jne    _063c74_jump
		movb   $0x000000,0x00007e(%esi)
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f3d4_func
		xor    %dh,%dh
		mov    _0e482a_data,%bl
		mov    %dh,_0e47cd_data(%edi)
		test   %bl,%bl
		je     _063a5f_jump
		cmp    $0x000003,%bl
		je     _063a5f_jump
		cmp    $0x000004,%bl
		jne    _063aea_jump

	_063a5f_jump:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d444_func
		mov    0x00000c(%esi),%eax
		mov    0x000008(%eax),%eax
		mov    0x000052(%eax),%al
		mov    %al,0x00006a(%esi)
		xor    %eax,%eax
		mov    %cl,%al
		mov    %eax,%edx
		lea    0x000000(,%eax,4),%ebp
		mov    $0x000004,%bl
		add    %eax,%ebp
		xor    %eax,%edx
		shl    $0x000002,%ebp
		mov    _0e4827_data,%dl
		mov    %bl,_0e47ce_data(%ebp)
		call   _063774_func
		mov    %ax,_0e47bc_data(%ebp)
		mov    _0cf200_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0cc7a0_data,%eax
		xor    %edx,%edx
		mov    0x000069(%eax,%edi,4),%dl
		mov    0x000038(%eax,%edi,4),%cx
		xor    %eax,%eax
		add    %ecx,%edx
		mov    0x000069(%esi),%al
		mov    $0x000001,%edi
		sub    %eax,%edx
		mov    %di,_0e47c0_data(%ebp)
		mov    %dx,_0e47be_data(%ebp)
		jmp    _063be3_jump

	_063aea_jump:
		mov    $0x00000b,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d444_func
		mov    0x00000c(%esi),%eax
		mov    0x000008(%eax),%eax
		mov    0x00005a(%eax),%al
		mov    %al,0x00006a(%esi)
		cmpb   $0x000005,_0e482a_data
		jne    _063b50_jump
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    _0e4827_data,%dl
		call   _063774_func
		xor    %edx,%edx
		mov    %ax,_0e47bc_data(%edi)
		xor    %eax,%eax
		call   _0637cc_func
		mov    $0x000001,%dh
		mov    %ax,_0e47be_data(%edi)
		mov    _0e4820_data,%ax
		mov    %dh,_0e47ce_data(%edi)
		mov    %ax,_0e47c0_data(%edi)
		jmp    _063be3_jump

	_063b50_jump:
		xor    %edx,%edx
		mov    _0e4827_data,%al
		mov    _0e4826_data,%dl
		inc    %al
		cmp    _0971a6_data(%edx),%cl
		jb     _063b76_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %cl,%al
		inc    %al
		and    $_0000ff_case,%eax
		jmp    _063b7c_jump

	_063b76_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebp,%eax

	_063b7c_jump:
		call   _063774_func
		mov    %ax,_0e47bc_data(%edi)
		xor    %eax,%eax
		mov    %cl,%al
		lea    0x000000(,%eax,4),%edi
		add    %eax,%edi
		xor    %eax,%eax
		shl    $0x000002,%edi
		mov    %cl,%al
		mov    _0e47bc_data(%edi),%dx
		shl    $0x000002,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,_0e47bc_data(%edi)
		xor    %edx,%edx
		call   _0637cc_func
		mov    $0x000003,%dl
		mov    %ax,_0e47be_data(%edi)
		mov    %dl,_0e47ce_data(%edi)
		test   %cl,%cl
		jne    _063bda_jump
		mov    _0e4820_data,%ax
		mov    %ax,_0e47c0_data(%edi)
		jmp    _063be3_jump

	_063bda_jump:
		movw   $0x000001,_0e47c0_data(%edi)

	_063be3_jump:
		lea    0x000004(%esp),%eax
		push   %eax
		lea    0x00000c(%esp),%eax
		push   %eax
		mov    _0cf200_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		lea    0x000014(%esp),%ecx
		shl    $0x000005,%edi
		lea    0x000008(%esp),%ebx
		add    %eax,%edi
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edi
		mov    $0x000006,%edx
		add    %edi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01d7e0_func
		mov    _0cf200_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0cc7a0_data,%eax
		testb  $0x000008,0x000081(%eax,%edi,4)
		je     _063c42_jump
		mov    0x000008(%esp),%eax
		add    %ax,(%esp)

	_063c42_jump:
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		xor    %eax,%eax
		mov    0x00000a(%esp),%edx
		mov    0x000069(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000028(%esi),%ax
		mov    %edx,0x00002c(%esi)
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)

	_063c74_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063c80_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		test   %ax,%ax
		jne    _063c9b_jump
		test   %dx,%dx
		jl     _063c93_jump
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_063c93_jump:
		mov    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_063c9b_jump:
		test   %dx,%dx
		jne    _063cbc_jump
		test   %ax,%ax
		jne    _063caa_jump
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_063caa_jump:
		jle    _063cb4_jump
		mov    $0x000004,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_063cb4_jump:
		mov    $0x00000c,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_063cbc_jump:
		cwtl   
		test   %eax,%eax
		jge    _063cc3_jump
		neg    %eax

	_063cc3_jump:
		mov    %eax,%ecx
		movswl %dx,%eax
		test   %eax,%eax
		jge    _063cce_jump
		neg    %eax

	_063cce_jump:
		sub    %ax,%cx
		jne    _063cda_jump
		mov    $0x000006,%eax
		jmp    _063ceb_jump

	_063cda_jump:
		test   %cx,%cx
		jl     _063ce6_jump
		mov    $0x000005,%eax
		jmp    _063ceb_jump

	_063ce6_jump:
		mov    $0x000007,%eax

	_063ceb_jump:
		test   %bx,%bx
		jle    _063cfe_jump
		test   %dx,%dx
		jle    _063d0e_jump
		mov    $0x000008,%ah
		sub    %al,%ah
		mov    %ah,%al
		pop    %ecx
		pop    %ebx
		ret    

	_063cfe_jump:
		test   %dx,%dx
		jge    _063d0c_jump
		mov    $0x000010,%ah
		sub    %al,%ah
		mov    %ah,%al
		pop    %ecx
		pop    %ebx
		ret    

	_063d0c_jump:
		add    $0x000008,%al

	_063d0e_jump:
		pop    %ecx
		pop    %ebx
		ret    



_063d14_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000040(%eax),%edx
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _063c80_func
		mov    %al,0x00006b(%ebx)
		pop    %edx
		pop    %ebx
		ret    

_063d30_switch:
		.long   _063dd8_case
		.long   _063e13_case
		.long   _063e13_case
		.long   _063e13_case
		.long   _063e48_case
		.long   _063e87_case
		.long   _063e87_case
		.long   _063e87_case
		.long   _063f98_case
		.long   _063ead_case
		.long   _063ead_case
		.long   _063ead_case
		.long   _063ec8_case
		.long   _063f01_case
		.long   _063f01_case
		.long   _063f01_case




_063d70_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    %ecx,%edi
		lea    0x000004(%esp),%ebx
		push   %ebx
		lea    0x000010(%esp),%ebx
		lea    0x00000c(%esp),%ecx
		push   %ebx
		xor    %edx,%edx
		lea    0x000018(%esp),%ebx
		call   _01d7e0_func
		mov    0x000024(%esp),%eax
		movw   $0x000006,(%edi)
		movw   $0x000006,(%eax)
		cmpb   $0x000002,0x00006d(%esi)
		jne    _063f66_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x00000a,%dl
		je     _063dc1_jump
		cmp    $0x00000b,%dl
		jne    _063f66_jump

	_063dc1_jump:
		mov    0x00006b(%esi),%al
		cmp    $0x00000f,%al
		ja     _063f29_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		jmp    *%cs:_063d30_switch(,%ebx,4)

	_063dd8_case:
		mov    0x00000a(%esp),%ebx
		movswl (%edi),%ecx
		sar    $0x000010,%ebx
		sub    %ecx,%ebx
		mov    0x00000e(%esp),%ecx
		sar    %ebx
		sar    $0x000010,%ecx
		add    %ecx,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000008(%esp),%ebx
		add    0x000004(%esp),%ebx
		mov    0x000024(%esp),%eax
		mov    (%eax),%ax
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_063e13_case:
		mov    0x000010(%esp),%ebx
		mov    0x00000c(%esp),%esi
		mov    (%edi),%ax
		add    %esi,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000024(%esp),%eax
		mov    0x000008(%esp),%ebx
		mov    0x000004(%esp),%edi
		mov    (%eax),%ax
		add    %edi,%ebx
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_063e48_case:
		mov    0x00000c(%esp),%eax
		mov    %ax,(%edi)
		mov    0x000010(%esp),%ebx
		add    %eax,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000002(%esp),%ecx
		mov    0x000024(%esp),%ebx
		sar    $0x000010,%ecx
		movswl (%ebx),%ebx
		sub    %ebx,%ecx
		mov    %ecx,%ebx
		mov    0x000006(%esp),%ecx
		sar    %ebx
		sar    $0x000010,%ecx
		mov    (%esp),%eax
		add    %ecx,%ebx
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_063e87_case:
		mov    0x000010(%esp),%ebx
		mov    0x00000c(%esp),%edx
		mov    (%edi),%ax
		add    %edx,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		mov    (%esp),%ebx
		mov    0x000008(%esp),%eax
		mov    %ax,(%ebx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_063ead_case:
		mov    0x000010(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    (%esp),%ebx
		mov    0x000008(%esp),%eax
		mov    %ax,(%ebx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_063ec8_case:
		mov    0x00000c(%esp),%eax
		mov    %ax,(%edi)
		mov    0x000010(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000024(%esp),%ebx
		mov    0x000002(%esp),%ecx
		movswl (%ebx),%ebx
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x000006(%esp),%ebx
		sar    %ecx
		sar    $0x000010,%ebx
		mov    (%esp),%eax
		add    %ecx,%ebx
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_063f01_case:
		mov    0x000010(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000008(%esp),%ebx
		add    0x000004(%esp),%ebx
		mov    0x000024(%esp),%eax
		mov    (%eax),%ax
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_063f29_jump:
		mov    0x00000a(%esp),%ecx
		movswl (%edi),%ebx
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    %ecx
		sar    $0x000010,%ebx
		add    %ecx,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000024(%esp),%eax
		mov    0x000008(%esp),%ebx
		mov    0x000004(%esp),%edi
		mov    (%eax),%ax
		add    %edi,%ebx
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_063f66_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _063fc6_jump
		cmpb   $0x00000e,0x00006c(%esi)
		jne    _063fc6_jump
		xor    %ebx,%ebx
		mov    0x00006d(%esi),%bl
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    0x00006c(%esi),%bl
		testb  $0x00000f,0x000005(%ecx,%ebx,8)
		jne    _063fc6_jump
		mov    0x000024(%esp),%ebx
		mov    0x000004(%esp),%eax
		mov    %ax,(%ebx)

	_063f98_case:
		mov    0x00000a(%esp),%ecx
		movswl (%edi),%ebx
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    %ecx
		sar    $0x000010,%ebx
		add    %ecx,%ebx
		mov    %bx,0x000000(%ebp)
		mov    (%esp),%ebx
		mov    0x000008(%esp),%eax
		mov    %ax,(%ebx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_063fc6_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _063fd2_jump
		cmpb   $0x00000d,0x00006c(%esi)
		je     _063ffa_jump

	_063fd2_jump:
		mov    0x00006d(%esi),%dh
		cmp    $0x000002,%dh
		jne    _06402e_jump
		cmpb   $0x00000e,0x00006c(%esi)
		jne    _06402e_jump
		xor    %ebx,%ebx
		mov    %dh,%bl
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    0x00006c(%esi),%bl
		testb  $0x00000f,0x000005(%ecx,%ebx,8)
		je     _06402e_jump

	_063ffa_jump:
		mov    0x000028(%esi),%ecx
		movswl (%edi),%ebx
		add    $0x000080,%ecx
		sar    %ebx
		sub    %ebx,%ecx
		mov    %cx,0x000000(%ebp)
		mov    0x000024(%esp),%ebx
		mov    0x00002c(%esi),%ecx
		movswl (%ebx),%ebx
		add    $0x000060,%ecx
		sar    %ebx
		mov    (%esp),%eax
		sub    %ebx,%ecx
		mov    %cx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_06402e_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _064077_jump
		cmpb   $0x00000c,0x00006c(%esi)
		jne    _064077_jump
		mov    0x00000a(%esp),%ecx
		movswl (%edi),%ebx
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    %ecx
		sar    $0x000010,%ebx
		add    %ecx,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000024(%esp),%eax
		mov    0x000008(%esp),%ebx
		mov    0x000004(%esp),%esi
		mov    (%eax),%ax
		add    %esi,%ebx
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_064077_jump:
		mov    (%edi),%ax
		mov    %eax,%edx
		mov    %ax,0x000000(%ebp)
		neg    %edx
		mov    0x000024(%esp),%eax
		mov    %dx,0x000000(%ebp)
		mov    (%eax),%ax
		mov    (%esp),%ebx
		mov    %eax,%ecx
		mov    %ax,(%ebx)
		neg    %ecx
		mov    %cx,(%ebx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_0640a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e4822_data,%si
		mov    _0e4820_data,%di
		mov    _0e482a_data,%ah
		cmp    $0x000001,%ah
		je     _0640c7_jump
		cmp    $0x000002,%ah
		jne    _0640e2_jump

	_0640c7_jump:
		mov    _0e4826_data,%dh
		inc    %dh
		mov    %dh,_0e4826_data
		cmp    $0x000005,%dh
		jb     _0640e2_jump
		xor    %bh,%bh
		mov    %bh,_0e4826_data

	_0640e2_jump:
		mov    _0e4829_data,%al
		mov    _0e4824_data,%cl
		mov    %edi,%edx
		mov    %esi,%ebx
		sub    $0x00000a,%edx
		sub    $0x00000a,%ebx
		inc    %al
		test   %cl,%cl
		jne    _064127_jump
		mov    _0e4828_data,%ah
		inc    %ah
		mov    %ah,_0e4828_data
		cmp    $0x000002,%ah
		jne    _064142_jump
		mov    %cl,_0e4828_data
		mov    %al,_0e4829_data
		cmp    $0x000004,%al
		jne    _064142_jump
		mov    %cl,_0e4829_data
		jmp    _06413e_jump

	_064127_jump:
		xor    %ch,%ch
		mov    %al,_0e4829_data
		mov    %ch,_0e4828_data
		cmp    $0x000004,%al
		jne    _064142_jump
		mov    %ch,_0e4829_data

	_06413e_jump:
		mov    %ebx,%esi
		mov    %edx,%edi

	_064142_jump:
		cmp    $0x000064,%si
		jge    _06414d_jump
		mov    $0x000064,%esi

	_06414d_jump:
		cmp    $0x000032,%di
		jge    _064158_jump
		mov    $0x000032,%edi

	_064158_jump:
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ah,_0e4825_data
		xor    %eax,%eax
		mov    _0e4829_data,%dl
		mov    _0e4828_data,%al
		mov    _09719e_data(%eax,%edx,2),%al
		mov    %al,_0e482a_data
		xor    %eax,%eax
		mov    _0e482a_data,%al
		xor    %dl,%dl
		mov    _097198_data(%eax),%al
		mov    %dl,_0e4824_data
		mov    %al,_0e4827_data
		xor    %al,%al

	_064197_jump:
		xor    %ebx,%ebx
		mov    %al,%bl
		imul   $0x000014,%ebx,%ebx
		mov    _0e47c8_data(%ebx),%ecx
		sar    $0x000010,%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0cc7a0_data,%edx
		movl   $0x000000,0x000024(%ecx,%edx,1)
		mov    _0e47c8_data(%ebx),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    0x000081(%edx,%ebx,1),%cl
		and    $0x0000fb,%cl
		inc    %al
		mov    %cl,0x000081(%edx,%ebx,1)
		cmp    $0x000005,%al
		jb     _064197_jump
		mov    %di,_0e4820_data
		mov    %si,_0e4822_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0641f8_func:
		push   %ecx
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax
		pop    %ecx
		ret    



_064200_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		call   _063768_func
		cmp    $_0000ff_case,%al
		je     _064317_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _0cf2ae_data,%dx
		add    _0e47bc_data(%eax),%dx
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%si
		mov    0x000068(%ebx),%cl
		mov    _0e47be_data(%eax),%di
		add    %esi,%ecx
		mov    _0cf2b0_data,%si
		sub    %ecx,%edx
		xor    %ecx,%ecx
		add    %edi,%esi
		mov    0x000069(%ebx),%cl
		add    0x00002c(%ebx),%cx
		sub    %ecx,%esi
		cmpw   $0x000000,_0e47c0_data(%eax)
		je     _0642f5_jump
		xor    %edi,%edi
		mov    %di,_0e47c0_data(%eax)
		test   %dx,%dx
		jne    _064291_jump
		xor    %eax,%eax
		call   _0641f8_func
		mov    %ax,0x000040(%ebx)
		mov    $0xffffffff,%eax
		call   _0641f8_func
		mov    %ax,0x000042(%ebx)
		jmp    _0642e4_jump

	_064291_jump:
		jl     _06429a_jump
		mov    $0x000002,%eax
		jmp    _06429f_jump

	_06429a_jump:
		mov    $0xfffffffe,%eax

	_06429f_jump:
		movswl %si,%esi
		movswl %ax,%ecx
		shl    $0x000004,%esi
		imul   %ecx,%esi
		movswl %dx,%eax
		lea    0x000000(,%eax,8),%edx
		imul   %eax,%edx
		imul   %ecx,%eax
		shl    $0x000003,%esi
		add    %esi,%edx
		neg    %edx
		lea    0x000000(,%eax,8),%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _0641f8_func
		sub    $0x00000a,%eax
		mov    %dx,0x000042(%ebx)
		mov    %ax,0x000040(%ebx)

	_0642e4_jump:
		mov    %ebx,%eax
		call   _063d14_func
		movb   $0x000003,0x00007e(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0642f5_jump:
		mov    0x00003e(%ebx),%ecx
		movswl %dx,%eax
		sar    $0x000010,%ecx
		imul   %ecx,%eax
		addw   $0x000004,0x000042(%ebx)
		test   %eax,%eax
		jge    _064310_jump
		movw   $0x000000,0x000040(%ebx)

	_064310_jump:
		mov    %ebx,%eax
		call   _063d14_func

	_064317_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064320_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		call   _063768_func
		mov    %al,%bl
		cmp    $_0000ff_case,%al
		je     _0644e0_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		mov    _0cf2ae_data,%di
		shl    $0x000002,%edx
		xor    %eax,%eax
		mov    _0e47bc_data(%edx),%cx
		mov    0x000068(%esi),%al
		add    %ecx,%edi
		add    0x000028(%esi),%ax
		sub    %eax,%edi
		mov    _0cf2b0_data,%ax
		mov    %di,(%esp)
		mov    _0e47be_data(%edx),%di
		add    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		sub    %eax,%edi
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _064391_jump
		neg    %eax

	_064391_jump:
		cmp    $0x000004,%eax
		jge    _0643a8_jump
		movswl %di,%eax
		test   %eax,%eax
		jge    _06439f_jump
		neg    %eax

	_06439f_jump:
		cmp    $0x000004,%eax
		jl     _064438_jump

	_0643a8_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %bl,%dl
		mov    %dl,_0e47cd_data(,%eax,4)
		movswl %di,%eax
		test   %eax,%eax
		jge    _0643c7_jump
		neg    %eax

	_0643c7_jump:
		mov    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _0643d8_jump
		neg    %eax

	_0643d8_jump:
		cmp    %ebx,%eax
		jge    _0643de_jump
		mov    %ebx,%eax

	_0643de_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    (%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000004,%cl
		call   _0641f8_func
		mov    %ax,0x000040(%esi)
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _0641f8_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _063d14_func
		movb   $0x000003,0x00007e(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064438_jump:
		mov    $0x000001,%ah
		mov    %ah,_0e47cd_data(%edx)
		mov    _0e482a_data,%dl
		cmp    %ah,%dl
		je     _064465_jump
		cmp    $0x000002,%dl
		je     _064465_jump
		cmpb   $0x000002,0x00006d(%esi)
		jne    _06445b_jump
		cmpb   $0x00000d,0x00006c(%esi)
		je     _064474_jump

	_06445b_jump:
		movb   $0x000002,0x00006d(%esi)
		movb   $0x00000d,0x00006c(%esi)
		jmp    _064474_jump

	_064465_jump:
		mov    $0x000001,%edx
		xor    %eax,%eax
		call   _063c80_func
		mov    %al,0x00006b(%esi)

	_064474_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		movw   $0x000000,0x000040(%esi)
		add    %edx,%eax
		movw   $0x000000,0x000042(%esi)
		mov    _0e47ba_data(,%eax,4),%ebx
		mov    _0cf2ac_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    _0e47bc_data(,%eax,4),%eax
		mov    _0cf2ae_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		call   _06371c_func
		test   %al,%al
		je     _0644e0_jump
		movb   $0x000003,_0e4825_data
		call   _063700_func

	_0644e0_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0644ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		call   _063768_func
		mov    %al,%dl
		cmp    $_0000ff_case,%al
		je     _0646dd_jump
		test   %al,%al
		je     _06452f_jump
		je     _0646dd_jump
		and    $_0000ff_case,%eax
		lea    -0x000001(%eax),%ebx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		cmpw   $0x000000,_0e47c2_data(,%eax,4)
		jne    _0646dd_jump

	_06452f_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		mov    _0e47c2_data(%eax),%cx
		test   %cx,%cx
		jne    _0646d3_jump
		mov    %cx,(%esp)
		mov    _0e47ce_data(%eax),%dh
		xor    %edi,%edi
		cmp    $0x000002,%dh
		je     _06459a_jump
		mov    _0cf2ae_data,%di
		xor    %ebx,%ebx
		mov    _0e47bc_data(%eax),%cx
		mov    0x000068(%esi),%bl
		add    %ecx,%edi
		add    0x000028(%esi),%bx
		mov    _0e47be_data(%eax),%cx
		sub    %ebx,%edi
		xor    %eax,%eax
		mov    _0cf2b0_data,%bx
		mov    0x000069(%esi),%al
		add    %ecx,%ebx
		add    0x00002c(%esi),%ax
		sub    %eax,%ebx
		mov    %bx,(%esp)

	_06459a_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _0645a3_jump
		neg    %eax

	_0645a3_jump:
		cmp    $0x000002,%eax
		jge    _0645be_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0645b5_jump
		neg    %eax

	_0645b5_jump:
		cmp    $0x000002,%eax
		jl     _064641_jump

	_0645be_jump:
		and    $_0000ff_case,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %ch,%ch
		mov    %ch,_0e47cd_data(,%eax,4)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0645e3_jump
		neg    %eax

	_0645e3_jump:
		mov    %eax,%ebx
		movswl %di,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _0645f0_jump
		neg    %eax

	_0645f0_jump:
		cmp    %ebx,%eax
		jge    _0645f6_jump
		mov    %ebx,%eax

	_0645f6_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000004,%cl
		call   _0641f8_func
		mov    %ax,0x000040(%esi)
		mov    (%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _0641f8_func
		mov    %ax,0x000042(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064641_jump:
		and    $_0000ff_case,%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		mov    $0x000001,%bl
		shl    $0x000002,%edx
		xor    %eax,%eax
		mov    %bl,_0e47cd_data(%edx)
		call   _0641f8_func
		mov    %ax,0x000040(%esi)
		xor    %eax,%eax
		call   _0641f8_func
		mov    %ax,0x000042(%esi)
		cmpb   $0x000002,_0e47ce_data(%edx)
		je     _0646b5_jump
		mov    _0e47ba_data(%edx),%eax
		mov    _0cf2ac_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		mov    _0cf2ae_data,%eax
		mov    _0e47bc_data(%edx),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%esi)

	_0646b5_jump:
		call   _06371c_func
		test   %al,%al
		je     _0646dd_jump
		movb   $0x000003,_0e4825_data
		call   _063700_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0646d3_jump:
		mov    %ecx,%esi
		dec    %esi
		mov    %si,_0e47c2_data(%eax)

	_0646dd_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0646e8_switch:
		.long   _0649db_case
		.long   _064933_case
		.long   _064a17_case
		.long   _0649b3_case




_0646f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		call   _063768_func
		mov    %al,0x000010(%esp)
		cmp    $_0000ff_case,%al
		je     _064cf2_jump
		test   %al,%al
		je     _06473e_jump
		je     _064cf2_jump
		and    $_0000ff_case,%eax
		lea    -0x000001(%eax),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		cmpw   $0x000000,_0e47c0_data(,%eax,4)
		jne    _064cf2_jump

	_06473e_jump:
		movzbl 0x000010(%esp),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		shl    $0x000002,%eax
		mov    _0e47c0_data(%eax),%di
		test   %di,%di
		jne    _064883_jump
		cmpb   $0x000000,_0e47cd_data(%eax)
		jne    _064cf2_jump
		mov    _0e47c8_data(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		xor    %ebx,%ebx
		mov    0x000068(%eax),%bl
		xor    %edx,%edx
		mov    0x000028(%eax),%cx
		mov    0x000069(%eax),%dl
		add    %ecx,%ebx
		mov    0x00002c(%eax),%cx
		movswl %bx,%eax
		add    %edx,%ecx
		cmp    $0xffffffec,%eax
		jl     _0647d6_jump
		mov    _0cf284_data,%edx
		sar    $0x000010,%edx
		add    $0x000154,%edx
		cmp    %edx,%eax
		jg     _0647d6_jump
		movswl %cx,%eax
		cmp    $0xffffffec,%eax
		jl     _0647d6_jump
		mov    _0cf276_data,%edx
		sar    $0x000010,%edx
		add    $0x0000dc,%edx
		cmp    %edx,%eax
		jle    _064cf2_jump

	_0647d6_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		movb   $0x000001,_0e47cd_data(%edx)
		mov    _0e47c8_data(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		movl   $0x000000,0x000024(%ebx,%eax,4)
		mov    _0e47c8_data(%edx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		andb   $0x0000fb,0x000081(%ebx,%eax,4)
		call   _06371c_func
		test   %al,%al
		je     _064cf2_jump
		mov    _0cf200_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		mov    $0x000004,%ch
		mov    0x000076(%edx,%eax,4),%bl
		mov    %ch,_0e4825_data
		test   %bl,%bl
		jne    _064cf2_jump
		mov    $0x000001,%bh
		mov    _0cf228_data,%cl
		mov    %bh,_0cf465_data
		or     $0x000010,%cl
		mov    %bh,_0cf467_data
		mov    %cl,_0cf228_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064883_jump:
		cmp    $0x000001,%di
		jne    _064cc1_jump
		mov    _0e47c4_data(%eax),%di
		cmp    $0x00000f,%di
		jne    _064bd2_jump
		movzbw _0ce0ac_data,%di
		mov    %edi,(%esp)
		mov    _0ce06c_data,%di
		add    (%esp),%edi
		mov    %di,_0e47bc_data(%eax)
		movzbw _0ce0ad_data,%di
		mov    %edi,(%esp)
		mov    _0ce070_data,%di
		add    (%esp),%edi
		mov    %di,_0e47be_data(%eax)
		movzbw 0x000068(%esi),%di
		mov    %edi,(%esp)
		mov    0x000028(%esi),%di
		add    (%esp),%edi
		mov    %edi,(%esp)
		mov    _0e47bc_data(%eax),%di
		sub    (%esp),%edi
		mov    %di,0x00000c(%esp)
		movzbw 0x000069(%esi),%di
		mov    %edi,(%esp)
		mov    0x00002c(%esi),%di
		add    (%esp),%edi
		mov    %edi,(%esp)
		mov    _0e47be_data(%eax),%di
		sub    (%esp),%edi
		mov    _0e47ce_data(%eax),%al
		mov    %di,0x000008(%esp)
		cmp    $0x000003,%al
		ja     _064a47_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_0646e8_switch(,%eax,4)

	_064933_case:
		mov    0x000006(%esp),%eax
		mov    $0x00000b,%ebx
		sar    $0x000010,%eax
		mov    %bx,0x000004(%esp)
		test   %eax,%eax
		jge    _06494a_jump
		neg    %eax

	_06494a_jump:
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _06495b_jump
		neg    %eax

	_06495b_jump:
		cmp    %ebx,%eax
		jge    _064961_jump
		mov    %ebx,%eax

	_064961_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		cwtl   
		mov    $0x000004,%cl
		call   _0641f8_func
		mov    %eax,%edi
		mov    %eax,%ebx
		mov    0x000008(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		cwtl   
		call   _0641f8_func
		mov    %eax,%ecx
		movswl %ax,%edx
		movswl %di,%eax
		jmp    _064a40_jump

	_0649b3_case:
		movw   $0x00000b,0x000004(%esp)
		xor    %eax,%eax
		call   _0641f8_func
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000003,%eax
		call   _0641f8_func
		mov    %eax,%ecx
		movswl %ax,%edi
		movswl %dx,%eax
		mov    %edi,%edx
		jmp    _064a40_jump

	_0649db_case:
		mov    $0x00000b,%ecx
		mov    0x00000c(%esp),%edi
		mov    %cx,0x000004(%esp)
		test   %di,%di
		jl     _0649f5_jump
		mov    $0x000003,%eax
		jmp    _0649fa_jump

	_0649f5_jump:
		mov    $0xfffffffd,%eax

	_0649fa_jump:
		cwtl   
		call   _0641f8_func
		mov    %eax,%edx
		mov    %eax,%ebx
		xor    %eax,%eax
		call   _0641f8_func
		mov    %eax,%ecx
		cwtl   
		movswl %dx,%edi
		mov    %eax,%edx
		mov    %edi,%eax
		jmp    _064a40_jump

	_064a17_case:
		mov    $0xffffffff,%eax
		mov    $0x00000e,%edx
		call   _0641f8_func
		mov    %dx,0x000004(%esp)
		mov    %eax,%ebx
		mov    $0x000005,%eax
		mov    $0x000001,%edx
		call   _0641f8_func
		mov    %eax,%ecx
		xor    %eax,%eax

	_064a40_jump:
		call   _063c80_func
		mov    %al,%dl

	_064a47_jump:
		movzbl 0x000010(%esp),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		shl    $0x000002,%eax
		mov    _0e47ce_data(%eax),%dh
		cmp    $0x000002,%dh
		jne    _064b23_jump
		mov    0x000004(%esp),%dh
		movzbl 0x00006d(%esi),%edi
		mov    0x00000c(%esi),%ebp
		shl    $0x000002,%edi
		mov    %dh,0x00006c(%esi)
		mov    %dl,0x00006b(%esi)
		add    %ebp,%edi
		movzbl 0x00006c(%esi),%ebp
		mov    (%edi),%edi
		shl    $0x000003,%ebp
		add    %ebp,%edi
		andb   $0x0000f0,0x000005(%edi)
		mov    %dl,_0e47cc_data(%eax)
		mov    %bx,_0e47c6_data(%eax)
		mov    _0e47c4_data(%eax),%di
		mov    %cx,_0e47c8_data(%eax)
		dec    %edi
		mov    _0e47c6_data(%eax),%dx
		mov    %di,_0e47c4_data(%eax)
		mov    %dx,0x000040(%esi)
		mov    _0e47c8_data(%eax),%dx
		xor    %ebx,%ebx
		mov    %dx,0x000042(%esi)
		mov    $0x00000f,%edx
		mov    %bx,_0e47c0_data(%eax)
		xor    %bl,%bl
		mov    %dx,_0e47c4_data(%eax)
		xor    %edx,%edx
		mov    %bl,_0e47cd_data(%eax)
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%cl
		and    $0x0000f0,%cl
		mov    %cl,0x000005(%ebx,%eax,1)
		mov    %cl,%ch
		or     $0x000002,%ch
		mov    %ch,0x000005(%ebx,%eax,1)
		movb   $0x000000,0x000071(%esi)
		movb   $0x000008,0x000072(%esi)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064b23_jump:
		cmp    $0x000003,%dh
		jne    _064b92_jump
		mov    0x000004(%esp),%dh
		mov    %dh,0x00006c(%esi)
		mov    %dl,0x00006b(%esi)
		mov    %dl,_0e47cc_data(%eax)
		mov    %bx,_0e47c6_data(%eax)
		mov    _0e47c4_data(%eax),%bx
		mov    %cx,_0e47c8_data(%eax)
		dec    %ebx
		mov    _0e47c6_data(%eax),%dx
		mov    %bx,_0e47c4_data(%eax)
		mov    %dx,0x000040(%esi)
		mov    _0e47c8_data(%eax),%dx
		mov    $0x00000f,%ecx
		mov    %dx,0x000042(%esi)
		xor    %bl,%bl
		mov    %cx,_0e47c4_data(%eax)
		xor    %esi,%esi
		mov    %bl,_0e47cd_data(%eax)
		mov    %si,_0e47c0_data(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064b92_jump:
		cmp    0x00006b(%esi),%dl
		jne    _064cf2_jump
		mov    0x000004(%esp),%dh
		mov    %dh,0x00006c(%esi)
		mov    %dl,0x00006b(%esi)
		mov    %dl,_0e47cc_data(%eax)
		mov    %bx,_0e47c6_data(%eax)
		mov    _0e47c4_data(%eax),%dx
		mov    %cx,_0e47c8_data(%eax)
		dec    %edx
		mov    %dx,_0e47c4_data(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064bd2_jump:
		test   %di,%di
		jne    _064c67_jump
		mov    _0e47c6_data(%eax),%dx
		mov    %dx,0x000040(%esi)
		mov    _0e47c8_data(%eax),%dx
		mov    %dx,0x000042(%esi)
		cmpb   $0x000002,_0e47ce_data(%eax)
		jne    _064c2e_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x0000f0,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x000002,%bh
		mov    %bh,0x000005(%edx,%eax,8)
		movb   $0x000000,0x000071(%esi)
		movb   $0x000008,0x000072(%esi)

	_064c2e_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x00000f,%esi
		xor    %edi,%edi
		mov    %si,_0e47c4_data(,%eax,4)
		xor    %cl,%cl
		mov    %di,_0e47c0_data(,%eax,4)
		mov    %cl,_0e47cd_data(,%eax,4)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064c67_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    _0e47cc_data(%eax),%dl
		mov    %dl,0x00006b(%esi)
		testb  $0x000001,_0e47c4_data(%eax)
		je     _064c8b_jump
		addl   $0x000002,0x00002c(%esi)
		jmp    _064c8f_jump

	_064c8b_jump:
		subl   $0x000002,0x00002c(%esi)

	_064c8f_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _0e47c4_data(%eax),%bx
		test   %bx,%bx
		jle    _064cf2_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0e47c4_data(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064cc1_jump:
		jle    _064ccd_jump
		mov    %edi,%ebx
		dec    %ebx
		mov    %bx,_0e47c0_data(%eax)

	_064ccd_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		cmpw   $0x000001,_0e47c0_data(%eax)
		jne    _064cf2_jump
		movw   $0x00000f,_0e47c4_data(%eax)

	_064cf2_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_064cfc_switch:
		.long   _064dd4_case
		.long   _064ded_case
		.long   _064e98_case
		.long   _064e70_case
		.long   _064e18_case




_064d10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x00006d(%eax),%al
		test   %al,%al
		jbe    _064d2a_jump
		cmp    $0x000002,%al
		je     _064db3_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064d2a_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000009,%al
		jne    _064efb_jump
		mov    0x000081(%esi),%bl
		mov    $0x000001,%cl
		or     $0x000020,%bl
		mov    0x000040(%esi),%ax
		mov    %bl,0x000081(%esi)
		test   %ax,%ax
		js     _064d54_jump
		sar    %cl,%ax
		jmp    _064d5d_jump

	_064d54_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_064d5d_jump:
		mov    %ax,0x000040(%esi)
		mov    %esi,%eax
		call   _025590_func
		cmpw   $0x000001,_0cf242_data
		je     _064d7f_jump
		cmpb   $0x000002,_0e4825_data
		jne    _064efb_jump

	_064d7f_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cf242_data
		cmpb   $0x000002,_0e4825_data
		je     _064d9d_jump
		movb   $0x000002,_0e4825_data
		call   _063700_func

	_064d9d_jump:
		mov    $0x00000c,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d444_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064db3_jump:
		andb   $0x0000df,0x000081(%esi)
		mov    0x00006c(%esi),%al
		sub    $0x00000a,%al
		cmp    $0x000004,%al
		ja     _064efb_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_064cfc_switch(,%eax,4)

	_064dd4_case:
		cmpb   $0x000000,_0e4825_data
		jne    _064efb_jump
		mov    %esi,%eax
		call   _064200_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064ded_case:
		mov    _0e4825_data,%ah
		cmp    $0x000003,%ah
		jne    _064e04_jump
		mov    %esi,%eax
		call   _0646f8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064e04_jump:
		test   %ah,%ah
		jne    _064efb_jump
		mov    %esi,%eax
		call   _064320_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064e18_case:
		mov    _0e4825_data,%dl
		cmp    $0x000003,%dl
		jne    _064e2c_jump
		mov    %esi,%eax
		call   _0646f8_func
		jmp    _064e37_jump

	_064e2c_jump:
		test   %dl,%dl
		jne    _064e37_jump
		mov    %esi,%eax
		call   _064320_func

	_064e37_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _064efb_jump
		mov    $0xffffffff,%edx
		xor    %eax,%eax
		call   _063c80_func
		cmp    0x00006b(%esi),%al
		jne    _064efb_jump
		xor    %eax,%eax
		mov    0x00000c(%esi),%edx
		mov    0x00006d(%esi),%al
		movzbl 0x00006c(%esi),%esi
		mov    (%edx,%eax,4),%eax
		andb   $0x0000f0,0x000005(%eax,%esi,8)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064e70_case:
		mov    _0e4825_data,%cl
		cmp    $0x000002,%cl
		jne    _064e87_jump
		mov    %esi,%eax
		call   _0644ec_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064e87_jump:
		cmp    $0x000003,%cl
		jne    _064efb_jump
		mov    %esi,%eax
		call   _0646f8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064e98_case:
		xor    %eax,%eax
		call   _0641f8_func
		mov    %ax,0x000040(%esi)
		mov    $0xffffffff,%eax
		call   _0641f8_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01cca0_func
		test   %al,%al
		je     _064efb_jump
		xor    %eax,%eax
		call   _0641f8_func
		mov    %ax,0x000042(%esi)
		cmpb   $0x000002,_0e4825_data
		jne    _064eed_jump
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		mov    $0x000002,%edx
		call   _063850_func
		mov    %esi,%eax
		call   _01d444_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064eed_jump:
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func

	_064efb_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064f00_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000068(%eax),%dl
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    _0ce06c_data,%cx
		mov    _0ce0ac_data,%bl
		add    %ecx,%ebx
		sub    %dx,%bx
		mov    %ebx,%edx
		je     _064f4a_jump
		add    $0x000081,%eax
		test   %bx,%bx
		setg   %dl
		and    $_0000ff_case,%edx
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)

	_064f4a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_064f50_switch:
		.long   _065065_case
		.long   _065023_case
		.long   _065356_case
		.long   _065356_case
		.long   _06509c_case
		.long   _064fd7_case
		.long   _065134_case

_064f6c_switch:
		.long   _065250_case
		.long   _065269_case
		.long   _065289_case
		.long   _0652ed_case
		.long   _06533d_case
		.long   _065222_case
		.long   _065356_case
		.long   _065257_case
		.long   _0651bf_case




_064f90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    $0x000001,%ah
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ah,_0cf45a_data
		mov    0x00006d(%ecx),%bl
		mov    0x00006c(%ecx),%dl
		mov    %edx,%eax
		dec    %eax
		test   %bx,%bx
		jbe    _064fc0_jump
		cmp    $0x000002,%bx
		je     _0651a8_jump
		jmp    _065356_case

	_064fc0_jump:
		cmp    $0x000006,%ax
		ja     _065356_case
		and    $0x00ffff,%eax
		jmp    *%cs:_064f50_switch(,%eax,4)

	_064fd7_case:
		movw   $0x000001,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _025590_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%eax
		add    $0x000100,%eax
		cmp    %eax,%edx
		jle    _065356_case
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000040(%ecx)
		call   _01d444_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065023_case:
		mov    %ecx,%eax
		call   _064f00_func
		mov    %ecx,%eax
		call   _025590_func
		cmpb   $0x000004,_0e4825_data
		jne    _065044_jump
		call   _063700_func
		call   _0640a4_func

	_065044_jump:
		cmpb   $0x000000,_0e4825_data
		jne    _065356_case
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065065_case:
		mov    %ecx,%eax
		call   _025590_func
		mov    %ecx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _065356_case
		mov    _0e4825_data,%al
		test   %al,%al
		jne    _065356_case
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06509c_case:
		mov    %ecx,%eax
		call   _025590_func
		cmpb   $0x000023,0x00006b(%ecx)
		jne    _06510e_jump
		movswl %bx,%ebx
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		movswl %dx,%eax
		lea    0x000000(,%eax,8),%edx
		mov    (%ebx),%eax
		mov    0x000005(%edx,%eax,1),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _06510e_jump
		mov    0x000032(%ecx),%edx
		mov    $0x000099,%eax
		sar    $0x000010,%edx
		xor    %ebx,%ebx
		call   _071b3c_func
		jmp    _0650f2_jump

	_0650e8_jump:
		xor    %eax,%eax
		mov    %bl,%al
		call   _0639cc_func
		inc    %ebx

	_0650f2_jump:
		xor    %eax,%eax
		mov    _0e4827_data,%al
		cmp    %ax,%bx
		jge    _065356_case
		cmp    $0x000005,%bx
		jl     _0650e8_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06510e_jump:
		mov    %ecx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _065356_case
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d444_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065134_case:
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x00fffe,0x000042(%ecx)
		call   _01cca0_func
		test   %al,%al
		je     _065356_case
		mov    $0x000001,%edx
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%al
		xor    %ebx,%ebx
		mov    %al,0x000081(%ecx)

	_06516b_jump:
		movswl %bx,%eax
		imul   $0x000014,%eax,%eax
		movb   $0x000002,_0e47ce_data(%eax)
		mov    %dx,_0e47c0_data(%eax)
		xor    %ch,%ch
		mov    %ch,_0e47cd_data(%eax)
		mov    $0x00000f,%ecx
		add    %edx,%ebx
		mov    %cx,_0e47c4_data(%eax)
		cmp    $0x000005,%bx
		jl     _06516b_jump
		movb   $0x000002,_0e4825_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0651a8_jump:
		cmp    $0x000008,%ax
		ja     _065356_case
		and    $0x00ffff,%eax
		jmp    *%cs:_064f6c_switch(,%eax,4)

	_0651bf_case:
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		call   _01cca0_func
		test   %al,%al
		jne    _0651e5_jump
		cmpb   $0x000001,0x000076(%ecx)
		jne    _065356_case
		cmpw   $0x000000,0x000042(%ecx)
		jl     _065356_case

	_0651e5_jump:
		mov    $0x000001,%dh
		mov    0x000076(%ecx),%bl
		mov    %dh,_0e4824_data
		sub    %dh,%bl
		mov    %bl,0x000076(%ecx)
		jne    _06520b_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06520b_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d444_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065222_case:
		andb   $0x0000f7,0x000081(%ecx)
		mov    0x00006b(%ecx),%ah
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x000006,%ah
		jae    _065244_jump
		mov    %ecx,%eax
		call   _0635f0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065244_jump:
		movw   $0x00fffe,0x000042(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065250_case:
		mov    %ecx,%eax
		call   _064f00_func

	_065257_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065269_case:
		mov    0x00006b(%ecx),%bh
		movw   $0x00fffe,0x000042(%ecx)
		cmp    $0x00000f,%bh
		jb     _06527d_jump
		movw   $0x000000,0x000042(%ecx)

	_06527d_jump:
		movw   $0x000000,0x000050(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065289_case:
		movw   $0x000000,0x000042(%ecx)
		call   _06371c_func
		test   %al,%al
		je     _065356_case
		cmpb   $0x000000,_0e4825_data
		jne    _0652ac_jump
		movb   $0x000001,_0e4825_data

	_0652ac_jump:
		mov    0x000050(%ecx),%si
		inc    %esi
		mov    _0e4822_data,%di
		mov    %si,0x000050(%ecx)
		cmp    %di,%si
		je     _0652ce_jump
		cmpb   $0x000005,_0e482a_data
		jne    _065356_case

	_0652ce_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movb   $0x000000,0x000071(%ecx)
		mov    %ecx,%eax
		movb   $0x000003,0x000072(%ecx)
		call   _01d444_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0652ed_case:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%bx
		mov    0x000069(%ecx),%al
		mov    _0cf2ae_data,%dx
		add    %ebx,%eax
		add    $0x0000a0,%edx
		movswl %ax,%ebx
		movswl %dx,%eax
		mov    %ebx,%edx
		call   _0637e0_func
		cwtl   
		sub    %ebx,%eax
		cmp    $0x000005,%eax
		jge    _065356_case
		mov    $0x000005,%ebx
		mov    $0x000002,%edx
		movw   $0x000001,0x000042(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d444_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06533d_case:
		mov    %ecx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _065356_case
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func

	_065356_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06535c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _063640_func
		mov    $0x000096,%edx
		mov    $0x000046,%ebx
		movb   $0x000006,0x000076(%ecx)
		xor    %ah,%ah
		movb   $0x000006,0x000077(%ecx)
		mov    %ah,_0e4829_data
		mov    %ah,_0e4828_data
		mov    %ah,_0e4825_data
		mov    %ah,_0e4826_data
		mov    _09719e_data,%al
		mov    %dx,_0e4822_data
		mov    %al,_0e482a_data
		xor    %eax,%eax
		mov    %bx,_0e4820_data
		mov    _0e482a_data,%al
		mov    $0x000002,%edx
		xor    %bh,%bh
		mov    _097198_data(%eax),%al
		mov    %bh,_0e4824_data
		mov    %al,_0e4827_data
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000f7,%al
		mov    $0x000006,%ebx
		mov    %al,0x000081(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _01d444_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000008(%eax),%eax
		mov    0x000032(%eax),%al
		mov    %al,0x00006a(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065404_func:
		call   _06535c_func
		mov    _0cf2ae_data,%ax
		mov    %ax,_0cf268_data
		mov    %ax,_0cf25a_data
		mov    _0cf2b0_data,%ax
		mov    %ax,_0cf266_data
		mov    %ax,_0cf25c_data
		ret    



_065430_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x000005,%dx
		jne    _065474_jump
		cmpb   $0x000000,_0e4824_data
		jne    _065474_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _065474_jump
		cmpb   $0x000003,0x00006c(%ecx)
		jne    _065474_jump
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d444_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fffe,0x000042(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000008,0x000072(%ecx)

	_065474_jump:
		pop    %ecx
		pop    %ebx
		ret    



_065478_func:
		push   %edx
		mov    $0x000028,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0ce09a_data
		pop    %edx
		ret    



_06548c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _0654da_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _0654da_jump
		mov    %ecx,%eax
		call   _0258a0_func
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x000001,%bl
		xor    %edx,%edx
		mov    %bl,_0e47cd_data(,%eax,4)
		mov    $0x000009,%ebx
		mov    %ecx,%eax
		call   _01d444_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0654da_jump:
		mov    0x00006d(%ecx),%dh
		cmp    $0x000002,%dh
		jne    _065545_jump
		cmpb   $0x00000b,0x00006c(%ecx)
		jne    _065545_jump
		mov    _0e482a_data,%al
		cmp    $0x000001,%al
		je     _0654f9_jump
		cmp    %dh,%al
		jne    _065595_jump

	_0654f9_jump:
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x000001,%dl
		mov    %dl,_0e47cd_data(,%eax,4)
		call   _06371c_func
		test   %al,%al
		je     _065520_jump
		mov    %dl,_0e4825_data

	_065520_jump:
		mov    %ecx,%eax
		mov    $0x000009,%ebx
		call   _0258a0_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d444_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065545_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _065595_jump
		cmpb   $0x00000e,0x00006c(%ecx)
		jne    _065595_jump
		mov    0x000072(%ecx),%al
		mov    0x000042(%ecx),%dx
		mov    0x000071(%ecx),%ah
		neg    %edx
		sub    %ah,%al
		mov    %dx,0x000042(%ecx)
		xor    %edx,%edx
		mov    %al,0x000071(%ecx)
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x0000f0,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x000002,%bh
		mov    %bh,0x000005(%edx,%eax,8)
		mov    %ecx,%eax
		call   _0258a0_func

	_065595_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06559c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _0655d5_jump
		cmpb   $0x000007,0x00006c(%ecx)
		jne    _0655d5_jump
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _0258a0_func
		mov    %ecx,%eax
		call   _01d444_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0655d5_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _065642_jump
		cmpb   $0x000005,0x00006c(%ecx)
		jne    _065642_jump
		movw   $0x000000,0x000040(%ecx)
		mov    _0cf242_data,%dx
		movw   $0x000000,0x000042(%ecx)
		test   %dx,%dx
		jne    _06562d_jump
		cmpw   $0x000000,0x000050(%ecx)
		jne    _065624_jump
		mov    %ecx,%eax
		call   _0258a0_func
		mov    %ecx,%eax
		call   _055148_func
		mov    0x000032(%ecx),%edx
		mov    $0x00003e,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		movw   $0x000001,0x000050(%ecx)

	_065624_jump:
		movw   $0x000001,_0cf242_data

	_06562d_jump:
		cmpb   $0x000001,_0e4825_data
		jne    _065642_jump
		movb   $0x000002,_0e4825_data
		call   _063700_func

	_065642_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065650_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ecx
		movl   $0x000100,_0e482c_data
		xor    %edx,%edx
		mov    %ax,%dx
		add    $0x00000f,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    $_0e482c_data,%ebx
		mov    %eax,_0e4830_data
		mov    %ebx,%edx
		mov    $0x000031,%eax
		call   _080bc1_func
		testb  $0x000001,_0e4844_data
		je     _06569d_jump
		movl   $0x000000,(%ecx)
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_06569d_jump:
		xor    %edx,%edx
		mov    _0e482c_data,%dx
		shl    $0x000010,%edx
		mov    %edx,(%ecx)
		mov    _0e4838_data,%ax
		pop    %ecx
		pop    %ebx
		ret    



_0656b4_func:
		push   %ebx
		push   %edx
		mov    $0x000101,%edx
		mov    $_0e482c_data,%ebx
		mov    %ax,_0e4838_data
		mov    $0x000031,%eax
		mov    %dx,_0e482c_data
		mov    %ebx,%edx
		call   _080bc1_func
		testb  $0x000001,_0e4844_data
		setne  %al
		pop    %edx
		pop    %ebx
		ret    



_0656e8_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %al,%cl
		mov    %edx,%esi
		mov    $0x00001c,%ebx
		mov    $_0e482c_data,%eax
		xor    %edx,%edx
		call   _07fcc0_func
		mov    $0x00000c,%ebx
		mov    $_0e487c_data,%eax
		xor    %edx,%edx
		call   _07fcc0_func
		mov    $0x000034,%ebx
		mov    $_0e4848_data,%eax
		xor    %edx,%edx
		call   _07fcc0_func
		xor    %eax,%eax
		mov    (%esi),%ax
		mov    %eax,_0e4864_data
		xor    %eax,%eax
		mov    0x000002(%esi),%ax
		mov    %eax,_0e4858_data
		xor    %eax,%eax
		mov    0x000004(%esi),%ax
		mov    %eax,_0e4860_data
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		mov    %eax,_0e485c_data
		xor    %eax,%eax
		mov    0x000008(%esi),%ax
		mov    %eax,_0e484c_data
		xor    %eax,%eax
		mov    0x00000a(%esi),%ax
		mov    $0x000300,%edx
		mov    %eax,_0e4848_data
		mov    0x00000c(%esi),%ax
		mov    %cl,_0e4830_data
		mov    %ax,_0e4868_data
		mov    0x00000e(%esi),%ax
		xor    %ebx,%ebx
		mov    %ax,_0e4874_data
		mov    0x000010(%esi),%ax
		mov    $_0e487c_data,%ecx
		mov    %ax,_0e486c_data
		mov    0x000012(%esi),%ax
		mov    %dx,_0e482c_data
		mov    %ax,_0e486a_data
		mov    0x000014(%esi),%ax
		mov    %bx,_0e4834_data
		mov    %ax,_0e4878_data
		xor    %ah,%ah
		mov    %ds,%edx
		mov    %ah,_0e4831_data
		mov    $_0e4848_data,%eax
		mov    $_0e482c_data,%ebx
		mov    %dx,_0e487c_data
		mov    $_0e4848_data,%edx
		mov    $0x000031,%eax
		mov    %edx,_0e4840_data
		mov    %ebx,%edx
		call   _0851f3_func
		mov    _0e4864_data,%ax
		mov    %ax,(%esi)
		mov    _0e4858_data,%ax
		mov    %ax,0x000002(%esi)
		mov    _0e4860_data,%ax
		mov    %ax,0x000004(%esi)
		mov    _0e485c_data,%ax
		mov    %ax,0x000006(%esi)
		mov    _0e484c_data,%ax
		mov    %ax,0x000008(%esi)
		mov    _0e4848_data,%ax
		mov    %ax,0x00000a(%esi)
		mov    _0e4868_data,%ax
		mov    %ax,0x00000c(%esi)
		mov    _0e4874_data,%ax
		mov    %ax,0x00000e(%esi)
		mov    _0e486c_data,%ax
		mov    %ax,0x000010(%esi)
		mov    _0e486a_data,%ax
		mov    %ax,0x000012(%esi)
		mov    _0e4878_data,%ax
		mov    %ax,0x000014(%esi)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_065860_switch:
		.long   _0658b1_case
		.long   _0658de_case
		.long   _0658b8_case
		.long   _0658de_case
		.long   _0658bf_case
		.long   _0658de_case
		.long   _0658de_case
		.long   _0658c6_case
		.long   _0658de_case
		.long   _0658cd_case
		.long   _0658de_case
		.long   _0658d4_case




_065890_func:
		push   %ebx
		push   %edx
		mov    %al,%bl
		mov    _0ce0d0_data,%eax
		mov    0x00006c(%eax),%dl
		dec    %dl
		cmp    $0x00000b,%dl
		ja     _0658de_case
		and    $_0000ff_case,%edx
		jmp    *%cs:_065860_switch(,%edx,4)

	_0658b1_case:
		mov    $0x000002,%edx
		jmp    _0658d9_jump

	_0658b8_case:
		mov    $0x000004,%edx
		jmp    _0658d9_jump

	_0658bf_case:
		mov    $0x000006,%edx
		jmp    _0658d9_jump

	_0658c6_case:
		mov    $0x000009,%edx
		jmp    _0658d9_jump

	_0658cd_case:
		mov    $0x00000b,%edx
		jmp    _0658d9_jump

	_0658d4_case:
		mov    $0x00000d,%edx

	_0658d9_jump:
		call   _01d434_func

	_0658de_case:
		test   %bl,%bl
		je     _0658eb_jump
		mov    _0ce0d0_data,%eax
		movb   $0x000007,0x00006b(%eax)

	_0658eb_jump:
		pop    %edx
		pop    %ebx
		ret    



_0658f0_func:
		push   %ebx
		push   %edx
		mov    _0ce164_data,%eax
		mov    _0cf2ae_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		cwtl   
		sub    %edx,%eax
		mov    _0ce0d0_data,%edx
		mov    %ax,0x000038(%edx)
		mov    _0cf2ae_data,%bx
		mov    0x000028(%edx),%ax
		sub    %ebx,%eax
		add    $0x000008,%eax
		mov    %ax,0x000036(%edx)
		pop    %edx
		pop    %ebx
		ret    

_06592c_switch:
		.long   _065b8a_case
		.long   _065b93_case
		.long   _065b78_case
		.long   _065b93_case
		.long   _065b66_case
		.long   _065b93_case
		.long   _065b93_case
		.long   _065b83_case
		.long   _065b93_case
		.long   _065b71_case
		.long   _065b93_case
		.long   _065b5f_case




_06595c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000002,_0ce0b1_data
		jne    _065980_jump
		mov    _0ce0b0_data,%dl
		cmp    $0x000019,%dl
		je     _065979_jump
		cmp    $0x00001a,%dl
		jne    _065980_jump

	_065979_jump:
		mov    $0x00001d,%edx
		jmp    _0659bf_jump

	_065980_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _0659a0_jump
		mov    _0ce0b0_data,%bh
		cmp    $0x00001b,%bh
		je     _065999_jump
		cmp    $0x00001c,%bh
		jne    _0659a0_jump

	_065999_jump:
		mov    $0x00001e,%edx
		jmp    _0659bf_jump

	_0659a0_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _0659ba_jump
		mov    _0ce0b0_data,%al
		cmp    $0x000011,%al
		je     _0659c9_jump
		cmp    $0x000012,%al
		je     _0659c9_jump
		cmp    $0x000013,%al
		je     _0659c9_jump

	_0659ba_jump:
		mov    $0x00000d,%edx

	_0659bf_jump:
		mov    $_0ce044_data,%eax
		call   _01d434_func

	_0659c9_jump:
		cmpb   $0x000000,_0ce0b1_data
		jne    _065a2d_jump
		testb  $0x000008,_0ce0c5_data
		je     _065a02_jump
		mov    _0ce16a_data,%edx
		sar    $0x000010,%edx
		shl    $0x00000a,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    %eax,%edx
		mov    _0cf24e_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		jmp    _065a27_jump

	_065a02_jump:
		mov    _0ce16a_data,%edx
		sar    $0x000010,%edx
		shl    $0x00000a,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    %eax,%edx
		mov    _0cf24e_data,%eax
		sar    $0x000010,%eax
		add    %edx,%eax

	_065a27_jump:
		mov    %ax,_0cf250_data

	_065a2d_jump:
		mov    _0ce0d0_data,%eax
		mov    _0ce0c5_data,%dl
		xor    %bh,%bh
		and    $0x000008,%dl
		mov    %bh,_0ce174_data
		mov    0x000081(%eax),%dh
		mov    %bh,_0ce175_data
		and    $0x0000f7,%dh
		mov    %bh,_0ce171_data
		mov    %dh,%bl
		mov    %dh,0x000081(%eax)
		or     %dl,%bl
		mov    %bl,0x000081(%eax)
		mov    0x000081(%eax),%bh
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%bh
		mov    %bh,0x000081(%eax)
		mov    _0cf27e_data,%eax
		mov    $0x000001,%cl
		sar    $0x000010,%eax
		mov    %cl,_0ce172_data
		call   _01f404_func
		mov    _0ce0d0_data,%eax
		call   _01f3d4_func
		mov    _0ce0d0_data,%eax
		xor    %ch,%ch
		movw   $0x000000,0x000042(%eax)
		xor    %ebx,%ebx
		movw   $0x00ffff,0x00004a(%eax)
		xor    %edx,%edx
		mov    0x00006e(%eax),%bl
		mov    0x00006f(%eax),%dl
		mov    %ch,0x00006b(%eax)
		call   _01d444_func
		mov    _0ce0d0_data,%eax
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		mov    0x000002(%ebx,%edx,8),%dl
		mov    %dl,0x00006a(%eax)
		mov    _0cf24c_data,%edx
		mov    _0cf248_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%eax)
		mov    _0ce0c5_data,%cl
		lea    0x000028(%eax),%edx
		test   $0x000008,%cl
		je     _065b17_jump
		mov    $0xfffffffb,%eax
		jmp    _065b1c_jump

	_065b17_jump:
		mov    $0x000005,%eax

	_065b1c_jump:
		mov    (%edx),%ebx
		mov    $0x000004,%cl
		add    %eax,%ebx
		mov    _0ce16c_data,%ax
		mov    %ebx,(%edx)
		test   %ax,%ax
		js     _065b34_jump
		sar    %cl,%ax
		jmp    _065b3d_jump

	_065b34_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_065b3d_jump:
		inc    %al
		mov    %al,_0ce173_data
		mov    _0ce0d0_data,%eax
		mov    0x00006e(%eax),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _065b93_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_06592c_switch(,%eax,4)

	_065b5f_case:
		addb   $0x000002,_0ce173_data

	_065b66_case:
		movw   $0x00000b,_0ce16a_data
		jmp    _065b93_case

	_065b71_case:
		addb   $0x000002,_0ce173_data

	_065b78_case:
		movw   $0x000008,_0ce16a_data
		jmp    _065b93_case

	_065b83_case:
		addb   $0x000002,_0ce173_data

	_065b8a_case:
		movw   $0x000005,_0ce16a_data

	_065b93_case:
		testb  $0x000008,_0ce0c5_data
		je     _065ba6_jump
		cmpw   $0x000000,_0cf250_data
		jg     _065bb9_jump

	_065ba6_jump:
		testb  $0x000008,_0ce0c5_data
		jne    _065bd9_jump
		cmpw   $0x000000,_0cf250_data
		jge    _065bd9_jump

	_065bb9_jump:
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		test   %eax,%eax
		jge    _065bc9_jump
		neg    %eax

	_065bc9_jump:
		sub    $0x000005,%eax
		cmp    %ebx,%eax
		jge    _065bd2_jump
		mov    %ebx,%eax

	_065bd2_jump:
		add    %ax,_0ce16a_data

	_065bd9_jump:
		mov    _0ce168_data,%eax
		mov    $0x000010,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _065bec_jump
		mov    %ebx,%eax

	_065bec_jump:
		mov    %eax,%edx
		mov    %ax,_0ce16a_data
		mov    _0ce0d0_data,%eax
		testb  $0x000008,0x000081(%eax)
		je     _065c11_jump
		mov    0x000028(%eax),%esi
		mov    %dx,0x000040(%eax)
		add    $0x00000b,%esi
		mov    %esi,0x000028(%eax)
		jmp    _065c20_jump

	_065c11_jump:
		mov    0x000028(%eax),%ecx
		neg    %edx
		sub    $0x00000b,%ecx
		mov    %dx,0x000040(%eax)
		mov    %ecx,0x000028(%eax)

	_065c20_jump:
		mov    _0ce16a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000006,%eax
		add    %eax,%edx
		add    %edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    _0ce168_data,%edx
		sar    $0x000010,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    $0x000028,%ebx
		sub    %edx,%eax
		mov    $0x000008,%cl
		sub    %eax,%ebx
		mov    _0ce16c_data,%ax
		mov    %bx,_0ce16e_data
		cwtl   
		shl    %cl,%eax
		mov    %ax,_0ce168_data
		mov    %ax,_0ce16c_data
		mov    _0ce168_data,%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    _0ce16c_data,%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,_0ce16e_data
		mov    _0ce0d0_data,%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%dl
		mov    0x000074(%eax),%bl
		lea    (%edx,%ebx,1),%ecx
		mov    _0cf268_data,%edx
		mov    _0cf24a_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		sar    %ecx
		add    %ebx,%edx
		sub    %ecx,%edx
		mov    %edx,0x00002c(%eax)
		mov    $0x000004,%cl
		mov    0x00002c(%eax),%ax
		cwtl   
		shl    %cl,%eax
		mov    %eax,_0ce164_data
		call   _0658f0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065ce0_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0ce050_data,%eax
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0ce0b0_data,%dl
		testb  $0x000002,0x000007(%ebx,%edx,8)
		je     _065db8_jump
		cmpb   $0x000002,_0ce0b1_data
		jne    _065d88_jump
		cmpw   $0x000000,_0ce086_data
		jle    _065d3e_jump
		mov    0x000008(%eax),%eax
		mov    0x00006d(%eax),%bh
		mov    0x000015(%eax),%dl
		and    $0x00000f,%bh
		and    $0x0000f0,%dl
		mov    %bh,%cl
		mov    %bh,0x00006d(%eax)
		or     %dl,%cl
		mov    %cl,0x00006d(%eax)
		jmp    _065d57_jump

	_065d3e_jump:
		mov    0x000008(%eax),%eax
		mov    0x000005(%eax),%dl
		and    $0x0000f0,%dl
		mov    0x00006d(%eax),%dh
		and    $0x00000f,%dh
		mov    %dh,%bl
		mov    %dh,0x00006d(%eax)
		or     %dl,%bl
		mov    %bl,0x00006d(%eax)

	_065d57_jump:
		mov    $0x000020,%esi
		mov    $0xffffffff,%edi
		mov    %si,_0ce16c_data
		call   _06595c_func
		mov    _0cf220_data,%ch
		mov    %di,_0cf2aa_data
		test   $0x000008,%ch
		je     _065db8_jump
		xor    %al,%al
		mov    %al,_0cf470_data
		jmp    _065db8_jump

	_065d88_jump:
		call   _06d094_func
		mov    $0x00000b,%edx
		mov    $_0ce044_data,%eax
		mov    $0x000005,%ebx
		call   _01d434_func
		mov    $0x000001,%al
		mov    %bx,_0ce16c_data
		xor    %edx,%edx
		mov    %al,_0ce174_data
		mov    %dx,_0cf16a_data

	_065db8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065dc0_func:
		push   %edx
		mov    _0ce16c_data,%dx
		inc    %edx
		mov    %dx,_0ce16c_data
		cmp    $0x000040,%dx
		jl     _065ddf_jump
		movw   $0x00003f,_0ce16c_data

	_065ddf_jump:
		pop    %edx
		ret    



_065de4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%dl
		mov    _0ce0d0_data,%ebx
		mov    0x000048(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _065e8b_jump
		mov    %eax,%ecx
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0cc7a0_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		movw   $0x000000,0x000040(%eax)
		movw   $0x000000,0x000042(%eax)
		movw   $0x00ffff,0x00004a(%ebx)
		test   %dl,%dl
		jne    _065e2f_jump
		testb  $0x000004,0x000081(%ebx)
		jne    _065e75_jump

	_065e2f_jump:
		mov    _0ce06c_data,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _0ce0ac_data,%bl
		mov    0x000068(%eax),%cl
		add    %edx,%ebx
		sub    %ecx,%ebx
		xor    %ecx,%ecx
		mov    %ebx,0x000028(%eax)
		xor    %ebx,%ebx
		mov    0x000069(%eax),%cl
		mov    0x000074(%eax),%bl
		lea    (%ebx,%ecx,1),%edx
		mov    _0cf268_data,%ebx
		mov    _0cf24a_data,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%ecx
		sar    %ebx
		add    %ecx,%ebx
		sar    %edx
		sub    $0x000005,%ebx
		sub    %edx,%ebx
		jmp    _065e88_jump

	_065e75_jump:
		test   %dl,%dl
		jne    _065e8b_jump
		mov    0x00003a(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,0x000028(%eax)
		mov    0x00003c(%eax),%ebx
		sar    $0x000010,%ebx

	_065e88_jump:
		mov    %ebx,0x00002c(%eax)

	_065e8b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065e90_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000048(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000040(%edx),%bx
		mov    %bx,0x000040(%eax)
		mov    0x000042(%edx),%dx
		mov    %dx,0x000042(%eax)
		mov    _0ce098_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _065ed0_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _065ed7_jump

	_065ed0_jump:
		xor    %eax,%eax
		call   _065de4_func

	_065ed7_jump:
		pop    %edx
		pop    %ebx
		ret    



_065edc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _065eed_jump
		neg    %eax

	_065eed_jump:
		cmp    $0x00000b,%eax
		jl     _065ef6_jump
		mov    $0x000002,%al
		jmp    _065f1a_jump

	_065ef6_jump:
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _065f02_jump
		neg    %eax

	_065f02_jump:
		cmp    $0x000008,%eax
		jl     _065f0b_jump
		mov    $0x000001,%al
		jmp    _065f1a_jump

	_065f0b_jump:
		cmpb   $0x000000,_0cf3ef_data
		je     _065f18_jump
		mov    $0x000001,%al
		jmp    _065f1a_jump

	_065f18_jump:
		xor    %al,%al

	_065f1a_jump:
		testb  $0x000008,0x000081(%edx)
		je     _065f33_jump
		mov    0x000040(%edx),%cx
		xor    %ah,%ah
		sub    %eax,%ecx
		mov    %cx,0x000040(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065f33_jump:
		mov    0x000040(%edx),%bx
		xor    %ah,%ah
		add    %eax,%ebx
		mov    %bx,0x000040(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065f44_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		mov    %ah,_0ce172_data
		mov    %ah,_0ce175_data
		mov    %ah,_0ce171_data
		mov    _0ce0d0_data,%eax
		mov    $0x000005,%edx
		movl   $0x000000,0x000024(%eax)
		mov    %dx,_0ce16c_data
		mov    0x000081(%eax),%bl
		mov    0x00006e(%eax),%dl
		and    $0x0000fb,%bl
		mov    %dl,0x00006c(%eax)
		mov    %bl,0x000081(%eax)
		xor    %eax,%eax
		call   _065de4_func
		pop    %edx
		pop    %ebx
		ret    



_065f94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		cmpb   $0x000000,_0ce172_data
		je     _0661de_jump
		cmpw   $0x000000,0x000040(%esi)
		je     _06617b_jump
		call   _0658f0_func
		mov    _0ce164_data,%eax
		sar    $0x000004,%eax
		mov    _0ce16c_data,%di
		mov    %eax,0x00002c(%esi)
		test   %di,%di
		jle    _066009_jump
		mov    _0ce16e_data,%cx
		cmp    %cx,%di
		jge    _065fe6_jump
		xor    %eax,%eax
		mov    %ax,_0ce16c_data
		jmp    _065fef_jump

	_065fe6_jump:
		sub    %ecx,%edi
		mov    %di,_0ce16c_data

	_065fef_jump:
		cmpw   $0x000000,_0ce16c_data
		jne    _066162_jump
		xor    %eax,%eax
		call   _065890_func
		jmp    _066162_jump

	_066009_jump:
		mov    _0ce171_data,%cl
		test   %cl,%cl
		jne    _06601f_jump
		mov    %esi,%eax
		call   _065edc_func
		jmp    _066162_jump

	_06601f_jump:
		cmp    $0x000001,%cl
		jne    _066162_jump
		mov    0x00003e(%esi),%eax
		mov    _0ce168_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		test   %eax,%eax
		jge    _06603d_jump
		neg    %eax

	_06603d_jump:
		cmp    %edx,%eax
		jge    _066048_jump
		mov    %esi,%eax
		call   _065edc_func

	_066048_jump:
		mov    _0cf24c_data,%eax
		mov    _0cf248_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		testb  $0x000008,0x000081(%esi)
		je     _066074_jump
		add    $0x00000b,%eax
		jmp    _066077_jump

	_066074_jump:
		sub    $0x00000b,%eax

	_066077_jump:
		cmpb   $0x000004,_0ce0b1_data
		jne    _066091_jump
		testb  $0x000008,0x000081(%esi)
		je     _06608e_jump
		add    $0x00000b,%eax
		jmp    _066091_jump

	_06608e_jump:
		sub    $0x00000b,%eax

	_066091_jump:
		mov    _0cf268_data,%ecx
		mov    _0cf24a_data,%edi
		xor    %ebx,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ecx
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%dl
		sar    $0x000010,%edi
		add    %edx,%ebx
		sar    %ecx
		sar    %ebx
		add    %ecx,%edi
		sub    %ebx,%edi
		mov    0x000081(%esi),%bh
		shl    $0x000004,%edi
		test   $0x000008,%bh
		je     _0660ca_jump
		cmp    0x000028(%esi),%eax
		jge    _0660d8_jump

	_0660ca_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _0660e2_jump
		cmp    0x000028(%esi),%eax
		jg     _0660e2_jump

	_0660d8_jump:
		call   _065f44_func
		jmp    _066162_jump

	_0660e2_jump:
		mov    _0ce164_data,%ecx
		mov    %edi,%ebx
		mov    0x000028(%esi),%dx
		sub    %ecx,%ebx
		sub    %dx,%ax
		je     _066103_jump
		movswl %ax,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%ebx

	_066103_jump:
		mov    0x000040(%esi),%ax
		imul   %eax,%ebx
		mov    _0ce164_data,%ebp
		mov    %ebp,%eax
		mov    %bx,0x000042(%esi)
		mov    %edi,%ebx
		mov    0x000040(%esi),%edx
		cmp    %ebx,%eax
		jge    _066121_jump
		mov    %ebx,%eax

	_066121_jump:
		mov    %eax,%ecx
		mov    %edi,%ebx
		mov    _0ce164_data,%eax
		sar    $0x000010,%edx
		cmp    %ebx,%eax
		jle    _066133_jump
		mov    %ebx,%eax

	_066133_jump:
		add    %ebp,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _066148_jump
		cmp    %ecx,%eax
		jg     _066148_jump
		mov    $0x000001,%eax
		jmp    _06614a_jump

	_066148_jump:
		xor    %eax,%eax

	_06614a_jump:
		test   %eax,%eax
		je     _066155_jump
		sarw   $0x000004,0x000042(%esi)
		jmp    _066162_jump

	_066155_jump:
		sub    _0ce164_data,%edi
		sar    $0x000004,%edi
		mov    %di,0x000042(%esi)

	_066162_jump:
		cmpb   $0x000000,_0ce175_data
		jne    _0661cc_jump
		cmpb   $0x000000,_0ce172_data
		je     _0661cc_jump
		call   _02d72c_func
		jmp    _0661cc_jump

	_06617b_jump:
		cmpb   $0x000000,_0ce175_data
		je     _0661b2_jump
		cmpb   $0x000000,_0ce171_data
		jne    _0661b2_jump
		mov    $0x000001,%eax
		call   _065890_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000002(%edx,%eax,8),%al
		mov    %al,0x00006a(%esi)

	_0661b2_jump:
		movb   $0x000001,_0ce171_data
		testb  $0x000008,0x000081(%esi)
		je     _0661c8_jump
		decw   0x000040(%esi)
		jmp    _0661cc_jump

	_0661c8_jump:
		incw   0x000040(%esi)

	_0661cc_jump:
		mov    0x000048(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0661de_jump
		mov    %esi,%eax
		call   _065e90_func

	_0661de_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0661e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000020,%esp
		mov    _0cc7a0_data,%esi
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0662df_jump

	_066207_jump:
		cmpw   $0x00000b,0x000060(%esi)
		jne    _0662cf_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _0662cf_jump
		mov    %esi,%eax
		call   _01f3d4_func
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    _0ce0d0_data,%eax
		call   _01d7e0_func
		lea    0x000018(%esp),%eax
		lea    0x00001c(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		movb   $0x000000,0x00006b(%esi)
		xor    %eax,%eax
		mov    0x000012(%esp),%edx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    _0ce0d0_data,%eax
		mov    %edx,0x000028(%esi)
		cmpw   $0x000000,0x000040(%eax)
		jle    _066285_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ecx
		mov    %ecx,0x000028(%esi)

	_066285_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%dl
		mov    0x000074(%esi),%al
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		sar    %eax
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %esi,%eax
		mov    %edx,0x00002c(%esi)
		call   _01dc5c_func
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0662cf_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _066207_jump

	_0662df_jump:
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0662f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02f788_func
		testb  $0x000008,0x000081(%ecx)
		jne    _066347_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d6f4_func
		test   %ax,%ax
		je     _066347_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02f310_func
		test   %ax,%ax
		jne    _06639c_jump

	_066347_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _0663d7_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d6f4_func
		test   %ax,%ax
		je     _0663d7_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02f310_func
		test   %ax,%ax
		je     _0663d7_jump

	_06639c_jump:
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		je     _0663bb_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		mov    $0x000007,%edx
		mov    %bh,0x000081(%ecx)
		jmp    _0663cd_jump

	_0663bb_jump:
		mov    %dh,%bl
		mov    %ecx,%eax
		or     $0x000008,%bl
		mov    $0x000008,%edx
		mov    %bl,0x000081(%ecx)

	_0663cd_jump:
		mov    $0x000001,%ebx
		call   _060460_func

	_0663d7_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _02ef50_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0663e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02f788_func
		testb  $0x000008,0x000081(%ecx)
		jne    _06643f_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d6f4_func
		test   %ax,%ax
		je     _06643f_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02f310_func
		test   %ax,%ax
		jne    _066494_jump

	_06643f_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _0664d8_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d6f4_func
		test   %ax,%ax
		je     _0664d8_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02f310_func
		test   %ax,%ax
		je     _0664d8_jump

	_066494_jump:
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		je     _0664b3_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		mov    $0x00000d,%edx
		mov    %bh,0x000081(%ecx)
		jmp    _0664c5_jump

	_0664b3_jump:
		mov    %dh,%bl
		mov    %ecx,%eax
		or     $0x000008,%bl
		mov    $0x00000e,%edx
		mov    %bl,0x000081(%ecx)

	_0664c5_jump:
		mov    $0x000001,%ebx
		call   _060460_func
		mov    0x00003c(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%ecx)

	_0664d8_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _066520_jump
		cmpb   $0x000011,0x00006c(%ecx)
		jne    _066520_jump
		mov    0x00003c(%ecx),%edx
		mov    0x00002c(%ecx),%ebx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jg     _066520_jump
		testb  $0x000008,0x000081(%ecx)
		je     _066506_jump
		mov    $0x000001,%ebx
		mov    $0x00000a,%edx
		jmp    _066510_jump

	_066506_jump:
		mov    $0x000001,%ebx
		mov    $0x000009,%edx

	_066510_jump:
		mov    %ecx,%eax
		call   _060460_func
		mov    0x00003c(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%ecx)

	_066520_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _06656a_jump
		cmpb   $0x000012,0x00006c(%ecx)
		jne    _06656a_jump
		mov    %ecx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _06656a_jump
		cmpw   $0x000005,0x000042(%ecx)
		jne    _06654d_jump
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000000,0x00007e(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06654d_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000005,0x000042(%ecx)
		call   _060460_func

	_06656a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066570_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _066580_jump
		cmpb   $0x000012,0x00006c(%ecx)
		je     _0665a1_jump

	_066580_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _060460_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		movb   $0x000000,0x000076(%ecx)

	_0665a1_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0665a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    $0x000001,%ah
		mov    _0cc7a4_data,%cx
		xor    %edx,%edx
		mov    %ah,(%esp)
		mov    _0cc7a0_data,%eax
		test   %cx,%cx
		jle    _0665f4_jump

	_0665c5_jump:
		cmpw   $0x00000a,0x000060(%eax)
		jne    _0665e9_jump
		mov    0x00003c(%eax),%bx
		cmp    0x00003c(%esi),%bx
		jne    _0665e9_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _0665e9_jump
		cmpb   $0x000064,0x00007f(%eax)
		jae    _0665e9_jump
		xor    %bh,%bh
		mov    %bh,(%esp)
		jmp    _0665f4_jump

	_0665e9_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %cx,%dx
		jl     _0665c5_jump

	_0665f4_jump:
		mov    (%esp),%al
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066600_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    0x000032(%eax),%eax
		mov    _0ce8d4_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,2),%ax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%ecx
		cmp    0x00002c(%eax),%ecx
		jne    _06665b_jump
		mov    _0cf2ae_data,%ebx
		sar    $0x000010,%ebx
		add    $0x0000c8,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    0x000081(%eax),%bl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%eax)

	_06665b_jump:
		mov    0x000032(%eax),%eax
		mov    _0ce8d4_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,2),%ax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%esi
		cmp    0x00002c(%eax),%esi
		jne    _0666b0_jump
		movl   $0x000000,0x000024(%eax)
		mov    _0cf2ae_data,%edx
		mov    0x000081(%eax),%bh
		sar    $0x000010,%edx
		and    $0x0000fb,%bh
		add    $0x0000c8,%edx
		mov    %bh,0x000081(%eax)
		mov    %edx,0x00002c(%eax)

	_0666b0_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0666b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		call   _02f788_func
		xor    %al,%al
		cmpb   $0x000000,0x00006d(%edx)
		jne    _0667de_jump
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%ecx
		mov    0x000069(%edx),%bl
		add    %ecx,%ebx
		mov    _0cf2ae_data,%ecx
		sar    $0x000010,%ecx
		add    $0x000014,%ebx
		add    $0x0000c8,%ecx
		cmp    %ecx,%ebx
		jge    _0666f3_jump
		incb   0x00007f(%edx)

	_0666f3_jump:
		mov    0x00006c(%edx),%bh
		cmp    $0x000003,%bh
		jne    _066706_jump
		movw   $0x000000,0x000042(%edx)
		jmp    _0667de_jump

	_066706_jump:
		cmp    $0x000009,%bh
		jne    _0667a1_jump
		mov    _0cf2ae_data,%ecx
		mov    0x00002c(%edx),%edi
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    0x000074(%edx),%bl
		add    $0x0000c8,%ecx
		add    %edi,%ebx
		movw   $0x000006,0x000042(%edx)
		cmp    %ecx,%ebx
		jg     _066750_jump
		xor    %ebx,%ebx
		mov    _0ce038_data,%ecx
		mov    0x000069(%edx),%bl
		sar    $0x000010,%ecx
		add    %edi,%ebx
		shl    $0x000004,%ecx
		add    $0x00000e,%ebx
		cmp    %ecx,%ebx
		jle    _0667de_jump

	_066750_jump:
		xor    %eax,%eax
		mov    0x00002c(%edx),%ebx
		mov    0x000069(%edx),%al
		add    %ebx,%eax
		mov    _0ce038_data,%ebx
		sar    $0x000010,%ebx
		add    $0x00000e,%eax
		shl    $0x000004,%ebx
		cmp    %ebx,%eax
		jle    _066774_jump
		mov    %edx,%eax
		call   _07a640_func

	_066774_jump:
		mov    _0cf2ae_data,%eax
		sar    $0x000010,%eax
		add    $0x0000c8,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000081(%edx),%al
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%edx)
		mov    %edx,%eax
		movb   $0x000000,0x00007f(%edx)
		jmp    _0667d9_jump

	_0667a1_jump:
		mov    _0cf2ae_data,%ecx
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%esi
		mov    0x000069(%edx),%bl
		sar    $0x000010,%ecx
		add    %esi,%ebx
		cmp    %ecx,%ebx
		jge    _0667de_jump
		add    $0x0000c8,%ecx
		mov    %ecx,0x00002c(%edx)
		mov    0x000081(%edx),%ch
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ch
		mov    %edx,%eax
		mov    %ch,0x000081(%edx)

	_0667d9_jump:
		call   _0665a4_func

	_0667de_jump:
		cmpb   $0x000064,0x00007f(%edx)
		jne    _0667eb_jump
		mov    %edx,%eax
		call   _0665a4_func

	_0667eb_jump:
		test   %al,%al
		je     _0668d6_jump
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%si
		xor    %eax,%eax
		test   %si,%si
		jle    _0668d6_jump

	_06680b_jump:
		cmpw   $0x00000a,0x000060(%ecx)
		jne    _0668c6_jump
		mov    0x00003c(%ecx),%bx
		cmp    0x00003c(%edx),%bx
		jne    _0668c6_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0668c6_jump
		movl   $0x000001,0x000024(%ecx)
		mov    _0cf2ae_data,%eax
		mov    0x000081(%ecx),%bl
		sar    $0x000010,%eax
		or     $0x000004,%bl
		add    $0x0000c8,%eax
		mov    %bl,0x000081(%ecx)
		mov    %eax,0x00002c(%ecx)
		mov    _0ce038_data,%ebx
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    0x00002c(%ecx),%esi
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		shl    $0x000004,%ebx
		mov    0x000069(%ecx),%al
		sub    $0x000010,%ebx
		add    %eax,%esi
		cmp    %ebx,%esi
		jle    _066886_jump
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %ebx,0x00002c(%ecx)
		call   _07a640_func

	_066886_jump:
		mov    0x00006f(%edx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%edx),%al
		mov    %al,0x00006c(%ecx)
		mov    0x000081(%ecx),%bh
		mov    0x000077(%edx),%al
		movb   $0x000000,0x00007f(%ecx)
		or     $0x000010,%bh
		mov    %al,0x000076(%ecx)
		mov    %bh,0x000081(%ecx)
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01dc5c_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _060460_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0668c6_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %si,%ax
		jl     _06680b_jump

	_0668d6_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0668dc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e7ac_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _066902_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		jmp    _06690b_jump

	_066902_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_06690b_jump:
		call   _01d444_func
		mov    %ecx,%eax
		call   _066600_func
		mov    0x000081(%ecx),%dl
		test   $0x000008,%dl
		setne  %al
		mov    %al,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_06692c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _06693f_jump
		cmpb   $0x000010,0x00006c(%ecx)
		je     _066946_jump

	_06693f_jump:
		mov    $0x000001,%eax
		jmp    _066948_jump

	_066946_jump:
		xor    %eax,%eax

	_066948_jump:
		test   %eax,%eax
		je     _066a3c_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _06695c_jump
		cmpb   $0x000011,0x00006c(%ecx)
		je     _066963_jump

	_06695c_jump:
		mov    $0x000001,%eax
		jmp    _066965_jump

	_066963_jump:
		xor    %eax,%eax

	_066965_jump:
		test   %eax,%eax
		je     _066a3c_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _066979_jump
		cmpb   $0x000012,0x00006c(%ecx)
		je     _066980_jump

	_066979_jump:
		mov    $0x000001,%eax
		jmp    _066982_jump

	_066980_jump:
		xor    %eax,%eax

	_066982_jump:
		test   %eax,%eax
		je     _066a3c_jump
		xor    %eax,%eax
		mov    _0ce06c_data,%edx
		mov    _0ce0ac_data,%al
		mov    0x000028(%ecx),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%ecx),%dl
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _0669b3_jump
		mov    $0x000001,%eax
		jg     _0669b3_jump
		neg    %eax

	_0669b3_jump:
		test   %eax,%eax
		jl     _0669c0_jump
		testb  $0x000008,0x000081(%ecx)
		jne    _0669f6_jump

	_0669c0_jump:
		mov    _0ce06c_data,%esi
		xor    %eax,%eax
		mov    0x000028(%ecx),%edi
		mov    _0ce0ac_data,%al
		xor    %edx,%edx
		add    %esi,%eax
		mov    0x000068(%ecx),%dl
		sub    %edi,%eax
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _0669e9_jump
		mov    $0x000001,%eax
		jg     _0669e9_jump
		neg    %eax

	_0669e9_jump:
		test   %eax,%eax
		jge    _066a3c_jump
		testb  $0x000008,0x000081(%ecx)
		jne    _066a3c_jump

	_0669f6_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _066a07_jump
		movw   $0x000003,0x000040(%ecx)
		jmp    _066a0d_jump

	_066a07_jump:
		movw   $0x00fffd,0x000040(%ecx)

	_066a0d_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		movw   $0x00fffb,0x000042(%ecx)
		call   _01d43c_func
		mov    $0x000010,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d434_func
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _060460_func

	_066a3c_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066a50_func:
		push   %esi
		push   %edi
		cmp    %ax,%dx
		je     _066ad4_jump
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _094d1c_data(%eax),%dl
		test   $0x000002,%dl
		jne    _066ad4_jump
		test   $0x000001,%dl
		je     _066aa1_jump
		push   $0x000080
		movswl %bx,%esi
		mov    _094d14_data(%eax),%edx
		mov    _094d12_data(%eax),%edi
		sar    $0x000010,%edx
		sar    $0x000010,%edi
		movswl %cx,%eax
		mov    %edx,%ecx
		mov    %edi,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		jmp    _066acf_jump

	_066aa1_jump:
		test   $0x000004,%dl
		je     _066ad4_jump
		movswl %bx,%edi
		xor    %edx,%edx
		mov    _094d12_data(%eax),%esi
		mov    _0cf439_data,%dl
		sar    $0x000010,%esi
		push   %edx
		mov    _094d14_data(%eax),%edx
		mov    %esi,%ebx
		sar    $0x000010,%edx
		movswl %cx,%eax
		mov    %edx,%ecx
		mov    %eax,%edx
		mov    %edi,%eax

	_066acf_jump:
		call   _019640_func

	_066ad4_jump:
		pop    %edi
		pop    %esi
		ret    



_066ad8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    $_094d14_data,%esi
		xor    %edi,%edi

	_066ae8_jump:
		mov    0x000008(%esi),%ah
		add    $0x000014,%esi
		and    $0x0000fd,%ah
		inc    %edi
		mov    %ah,-0x00000c(%esi)
		cmp    $0x000018,%di
		jl     _066ae8_jump
		xor    %edx,%edx
		mov    $_094d14_data,%esi
		mov    %dx,0x000004(%esp)

	_066b07_jump:
		mov    (%esi),%dx
		mov    0x000008(%esi),%bl
		mov    0x000002(%esi),%di
		test   $0x000001,%bl
		je     _066b6e_jump
		movswl %di,%edi
		mov    0x000002(%esp),%ebp
		mov    %edi,(%esp)
		sar    $0x000010,%ebp
		mov    (%esp),%ecx
		movswl %dx,%edi
		mov    %ebp,%eax
		xor    %edx,%edx
		mov    %edi,%ebx
		mov    0x000004(%esi),%dl
		call   _066a50_func
		mov    (%esp),%ecx
		mov    %edi,%ebx
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x000005(%esi),%dl
		call   _066a50_func
		mov    (%esp),%ecx
		mov    %edi,%ebx
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x000007(%esi),%dl
		call   _066a50_func
		mov    (%esp),%ecx
		mov    %edi,%ebx
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x000006(%esi),%dl
		call   _066a50_func
		orb    $0x000002,0x000008(%esi)

	_066b6e_jump:
		mov    0x000004(%esp),%ebx
		inc    %ebx
		add    $0x000014,%esi
		mov    %bx,0x000004(%esp)
		cmp    $0x000018,%bx
		jl     _066b07_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066b8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    $_094d14_data,%esi
		xor    %edx,%edx
		mov    $_0cd2cc_data,%edi
		mov    %edx,(%esp)

	_066ba3_jump:
		testb  $0x000001,0x000008(%esi)
		jne    _066bb4_jump
		cmpw   $0x000011,(%esp)
		jne    _066cf8_jump

	_066bb4_jump:
		mov    0x000034(%edi),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%edi),%al
		add    %edx,%eax
		add    $0x000008,%eax
		cmp    $0xfffffff8,%eax
		jle    _066bfc_jump
		mov    _0cca60_data,%edx
		add    $0x00000e,%edx
		cmp    %edx,%eax
		jge    _066bfc_jump
		mov    0x000036(%edi),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000069(%edi),%al
		add    %edx,%eax
		cmp    $0xfffffff6,%eax
		jle    _066bfc_jump
		mov    _0cca5c_data,%edx
		add    $0x00000c,%edx
		cmp    %edx,%eax
		jge    _066bfc_jump
		mov    %edi,%eax
		call   _018ac8_func

	_066bfc_jump:
		cmpb   $0x000000,_0cf439_data
		je     _066cf8_jump
		cmpw   $0x000011,(%esp)
		je     _066cf8_jump
		xor    %eax,%eax
		mov    0x000004(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094d1c_data(%eax)
		je     _066c4d_jump
		mov    _094d14_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094d12_data(%eax),%ebx
		mov    _0cf439_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _019640_func

	_066c4d_jump:
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094d1c_data(%eax)
		je     _066c86_jump
		mov    _094d14_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094d12_data(%eax),%ebx
		mov    _0cf439_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _019640_func

	_066c86_jump:
		xor    %eax,%eax
		mov    0x000006(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094d1c_data(%eax)
		je     _066cbf_jump
		mov    _094d14_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094d12_data(%eax),%ebx
		mov    _0cf439_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _019640_func

	_066cbf_jump:
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094d1c_data(%eax)
		je     _066cf8_jump
		mov    _094d14_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094d12_data(%eax),%ebx
		mov    _0cf439_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _019640_func

	_066cf8_jump:
		mov    (%esp),%ebx
		add    $0x000014,%esi
		inc    %ebx
		add    $0x000084,%edi
		mov    %ebx,(%esp)
		cmp    $0x000018,%bx
		jl     _066ba3_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066d1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		xor    %ah,%ah
		mov    _0cf439_data,%dl
		mov    %ah,(%esp)
		cmp    $0x000080,%dl
		jae    _066d4b_jump
		cmpb   $0x000000,_0cf3ef_data
		jne    _066d45_jump
		cmpb   $0x000000,_0cf452_data
		je     _066d4b_jump

	_066d45_jump:
		incb   _0cf439_data

	_066d4b_jump:
		mov    $_0cd2cc_data,%ebx
		mov    $_094d14_data,%ecx
		xor    %esi,%esi

	_066d57_jump:
		mov    0x000008(%ecx),%al
		test   $0x000004,%al
		jne    _066d66_jump
		test   $0x000002,%al
		je     _066eee_jump

	_066d66_jump:
		mov    %ebx,%eax
		call   _0444e0_func
		cmpb   $0x000080,_0cf439_data
		jne    _066de4_jump
		testb  $0x000004,0x000008(%ecx)
		je     _066de4_jump
		xor    %eax,%eax
		mov    0x000006(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094d1c_data(%eax)
		jne    _066dc4_jump
		xor    %eax,%eax
		mov    0x000007(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094d1c_data(%eax)
		jne    _066dc4_jump
		xor    %eax,%eax
		mov    0x000004(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094d1c_data(%eax)
		jne    _066dc4_jump
		xor    %eax,%eax
		mov    0x000005(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094d1c_data(%eax)
		je     _066de4_jump

	_066dc4_jump:
		mov    0x000008(%ecx),%al
		or     $0x000001,%al
		mov    %al,0x000008(%ecx)
		mov    %al,%ah
		and    $0x0000f9,%ah
		mov    $0x00002e,%edx
		mov    %ah,0x000008(%ecx)
		mov    %ebx,%eax
		call   _01d434_func
		movb   $0x000001,(%esp)

	_066de4_jump:
		cmp    $0x000011,%si
		jne    _066e07_jump
		mov    0x00006c(%ebx),%dh
		cmp    $0x00003b,%dh
		je     _066e07_jump
		cmp    $0x00002e,%dh
		je     _066e07_jump
		testb  $0x000001,0x000008(%ecx)
		je     _066e07_jump
		mov    $0x00003b,%edx
		jmp    _066ee0_jump

	_066e07_jump:
		cmp    $0x000012,%si
		je     _066e2b_jump
		cmp    $0x000013,%si
		je     _066e2b_jump
		cmp    $0x000014,%si
		je     _066e2b_jump
		cmp    $0x000015,%si
		je     _066e2b_jump
		cmp    $0x000016,%si
		je     _066e2b_jump
		cmp    $0x000017,%si
		jne    _066e48_jump

	_066e2b_jump:
		mov    0x00006c(%ebx),%dl
		cmp    $0x00003a,%dl
		je     _066e48_jump
		cmp    $0x00002e,%dl
		je     _066e48_jump
		testb  $0x000001,0x000008(%ecx)
		je     _066e48_jump
		mov    $0x00003a,%edx
		jmp    _066ee0_jump

	_066e48_jump:
		mov    0x000009(%ecx),%dl
		cmp    $0x000005,%dl
		jbe    _066e6b_jump
		cmpb   $0x000033,0x00006c(%ebx)
		jne    _066e6b_jump
		mov    %ebx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _066e6b_jump
		mov    $0x000034,%edx
		jmp    _066ee0_jump

	_066e6b_jump:
		cmp    $0x000004,%dl
		jbe    _066e8b_jump
		cmpb   $0x000032,0x00006c(%ebx)
		jne    _066e8b_jump
		mov    %ebx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _066e8b_jump
		mov    $0x000033,%edx
		jmp    _066ee0_jump

	_066e8b_jump:
		cmp    $0x000003,%dl
		jbe    _066ea8_jump
		cmpb   $0x000031,0x00006c(%ebx)
		jne    _066ea8_jump
		mov    %ebx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _066ea8_jump
		mov    $0x000032,%edx
		jmp    _066ee0_jump

	_066ea8_jump:
		cmp    $0x000002,%dl
		jbe    _066ec5_jump
		cmpb   $0x000030,0x00006c(%ebx)
		jne    _066ec5_jump
		mov    %ebx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _066ec5_jump
		mov    $0x000031,%edx
		jmp    _066ee0_jump

	_066ec5_jump:
		cmp    $0x000001,%dl
		jbe    _066ee7_jump
		cmpb   $0x00002f,0x00006c(%ebx)
		jne    _066ee7_jump
		mov    %ebx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _066ee7_jump
		mov    $0x000030,%edx

	_066ee0_jump:
		mov    %ebx,%eax
		call   _01d434_func

	_066ee7_jump:
		mov    %ebx,%eax
		call   _055b7c_func

	_066eee_jump:
		add    $0x000084,%ebx
		inc    %esi
		add    $0x000014,%ecx
		cmp    $0x000018,%si
		jl     _066d57_jump
		cmpb   $0x000000,(%esp)
		je     _066f36_jump
		mov    $_094d14_data,%eax
		xor    %ch,%ch
		xor    %edx,%edx
		mov    %ch,_0cf439_data
		mov    $0x000001,%cl
		mov    $0x000002,%bh

	_066f1b_jump:
		mov    0x000008(%eax),%bl
		test   %bl,%bh
		jne    _066f2c_jump
		and    %cl,%bl
		cmp    $0x000001,%bl
		jne    _066f2c_jump
		or     %bh,0x000008(%eax)

	_066f2c_jump:
		inc    %edx
		add    $0x000014,%eax
		cmp    $0x000018,%dx
		jl     _066f1b_jump

	_066f36_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066f40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf230_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		mov    $0x000030,%ecx
		add    %edx,%eax
		mov    $_0cbf28_data,%edi
		mov    $0x0000c1,%ebx
		mov    _094d24_data(,%eax,4),%esi
		mov    $0x0001c2,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000002,%ah
		mov    %dx,_0cbff8_data
		mov    %bx,_0cbffa_data
		xor    %dl,%dl
		mov    %ah,_0cbffc_data
		mov    %dl,_0cbffe_data
		mov    %edi,%eax
		mov    %dl,_0cbffd_data
		call   _01ed18_func
		mov    _0cf230_data,%edx
		mov    _0cbff2_data,%cx
		mov    _0cbff4_data,%si
		mov    _0cbff6_data,%di
		sar    $0x000010,%edx
		sub    $0x000006,%ecx
		add    $0x00000a,%esi
		lea    0x000000(,%edx,4),%eax
		add    $0x000006,%edi
		add    %edx,%eax
		mov    %cx,_0cbff2_data
		mov    %si,_0cbff4_data
		mov    _094d20_data(,%eax,4),%al
		mov    %di,_0cbff6_data
		mov    %al,_0cbfff_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_067004_switch:
		.long   _067217_case
		.long   _067226_case
		.long   _067235_case
		.long   _06725e_case
		.long   _06726d_case
		.long   _06727a_case
		.long   _067076_case

_067020_switch:
		.long   _067099_case
		.long   _0670a9_case
		.long   _067123_case
		.long   _06719d_case




_067030_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x00004b,%eax
		call   _07f158_func
		mov    _0cf230_data,%esi
		mov    %eax,%edx
		sar    $0x000010,%esi
		mov    %eax,%ebp
		lea    0x000000(,%esi,4),%eax
		add    %eax,%esi
		shl    $0x000002,%esi
		mov    _094d1e_data(%esi),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _0672a1_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_067004_switch(,%eax,4)

	_067076_case:
		mov    _0cf1a6_data,%ax
		mov    _094d20_data(%esi),%bl
		cmp    $0x000003,%ax
		ja     _0672a1_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_067020_switch(,%eax,4)

	_067099_case:
		mov    $_0cc0d8_data,%edi
		mov    _0c2adc_data,%esi
		jmp    _067287_jump

	_0670a9_case:
		mov    $_0cd148_data,%esi
		mov    _0c1020_data,%ax
		mov    %edx,%edi
		mov    %ax,(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0670c2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0670da_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0670c2_jump

	_0670da_jump:
		pop    %edi
		mov    $_0c1020_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0670e9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _067101_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0670e9_jump

	_067101_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0cc0d8_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _0672a1_jump

	_067123_case:
		mov    $_0cd14c_data,%esi
		mov    _0c1020_data,%ax
		mov    %edx,%edi
		mov    %ax,(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_06713c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _067154_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06713c_jump

	_067154_jump:
		pop    %edi
		mov    $_0c1020_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_067163_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06717b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _067163_jump

	_06717b_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0cc0d8_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _0672a1_jump

	_06719d_case:
		mov    $_0cd150_data,%esi
		mov    _0c1020_data,%ax
		mov    %edx,%edi
		mov    %ax,(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0671b6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0671ce_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0671b6_jump

	_0671ce_jump:
		pop    %edi
		mov    $_0c1020_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0671dd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0671f5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0671dd_jump

	_0671f5_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0cc0d8_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _0672a1_jump

	_067217_case:
		mov    $_0cc0d8_data,%edi
		mov    _0c28b8_data,%esi
		mov    $0x000005,%bl
		jmp    _067287_jump

	_067226_case:
		mov    $_0cc0d8_data,%edi
		mov    _0c28bc_data,%esi
		mov    $0x000003,%bl
		jmp    _067287_jump

	_067235_case:
		mov    $_0cc0d8_data,%edi
		mov    _0c28c0_data,%esi
		push   %edi

	_067241_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _067259_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _067241_jump

	_067259_jump:
		pop    %edi
		xor    %bl,%bl
		jmp    _0672a1_jump

	_06725e_case:
		mov    $_0cc0d8_data,%edi
		mov    _0c28c4_data,%esi
		mov    $0x000002,%bl
		jmp    _067287_jump

	_06726d_case:
		mov    $_0cc0d8_data,%edi
		mov    _0c28c8_data,%esi
		jmp    _067285_jump

	_06727a_case:
		mov    $_0cc0d8_data,%edi
		mov    _0c28cc_data,%esi

	_067285_jump:
		mov    $0x000001,%bl

	_067287_jump:
		push   %edi

	_067288_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0672a0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _067288_jump

	_0672a0_jump:
		pop    %edi

	_0672a1_jump:
		mov    $0x000001,%ah
		mov    $0x0001c2,%edx
		mov    $0x00001e,%ecx
		mov    %bl,_0cc1af_data
		mov    %ah,_0cc1ac_data
		mov    %dx,_0cc1a8_data
		mov    %cx,_0cc1aa_data
		xor    %dl,%dl
		mov    $_0cc0d8_data,%eax
		mov    %dl,_0cc1ae_data
		mov    %dl,_0cc1ad_data
		call   _01ed18_func
		mov    _0cc1a4_data,%si
		mov    _0cc1a6_data,%di
		mov    %ebp,%eax
		add    $0x00000a,%esi
		add    $0x000002,%edi
		mov    %si,_0cc1a4_data
		mov    %di,_0cc1a6_data
		call   _07f2f0_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067310_func:
		push   %ebx
		push   %edx
		push   %esi
		call   _01eb78_func
		call   _066f40_func
		call   _067030_func
		mov    $0x0000a0,%edx
		mov    $0x0000fa,%ebx
		mov    $0xffffffce,%esi
		xor    %ah,%ah
		mov    %dx,_0cc0d0_data
		mov    %bx,_0cc0d2_data
		mov    %ah,_0cc0d5_data
		mov    %ah,_0cc0d6_data
		mov    %dx,_0cc280_data
		mov    %si,_0cc282_data
		mov    %ah,_0cc285_data
		mov    %ah,_0cc286_data
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_06736c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0000d8,%ecx
		mov    $_0cbf28_data,%esi
		mov    $_0cc000_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _066f40_func
		mov    _0cf230_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0cf44c_data,%dl
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		shl    $0x000002,%ebx
		shl    $0x000002,%edx
		mov    _094d1e_data(%ebx),%al
		cmp    _094d1e_data(%edx),%al
		je     _0673f0_jump
		mov    $0x0000d8,%ecx
		mov    $_0cc0d8_data,%esi
		mov    $_0cc1b0_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _067030_func

	_0673f0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0673f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		cmpb   $0x000000,_0cf420_data
		jne    _0674c5_jump
		mov    _0cbff8_data,%dx
		cmp    $0x0000a0,%dx
		jle    _067439_jump
		mov    %edx,%ebx
		mov    _0cbff0_data,%cx
		sub    $0x000006,%ebx
		sub    $0x000006,%ecx
		mov    %bx,_0cbff8_data
		mov    %cx,_0cbff0_data

	_067439_jump:
		mov    _0cc1a8_data,%si
		cmp    $0x0000a0,%si
		jle    _067462_jump
		mov    %esi,%edi
		mov    _0cc1a0_data,%ax
		sub    $0x000006,%edi
		sub    $0x000006,%eax
		mov    %di,_0cc1a8_data
		mov    %ax,_0cc1a0_data

	_067462_jump:
		mov    _0cc0d2_data,%dx
		cmp    $0x000125,%dx
		jge    _06748d_jump
		mov    %edx,%ebx
		mov    _0cc0ca_data,%cx
		add    $0x000002,%ebx
		add    $0x000002,%ecx
		mov    %bx,_0cc0d2_data
		mov    %cx,_0cc0ca_data

	_06748d_jump:
		mov    _0cc280_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffba,%eax
		jle    _0678b1_jump
		mov    _0cc282_data,%si
		mov    _0cc27a_data,%di
		sub    $0x000002,%esi
		sub    $0x000002,%edi
		mov    %si,_0cc282_data
		mov    %di,_0cc27a_data
		jmp    _0678b1_jump

	_0674c5_jump:
		cmpb   $0x000000,_0cf41f_data
		jne    _0678b1_jump
		mov    $_0cbf28_data,%edx
		mov    $_0ce90e_data,%edi
		mov    $0x000001,%ebx
		mov    %edx,%esi
		mov    %edx,0x000004(%esp)
		push   %edi

	_0674e8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _067500_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0674e8_jump

	_067500_jump:
		pop    %edi
		xor    %eax,%eax
		mov    %ebx,0x000010(%esp)
		mov    _0cbfff_data,%al
		mov    $0x000008,%esi
		mov    %eax,_0cca3c_data
		xor    %eax,%eax
		mov    %edx,%edi
		mov    _0cbffc_data,%al
		mov    %esi,0x000018(%esp)
		mov    %eax,_0cca38_data
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    _0cbff6_data,%eax
		xor    %esi,%esi
		sar    $0x000010,%eax
		mov    %ecx,_0cca78_data
		mov    %eax,(%esp)
		test   %ecx,%ecx
		jle    _067677_jump
		mov    %edx,0x000024(%esp)
		xor    %edi,%edi

	_067553_jump:
		mov    0x000024(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		call   _01ebac_func
		mov    (%edx),%bl
		cmp    $0x00002f,%bl
		jne    _06759c_jump
		mov    0x000004(%esp),%edx
		mov    0x00000e(%esp),%ecx
		mov    0x000016(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    0x0000d4(%edx),%al
		sar    $0x000010,%ebx
		push   %eax
		mov    %esi,%edx
		mov    $_0cbf28_data,%eax
		call   _01ecbc_func
		movswl %ax,%ebp
		mov    (%esp),%eax
		sar    %ebp
		sub    %ebp,%eax
		mov    %eax,%ebp
		jmp    _0675a4_jump

	_06759c_jump:
		cmp    $0x000020,%bl
		jne    _0675a6_jump
		add    $0x000008,%ebp

	_0675a4_jump:
		xor    %al,%al

	_0675a6_jump:
		test   %al,%al
		je     _06765c_jump
		and    $_0000ff_case,%eax
		imul   $0x00000c,%eax,%eax
		mov    _0ce0d4_data,%edx
		add    %eax,%edx
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,_0c2200_data(%edi)
		mov    0x000004(%esp),%eax
		mov    0x0000d0(%eax),%eax
		sar    $0x000010,%eax
		mov    %edi,%ecx
		shl    $0x000004,%eax
		mov    %edx,0x00001c(%esp)
		mov    %eax,_0c2390_data(%edi)
		xor    %edx,%edx
		mov    %edx,_0c2048_data(%edi)
		jne    _067629_jump

	_0675ef_jump:
		mov    _0cca78_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %esi,%edx
		sub    %eax,%edx
		shl    $0x000005,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    $0x000020,%eax
		call   _06b8d0_func
		sub    $0x000010,%edx
		movswl %ax,%ebx
		add    %ebx,%edx
		mov    %edx,_0c2048_data(%ecx)
		je     _0675ef_jump

	_067629_jump:
		mov    $0x000020,%eax
		mov    $0xfffffff0,%edx
		call   _06b8d0_func
		cwtl   
		sub    %eax,%edx
		mov    0x00001c(%esp),%eax
		mov    %edx,_0c1f38_data(%ecx)
		mov    0x000009(%eax),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x00001c(%esp),%ebx
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%ebx),%al
		add    %edx,%eax
		dec    %eax
		add    %eax,%ebp

	_06765c_jump:
		mov    0x000024(%esp),%eax
		mov    _0cca78_data,%edx
		add    $0x000004,%edi
		inc    %eax
		inc    %esi
		mov    %eax,0x000024(%esp)
		cmp    %edx,%esi
		jl     _067553_jump

	_067677_jump:
		mov    $_0cc0d8_data,%ebx
		mov    $_0ce8f0_data,%edi
		mov    %ebx,%esi
		mov    %ebx,0x000008(%esp)
		push   %edi

	_067688_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0676a0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _067688_jump

	_0676a0_jump:
		pop    %edi
		xor    %eax,%eax
		mov    $0x000003,%esi
		mov    _0cc1af_data,%al
		mov    %ebx,%edi
		mov    %eax,_0cca58_data
		xor    %eax,%eax
		mov    %esi,0x000010(%esp)
		mov    _0cc1ac_data,%al
		xor    %esi,%esi
		mov    %eax,_0cca44_data
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $0x00000a,%edi
		mov    _0cc1a6_data,%eax
		mov    %ecx,_0cca74_data
		sar    $0x000010,%eax
		mov    %edi,0x000018(%esp)
		mov    %eax,0x000014(%esp)
		test   %ecx,%ecx
		jle    _06781e_jump
		mov    %ebx,0x000020(%esp)
		xor    %edi,%edi

	_0676f9_jump:
		mov    0x000020(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		call   _01ebac_func
		mov    (%edx),%ch
		cmp    $0x00002f,%ch
		jne    _06773f_jump
		mov    0x000008(%esp),%edx
		mov    0x00000e(%esp),%ecx
		mov    0x000016(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    0x0000d4(%edx),%al
		sar    $0x000010,%ebx
		push   %eax
		mov    %esi,%edx
		mov    $_0cc0d8_data,%eax
		call   _01ecbc_func
		cwtl   
		mov    0x000014(%esp),%ebp
		sar    %eax
		sub    %eax,%ebp
		jmp    _067747_jump

	_06773f_jump:
		cmp    $0x000020,%ch
		jne    _067749_jump
		add    $0x00000a,%ebp

	_067747_jump:
		xor    %al,%al

	_067749_jump:
		test   %al,%al
		je     _067803_jump
		and    $_0000ff_case,%eax
		add    $0x000029,%eax
		imul   $0x00000c,%eax,%edx
		mov    _0ce7c0_data,%eax
		add    %edx,%eax
		mov    %eax,0x00000c(%esp)
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,_0c22c8_data(%edi)
		mov    0x000008(%esp),%eax
		mov    0x0000d0(%eax),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %edi,%ecx
		mov    %eax,_0c20c0_data(%edi)
		xor    %eax,%eax
		mov    %eax,_0c1fd0_data(%edi)
		jne    _0677ce_jump

	_067794_jump:
		mov    _0cca74_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %esi,%edx
		sub    %eax,%edx
		shl    $0x000005,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    $0x000020,%eax
		call   _06b8d0_func
		sub    $0x000010,%edx
		movswl %ax,%ebx
		add    %ebx,%edx
		mov    %edx,_0c1fd0_data(%ecx)
		je     _067794_jump

	_0677ce_jump:
		mov    $0x000020,%eax
		mov    $0xfffffff0,%edx
		call   _06b8d0_func
		cwtl   
		sub    %eax,%edx
		mov    0x00000c(%esp),%eax
		mov    %edx,_0c2188_data(%ecx)
		mov    0x000009(%eax),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x00000c(%esp),%ebx
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%ebx),%al
		add    %edx,%eax
		sub    $0x000003,%eax
		add    %eax,%ebp

	_067803_jump:
		mov    0x000020(%esp),%edx
		mov    _0cca74_data,%ebx
		add    $0x000004,%edi
		inc    %edx
		inc    %esi
		mov    %edx,0x000020(%esp)
		cmp    %ebx,%esi
		jl     _0676f9_jump

	_06781e_jump:
		mov    $0x000001,%cl
		mov    $_0cc0d8_data,%esi
		mov    $_0cc1b0_data,%edi
		mov    $0x00001e,%edx
		mov    $0x0001c2,%ebx
		mov    %cl,_0cf41f_data
		push   %edi

	_06783b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _067853_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06783b_jump

	_067853_jump:
		pop    %edi
		mov    $_0cbf28_data,%esi
		mov    $_0cc000_data,%edi
		mov    _0cc1af_data,%al
		mov    $0x0000c1,%ecx
		mov    %al,_0cc287_data
		mov    $0x0001c2,%eax
		mov    %dx,_0cc1aa_data
		mov    %ax,_0cc1a8_data
		push   %edi

	_067880_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _067898_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _067880_jump

	_067898_jump:
		pop    %edi
		mov    _0cbfff_data,%al
		mov    %bx,_0cbff8_data
		mov    %cx,_0cbffa_data
		mov    %al,_0cc0d7_data

	_0678b1_jump:
		mov    _0cf41f_data,%dl
		cmp    $0x000001,%dl
		jne    _067ac0_jump
		mov    _0cca74_data,%edi
		mov    %dl,%cl
		xor    %ebx,%ebx
		test   %edi,%edi
		jle    _0679b5_jump
		xor    %edx,%edx

	_0678d4_jump:
		mov    _0ce8f0_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _0679a3_jump
		cmp    $0x000020,%ah
		je     _0679a3_jump
		mov    _0c2188_data(%edx),%eax
		mov    _0c20c0_data(%edx),%ebp
		add    %eax,%ebp
		mov    %ebp,_0c20c0_data(%edx)
		cmp    $0x000c80,%ebp
		jl     _067945_jump
		movl   $0x000c80,_0c20c0_data(%edx)
		test   %eax,%eax
		jge    _067918_jump
		neg    %eax

	_067918_jump:
		cmp    $0x000008,%eax
		jge    _067937_jump
		mov    $0x000020,%eax
		mov    $0xffffffc0,%esi
		call   _06b8d0_func
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0c2188_data(%edx)
		jmp    _067945_jump

	_067937_jump:
		mov    _0c2188_data(%edx),%eax
		neg    %eax
		mov    %eax,_0c2188_data(%edx)

	_067945_jump:
		mov    _0c2188_data(%edx),%edi
		mov    _0c1fd0_data(%edx),%eax
		mov    _0c22c8_data(%edx),%ebp
		inc    %edi
		add    %eax,%ebp
		mov    _0cf41f_data,%al
		mov    %edi,_0c2188_data(%edx)
		mov    %ebp,_0c22c8_data(%edx)
		cmp    $0x000001,%al
		jne    _06798b_jump
		test   %ebp,%ebp
		jle    _06797b_jump
		cmp    $0x001310,%ebp
		jl     _06798b_jump

	_06797b_jump:
		mov    _0c1fd0_data(%edx),%eax
		neg    %eax
		mov    %eax,_0c1fd0_data(%edx)
		jmp    _0679a3_jump

	_06798b_jump:
		mov    _0c22c8_data(%edx),%edi
		cmp    $0xfffffec0,%edi
		jle    _0679a3_jump
		cmp    $0x001400,%edi
		jge    _0679a3_jump
		xor    %cl,%cl

	_0679a3_jump:
		mov    _0cca74_data,%esi
		inc    %ebx
		add    $0x000004,%edx
		cmp    %esi,%ebx
		jl     _0678d4_jump

	_0679b5_jump:
		mov    _0cca78_data,%edi
		xor    %ebx,%ebx
		test   %edi,%edi
		jle    _067aa6_jump
		mov    $0x000c80,%ebp
		xor    %edx,%edx

	_0679cc_jump:
		mov    _0ce90e_data(%ebx),%ch
		cmp    $0x00002f,%ch
		je     _067a95_jump
		cmp    $0x000020,%ch
		je     _067a95_jump
		mov    _0c1f38_data(%edx),%eax
		mov    _0c2390_data(%edx),%esi
		add    %eax,%esi
		mov    %esi,_0c2390_data(%edx)
		cmp    $0x000c80,%esi
		jl     _067a39_jump
		mov    %ebp,_0c2390_data(%edx)
		test   %eax,%eax
		jge    _067a0c_jump
		neg    %eax

	_067a0c_jump:
		cmp    $0x000008,%eax
		jge    _067a2b_jump
		mov    $0x000020,%eax
		mov    $0xffffffc0,%esi
		call   _06b8d0_func
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0c1f38_data(%edx)
		jmp    _067a39_jump

	_067a2b_jump:
		mov    _0c1f38_data(%edx),%eax
		neg    %eax
		mov    %eax,_0c1f38_data(%edx)

	_067a39_jump:
		mov    _0c1f38_data(%edx),%eax
		inc    %eax
		mov    _0c2200_data(%edx),%esi
		mov    %eax,_0c1f38_data(%edx)
		add    _0c2048_data(%edx),%esi
		mov    _0cf41f_data,%ah
		mov    %esi,_0c2200_data(%edx)
		cmp    $0x000001,%ah
		jne    _067a7f_jump
		test   %esi,%esi
		jle    _067a6f_jump
		cmp    $0x001360,%esi
		jl     _067a7f_jump

	_067a6f_jump:
		mov    _0c2048_data(%edx),%eax
		neg    %eax
		mov    %eax,_0c2048_data(%edx)
		jmp    _067a95_jump

	_067a7f_jump:
		mov    _0c2200_data(%edx),%eax
		cmp    $0xfffffec0,%eax
		jle    _067a95_jump
		cmp    $0x001400,%eax
		jge    _067a95_jump
		xor    %cl,%cl

	_067a95_jump:
		mov    _0cca78_data,%eax
		inc    %ebx
		add    $0x000004,%edx
		cmp    %eax,%ebx
		jl     _0679cc_jump

	_067aa6_jump:
		test   %cl,%cl
		je     _067d75_jump
		xor    %ah,%ah
		mov    %ah,_0cf41f_data
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067ac0_jump:
		cmp    $0x000002,%dl
		jne    _067c6f_jump
		mov    _0cca74_data,%esi
		xor    %ecx,%ecx
		test   %esi,%esi
		jle    _067b93_jump
		xor    %ebx,%ebx

	_067adb_jump:
		mov    _0ce8f0_data(%ecx),%al
		cmp    $0x00002f,%al
		je     _067b81_jump
		cmp    $0x000020,%al
		je     _067b81_jump
		mov    _0c20c0_data(%ebx),%eax
		sub    $0x000640,%eax
		test   %eax,%eax
		jge    _067b02_jump
		neg    %eax

	_067b02_jump:
		mov    %eax,%edx
		mov    _0c22c8_data(%ebx),%eax
		sub    $0x000a00,%eax
		test   %eax,%eax
		jge    _067b15_jump
		neg    %eax

	_067b15_jump:
		cmp    %eax,%edx
		jle    _067b26_jump
		mov    _0c20c0_data(%ebx),%eax
		sub    $0x000640,%eax
		jmp    _067b31_jump

	_067b26_jump:
		mov    _0c22c8_data(%ebx),%eax
		sub    $0x000a00,%eax

	_067b31_jump:
		test   %eax,%eax
		jge    _067b37_jump
		neg    %eax

	_067b37_jump:
		mov    %eax,%esi
		mov    $0x000040,%eax
		call   _06b8d0_func
		movswl %ax,%edi
		mov    _0c22c8_data(%ebx),%edx
		add    $0x000020,%edi
		sub    $0x000a00,%edx
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0c20c0_data(%ebx),%edx
		sub    $0x000640,%edx
		imul   %edi,%edx
		mov    %eax,_0c1fd0_data(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,_0c2188_data(%ebx)

	_067b81_jump:
		mov    _0cca74_data,%ebp
		inc    %ecx
		add    $0x000004,%ebx
		cmp    %ebp,%ecx
		jl     _067adb_jump

	_067b93_jump:
		mov    _0cca78_data,%eax
		xor    %ecx,%ecx
		test   %eax,%eax
		jle    _067c5e_jump
		xor    %ebx,%ebx

	_067ba4_jump:
		mov    _0ce90e_data(%ecx),%dh
		cmp    $0x00002f,%dh
		je     _067c4c_jump
		cmp    $0x000020,%dh
		je     _067c4c_jump
		mov    _0c2390_data(%ebx),%eax
		sub    $0x000640,%eax
		test   %eax,%eax
		jge    _067bcd_jump
		neg    %eax

	_067bcd_jump:
		mov    %eax,%edx
		mov    _0c2200_data(%ebx),%eax
		sub    $0x000a00,%eax
		test   %eax,%eax
		jge    _067be0_jump
		neg    %eax

	_067be0_jump:
		cmp    %eax,%edx
		jle    _067bf1_jump
		mov    _0c2390_data(%ebx),%eax
		sub    $0x000640,%eax
		jmp    _067bfc_jump

	_067bf1_jump:
		mov    _0c2200_data(%ebx),%eax
		sub    $0x000a00,%eax

	_067bfc_jump:
		test   %eax,%eax
		jge    _067c02_jump
		neg    %eax

	_067c02_jump:
		mov    %eax,%esi
		mov    $0x000040,%eax
		call   _06b8d0_func
		movswl %ax,%edi
		mov    _0c2200_data(%ebx),%edx
		add    $0x000020,%edi
		sub    $0x000a00,%edx
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0c2390_data(%ebx),%edx
		sub    $0x000640,%edx
		imul   %edi,%edx
		mov    %eax,_0c2048_data(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,_0c1f38_data(%ebx)

	_067c4c_jump:
		mov    _0cca78_data,%edx
		inc    %ecx
		add    $0x000004,%ebx
		cmp    %edx,%ecx
		jl     _067ba4_jump

	_067c5e_jump:
		movb   $0x000003,_0cf41f_data
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067c6f_jump:
		cmp    $0x000003,%dl
		jne    _067d75_jump
		mov    $0x000001,%al
		mov    _0cca74_data,%ecx
		xor    %ebx,%ebx
		test   %ecx,%ecx
		jle    _067cf2_jump
		mov    _0cca74_data,%ebp
		xor    %edx,%edx

	_067c92_jump:
		mov    _0ce8f0_data(%ebx),%cl
		cmp    $0x00002f,%cl
		je     _067cea_jump
		cmp    $0x000020,%cl
		je     _067cea_jump
		mov    _0c2188_data(%edx),%ecx
		mov    _0c20c0_data(%edx),%esi
		mov    _0c22c8_data(%edx),%edi
		add    %ecx,%esi
		add    _0c1fd0_data(%edx),%edi
		mov    %esi,_0c20c0_data(%edx)
		mov    %edi,_0c22c8_data(%edx)
		cmp    $0xfffffec0,%edi
		jle    _067cea_jump
		cmp    $0x001400,%edi
		jge    _067cea_jump
		cmp    $0xfffffec0,%esi
		jle    _067cea_jump
		cmp    $0x000c80,%esi
		jge    _067cea_jump
		xor    %al,%al

	_067cea_jump:
		inc    %ebx
		add    $0x000004,%edx
		cmp    %ebp,%ebx
		jl     _067c92_jump

	_067cf2_jump:
		mov    _0cca78_data,%edx
		xor    %ebx,%ebx
		test   %edx,%edx
		jle    _067d6a_jump
		mov    _0cca78_data,%ebp
		xor    %edx,%edx

	_067d0a_jump:
		mov    _0ce90e_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _067d62_jump
		cmp    $0x000020,%ah
		je     _067d62_jump
		mov    _0c1f38_data(%edx),%ecx
		mov    _0c2390_data(%edx),%esi
		mov    _0c2200_data(%edx),%edi
		add    %ecx,%esi
		add    _0c2048_data(%edx),%edi
		mov    %esi,_0c2390_data(%edx)
		mov    %edi,_0c2200_data(%edx)
		cmp    $0xfffffec0,%edi
		jle    _067d62_jump
		cmp    $0x001400,%edi
		jge    _067d62_jump
		cmp    $0xfffffec0,%esi
		jle    _067d62_jump
		cmp    $0x000c80,%esi
		jge    _067d62_jump
		xor    %al,%al

	_067d62_jump:
		inc    %ebx
		add    $0x000004,%edx
		cmp    %ebp,%ebx
		jl     _067d0a_jump

	_067d6a_jump:
		test   %al,%al
		je     _067d75_jump
		xor    %al,%al
		mov    %al,_0cf41f_data

	_067d75_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067d80_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax

	_067d85_jump:
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%ebx
		imul   $0x000014,%edx,%edx
		mov    _0c2858_data(%ebx),%ebx
		inc    %eax
		mov    %ebx,_094d24_data(%edx)
		cmp    $0x000018,%ax
		jl     _067d85_jump
		mov    $0x000001,%ecx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0cf282_data
		mov    %dx,_0cf270_data
		mov    %cx,_0cf288_data
		mov    %cx,_0cf272_data
		mov    %ah,_0cf44f_data
		mov    %dx,_0cf22c_data
		xor    %al,%al
		mov    $0x000001,%dl
		mov    %ax,_0cf22a_data
		mov    %dl,_0cf44e_data
		mov    %ah,_0cf432_data
		mov    %ah,_0cf46d_data
		xor    %dh,%dh
		call   _0686d8_func
		mov    %dh,_0cf42b_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067e04_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000084,%ecx
		mov    $_0ce044_data,%esi
		mov    $_0ce850_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0ce1fc_data,%eax
		mov    $0x000100,%edx
		mov    %eax,_0ce044_data
		mov    _0ce204_data,%eax
		mov    %dx,_0ce09e_data
		mov    %eax,_0ce04c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_067e4c_func:
		push   %edx
		mov    _0ce850_data,%eax
		mov    %eax,_0ce044_data
		mov    _0ce858_data,%eax
		xor    %edx,%edx
		mov    %eax,_0ce04c_data
		mov    _0ce894_data,%ax
		mov    %dx,_0ce09e_data
		mov    %ax,_0ce088_data
		pop    %edx
		ret    



_067e78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000001,%dl
		xor    %ah,%ah
		mov    _0cf425_data,%bl
		mov    %ah,_0cf438_data
		mov    %dl,_0cf445_data
		mov    %ah,_0cf453_data
		test   %bl,%bl
		jne    _067eb1_jump
		xor    %edx,%edx
		mov    _0cf44f_data,%al
		mov    %dx,_0cf288_data
		mov    %ax,_0cf232_data

	_067eb1_jump:
		mov    _0cf232_data,%al
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %al,_0cf44c_data
		call   _067e04_func
		mov    $_0ce044_data,%eax
		call   _01d444_func
		mov    _0cf230_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _094d12_data(,%eax,4),%ebx
		mov    _0ce0ac_data,%dl
		sar    $0x000010,%ebx
		xor    %ecx,%ecx
		sub    %edx,%ebx
		xor    %esi,%esi
		add    $0x000004,%ebx
		mov    _094d14_data(,%eax,4),%edx
		mov    %ebx,_0ce06c_data
		sar    $0x000010,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0ce0ad_data,%al
		mov    %bx,_0ce084_data
		sub    %eax,%edx
		mov    %bx,_0ce086_data
		add    $0x000008,%edx
		xor    %eax,%eax
		xor    %bh,%bh
		mov    %edx,_0ce070_data
		call   _01d27c_func
		xor    %bl,%cl
		mov    %bh,_0cf439_data
		mov    %bh,_0cf450_data
		mov    $_0cd2cc_data,%ebx

	_067f49_jump:
		xor    %eax,%eax
		mov    %cl,%al
		imul   $0x000014,%eax,%eax
		movw   $0x000036,0x000060(%ebx)
		mov    _094d14_data(%eax),%dx
		sub    $0x00004e,%edx
		mov    %dx,0x00003c(%ebx)
		mov    _094d16_data(%eax),%dx
		sub    $0x000040,%edx
		movb   $0x000005,0x00006f(%ebx)
		mov    %dx,0x00003e(%ebx)
		testb  $0x000004,_094d1c_data(%eax)
		je     _067f85_jump
		movb   $0x00002e,0x00006e(%ebx)
		jmp    _067fba_jump

	_067f85_jump:
		mov    _094d1d_data(%eax),%dh
		test   %dh,%dh
		je     _067fa6_jump
		add    %dh,_0cf450_data
		cmp    $0x000006,%dh
		jne    _067fa0_jump
		movb   $0x000034,0x00006e(%ebx)
		jmp    _067fba_jump

	_067fa0_jump:
		movb   $0x00002f,0x00006e(%ebx)
		jmp    _067fba_jump

	_067fa6_jump:
		cmp    $0x000011,%si
		jne    _067fb6_jump
		movb   $0x00003b,0x00006c(%ebx)
		movb   $0x00003b,0x00006e(%ebx)
		jmp    _067fba_jump

	_067fb6_jump:
		movb   $0x000027,0x00006e(%ebx)

	_067fba_jump:
		movw   $0x000000,0x00005a(%ebx)
		movb   $0x000050,0x000068(%ebx)
		mov    %ebx,%eax
		movb   $0x000040,0x000069(%ebx)
		call   _05dc2c_func
		mov    %ebx,%eax
		call   _0444e0_func
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ebx),%dl
		mov    0x000002(%eax,%edx,8),%al
		and    $_0000ff_case,%eax
		imul   $0x00000c,%eax,%edx
		mov    0x000004(%ebx),%eax
		xor    %edi,%edi
		mov    0x00000a(%edx,%eax,1),%di
		movswl %si,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		inc    %cl
		mov    %dl,0x00006b(%ebx)
		cmp    $0x000018,%cl
		jbe    _068016_jump
		mov    $0x000018,%cl

	_068016_jump:
		inc    %esi
		add    $0x000084,%ebx
		cmp    $0x000018,%si
		jl     _067f49_jump
		mov    _094e70_data,%al
		test   $0x000001,%al
		jne    _068044_jump
		cmpb   $0x000066,_0cf450_data
		jb     _068044_jump
		mov    %al,%dl
		or     $0x000004,%dl
		mov    %dl,_094e70_data

	_068044_jump:
		mov    _0cf2ae_data,%ax
		mov    %ax,_0cf238_data
		mov    _0cf2b0_data,%ax
		mov    %ax,_0cf234_data
		mov    _0cf22c_data,%ax
		mov    %ax,_0cf2ae_data
		mov    _0cf22a_data,%ax
		mov    $0xffffffff,%esi
		mov    %ax,_0cf2b0_data
		call   _043698_func
		mov    $0x00001e,%eax
		mov    _0ce0c5_data,%dh
		mov    %ax,_0cf298_data
		mov    %ax,_0cf2a0_data
		mov    _0cf44e_data,%al
		and    $0x0000f7,%dh
		and    $0x000001,%al
		mov    %dh,%bl
		shl    $0x000003,%al
		mov    %dh,_0ce0c5_data
		or     %al,%bl
		mov    %si,_0cf2c6_data
		mov    %bl,_0ce0c5_data
		mov    _0cf437_data,%bh
		mov    %si,_0cf2c8_data
		test   %bh,%bh
		je     _0680e7_jump
		cmpb   $0x000000,_0cf435_data
		je     _0680df_jump
		xor    %eax,%eax
		mov    _0cf1a6_data,%al
		call   _073d00_func

	_0680df_jump:
		xor    %ch,%ch
		mov    %ch,_0cf437_data

	_0680e7_jump:
		call   _0686d8_func
		call   _067310_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0680f8_func:
		push   %edx
		mov    _0cf230_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _094d18_data(,%eax,4),%al
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ax,_0cf232_data
		mov    _0cf421_data,%ah
		mov    %dl,_0cf420_data
		and    $0x0000fb,%ah
		mov    _0cf41f_data,%dh
		mov    %ah,_0cf421_data
		cmp    $0x000001,%dh
		jne    _068143_jump
		movb   $0x000002,_0cf41f_data

	_068143_jump:
		pop    %edx
		ret    



_068148_func:
		push   %edx
		mov    _0cf230_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _094d19_data(,%eax,4),%al
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ax,_0cf232_data
		mov    _0cf421_data,%ah
		mov    %dl,_0cf420_data
		and    $0x0000fb,%ah
		mov    _0cf41f_data,%dh
		mov    %ah,_0cf421_data
		cmp    $0x000001,%dh
		jne    _068193_jump
		movb   $0x000002,_0cf41f_data

	_068193_jump:
		pop    %edx
		ret    



_068198_func:
		push   %edx
		mov    _0cf230_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _094d1b_data(,%eax,4),%al
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ax,_0cf232_data
		mov    _0cf421_data,%ah
		mov    %dl,_0cf420_data
		and    $0x0000fb,%ah
		mov    _0cf41f_data,%dh
		mov    %ah,_0cf421_data
		cmp    $0x000001,%dh
		jne    _0681e3_jump
		movb   $0x000002,_0cf41f_data

	_0681e3_jump:
		pop    %edx
		ret    



_0681e8_func:
		push   %edx
		mov    _0cf230_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _094d1a_data(,%eax,4),%al
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ax,_0cf232_data
		mov    _0cf421_data,%ah
		mov    %dl,_0cf420_data
		and    $0x0000fb,%ah
		mov    _0cf41f_data,%dh
		mov    %ah,_0cf421_data
		cmp    $0x000001,%dh
		jne    _068233_jump
		movb   $0x000002,_0cf41f_data

	_068233_jump:
		pop    %edx
		ret    



_068238_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		xor    %eax,%eax
		mov    _0cf232_data,%dx
		mov    _0cf44c_data,%al
		cmp    %dx,%ax
		jne    _0683c9_jump
		call   _0373f0_func
		test   %al,%al
		je     _068320_jump
		xor    %bh,%bh
		mov    _0cf232_data,%di
		mov    %bh,_0cf41f_data
		mov    %bh,_0cf420_data
		cmp    $0x000012,%di
		je     _0682a2_jump
		cmp    $0x000013,%di
		je     _0682a2_jump
		cmp    $0x000014,%di
		je     _0682a2_jump
		cmp    $0x000015,%di
		je     _0682a2_jump
		cmp    $0x000016,%di
		je     _0682a2_jump
		cmp    $0x000017,%di
		jne    _06830e_jump

	_0682a2_jump:
		mov    _0cf230_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _0c2ab0_data,%edx
		cmp    _094d24_data(,%eax,4),%edx
		jne    _068317_jump
		cmpb   $0x000000,_0cf435_data
		je     _068317_jump
		mov    $_0cc0d8_data,%eax
		mov    _0c2adc_data,%edx
		call   _07f4c0_func
		test   %eax,%eax
		je     _068317_jump
		mov    $0x000003,%eax
		call   _04ef74_func
		test   %al,%al
		je     _068317_jump
		xor    %eax,%eax
		mov    _0cf1a6_data,%al
		call   _073d00_func
		mov    _0cf230_data,%eax
		sar    $0x000010,%eax
		call   _06870c_func
		call   _06736c_func
		jmp    _068317_jump

	_06830e_jump:
		movw   $0x000001,_0cf288_data

	_068317_jump:
		andb   $0x0000fb,_0cf421_data
		jmp    _068362_jump

	_068320_jump:
		call   _041d08_func
		test   %ax,%ax
		je     _068331_jump
		call   _068198_func
		jmp    _068362_jump

	_068331_jump:
		call   _041c98_func
		test   %ax,%ax
		je     _068342_jump
		call   _0681e8_func
		jmp    _068362_jump

	_068342_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _068353_jump
		call   _068148_func
		jmp    _068362_jump

	_068353_jump:
		call   _041de8_func
		test   %ax,%ax
		je     _068362_jump
		call   _0680f8_func

	_068362_jump:
		xor    %ebx,%ebx
		mov    _0cf232_data,%ax
		mov    _0cf44c_data,%bl
		cmp    %ax,%bx
		je     _068632_jump
		mov    _0cf230_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		testb  $0x000001,_094d1c_data(,%eax,4)
		je     _0683b8_jump
		mov    $_0ce044_data,%eax
		xor    %dh,%dh
		xor    %ebx,%ebx
		mov    %dh,_0ce0c3_data
		mov    $0x000001,%edx
		call   _01d444_func
		call   _06736c_func
		jmp    _068632_jump

	_0683b8_jump:
		mov    %bx,_0cf232_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0683c9_jump:
		mov    _0cf230_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%ecx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		shl    $0x000002,%ecx
		shl    $0x000002,%edx
		mov    _094d14_data(%ecx),%bx
		sub    _094d14_data(%edx),%bx
		mov    _094d16_data(%ecx),%ax
		mov    _094d16_data(%edx),%cx
		sub    %ecx,%eax
		mov    %ax,0x00000c(%esp)
		test   %bx,%bx
		jge    _06841f_jump
		andb   $0x0000f7,_0ce0c5_data
		jmp    _068426_jump

	_06841f_jump:
		orb    $0x000008,_0ce0c5_data

	_068426_jump:
		test   %bx,%bx
		je     _06849f_jump
		cmpw   $0x000000,0x00000c(%esp)
		je     _06849f_jump
		mov    0x00000a(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,%eax
		movswl %bx,%ecx
		test   %eax,%eax
		jge    _068449_jump
		neg    %eax

	_068449_jump:
		mov    %eax,%edx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _068453_jump
		neg    %eax

	_068453_jump:
		cmp    %eax,%edx
		jle    _06847b_jump
		xor    %edx,%edx
		mov    _0ce0c3_data,%dl
		imul   %ecx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		movzbw _0ce0c3_data,%si
		test   %eax,%eax
		jge    _068477_jump
		neg    %eax

	_068477_jump:
		mov    %eax,%edi
		jmp    _0684be_jump

	_06847b_jump:
		xor    %edx,%edx
		mov    _0ce0c3_data,%dl
		imul   %ebp,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		movzbw _0ce0c3_data,%di
		test   %eax,%eax
		jge    _06849b_jump
		neg    %eax

	_06849b_jump:
		mov    %eax,%esi
		jmp    _0684be_jump

	_06849f_jump:
		test   %bx,%bx
		jne    _0684ae_jump
		movzbw _0ce0c3_data,%si
		jmp    _0684be_jump

	_0684ae_jump:
		cmpw   $0x000000,0x00000c(%esp)
		jne    _0684be_jump
		movzbw _0ce0c3_data,%di

	_0684be_jump:
		mov    _0ce0c3_data,%dh
		movswl %bx,%ecx
		inc    %dh
		mov    %ecx,%eax
		mov    %dh,_0ce0c3_data
		mov    %edi,%edx
		cmp    $0x000000,%eax
		je     _0684e1_jump
		mov    $0x000001,%eax
		jg     _0684e1_jump
		neg    %eax

	_0684e1_jump:
		imul   %eax,%edx
		mov    %edx,(%esp)
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		mov    %esi,%ebx
		cmp    $0x000000,%eax
		je     _068500_jump
		mov    $0x000001,%eax
		jg     _068500_jump
		neg    %eax

	_068500_jump:
		imul   %eax,%ebx
		movzbl _0cf44c_data,%ebp
		lea    0x000000(,%ebp,4),%eax
		add    %ebp,%eax
		mov    %ebx,0x000008(%esp)
		mov    _094d14_data(,%eax,4),%bx
		add    (%esp),%ebx
		mov    %ebx,0x000010(%esp)
		xor    %ebx,%ebx
		mov    _0ce0ac_data,%bl
		mov    %ebx,0x000004(%esp)
		mov    0x000010(%esp),%ebx
		sub    0x000004(%esp),%ebx
		mov    %ebx,0x000004(%esp)
		mov    _0ce06c_data,%bx
		mov    %ebx,0x000010(%esp)
		mov    0x000004(%esp),%ebx
		sub    0x000010(%esp),%ebx
		mov    _094d16_data(,%eax,4),%ax
		mov    %bx,_0ce084_data
		add    0x000008(%esp),%eax
		xor    %ebx,%ebx
		mov    _0ce0ad_data,%bl
		sub    %ebx,%eax
		mov    _0ce070_data,%bx
		add    $0x000008,%eax
		sub    %ebx,%eax
		mov    %ax,_0ce086_data
		movswl %di,%eax
		test   %eax,%eax
		jge    _06858b_jump
		neg    %eax

	_06858b_jump:
		mov    %eax,%ebp
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _068595_jump
		neg    %eax

	_068595_jump:
		cmp    %eax,%ebp
		jl     _068632_jump
		movswl %si,%eax
		test   %eax,%eax
		jge    _0685a6_jump
		neg    %eax

	_0685a6_jump:
		mov    %eax,%ecx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _0685b0_jump
		neg    %eax

	_0685b0_jump:
		cmp    %eax,%ecx
		jl     _068632_jump
		mov    _0cf232_data,%al
		mov    _0ce0b1_data,%bl
		mov    %al,_0cf44c_data
		test   %bl,%bl
		je     _068632_jump
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d444_func
		mov    _0cf230_data,%edx
		sar    $0x000010,%edx
		xor    %ecx,%ecx
		lea    0x000000(,%edx,4),%eax
		mov    %cx,_0ce084_data
		add    %edx,%eax
		mov    %cx,_0ce086_data
		xor    %edx,%edx
		mov    _094d12_data(,%eax,4),%ecx
		mov    _0ce0ac_data,%dl
		sar    $0x000010,%ecx
		mov    _094d14_data(,%eax,4),%eax
		sub    %edx,%ecx
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0ce0ad_data,%dl
		sub    %edx,%eax
		add    $0x000008,%eax
		mov    %ecx,_0ce06c_data
		mov    %eax,_0ce070_data

	_068632_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06863c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000001,%eax
		call   _054868_func
		call   _043a5c_func
		mov    _0cf2a4_data,%edx
		mov    _0cf2a2_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _043e48_func
		call   _044530_func
		testb  $0x000008,_0ce0c5_data
		je     _068698_jump
		xor    %eax,%eax
		mov    _0ce07c_data,%cx
		mov    _0ce0ad_data,%al
		add    %ecx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0ce07a_data,%si
		mov    _0ce0ac_data,%al
		add    %esi,%eax
		jmp    _0686bb_jump

	_068698_jump:
		xor    %eax,%eax
		mov    _0ce07c_data,%dx
		mov    _0ce0ad_data,%al
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0ce07a_data,%bx
		mov    _0ce0ac_data,%al
		add    %ebx,%eax

	_0686bb_jump:
		cwtl   
		call   _01d18c_func
		mov    $_0ce044_data,%eax
		call   _055b7c_func
		call   _066d1c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0686d8_func:
		cmpb   $0x000000,_0cf435_data
		je     _0686e8_jump
		mov    _0c2ab0_data,%eax
		jmp    _0686ed_jump

	_0686e8_jump:
		mov    _0c2ab8_data,%eax

	_0686ed_jump:
		mov    %eax,_094e8c_data
		mov    %eax,_094ea0_data
		mov    %eax,_094eb4_data
		mov    %eax,_094ec8_data
		mov    %eax,_094edc_data
		mov    %eax,_094ef0_data
		ret    



_06870c_func:
		push   %edx
		mov    %eax,%edx
		movswl %dx,%edx
		call   _0686d8_func
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _0c2ab4_data,%edx
		mov    %edx,_094d24_data(,%eax,4)
		pop    %edx
		ret    



_068730_func:
		push   %edx
		call   _03ca10_func
		mov    _0cf2ae_data,%ax
		mov    %ax,_0cf22c_data
		mov    _0cf2b0_data,%ax
		mov    %ax,_0cf22a_data
		mov    _0cf238_data,%ax
		mov    %ax,_0cf2ae_data
		mov    _0cf234_data,%ax
		mov    %ax,_0cf2b0_data
		mov    _0ce0c5_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    %al,_0cf44e_data
		call   _067e4c_func
		call   _0686d8_func
		xor    %ah,%ah
		mov    _0ce0ba_data,%dl
		mov    %ah,_0cf438_data
		cmp    $_0000ff_case,%dl
		jne    _068799_jump
		mov    %ah,_0ce0ba_data

	_068799_jump:
		pop    %edx
		ret    



_06879c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf232_data,%al
		mov    %al,_0cf44f_data
		cmpb   $0x000000,_0cf425_data
		jne    _0687e8_jump
		mov    _0cf230_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _094d1f_data(,%eax,4),%dl
		mov    %dx,_0cf224_data
		mov    _094d1e_data(,%eax,4),%al
		xor    %ah,%ah
		mov    %ax,_0cf232_data
		call   _0267a0_func

	_0687e8_jump:
		andb   $0x0000fb,_0cf221_data
		cmpw   $0x000005,_0cf232_data
		jne    _068824_jump
		mov    _0cf224_data,%bx
		cmp    $0x000003,%bx
		jne    _068824_jump
		testb  $0x000002,_0cf229_data
		je     _068824_jump
		orb    $0x000004,_0cf221_data
		mov    %ebx,%edx
		inc    %edx
		mov    %dx,_0cf224_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068824_jump:
		cmpw   $0x000005,_0cf232_data
		jne    _068855_jump
		cmpw   $0x000004,_0cf224_data
		jne    _068855_jump
		testb  $0x000002,_0cf229_data
		je     _068855_jump
		cmpb   $0x000000,_0cf425_data
		je     _068855_jump
		orb    $0x000004,_0cf221_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068855_jump:
		cmpw   $0x000006,_0cf232_data
		jne    _068887_jump
		testb  $0x000080,_0cf228_data
		je     _068887_jump
		mov    $0x000001,%ch
		mov    $0x000001,%eax
		mov    %ch,_0cf432_data
		mov    %ch,_0cf46d_data
		mov    %ax,_0cf288_data
		mov    %ch,_0cf42d_data

	_068887_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06888c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000001,%edx
		mov    $0x000003,%ecx
		mov    $0x000002,%ah
		xor    %bl,%bl
		mov    %dx,_0cf272_data
		mov    %edx,%esi
		mov    %dx,_0cf288_data
		mov    %cx,_0ce94a_data
		mov    %ah,_0ce0ba_data
		mov    %bl,_0cf46d_data
		mov    $0x000005,%bh
		mov    _0ce0c5_data,%dl
		mov    $_0caab8_data,%eax
		and    $0x0000fe,%dl
		mov    %bh,_0cf434_data
		mov    %dl,_0ce0c5_data
		mov    $0x000001,%dh
		mov    $0x000018,%ebx
		mov    %dh,_0ce170_data
		xor    %edx,%edx
		mov    %si,_0cf292_data
		call   _07fcc0_func
		mov    $0x000a20,%ebx
		mov    $_0cb508_data,%eax
		xor    %edx,%edx
		call   _07fcc0_func
		call   _058cd0_func
		mov    _094d1c_data,%cl
		or     $0x000001,%cl
		xor    %al,%al
		mov    %cl,_094d1c_data
		mov    %cl,%ch
		mov    %al,_094d1d_data
		and    $0x0000f9,%ch
		mov    %esi,%eax
		mov    %ch,_094d1c_data

	_068931_jump:
		movswl %ax,%edx
		imul   $0x000014,%edx,%edx
		andb   $0x0000f8,_094d1c_data(%edx)
		xor    %bh,%bh
		inc    %eax
		mov    %bh,_094d1d_data(%edx)
		cmp    $0x000018,%ax
		jl     _068931_jump
		mov    _0cf1aa_data,%edx
		sar    $0x000010,%edx
		movb   $0x000003,_0cd2b4_data(,%edx,4)
		xor    %al,%al
		mov    %bh,_0cd2b5_data(,%edx,4)
		mov    $0x000005,%ah
		mov    %bh,_0cd2b6_data(,%edx,4)
		mov    %ah,_0cd2b7_data(,%edx,4)
		xor    %ah,%ah

	_068979_jump:
		movswl %ax,%edx
		xor    %bl,%bl
		inc    %eax
		mov    %bl,_0caad0_data(%edx)
		cmp    $0x000017,%ax
		jl     _068979_jump
		call   _01f36c_func
		call   _067d80_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0689cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cf41e_data
		jne    _0689df_jump
		call   _06b078_func

	_0689df_jump:
		mov    $0x001000,%ebx
		mov    $0x000001,%esi
		mov    $0x000003,%edi
		xor    %edx,%edx
		mov    $0x000064,%ecx
		mov    %dx,_0cf1d4_data
		mov    %bx,_0cf1d0_data
		mov    %bx,_0cf1d2_data
		mov    %si,_0cf1c4_data
		mov    %di,_0cf18e_data
		mov    %esi,%eax
		mov    %si,_0cf1ac_data
		mov    %di,_0cf192_data
		mov    %cx,_0cf1a8_data
		mov    $0x000001,%dl
		mov    $0x000006,%edi
		xor    %esi,%eax
		xor    %ebx,%ebx
		mov    _0cf435_data,%al
		mov    %dl,_0cf470_data
		mov    %bx,_0cf1a2_data
		mov    %di,_0cf174_data
		mov    _0cf435_data,%bl
		add    %esi,%eax
		xor    %dh,%dh
		mov    $0x00000c,%esi
		mov    %ax,_0cf190_data
		mov    %dh,_0cf437_data
		mov    $0x000028,%eax
		mov    %si,_0cf186_data
		xor    %dl,%dl
		mov    %ax,_0cf164_data
		mov    %dx,_0cf16c_data
		test   %bl,%bl
		je     _068aaa_jump
		jmp    _068a9e_jump

	_068a8f_jump:
		mov    %dl,%al
		inc    %al
		and    $_0000ff_case,%eax
		call   _074300_func
		inc    %edx

	_068a9e_jump:
		xor    %eax,%eax
		mov    _0cf435_data,%al
		cmp    %ax,%dx
		jl     _068a8f_jump

	_068aaa_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068ab0_func:
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    $0x000001,%esi
		mov    %dx,_0cf172_data
		mov    %dx,_0cf16e_data
		mov    %dx,_0cf1a6_data
		mov    %dx,_0cf1b2_data
		mov    %dx,_0cf18c_data
		mov    %dx,_0cf17a_data
		mov    %dx,_0cf180_data
		mov    %dx,_0cf178_data
		mov    %dx,_0cf168_data
		mov    %si,_0cf1ae_data
		pop    %esi
		pop    %edx
		ret    



_068b04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _041d08_func
		test   %ax,%ax
		je     _068ba5_jump
		call   _041de8_func
		test   %ax,%ax
		jne    _068ba5_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _068ba5_jump
		cmpw   $0x000000,_0cf1b2_data
		jne    _068ba5_jump
		cmpb   $0x000000,_0cf470_data
		jne    _068b71_jump
		mov    _0cf1a2_data,%ax
		cmp    _0cf186_data,%ax
		jle    _068ba5_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _068ba5_jump

	_068b71_jump:
		mov    _0cf192_data,%cx
		cmp    $0x000003,%cx
		jne    _068b89_jump
		movw   $0x000001,_0cf192_data
		jmp    _068b93_jump

	_068b89_jump:
		mov    %ecx,%esi
		inc    %esi
		mov    %si,_0cf192_data

	_068b93_jump:
		xor    %edx,%edx
		mov    $0x000044,%eax
		mov    %edx,_0ccae0_data
		call   _072210_func

	_068ba5_jump:
		call   _041c98_func
		test   %ax,%ax
		je     _068c42_jump
		call   _041de8_func
		test   %ax,%ax
		jne    _068c42_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _068c42_jump
		cmpw   $0x000000,_0cf1b2_data
		jne    _068c42_jump
		cmpb   $0x000000,_0cf470_data
		jne    _068c0e_jump
		mov    _0cf1a2_data,%ax
		cmp    _0cf186_data,%ax
		jle    _068c42_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _068c42_jump

	_068c0e_jump:
		mov    _0cf192_data,%bx
		cmp    $0x000001,%bx
		jne    _068c26_jump
		movw   $0x000003,_0cf192_data
		jmp    _068c30_jump

	_068c26_jump:
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0cf192_data

	_068c30_jump:
		xor    %ebx,%ebx
		mov    $0x000044,%eax
		mov    %ebx,_0ccae0_data
		call   _072210_func

	_068c42_jump:
		call   _041de8_func
		test   %ax,%ax
		je     _068cd8_jump
		call   _041c98_func
		test   %ax,%ax
		jne    _068cd8_jump
		call   _041d08_func
		test   %ax,%ax
		jne    _068cd8_jump
		cmpb   $0x000000,_0cf470_data
		jne    _068ca1_jump
		mov    _0cf1a2_data,%ax
		cmp    _0cf186_data,%ax
		jle    _068cd8_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _068cd8_jump

	_068ca1_jump:
		mov    _0cf1ac_data,%ax
		cmp    $0x000001,%ax
		jg     _068cbc_jump
		xor    %eax,%eax
		mov    _0cf435_data,%al
		mov    %ax,_0cf1ac_data
		jmp    _068cc6_jump

	_068cbc_jump:
		mov    %eax,%edx
		dec    %edx
		mov    %dx,_0cf1ac_data

	_068cc6_jump:
		xor    %ecx,%ecx
		mov    $0x000044,%eax
		mov    %ecx,_0ccae0_data
		call   _072210_func

	_068cd8_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _068d71_jump
		call   _041c98_func
		test   %ax,%ax
		jne    _068d71_jump
		call   _041d08_func
		test   %ax,%ax
		jne    _068d71_jump
		cmpb   $0x000000,_0cf470_data
		jne    _068d37_jump
		mov    _0cf1a2_data,%ax
		cmp    _0cf186_data,%ax
		jle    _068d71_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _068d71_jump

	_068d37_jump:
		xor    %eax,%eax
		mov    _0cf1ac_data,%cx
		mov    _0cf435_data,%al
		cmp    %cx,%ax
		jne    _068d55_jump
		movw   $0x000001,_0cf1ac_data
		jmp    _068d5f_jump

	_068d55_jump:
		mov    %ecx,%esi
		inc    %esi
		mov    %si,_0cf1ac_data

	_068d5f_jump:
		xor    %esi,%esi
		mov    $0x000044,%eax
		mov    %esi,_0ccae0_data
		call   _072210_func

	_068d71_jump:
		call   _041d08_func
		test   %ax,%ax
		jne    _068da9_jump
		call   _041c98_func
		test   %ax,%ax
		jne    _068da9_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _068da9_jump
		call   _041de8_func
		test   %ax,%ax
		jne    _068da9_jump
		mov    $0x000001,%cl
		mov    %ax,_0cf1a2_data
		mov    %cl,_0cf470_data
		jmp    _068db1_jump

	_068da9_jump:
		xor    %bh,%bh
		mov    %bh,_0cf470_data

	_068db1_jump:
		call   _037514_func
		test   %al,%al
		je     _068dd4_jump
		cmpb   $0x000000,_0cf470_data
		je     _068dd4_jump
		movb   $0x000001,_0cf42b_data
		mov    $0x00004d,%eax
		call   _072210_func

	_068dd4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068ddc_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _04eb1c_func
		cmpw   $0x000001,_0cf192_data
		jne    _068e43_jump
		call   _0373f0_func
		test   %al,%al
		je     _068e43_jump
		cmpb   $0x000000,_0cf470_data
		jne    _068e2d_jump
		mov    _0cf1a2_data,%dx
		cmp    _0cf186_data,%dx
		jle    _068e43_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _068e43_jump

	_068e2d_jump:
		mov    $0x000001,%ecx
		mov    $0x000045,%eax
		mov    %cx,_0cf18c_data
		call   _072210_func

	_068e43_jump:
		cmpw   $0x000002,_0cf192_data
		jne    _068e9f_jump
		call   _0373f0_func
		test   %al,%al
		je     _068e9f_jump
		cmpb   $0x000000,_0cf470_data
		jne    _068e8c_jump
		mov    _0cf1a2_data,%dx
		cmp    _0cf186_data,%dx
		jle    _068e9f_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _068e9f_jump

	_068e8c_jump:
		movw   $0x000002,_0cf18c_data
		mov    $0x000045,%eax
		call   _072210_func

	_068e9f_jump:
		cmpw   $0x000003,_0cf192_data
		jne    _068f08_jump
		call   _0373f0_func
		test   %al,%al
		je     _068f08_jump
		cmpb   $0x000000,_0cf470_data
		jne    _068ee8_jump
		mov    _0cf1a2_data,%dx
		cmp    _0cf186_data,%dx
		jle    _068f08_jump
		mov    _0cf1a0_data,%edx
		mov    _0cf172_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _068f08_jump

	_068ee8_jump:
		mov    $0x000003,%ecx
		mov    $0x000045,%eax
		mov    %cx,_0cf18c_data
		call   _072210_func
		mov    $0x000014,%eax
		call   _03da44_func

	_068f08_jump:
		call   _04eb60_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068f14_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x000004,%edx
		mov    $0x000005,%ebx
		mov    $0x000014,%eax
		mov    %dx,_0cf18e_data
		mov    $0x000041,%edx
		mov    $0x000015,%ecx
		call   _04ea48_func
		mov    $0x000032,%ebx
		mov    $0x000001,%ah
		mov    %cx,_0cf19a_data
		xor    %dh,%dh
		mov    %bx,_0cf164_data
		mov    %ah,_0cad6c_data
		mov    %ah,_0cad6e_data
		mov    %dh,_0cad6d_data
		mov    _0cf19c_data,%ax
		mov    $0x000005,%bl
		mov    %ax,_0cad6a_data
		mov    _0cf19e_data,%ax
		mov    %bl,_0cad6f_data
		mov    %ax,_0cf198_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068f8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _04eb1c_func
		cmpw   $0x000000,_0cf1a0_data
		jne    _068fd0_jump
		cmpw   $0x000001,_0cf18c_data
		je     _068fd0_jump
		mov    _0cf1aa_data,%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%edx
		mov    $0x000001,%ecx
		mov    _0c1024_data,%eax
		mov    %cx,_0cf1a0_data
		mov    %eax,_0cd144_data(%edx)

	_068fd0_jump:
		cmpw   $0x000000,_0cf180_data
		je     _068fe3_jump
		movw   $0x000001,_0cf17a_data

	_068fe3_jump:
		call   _0373f0_func
		test   %al,%al
		je     _0690a5_jump
		cmpb   $0x000000,_0cf470_data
		je     _0690a5_jump
		mov    _0cf1aa_data,%eax
		mov    _0cf1ac_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpb   $0x00007e,_0cd143_data(%eax)
		jne    _069047_jump
		mov    _0cf1ae_data,%cx
		cmp    $0x000001,%cx
		je     _06907f_jump
		mov    %ecx,%esi
		mov    $0x000061,%dh
		dec    %esi
		mov    %dh,_0cd143_data(%eax)
		mov    $0x000044,%eax
		mov    %si,_0cf1ae_data
		call   _072210_func
		jmp    _06907f_jump

	_069047_jump:
		mov    _0cf1ae_data,%ax
		cmp    $0x000003,%ax
		jge    _069069_jump
		mov    %eax,%ebx
		inc    %ebx
		mov    $0x000044,%eax
		mov    %bx,_0cf1ae_data
		call   _072210_func
		jmp    _06907f_jump

	_069069_jump:
		mov    $0x000044,%eax
		mov    $0x000001,%edx
		call   _072210_func
		mov    %dx,_0cf180_data

	_06907f_jump:
		mov    $0x001000,%eax
		xor    %edi,%edi
		mov    $0x000001,%ebx
		mov    %di,_0cf1d4_data
		mov    %ax,_0cf1d0_data
		mov    %ax,_0cf1d2_data
		mov    %bx,_0cf1c4_data

	_0690a5_jump:
		call   _041de8_func
		test   %ax,%ax
		je     _069176_jump
		call   _041d08_func
		test   %ax,%ax
		jne    _069176_jump
		call   _041c98_func
		test   %ax,%ax
		jne    _069176_jump
		cmpb   $0x000000,_0cf470_data
		jne    _0690f5_jump
		mov    _0cf1a0_data,%edx
		sar    $0x000010,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _069176_jump

	_0690f5_jump:
		mov    _0cf1aa_data,%eax
		mov    _0cf1ac_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0cd143_data(%eax),%bh
		cmp    $0x00007a,%bh
		jne    _06911f_jump
		movb   $0x000020,_0cd143_data(%eax)
		jmp    _069145_jump

	_06911f_jump:
		cmp    $0x000020,%bh
		jne    _06912d_jump
		movb   $0x00007e,_0cd143_data(%eax)
		jmp    _069145_jump

	_06912d_jump:
		cmp    $0x00007e,%bh
		jne    _06913b_jump
		movb   $0x000061,_0cd143_data(%eax)
		jmp    _069145_jump

	_06913b_jump:
		mov    %bh,%dl
		inc    %dl
		mov    %dl,_0cd143_data(%eax)

	_069145_jump:
		mov    $0x001000,%esi
		xor    %ecx,%ecx
		mov    $0x000001,%eax
		mov    %cx,_0cf1d4_data
		mov    %si,_0cf1d0_data
		mov    %ax,_0cf1c4_data
		mov    $0x000044,%eax
		mov    %si,_0cf1d2_data
		call   _072210_func

	_069176_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _069248_jump
		call   _041d08_func
		test   %ax,%ax
		jne    _069248_jump
		call   _041c98_func
		test   %ax,%ax
		jne    _069248_jump
		cmpb   $0x000000,_0cf470_data
		jne    _0691c6_jump
		mov    _0cf1a0_data,%edx
		sar    $0x000010,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _069248_jump

	_0691c6_jump:
		mov    _0cf1aa_data,%eax
		mov    _0cf1ac_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0cd143_data(%eax),%ch
		cmp    $0x000061,%ch
		jne    _0691f0_jump
		movb   $0x00007e,_0cd143_data(%eax)
		jmp    _069216_jump

	_0691f0_jump:
		cmp    $0x00007e,%ch
		jne    _0691fe_jump
		movb   $0x000020,_0cd143_data(%eax)
		jmp    _069216_jump

	_0691fe_jump:
		cmp    $0x000020,%ch
		jne    _06920c_jump
		movb   $0x00007a,_0cd143_data(%eax)
		jmp    _069216_jump

	_06920c_jump:
		mov    %ch,%bl
		dec    %bl
		mov    %bl,_0cd143_data(%eax)

	_069216_jump:
		mov    $0x001000,%ebx
		mov    $0x000001,%esi
		xor    %edx,%edx
		mov    $0x000044,%eax
		mov    %dx,_0cf1d4_data
		mov    %bx,_0cf1d0_data
		mov    %bx,_0cf1d2_data
		mov    %si,_0cf1c4_data
		call   _072210_func

	_069248_jump:
		call   _041de8_func
		test   %ax,%ax
		jne    _06928d_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _06928d_jump
		call   _041d08_func
		test   %ax,%ax
		jne    _06928d_jump
		call   _041c98_func
		test   %ax,%ax
		jne    _06928d_jump
		cmpw   $0x000000,_0cf180_data
		jne    _06928d_jump
		cmpw   $0x000000,_0cf17a_data
		jne    _06928d_jump
		movw   $0x000001,_0cf178_data

	_06928d_jump:
		call   _037514_func
		test   %al,%al
		je     _0692a7_jump
		movb   $0x000001,_0cf42b_data
		mov    $0x00004d,%eax
		call   _072210_func

	_0692a7_jump:
		call   _04eb60_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0692b4_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf18c_data,%ax
		xor    %bl,%bl
		cmp    $0x000002,%ax
		jb     _0692db_jump
		jbe    _06946c_jump
		cmp    $0x000003,%ax
		je     _0694d8_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_0692db_jump:
		cmp    $0x000001,%ax
		jne    _069548_jump
		cmpw   $0x000000,_0cf1b2_data
		je     _069436_jump
		mov    _0cf1b0_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		sub    $0x000004,%eax
		mov    $_0c1028_data,%edx
		add    $_0cd148_data,%eax
		call   _07f4c0_func
		test   %eax,%eax
		je     _069345_jump
		mov    _0cf1aa_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		sub    $0x000004,%eax
		mov    $_0c1028_data,%edx
		add    $_0cd148_data,%eax
		call   _07f4c0_func
		test   %eax,%eax
		je     _069343_jump
		mov    $0x000002,%eax
		call   _04ef74_func
		test   %al,%al
		je     _069345_jump

	_069343_jump:
		mov    $0x000001,%bl

	_069345_jump:
		test   %bl,%bl
		je     _0694ca_jump
		mov    _0cf1ac_data,%ax
		mov    %ax,_0cf1a6_data
		mov    _0cf1a4_data,%esi
		sar    $0x000010,%esi
		shl    $0x000002,%esi
		sub    $0x000004,%esi
		mov    $_0cd144_data,%edi
		add    $_0cd148_data,%esi
		push   %edi

	_069374_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06938c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _069374_jump

	_06938c_jump:
		pop    %edi
		mov    _0cf1b0_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		lea    -0x000004(%eax),%esi
		mov    _0cf1a4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		mov    $_0cd148_data,%edi
		sub    $0x000004,%eax
		add    $_0cd148_data,%esi
		add    %eax,%edi
		push   %edi

	_0693b7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0693cf_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0693b7_jump

	_0693cf_jump:
		pop    %edi
		mov    _0cf1b0_data,%eax
		mov    _0cf1a4_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    _0cd2b4_data(,%eax,4),%bl
		mov    %bl,_0cd2b4_data(,%edx,4)
		mov    _0cd2b5_data(,%eax,4),%bl
		mov    %bl,_0cd2b5_data(,%edx,4)
		mov    _0cd2b6_data(,%eax,4),%bl
		mov    %bl,_0cd2b6_data(,%edx,4)
		mov    _0cd2b7_data(,%eax,4),%al
		mov    %al,_0cd2b7_data(,%edx,4)
		xor    %eax,%eax
		mov    _0cf1b2_data,%al
		mov    $0x000001,%ebx
		call   _074008_func
		mov    %bx,_0cf16e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_069436_jump:
		mov    _0cf1aa_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		sub    $0x000004,%eax
		mov    $_0c1028_data,%edx
		add    $_0cd148_data,%eax
		call   _07f4c0_func
		test   %eax,%eax
		je     _069548_jump
		mov    _0cf1ac_data,%ax
		mov    %ax,_0cf1b2_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06946c_jump:
		mov    _0cf1aa_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		sub    $0x000004,%eax
		mov    $_0c1028_data,%edx
		add    $_0cd148_data,%eax
		call   _07f4c0_func
		test   %eax,%eax
		je     _069548_jump
		mov    $0x000001,%eax
		call   _04ef74_func
		test   %al,%al
		je     _0694ca_jump
		mov    _0cf1ac_data,%ax
		mov    %ax,_0cf1a6_data
		call   _036cac_func
		mov    _0cf1a4_data,%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c1028_data,%al
		mov    %al,_0cd144_data(%edx)

	_0694ca_jump:
		movw   $0x000001,_0cf16e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_0694d8_jump:
		mov    _0cf1ac_data,%ax
		mov    %ax,_0cf1a6_data
		mov    _0cf1a4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		mov    $_0cd148_data,%edx
		sub    $0x000004,%eax
		add    %eax,%edx
		mov    $_0c1028_data,%eax
		call   _07f4c0_func
		test   %eax,%eax
		jne    _069522_jump
		xor    %esi,%esi
		mov    $0x000001,%ah
		mov    %si,_0cf1a0_data
		mov    %ah,_0cf437_data
		call   _06888c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_069522_jump:
		xor    %eax,%eax
		mov    $0x000001,%edx
		mov    _0cf1a6_data,%al
		mov    %dx,_0cf1a0_data
		call   _074008_func
		mov    %dx,_0cf16c_data
		mov    %dx,_0cf288_data

	_069548_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_06959c_switch:
		.long   _0695f5_case
		.long   _069601_case
		.long   _06960d_case
		.long   _069619_case

_0695ac_switch:
		.long   _06963c_case
		.long   _069648_case
		.long   _069654_case
		.long   _069660_case

_0695bc_switch:
		.long   _069683_case
		.long   _06968f_case
		.long   _06969b_case
		.long   _0696a7_case

_0695cc_switch:
		.long   _0696ca_case
		.long   _0696d5_case
		.long   _0696e0_case
		.long   _0696eb_case


	_0695f5_case:
		movl   $_041e58_func,_0c3f58_data
		jmp    _069623_jump

	_069601_case:
		movl   $_041ee4_func,_0c3f58_data
		jmp    _069623_jump

	_06960d_case:
		movl   $_041f70_func,_0c3f58_data
		jmp    _069623_jump

	_069619_case:
		movl   $_041ffc_func,_0c3f58_data

	_069623_jump:
		mov    _0c3f6a_data,%ax
		cmp    $0x000003,%ax
		ja     _06966a_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0695ac_switch(,%eax,4)

	_06963c_case:
		movl   $_041e58_func,_0c3f5c_data
		jmp    _06966a_jump

	_069648_case:
		movl   $_041ee4_func,_0c3f5c_data
		jmp    _06966a_jump

	_069654_case:
		movl   $_041f70_func,_0c3f5c_data
		jmp    _06966a_jump

	_069660_case:
		movl   $_041ffc_func,_0c3f5c_data

	_06966a_jump:
		mov    _0c3f6c_data,%ax
		cmp    $0x000003,%ax
		ja     _0696b1_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0695bc_switch(,%eax,4)

	_069683_case:
		movl   $_041e58_func,_0c3f60_data
		jmp    _0696b1_jump

	_06968f_case:
		movl   $_041ee4_func,_0c3f60_data
		jmp    _0696b1_jump

	_06969b_case:
		movl   $_041f70_func,_0c3f60_data
		jmp    _0696b1_jump

	_0696a7_case:
		movl   $_041ffc_func,_0c3f60_data

	_0696b1_jump:
		mov    _0c3f6e_data,%ax
		cmp    $0x000003,%ax
		ja     _0696f5_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0695cc_switch(,%eax,4)

	_0696ca_case:
		movl   $_041e58_func,_0c3f64_data
		ret    

	_0696d5_case:
		movl   $_041ee4_func,_0c3f64_data
		ret    

	_0696e0_case:
		movl   $_041f70_func,_0c3f64_data
		ret    

	_0696eb_case:
		movl   $_041ffc_func,_0c3f64_data

	_0696f5_jump:
		ret    

_0696f8_switch:
		.long   _06971b_case
		.long   _069724_case
		.long   _06972d_case
		.long   _069736_case


	_06971b_case:
		push   $0x000002
		mov    $_0c102c_data,%eax
		jmp    _06973d_jump

	_069724_case:
		push   $0x000001
		mov    $_0c1030_data,%eax
		jmp    _06973d_jump

	_06972d_case:
		push   $0x000005
		mov    $_0c1034_data,%eax
		jmp    _06973d_jump

	_069736_case:
		push   $0x000001
		mov    $_0c1038_data,%eax

	_06973d_jump:
		and    $_0000ff_case,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01a168_func
		ret    $0x000004



_069754_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x00000a,%ebx
		mov    _0cf254_data,%si
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0cf216_data
		mov    %bx,_0cf218_data
		mov    %ah,_0cf44a_data
		mov    %dx,_0cf1a2_data
		mov    %ah,_09294c_data
		mov    %ah,_0cf436_data
		cmp    $0x000004,%si
		je     _06979f_jump
		testb  $0x000002,_0cf221_data
		je     _0697d3_jump

	_06979f_jump:
		mov    $0x000021,%ecx
		mov    $_0ce044_data,%edi
		mov    $_0ce7cc_data,%esi
		mov    $0x000001,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %bh,_0cf47a_data
		mov    _0cf221_data,%cl
		mov    $0x000001,%edi
		and    $0x0000fd,%cl
		mov    %di,_0cf254_data
		mov    %cl,_0cf221_data

	_0697d3_jump:
		mov    $0x000087,%edx
		xor    %eax,%eax
		xor    %ch,%ch
		mov    _0ce0ad_data,%al
		mov    %ch,_0ce0af_data
		sub    %eax,%edx
		mov    _0cf434_data,%al
		mov    %edx,_0ce070_data
		test   %al,%al
		je     _069822_jump
		mov    $0x000018,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		xor    %eax,%eax
		mov    $0x0000e1,%edx
		mov    _0ce0ac_data,%al
		sub    %eax,%edx
		mov    %edx,_0ce06c_data
		jmp    _06986d_jump

	_069822_jump:
		xor    %eax,%eax
		mov    $0x000050,%edx
		mov    _0ce0ac_data,%al
		sub    %eax,%edx
		mov    $_0ce044_data,%eax
		mov    %edx,_0ce06c_data
		mov    $0x000003,%edx
		call   _01d43c_func
		movw   $_0000ff_case,_0cf218_data
		cmpb   $0x00000a,_0cf401_data
		jbe    _06985e_jump
		mov    $0x000034,%edx
		jmp    _069863_jump

	_06985e_jump:
		mov    $0x000033,%edx

	_069863_jump:
		mov    $_0ce044_data,%eax
		call   _01d434_func

	_06986d_jump:
		mov    $0x000082,%ebx
		mov    _0ce0c5_data,%dl
		mov    $0x000078,%ecx
		and    $0x0000f7,%dl
		mov    $0x00006e,%esi
		mov    %dl,_0ce0c5_data
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %dx,_0ce084_data
		mov    %dx,_0ce086_data
		call   _01d27c_func
		mov    $0x000050,%edx
		mov    $_0ce73c_data,%eax
		mov    %ebx,_0ce768_data
		mov    %edx,_0ce764_data
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %edi,%edi
		call   _01d444_func
		mov    $0x000050,%dh
		mov    $0x000040,%bl
		mov    $_0cd2cc_data,%eax
		mov    %cx,_0cd302_data
		mov    %si,_0cd304_data
		mov    %dh,_0cd334_data
		mov    %bl,_0cd335_data
		xor    %cl,%cl
		mov    _0cd34d_data,%bh
		mov    $0x000005,%edx
		and    $0x0000fb,%bh
		mov    %cl,_0cd34b_data
		mov    %bh,_0cd34d_data
		mov    $0x000014,%ebx
		xor    %ch,%ch
		call   _01d444_func
		mov    _0cf2ae_data,%ax
		mov    %ch,_0cf438_data
		mov    %ax,_0cf238_data
		mov    _0cf2b0_data,%ax
		mov    %di,_0cf2ae_data
		mov    %ax,_0cf234_data
		mov    %di,_0cf2b0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_069940_switch:
		.long   _0699f4_case
		.long   _069a2f_case
		.long   _069a67_case
		.long   _069a9b_case




_069950_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _09294c_data,%dl
		movw   $0x000001,_0cf1a2_data
		call   _041de8_func
		test   %ax,%ax
		je     _06997e_jump
		mov    _09294c_data,%dl
		cmp    $0x000001,%dl
		je     _06997e_jump
		inc    %dl
		jmp    _0699db_jump

	_06997e_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _069998_jump
		mov    _09294c_data,%dl
		cmp    $0x000003,%dl
		je     _069998_jump
		add    $0x000002,%dl
		jmp    _0699db_jump

	_069998_jump:
		call   _041d08_func
		test   %ax,%ax
		je     _0699b2_jump
		mov    _09294c_data,%dl
		cmp    $0x000007,%dl
		je     _0699b2_jump
		add    $0x000004,%dl
		jmp    _0699db_jump

	_0699b2_jump:
		call   _041c98_func
		test   %ax,%ax
		je     _0699cc_jump
		mov    _09294c_data,%dl
		cmp    $0x00000f,%dl
		je     _0699cc_jump
		add    $0x000008,%dl
		jmp    _0699db_jump

	_0699cc_jump:
		xor    %ecx,%ecx
		mov    _09294c_data,%dl
		mov    %cx,_0cf1a2_data

	_0699db_jump:
		mov    _0cf436_data,%al
		cmp    $0x000003,%al
		ja     _069ad7_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		jmp    *%cs:_069940_switch(,%ebx,4)

	_0699f4_case:
		cmp    $0x000001,%dl
		jne    _069a0e_jump
		cmpb   $0x000003,_0cf434_data
		ja     _069a0e_jump
		add    %dl,%al
		mov    %al,_0cf436_data
		jmp    _069ad7_jump

	_069a0e_jump:
		cmpw   $0x000000,_0cf1a2_data
		je     _069ad7_jump
		xor    %al,%al
		xor    %dl,%dl
		mov    %al,_0cf436_data
		mov    %dl,_09294c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069a2f_case:
		cmp    $0x000003,%dl
		jne    _069a45_jump
		inc    %al
		mov    %al,_0cf436_data
		mov    %dl,_09294c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069a45_jump:
		cmpw   $0x000000,_0cf1a2_data
		je     _069ad7_jump
		xor    %cl,%cl
		xor    %dl,%dl
		mov    %cl,_0cf436_data
		mov    %dl,_09294c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069a67_case:
		cmp    $0x000007,%dl
		jne    _069a7d_jump
		inc    %al
		mov    %al,_0cf436_data
		mov    %dl,_09294c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069a7d_jump:
		cmpw   $0x000000,_0cf1a2_data
		je     _069ad7_jump
		xor    %bh,%bh
		xor    %dl,%dl
		mov    %bh,_0cf436_data
		mov    %dl,_09294c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069a9b_case:
		cmp    $0x00000f,%dl
		jne    _069ac3_jump
		orb    $0x000004,_0cd34d_data
		xor    %dl,%dl
		mov    $0x00000a,%bl
		mov    $0x000080,%dh
		mov    %bl,_0cf434_data
		mov    %dh,_0cd34b_data
		mov    %dl,_09294c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069ac3_jump:
		cmpw   $0x000000,_0cf1a2_data
		je     _069ad7_jump
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,_0cf436_data

	_069ad7_jump:
		mov    %dl,_09294c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_069ae4_switch:
		.long   _069bec_case
		.long   _069c25_case
		.long   _069c40_case
		.long   _069d3a_case
		.long   _069c93_case
		.long   _069cfd_case
		.long   _069c75_case




_069b00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000001,%eax
		call   _054868_func
		call   _0373f0_func
		test   %al,%al
		jne    _069b2d_jump
		call   _037438_func
		test   %al,%al
		jne    _069b2d_jump
		call   _037514_func
		test   %al,%al
		je     _069bb3_jump

	_069b2d_jump:
		mov    _0ce0b0_data,%ah
		cmp    $0x000019,%ah
		je     _069b42_jump
		cmp    $0x00001a,%ah
		je     _069b42_jump
		cmp    $0x00001b,%ah
		jne    _069bb3_jump

	_069b42_jump:
		cmpb   $0x000080,_0cd34b_data
		je     _069b52_jump
		orb    $0x000004,_0cd34d_data

	_069b52_jump:
		call   _01cc58_func
		mov    $0x0000d8,%eax
		call   _072210_func
		cmpb   $0x00001b,_0ce0b0_data
		je     _069b80_jump
		mov    $0x00001f,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		jmp    _069b9b_jump

	_069b80_jump:
		mov    $0x00001d,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		orb    $0x000008,_0ce0c5_data

	_069b9b_jump:
		mov    $0x000001,%ebx
		xor    %al,%al
		xor    %edx,%edx
		mov    %al,_0ce0af_data
		mov    $_0ce73c_data,%eax
		call   _01d444_func

	_069bb3_jump:
		mov    $_0ce044_data,%eax
		call   _0552b4_func
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		call   _055230_func
		mov    %ax,_0ce084_data
		mov    _0ce0b0_data,%al
		sub    $0x000019,%al
		cmp    $0x000006,%al
		ja     _069d69_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_069ae4_switch(,%eax,4)

	_069bec_case:
		xor    %eax,%eax
		mov    _0ce06c_data,%ecx
		mov    _0ce0ac_data,%al
		add    %ecx,%eax
		cmp    $0x000046,%eax
		jge    _069d69_jump
		mov    $0x00001a,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		xor    %dl,%dl
		mov    %dl,_0ce0af_data
		jmp    _069d69_jump

	_069c25_case:
		cmpb   $0x000006,_0ce0af_data
		jbe    _069d69_jump
		xor    %ebx,%ebx
		mov    %bx,_0ce084_data
		jmp    _069d69_jump

	_069c40_case:
		mov    _0cf216_data,%si
		inc    %esi
		mov    %si,_0cf216_data
		cmp    $0x00003c,%si
		jne    _069d69_jump
		mov    _0cf218_data,%dx
		xor    %eax,%eax
		dec    %edx
		mov    %ax,_0cf216_data
		mov    %dx,_0cf218_data
		jmp    _069d69_jump

	_069c75_case:
		mov    $_0ce044_data,%eax
		call   _01cca0_func
		test   %al,%al
		je     _069d69_jump
		orb    $0x000008,_0ce0c5_data
		jmp    _069d69_jump

	_069c93_case:
		mov    _0ce0c5_data,%dh
		xor    %eax,%eax
		mov    _0ce06c_data,%ebx
		mov    _0ce0ac_data,%al
		or     $0x000008,%dh
		add    %ebx,%eax
		mov    %dh,_0ce0c5_data
		cmp    $0x0000b4,%eax
		jle    _069ce2_jump
		mov    $_0ce044_data,%eax
		call   _01cca0_func
		test   %al,%al
		je     _069ce2_jump
		mov    $0x00001c,%edx
		mov    $_0ce044_data,%eax
		xor    %bh,%bh
		call   _01d434_func
		mov    %bh,_0ce0af_data
		jmp    _069d69_jump

	_069ce2_jump:
		cmpb   $0x000040,_0ce0af_data
		jae    _069d69_jump
		xor    %edx,%edx
		mov    %dx,_0ce084_data
		jmp    _069d69_jump

	_069cfd_case:
		xor    %eax,%eax
		mov    _0ce06c_data,%edx
		mov    _0ce0ac_data,%al
		add    %edx,%eax
		cmp    $0x0000af,%eax
		jle    _069d69_jump
		mov    $_0ce044_data,%eax
		call   _01cca0_func
		test   %al,%al
		je     _069d69_jump
		mov    $0x00001c,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func
		xor    %dl,%dl
		mov    %dl,_0ce0af_data
		jmp    _069d69_jump

	_069d3a_case:
		cmpb   $0x000028,_0ce0af_data
		jbe    _069d57_jump
		mov    $0x000001,%ch
		mov    $0xffffffff,%ebx
		mov    %ch,_0cf44a_data
		mov    %bx,_0ce2c6_data

	_069d57_jump:
		cmpb   $0x000010,_0ce0af_data
		jbe    _069d69_jump
		xor    %ecx,%ecx
		mov    %cx,_0ce084_data

	_069d69_jump:
		cmpb   $0x000000,_0cf3ef_data
		jne    _069d7b_jump
		cmpb   $0x000019,_0ce0b0_data
		je     _069da5_jump

	_069d7b_jump:
		mov    _0ce082_data,%eax
		mov    _0ce06c_data,%esi
		sar    $0x000010,%eax
		add    %eax,%esi
		mov    $_0ce044_data,%eax
		mov    %esi,_0ce06c_data
		call   _01dc5c_func
		mov    $_0ce044_data,%eax
		call   _055b7c_func

	_069da5_jump:
		mov    $_0ce73c_data,%eax
		call   _01dc5c_func
		mov    $_0ce73c_data,%eax
		call   _055b7c_func
		testb  $0x000004,_0cd34d_data
		je     _069df0_jump
		mov    $_0cd2cc_data,%eax
		call   _055b7c_func
		mov    $_0cd2cc_data,%eax
		call   _01cca0_func
		test   %al,%al
		je     _069df0_jump
		cmpb   $0x000080,_0cd34b_data
		je     _069de9_jump
		decb   _0cf434_data

	_069de9_jump:
		andb   $0x0000fb,_0cd34d_data

	_069df0_jump:
		cmpw   $_0000ff_case,_0cf218_data
		je     _069e05_jump
		call   _069950_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069e05_jump:
		call   _069f00_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069e10_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpw   $_0000ff_case,_0cf218_data
		jne    _069e36_jump
		xor    %bh,%bh
		mov    $0x000001,%cl
		mov    %bh,_0cf44a_data
		mov    %cl,_0cf46d_data
		mov    %bh,_0cf429_data
		jmp    _069e6f_jump

	_069e36_jump:
		mov    _0cf216_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _069e67_jump
		mov    $0x000003,%ebx
		mov    $0x000002,%dl
		mov    %bx,_0ce94a_data
		mov    %dl,_0ce0ba_data
		xor    %bl,%bl
		mov    %dl,_0ce953_data
		mov    %bl,_0cf46d_data
		jmp    _069e6f_jump

	_069e67_jump:
		xor    %ah,%ah
		mov    %ah,_0cf429_data

	_069e6f_jump:
		mov    _0cf238_data,%ax
		mov    %ax,_0cf2ae_data
		mov    _0cf234_data,%ax
		mov    %ax,_0cf2b0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069f00_func:
		call   _037514_func
		test   %al,%al
		setne  %al
		mov    %al,_0cf438_data
		mov    $_0ce044_data,%eax
		call   _01cca0_func
		test   %al,%al
		je     _069f24_jump
		movb   $0x000001,_0cf438_data

	_069f24_jump:
		cmpb   $0x000000,_0cf438_data
		je     _069f3d_jump
		movb   $0x000001,_0cf44a_data
		movw   $0x00ffff,_0ce2c6_data

	_069f3d_jump:
		ret    

_069f40_switch:
		.long   _069fac_case
		.long   _06a236_case
		.long   _06a08a_case
		.long   _06a150_case
		.long   _06a165_case




_069f54_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000005,%ebx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0cf216_data
		mov    %bx,_0cf218_data
		mov    %ah,_0cf449_data
		call   _01eb78_func
		cmpb   $0x000000,_0cf432_data
		je     _069f8e_jump
		call   _06a2a8_func
		jmp    _06a29f_jump

	_069f8e_jump:
		mov    _0cf282_data,%ax
		dec    %eax
		cmp    $0x000004,%ax
		ja     _06a236_case
		and    $0x00ffff,%eax
		jmp    *%cs:_069f40_switch(,%eax,4)

	_069fac_case:
		mov    $_0cbf28_data,%edi
		mov    _0c28d0_data,%esi
		push   %edi

	_069fb8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _069fd0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _069fb8_jump

	_069fd0_jump:
		pop    %edi
		mov    $_0cc000_data,%edi
		mov    _0c28d4_data,%esi
		push   %edi

	_069fdd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _069ff5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _069fdd_jump

	_069ff5_jump:
		pop    %edi
		mov    $_0cc0d8_data,%edi
		mov    _0c28d8_data,%esi
		push   %edi

	_06a002_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06a01a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06a002_jump

	_06a01a_jump:
		pop    %edi
		mov    $_0cc1b0_data,%edi
		mov    _0c28dc_data,%esi
		mov    $_0000ff_case,%ebx
		push   %edi

	_06a02c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06a044_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06a02c_jump

	_06a044_jump:
		pop    %edi
		mov    _0c3f6c_data,%edx
		mov    $_0cc000_data,%eax
		sar    $0x000010,%edx
		call   _01ef8c_func
		mov    $_0000ff_case,%ebx
		mov    _0c3f6c_data,%edx
		mov    $_0cc0d8_data,%eax
		sar    $0x000010,%edx
		call   _01ef8c_func
		mov    $_0000ff_case,%ebx
		mov    _0c3f6c_data,%edx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01ef8c_func
		jmp    _06a236_case

	_06a08a_case:
		mov    $_0cbf28_data,%edi
		mov    _0c28e0_data,%esi
		push   %edi

	_06a096_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06a0ae_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06a096_jump

	_06a0ae_jump:
		pop    %edi
		mov    $_0cc000_data,%edi
		mov    _0c28e4_data,%esi
		push   %edi

	_06a0bb_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06a0d3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06a0bb_jump

	_06a0d3_jump:
		pop    %edi
		mov    $_0cc0d8_data,%edi
		mov    _0c28e8_data,%esi
		push   %edi

	_06a0e0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06a0f8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06a0e0_jump

	_06a0f8_jump:
		pop    %edi
		mov    $_0cc1b0_data,%edi
		mov    _0c28ec_data,%esi
		mov    $_0000ff_case,%ebx
		push   %edi

	_06a10a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06a122_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06a10a_jump

	_06a122_jump:
		pop    %edi
		mov    _0c3f66_data,%edx
		mov    $_0cc0d8_data,%eax
		sar    $0x000010,%edx
		call   _01ef8c_func
		mov    $_0000ff_case,%ebx
		mov    _0c3f66_data,%edx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01ef8c_func
		jmp    _06a236_case

	_06a150_case:
		call   _01cbb0_func
		mov    $_0cbf28_data,%edi
		mov    _0c28f0_data,%esi
		jmp    _06a21c_jump

	_06a165_case:
		cmpw   $0x000003,_0cf270_data
		jne    _06a207_jump
		mov    $_0cbf28_data,%edi
		mov    _0c28f4_data,%esi
		push   %edi

	_06a17f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06a197_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06a17f_jump

	_06a197_jump:
		pop    %edi
		mov    $_0cc000_data,%edi
		mov    _0c28f8_data,%esi
		push   %edi

	_06a1a4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06a1bc_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06a1a4_jump

	_06a1bc_jump:
		pop    %edi
		mov    $_0cc0d8_data,%edi
		mov    _0c28fc_data,%esi
		push   %edi

	_06a1c9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06a1e1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06a1c9_jump

	_06a1e1_jump:
		pop    %edi
		mov    $_0cc1b0_data,%edi
		mov    _0c2900_data,%esi
		push   %edi

	_06a1ee_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06a206_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06a1ee_jump

	_06a206_jump:
		pop    %edi

	_06a207_jump:
		cmpw   $0x00000b,_0cf270_data
		jne    _06a236_case
		mov    $_0cbf28_data,%edi
		mov    _0c2904_data,%esi

	_06a21c_jump:
		push   %edi

	_06a21d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06a235_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06a21d_jump

	_06a235_jump:
		pop    %edi

	_06a236_case:
		mov    $0x0000d8,%edx
		xor    %eax,%eax

	_06a23d_jump:
		cmpb   $0x000000,_0cbf28_data(%eax)
		je     _06a265_jump
		mov    $0x0000a0,%edi
		mov    $0x0000ad,%ebx
		mov    %di,_0cbff8_data(%eax)
		mov    %bx,_0cbffa_data(%eax)
		movb   $0x000002,_0cbffc_data(%eax)

	_06a265_jump:
		cmpb   $0x000000,_0cbf28_data(%edx)
		je     _06a28d_jump
		mov    $0x0000a0,%ecx
		mov    $0x0000bc,%edi
		mov    %cx,_0cbff8_data(%edx)
		mov    %di,_0cbffa_data(%edx)
		movb   $0x000002,_0cbffc_data(%edx)

	_06a28d_jump:
		add    $0x0001b0,%eax
		add    $0x0001b0,%edx
		cmp    $0x000870,%eax
		jne    _06a23d_jump

	_06a29f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a2a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %ah,%ah
		mov    %ah,_0cf445_data
		xor    %eax,%eax
		mov    _0cf1a6_data,%al
		xor    %dl,%dl
		call   _073d00_func
		mov    %dl,_0cf427_data
		xor    %dh,%dh
		mov    $0xffffffff,%ebx
		mov    %dl,_0cf42c_data
		mov    %dx,_0cf162_data
		mov    %dl,_0cf438_data
		mov    %dl,_0cf433_data
		mov    %dl,_0cf429_data

	_06a2ef_jump:
		inc    %ebx
		movswl %bx,%edx
		imul   $0x00000c,%edx,%edx
		mov    $_09518c_data,%esi
		mov    $_0ccaf0_data,%edi
		mov    $0x00000c,%ecx
		add    %edx,%esi
		add    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpw   $0x000000,_0ccaf6_data(%edx)
		je     _06a339_jump
		mov    _0ccaf4_data(%edx),%esi
		sar    $0x000010,%esi
		mov    _0c2858_data(,%esi,4),%esi
		mov    %esi,_0ccaf0_data(%edx)

	_06a339_jump:
		movswl %bx,%edx
		imul   $0x00000c,%edx,%edx
		mov    $0x0000dc,%esi
		mov    _0ccaf9_data(%edx),%ah
		mov    %si,_0ccaf6_data(%edx)
		cmp    $_0000ff_case,%ah
		jne    _06a2ef_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a35c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cf42c_data,%cl
		cmpb   $0x000000,_0cf432_data
		je     _06a497_jump
		mov    $0x000001,%eax
		call   _054868_func
		cmpb   $0x000000,_0cf3ef_data
		jne    _06a497_jump
		xor    %eax,%eax
		mov    _0cf427_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0cf42c_data,%cl
		shl    $0x000002,%edx
		jmp    _06a3b8_jump

	_06a3a5_jump:
		mov    _0ccaf6_data(%edx),%bx
		add    $0x00000c,%edx
		dec    %ebx
		inc    %eax
		mov    %bx,_0ccaea_data(%edx)

	_06a3b8_jump:
		xor    %ebx,%ebx
		mov    %cl,%bl
		cmp    %ebx,%eax
		jle    _06a3a5_jump
		lea    0x000000(,%ebx,4),%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    _0cf162_data,%bx
		shl    $0x000002,%edx
		inc    %ebx
		mov    _0ccaf9_data(%edx),%al
		mov    %bx,_0cf162_data
		test   %ax,%ax
		jne    _06a415_jump
		mov    _0ccaf8_data(%edx),%dl
		cmp    $0x000001,%dl
		jb     _06a3fc_jump
		jbe    _06a407_jump
		cmp    $0x000002,%dl
		je     _06a40e_jump
		jmp    _06a432_jump

	_06a3fc_jump:
		test   %dl,%dl
		jne    _06a432_jump
		mov    $0x000024,%esi
		jmp    _06a432_jump

	_06a407_jump:
		mov    $0x000017,%esi
		jmp    _06a432_jump

	_06a40e_jump:
		mov    $0x00000f,%esi
		jmp    _06a432_jump

	_06a415_jump:
		cmp    $_0000ff_case,%ax
		jne    _06a422_jump
		mov    $0x0000a0,%esi
		jmp    _06a432_jump

	_06a422_jump:
		cmp    $0x000064,%ax
		jle    _06a42f_jump
		mov    %eax,%esi
		sub    $0x000055,%esi
		jmp    _06a432_jump

	_06a42f_jump:
		imul   $0x00000f,%eax,%esi

	_06a432_jump:
		cmp    _0cf162_data,%si
		jg     _06a467_jump
		xor    %edx,%edx
		mov    %dx,_0cf162_data
		cmp    $_0000ff_case,%ax
		je     _06a460_jump
		inc    %cl
		xor    %edx,%edx
		mov    %cl,%dl
		mov    $0x00000f,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _06a467_jump

	_06a460_jump:
		movb   $0x000001,_0cf438_data

	_06a467_jump:
		xor    %edx,%edx
		mov    _0cf427_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ccaf4_data(,%eax,4),%eax
		sar    $0x000010,%eax
		mov    %cl,_0cf42c_data
		cmp    $0xfffffffc,%eax
		jge    _06a497_jump
		mov    %dl,%bh
		inc    %bh
		mov    %bh,_0cf427_data

	_06a497_jump:
		mov    _0cf42c_data,%cl
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a4e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   $0x000000
		xor    %ebx,%ebx
		mov    _0ce07c_data,%dx
		mov    _0ce0b8_data,%bl
		mov    $0x000002,%ecx
		add    %edx,%ebx
		mov    $_0c103c_data,%eax
		sub    $0x00003c,%ebx
		mov    $0x0000a0,%edx
		movswl %bx,%ebx
		call   _01a168_func
		push   $0x000000
		xor    %ebx,%ebx
		mov    _0ce07c_data,%cx
		mov    _0ce0b8_data,%bl
		mov    $0x0000a0,%edx
		add    %ecx,%ebx
		mov    $_0c1054_data,%eax
		sub    $0x00001e,%ebx
		mov    $0x000002,%ecx
		movswl %bx,%ebx
		call   _01a168_func
		cmpb   $0x000080,_0ce0af_data
		jbe    _06a551_jump
		movb   $0x000001,_0cf438_data

	_06a551_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a558_func:
		push   %ebx
		push   %edx
		mov    $0x0000c8,%ah
		mov    $0x0000f0,%dl
		mov    $0xffffffb8,%ebx
		mov    %ah,_0ce1e0_data
		mov    %dl,_0ce1e1_data
		mov    %bx,_0ce1b0_data
		mov    $0x000078,%edx
		mov    $0x000001,%bl
		mov    %dx,_0ce1ae_data
		mov    %bl,_0ce1e5_data
		mov    _0ce1f9_data,%dh
		xor    %bh,%bh
		and    $0x0000f7,%dh
		mov    %bh,_0ce1e4_data
		mov    %bh,_0ce1e8_data
		mov    %dh,_0ce1f9_data
		pop    %edx
		pop    %ebx
		ret    

_06a5ac_switch:
		.long   _06a699_case
		.long   _06a6fc_case
		.long   _06a76f_case
		.long   _06a79e_case
		.long   _06a804_case
		.long   _06a871_case




_06a5c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0ce1e5_data,%dl
		mov    _0ce184_data,%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0ce1e4_data,%dl
		mov    0x000005(%ebx,%edx,8),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %dx,_0ce1b8_data
		test   %al,%al
		je     _06a60e_jump
		xor    %edx,%edx
		mov    %al,%dl
		cmpb   $0x000000,_0cf3ed_data(%edx)
		jne    _06a60e_jump
		mov    $_0ce178_data,%eax
		call   _0552b4_func

	_06a60e_jump:
		mov    _0ce1b8_data,%ax
		mov    _0ce1ae_data,%bx
		add    %eax,%ebx
		mov    _0cf438_data,%dl
		mov    %bx,_0ce1ae_data
		cmp    $0x000001,%dl
		jne    _06a680_jump
		mov    $0x000005,%dh
		mov    $0x000002,%ebx
		mov    $_0ce178_data,%eax
		mov    %dh,_0ce1e8_data
		xor    %edx,%edx
		xor    %cl,%cl
		call   _01d444_func
		mov    $0x000002,%bl
		mov    $0x0000a0,%edx
		xor    %eax,%eax
		mov    %cl,_0cf438_data
		mov    _0ce1e0_data,%al
		mov    %bl,_0ce1f7_data
		sub    %eax,%edx
		mov    _0ce1f9_data,%bh
		mov    %edx,%eax
		and    $0x0000f7,%bh
		sub    $0x000010,%eax
		mov    %bh,_0ce1f9_data
		mov    %ax,_0ce1ae_data

	_06a680_jump:
		mov    _0ce1e8_data,%al
		cmp    $0x000005,%al
		ja     _06a8ac_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_06a5ac_switch(,%edx,4)

	_06a699_case:
		xor    %ebx,%ebx
		mov    _0ce1ac_data,%edx
		mov    _0ce1e0_data,%bl
		sar    $0x000010,%edx
		add    %ebx,%edx
		cmp    $0xffffff9c,%edx
		jge    _06a8ac_jump
		inc    %al
		mov    $0x000001,%ebx
		mov    %al,_0ce1e8_data
		mov    %ebx,%edx
		mov    $_0ce178_data,%eax
		call   _01d444_func
		xor    %eax,%eax
		mov    _0ce1e0_data,%al
		mov    _0ce1f9_data,%bl
		neg    %eax
		or     $0x000008,%bl
		sub    $0x00003c,%eax
		mov    %bl,_0ce1f9_data
		mov    %ax,_0ce1ae_data
		mov    $_0ce178_data,%eax
		call   _055b7c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06a6fc_case:
		xor    %edx,%edx
		mov    _0ce1ac_data,%ebx
		mov    _0ce1e0_data,%dl
		sar    $0x000010,%ebx
		add    %ebx,%edx
		cmp    $0x000190,%edx
		jle    _06a8ac_jump
		mov    $0x000002,%ebx
		inc    %al
		mov    $0x000001,%edx
		mov    %al,_0ce1e8_data
		mov    $_0ce178_data,%eax
		call   _01d444_func
		xor    %eax,%eax
		xor    %dl,%dl
		mov    _0ce1e0_data,%al
		mov    %dl,_0ce1e3_data
		neg    %eax
		mov    _0ce1f9_data,%dh
		add    $0x00015e,%eax
		and    $0x0000f7,%dh
		mov    %ax,_0ce1ae_data
		mov    %dh,_0ce1f9_data
		mov    $_0ce178_data,%eax
		call   _055b7c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06a76f_case:
		cmpb   $0x000000,_0ce1e5_data
		jne    _06a8ac_jump
		cmpb   $0x000000,_0ce1e4_data
		jne    _06a8ac_jump
		inc    %al
		mov    %al,_0ce1e8_data
		mov    $_0ce178_data,%eax
		call   _055b7c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06a79e_case:
		mov    $_0ce178_data,%eax
		call   _01cca0_func
		test   %al,%al
		je     _06a8ac_jump
		mov    _0ce1e8_data,%bh
		mov    $0x000001,%edx
		inc    %bh
		mov    $_0ce178_data,%eax
		mov    %bh,_0ce1e8_data
		mov    $0x000003,%ebx
		call   _01d444_func
		mov    $0xffffffc4,%edx
		xor    %eax,%eax
		mov    _0ce1f9_data,%cl
		mov    _0ce1e0_data,%al
		or     $0x000008,%cl
		sub    %eax,%edx
		mov    %cl,_0ce1f9_data
		mov    %dx,_0ce1ae_data
		mov    $_0ce178_data,%eax
		call   _055b7c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06a804_case:
		xor    %edx,%edx
		mov    _0ce1ac_data,%ebx
		mov    _0ce1e0_data,%dl
		sar    $0x000010,%ebx
		add    %ebx,%edx
		cmp    $0x000190,%edx
		jle    _06a8ac_jump
		mov    $0x000001,%ebx
		inc    %al
		xor    %edx,%edx
		mov    %al,_0ce1e8_data
		mov    $_0ce178_data,%eax
		call   _01d444_func
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0ce1e0_data,%al
		sub    %eax,%edx
		mov    _0ce1f9_data,%bl
		mov    %edx,%eax
		and    $0x0000f7,%bl
		sub    $0x000010,%eax
		mov    %bl,_0ce1f9_data
		mov    %ax,_0ce1ae_data
		mov    $_0ce178_data,%eax
		call   _055b7c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06a871_case:
		cmpb   $0x000000,_0ce1e5_data
		jne    _06a8ac_jump
		cmpb   $0x000002,_0ce1e4_data
		jne    _06a8ac_jump
		mov    _0ce1f7_data,%ah
		test   %ah,%ah
		jne    _06a8a2_jump
		movb   $0x000001,_0cf438_data
		mov    $_0ce178_data,%eax
		call   _055b7c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06a8a2_jump:
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0ce1f7_data

	_06a8ac_jump:
		mov    $_0ce178_data,%eax
		call   _055b7c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a8bc_func:
		push   %edx
		xor    %ah,%ah
		mov    _0cf44b_data,%dl
		mov    %ah,_0cf47c_data
		cmp    $0x000001,%dl
		jne    _06a8e4_jump
		mov    _0cf21e_data,%ax
		xor    %dh,%dh
		mov    %ax,_0cf220_data
		mov    %dh,_0cf44b_data

	_06a8e4_jump:
		pop    %edx
		ret    

_06a8e8_switch:
		.long   _06a928_case
		.long   _06a9a8_case
		.long   _06a9c7_case
		.long   _06a9de_case
		.long   _06a9ff_case




_06a8fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf270_data,%bx
		mov    _0cf282_data,%ax
		dec    %eax
		xor    %edx,%edx
		cmp    $0x000004,%ax
		ja     _06aa1e_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_06a8e8_switch(,%eax,4)

	_06a928_case:
		cmp    $0x000010,%bx
		jne    _06a947_jump
		cmpw   $0x000001,_0cf272_data
		je     _06a942_jump
		cmpw   $0x000001,_0cf288_data
		jne    _06a947_jump

	_06a942_jump:
		mov    $_09721c_data,%edx

	_06a947_jump:
		cmp    $0x000007,%bx
		jne    _06a972_jump
		cmpw   $0x000001,_0cf272_data
		je     _06a961_jump
		cmpw   $0x000001,_0cf288_data
		jne    _06a972_jump

	_06a961_jump:
		xor    %al,%al
		mov    $_0971d8_data,%edx
		mov    %al,_0cf430_data
		jmp    _06aa1e_jump

	_06a972_jump:
		cmp    $0x000007,%bx
		jne    _06aa1e_jump
		cmpb   $0x000000,_0cf430_data
		jne    _06aa1e_jump
		mov    _0cf46d_data,%cl
		mov    $_0971c6_data,%edx
		test   %cl,%cl
		jne    _06aa1e_jump
		movb   $0x000001,_0cf430_data
		jmp    _06aa1e_jump

	_06a9a8_case:
		cmp    $0x000010,%bx
		jne    _06aa1e_jump
		cmpw   $0x000001,_0cf288_data
		jne    _06aa1e_jump
		mov    $_0971ea_data,%edx
		jmp    _06aa1e_jump

	_06a9c7_case:
		cmp    $0x00000a,%bx
		jne    _06aa1e_jump
		cmpw   $0x000001,_0cf272_data
		jne    _06aa1e_jump
		mov    $_0971ea_data,%edx
		jmp    _06aa1e_jump

	_06a9de_case:
		cmp    $0x00000b,%bx
		jne    _06aa1e_jump
		cmpw   $0x000001,_0cf272_data
		je     _06a9f8_jump
		cmpw   $0x000001,_0cf288_data
		jne    _06aa1e_jump

	_06a9f8_jump:
		mov    $_0971ac_data,%edx
		jmp    _06aa1e_jump

	_06a9ff_case:
		cmp    $0x00000b,%bx
		jne    _06aa1e_jump
		cmpw   $0x000001,_0cf272_data
		je     _06aa19_jump
		cmpw   $0x000001,_0cf288_data
		jne    _06aa1e_jump

	_06aa19_jump:
		mov    $_097204_data,%edx

	_06aa1e_jump:
		mov    %edx,_0e4888_data
		xor    %ah,%ah
		mov    %bx,_0cf270_data
		mov    %ah,_0cf438_data
		test   %edx,%edx
		je     _06aa40_jump
		cmpb   $0x000000,_0cf46d_data
		je     _06aa49_jump

	_06aa40_jump:
		movb   $0x000001,_0cf438_data
		jmp    _06aa99_jump

	_06aa49_jump:
		mov    $0x000084,%ecx
		mov    $_0ce044_data,%esi
		mov    $_0ce850_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		xor    %ch,%ch
		mov    _0ce0ad_data,%al
		mov    %ch,_0ce0b4_data
		mov    $0x0000a8,%ecx
		sub    %eax,%ecx
		xor    %edi,%edi
		mov    %cx,_0ce07c_data
		mov    $_06aaa8_func,%ecx
		mov    %di,_0ce084_data
		mov    %ecx,_0ccaec_data

	_06aa99_jump:
		mov    _0e4888_data,%edx
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06aaa8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0ce044_data,%edi
		mov    _0ce050_data,%ecx

	_06aab8_jump:
		xor    %ebx,%ebx
		mov    _0ce0b4_data,%bl
		mov    _0e4888_data,%edx
		add    %ebx,%ebx
		add    %edx,%ebx
		mov    (%ebx),%ax
		movzbw _0ce0b4_data,%si
		cmp    $0x000011,%ax
		jb     _06ab0a_jump
		jbe    _06ac8b_jump
		cmp    $0x000013,%ax
		jb     _06acab_jump
		jbe    _06ac41_jump
		cmp    $0x000014,%ax
		jbe    _06aced_jump
		cmp    $0x000015,%ax
		je     _06ac16_jump
		jmp    _06ad23_jump

	_06ab0a_jump:
		cmp    $0x000001,%ax
		jb     _06ab2d_jump
		jbe    _06ab37_jump
		cmp    $0x000008,%ax
		jb     _06ad23_jump
		jbe    _06ab79_jump
		cmp    $0x00000e,%ax
		je     _06ad11_jump
		jmp    _06ad23_jump

	_06ab2d_jump:
		test   %ax,%ax
		je     _06ab57_jump
		jmp    _06ad23_jump

	_06ab37_jump:
		mov    _0ce0c5_data,%bh
		mov    _0ce0b4_data,%al
		or     $0x000008,%bh
		inc    %al
		mov    %bh,_0ce0c5_data
		mov    %al,_0ce0b4_data
		jmp    _06ad23_jump

	_06ab57_jump:
		mov    _0ce0c5_data,%ah
		mov    _0ce0b4_data,%dl
		and    $0x0000f7,%ah
		inc    %dl
		mov    %ah,_0ce0c5_data
		mov    %dl,_0ce0b4_data
		jmp    _06ad23_jump

	_06ab79_jump:
		mov    _0ce0b4_data,%ah
		xor    %ebx,%ebx
		inc    %ah
		mov    %ah,%bl
		mov    %ah,_0ce0b4_data
		mov    (%edx,%ebx,2),%dl
		and    $_0000ff_case,%edx
		mov    %edi,%eax
		call   _01d43c_func
		incb   _0ce0b4_data
		xor    %edx,%edx
		mov    _0e4888_data,%ebx
		mov    _0ce0b4_data,%dl
		mov    (%ebx,%edx,2),%dl
		and    $_0000ff_case,%edx
		mov    %edi,%eax
		call   _01d434_func
		testb  $0x000008,_0ce0c5_data
		je     _06abe7_jump
		xor    %edx,%edx
		mov    _0ce0b1_data,%dl
		shl    $0x000002,%edx
		lea    (%ecx,%edx,1),%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0ce0b0_data,%dl
		movsbw (%ebx,%edx,8),%ax
		jmp    _06ac05_jump

	_06abe7_jump:
		xor    %edx,%edx
		mov    _0ce0b1_data,%dl
		shl    $0x000002,%edx
		lea    (%ecx,%edx,1),%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0ce0b0_data,%dl
		movsbw 0x000001(%ebx,%edx,8),%ax

	_06ac05_jump:
		mov    %ax,_0ce084_data
		incb   _0ce0b4_data
		jmp    _06ad23_jump

	_06ac16_jump:
		mov    _0ce0b4_data,%ah
		xor    %ebx,%ebx
		inc    %ah
		mov    %ah,%bl
		mov    %ah,_0ce0b4_data
		mov    (%edx,%ebx,2),%ax
		mov    %bl,%dl
		inc    %dl
		mov    %ax,_0ce07a_data
		mov    %dl,_0ce0b4_data
		jmp    _06ad23_jump

	_06ac41_jump:
		mov    %edi,%eax
		call   _01cca0_func
		test   %al,%al
		je     _06ad23_jump
		xor    %edx,%edx
		mov    _0ce0b1_data,%dl
		lea    0x000000(,%edx,4),%ebx
		mov    _0ce050_data,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0ce0b0_data,%dl
		mov    _0ce0ae_data,%al
		cmp    0x000002(%ebx,%edx,8),%al
		jne    _06ad23_jump
		incb   _0ce0b4_data
		jmp    _06ad23_jump

	_06ac8b_jump:
		xor    %eax,%eax
		mov    0x000002(%ebx),%dx
		mov    _0ce0af_data,%al
		cmp    %dx,%ax
		jne    _06ad23_jump
		addb   $0x000002,_0ce0b4_data
		jmp    _06ad23_jump

	_06acab_jump:
		mov    _0ce07a_data,%ax
		cmp    0x000002(%ebx),%ax
		jl     _06acc0_jump
		testb  $0x000008,_0ce0c5_data
		jne    _06ace4_jump

	_06acc0_jump:
		xor    %edx,%edx
		mov    _0e4888_data,%ebx
		mov    _0ce0b4_data,%dl
		mov    _0ce07a_data,%ax
		cmp    0x000002(%ebx,%edx,2),%ax
		jg     _06ad23_jump
		testb  $0x000008,_0ce0c5_data
		jne    _06ad23_jump

	_06ace4_jump:
		addb   $0x000002,_0ce0b4_data
		jmp    _06ad23_jump

	_06aced_jump:
		incb   _0ce0b4_data
		xor    %ebx,%ebx
		mov    _0ce0b4_data,%bl
		mov    (%edx,%ebx,2),%ax
		mov    %bl,%bh
		inc    %bh
		mov    %ax,_0ce084_data
		mov    %bh,_0ce0b4_data
		jmp    _06ad23_jump

	_06ad11_jump:
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d43c_func
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d434_func

	_06ad23_jump:
		xor    %eax,%eax
		mov    _0ce0b4_data,%al
		cmp    %ax,%si
		jne    _06aab8_jump
		xor    %eax,%eax
		mov    _0ce0ae_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0ce048_data,%eax
		mov    0x000008(%eax,%edx,4),%ax
		xor    %al,%al
		and    $0x0000c0,%ah
		and    $0x00ffff,%eax
		sar    $0x00000e,%eax
		inc    %eax
		mov    %al,%dl
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		call   _055230_func
		and    $_0000ff_case,%edx
		cmpb   $0x000000,_0cf3ed_data(%edx)
		jne    _06ad80_jump
		add    %ax,_0ce07a_data

	_06ad80_jump:
		cmpb   $0x000000,_0ce0b1_data
		jne    _06ad99_jump
		cmpb   $0x000000,_0ce0b0_data
		jne    _06ad99_jump
		movb   $0x000001,_0cf438_data

	_06ad99_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ada0_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000084,%ecx
		mov    $_0ce850_data,%esi
		xor    %ah,%ah
		mov    $_0ce044_data,%edi
		mov    %ah,_0cf438_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03ca10_func
		call   _03c9c0_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_06adfc_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _07fcb4_func
		cli    
		jmp    _06ae14_jump

	_06ae14_jump:
		mov    $0x004c00,%eax
		int    $0x000021
		jmp    _06ae23_jump

	_06ae23_jump:
		sti    
		cld    
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   



_06ae30_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx

	_06ae37_jump:
		mov    %ebx,%eax
		add    $0x000006,%ecx
		call   _080b55_func
		mov    %dx,_0e488e_data(%ecx)
		inc    %ebx
		mov    %eax,_0e488a_data(%ecx)
		cmp    $0x000100,%ebx
		jl     _06ae37_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		mov    %eax,%eax
		ret    



_06ae60_func:
		call   _06ae30_func
		lea    0x000000(%eax),%eax



_06ae68_func:
		push   %ebx
		push   %ecx
		mov    $_06adfc_func,%ebx
		mov    %cs,%ecx
		xor    %eax,%eax
		call   _080af3_func
		mov    $_06adfc_func,%ebx
		mov    $0x000001,%eax
		mov    %cs,%ecx
		call   _080af3_func
		mov    $_06adfc_func,%ebx
		mov    $0x000002,%eax
		mov    %cs,%ecx
		call   _080af3_func
		mov    $_06adfc_func,%ebx
		mov    $0x000003,%eax
		mov    %cs,%ecx
		call   _080af3_func
		mov    $_06adfc_func,%ebx
		mov    $0x000004,%eax
		mov    %cs,%ecx
		call   _080af3_func
		mov    $_06adfc_func,%ebx
		mov    $0x000005,%eax
		mov    %cs,%ecx
		call   _080af3_func
		pop    %ecx
		pop    %ebx
		ret    



_06aed0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
		xor    %esi,%esi

	_06aed8_jump:
		mov    %edx,%eax
		mov    _0e4894_data(%esi),%cx
		mov    _0e4890_data(%esi),%ebx
		call   _080af3_func
		inc    %edx
		add    $0x000006,%esi
		cmp    $0x000100,%edx
		jl     _06aed8_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06af00_func:
		push   %ebx
		push   %ecx
		mov    $0x000003,%eax
		mov    _0e48a6_data,%cx
		mov    _0e48a2_data,%ebx
		call   _080af3_func
		pop    %ecx
		pop    %ebx
		ret    



_06af1c_func:
		push   %ebx
		push   %ecx
		mov    $0x000001,%eax
		mov    _0e489a_data,%cx
		mov    _0e4896_data,%ebx
		call   _080af3_func
		pop    %ecx
		pop    %ebx
		ret    



_06af40_func:
		push   %ebx
		cmpb   $0x000000,_0cf41b_data
		je     _06af76_jump
		call   _029530_func
		add    $0x000041,%al
		mov    %al,_0cf419_data
		mov    _0cf2ee_data,%al
		cmp    _0cf419_data,%al
		jne    _06af6c_jump
		movb   $0x000001,_0cf41c_data
		pop    %ebx
		ret    

	_06af6c_jump:
		xor    %bl,%bl
		mov    %bl,_0cf41c_data
		pop    %ebx
		ret    

	_06af76_jump:
		movb   $0x000000,_0cf41e_data
		pop    %ebx
		ret    



_06af80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    $0x000014,%eax
		call   _07f158_func
		mov    %eax,%ecx
		movb   $0x000052,(%eax)
		mov    %eax,%edi
		movb   $0x000041,0x000001(%eax)
		cmpb   $0x000000,_0cf41e_data
		jne    _06b02e_jump
		call   _01cc5c_func
		mov    $0x000032,%eax
		call   _07f158_func
		mov    %eax,%esi
		mov    %eax,%ebp
		xor    %eax,%eax
		mov    _0cf419_data,%al
		push   %eax
		push   $_0c1074_data
		lea    0x000008(%esp),%ebx
		movb   $0x000059,0x000002(%ecx)
		push   %esi
		mov    $0x000008,%edx
		movb   $0x00004d,0x000003(%ecx)
		call   _07fceb_func
		add    $0x00000c,%esp
		movb   $0x000041,0x000004(%ecx)
		mov    %esi,%eax
		movb   $0x00004e,0x000005(%ecx)
		call   _08520c_func
		movb   $0x000056,0x000006(%ecx)
		movb   $0x00004f,0x000007(%ecx)
		movb   $0x00002e,0x000008(%ecx)
		movb   $0x00004c,0x000009(%ecx)
		lea    0x00001e(%esp),%eax
		movb   $0x000000,0x00000a(%ecx)
		mov    %ecx,%edx
		movb   $0x000000,0x000006(%ecx)
		call   _07f466_func
		call   _07f4c0_func
		test   %eax,%eax
		je     _06b027_jump
		movb   $0x000000,_0cf41e_data

	_06b027_jump:
		mov    %ebp,%eax
		call   _07f2f0_func

	_06b02e_jump:
		mov    %edi,%eax
		call   _07f2f0_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b040_func:
		push   %ebx
		push   %edx
		call   _029bfc_func
		cmp    $0x000001,%al
		jne    _06b064_jump
		call   _029c38_func
		cmp    $0x000001,%al
		jne    _06b064_jump
		xor    %bl,%bl
		mov    %al,_0cf41b_data
		mov    %bl,_0cf41e_data
		pop    %edx
		pop    %ebx
		ret    

	_06b064_jump:
		xor    %ah,%ah
		mov    $0x000000,%dl
		mov    %ah,_0cf41b_data
		mov    %dl,_0cf41e_data
		pop    %edx
		pop    %ebx
		ret    



_06b078_func:
		push   %ebx
		push   %edx
		sub    $0x000014,%esp
		cmpb   $0x000000,_0cf41b_data
		je     _06b124_jump
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a4d0_func
		test   %al,%al
		je     _06b124_jump
		call   _01cc5c_func
		xor    %eax,%eax
		mov    _0cf419_data,%al
		push   %eax
		push   $_0c107c_data
		lea    0x000008(%esp),%eax
		push   %eax
		xor    %edx,%edx
		call   _07fceb_func
		add    $0x00000c,%esp

	_06b0c2_jump:
		mov    $0x00001a,%eax
		inc    %edx
		call   _06b8d0_func
		add    $0x000061,%al
		mov    %al,0x000001(%esp,%edx,1)
		cmp    $0x000008,%edx
		jl     _06b0c2_jump
		xor    %edx,%edx

	_06b0da_jump:
		mov    $0x00001a,%eax
		inc    %edx
		call   _06b8d0_func
		add    $0x000061,%al
		mov    %al,0x00000a(%esp,%edx,1)
		cmp    $0x000003,%edx
		jl     _06b0da_jump
		mov    $_0c1090_data,%edx
		mov    %esp,%eax
		call   _0810de_func
		test   %eax,%eax
		je     _06b116_jump
		call   _081192_func
		mov    %esp,%eax
		mov    $0x000000,%bh
		call   _07f953_func
		mov    %bh,_0cf41e_data
		jmp    _06b12b_jump

	_06b116_jump:
		xor    %bl,%bl
		mov    %bl,_0cf41e_data
		add    $0x000014,%esp
		pop    %edx
		pop    %ebx
		ret    

	_06b124_jump:
		movb   $0x000000,_0cf41e_data

	_06b12b_jump:
		add    $0x000014,%esp
		pop    %edx
		pop    %ebx
		ret    



_06b134_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cf41b_data
		je     _06b298_jump
		xor    %dl,%dl

	_06b147_jump:
		cmp    _0cf40a_data,%dl
		jne    _06b162_jump
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a458_func
		test   %al,%al
		je     _06b147_jump

	_06b162_jump:
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a710_func
		mov    $0x000001,%al
		nop
		nop
		nop
		test   %al,%al
		jne    _06b2d0_jump
		cmpb   $0x000000,_0cf40a_data
		je     _06b1af_jump
		push   $_0c1094_data
		call   _07f8fc_func
		add    $0x000004,%esp
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a4f4_func
		mov    $0xffffffff,%eax
		call   _07f91f_func
		jmp    _06b1bc_jump

	_06b1af_jump:
		push   $_0c10b4_data
		call   _07f8fc_func
		add    $0x000004,%esp

	_06b1bc_jump:
		call   _029530_func
		mov    $0x000039,%ecx
		mov    $0x000001,%ebx
		and    $_0000ff_case,%eax
		mov    $0xffffffff,%esi
		call   _02a4f4_func
		xor    %dl,%dl

	_06b1dc_jump:
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a558_func
		cmp    _0cf41e_data,%dl
		jne    _06b251_jump

	_06b1f3_jump:
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a458_func
		test   %al,%al
		jne    _06b251_jump
		mov    %ebx,%eax
		call   _041c64_func
		test   %al,%al
		je     _06b238_jump
		mov    _0cf40a_data,%al
		cmp    %al,%dl
		jne    _06b231_jump
		cmp    _0cf41e_data,%al
		jne    _06b231_jump
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a5b0_func

	_06b231_jump:
		mov    %esi,%eax
		call   _07f91f_func

	_06b238_jump:
		mov    %ecx,%eax
		call   _041c64_func
		test   %al,%al
		je     _06b249_jump
		mov    %bl,_0cf41e_data

	_06b249_jump:
		cmp    _0cf41e_data,%dl
		je     _06b1f3_jump

	_06b251_jump:
		cmp    _0cf41e_data,%dl
		jne    _06b266_jump
		call   _06b2e0_func
		test   %al,%al
		je     _06b1dc_jump

	_06b266_jump:
		cmpb   $0x000000,_0cf40a_data
		jne    _06b2d0_jump
		cmpb   $0x000000,_0cf41e_data
		jne    _06b2d0_jump
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a5b0_func
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a520_func
		jmp    _06b2d0_jump

	_06b298_jump:
		push   $_0c114c_data
		call   _07f8fc_func
		add    $0x000004,%esp
		mov    $0x000001,%eax
		call   _041c64_func
		test   %al,%al
		je     _06b2bd_jump
		mov    $0xffffffff,%eax
		call   _07f91f_func

	_06b2bd_jump:
		mov    $0x000039,%eax
		call   _041c64_func
		test   %al,%al
		movb   $0x000000,_0cf41e_data

	_06b2d0_jump:
		cmpb   $0x000000,_0cf41e_data
		sete   %al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b2e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		movb   $0x000001,0x00000c(%esp)
		mov    $0x000064,%eax
		xor    %edx,%edx
		call   _07f158_func
		mov    %eax,%edi
		jmp    _06b303_jump

	_06b303_jump:
		sti    
		mov    $0x00046c,%esi
		mov    (%esi),%ah

	_06b30b_jump:
		mov    (%esi),%al
		cmp    %al,%ah
		je     _06b30b_jump
		jmp    _06b319_jump

	_06b319_jump:
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a4d0_func
		test   %al,%al
		je     _06b496_jump

	_06b330_jump:
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a4d0_func
		test   %al,%al
		je     _06b4a8_jump
		call   _029530_func
		and    $_0000ff_case,%eax
		mov    0x00000c(%esp),%dh
		call   _02a87c_func
		test   %dh,%dh
		je     _06b372_jump
		mov    $0x000001,%eax
		call   _02a4b8_func
		test   %al,%al
		je     _06b372_jump
		xor    %bl,%bl
		mov    %bl,0x00000c(%esp)

	_06b372_jump:
		cmpb   $0x000000,0x00000c(%esp)
		je     _06b3a1_jump
		call   _029530_func
		mov    $0x000002,%edx
		and    $_0000ff_case,%eax
		call   _02a774_func
		mov    $_0c11b8_data,%edx
		call   _07f4c0_func
		test   %eax,%eax
		je     _06b3a1_jump
		xor    %cl,%cl
		mov    %cl,0x00000c(%esp)

	_06b3a1_jump:
		cmpb   $0x000000,0x00000c(%esp)
		je     _06b3d0_jump
		call   _029530_func
		mov    $0x000003,%edx
		and    $_0000ff_case,%eax
		call   _02a774_func
		mov    $_0c11b8_data,%edx
		call   _07f4c0_func
		test   %eax,%eax
		je     _06b3d0_jump
		xor    %al,%al
		mov    %al,0x00000c(%esp)

	_06b3d0_jump:
		cmpb   $0x000000,0x00000c(%esp)
		je     _06b3ff_jump
		call   _029530_func
		mov    $0x000004,%edx
		and    $_0000ff_case,%eax
		call   _02a774_func
		mov    $_0c11b8_data,%edx
		call   _07f4c0_func
		test   %eax,%eax
		je     _06b3ff_jump
		xor    %dl,%dl
		mov    %dl,0x00000c(%esp)

	_06b3ff_jump:
		xor    %eax,%eax
		mov    _0cf419_data,%al
		push   %eax
		push   $_0c11c0_data
		push   %edi
		call   _07fceb_func
		add    $0x00000c,%esp
		cmpb   $0x000000,0x00000c(%esp)
		je     _06b42b_jump
		mov    %edi,%eax
		call   _06b4c0_func
		test   %al,%al
		jne    _06b42b_jump
		mov    %al,0x00000c(%esp)

	_06b42b_jump:
		xor    %eax,%eax
		mov    _0cf419_data,%al
		push   %eax
		push   $_0c11d8_data
		push   %edi
		call   _07fceb_func
		add    $0x00000c,%esp
		cmpb   $0x000000,0x00000c(%esp)
		je     _06b457_jump
		mov    %edi,%eax
		call   _06b4c0_func
		test   %al,%al
		jne    _06b457_jump
		mov    %al,0x00000c(%esp)

	_06b457_jump:
		call   _029530_func
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		lea    0x000004(%esp),%edx
		and    $_0000ff_case,%eax
		call   _02a080_func
		cmpb   $0x000000,0x00000c(%esp)
		je     _06b47e_jump
		cmpb   $0x000001,0x000004(%esp)
		jne    _06b48e_jump

	_06b47e_jump:
		cmpb   $0x000019,0x000008(%esp)
		jne    _06b48e_jump
		cmpl   $0x401e19,(%esp)
		je     _06b4ac_jump

	_06b48e_jump:
		xor    %dl,%dl
		mov    %dl,0x00000c(%esp)
		jmp    _06b4ac_jump

	_06b496_jump:
		inc    %edx
		cmp    $0x0003e8,%edx
		jl     _06b319_jump
		jmp    _06b330_jump

	_06b4a8_jump:
		mov    %al,0x00000c(%esp)

	_06b4ac_jump:
		mov    %edi,%eax
		call   _07f2f0_func
		mov    0x00000c(%esp),%al
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b4c0_func:
		push   %edx
		mov    $_0c11e8_data,%edx
		call   _0810de_func
		test   %eax,%eax
		jne    _06b4d3_jump
		xor    %al,%al
		pop    %edx
		ret    

	_06b4d3_jump:
		call   _081192_func
		mov    $0x000001,%al
		pop    %edx
		ret    



_06b4dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000064,%eax
		call   _07f158_func
		mov    %eax,%ebx
		mov    %eax,%ecx
		call   _01cc5c_func
		xor    %eax,%eax
		push   $_0c11ec_data
		mov    _0cf419_data,%al
		push   %eax
		push   $_0c11f8_data
		push   %ebx
		call   _07fceb_func
		add    $0x000010,%esp
		mov    $_0c11e8_data,%edx
		mov    %ebx,%eax
		call   _0810de_func
		mov    %eax,%edx
		test   %eax,%eax
		jne    _06b543_jump
		mov    $0x000001,%esi
		mov    $0x000001,%dh
		mov    %si,_0cf288_data
		mov    %dh,_0cf46d_data
		mov    %si,_0cf272_data
		mov    %dh,_0cf46b_data
		jmp    _06b57c_jump

	_06b543_jump:
		mov    0x000010(%eax),%eax
		call   _084da9_func
		cmp    $0x2de9aac,%eax
		je     _06b575_jump
		mov    $0x000001,%edx
		mov    $0x000001,%ah
		mov    %dx,_0cf288_data
		mov    %ah,_0cf46d_data
		mov    %dx,_0cf272_data
		mov    %ah,_0cf46b_data
		jmp    _06b57c_jump

	_06b575_jump:
		mov    %edx,%eax
		call   _081192_func

	_06b57c_jump:
		xor    %eax,%eax
		push   $_0c1208_data
		mov    _0cf419_data,%al
		push   %eax
		push   $_0c11f8_data
		push   %ecx
		call   _07fceb_func
		add    $0x000010,%esp
		mov    $_0c11e8_data,%edx
		mov    %ecx,%eax
		call   _0810de_func
		mov    %eax,%edx
		test   %eax,%eax
		jne    _06b5cf_jump
		mov    $0x000001,%ebx
		mov    $0x000001,%ch
		mov    %bx,_0cf288_data
		mov    %ch,_0cf46d_data
		mov    %bx,_0cf272_data
		mov    %ch,_0cf46b_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b5cf_jump:
		mov    0x000010(%eax),%eax
		call   _084da9_func
		cmp    $0x85398a,%eax
		je     _06b602_jump
		mov    $0x000001,%eax
		mov    $0x000001,%bh
		mov    %ax,_0cf288_data
		mov    %bh,_0cf46d_data
		mov    %ax,_0cf272_data
		mov    %bh,_0cf46b_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b602_jump:
		mov    %edx,%eax
		call   _081192_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b610_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %esi,%esi

	_06b616_jump:
		mov    _097260_data(%esi),%ebx
		mov    _097264_data(%esi),%ecx
		mov    _097268_data(%esi),%dl
		jmp    _06b630_jump

	_06b630_jump:
		xor    %eax,%eax
		mov    %dl,%al
		add    $0x00000c,%esi
		xchg   %al,%ah
		jmp    _06b640_jump

	_06b63e_jump:
		nop
		inc    %ebx

	_06b640_jump:
		cmpb   $0x000000,(%ebx)
		jne    _06b63e_jump
		cmpb   $0x000000,0x000001(%ebx)
		jne    _06b63e_jump
		cmpb   $0x000000,0x000002(%ebx)
		jne    _06b63e_jump
		cmpb   $0x0000ed,0x000003(%ebx)
		jne    _06b63e_jump
		cmpb   $0x0000f8,0x000004(%ebx)
		jne    _06b63e_jump
		cmpb   $0x0000b8,0x000005(%ebx)
		jne    _06b63e_jump

	_06b67b_jump:
		mov    0x000001(%ebx),%dl
		mov    (%ebx),%dh
		xor    %dh,%dl
		sub    %dl,%ah
		inc    %ebx
		loop   _06b67b_jump
		cmp    $0x000000,%eax
		je     _06b696_jump
		mov    $0x004c00,%ax
		int    $0x000021

	_06b696_jump:
		jmp    _06b69e_jump

	_06b69e_jump:
		cmp    $0x000090,%esi
		jne    _06b616_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b73c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0cca0c_data,%ebx
		jmp    _06b74e_jump

	_06b74e_jump:
		mov    %edx,%eax
		jmp    _06b754_jump

	_06b752_jump:
		jmp    _06b762_jump

	_06b754_jump:
		cmp    %ebx,%eax
		je     _06b764_jump
		mov    $0x004c00,%ax
		int    $0x000021

	_06b762_jump:
		jmp    _06b752_jump

	_06b764_jump:
		jmp    _06b76c_jump

	_06b76c_jump:
		pop    %edx
		pop    %ebx
		ret    



_06b770_func:
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x057800,%ecx
		mov    _0cca18_data,%edx
		mov    _0cd278_data,%esi
		jmp    _06b78c_jump

	_06b78c_jump:
		mov    %edx,%eax
		shr    $0x000002,%ecx

	_06b791_jump:
		dec    %ecx
		sub    (%esi),%eax
		add    $0x000004,%esi
		cmp    $0x000000,%ecx
		jne    _06b791_jump
		cmp    $0x000000,%eax
		je     _06b7b2_jump
		mov    $0x004c00,%ax
		int    $0x000021

	_06b7ab_jump:
		xor    %eax,%eax
		jmp    _06b7ab_jump

	_06b7b2_jump:
		jmp    _06b7ba_jump

	_06b7ba_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_06b868_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ebx
		mov    %eax,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ebx,%eax
		call   _07f466_func
		add    %ecx,%eax
		mov    $_0c1220_data,%edx
		sub    $0x00000a,%eax
		call   _07f4c0_func
		test   %eax,%eax
		je     _06b8c0_jump
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ebx,%eax
		call   _07f466_func
		add    %ecx,%eax
		mov    $_0c122c_data,%edx
		sub    $0x000006,%eax
		call   _07f4c0_func
		test   %eax,%eax
		jmp    _06b8c0_jump

	_06b8c0_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b8d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0e4e9c_data,%ebx
		inc    %ebx
		cmp    $0x000100,%ebx
		jl     _06b8e4_jump
		xor    %ebx,%ebx

	_06b8e4_jump:
		mov    _0972ee_data(,%ebx,2),%edx
		cwtl   
		sar    $0x000010,%edx
		lea    0x000001(%eax),%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %edx,%eax
		mov    %ebx,_0e4e9c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b908_func:
		push   %edx
		test   %eax,%eax
		je     _06b919_jump
		xor    %eax,%eax
		call   _08528e_func
		call   _080bb1_func

	_06b919_jump:
		xor    %edx,%edx

	_06b91b_jump:
		add    $0x000002,%edx
		call   _080b8d_func
		mov    %ax,_0972ee_data(%edx)
		cmp    $0x000200,%edx
		jne    _06b91b_jump
		xor    %edx,%edx
		mov    %edx,_0e4e9c_data
		pop    %edx
		ret    



_06b940_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cf468_data
		jne    _06b96f_jump
		mov    $_0ce044_data,%eax
		call   _07abbc_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _06b96f_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d444_func
		mov    %ecx,%eax
		call   _01dc5c_func

	_06b96f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b974_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x00000c,_0cf46f_data
		jne    _06b992_jump
		xor    %eax,%eax
		mov    _0ce06c_data,%cx
		mov    _0ce0ac_data,%al
		add    %ecx,%eax
		jmp    _06b9de_jump

	_06b992_jump:
		mov    _0cf472_data,%dh
		cmp    $0x00000c,%dh
		jne    _06b9b8_jump
		xor    %eax,%eax
		mov    _0ce06c_data,%bx
		mov    _0ce0ac_data,%al
		add    %ebx,%eax
		sub    $0x00000f,%eax
		mov    %dh,_0cf46f_data
		jmp    _06b9de_jump

	_06b9b8_jump:
		mov    _0cf473_data,%bl
		cmp    $0x00000c,%bl
		jne    _06b9e0_jump
		xor    %eax,%eax
		mov    _0ce06c_data,%dx
		mov    _0ce0ac_data,%al
		add    %edx,%eax
		add    $0x00000f,%eax
		mov    %bl,_0cf46f_data

	_06b9de_jump:
		and    $0x0000f0,%al

	_06b9e0_jump:
		xor    %edx,%edx
		cwtl   
		mov    _0ce0ac_data,%dl
		add    $0x000008,%eax
		sub    %edx,%eax
		mov    %eax,_0ce06c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b9f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0ce06c_data,%cx
		mov    _0ce0ac_data,%al
		add    %eax,%ecx
		mov    _0ce0b8_data,%al
		add    $0x000016,%al
		mov    _0ce086_data,%ah
		mov    _0cf221_data,%dl
		add    %ah,%al
		test   $0x000002,%dl
		je     _06ba3e_jump
		mov    $0x000050,%ebx
		and    $_0000ff_case,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		mov    $0x000050,%ebx
		sar    %eax
		sub    %eax,%ebx
		mov    %ebx,%eax

	_06ba3e_jump:
		mov    _0ce070_data,%dx
		xor    %ah,%ah
		add    %edx,%eax
		cwtl   
		sar    $0x000004,%eax
		movswl %cx,%ecx
		movswl %ax,%ebx
		mov    %ecx,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e1b4_func
		mov    %al,_0cf46f_data
		cmp    $0x00000c,%al
		je     _06ba93_jump
		lea    -0x000008(%ecx),%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e1b4_func
		mov    %al,_0cf472_data
		lea    0x000008(%ecx),%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e1b4_func
		mov    %al,_0cf473_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ba93_jump:
		mov    $0x00000f,%dh
		mov    %dh,_0cf473_data
		mov    %dh,_0cf472_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06baa8_func:
		push   %ebx
		push   %edx
		push   %esi
		cmpb   $0x000002,_0ce0b1_data
		jne    _06bac2_jump
		mov    _0ce0c3_data,%dl
		test   %dl,%dl
		jne    _06bb82_jump

	_06bac2_jump:
		cmpw   $0x00000a,_0cf296_data
		jle    _06bb8e_jump
		xor    %ebx,%ebx
		mov    _0ce086_data,%dx
		mov    %bx,_0ce086_data
		call   _06b9f8_func
		mov    _0cf46f_data,%bl
		mov    %dx,_0ce086_data
		cmp    $0x00000c,%bl
		je     _06bb09_jump
		cmpb   $0x00000c,_0cf472_data
		je     _06bb09_jump
		cmpb   $0x00000c,_0cf473_data
		jne    _06bb77_jump

	_06bb09_jump:
		testb  $0x000018,_0cf221_data
		jne    _06bb77_jump
		cmpb   $0x000002,_0ce0b1_data
		jne    _06bb2d_jump
		cmpb   $0x000008,_0ce0b0_data
		jne    _06bb2d_jump
		movw   $0x00005a,_0ce09a_data

	_06bb2d_jump:
		call   _06b974_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		xor    %esi,%esi
		mov    $0xffffffff,%edx
		mov    $0x000009,%eax
		mov    %si,_0ce084_data
		mov    %si,_0ce086_data
		mov    %si,_0ce096_data
		mov    %si,_0cf250_data
		call   _071b3c_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06bb77_jump:
		mov    %dx,_0ce086_data
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06bb82_jump:
		je     _06bb8e_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0ce0c3_data

	_06bb8e_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_06bb94_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,%edi
		testb  $0x000002,_0cf221_data
		je     _06bbb2_jump
		movw   $0x000008,0x000010(%esp)
		jmp    _06bbb9_jump

	_06bbb2_jump:
		movw   $0x000004,0x000010(%esp)

	_06bbb9_jump:
		mov    _0ce952_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0xffffffff,%ecx
		add    %edx,%eax
		mov    _0cc7a0_data,%esi
		shl    $0x000002,%eax
		mov    %cx,_0ce08e_data
		add    %eax,%esi
		mov    _0cea1c_data,%ax
		xor    %ecx,%ecx
		test   %ax,%ax
		jle    _06c397_jump

	_06bbf1_jump:
		testb  $0x000020,0x000081(%esi)
		je     _06c36b_jump
		cmp    0x000034(%esi),%di
		je     _06c36b_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000020,_092535_data(,%eax,4)
		je     _06bc27_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		call   _055230_func
		mov    %eax,%ebx
		jmp    _06bc2b_jump

	_06bc27_jump:
		mov    0x000042(%esi),%bx

	_06bc2b_jump:
		mov    _0ce086_data,%dx
		mov    0x00004c(%esi),%ax
		sub    %edx,%eax
		add    %eax,%ebx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _06bc43_jump
		neg    %eax

	_06bc43_jump:
		mov    %eax,%ebx
		mov    0x00000e(%esp),%eax
		add    $0x000002,%ebx
		sar    $0x000010,%eax
		movswl %bx,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jge    _06bc5c_jump
		mov    %ebx,%eax

	_06bc5c_jump:
		mov    %eax,%ebx
		mov    0x000060(%esi),%ax
		cmp    $0x00006d,%ax
		je     _06bc74_jump
		cmp    $0x0000f1,%ax
		je     _06bc74_jump
		cmp    $0x0000b3,%ax
		jne    _06bc77_jump

	_06bc74_jump:
		add    $0x000008,%ebx

	_06bc77_jump:
		mov    0x000052(%esi),%eax
		sar    $0x000010,%eax
		movswl %bx,%edx
		test   %eax,%eax
		jge    _06bc86_jump
		neg    %eax

	_06bc86_jump:
		cmp    %edx,%eax
		jge    _06c36b_jump
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _024cd0_func
		and    $_0000ff_case,%eax
		testb  $0x000010,_0924f4_data(%eax)
		jne    _06c36b_jump
		movswl %cx,%eax
		mov    _0ce954_data(,%eax,2),%ax
		mov    _0cd2c8_data,%edx
		mov    %ax,_0ce08e_data
		cmp    $0xfffffffe,%edx
		jne    _06bce6_jump
		mov    _0cd2c4_data,%eax
		mov    %eax,%edx
		mov    $0x000002,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     _06bce6_jump
		incl   _0cd2c4_data

	_06bce6_jump:
		mov    $0xffffffff,%edx
		mov    $0x000001,%bh
		mov    _0ce0b1_data,%cl
		mov    %dx,_0ce094_data
		mov    %bh,_0cf46a_data
		cmp    $0x000002,%cl
		jne    _06be5b_jump
		mov    0x000060(%esi),%ax
		cmp    $0x000054,%ax
		jb     _06bd7c_jump
		jbe    _06be5b_jump
		cmp    $0x0000a0,%ax
		jb     _06bd59_jump
		jbe    _06bdcc_jump
		cmp    $0x0000ed,%ax
		jb     _06bd40_jump
		jbe    _06be34_jump
		cmp    $0x0000f3,%ax
		je     _06be40_jump
		jmp    _06be4c_jump

	_06bd40_jump:
		cmp    $0x0000b2,%ax
		jb     _06be4c_jump
		cmp    $0x0000b3,%ax
		jbe    _06be5b_jump
		jmp    _06be4c_jump

	_06bd59_jump:
		cmp    $0x000056,%ax
		jb     _06be4c_jump
		cmp    $0x000058,%ax
		jbe    _06be5b_jump
		cmp    $0x00009f,%ax
		je     _06be5b_jump
		jmp    _06be4c_jump

	_06bd7c_jump:
		cmp    $0x000016,%ax
		jb     _06bdab_jump
		jbe    _06be1e_jump
		cmp    $0x00001a,%ax
		jb     _06be4c_jump
		cmp    $0x00001c,%ax
		jbe    _06be1e_jump
		cmp    $0x00003f,%ax
		je     _06be1e_jump
		jmp    _06be4c_jump

	_06bdab_jump:
		cmp    $0x000001,%ax
		jb     _06be4c_jump
		jbe    _06bddc_jump
		cmp    $0x000010,%ax
		jb     _06be4c_jump
		cmp    $0x000011,%ax
		jbe    _06bdff_jump
		jmp    _06be4c_jump

	_06bdcc_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00006e,%eax
		sar    $0x000010,%edx
		jmp    _06be56_jump

	_06bddc_jump:
		mov    _0cf282_data,%dx
		cmp    $0x000001,%dx
		je     _06be4c_jump
		cmp    $0x000004,%dx
		je     _06be4c_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _06be56_jump

	_06bdff_jump:
		mov    _0cf282_data,%cx
		cmp    $0x000004,%cx
		je     _06be4c_jump
		cmp    $0x000005,%cx
		je     _06be4c_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _06be56_jump

	_06be1e_jump:
		cmpw   $0x000004,_0cf282_data
		je     _06be4c_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _06be56_jump

	_06be34_jump:
		mov    $0xffffffff,%edx
		mov    $0x0000f8,%eax
		jmp    _06be56_jump

	_06be40_jump:
		mov    $0xffffffff,%edx
		mov    $0x000034,%eax
		jmp    _06be56_jump

	_06be4c_jump:
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax

	_06be56_jump:
		call   _071b3c_func

	_06be5b_jump:
		mov    0x000060(%esi),%ax
		cmp    $0x000057,%ax
		jb     _06bef9_jump
		jbe    _06bfed_jump
		cmp    $0x00009a,%ax
		jb     _06bebf_jump
		jbe    _06c0c9_jump
		cmp    $0x0000a7,%ax
		jb     _06bea6_jump
		jbe    _06bf7c_jump
		cmp    $0x0000a9,%ax
		jb     _06c223_jump
		jbe    _06c082_jump
		cmp    $0x0000cf,%ax
		je     _06c17a_jump
		jmp    _06c223_jump

	_06bea6_jump:
		cmp    $0x00009b,%ax
		jbe    _06c0f0_jump
		cmp    $0x0000a2,%ax
		je     _06c161_jump
		jmp    _06c223_jump

	_06bebf_jump:
		cmp    $0x000083,%ax
		jb     _06beea_jump
		jbe    _06bfa3_jump
		cmp    $0x000086,%ax
		jb     _06c223_jump
		jbe    _06bf7c_jump
		cmp    $0x00008a,%ax
		je     _06c0a2_jump
		jmp    _06c223_jump

	_06beea_jump:
		cmp    $0x000058,%ax
		je     _06c058_jump
		jmp    _06c223_jump

	_06bef9_jump:
		cmp    $0x00003f,%ax
		jb     _06bf3b_jump
		jbe    _06c13e_jump
		cmp    $0x000044,%ax
		jb     _06bf2c_jump
		jbe    _06c206_jump
		cmp    $0x000051,%ax
		jb     _06c223_jump
		jbe    _06bf71_jump
		cmp    $0x000056,%ax
		je     _06bfc0_jump
		jmp    _06c223_jump

	_06bf2c_jump:
		cmp    $0x000043,%ax
		je     _06c1ec_jump
		jmp    _06c223_jump

	_06bf3b_jump:
		cmp    $0x000010,%ax
		jb     _06bf66_jump
		cmp    $0x000011,%ax
		jbe    _06bfad_jump
		cmp    $0x00001b,%ax
		jb     _06c223_jump
		jbe    _06c206_jump
		cmp    $0x000031,%ax
		je     _06c117_jump
		jmp    _06c223_jump

	_06bf66_jump:
		cmp    $0x000008,%ax
		je     _06bf7c_jump
		jmp    _06c223_jump

	_06bf71_jump:
		movw   $0x000000,0x000052(%esi)
		jmp    _06c223_jump

	_06bf7c_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c223_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _06c223_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		jmp    _06c223_jump

	_06bfa3_jump:
		cmpb   $0x000003,0x00006c(%esi)
		jne    _06c223_jump

	_06bfad_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		jmp    _06c223_jump

	_06bfc0_jump:
		cmpb   $0x000004,0x00006c(%esi)
		jne    _06c223_jump
		cmpb   $0x000000,0x000076(%esi)
		jne    _06bfe1_jump
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _01d434_func
		jmp    _06c223_jump

	_06bfe1_jump:
		mov    %esi,%eax
		call   _07acb0_func
		jmp    _06c223_jump

	_06bfed_jump:
		mov    0x00006d(%esi),%cl
		movb   $0x000010,0x00007d(%esi)
		test   %cl,%cl
		jne    _06c021_jump
		cmpb   $0x000007,0x00006c(%esi)
		jne    _06c021_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		mov    0x000032(%esi),%edx
		mov    $0x00006e,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		jmp    _06c223_jump

	_06c021_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c223_jump
		cmpb   $0x000009,0x00006c(%esi)
		jne    _06c223_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d444_func
		mov    0x000032(%esi),%edx
		mov    $0x000070,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		jmp    _06c223_jump

	_06c058_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		movb   $0x000010,0x00007d(%esi)
		call   _01d444_func
		mov    0x000032(%esi),%edx
		mov    $0x00006f,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		jmp    _06c223_jump

	_06c082_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c223_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _06c223_jump
		mov    %esi,%eax
		call   _07b840_func
		jmp    _06c223_jump

	_06c0a2_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c223_jump
		cmpb   $0x00000a,0x00006c(%esi)
		jne    _06c223_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		jmp    _06c223_jump

	_06c0c9_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c223_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _06c223_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		jmp    _06c223_jump

	_06c0f0_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c223_jump
		cmpb   $0x00000f,0x00006c(%esi)
		jne    _06c223_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _060460_func
		jmp    _06c223_jump

	_06c117_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c223_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _06c223_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		jmp    _06c223_jump

	_06c13e_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c14e_jump
		cmpb   $0x00000a,0x00006c(%esi)
		je     _06c223_jump

	_06c14e_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _060460_func
		jmp    _06c223_jump

	_06c161_jump:
		testb  $0x000004,_0cf229_data
		je     _06c223_jump
		mov    %esi,%eax
		call   _07e550_func
		jmp    _06c223_jump

	_06c17a_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c18a_jump
		cmpb   $0x000001,0x00006c(%esi)
		je     _06c223_jump

	_06c18a_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0xffffffff,%ecx
		call   _01d444_func
		mov    0x000081(%esi),%ah
		mov    $0x000001,%dl
		and    $0x0000df,%ah
		mov    $0x000002,%ebx
		mov    %ah,0x000081(%esi)
		mov    $0x000001,%eax
		mov    %dl,_0cf44b_data
		mov    %ax,_0ce084_data
		mov    _0cf220_data,%ax
		xor    %edx,%edx
		mov    %ax,_0cf21e_data
		mov    $_0cf220_data,%eax
		mov    %cx,_0ce08e_data
		call   _07fcc0_func
		orb    $0x000001,_0cf220_data
		jmp    _06c223_jump

	_06c1ec_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c223_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _06c223_jump
		mov    $0x000009,%edx
		mov    %esi,%eax
		call   _01d434_func
		jmp    _06c223_jump

	_06c206_jump:
		cmpw   $0x000001,_0ce086_data
		jle    _06c21a_jump
		mov    _0ce084_data,%eax
		sar    $0x000010,%eax
		jmp    _06c21f_jump

	_06c21a_jump:
		mov    $0x000002,%eax

	_06c21f_jump:
		mov    %ax,0x00004a(%esi)

	_06c223_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _06c2b3_jump
		mov    _0ce050_data,%eax
		mov    0x000004(%eax),%eax
		mov    $0x000004,%cl
		movsbw 0x000018(%eax),%ax
		test   %ax,%ax
		js     _06c249_jump
		sar    %cl,%ax
		jmp    _06c252_jump

	_06c249_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06c252_jump:
		movswl %ax,%edx
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06c263_jump
		neg    %eax

	_06c263_jump:
		cmp    %edx,%eax
		jl     _06c288_jump
		mov    _0cf221_data,%al
		and    $0x000001,%al
		cmp    $0x000001,%al
		jne    _06c288_jump
		mov    $0x000003,%ebx
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		jmp    _06c2b3_jump

	_06c288_jump:
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		call   _01d43c_func
		mov    $0x000008,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func
		cmpw   $0x0000c8,_0ce096_data
		jle    _06c2b3_jump
		call   _06b940_func

	_06c2b3_jump:
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d7e0_func
		mov    0x00000c(%esp),%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    _0ce0ad_data,%dl
		add    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0ce070_data,%ax
		sub    %eax,%edx
		mov    0x000060(%esi),%ax
		mov    %dx,_0ce086_data
		cmp    $0x0000fe,%ax
		jne    _06c352_jump
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		xor    %ebx,%ebx
		mov    _0ce06c_data,%ecx
		mov    _0ce0ac_data,%bl
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %ecx,%ebx
		add    %edx,%eax
		sub    %eax,%ebx
		mov    %ebx,(%esp)
		movsbw 0x000076(%esi),%ax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _06c33a_jump
		sar    %cl,%ax
		jmp    _06c343_jump

	_06c33a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06c343_jump:
		sub    %ax,_0ce086_data
		xor    %bh,%bh
		mov    %bh,_0cf46a_data

	_06c352_jump:
		mov    $0xffffffff,%ecx
		movb   $0x000000,0x000000(%ebp)
		mov    %cx,_0ce096_data
		mov    %cx,_0cf2aa_data
		jmp    _06c397_jump

	_06c36b_jump:
		inc    %ecx
		movswl %cx,%eax
		mov    _0ce952_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%esi
		mov    _0cea1c_data,%dx
		add    %eax,%esi
		cmp    %dx,%cx
		jl     _06bbf1_jump

	_06c397_jump:
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     _06c3b5_jump
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06c3b5_jump
		mov    %di,_0ce08e_data
		jmp    _06c3d7_jump

	_06c3b5_jump:
		mov    _0ce08c_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _06c3d7_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		movw   $0x000000,0x000054(%edx,%eax,4)

	_06c3d7_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06c3e0_func:
		push   %esi
		push   %edi
		and    $_0000ff_case,%eax
		lea    0x000000(,%eax,4),%esi
		mov    _0ce050_data,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    %dl,%al
		shl    $0x000003,%eax
		mov    (%esi),%edx
		add    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _06c409_jump
		neg    %eax

	_06c409_jump:
		sar    $0x000004,%eax
		mov    $0x000070,%ebx
		movsbl %al,%eax
		lea    0x000001(%edx),%esi
		cmp    %ebx,%eax
		jle    _06c41d_jump
		mov    %ebx,%eax

	_06c41d_jump:
		mov    %al,%bl
		mov    _0ce084_data,%di
		neg    %bl
		test   %di,%di
		jle    _06c442_jump
		movsbl %al,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		movb   $0x0000f0,(%esi)
		cmp    %ebx,%eax
		jge    _06c43d_jump
		mov    %ebx,%eax

	_06c43d_jump:
		mov    %al,(%edx)
		pop    %edi
		pop    %esi
		ret    

	_06c442_jump:
		jge    _06c45b_jump
		xor    %eax,%eax
		mov    %cl,%al
		movsbl %bl,%ebx
		neg    %eax
		cmp    %ebx,%eax
		jle    _06c453_jump
		mov    %ebx,%eax

	_06c453_jump:
		mov    %al,(%esi)
		movb   $0x000010,(%edx)
		pop    %edi
		pop    %esi
		ret    

	_06c45b_jump:
		mov    %cl,%ah
		mov    %cl,(%esi)
		neg    %ah
		mov    %ah,(%esi)
		mov    %cl,(%edx)
		pop    %edi
		pop    %esi
		ret    



_06c468_func:
		push   %ebx
		push   %ecx
		push   %edx
		test   %al,%al
		je     _06c530_jump
		mov    $0x000030,%ecx
		mov    $0x000011,%edx
		mov    _0cf24e_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06c3e0_func
		mov    $0x000030,%ecx
		mov    $0x000012,%edx
		mov    _0cf24e_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06c3e0_func
		mov    $0x000030,%ecx
		mov    $0x000013,%edx
		mov    _0cf24e_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06c3e0_func
		mov    $0x000030,%ecx
		mov    $0x000003,%edx
		mov    _0cf24e_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06c3e0_func
		mov    $0x000030,%ecx
		mov    $0x000005,%edx
		mov    _0cf24e_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06c3e0_func
		mov    $0x000030,%ecx
		mov    $0x000004,%edx
		mov    _0cf24e_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06c3e0_func
		mov    $0x000030,%ecx
		mov    $0x000020,%edx
		jmp    _06c639_jump

	_06c530_jump:
		mov    $0x000020,%ecx
		mov    $0x000002,%eax
		mov    _0cf24e_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		call   _06c3e0_func
		mov    $0x000020,%ecx
		mov    $0x000001,%edx
		mov    _0cf24e_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06c3e0_func
		mov    $0x000020,%ecx
		mov    _0cf24e_data,%ebx
		mov    $0x000002,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		call   _06c3e0_func
		mov    $0x000020,%ecx
		mov    $0x000018,%edx
		mov    _0cf24e_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06c3e0_func
		mov    $0x000020,%ecx
		mov    $0x00000b,%edx
		mov    _0cf24e_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06c3e0_func
		mov    $0x000020,%ecx
		mov    $0x00000c,%edx
		mov    _0cf24e_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06c3e0_func
		mov    $0x000020,%ecx
		mov    $0x00000d,%edx
		mov    _0cf24e_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06c3e0_func
		mov    $0x000020,%ecx
		mov    $0x000003,%edx
		mov    _0cf24e_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06c3e0_func
		mov    $0x000020,%ecx
		mov    $0x000005,%edx
		mov    _0cf24e_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06c3e0_func
		mov    $0x000020,%ecx
		mov    $0x000004,%edx

	_06c639_jump:
		mov    _0cf24e_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06c3e0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c650_func:
		push   %edx
		mov    _0cf276_data,%dx
		test   %dx,%dx
		je     _06c668_jump
		movw   $0x000001,_0ce08c_data
		pop    %edx
		ret    

	_06c668_jump:
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06c6a4_jump
		mov    _0cf46a_data,%al
		test   %al,%al
		jbe    _06c684_jump
		cmp    $0x000001,%al
		jne    _06c6ab_jump
		jmp    _06c6a4_jump

	_06c684_jump:
		mov    _0cf24e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06c692_jump
		neg    %eax

	_06c692_jump:
		cmp    $0x000100,%eax
		jle    _06c6a4_jump
		movw   $0x000001,_0ce08c_data
		pop    %edx
		ret    

	_06c6a4_jump:
		mov    %dx,_0ce08c_data

	_06c6ab_jump:
		pop    %edx
		ret    



_06c6b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0ce0b0_data,%dl
		testb  $0x000001,0x000007(%eax,%edx,8)
		je     _06c96f_jump
		xor    %edx,%edx
		mov    _0cf470_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _06c96f_jump
		mov    _0ce0b1_data,%bh
		cmp    $0x000007,%bh
		jne    _06c728_jump
		mov    _0ce084_data,%ax
		mov    %bh,%cl
		cwtl   
		shl    %cl,%eax
		mov    _0ce086_data,%cx
		sub    $0x000002,%ecx
		mov    %ax,_0cf250_data
		mov    %cx,_0ce086_data
		jmp    _06c741_jump

	_06c728_jump:
		cmp    $0x000004,%bh
		jne    _06c738_jump
		movw   $0x00fffd,_0ce086_data
		jmp    _06c741_jump

	_06c738_jump:
		movw   $0x00fffb,_0ce086_data

	_06c741_jump:
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		mov    _0ce086_data,%cx
		cmp    $0xffffffff,%eax
		je     _06c779_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		mov    0x00004a(%edx,%eax,4),%ebx
		sar    $0x000010,%ebx
		movswl %cx,%eax
		cmp    %ebx,%eax
		jle    _06c772_jump
		mov    %ebx,%eax

	_06c772_jump:
		mov    %eax,%ecx
		jmp    _06c82f_jump

	_06c779_jump:
		mov    _0ce0a6_data,%al
		cmp    $0x00000c,%al
		jb     _06c7ad_jump
		jbe    _06c82f_jump
		cmp    $0x000014,%al
		jb     _06c7a1_jump
		cmp    $0x000015,%al
		jbe    _06c7ef_jump
		cmp    $0x000018,%al
		jb     _06c802_jump
		jmp    _06c82f_jump

	_06c7a1_jump:
		cmp    $0x000012,%al
		jb     _06c82f_jump
		jbe    _06c7c8_jump
		jmp    _06c7d9_jump

	_06c7ad_jump:
		cmp    $0x000004,%al
		jb     _06c7be_jump
		cmp    $0x000005,%al
		jbe    _06c7ef_jump
		cmp    $0x000008,%al
		jb     _06c802_jump
		jmp    _06c82f_jump

	_06c7be_jump:
		cmp    $0x000002,%al
		jb     _06c82f_jump
		ja     _06c7d9_jump

	_06c7c8_jump:
		mov    _0ce084_data,%di
		cmp    $0x000005,%di
		jle    _06c82f_jump
		mov    %edi,%ecx
		jmp    _06c82c_jump

	_06c7d9_jump:
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffb,%eax
		jge    _06c82f_jump
		mov    _0ce084_data,%cx
		jmp    _06c82e_jump

	_06c7ef_jump:
		mov    _0ce084_data,%si
		cmp    $0x00000a,%si
		jle    _06c82f_jump
		mov    $0x000001,%cl
		mov    %esi,%eax
		jmp    _06c817_jump

	_06c802_jump:
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff6,%eax
		jge    _06c82f_jump
		mov    $0x000001,%cl
		mov    _0ce084_data,%ax

	_06c817_jump:
		test   %ax,%ax
		js     _06c821_jump
		sar    %cl,%ax
		jmp    _06c82a_jump

	_06c821_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06c82a_jump:
		mov    %eax,%ecx

	_06c82c_jump:
		neg    %ecx

	_06c82e_jump:
		dec    %ecx

	_06c82f_jump:
		mov    %cx,_0ce086_data
		call   _06c650_func
		testb  $0x000002,_0cf221_data
		je     _06c84b_jump
		mov    $0x000100,%edx
		jmp    _06c850_jump

	_06c84b_jump:
		mov    $0x000200,%edx

	_06c850_jump:
		cmpb   $0x000000,_0cf44b_data
		je     _06c894_jump
		xor    %eax,%eax
		call   _06c468_func
		cmpb   $0x000000,_0ce0b1_data
		jne    _06c883_jump
		cmpb   $0x000028,_0ce0b0_data
		jne    _06c883_jump
		mov    $0x000019,%ebx
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		jmp    _06c8d6_jump

	_06c883_jump:
		mov    $0x00001b,%ebx
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		jmp    _06c8d6_jump

	_06c894_jump:
		mov    _0cf24e_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		test   %eax,%eax
		jge    _06c8a5_jump
		neg    %eax

	_06c8a5_jump:
		cmp    %edx,%eax
		setg   %al
		mov    %al,%dl
		xor    %eax,%eax
		mov    %dl,%al
		call   _06c468_func
		test   %dl,%dl
		je     _06c8ca_jump
		mov    $0x000011,%ebx
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		jmp    _06c8d6_jump

	_06c8ca_jump:
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx

	_06c8d6_jump:
		call   _01d444_func
		mov    $0xffffffff,%ebx
		mov    $0xffffffff,%ecx
		xor    %eax,%eax
		xor    %dh,%dh
		mov    %ax,_0cf16a_data
		mov    %dh,_0cf47b_data
		mov    %bx,_0cf2aa_data
		mov    %cx,_0ce08e_data
		mov    _0ce06c_data,%ax
		xor    %dl,%dl
		xor    %bl,%bl
		xor    %cl,%cl
		mov    %dx,_0cf296_data
		mov    %bl,_0ce0b5_data
		mov    %cl,_0cf470_data
		mov    %ax,_0cf290_data
		mov    _0ce070_data,%ax
		xor    %bh,%bh
		xor    %ch,%ch
		mov    %bh,_0ce0b6_data
		mov    %ax,_0cf28e_data
		mov    _0cf221_data,%al
		mov    %ch,_0ce174_data
		test   $0x000002,%al
		je     _06c96f_jump
		mov    $0x000001,%cl
		mov    _0ce086_data,%ax
		test   %ax,%ax
		js     _06c95f_jump
		sar    %cl,%ax
		jmp    _06c968_jump

	_06c95f_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06c968_jump:
		dec    %eax
		mov    %ax,_0ce086_data

	_06c96f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06c978_switch:
		.long   _06ca38_case
		.long   _06ca38_case
		.long   _06ca42_case
		.long   _06ca38_case
		.long   _06ca4a_case
		.long   _06ca38_case




_06c990_func:
		push   %esi
		push   %edi
		sub    $0x000018,%esp
		mov    %al,0x000014(%esp)
		mov    %ebx,%edi
		mov    %ecx,%esi
		test   %al,%al
		jne    _06c9af_jump
		mov    %bx,_0cf250_data
		xor    %ebx,%ebx
		jmp    _06cb42_jump

	_06c9af_jump:
		xor    %eax,%eax
		movswl %bx,%ebx
		mov    0x000014(%esp),%al
		imul   %ebx,%eax
		mov    $0x000008,%cl
		test   %eax,%eax
		je     _06c9c5_jump
		sar    %cl,%eax
		jmp    _06c9cb_jump

	_06c9c5_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_06c9cb_jump:
		mov    %eax,0x000008(%esp)
		xor    %eax,%eax
		mov    $0x000003,%cl
		mov    0x000014(%esp),%al
		test   %ax,%ax
		js     _06c9e1_jump
		sar    %cl,%ax
		jmp    _06c9ea_jump

	_06c9e1_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06c9ea_jump:
		test   %ax,%ax
		je     _06c9f4_jump
		movswl %ax,%ebx
		jmp    _06c9f9_jump

	_06c9f4_jump:
		mov    $0x000001,%ebx

	_06c9f9_jump:
		mov    $0x000002,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    $0x000003,%cl
		mov    %eax,0x000004(%esp)
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    0x000008(%esp),%ecx
		add    (%esp),%ecx
		add    %eax,%ecx
		mov    _0cf282_data,%ax
		dec    %eax
		mov    %ecx,0x000010(%esp)
		cmp    $0x000005,%ax
		ja     _06ca4a_case
		and    $0x00ffff,%eax
		jmp    *%cs:_06c978_switch(,%eax,4)

	_06ca38_case:
		movl   $0x000006,0x00000c(%esp)
		jmp    _06ca4a_case

	_06ca42_case:
		movl   $0x000003,0x00000c(%esp)

	_06ca4a_case:
		mov    0x000010(%esp),%ecx
		test   %cx,%cx
		jle    _06ca9e_jump
		cmpw   $0x000000,0x000004(%esp)
		jle    _06ca72_jump
		mov    0x00000c(%esp),%eax
		mov    $0x000008,%cl
		add    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		jmp    _06ca74_jump

	_06ca72_jump:
		xor    %eax,%eax

	_06ca74_jump:
		cmpw   $0x000000,0x000008(%esp)
		jle    _06ca81_jump
		movswl %di,%edx
		jmp    _06ca83_jump

	_06ca81_jump:
		xor    %edx,%edx

	_06ca83_jump:
		mov    $0x000008,%cl
		add    %eax,%edx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    _0cf250_data,%cx
		add    %edx,%eax
		cmp    %cx,%ax
		jge    _06caf1_jump
		mov    %ecx,%eax
		jmp    _06caf1_jump

	_06ca9e_jump:
		jge    _06caeb_jump
		cmpw   $0x000000,0x000004(%esp)
		jge    _06cabf_jump
		sub    0x00000c(%esp),%edx
		mov    $0x000008,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		jmp    _06cac1_jump

	_06cabf_jump:
		xor    %eax,%eax

	_06cac1_jump:
		cmpw   $0x000000,0x000008(%esp)
		jge    _06cace_jump
		movswl %di,%edx
		jmp    _06cad0_jump

	_06cace_jump:
		xor    %edx,%edx

	_06cad0_jump:
		mov    $0x000008,%cl
		add    %eax,%edx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    _0cf250_data,%cx
		add    %edx,%eax
		cmp    %cx,%ax
		jle    _06caf1_jump
		mov    %ecx,%eax
		jmp    _06caf1_jump

	_06caeb_jump:
		mov    _0cf250_data,%ax

	_06caf1_jump:
		mov    0x000010(%esp),%esi
		test   %si,%si
		je     _06cb42_jump
		mov    _0cf250_data,%dx
		add    %esi,%edx
		test   %ax,%ax
		jle    _06cb23_jump
		cmp    _0cf250_data,%ax
		jle    _06cb18_jump
		mov    %dx,_0cf250_data

	_06cb18_jump:
		cmp    _0cf250_data,%ax
		jge    _06cb42_jump
		jmp    _06cb3c_jump

	_06cb23_jump:
		cmp    _0cf250_data,%ax
		jge    _06cb33_jump
		mov    %dx,_0cf250_data

	_06cb33_jump:
		cmp    _0cf250_data,%ax
		jle    _06cb42_jump

	_06cb3c_jump:
		mov    %ax,_0cf250_data

	_06cb42_jump:
		mov    _0cf250_data,%cx
		test   %cx,%cx
		je     _06cbad_jump
		mov    %ecx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _06cb5c_jump
		sar    %cl,%ax
		jmp    _06cb65_jump

	_06cb5c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06cb65_jump:
		cwtl   
		xor    %edx,%edx
		call   _055230_func
		mov    %ax,_0ce084_data
		mov    $_0ce044_data,%eax
		call   _024f68_func
		and    $_0000ff_case,%eax
		testb  $0x000010,_0924f4_data(%eax)
		je     _06cbb4_jump
		cmpb   $0x000002,_0ce0b1_data
		je     _06cbb4_jump
		xor    %edi,%edi
		mov    %di,_0ce084_data
		mov    %di,_0cf250_data
		mov    %di,_0ce08c_data
		jmp    _06cbb4_jump

	_06cbad_jump:
		mov    %cx,_0ce084_data

	_06cbb4_jump:
		mov    _0ce0b1_data,%cl
		test   %cl,%cl
		je     _06cbc8_jump
		cmp    $0x000001,%cl
		je     _06cbc8_jump
		cmp    $0x000003,%cl
		jne    _06cbdf_jump

	_06cbc8_jump:
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06cbdf_jump
		mov    $_0ce044_data,%eax
		call   _025590_func

	_06cbdf_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _06cbf4_jump
		cmpb   $0x00000f,_0ce0b0_data
		jne    _06cbf4_jump
		add    $0x000002,%ebx

	_06cbf4_jump:
		mov    _0cf250_data,%cx
		cmp    %cx,%bx
		jg     _06cc0c_jump
		mov    %ecx,%eax
		sub    %ebx,%eax
		mov    %ax,_0cf250_data
		jmp    _06cc38_jump

	_06cc0c_jump:
		movswl %bx,%eax
		mov    _0cf24e_data,%edx
		neg    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _06cc2f_jump
		mov    %ecx,%edi
		add    %ebx,%edi
		mov    %di,_0cf250_data
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		ret    

	_06cc2f_jump:
		xor    %esi,%esi
		mov    %si,_0cf250_data

	_06cc38_jump:
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		ret    

_06cc40_switch:
		.long   _06cfd1_case
		.long   _06cfda_case
		.long   _06cf9b_case
		.long   _06cf9b_case
		.long   _06cfa7_case
		.long   _06cfa7_case




_06cc58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cf282_data,%ax
		xor    %esi,%esi
		cmp    $0x000003,%ax
		jne    _06cc72_jump
		mov    $0x000020,%bh
		jmp    _06cc74_jump

	_06cc72_jump:
		mov    $0x000010,%bh

	_06cc74_jump:
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06cdd9_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		testb  $0x000020,0x000081(%ecx)
		jne    _06cca9_jump
		movw   $0x00ffff,_0ce08e_data

	_06cca9_jump:
		mov    0x000052(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06ccb5_jump
		neg    %eax

	_06ccb5_jump:
		cmp    $0x000008,%eax
		jg     _06ccd2_jump
		cmpw   $0x000000,0x000054(%ecx)
		jl     _06ccd2_jump
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06cdd9_jump

	_06ccd2_jump:
		mov    _0ce08c_data,%edx
		mov    %esp,%eax
		sar    $0x000010,%edx
		call   _06bb94_func
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06cdd9_jump
		mov    0x000052(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06ccff_jump
		neg    %eax

	_06ccff_jump:
		cmp    $0x000008,%eax
		jle    _06cdd9_jump
		mov    $0xffffffff,%eax
		mov    0x000060(%ecx),%dx
		mov    %ax,_0ce08e_data
		cmp    $0x0000fe,%dx
		jne    _06cd27_jump
		movw   $0x000001,_0ce08c_data

	_06cd27_jump:
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		mov    _0ce0b1_data,%cl
		call   _01d43c_func
		cmpb   $0x000000,_0cf44b_data
		je     _06cd63_jump
		test   %cl,%cl
		jne    _06cd5c_jump
		cmpb   $0x000028,_0ce0b0_data
		jne    _06cd5c_jump
		mov    $0x00001a,%edx
		jmp    _06cdbf_jump

	_06cd5c_jump:
		mov    $0x00001c,%edx
		jmp    _06cdbf_jump

	_06cd63_jump:
		cmp    $0x000001,%cl
		jne    _06cd9e_jump
		mov    _0ce0b0_data,%dh
		cmp    $0x000009,%dh
		je     _06cd78_jump
		cmp    $0x00000b,%dh
		jne    _06cd9e_jump

	_06cd78_jump:
		mov    _0ce0c5_data,%ah
		test   $0x000008,%ah
		sete   %al
		and    $0x000001,%al
		mov    %ah,%dl
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,_0ce0c5_data
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,_0ce0c5_data

	_06cd9e_jump:
		cmp    $0x000001,%cl
		jne    _06cdba_jump
		cmpb   $0x000003,_0ce0b0_data
		jne    _06cdb3_jump
		mov    $0x000020,%edx
		jmp    _06cdbf_jump

	_06cdb3_jump:
		mov    $0x000018,%edx
		jmp    _06cdbf_jump

	_06cdba_jump:
		mov    $0x000001,%edx

	_06cdbf_jump:
		mov    $_0ce044_data,%eax
		call   _01d434_func
		xor    %edi,%edi
		mov    %di,_0ce096_data
		mov    %di,_0cf296_data

	_06cdd9_jump:
		cmpb   $0x000000,_0cf466_data
		jne    _06cdec_jump
		mov    $_0ce044_data,%eax
		call   _0552b4_func

	_06cdec_jump:
		cmpb   $0x000001,_0ce0b1_data
		jne    _06ce11_jump
		mov    _0ce0b0_data,%dl
		cmp    $0x000009,%dl
		je     _06ce0a_jump
		cmp    $0x000030,%dl
		je     _06ce0a_jump
		cmp    $0x00000b,%dl
		jne    _06ce11_jump

	_06ce0a_jump:
		negw   _0ce084_data

	_06ce11_jump:
		mov    $0x000004,%cl
		mov    _0ce084_data,%ax
		cwtl   
		shl    %cl,%eax
		mov    _0ce084_data,%cx
		mov    %eax,%edi
		test   %cx,%cx
		je     _06ce60_jump
		cwtl   
		test   %eax,%eax
		jge    _06ce31_jump
		neg    %eax

	_06ce31_jump:
		cmp    $0x000100,%eax
		jg     _06ce3c_jump
		mov    $_0000ff_case,%al
		jmp    _06ce3e_jump

	_06ce3c_jump:
		xor    %al,%al

	_06ce3e_jump:
		mov    _0cf276_data,%dx
		test   %dx,%dx
		jle    _06ce54_jump
		addw   $0x00000a,_0ce084_data
		jmp    _06ce62_jump

	_06ce54_jump:
		jge    _06ce62_jump
		subw   $0x00000a,_0ce084_data
		jmp    _06ce62_jump

	_06ce60_jump:
		xor    %al,%al

	_06ce62_jump:
		mov    _0ce0b1_data,%ch
		cmp    $0x000002,%ch
		jne    _06cebb_jump
		cmpb   $0x00000f,_0ce0b0_data
		je     _06ce80_jump
		cmpw   $0x000000,_0ce08c_data
		je     _06ceb4_jump

	_06ce80_jump:
		testb  $0x000008,_0ce0c5_data
		je     _06ce93_jump
		cmpw   $0x000000,_0cf250_data
		jg     _06cea6_jump

	_06ce93_jump:
		testb  $0x000008,_0ce0c5_data
		jne    _06cead_jump
		cmpw   $0x000000,_0cf250_data
		jge    _06cead_jump

	_06cea6_jump:
		mov    $0x00000c,%bl
		jmp    _06d030_jump

	_06cead_jump:
		mov    $0x000008,%bl
		jmp    _06d030_jump

	_06ceb4_jump:
		mov    %al,%bl
		jmp    _06d030_jump

	_06cebb_jump:
		test   %ch,%ch
		je     _06cecd_jump
		cmp    $0x000001,%ch
		je     _06cecd_jump
		cmp    $0x000003,%ch
		jne    _06d032_jump

	_06cecd_jump:
		mov    _0ce08c_data,%esi
		sar    $0x000010,%esi
		cmp    $0xffffffff,%esi
		je     _06cf3c_jump
		mov    %esi,%eax
		shl    $0x000005,%eax
		add    %esi,%eax
		mov    _0cc7a0_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmpw   $0x0000fe,0x000060(%esi)
		jne    _06cf35_jump
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _06cf01_jump
		neg    %eax

	_06cf01_jump:
		lea    0x000001(%eax),%ecx
		mov    $_0000ff_case,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000001,%cl
		mov    %al,%bl
		movsbw 0x000076(%esi),%ax
		test   %ax,%ax
		js     _06cf23_jump
		sar    %cl,%ax
		jmp    _06cf2c_jump

	_06cf23_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06cf2c_jump:
		mov    %eax,%esi
		neg    %esi
		jmp    _06d032_jump

	_06cf35_jump:
		xor    %bl,%bl
		jmp    _06d030_jump

	_06cf3c_jump:
		mov    _0ce0a6_data,%bl
		cmp    $0x00000f,%bl
		jb     _06cf71_jump
		jbe    _06cfb3_jump
		cmp    $0x000014,%bl
		jb     _06cf61_jump
		cmp    $0x000015,%bl
		jbe    _06cf9b_case
		cmp    $0x000018,%bl
		jb     _06cfa7_case
		jmp    _06cfe3_jump

	_06cf61_jump:
		cmp    $0x000012,%bl
		jb     _06cfe3_jump
		jbe    _06cfd1_case
		jmp    _06cfda_case

	_06cf71_jump:
		cmp    $0x000008,%bl
		jb     _06cf91_jump
		cmp    $0x000009,%bl
		jbe    _06cfe3_jump
		cmp    $0x00000c,%bl
		jb     _06cfe3_jump
		jbe    _06d02e_jump
		cmp    $0x00000e,%bl
		je     _06d02e_jump
		jmp    _06cfe3_jump

	_06cf91_jump:
		cmp    $0x000001,%bl
		jbe    _06cfe3_jump
		jmp    _06d02e_jump

	_06cf9b_case:
		mov    $0xfffffffc,%esi
		mov    %bh,%bl
		jmp    _06d032_jump

	_06cfa7_case:
		mov    $0x000004,%esi
		mov    %bh,%bl
		jmp    _06d032_jump

	_06cfb3_jump:
		mov    _0ce0a9_data,%ah
		sub    $0x000012,%ah
		cmp    $0x000005,%ah
		ja     _06d02e_jump
		xor    %edx,%edx
		mov    %ah,%dl
		jmp    *%cs:_06cc40_switch(,%edx,4)

	_06cfd1_case:
		mov    $0xfffffffa,%esi
		mov    %bh,%bl
		jmp    _06d032_jump

	_06cfda_case:
		mov    $0x000006,%esi
		mov    %bh,%bl
		jmp    _06d032_jump

	_06cfe3_jump:
		xor    %edx,%edx
		mov    _0ce0a6_data,%dl
		testb  $0x000001,_0924f4_data(%edx)
		jne    _06d00c_jump
		xor    %edx,%edx
		mov    _0ce0aa_data,%dl
		mov    _0924f4_data(%edx),%cl
		test   $0x000008,%cl
		jne    _06d00c_jump
		test   $0x000002,%cl
		jne    _06d02e_jump

	_06d00c_jump:
		cmpw   $0x000000,_0ce084_data
		jne    _06d02a_jump
		cmpw   $0x000000,_0cf250_data
		jne    _06d02a_jump
		cmpw   $0x000000,_0cf276_data
		je     _06d02e_jump

	_06d02a_jump:
		mov    %bh,%bl
		jmp    _06d030_jump

	_06d02e_jump:
		mov    %al,%bl

	_06d030_jump:
		xor    %esi,%esi

	_06d032_jump:
		cmpb   $0x000001,_0cf44b_data
		jne    _06d03d_jump
		shr    %bl

	_06d03d_jump:
		mov    _0cf274_data,%ecx
		movswl %di,%edx
		movswl %si,%esi
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    %bl,%al
		mov    %edx,%ebx
		mov    %esi,%edx
		call   _06c990_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06d064_switch:
		.long   _06d0eb_case
		.long   _06d0f9_case
		.long   _06d0f9_case
		.long   _06d0eb_case
		.long   _06d0eb_case
		.long   _06d0eb_case
		.long   _06d0f9_case
		.long   _06d0eb_case
		.long   _06d0d3_case
		.long   _06d0df_case
		.long   _06d0d3_case
		.long   _06d0df_case




_06d094_func:
		push   %ebx
		push   %edx
		cmpb   $0x000001,_0ce0b1_data
		je     _06d0ac_jump
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06d116_jump

	_06d0ac_jump:
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0ce0b0_data,%al
		add    %edx,%eax
		sub    $0x000100,%eax
		cmp    $0x00000b,%eax
		ja     _06d0f9_case
		jmp    *%cs:_06d064_switch(,%eax,4)

	_06d0d3_case:
		mov    $0x00002f,%ebx
		mov    $_0ce044_data,%eax
		jmp    _06d0f2_jump

	_06d0df_case:
		mov    $0x000030,%ebx
		mov    $_0ce044_data,%eax
		jmp    _06d0f2_jump

	_06d0eb_case:
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx

	_06d0f2_jump:
		xor    %edx,%edx
		call   _01d444_func

	_06d0f9_case:
		mov    _0cf250_data,%bx
		test   %bx,%bx
		jne    _06d13e_jump
		mov    %bx,_0ce086_data
		mov    %bx,_0ce084_data
		pop    %edx
		pop    %ebx
		ret    

	_06d116_jump:
		cmpb   $0x000004,_0ce0b1_data
		jne    _06d13e_jump
		mov    _0ce174_data,%dh
		test   %dh,%dh
		jne    _06d13e_jump
		xor    %dl,%dl
		mov    $_0ce044_data,%eax
		mov    %dx,_0ce086_data
		xor    %edx,%edx
		call   _01d434_func

	_06d13e_jump:
		pop    %edx
		pop    %ebx
		ret    



_06d144_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%ebx
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce0b0_data,%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _06d272_jump
		cmpb   $0x000001,_0cf470_data
		jne    _06d272_jump
		call   *_0c3f58_data
		test   %ax,%ax
		je     _06d272_jump
		testb  $0x000008,_0cf220_data
		je     _06d229_jump
		testb  $0x000018,_0cf221_data
		jne    _06d229_jump
		mov    $0x000002,%al
		mov    $0x00000e,%edx
		mov    %al,_0cf470_data
		mov    $_0ce044_data,%eax
		call   _01d434_func
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0ce0b1_data,%al
		mov    _0ce0b0_data,%dl
		mov    (%ebx,%eax,4),%eax
		mov    0x000005(%eax,%edx,8),%cl
		and    $0x00000f,%cl
		mov    %cl,0x000005(%eax,%edx,8)
		mov    %cl,%ch
		or     $0x000030,%ch
		mov    %ch,0x000005(%eax,%edx,8)
		mov    0x000008(%ebx),%eax
		mov    $0xffffffff,%esi
		mov    0x00007d(%eax),%dl
		mov    %si,_0cf2aa_data
		and    $0x00000f,%dl
		xor    %cl,%cl
		mov    %dl,0x00007d(%eax)
		mov    %dl,%dh
		mov    %cl,_0cf464_data
		or     $0x000020,%dh
		mov    %cl,_0cf458_data
		mov    %dh,0x00007d(%eax)
		xor    %al,%al
		mov    %si,_0ce096_data
		xor    %ah,%ah
		mov    %cl,_0ce0c3_data
		mov    %ax,_0cf246_data
		jmp    _06d272_jump

	_06d229_jump:
		testb  $0x000004,_0cf220_data
		je     _06d272_jump
		testb  $0x000018,_0cf221_data
		jne    _06d272_jump
		mov    $0x000002,%cl
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		mov    %cl,_0cf470_data
		call   _01d434_func
		xor    %ch,%ch
		mov    $0x000032,%edx
		mov    %ch,_0ce0af_data
		mov    $0xffffffff,%ecx
		mov    %dx,_0cf2aa_data
		mov    %cx,_0ce096_data

	_06d272_jump:
		cmpb   $0x00000f,_0ce0b0_data
		jne    _06d2bd_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0ce0b0_data,%dl
		mov    _0ce0b1_data,%al
		shl    $0x000003,%edx
		mov    (%ebx,%eax,4),%eax
		add    %edx,%eax
		mov    0x000005(%eax),%dl
		and    $0x0000f0,%dl
		cmp    $0x000020,%dl
		jne    _06d2bd_jump
		mov    0x000005(%eax),%dl
		and    $0x00000f,%dl
		mov    %dl,0x000005(%eax)
		mov    %dl,%dh
		or     $0x0000a0,%dh
		xor    %cl,%cl
		mov    %dh,0x000005(%eax)
		mov    %cl,_0ce0b5_data
		movb   $0x000014,_0ce0b6_data

	_06d2bd_jump:
		cmpb   $0x000003,_0cf470_data
		jne    _06d2d1_jump
		call   *_0c3f58_data
		test   %ax,%ax
		jne    _06d2df_jump

	_06d2d1_jump:
		cmpw   $0x000000,_0cf2aa_data
		jne    _06d486_jump

	_06d2df_jump:
		testb  $0x000008,_0cf220_data
		je     _06d45a_jump
		testb  $0x000018,_0cf221_data
		jne    _06d45a_jump
		mov    _0ce0b0_data,%cl
		cmp    $0x00000f,%cl
		jne    _06d486_jump
		cmpw   $0x000000,_0cf2aa_data
		je     _06d486_jump
		movb   $0x000002,_0cf470_data
		movb   $0x000001,_0cf464_data
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%edx
		xor    %ch,%ch
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %cl,%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %ch,_0ce0b5_data
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x0000a0,%bh
		mov    $0x000014,%cl
		mov    %bh,0x000005(%edx,%eax,8)
		mov    %cl,_0ce0b6_data
		mov    _0cf458_data,%ch
		mov    $0xffffffff,%edi
		inc    %ch
		mov    %di,_0ce086_data
		mov    %ch,_0cf458_data
		cmp    $0x000002,%ch
		jb     _06d44b_jump
		cmpw   $0x000000,_0cf248_data
		jl     _06d431_jump
		testb  $0x000008,_0ce0c5_data
		jne    _06d3b7_jump
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jg     _06d3b7_jump
		call   _041c98_func
		test   %ax,%ax
		je     _06d3b7_jump
		movw   $0x00ffd0,_0ce084_data
		jmp    _06d3f2_jump

	_06d3b7_jump:
		testb  $0x000008,_0ce0c5_data
		je     _06d3df_jump
		cmpw   $0x000002,_0ce084_data
		jl     _06d3df_jump
		call   _041d08_func
		test   %ax,%ax
		je     _06d3df_jump
		movw   $0x000030,_0ce084_data
		jmp    _06d3f2_jump

	_06d3df_jump:
		cmpw   $0x000000,_0ce084_data
		jne    _06d3f2_jump
		movw   $0x00fffe,_0ce086_data

	_06d3f2_jump:
		mov    $0x000046,%ebx
		mov    $0x000004,%cl
		mov    _0ce084_data,%ax
		mov    %bx,_0cf2aa_data
		xor    %bl,%bl
		xor    %edx,%edx
		mov    %bl,_0cf458_data
		mov    _0cf274_data,%ebx
		cwtl   
		shl    %cl,%eax
		sar    $0x000010,%ebx
		cwtl   
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    $_0000ff_case,%eax
		call   _06c990_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d431_jump:
		mov    $0x000001,%ah
		mov    $0x000014,%ebx
		mov    %ah,_0cf458_data
		mov    %bx,_0cf248_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d44b_jump:
		movw   $0x000014,_0cf248_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d45a_jump:
		mov    $0x000004,%dh
		mov    $_0ce044_data,%eax
		mov    $0xffffffff,%ebx
		mov    %dh,_0cf470_data
		mov    $0x000005,%edx
		xor    %ecx,%ecx
		call   _01d434_func
		mov    %bx,_0cf2aa_data
		mov    %cx,_0ce096_data

	_06d486_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06d48c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%ecx
		cmpb   $0x000002,_0ce0b1_data
		jne    _06d4af_jump
		cmpb   $0x000008,_0ce0b0_data
		jne    _06d4af_jump
		movw   $0x00005a,_0ce09a_data

	_06d4af_jump:
		mov    $0x000005,%edx
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		mov    _0ce09c_data,%eax
		mov    $0x000020,%edx
		sar    $0x000010,%eax
		call   _01d1dc_func
		testb  $0x000002,_0cf221_data
		je     _06d4e2_jump
		mov    $0x000003,%edx
		jmp    _06d4e7_jump

	_06d4e2_jump:
		mov    $0x000007,%edx

	_06d4e7_jump:
		testb  $0x000008,_0ce0c5_data
		je     _06d501_jump
		mov    $0x000010,%ebx
		and    $_0000ff_case,%edx
		sub    %edx,%ebx
		mov    %ebx,%edx
		jmp    _06d507_jump

	_06d501_jump:
		and    $_0000ff_case,%edx

	_06d507_jump:
		mov    %edx,%ebx
		testb  $0x000002,_0cf221_data
		je     _06d517_jump
		add    $0x000025,%eax

	_06d517_jump:
		movswl %cx,%edx
		sar    $0x000004,%edx
		cwtl   
		shl    $0x000004,%edx
		mov    $0xffffffff,%edi
		sub    %eax,%edx
		mov    %di,_0ce08e_data
		mov    %edx,_0ce070_data
		movswl %si,%edx
		xor    %eax,%eax
		sar    $0x000004,%edx
		mov    _0ce0ac_data,%al
		shl    $0x000004,%edx
		xor    %ecx,%ecx
		sub    %eax,%edx
		movswl %bx,%eax
		dec    %edx
		mov    %cx,_0cf250_data
		add    %eax,%edx
		xor    %ebx,%ebx
		mov    %edx,_0ce06c_data
		mov    %bx,_0ce086_data
		mov    %bx,_0ce084_data
		mov    %bx,_0ce096_data
		xor    %dh,%dh
		xor    %bl,%bl
		mov    %dh,_0ce0b5_data
		xor    %dl,%dl
		mov    %bl,_0ce0b6_data
		mov    %dx,_0cf296_data
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06d594_func:
		push   %edx
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0ce040_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		sete   %al
		xor    %ah,%ah
		pop    %edx
		ret    



_06d5bc_func:
		push   %edx
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0ce040_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $_0000ff_case,%eax
		mov    _0924f4_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		pop    %edx
		ret    



_06d5e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		testb  $0x000002,_0cf220_data
		je     _06d88e_jump
		testb  $0x000018,_0cf221_data
		jne    _06d88e_jump
		xor    %eax,%eax
		mov    _0ce06c_data,%dx
		mov    _0ce0ac_data,%al
		add    %eax,%edx
		mov    %dx,0x000018(%esp)
		mov    0x000016(%esp),%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		mov    $0x000001,%ebx
		sar    $0x000004,%eax
		mov    _0ce036_data,%ecx
		mov    %ax,0x000010(%esp)
		sar    $0x000010,%ecx
		mov    0x00000e(%esp),%eax
		sub    $0x000002,%ecx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _06d658_jump
		cmp    %ecx,%eax
		jg     _06d658_jump
		mov    $0x000001,%eax
		jmp    _06d65a_jump

	_06d658_jump:
		xor    %eax,%eax

	_06d65a_jump:
		test   %eax,%eax
		je     _06d88e_jump
		xor    %eax,%eax
		mov    _0ce070_data,%dx
		mov    _0ce0b8_data,%al
		add    %edx,%eax
		add    $0x000020,%eax
		mov    _0ce09e_data,%bx
		mov    %ax,0x000014(%esp)
		test   %bx,%bx
		je     _06d6b4_jump
		xor    %eax,%eax
		mov    _0ce0ad_data,%al
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01d18c_func
		mov    0x000012(%esp),%edx
		mov    _0ce09c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _01d240_func
		mov    %ax,0x000014(%esp)

	_06d6b4_jump:
		testb  $0x000008,_0ce0c5_data
		je     _06d6c4_jump
		mov    $0x000001,%eax
		jmp    _06d6c9_jump

	_06d6c4_jump:
		mov    $0xffffffff,%eax

	_06d6c9_jump:
		mov    %ax,0x00000c(%esp)
		mov    0x000012(%esp),%eax
		mov    _0ce036_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    0x00000a(%esp),%eax
		mov    %ebx,%ecx
		sar    $0x000010,%eax
		sub    %edx,%ecx
		add    %eax,%ecx
		mov    %ecx,0x000008(%esp)
		test   %ecx,%ecx
		jl     _06d88e_jump
		lea    (%ebx,%edx,1),%esi
		lea    (%esi,%edx,1),%ecx
		lea    (%ecx,%edx,1),%ebp
		lea    (%ecx,%eax,1),%edx
		lea    (%ebx,%eax,1),%edi
		mov    %edx,0x000004(%esp)
		lea    (%esi,%eax,1),%edx
		mov    _0ce09e_data,%ax
		mov    %edx,(%esp)
		test   %ax,%ax
		je     _06d72c_jump
		mov    %ecx,%ebp

	_06d72c_jump:
		mov    %edi,%eax
		call   _06d5bc_func
		test   %ax,%ax
		jne    _06d757_jump
		mov    (%esp),%eax
		call   _06d5bc_func
		test   %ax,%ax
		jne    _06d757_jump
		mov    0x000004(%esp),%eax
		call   _06d5bc_func
		test   %ax,%ax
		je     _06d88e_jump

	_06d757_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _06d88e_jump
		cmpw   $0x000008,_0cf296_data
		jle    _06d88e_jump
		mov    %ebx,%eax
		call   _06d594_func
		test   %ax,%ax
		je     _06d7cf_jump
		mov    %ecx,%eax
		call   _06d594_func
		test   %ax,%ax
		je     _06d7cf_jump
		mov    %esi,%eax
		call   _06d594_func
		test   %ax,%ax
		je     _06d7cf_jump
		mov    0x000008(%esp),%eax
		call   _06d594_func
		test   %ax,%ax
		je     _06d7cf_jump
		mov    %ebp,%eax
		call   _06d594_func
		test   %ax,%ax
		je     _06d7cf_jump
		mov    %edi,%eax
		call   _06d5bc_func
		test   %ax,%ax
		je     _06d7cf_jump
		mov    0x000012(%esp),%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		jmp    _06d889_jump

	_06d7cf_jump:
		cmpw   $0x000000,_0ce09e_data
		jne    _06d88e_jump
		cmpw   $0x000002,0x000010(%esp)
		jge    _06d7f2_jump
		testb  $0x000008,_0ce0c5_data
		jne    _06d88e_jump

	_06d7f2_jump:
		mov    _0ce036_data,%eax
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000003,%eax
		cmp    %eax,%edx
		jle    _06d815_jump
		testb  $0x000008,_0ce0c5_data
		je     _06d88e_jump

	_06d815_jump:
		mov    0x00000a(%esp),%edx
		mov    %ebx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		call   _06d594_func
		test   %ax,%ax
		je     _06d88e_jump
		mov    %ecx,%eax
		sub    %edx,%eax
		call   _06d594_func
		test   %ax,%ax
		je     _06d88e_jump
		mov    %esi,%eax
		sub    %edx,%eax
		call   _06d594_func
		test   %ax,%ax
		je     _06d88e_jump
		mov    0x000008(%esp),%eax
		sub    %edx,%eax
		call   _06d594_func
		test   %ax,%ax
		je     _06d88e_jump
		mov    %ebp,%eax
		sub    %edx,%eax
		call   _06d594_func
		test   %ax,%ax
		je     _06d88e_jump
		mov    %edi,%eax
		sub    %edx,%eax
		call   _06d5bc_func
		test   %ax,%ax
		je     _06d88e_jump
		mov    0x00000c(%esp),%eax
		mov    0x000018(%esp),%ebx
		shl    $0x000004,%eax
		mov    0x000012(%esp),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax

	_06d889_jump:
		call   _06d48c_func

	_06d88e_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06d898_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cf44b_data
		je     _06d8ca_jump
		cmpb   $0x000000,_0ce0b1_data
		jne    _06d8c0_jump
		cmpb   $0x000028,_0ce0b0_data
		jne    _06d8c0_jump
		mov    $0x00001a,%ebx
		jmp    _06d933_jump

	_06d8c0_jump:
		mov    $0x00001c,%ebx
		jmp    _06d933_jump

	_06d8ca_jump:
		mov    _0ce0b1_data,%dl
		cmp    $0x000001,%dl
		jne    _06d904_jump
		cmpb   $0x00000b,_0ce0b0_data
		jne    _06d904_jump
		mov    _0ce0c5_data,%bl
		test   $0x000008,%bl
		sete   %al
		mov    %bl,%bh
		and    %dl,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%cl
		mov    %bh,_0ce0c5_data
		or     %al,%cl
		mov    %cl,_0ce0c5_data

	_06d904_jump:
		cmpb   $0x000005,_0ce0b1_data
		jne    _06d914_jump
		mov    $0x000001,%ebx
		jmp    _06d933_jump

	_06d914_jump:
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06d922_jump
		neg    %eax

	_06d922_jump:
		cmp    $0x000002,%eax
		jg     _06d92e_jump
		mov    $0x000018,%ebx
		jmp    _06d933_jump

	_06d92e_jump:
		mov    $0x000020,%ebx

	_06d933_jump:
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		xor    %edx,%edx
		mov    $0xffffffff,%ebx
		mov    %dx,_0cf296_data
		mov    %bx,_0cf2aa_data
		xor    %dl,%dl
		mov    %bx,_0ce08e_data
		mov    %dl,_0ce0b5_data
		mov    %dl,_0ce0b6_data
		mov    %dl,_0cf470_data
		mov    %dl,_0ce174_data
		call   _06c650_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06d984_switch:
		.long   _06da55_case
		.long   _06dbd6_case
		.long   _06dcbb_case
		.long   _06dcbb_case
		.long   _06d9bf_case
		.long   _06dc71_case
		.long   _06dc83_case




_06d9a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ce0b1_data,%al
		cmp    $0x000006,%al
		ja     _06dcbb_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_06d984_switch(,%eax,4)

	_06d9bf_case:
		mov    _0ce0b0_data,%dh
		cmp    $0x00000b,%dh
		setne  %al
		and    $_0000ff_case,%eax
		je     _06da46_jump
		cmp    $0x00000c,%dh
		setne  %al
		and    $_0000ff_case,%eax
		je     _06da46_jump
		mov    $0x000001,%edi
		mov    _0ce09e_data,%ax
		mov    %di,_0ce086_data
		test   %ax,%ax
		je     _06da0d_jump
		cmpb   $0x000000,_0cf3ef_data
		je     _06da0d_jump
		mov    $_0ce044_data,%eax
		call   _055b7c_func

	_06da0d_jump:
		call   _06b9f8_func
		cmpb   $0x00000c,_0cf46f_data
		je     _06da25_jump
		call   _06d898_func
		jmp    _06dcbb_case

	_06da25_jump:
		cmpb   $0x000003,_0ce0b0_data
		je     _06dcbb_case
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func
		jmp    _06dcbb_case

	_06da46_jump:
		xor    %esi,%esi
		mov    %si,_0ce086_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06da55_case:
		mov    _0ce0b0_data,%ah
		test   %ah,%ah
		je     _06dad6_jump
		cmp    $0x000001,%ah
		je     _06dad6_jump
		cmp    $0x000002,%ah
		je     _06dad6_jump
		cmp    $0x000003,%ah
		je     _06dad6_jump
		cmp    $0x000031,%ah
		je     _06dad6_jump
		cmp    $0x000008,%ah
		je     _06dad6_jump
		cmp    $0x00002b,%ah
		je     _06dad6_jump
		cmp    $0x000024,%ah
		je     _06dad6_jump
		cmp    $0x000025,%ah
		je     _06dad6_jump
		cmp    $0x000026,%ah
		je     _06dad6_jump
		cmp    $0x000027,%ah
		je     _06dad6_jump
		cmp    $0x000028,%ah
		je     _06dad6_jump
		cmp    $0x000029,%ah
		je     _06dad6_jump
		cmp    $0x00002a,%ah
		je     _06dad6_jump
		cmp    $0x00000d,%ah
		je     _06dad6_jump
		cmp    $0x00003b,%ah
		je     _06dad6_jump
		cmp    $0x00003e,%ah
		je     _06dad6_jump
		cmp    $0x00003f,%ah
		je     _06dad6_jump
		cmp    $0x000040,%ah
		je     _06dad6_jump
		cmp    $0x000041,%ah
		jne    _06dae5_jump

	_06dad6_jump:
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		jmp    _06dbc1_jump

	_06dae5_jump:
		cmp    $0x000014,%ah
		jne    _06db6b_jump
		mov    $_0ce044_data,%eax
		call   _01cca0_func
		test   %al,%al
		je     _06db6b_jump
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce0b0_data,%al
		mov    (%ebx),%ebx
		shl    $0x000003,%eax
		add    %eax,%ebx
		mov    0x000007(%ebx),%dh
		lea    0x000007(%ebx),%eax
		test   $0x000010,%dh
		sete   %dl
		mov    (%eax),%cl
		and    $0x000001,%dl
		and    $0x0000ef,%cl
		shl    $0x000004,%dl
		mov    %cl,(%eax)
		mov    %cl,%ch
		or     %dl,%ch
		mov    $0x000001,%edx
		mov    %ch,(%eax)
		mov    $_0ce044_data,%eax
		call   _055b04_func
		mov    0x000007(%ebx),%dh
		lea    0x000007(%ebx),%eax
		test   $0x000010,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000ef,%bl
		shl    $0x000004,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)
		jmp    _06dbcb_jump

	_06db6b_jump:
		call   *_0c3f58_data
		test   %ax,%ax
		je     _06dbcb_jump
		cmpb   $0x000000,_0cf44b_data
		jne    _06dbcb_jump
		cmpb   $0x000000,_0ce172_data
		jne    _06dbb7_jump
		mov    _0ce0b0_data,%al
		cmp    $0x00000b,%al
		je     _06db95_jump
		cmp    $0x00000c,%al
		jne    _06dbb7_jump

	_06db95_jump:
		xor    %dl,%dl
		mov    $0x000006,%ebx
		mov    %dl,_0ce174_data
		xor    %dh,%dh
		mov    $_0ce044_data,%eax
		mov    %dx,_0ce16c_data
		mov    $0x000003,%edx
		jmp    _06dbc6_jump

	_06dbb7_jump:
		mov    $0x000008,%ebx
		mov    $0x000001,%edx

	_06dbc1_jump:
		mov    $_0ce044_data,%eax

	_06dbc6_jump:
		call   _01d444_func

	_06dbcb_jump:
		call   _06cc58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06dbd6_case:
		cmpb   $0x000000,_0ce0b0_data
		jne    _06dc0c_jump
		call   *_0c3f58_data
		test   %ax,%ax
		je     _06dc0c_jump
		cmpb   $0x000000,_0cf44b_data
		jne    _06dc0c_jump
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		jmp    _06dc66_jump

	_06dc0c_jump:
		mov    _0ce0b0_data,%dl
		cmp    $0x000008,%dl
		je     _06dc26_jump
		cmp    $0x00000a,%dl
		je     _06dc26_jump
		cmp    $0x000009,%dl
		je     _06dc26_jump
		cmp    $0x00000b,%dl
		jne    _06dc58_jump

	_06dc26_jump:
		call   *_0c3f58_data
		test   %ax,%ax
		je     _06dc3a_jump
		cmpb   $0x000000,_0cf44b_data
		je     _06dc66_jump

	_06dc3a_jump:
		call   _041c98_func
		test   %ax,%ax
		je     _06dc58_jump
		call   *_0c3f58_data
		test   %ax,%ax
		je     _06dc58_jump
		cmpb   $0x000000,_0cf44b_data
		je     _06dc66_jump

	_06dc58_jump:
		testb  $0x000018,_0cf221_data
		jne    _06dc66_jump
		call   _06d094_func

	_06dc66_jump:
		call   _06cc58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06dc71_case:
		addl   $0x00000e,_0ce070_data
		call   _06d898_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06dc83_case:
		mov    _0ce0c5_data,%ah
		mov    _0ce086_data,%bx
		xor    %edx,%edx
		or     $0x000008,%ah
		mov    %dx,_0cf250_data
		mov    %ah,_0ce0c5_data
		cmp    $0x000003,%bx
		jge    _06dcbb_case
		cmpb   $0x000000,_0ce0b5_data
		jne    _06dcbb_case
		mov    %ebx,%ecx
		inc    %ecx
		mov    %cx,_0ce086_data

	_06dcbb_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06dcc4_switch:
		.long   _06dddd_case
		.long   _06ddb8_case
		.long   _06de97_case
		.long   _06de97_case
		.long   _06dcfe_case
		.long   _06ddcf_case
		.long   _06de6a_case




_06dce0_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ce0b1_data,%al
		cmp    $0x000006,%al
		ja     _06de97_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_06dcc4_switch(,%eax,4)

	_06dcfe_case:
		mov    _0ce0b0_data,%dh
		cmp    $0x00000b,%dh
		setne  %al
		and    $_0000ff_case,%eax
		je     _06ddaa_jump
		cmp    $0x00000c,%dh
		setne  %al
		and    $_0000ff_case,%eax
		je     _06ddaa_jump
		call   _06b9f8_func
		mov    _0cf46f_data,%bh
		test   %bh,%bh
		jne    _06dd4f_jump
		call   _06d898_func
		mov    $0x00000a,%al
		mov    $0x000001,%ebx
		mov    %al,_0ce0c3_data
		mov    %bx,_0ce086_data
		jmp    _06dd89_jump

	_06dd4f_jump:
		cmp    $0x00000c,%bh
		je     _06dd5f_jump
		xor    %edx,%edx
		mov    %dx,_0ce086_data
		jmp    _06dd89_jump

	_06dd5f_jump:
		mov    $0xffffffff,%edi
		mov    _0ce09e_data,%ax
		mov    %di,_0ce086_data
		test   %ax,%ax
		je     _06dd89_jump
		cmpb   $0x000000,_0cf3ef_data
		je     _06dd89_jump
		mov    $_0ce044_data,%eax
		call   _055b7c_func

	_06dd89_jump:
		cmpb   $0x000002,_0ce0b0_data
		je     _06de97_case
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06ddaa_jump:
		xor    %esi,%esi
		mov    %si,_0ce086_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06ddb8_case:
		testb  $0x000018,_0cf221_data
		jne    _06de97_case
		call   _06d094_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06ddcf_case:
		movw   $_0000ff_case,_0cf2a6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06dddd_case:
		cmpb   $0x000025,_0ce0b0_data
		jne    _06de0a_jump
		mov    _0cf24e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06ddf4_jump
		neg    %eax

	_06ddf4_jump:
		cmp    $0x000080,%eax
		jg     _06de0a_jump
		mov    $0x000026,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func

	_06de0a_jump:
		call   _06cc58_func
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06de25_jump
		movw   $_0000ff_case,_0cf2a6_data

	_06de25_jump:
		cmpb   $0x000000,_0ce0b1_data
		jne    _06de97_case
		cmpb   $0x00000f,_0ce0b0_data
		jne    _06de97_case
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _024cd0_func
		and    $_0000ff_case,%eax
		testb  $0x000010,_0924f4_data(%eax)
		jne    _06de97_case
		mov    $0x00003c,%ebx
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		call   _01d444_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06de6a_case:
		orb    $0x000008,_0ce0c5_data
		mov    _0ce084_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    %dx,_0cf250_data
		cmp    $0xfffffffd,%eax
		jle    _06de97_case
		cmpb   $0x000000,_0ce0b5_data
		jne    _06de97_case
		decw   _0ce086_data

	_06de97_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_06de9c_switch:
		.long   _06e05d_case
		.long   _06ded8_case
		.long   _06e22e_case
		.long   _06e48b_case
		.long   _06e298_case
		.long   _06e408_case
		.long   _06e430_case




_06deb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0ce0b1_data,%al
		cmp    $0x000006,%al
		ja     _06e48b_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_06de9c_switch(,%edx,4)

	_06ded8_case:
		mov    _09294c_data,%bh
		inc    %bh
		mov    _0ce0b0_data,%al
		mov    %bh,_09294c_data
		cmp    $0x000008,%al
		je     _06def3_jump
		cmp    $0x00000a,%al
		jne    _06df2f_jump

	_06def3_jump:
		call   *_0c3f58_data
		test   %ax,%ax
		je     _06df11_jump
		cmpb   $0x000000,_0cf44b_data
		jne    _06df11_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _06df18_jump

	_06df11_jump:
		mov    $0x000001,%edx
		jmp    _06df1a_jump

	_06df18_jump:
		xor    %edx,%edx

	_06df1a_jump:
		test   %edx,%edx
		je     _06df2f_jump
		mov    $0x00002f,%ebx
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		jmp    _06dfae_jump

	_06df2f_jump:
		mov    _0ce0b0_data,%dh
		cmp    $0x000009,%dh
		je     _06df3f_jump
		cmp    $0x00000b,%dh
		jne    _06df78_jump

	_06df3f_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _06df5d_jump
		call   *_0c3f58_data
		test   %ax,%ax
		je     _06df5d_jump
		cmpb   $0x000000,_0cf44b_data
		je     _06df64_jump

	_06df5d_jump:
		mov    $0x000001,%edx
		jmp    _06df66_jump

	_06df64_jump:
		xor    %edx,%edx

	_06df66_jump:
		test   %edx,%edx
		je     _06df78_jump
		mov    $0x000030,%ebx
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		jmp    _06dfae_jump

	_06df78_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _06dfb3_jump
		call   *_0c3f58_data
		test   %ax,%ax
		je     _06dfb3_jump
		cmpb   $0x000000,_0cf44b_data
		jne    _06dfb3_jump
		cmpb   $0x000000,_0ce0b0_data
		jne    _06dfb3_jump
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax

	_06dfae_jump:
		call   _01d444_func

	_06dfb3_jump:
		mov    _0ce0c5_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _06e013_jump
		mov    _0ce0b0_data,%bl
		cmp    $0x000008,%bl
		je     _06dfd2_jump
		cmp    $0x00000a,%bl
		jne    _06dfe5_jump

	_06dfd2_jump:
		mov    $0x000032,%ebx
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		call   _01d444_func
		jmp    _06e032_jump

	_06dfe5_jump:
		cmp    $0x00000b,%bl
		je     _06e032_jump
		cmp    $0x000032,%bl
		je     _06e032_jump
		cmp    $0x000033,%bl
		je     _06e032_jump
		cmpb   $0x000001,_0cf46a_data
		je     _06e032_jump
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		jmp    _06e032_jump

	_06e013_jump:
		mov    _0ce0b0_data,%dl
		cmp    $0x000009,%dl
		je     _06e023_jump
		cmp    $0x00000b,%dl
		jne    _06e032_jump

	_06e023_jump:
		mov    $0x00000a,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func

	_06e032_jump:
		mov    _0ce0c5_data,%bl
		mov    %cl,%al
		and    $0x0000f7,%bl
		and    $0x000001,%al
		mov    %bl,_0ce0c5_data
		shl    $0x000003,%al
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,_0ce0c5_data
		call   _06cc58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e05d_case:
		incb   _09294c_data
		mov    _0ce0b0_data,%ah
		cmp    $0x00000f,%ah
		je     _06e07c_jump
		cmp    $0x00002f,%ah
		je     _06e07c_jump
		cmp    $0x000030,%ah
		jne    _06e0f8_jump

	_06e07c_jump:
		call   *_0c3f58_data
		test   %ax,%ax
		je     _06e0f8_jump
		cmpb   $0x000000,_0cf44b_data
		jne    _06e0f8_jump
		call   _041d78_func
		test   %ax,%ax
		je     _06e0f8_jump
		mov    _0ce0c5_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		jne    _06e0c2_jump
		mov    $0x000008,%ebx
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		jmp    _06e223_jump

	_06e0c2_jump:
		mov    %cl,%al
		and    $0x000001,%al
		mov    _0ce0c5_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0ce0c5_data
		shl    $0x000003,%al
		mov    %ah,%dl
		mov    $0x000033,%ebx
		or     %al,%dl
		mov    $_0ce044_data,%eax
		mov    %dl,_0ce0c5_data
		xor    %edx,%edx
		call   _01d444_func
		jmp    _06e223_jump

	_06e0f8_jump:
		cmpb   $0x00000f,_0ce0b0_data
		jne    _06e143_jump
		call   _041d78_func
		test   %ax,%ax
		jne    _06e143_jump
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _024cd0_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000010,_0924f4_data(%edx)
		jne    _06e143_jump
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		call   _06cc58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e143_jump:
		mov    _0ce0b0_data,%ah
		cmp    $0x00000c,%ah
		je     _06e223_jump
		cmp    $0x00000b,%ah
		je     _06e223_jump
		cmp    $0x000012,%ah
		je     _06e223_jump
		cmp    $0x000014,%ah
		je     _06e223_jump
		cmp    $0x00000f,%ah
		je     _06e223_jump
		cmp    $0x00002f,%ah
		je     _06e223_jump
		cmp    $0x000030,%ah
		je     _06e223_jump
		cmp    $0x000032,%ah
		je     _06e223_jump
		cmp    $0x000033,%ah
		je     _06e223_jump
		cmp    $0x00003d,%ah
		je     _06e223_jump
		mov    _0ce0c5_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _06e208_jump
		cmpb   $0x000001,_0cf46a_data
		je     _06e1cc_jump
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		jmp    _06e1d8_jump

	_06e1cc_jump:
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx

	_06e1d8_jump:
		call   _01d444_func
		mov    %cl,%al
		mov    _0ce0c5_data,%cl
		and    $0x000001,%al
		and    $0x0000f7,%cl
		shl    $0x000003,%al
		mov    %cl,_0ce0c5_data
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,_0ce0c5_data
		call   _06cc58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e208_jump:
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		call   _01d43c_func
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		call   _01d434_func

	_06e223_jump:
		call   _06cc58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e22e_case:
		mov    _09294c_data,%bh
		mov    _0ce0b0_data,%ah
		inc    %bh
		xor    %edx,%edx
		mov    %bh,_09294c_data
		cmp    $0x00000f,%ah
		setne  %dl
		test   %edx,%edx
		je     _06e25f_jump
		mov    _0ce08c_data,%ax
		test   %ax,%ax
		jne    _06e25f_jump
		mov    %ax,_0cf250_data

	_06e25f_jump:
		call   _06cc58_func
		cmpb   $0x000000,_0cf44b_data
		jne    _06e28d_jump
		mov    %cl,%al
		mov    _0ce0c5_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0ce0c5_data
		or     %al,%bl
		mov    %bl,_0ce0c5_data

	_06e28d_jump:
		call   _06d5e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e298_case:
		mov    _09294c_data,%bh
		inc    %bh
		mov    _0ce0b0_data,%al
		mov    %bh,_09294c_data
		cmp    $0x000002,%al
		jne    _06e2b9_jump
		call   _041de8_func
		test   %ax,%ax
		jne    _06e2cc_jump

	_06e2b9_jump:
		cmpb   $0x000003,_0ce0b0_data
		jne    _06e30d_jump
		call   _041d78_func
		test   %ax,%ax
		je     _06e30d_jump

	_06e2cc_jump:
		call   _06b9f8_func
		mov    _0cf46f_data,%bl
		test   %bl,%bl
		jne    _06e306_jump
		cmpb   $0x000002,_0ce0b0_data
		jne    _06e2ff_jump
		call   _06d898_func
		mov    $0x00000a,%ah
		mov    $0x000001,%esi
		mov    %ah,_0ce0c3_data
		mov    %si,_0ce086_data
		jmp    _06e322_jump

	_06e2ff_jump:
		call   _06d898_func
		jmp    _06e322_jump

	_06e306_jump:
		cmp    $0x00000c,%bl
		je     _06e322_jump
		jmp    _06e31d_jump

	_06e30d_jump:
		mov    _0ce0b0_data,%dl
		cmp    $0x000002,%dl
		je     _06e31d_jump
		cmp    $0x000003,%dl
		jne    _06e322_jump

	_06e31d_jump:
		call   _06d094_func

	_06e322_jump:
		call   *_0c3f58_data
		test   %ax,%ax
		je     _06e393_jump
		xor    %edx,%edx
		mov    _0cf470_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _06e393_jump
		cmpb   $0x00000b,_0ce0b0_data
		setne  %al
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _06e393_jump
		cmpb   $0x00000c,_0ce0b0_data
		setne  %al
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _06e393_jump
		mov    _0ce0b0_data,%bl
		xor    %edx,%edx
		cmp    $0x00000d,%bl
		setne  %dl
		test   %edx,%edx
		je     _06e393_jump
		mov    $0x000100,%edi
		call   _06c6b0_func
		mov    %di,_0cf250_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e393_jump:
		cmpb   $0x00000d,_0ce0b0_data
		jne    _06e3ba_jump
		mov    _0ce0c5_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _06e3ba_jump
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func

	_06e3ba_jump:
		mov    _0ce0b0_data,%ah
		xor    %edx,%edx
		cmp    $0x00000b,%ah
		setne  %dl
		test   %edx,%edx
		je     _06e48b_case
		cmp    $0x00000c,%ah
		setne  %al
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _06e48b_case
		mov    %cl,%al
		mov    _0ce0c5_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0ce0c5_data
		or     %al,%bl
		mov    %bl,_0ce0c5_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e408_case:
		mov    _0ce0c5_data,%al
		mov    _09294c_data,%bl
		shl    $0x000004,%al
		inc    %bl
		shr    $0x000007,%al
		mov    %bl,_09294c_data
		cmp    %cl,%al
		je     _06e48b_case
		call   _06d898_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e430_case:
		xor    %edx,%edx
		mov    _0ce0c5_data,%ah
		mov    %dx,_0cf250_data
		mov    _09294c_data,%dl
		or     $0x000008,%ah
		inc    %dl
		mov    %ah,_0ce0c5_data
		mov    %dl,_09294c_data
		test   %cx,%cx
		je     _06e460_jump
		movswl %cx,%edx
		jmp    _06e465_jump

	_06e460_jump:
		mov    $0xffffffff,%edx

	_06e465_jump:
		mov    _0ce082_data,%ebx
		mov    %edx,%ecx
		sar    $0x000010,%ebx
		movswl %dx,%edx
		imul   %ebx,%edx
		cmp    $0x000003,%edx
		jge    _06e48b_case
		cmpb   $0x000000,_0ce0b5_data
		jne    _06e48b_case
		add    %cx,_0ce084_data

	_06e48b_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06e494_switch:
		.long   _06e576_case
		.long   _06e4cf_case
		.long   _06e92d_case
		.long   _06ea14_case
		.long   _06e8fe_case
		.long   _06ea14_case
		.long   _06e999_case




_06e4b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ce0b1_data,%al
		cmp    $0x000006,%al
		ja     _06ea14_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_06e494_switch(,%eax,4)

	_06e4cf_case:
		mov    _0ce0b0_data,%al
		cmp    $0x000004,%al
		je     _06e56b_jump
		cmp    $0x000005,%al
		je     _06e56b_jump
		testb  $0x000018,_0cf221_data
		jne    _06e56b_jump
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		call   _01d43c_func
		mov    _0ce0b0_data,%dh
		cmp    $0x000008,%dh
		je     _06e50d_jump
		cmp    $0x00000a,%dh
		jne    _06e519_jump

	_06e50d_jump:
		mov    $0x00002f,%edx
		mov    $_0ce044_data,%eax
		jmp    _06e566_jump

	_06e519_jump:
		cmp    $0x000009,%dh
		je     _06e523_jump
		cmp    $0x00000b,%dh
		jne    _06e53c_jump

	_06e523_jump:
		mov    $0x000030,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func
		call   _06cc58_func
		jmp    _06ea14_case

	_06e53c_jump:
		cmp    $0x000003,%dh
		je     _06e546_jump
		cmp    $0x000007,%dh
		jne    _06e55f_jump

	_06e546_jump:
		mov    $0x000024,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func
		call   _06cc58_func
		jmp    _06ea14_case

	_06e55f_jump:
		mov    $_0ce044_data,%eax
		xor    %edx,%edx

	_06e566_jump:
		call   _01d434_func

	_06e56b_jump:
		call   _06cc58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e576_case:
		mov    _0ce092_data,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    %cx,_0ce084_data
		cmp    $0xffffffff,%eax
		je     _06e5b5_jump
		cmpb   $0x000000,_0ce0b0_data
		jne    _06e5b5_jump
		cmpw   $0x000001,_0ce094_data
		jne    _06e5a6_jump
		mov    $0x000031,%edx
		jmp    _06e5ab_jump

	_06e5a6_jump:
		mov    $0x000003,%edx

	_06e5ab_jump:
		mov    $_0ce044_data,%eax
		call   _01d434_func

	_06e5b5_jump:
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    _0ce0b0_data,%al
		testb  $0x000040,0x000007(%ebx,%eax,8)
		je     _06e6ad_jump
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _024cd0_func
		and    $_0000ff_case,%eax
		testb  $0x000010,_0924f4_data(%eax)
		jne    _06e624_jump
		cmpb   $0x000000,_0ce0b1_data
		jne    _06e60e_jump
		cmpb   $0x00003c,_0ce0b0_data
		je     _06e8f3_jump

	_06e60e_jump:
		mov    $0x00003c,%ebx
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		call   _01d444_func
		jmp    _06e8f3_jump

	_06e624_jump:
		cmpb   $0x000000,_0ce0b1_data
		jne    _06e636_jump
		cmpb   $0x00000f,_0ce0b0_data
		je     _06e63d_jump

	_06e636_jump:
		mov    $0x000001,%eax
		jmp    _06e63f_jump

	_06e63d_jump:
		xor    %eax,%eax

	_06e63f_jump:
		test   %eax,%eax
		je     _06e8f3_jump
		cmpb   $0x000000,_0ce0b1_data
		jne    _06e659_jump
		cmpb   $0x00003d,_0ce0b0_data
		je     _06e660_jump

	_06e659_jump:
		mov    $0x000001,%eax
		jmp    _06e662_jump

	_06e660_jump:
		xor    %eax,%eax

	_06e662_jump:
		test   %eax,%eax
		je     _06e8f3_jump
		xor    %ebx,%ebx
		mov    _0ce0ae_data,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0ce048_data,%ebx
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%ecx
		xor    %edx,%edx
		mov    $0x00000f,%ebx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		mov    0x00000a(%ecx),%al
		dec    %al
		mov    %al,_0ce0af_data
		call   _06cc58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e6ad_jump:
		cmp    $0x000025,%al
		jne    _06e6e0_jump
		mov    _0cf24e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06e6bf_jump
		neg    %eax

	_06e6bf_jump:
		cmp    $0x000080,%eax
		jg     _06e6e0_jump
		mov    $0x000026,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func
		call   _06cc58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e6e0_jump:
		cmpb   $0x000014,_0ce0b0_data
		jne    _06e797_jump
		mov    $_0ce044_data,%eax
		call   _01cca0_func
		test   %al,%al
		je     _06e797_jump
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _024cd0_func
		and    $_0000ff_case,%eax
		testb  $0x000010,_0924f4_data(%eax)
		je     _06e8f3_jump
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0ce0b0_data,%bl
		mov    (%eax),%eax
		shl    $0x000003,%ebx
		add    %eax,%ebx
		mov    0x000007(%ebx),%ch
		lea    0x000007(%ebx),%eax
		test   $0x000010,%ch
		sete   %cl
		mov    (%eax),%dl
		and    $0x000001,%cl
		and    $0x0000ef,%dl
		shl    $0x000004,%cl
		mov    %dl,(%eax)
		mov    %dl,%dh
		or     %cl,%dh
		mov    %dh,(%eax)
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		call   _055b04_func
		lea    0x000007(%ebx),%eax
		testb  $0x000010,0x000007(%ebx)
		sete   %bl
		mov    (%eax),%ch
		and    $0x000001,%bl
		and    $0x0000ef,%ch
		shl    $0x000004,%bl
		mov    %ch,%dl
		mov    %ch,(%eax)
		or     %bl,%dl
		mov    %dl,(%eax)
		call   _06cc58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e797_jump:
		mov    _0ce0b0_data,%bh
		cmp    $0x00003b,%bh
		je     _06e7b6_jump
		cmp    $0x00003e,%bh
		je     _06e7b6_jump
		cmp    $0x00003f,%bh
		je     _06e7b6_jump
		cmp    $0x000040,%bh
		je     _06e7b6_jump
		cmp    $0x000041,%bh
		jne    _06e7e7_jump

	_06e7b6_jump:
		mov    $_0ce044_data,%eax
		call   _01cca0_func
		test   %al,%al
		je     _06e8f3_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %ax,_0cf16a_data
		mov    $_0ce044_data,%eax
		call   _01d434_func
		call   _06cc58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e7e7_jump:
		test   %bh,%bh
		je     _06e7f9_jump
		cmp    $0x000001,%bh
		je     _06e7f9_jump
		cmp    $0x000002,%bh
		jne    _06e8f3_jump

	_06e7f9_jump:
		mov    _0cf16a_data,%di
		inc    %edi
		mov    %di,_0cf16a_data
		cmp    $0x0001f4,%di
		jl     _06e8f3_jump
		mov    %edi,%edx
		sub    $0x000064,%edx
		mov    _0cf188_data,%bx
		mov    %dx,_0cf16a_data
		test   %bx,%bx
		jne    _06e851_jump
		mov    $0x00003b,%edx
		mov    $_0ce044_data,%eax
		mov    $0x000001,%edi
		call   _01d434_func
		mov    %di,_0cf188_data
		call   _06cc58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e851_jump:
		cmp    $0x000001,%bx
		jne    _06e87d_jump
		mov    $0x000040,%edx
		mov    $_0ce044_data,%eax
		mov    $0x000002,%esi
		call   _01d434_func
		mov    %si,_0cf188_data
		call   _06cc58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e87d_jump:
		cmp    $0x000002,%bx
		jne    _06e8a9_jump
		mov    $0x00003e,%edx
		mov    $_0ce044_data,%eax
		mov    $0x000003,%ecx
		call   _01d434_func
		mov    %cx,_0cf188_data
		call   _06cc58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e8a9_jump:
		cmp    $0x000003,%bx
		jne    _06e8d5_jump
		mov    $0x00003f,%edx
		mov    $_0ce044_data,%eax
		mov    $0x000004,%ebx
		call   _01d434_func
		mov    %bx,_0cf188_data
		call   _06cc58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e8d5_jump:
		cmp    $0x000004,%bx
		jne    _06e8f3_jump
		mov    $0x000041,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func
		xor    %edx,%edx
		mov    %dx,_0cf188_data

	_06e8f3_jump:
		call   _06cc58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e8fe_case:
		mov    _0ce0b0_data,%bl
		cmp    $0x000002,%bl
		je     _06e912_jump
		cmp    $0x000003,%bl
		jne    _06ea14_case

	_06e912_jump:
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		xor    %esi,%esi
		call   _01d434_func
		mov    %si,_0ce086_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e92d_case:
		xor    %edi,%edi
		mov    _0ce0b0_data,%cl
		mov    %di,_0cf16a_data
		mov    %di,_0cf188_data
		cmp    $0x000008,%cl
		je     _06e94f_jump
		mov    %di,_0ce084_data

	_06e94f_jump:
		cmpb   $0x00000f,_0ce0b0_data
		je     _06e962_jump
		cmpw   $0x000000,_0ce08c_data
		je     _06e97f_jump

	_06e962_jump:
		mov    $0x000008,%eax
		mov    _0cf274_data,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ecx
		call   _06c990_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e97f_jump:
		mov    _0cf274_data,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		call   _06c990_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e999_case:
		xor    %edx,%edx
		mov    %dx,_0cf250_data
		mov    _09294c_data,%dl
		mov    _0ce0c5_data,%ah
		inc    %dl
		or     $0x000008,%ah
		mov    %dl,_09294c_data
		mov    _0ce0b5_data,%dh
		mov    %ah,_0ce0c5_data
		test   %dh,%dh
		jne    _06ea14_case
		mov    _0ce084_data,%bx
		test   %bx,%bx
		jle    _06e9e1_jump
		mov    %ebx,%edi
		dec    %edi
		mov    %di,_0ce084_data
		jmp    _06e9ed_jump

	_06e9e1_jump:
		jge    _06e9ed_jump
		mov    %ebx,%esi
		inc    %esi
		mov    %si,_0ce084_data

	_06e9ed_jump:
		mov    _0ce086_data,%ax
		test   %ax,%ax
		jle    _06ea08_jump
		mov    %eax,%ecx
		dec    %ecx
		mov    %cx,_0ce086_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ea08_jump:
		jge    _06ea14_case
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,_0ce086_data

	_06ea14_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lea    0x000000(%eax),%eax
		ret    



_06ea20_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ce0b1_data,%ah
		cmp    $0x000002,%ah
		je     _06eb34_jump
		cmp    $0x000001,%ah
		je     _06eb09_jump
		call   _06d094_func
		cmpb   $0x000000,_0ce0b1_data
		jne    _06eb34_jump
		mov    _0ce0b0_data,%bl
		test   %bl,%bl
		je     _06ea7e_jump
		cmp    $0x000001,%bl
		je     _06ea7e_jump
		cmp    $0x000002,%bl
		je     _06ea7e_jump
		cmp    $0x00003f,%bl
		je     _06ea7e_jump
		cmp    $0x00003e,%bl
		je     _06ea7e_jump
		cmp    $0x00003b,%bl
		je     _06ea7e_jump
		cmp    $0x000003,%bl
		je     _06ea7e_jump
		cmp    $0x000008,%bl
		jne    _06eb34_jump

	_06ea7e_jump:
		testb  $0x000040,_0cf220_data
		je     _06eac0_jump
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06eb34_jump
		mov    $0x000010,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		xor    %edx,%edx
		mov    %dx,_0ce084_data
		mov    %dx,_0ce086_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06eac0_jump:
		cmpb   $0x000000,_0cf44b_data
		jne    _06eb34_jump
		mov    _0ce0b0_data,%cl
		cmp    $0x000012,%cl
		setne  %al
		and    $_0000ff_case,%eax
		je     _06eb34_jump
		mov    _0cf221_data,%ch
		test   $0x000018,%ch
		jne    _06eb34_jump
		test   $0x000001,%ch
		jne    _06eb34_jump
		cmp    $0x000008,%cl
		setne  %al
		and    $_0000ff_case,%eax
		je     _06eb34_jump
		test   $0x000080,%ch
		jne    _06eb34_jump
		mov    $0x000012,%edx
		jmp    _06eb2a_jump

	_06eb09_jump:
		cmp    %ah,%ah
		jne    _06eb34_jump
		mov    _0cf221_data,%bl
		test   $0x000018,%bl
		jne    _06eb34_jump
		test   %ah,%bl
		je     _06eb34_jump
		cmpb   $0x000000,_0ce0b0_data
		jne    _06eb34_jump
		mov    $0x000003,%edx

	_06eb2a_jump:
		mov    $_0ce044_data,%eax
		call   _01d434_func

	_06eb34_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx

	_06eb37_jump:
		ret    



_06eb38_func:
		cmpb   $0x000000,_0ce172_data
		jne    _06eb37_jump
		testb  $0x000001,_0cf220_data
		je     _06eb37_jump
		testb  $0x000018,_0cf221_data
		jne    _06eb37_jump
		jmp    _065ce0_jump

_06eb58_switch:
		.long   _06ebab_case
		.long   _06eb98_case
		.long   _06ebab_case
		.long   _06ebba_case
		.long   _06ebba_case
		.long   _06ebab_case
		.long   _06ebba_case
		.long   _06ebab_case




_06eb78_func:
		push   %edx
		cmpb   $0x000000,_0cf465_data
		jne    _06ebba_case
		mov    _0ce0b1_data,%al
		cmp    $0x000007,%al
		ja     _06ebba_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_06eb58_switch(,%eax,4)

	_06eb98_case:
		call   _041d78_func
		test   %ax,%ax
		je     _06ebab_case
		cmpb   $0x000003,_0ce0b0_data
		jne    _06ebb2_jump

	_06ebab_case:
		call   _06c6b0_func
		pop    %edx
		ret    

	_06ebb2_jump:
		xor    %dh,%dh
		mov    %dh,_0cf470_data

	_06ebba_case:
		pop    %edx
		ret    



_06ebbc_func:
		push   %edx
		test   %ax,%ax
		jne    _06ebc7_jump
		mov    $0x000001,%eax

	_06ebc7_jump:
		cwtl   
		dec    %eax
		sar    $0x000003,%eax
		cmp    $0x00001f,%ax
		jg     _06ebe9_jump
		testb  $0x000008,_0ce0c5_data
		jne    _06ebe2_jump
		add    $0x00001f,%eax
		pop    %edx
		ret    

	_06ebe2_jump:
		mov    $0x000020,%edx
		jmp    _06ebfc_jump

	_06ebe9_jump:
		testb  $0x000008,_0ce0c5_data
		jne    _06ebf7_jump
		sub    $0x00001f,%eax
		pop    %edx
		ret    

	_06ebf7_jump:
		mov    $0x00005f,%edx

	_06ebfc_jump:
		cwtl   
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _06ec07_jump
		neg    %eax

	_06ec07_jump:
		pop    %edx
		ret    



_06ec0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000002,_0ce0b1_data
		jne    _06ec2c_jump
		cmpb   $0x000008,_0ce0b0_data
		jne    _06ec2c_jump
		movw   $0x00005a,_0ce09a_data

	_06ec2c_jump:
		mov    $0x000007,%edx
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx
		mov    $0xffffffff,%esi
		call   _01d444_func
		xor    %ecx,%ecx
		xor    %edi,%edi
		mov    $0xffffffff,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		call   _071b3c_func
		mov    %bx,_0ce096_data
		mov    %bx,_0cf16a_data
		mov    %si,_0ce08e_data
		mov    %di,_0cf250_data
		mov    %cx,_0ce086_data
		xor    %bl,%bl
		xor    %dh,%dh
		mov    %bl,_0ce0b6_data
		mov    $0x000001,%bh
		mov    %dh,_0ce0b5_data
		mov    %bh,_0cf470_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ec98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    _0ce06c_data,%dx
		mov    _0ce0ac_data,%al
		mov    0x000028(%esi),%bx
		mov    %eax,%ecx
		xor    %eax,%eax
		add    %edx,%ecx
		mov    0x000068(%esi),%al
		sub    %ebx,%ecx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0ce070_data,%di
		mov    _0ce0ad_data,%al
		mov    0x00002c(%esi),%dx
		add    %eax,%edi
		sub    %edx,%edi
		movswl %cx,%edx
		imul   %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		sub    %eax,%edi
		movswl %di,%eax
		imul   %eax,%eax
		add    %eax,%edx
		mov    _0ce0b0_data,%ah
		test   %ah,%ah
		jne    _06ee66_jump
		cmp    $0x0011a0,%edx
		jbe    _06eddc_jump
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func
		movb   $0x000000,0x00007f(%esi)
		xor    %eax,%eax
		mov    %ax,_0ce086_data
		mov    %ax,_0ce084_data
		mov    %ax,_0cf250_data
		mov    %esi,%eax
		call   _07ad90_func
		mov    %eax,%edx
		mov    %ax,0x00004e(%esi)
		cmp    $0x000100,%ax
		jg     _06ed4b_jump
		jne    _06ed53_jump
		testb  $0x000008,_0ce0c5_data
		jne    _06ed53_jump

	_06ed4b_jump:
		movw   $0x00ffff,0x000052(%esi)
		jmp    _06ed59_jump

	_06ed53_jump:
		movw   $0x000001,0x000052(%esi)

	_06ed59_jump:
		test   %cx,%cx
		jge    _06ed60_jump
		neg    %ecx

	_06ed60_jump:
		test   %di,%di
		jge    _06ed67_jump
		neg    %edi

	_06ed67_jump:
		mov    %edx,%eax
		lea    0x000004(%esp),%ebx
		add    $0x000080,%eax
		mov    %esp,%edx
		cwtl   
		call   _05d39c_func
		cmpw   $0x000002,(%esp)
		jle    _06edbb_jump
		cmpw   $0x000002,0x000004(%esp)
		jle    _06edbb_jump
		movswl %cx,%eax
		mov    $0x000009,%cl
		shl    %cl,%eax
		mov    0x000002(%esp),%ebx
		mov    %eax,%edx
		sar    $0x000010,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000009,%cl
		mov    %eax,%ebx
		movswl %di,%eax
		shl    %cl,%eax
		mov    -0x000002(%esp),%ecx
		mov    %eax,%edx
		sar    $0x000010,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		sar    %eax
		jmp    _06edcf_jump

	_06edbb_jump:
		cmpw   $0x000002,(%esp)
		jg     _06edcd_jump
		mov    %ecx,%eax
		mov    %ax,0x00004c(%esi)
		jmp    _06ee66_jump

	_06edcd_jump:
		mov    %edi,%eax

	_06edcf_jump:
		mov    %ax,0x00004c(%esi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06eddc_jump:
		ja     _06ee2e_jump
		mov    _0ce0b5_data,%dh
		xor    %al,%al
		inc    %dh
		mov    %ax,_0ce084_data
		mov    %dh,_0ce0b5_data
		mov    0x000042(%esi),%ax
		mov    _0ce086_data,%dx
		sub    %eax,%edx
		mov    _0ce0b5_data,%bl
		mov    %dx,_0ce086_data
		cmp    $0x000003,%bl
		jb     _06ee66_jump
		xor    %bh,%bh
		mov    %bh,_0ce0b5_data
		mov    %edx,%ebx
		inc    %ebx
		mov    %bx,_0ce086_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ee2e_jump:
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func
		xor    %ebx,%ebx
		mov    $0x000001,%dl
		mov    %bx,_0ce086_data
		mov    %bx,_0ce084_data
		mov    %bx,_0cf250_data
		movb   $0x000000,0x00007f(%esi)
		mov    %dl,_0cf470_data
		movw   $0x00005f,0x00004c(%esi)

	_06ee66_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ee70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0ce050_data,%eax
		mov    %eax,(%esp)
		mov    _0cf234_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		mov    $0x000080,%edi
		add    %eax,%ecx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%ecx
		mov    $0x000180,%edx
		add    %eax,%ecx
		mov    %edx,0x000008(%esp)
		mov    _0ce0b0_data,%ah
		mov    0x00004e(%ecx),%si
		test   %ah,%ah
		jne    _06eec2_jump
		mov    %ecx,%eax
		call   _06ec98_func
		jmp    _06efef_jump

	_06eec2_jump:
		cmp    $0x000001,%ah
		jne    _06efef_jump
		mov    0x00007f(%ecx),%dh
		test   %dh,%dh
		jne    _06efd1_jump
		mov    0x00004c(%ecx),%dx
		cmp    $0x000064,%dx
		jle    _06eee9_jump
		sub    $0x000002,%edx
		mov    %dx,0x00004c(%ecx)
		jmp    _06eef6_jump

	_06eee9_jump:
		cmp    $0x00005f,%dx
		jge    _06eef6_jump
		mov    %edx,%eax
		inc    %eax
		mov    %ax,0x00004c(%ecx)

	_06eef6_jump:
		mov    %esi,%eax
		lea    0x000010(%esp),%ebx
		add    $0x000080,%eax
		lea    0x00000c(%esp),%edx
		cwtl   
		call   _05d2ac_func
		cmp    0x000008(%esp),%si
		jl     _06ef25_jump
		cmpw   $0x000000,0x000052(%ecx)
		jle    _06ef1d_jump
		movb   $0x000005,0x00007f(%ecx)

	_06ef1d_jump:
		movw   $0x00ffff,0x000052(%ecx)
		jmp    _06ef3b_jump

	_06ef25_jump:
		cmp    %di,%si
		jg     _06ef3b_jump
		cmpw   $0x000000,0x000052(%ecx)
		jge    _06ef35_jump
		movb   $0x000005,0x00007f(%ecx)

	_06ef35_jump:
		movw   $0x000001,0x000052(%ecx)

	_06ef3b_jump:
		movswl %si,%eax
		call   _05d37c_func
		cwtl   
		sar    $0x000007,%eax
		mov    0x000052(%ecx),%dx
		inc    %eax
		test   %dx,%dx
		jge    _06ef53_jump
		neg    %eax

	_06ef53_jump:
		add    %ax,0x00004e(%ecx)
		mov    0x000028(%ecx),%edx
		mov    _0ce070_data,%ax
		xor    %ebx,%ebx
		mov    %eax,0x000004(%esp)
		mov    0x000068(%ecx),%bl
		mov    0x00004a(%ecx),%eax
		add    %edx,%ebx
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		sar    $0x000009,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    _0ce0ac_data,%bl
		sub    %ebx,%edx
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebp
		mov    0x000069(%ecx),%dl
		add    %edx,%ebp
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		imul   %eax,%edx
		sar    $0x000009,%edx
		mov    %ebp,%eax
		sub    %edx,%eax
		mov    _0ce06c_data,%di
		mov    %eax,%edx
		xor    %eax,%eax
		sub    %edi,%ebx
		mov    _0ce0ad_data,%al
		mov    0x000004(%esp),%edi
		sub    %eax,%edx
		mov    %bx,_0ce084_data
		sub    %edi,%edx
		mov    %dx,_0ce086_data
		jmp    _06efef_jump

	_06efd1_jump:
		mov    %dh,%bl
		sub    %ah,%bl
		mov    %bl,0x00007f(%ecx)
		xor    %ebx,%ebx
		mov    %bx,_0ce084_data
		mov    %bx,_0ce086_data
		mov    %bx,_0cf250_data

	_06efef_jump:
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    (%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce0b0_data,%al
		mov    0x000002(%edx,%eax,8),%al
		mov    %al,_0ce0ae_data
		movswl %si,%eax
		call   _06ebbc_func
		mov    _0ce084_data,%dx
		mov    %al,_0ce0af_data
		mov    0x000040(%ecx),%ax
		mov    _0ce086_data,%bx
		add    %eax,%edx
		add    0x000042(%ecx),%bx
		xor    %eax,%eax
		mov    _0ce0a6_data,%al
		mov    %bx,_0ce086_data
		mov    _0924f4_data(%eax),%bh
		mov    %dx,_0ce084_data
		test   $0x000002,%bh
		je     _06f10e_jump
		testb  $0x000008,_0ce0c5_data
		jne    _06f072_jump
		xor    %eax,%eax
		mov    _0ce0a7_data,%al
		testb  $0x000002,_0924f4_data(%eax)
		jne    _06f093_jump

	_06f072_jump:
		testb  $0x000008,_0ce0c5_data
		je     _06f10e_jump
		xor    %eax,%eax
		mov    _0ce0a8_data,%al
		testb  $0x000002,_0924f4_data(%eax)
		je     _06f10e_jump

	_06f093_jump:
		cmpw   $0x000000,_0ce086_data
		jg     _06f0a4_jump
		cmpw   $0x000000,0x000042(%ecx)
		jle    _06f10e_jump

	_06f0a4_jump:
		mov    $_0ce044_data,%eax
		mov    $0xffffffff,%edx
		call   _0258a0_func
		xor    %ch,%ch
		mov    _0ce084_data,%eax
		mov    _0ce070_data,%ebx
		sar    $0x000010,%eax
		mov    %dx,_0cf2aa_data
		add    %eax,%ebx
		xor    %edx,%edx
		mov    %ebx,_0ce070_data
		xor    %eax,%eax
		mov    $0x000008,%ebx
		mov    %ax,_0ce086_data
		mov    $_0ce044_data,%eax
		mov    %ch,_0ce0c3_data
		call   _01d444_func
		mov    $0xffffffff,%ebx
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		mov    %bx,_0ce096_data
		call   _071b3c_func
		jmp    _06f133_jump

	_06f10e_jump:
		xor    %eax,%eax
		mov    _0ce0a8_data,%al
		testb  $0x000010,_0924f4_data(%eax)
		jne    _06f12e_jump
		xor    %eax,%eax
		mov    _0ce0a7_data,%al
		testb  $0x000010,_0924f4_data(%eax)
		je     _06f133_jump

	_06f12e_jump:
		call   _06f140_func

	_06f133_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f140_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cf234_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		cmpw   $0x000100,0x00004e(%edx,%eax,4)
		setl   %al
		and    $_0000ff_case,%eax
		and    $0x000001,%al
		mov    _0ce0c5_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0ce0c5_data
		shl    $0x000003,%al
		mov    $0x000002,%ebx
		mov    %ah,%dl
		mov    $0xffffffff,%esi
		or     %al,%dl
		mov    $_0ce044_data,%eax
		mov    %dl,_0ce0c5_data
		mov    %ebx,%edx
		xor    %ecx,%ecx
		call   _01d444_func
		mov    _0ce082_data,%eax
		xor    %dh,%dh
		mov    %cx,_0ce086_data
		mov    %dh,_0ce0b5_data
		mov    %dh,_0ce0b6_data
		sar    $0x000010,%eax
		mov    _0ce06c_data,%edx
		mov    %si,_0cf2aa_data
		sub    %eax,%edx
		mov    %si,_0ce096_data
		mov    %edx,_0ce06c_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f1e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ce06c_data,%dx
		mov    _0ce070_data,%bx
		mov    _0cf250_data,%di
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0ce0ac_data,%al
		mov    _0ce0b8_data,%cl
		add    %edx,%eax
		add    %ebx,%ecx
		mov    %al,%bl
		mov    %eax,%esi
		and    $0x00000f,%bl
		test   %di,%di
		jg     _06f224_jump
		jne    _06f232_jump
		testb  $0x000008,_0ce0c5_data
		je     _06f232_jump

	_06f224_jump:
		mov    $0x000010,%edx
		cmp    $0x00000d,%bl
		jbe    _06f23f_jump
		add    %edx,%eax
		jmp    _06f23f_jump

	_06f232_jump:
		mov    $0xfffffff0,%edx
		cmp    $0x000004,%bl
		jae    _06f23f_jump
		sub    $0x000010,%eax

	_06f23f_jump:
		mov    _0cf250_data,%bx
		add    %edx,%eax
		test   %bx,%bx
		je     _06f2a0_jump
		mov    %ecx,%edx
		movswl %ax,%ebx
		add    $0x000010,%edx
		mov    %ebx,%eax
		movswl %dx,%edx
		call   _024c00_func
		test   %ax,%ax
		jne    _06f290_jump
		mov    %ecx,%eax
		add    $0x000020,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _024c00_func
		test   %ax,%ax
		jne    _06f290_jump
		mov    %ecx,%eax
		add    $0x000030,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _024c00_func
		test   %ax,%ax
		je     _06f2a0_jump

	_06f290_jump:
		xor    %edi,%edi
		mov    %di,_0ce084_data
		mov    %di,_0cf250_data

	_06f2a0_jump:
		cmpw   $0x000000,_0ce086_data
		jge    _06f2c6_jump
		add    $0x000010,%ecx
		movswl %si,%eax
		movswl %cx,%edx
		call   _024c00_func
		test   %ax,%ax
		je     _06f2c6_jump
		xor    %ebx,%ebx
		mov    %bx,_0ce086_data

	_06f2c6_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f2cc_func:
		push   %ebx
		push   %edx
		mov    _0ce06c_data,%ax
		sub    _0cf256_data,%ax
		cmp    $0x000001,%ax
		jle    _06f302_jump
		mov    _0ce0c5_data,%dl
		and    $0x0000f7,%dl
		mov    $_0ce044_data,%eax
		mov    %dl,_0ce0c5_data
		mov    $0x000015,%edx
		call   _01d434_func
		pop    %edx
		pop    %ebx
		ret    

	_06f302_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		jge    _06f329_jump
		mov    _0ce0c5_data,%ah
		or     $0x000008,%ah
		mov    $0x000015,%edx
		mov    %ah,_0ce0c5_data
		mov    $_0ce044_data,%eax
		call   _01d434_func
		pop    %edx
		pop    %ebx
		ret    

	_06f329_jump:
		mov    $0x000014,%edx
		xor    %ebx,%ebx
		mov    $_0ce044_data,%eax
		mov    %bx,_0ce084_data
		call   _01d434_func
		mov    _0ce06c_data,%ax
		mov    %ax,_0cf256_data
		pop    %edx
		pop    %ebx
		ret    



_06f350_func:
		push   %ecx
		push   %edx
		cmpw   $0x000003,_0cf254_data
		je     _06f3b0_jump
		and    $_0000ff_case,%eax
		testb  $0x000010,_0924f4_data(%eax)
		je     _06f3b0_jump
		mov    _0ce0b0_data,%dh
		cmp    $0x000007,%dh
		je     _06f3b0_jump
		cmp    $0x000009,%dh
		je     _06f3b0_jump
		cmpw   $0x000000,_0ce086_data
		jg     _06f3b0_jump
		cmp    $0x000008,%dh
		je     _06f3a0_jump
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		xor    %cl,%cl
		call   _01d434_func
		mov    %cl,_0cf470_data

	_06f3a0_jump:
		xor    %ecx,%ecx
		mov    %cx,_0ce096_data
		mov    %cx,_0ce086_data

	_06f3b0_jump:
		pop    %edx
		pop    %ecx
		ret    



_06f3b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cf276_data,%dx
		mov    _0ce050_data,%esi
		test   %dx,%dx
		je     _06f3d7_jump
		movw   $0x000001,_0ce08c_data

	_06f3d7_jump:
		mov    $0x000012,%ebx
		mov    $_0cdfbc_data,%edx
		mov    $_0cdfbe_data,%eax
		call   _0852bd_func
		mov    _0ce06c_data,%ax
		mov    %ax,_0cdfbc_data
		cmpb   $0x000007,_0ce0b0_data
		jne    _06f409_jump
		movw   $0x00ffff,_0ce08e_data

	_06f409_jump:
		mov    _0cf2a8_data,%eax
		mov    $0x000001,%dl
		sar    $0x000010,%eax
		mov    %dl,(%esp)
		cmp    $0xffffffff,%eax
		je     _06f422_jump
		decw   _0cf2aa_data

	_06f422_jump:
		mov    _0cf246_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06f436_jump
		decw   _0cf248_data

	_06f436_jump:
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%edx
		shl    $0x000002,%eax
		mov    _0cf296_data,%bx
		add    %eax,%edx
		inc    %ebx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce0b0_data,%al
		mov    %bx,_0cf296_data
		mov    0x000005(%edx,%eax,8),%al
		xor    %ebx,%ebx
		shr    $0x000004,%al
		mov    %al,%bl
		cmp    $0x00000b,%bx
		je     _06f4aa_jump
		cmp    $0x00000a,%bx
		je     _06f4aa_jump
		mov    _0ce0b5_data,%dh
		inc    %dh
		mov    %dh,_0ce0b5_data
		cmp    $0x000003,%dh
		jb     _06f492_jump
		xor    %ch,%ch
		mov    %ch,_0ce0b5_data

	_06f492_jump:
		mov    _0ce0b6_data,%al
		inc    %al
		mov    %al,_0ce0b6_data
		cmp    $0x000004,%al
		jb     _06f4aa_jump
		xor    %dl,%dl
		mov    %dl,_0ce0b6_data

	_06f4aa_jump:
		cmpw   $0x000017,_0cf296_data
		jne    _06f4bb_jump
		incw   _0ce086_data

	_06f4bb_jump:
		call   *_0c3f58_data
		test   %ax,%ax
		je     _06f4eb_jump
		cmpw   $0x00000c,_0cf296_data
		jg     _06f4eb_jump
		cmpb   $0x000000,_0cf47b_data
		jne    _06f4eb_jump
		cmpb   $0x000000,_0ce0c3_data
		jne    _06f4eb_jump
		cmpb   $0x000002,_0ce0b0_data
		jne    _06f51e_jump

	_06f4eb_jump:
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		call   _0559a0_func
		mov    _0cf470_data,%dl
		mov    $0x000002,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    _06f51e_jump
		call   *_0c3f58_data
		test   %ax,%ax
		jne    _06f51e_jump
		incb   _0cf470_data

	_06f51e_jump:
		cmpw   $0x000006,_0cf296_data
		jne    _06f553_jump
		mov    _0ce0b0_data,%ah
		cmp    $0x000018,%ah
		je     _06f538_jump
		cmp    $0x000021,%ah
		jne    _06f53f_jump

	_06f538_jump:
		mov    $0x000002,%edx
		jmp    _06f549_jump

	_06f53f_jump:
		cmp    $0x000020,%ah
		jne    _06f553_jump
		mov    $0x000011,%edx

	_06f549_jump:
		mov    $_0ce044_data,%eax
		call   _01d434_func

	_06f553_jump:
		mov    _0ce094_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06f56d_jump
		mov    _0ce086_data,%ax
		add    %ax,_0ce096_data

	_06f56d_jump:
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _024cd0_func
		mov    _0ce0b0_data,%cl
		mov    %al,%dl
		cmp    $0x000008,%cl
		setne  %al
		and    $_0000ff_case,%eax
		je     _06f5b1_jump
		cmp    $0x00001f,%cl
		setne  %al
		and    $_0000ff_case,%eax
		je     _06f5b1_jump
		call   _06d144_func
		cmpb   $0x00000f,_0ce0b0_data
		jne    _06f5b1_jump
		call   _06f1e0_func

	_06f5b1_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _06f350_func
		mov    _0ce084_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _06f60e_jump
		cmpb   $0x00000f,_0ce0b0_data
		jne    _06f60e_jump
		cmp    $0x00000b,%bx
		jne    _06f60e_jump
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		shl    $0x000002,%eax
		lea    (%esi,%eax,1),%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce0b0_data,%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x000010,%bh
		xor    %cl,%cl
		mov    %bh,0x000005(%edx,%eax,8)
		mov    %cl,_0ce0b5_data
		mov    %cl,_0ce0b6_data

	_06f60e_jump:
		cmpw   $0x000000,_0ce086_data
		jl     _06f65a_jump
		mov    _0ce0b0_data,%al
		test   %al,%al
		jne    _06f63a_jump
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func
		xor    %eax,%eax
		mov    %ax,_0ce096_data
		jmp    _06f65a_jump

	_06f63a_jump:
		cmp    $0x000011,%al
		je     _06f642_jump
		cmp    $0x000012,%al
		jne    _06f65a_jump

	_06f642_jump:
		mov    $0x000013,%edx
		mov    $_0ce044_data,%eax
		xor    %edi,%edi
		call   _01d434_func
		mov    %di,_0ce096_data

	_06f65a_jump:
		mov    _0ce0b0_data,%dh
		cmp    $0x000011,%dh
		je     _06f93e_jump
		test   %dh,%dh
		je     _06f93e_jump
		cmp    $0x000009,%dh
		je     _06f93e_jump
		cmp    $0x00001f,%dh
		je     _06f93e_jump
		cmp    $0x00000d,%dh
		jne    _06f696_jump
		cmpw   $0x000000,_0ce086_data
		jl     _06f93e_jump

	_06f696_jump:
		cmpw   $0x000003,_0cf296_data
		jl     _06f93e_jump
		cmpw   $0x000003,_0cf254_data
		je     _06f93e_jump
		xor    %eax,%eax
		mov    _0ce0a6_data,%al
		mov    _0924f4_data(%eax),%dl
		test   $0x000002,%dl
		je     _06f8ef_jump
		test   $0x000040,%dl
		je     _06f6f2_jump
		mov    _0ce086_data,%dx
		mov    _0924f4_data(%eax),%bl
		shl    $0x000004,%edx
		test   $0x000080,%bl
		je     _06f6eb_jump
		add    %dx,_0cf250_data
		jmp    _06f6f2_jump

	_06f6eb_jump:
		sub    %dx,_0cf250_data

	_06f6f2_jump:
		mov    $_0ce044_data,%eax
		call   _0258a0_func
		xor    %ecx,%ecx
		xor    %bh,%bh
		mov    _0ce084_data,%eax
		mov    _0ce070_data,%edx
		mov    %bh,_0ce0c3_data
		mov    %bh,_0cf47b_data
		sar    $0x000010,%eax
		mov    %cx,_0ce086_data
		add    %eax,%edx
		mov    $_0ce044_data,%eax
		mov    %edx,_0ce070_data
		call   _025444_func
		test   %al,%al
		jne    _06f766_jump
		cmpw   $0x000006,_0cf282_data
		jne    _06f757_jump
		cmpw   $0x000001,_0cf270_data
		jne    _06f757_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _06f761_jump

	_06f757_jump:
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax

	_06f761_jump:
		call   _071b3c_func

	_06f766_jump:
		cmpw   $0x000000,_0ce08c_data
		jne    _06f7ee_jump
		mov    $0x000001,%al

	_06f776_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0cdfba_data(,%edx,2),%bx
		cmp    _0cdfbc_data(,%edx,2),%bx
		jne    _06f792_jump
		inc    %al
		cmp    $0x00000a,%al
		jb     _06f776_jump

	_06f792_jump:
		cmp    $0x00000a,%al
		je     _06f7e5_jump
		and    $_0000ff_case,%eax
		mov    _0cdfba_data(,%eax,2),%dx
		cmp    _0cdfbc_data(,%eax,2),%dx
		jge    _06f7c9_jump
		mov    _0cf24e_data,%ebx
		mov    $0xffffff00,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _06f7c1_jump
		mov    %ebx,%eax

	_06f7c1_jump:
		mov    %ax,_0cf250_data
		jmp    _06f7ee_jump

	_06f7c9_jump:
		mov    _0cf24e_data,%ebx
		mov    $0x000100,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _06f7dd_jump
		mov    %ebx,%eax

	_06f7dd_jump:
		mov    %ax,_0cf250_data
		jmp    _06f7ee_jump

	_06f7e5_jump:
		xor    %esi,%esi
		mov    %si,_0cf250_data

	_06f7ee_jump:
		mov    $0xffffffff,%eax
		mov    _0ce0b0_data,%ch
		mov    %ax,_0cf2aa_data
		cmp    $0x000003,%ch
		jne    _06f816_jump
		cmpb   $0x000000,_0ce0af_data
		jne    _06f834_jump
		movb   $0x000001,_0cf470_data
		jmp    _06f834_jump

	_06f816_jump:
		cmp    $0x000008,%ch
		jne    _06f834_jump
		mov    _0ce098_data,%eax
		mov    $0x00005a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _06f82e_jump
		mov    %ebx,%eax

	_06f82e_jump:
		mov    %ax,_0ce09a_data

	_06f834_jump:
		mov    _0ce0b0_data,%dh
		cmp    $0x000011,%dh
		je     _06f849_jump
		cmp    $0x000012,%dh
		je     _06f849_jump
		cmp    $0x000013,%dh
		jne    _06f8a1_jump

	_06f849_jump:
		testb  $0x000001,_0cf221_data
		je     _06f89a_jump
		mov    _0ce050_data,%eax
		mov    0x000004(%eax),%eax
		mov    $0x000004,%cl
		movsbw 0x000018(%eax),%ax
		test   %ax,%ax
		js     _06f86b_jump
		sar    %cl,%ax
		jmp    _06f874_jump

	_06f86b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06f874_jump:
		movswl %ax,%edx
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06f885_jump
		neg    %eax

	_06f885_jump:
		cmp    %edx,%eax
		jl     _06f89a_jump
		mov    $0x000007,%ebx
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		jmp    _06f8cf_jump

	_06f89a_jump:
		mov    $0x00002b,%ebx
		jmp    _06f8c8_jump

	_06f8a1_jump:
		cmp    $0x000019,%dh
		je     _06f8ab_jump
		cmp    $0x00001a,%dh
		jne    _06f8b2_jump

	_06f8ab_jump:
		mov    $0x000034,%ebx
		jmp    _06f8c8_jump

	_06f8b2_jump:
		cmp    $0x00001b,%dh
		je     _06f8bc_jump
		cmp    $0x00001c,%dh
		jne    _06f8c3_jump

	_06f8bc_jump:
		mov    $0x000035,%ebx
		jmp    _06f8c8_jump

	_06f8c3_jump:
		mov    $0x000008,%ebx

	_06f8c8_jump:
		mov    $_0ce044_data,%eax
		xor    %edx,%edx

	_06f8cf_jump:
		call   _01d444_func
		cmpw   $0x0000c8,_0ce096_data
		jl     _06f8e4_jump
		call   _06b940_func

	_06f8e4_jump:
		movw   $0x00ffff,_0ce096_data
		jmp    _06f93e_jump

	_06f8ef_jump:
		mov    _0ce0b0_data,%dh
		cmp    $0x000007,%dh
		je     _06f93e_jump
		cmp    $0x000008,%dh
		jne    _06f932_jump
		cmpw   $0x000000,_0ce086_data
		jl     _06f915_jump
		mov    $0xffffffff,%edx
		mov    %esp,%eax
		call   _06bb94_func

	_06f915_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _06f927_jump
		cmpb   $0x000008,_0ce0b0_data
		je     _06f93e_jump

	_06f927_jump:
		movw   $0x00005a,_0ce09a_data
		jmp    _06f93e_jump

	_06f932_jump:
		mov    $0xffffffff,%edx
		mov    %esp,%eax
		call   _06bb94_func

	_06f93e_jump:
		cmpw   $0x000003,_0cf254_data
		je     _06f96c_jump
		cmpb   $0x000002,_0ce0b1_data
		jne    _06f96c_jump
		cmpb   $0x00001f,_0ce0b0_data
		setne  %al
		and    $_0000ff_case,%eax
		je     _06f96c_jump
		call   _06baa8_func
		call   _06d5e8_func

	_06f96c_jump:
		cmpb   $0x000001,(%esp)
		jne    _06f99b_jump
		cmpw   $0x000004,_0ce086_data
		jle    _06f985_jump
		movw   $0x000004,_0ce086_data

	_06f985_jump:
		mov    _0ce084_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff6,%eax
		jge    _06f99b_jump
		movw   $0x00fff6,_0ce086_data

	_06f99b_jump:
		cmpw   $0x000002,_0cf282_data
		jne    _06f9f2_jump
		cmpw   $0x00000f,_0cf270_data
		jne    _06f9f2_jump
		mov    _0ce06c_data,%edx
		mov    _0cf284_data,%eax
		add    $0x000096,%edx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _06f9f2_jump
		mov    _0ce038_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    _0ce070_data,%ebx
		sub    $0x000064,%eax
		cmp    %ebx,%eax
		jge    _06f9f2_jump
		cmpb   $_0000ff_case,_0ce0ba_data
		je     _06f9f2_jump
		call   _07b8b0_func
		call   _03ca10_func

	_06f9f2_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_06f9fa_jump:
		ret    



_06f9fc_func:
		cmpb   $0x000000,_0ce172_data
		je     _06f9fa_jump
		mov    _0ce0d0_data,%eax
		call   _07af48_func
		jmp    _065f44_func



_06fa14_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		andb   $0x0000f7,_0cf220_data
		mov    _0ce94a_data,%bx
		dec    %ebx
		xor    %ah,%ah
		mov    %bx,_0ce94a_data
		mov    _0cf46e_data,%bh
		mov    %ah,_0ce950_data
		test   %bh,%bh
		jne    _06fa74_jump
		cmpb   $0x000003,_0ce0b1_data
		jne    _06fa52_jump
		cmpb   $0x000020,_0ce0b0_data
		je     _06fa59_jump

	_06fa52_jump:
		mov    $0x000001,%eax
		jmp    _06fa5b_jump

	_06fa59_jump:
		xor    %eax,%eax

	_06fa5b_jump:
		test   %eax,%eax
		je     _06fa74_jump
		movb   $0x000005,_0cf457_data
		mov    $0x000001,%ah
		mov    %edx,_0cdfb4_data
		mov    %ah,_0cf469_data

	_06fa74_jump:
		call   _06f9fc_func
		pop    %edx
		pop    %ebx
		ret    



_06fa7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000016,%ebx
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		xor    %ecx,%ecx
		call   _01d444_func
		mov    %cx,_0cf250_data
		xor    %ah,%ah
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ah,_0ce0af_data
		mov    %dx,_0ce086_data
		mov    _0cf44b_data,%dl
		mov    %bx,_0ce084_data
		test   %dl,%dl
		je     _06fad8_jump
		mov    _0cf2a2_data,%eax
		mov    _0ce06c_data,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,_0ce06c_data

	_06fad8_jump:
		mov    $0x000001,%dh
		mov    $0x000078,%edi
		xor    %esi,%esi
		mov    $_0ce044_data,%eax
		mov    %si,_0cf2a4_data
		mov    %dh,_0cf471_data
		mov    %di,_0ce09a_data
		mov    %dh,_0cf46e_data
		call   _07a640_func
		call   _06f9fc_func
		call   _01cbb4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06fb18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cf14c_data,%eax
		sar    $0x000010,%eax
		mov    _0ce06c_data,%edx
		sub    $0x00000a,%eax
		cmp    %edx,%eax
		jg     _06fb6a_jump
		xor    %eax,%eax
		mov    _0ce07a_data,%edx
		mov    _0ce0ad_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0xffffffec,%eax
		jge    _06fb55_jump
		mov    _0cf2c6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06fb6a_jump

	_06fb55_jump:
		mov    _0cf150_data,%eax
		sar    $0x000010,%eax
		mov    _0ce06c_data,%ebx
		add    $0x00000a,%eax
		cmp    %ebx,%eax
		jge    _06fb83_jump

	_06fb6a_jump:
		mov    $0x000001,%eax
		xor    %cl,%cl
		xor    %edx,%edx
		mov    %cl,_0ce0ba_data
		call   _02dd0c_func
		jmp    _06fd45_jump

	_06fb83_jump:
		cmpw   $0x0000b4,_0ce07c_data
		jle    _06fba7_jump
		mov    $0x000001,%eax
		xor    %bh,%bh
		xor    %edx,%edx
		mov    %bh,_0ce0ba_data
		call   _02dd0c_func
		jmp    _06fd45_jump

	_06fba7_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _06fbb9_jump
		cmpb   $0x000009,_0ce0b0_data
		je     _06fbc0_jump

	_06fbb9_jump:
		mov    $0x000001,%eax
		jmp    _06fbc2_jump

	_06fbc0_jump:
		xor    %eax,%eax

	_06fbc2_jump:
		test   %eax,%eax
		je     _06fc68_jump
		cmpb   $0x000003,_0ce0b1_data
		jne    _06fbdc_jump
		cmpb   $0x000016,_0ce0b0_data
		je     _06fbe3_jump

	_06fbdc_jump:
		mov    $0x000001,%eax
		jmp    _06fbe5_jump

	_06fbe3_jump:
		xor    %eax,%eax

	_06fbe5_jump:
		test   %eax,%eax
		je     _06fc68_jump
		testb  $0x000004,_0ce0c5_data
		je     _06fc68_jump
		cmpb   $0x00000a,_0ce0a6_data
		jne    _06fc20_jump
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06fc20_jump
		cmpb   $0x000006,_0ce0b1_data
		je     _06fc20_jump
		call   _06fa7c_func
		jmp    _06fc68_jump

	_06fc20_jump:
		xor    %eax,%eax
		mov    _0ce070_data,%edx
		mov    _0ce0ad_data,%al
		add    %eax,%edx
		mov    _0ce038_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		add    $0x000010,%eax
		cmp    %eax,%edx
		jle    _06fc68_jump
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		cmpw   $0x000000,_0ce086_data
		jge    _06fc68_jump
		xor    %ecx,%ecx
		mov    %cx,_0ce086_data

	_06fc68_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _06fc7a_jump
		cmpb   $0x000009,_0ce0b0_data
		je     _06fcad_jump

	_06fc7a_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _06fd45_jump
		mov    _0ce0b0_data,%dh
		cmp    $0x000016,%dh
		je     _06fc9b_jump
		cmp    $0x000020,%dh
		jne    _06fd45_jump

	_06fc9b_jump:
		mov    $_0ce044_data,%eax
		call   _01cca0_func
		test   %al,%al
		je     _06fd45_jump

	_06fcad_jump:
		mov    _0cf471_data,%bh
		dec    %bh
		mov    %bh,_0cf471_data
		jne    _06fd3c_jump
		cmpb   $0x000000,_0cf46d_data
		jne    _06fd3c_jump
		mov    $0x000002,%al
		mov    _0ce068_data,%ecx
		mov    %al,_0ce0ba_data
		test   %ecx,%ecx
		je     _06fd24_jump
		mov    $0x000040,%dl
		mov    _0ce0c5_data,%ah
		xor    %esi,%esi
		and    $0x0000fb,%ah
		mov    %esi,_0ce068_data
		mov    %ah,_0ce0c5_data
		mov    $_0ce044_data,%eax
		mov    %dl,_0cf471_data
		call   _06fa14_func
		cmpw   $0x000000,_0ce94a_data
		jge    _06fd24_jump
		mov    $0x000001,%dh
		mov    %bh,_0ce0ba_data
		xor    %eax,%eax
		mov    %dh,_0cf46d_data
		mov    %ax,_0ce94a_data

	_06fd24_jump:
		mov    _0ce0ba_data,%al
		mov    $0x00005a,%edx
		mov    %al,_0ce953_data
		mov    %dx,_0ce09a_data
		jmp    _06fd45_jump

	_06fd3c_jump:
		movw   $0x00ffff,_0ce08e_data

	_06fd45_jump:
		cmpl   $0x000000,_0ce068_data
		je     _06fd71_jump
		testb  $0x000004,_0ce0c5_data
		je     _06fd71_jump
		mov    _0cf254_data,%bx
		cmp    $0x000003,%bx
		je     _06fd71_jump
		cmp    $0x000004,%bx
		je     _06fd71_jump
		mov    $0x000001,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06fd71_jump:
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06fd78_func:
		push   %edx
		push   %esi
		call   _07bc28_func
		mov    _0ce0ba_data,%dl
		mov    _0ce098_data,%eax
		dec    %dl
		sar    $0x000010,%eax
		mov    %dl,_0ce0ba_data
		cmp    $0xffffffff,%eax
		jne    _06fded_jump
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce0b0_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _06fde4_jump
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _024cd0_func
		and    $_0000ff_case,%eax
		testb  $0x000010,_0924f4_data(%eax)
		je     _06fde4_jump
		movw   $0x00003c,_0ce09a_data
		jmp    _06fded_jump

	_06fde4_jump:
		movw   $0x000078,_0ce09a_data

	_06fded_jump:
		cmpb   $_0000ff_case,_0ce0ba_data
		jne    _06fe1c_jump
		cmpw   $0x000002,_0cf254_data
		sete   %al
		xor    %ah,%ah
		add    $0x000003,%eax
		xor    %esi,%esi
		mov    %ax,_0cf254_data
		call   _01cbb4_func
		mov    %si,_0cf296_data

	_06fe1c_jump:
		pop    %esi
		pop    %edx
		ret    



_06fe20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %ebp
		mov    _0cf282_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		cmpl   $0x000000,0x000024(%ecx)
		je     _06feff_jump
		mov    0x000028(%ecx),%eax
		mov    _0ce06c_data,%ebx
		sub    $0x000052,%eax
		cmp    %ebx,%eax
		jge    _06fee4_jump
		mov    0x000028(%ecx),%eax
		add    $0x000096,%eax
		cmp    %ebx,%eax
		jle    _06fee4_jump
		mov    0x00002c(%ecx),%eax
		mov    _0ce070_data,%edi
		add    $0x000060,%eax
		cmp    %edi,%eax
		jle    _06fee4_jump
		mov    %eax,_0ce070_data
		cmpb   $0x000002,_0ce0b1_data
		je     _06feda_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		mov    0x000040(%ecx),%eax
		mov    $0xffffffff,%ebx
		sar    $0x000010,%eax
		xor    %edx,%edx
		call   _055230_func
		mov    %ax,_0ce086_data
		mov    %dx,_0cf296_data
		xor    %dl,%dl
		mov    %bx,_0cf2aa_data
		mov    %dl,_0ce0b5_data
		mov    %dl,_0ce0b6_data
		mov    %dl,_0cf470_data
		jmp    _06fee4_jump

	_06feda_jump:
		mov    0x000042(%ecx),%ax
		mov    %ax,_0ce086_data

	_06fee4_jump:
		mov    _0cf2ae_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%ecx),%ebp
		add    $0x0000a8,%eax
		cmp    %ebp,%eax
		jge    _06feff_jump
		andb   $0x0000fb,0x000081(%ecx)

	_06feff_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ff08_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		xor    %edx,%edx
		mov    _0ce084_data,%bx
		mov    %edx,0x000004(%esp)
		test   %bx,%bx
		je     _0701fe_jump
		jle    _06ff32_jump
		mov    _0cf24c_data,%eax
		sar    $0x000010,%eax
		jmp    _06ff34_jump

	_06ff32_jump:
		xor    %eax,%eax

	_06ff34_jump:
		mov    _0cf248_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    %ax,0x000028(%esp)
		mov    _0cf268_data,%eax
		sar    $0x000010,%eax
		mov    _0ce952_data,%edx
		sar    $0x000002,%eax
		sar    $0x000010,%edx
		mov    %eax,0x000020(%esp)
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    _0cea1c_data,%ax
		xor    %edi,%edi
		test   %ax,%ax
		jle    _0701fe_jump

	_06ff7f_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000004,_092536_data(,%eax,4)
		je     _0701d2_jump
		lea    0x000018(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x00001c(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    0x00000e(%esp),%edx
		mov    %eax,%ebx
		sar    $0x000010,%edx
		sar    $0x000003,%ebx
		add    %ebx,%edx
		mov    %dx,0x000010(%esp)
		mov    %eax,%edx
		sar    $0x000002,%edx
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)
		testb  $0x000020,0x000081(%esi)
		je     _07001e_jump
		lea    0x000014(%esp),%eax
		lea    0x00000c(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000028(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d7e0_func
		mov    _0ce08e_data,%ax
		cmp    0x000034(%esi),%ax
		sete   %al
		xor    %ebx,%ebx
		mov    0x00000a(%esp),%edx
		mov    %al,%bl
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000074(%esi),%al
		add    %edx,%eax
		add    %ebx,%eax
		mov    %ax,0x00001c(%esp)
		jmp    _07002e_jump

	_07001e_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x00001c(%esp)

	_07002e_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		mov    0x00001c(%esp),%edx
		add    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,0x000018(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000010,_092537_data(,%eax,4)
		je     _070075_jump
		mov    0x000010(%esp),%ecx
		mov    %edx,%ebx
		mov    0x000008(%esp),%esi
		add    $0x000002,%ebx
		add    $0x000006,%ecx
		sub    $0x00000c,%esi
		mov    %bx,0x00001c(%esp)
		mov    %cx,0x000010(%esp)
		mov    %si,0x000008(%esp)

	_070075_jump:
		mov    0x000010(%esp),%esi
		mov    0x000008(%esp),%eax
		mov    _0ce084_data,%dx
		add    %eax,%esi
		test   %dx,%dx
		jle    _0700bd_jump
		mov    _0ce082_data,%eax
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		lea    (%edx,%eax,1),%ecx
		mov    %edx,%ebx
		sub    %eax,%ebx
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _0700b7_jump
		cmp    %ecx,%eax
		jg     _0700b7_jump
		mov    $0x000001,%eax
		jmp    _0700b9_jump

	_0700b7_jump:
		xor    %eax,%eax

	_0700b9_jump:
		test   %eax,%eax
		jne    _0700ef_jump

	_0700bd_jump:
		mov    _0ce082_data,%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		mov    %edx,%ecx
		sub    %eax,%ecx
		lea    (%edx,%eax,1),%ebx
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _0700e5_jump
		cmp    %ecx,%eax
		jg     _0700e5_jump
		mov    $0x000001,%eax
		jmp    _0700e7_jump

	_0700e5_jump:
		xor    %eax,%eax

	_0700e7_jump:
		test   %eax,%eax
		je     _0701d2_jump

	_0700ef_jump:
		mov    0x00001c(%esp),%eax
		mov    0x000018(%esp),%ebx
		mov    _0cf24c_data,%si
		add    %ebx,%eax
		mov    0x00001a(%esp),%ebx
		movswl %ax,%edx
		sar    $0x000010,%ebx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _07011e_jump
		cmp    %ecx,%eax
		jg     _07011e_jump
		mov    $0x000001,%eax
		jmp    _070120_jump

	_07011e_jump:
		xor    %eax,%eax

	_070120_jump:
		test   %eax,%eax
		jne    _0701c8_jump
		mov    0x000020(%esp),%ecx
		mov    0x00001a(%esp),%ebx
		add    %ecx,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _070149_jump
		cmp    %ecx,%eax
		jg     _070149_jump
		mov    $0x000001,%eax
		jmp    _07014b_jump

	_070149_jump:
		xor    %eax,%eax

	_07014b_jump:
		test   %eax,%eax
		jne    _0701c8_jump
		mov    0x000020(%esp),%eax
		mov    0x00001a(%esp),%ebx
		mov    %edx,%ecx
		add    %eax,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		cmp    %ebx,%eax
		jl     _070174_jump
		cmp    %ecx,%eax
		jg     _070174_jump
		mov    $0x000001,%eax
		jmp    _070176_jump

	_070174_jump:
		xor    %eax,%eax

	_070176_jump:
		test   %eax,%eax
		jne    _0701c8_jump
		mov    0x000020(%esp),%ebx
		mov    %edx,%ecx
		add    %ebx,%esi
		mov    0x00001a(%esp),%ebx
		movswl %si,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jl     _07019b_jump
		cmp    %ecx,%eax
		jg     _07019b_jump
		mov    $0x000001,%eax
		jmp    _07019d_jump

	_07019b_jump:
		xor    %eax,%eax

	_07019d_jump:
		test   %eax,%eax
		jne    _0701c8_jump
		mov    0x000020(%esp),%ecx
		mov    0x00001a(%esp),%ebx
		add    %ecx,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _0701c2_jump
		cmp    %ecx,%eax
		jg     _0701c2_jump
		mov    $0x000001,%eax
		jmp    _0701c4_jump

	_0701c2_jump:
		xor    %eax,%eax

	_0701c4_jump:
		test   %eax,%eax
		je     _0701d2_jump

	_0701c8_jump:
		movl   $0x000001,0x000004(%esp)
		jmp    _0701fe_jump

	_0701d2_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0ce952_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc7a0_data,%esi
		mov    _0cea1c_data,%dx
		add    %eax,%esi
		cmp    %dx,%di
		jl     _06ff7f_jump

	_0701fe_jump:
		mov    0x000004(%esp),%eax
		add    $0x00002c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07020c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf485_data,%bl
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,8),%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $_0cea1e_data,%eax
		mov    _0ce06c_data,%dx
		mov    %dx,(%eax)
		mov    _0ce070_data,%dx
		mov    %dx,0x000002(%eax)
		mov    _0ce0b1_data,%dl
		mov    %dl,0x000008(%eax)
		mov    _0ce0b0_data,%dl
		mov    %dl,0x000009(%eax)
		mov    _0ce0ae_data,%dl
		mov    %dl,0x00000a(%eax)
		mov    _0ce0af_data,%dl
		mov    %dl,0x00000b(%eax)
		mov    _0ce0c5_data,%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    %dl,0x00000c(%eax)
		mov    _0ce09e_data,%dl
		mov    %dl,0x000011(%eax)
		mov    _0ce172_data,%dl
		mov    %dl,0x000010(%eax)
		test   %dl,%dl
		je     _0702b8_jump
		mov    _0ce0d0_data,%edx
		mov    0x000028(%edx),%cx
		mov    %cx,0x000004(%eax)
		mov    0x00002c(%edx),%cx
		mov    %cx,0x000006(%eax)
		mov    0x00006a(%edx),%cl
		mov    %cl,0x00000d(%eax)
		mov    0x00006b(%edx),%cl
		mov    %cl,0x00000e(%eax)
		mov    0x000081(%edx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    %dl,0x00000f(%eax)

	_0702b8_jump:
		inc    %bl
		cmp    $0x000064,%bl
		jbe    _0702c9_jump
		mov    $0x000001,%ah
		xor    %bl,%bl
		mov    %ah,_0cf47f_data

	_0702c9_jump:
		mov    %bl,_0cf485_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0702d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _07030f_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    0x000060(%eax),%dx
		cmp    $0x0000a0,%dx
		je     _0703f6_jump
		cmp    $0x00009f,%dx
		je     _0703f6_jump

	_07030f_jump:
		cmpb   $0x000000,_0ce0b1_data
		jne    _0703f6_jump
		mov    _0ce0b0_data,%dl
		cmp    $0x00000d,%dl
		je     _0703f6_jump
		cmp    $0x00000b,%dl
		je     _0703f6_jump
		cmp    $0x00000c,%dl
		je     _0703f6_jump
		cmp    $0x000012,%dl
		je     _0703f6_jump
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _070354_jump
		neg    %eax

	_070354_jump:
		cmp    $0x000003,%eax
		jle    _0703a5_jump
		mov    _0ce0b0_data,%cl
		cmp    $0x000028,%cl
		setne  %al
		and    $_0000ff_case,%eax
		je     _0703a5_jump
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    %cl,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		jne    _0703f6_jump
		cmp    $0x000008,%cl
		je     _0703f6_jump
		cmp    $0x000034,%cl
		je     _0703f6_jump
		cmp    $0x000035,%cl
		je     _0703f6_jump
		mov    $0x000029,%ebx
		jmp    _0703ea_jump

	_0703a5_jump:
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0703b3_jump
		neg    %eax

	_0703b3_jump:
		cmp    $0x000002,%eax
		jg     _0703f6_jump
		mov    _0ce0b0_data,%ch
		cmp    $0x000028,%ch
		jne    _0703f6_jump
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0ce050_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %ch,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _0703f6_jump
		mov    $0x00002a,%ebx

	_0703ea_jump:
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		call   _01d444_func

	_0703f6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0703fc_func:
		push   %edx
		cmpb   $0x000000,_0ce0b1_data
		jne    _070453_jump
		cmpb   $0x000028,_0ce0b0_data
		jne    _070453_jump
		testb  $0x000008,_0ce0c5_data
		je     _07041f_jump
		mov    $0x000001,%eax
		jmp    _070424_jump

	_07041f_jump:
		mov    $0xffffffff,%eax

	_070424_jump:
		mov    %eax,%edx
		mov    _0ce082_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		cmp    $0x000000,%eax
		je     _07043f_jump
		mov    $0x000001,%eax
		jg     _07043f_jump
		neg    %eax

	_07043f_jump:
		cmp    %edx,%eax
		jne    _07044c_jump
		movb   $0x00004f,_0ce0ae_data
		pop    %edx
		ret    

	_07044c_jump:
		movb   $0x000050,_0ce0ae_data

	_070453_jump:
		pop    %edx
		ret    



_070458_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0xffffffff,%edx
		mov    $_0ce044_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0ce09a_data
		mov    %bx,_0cf2a6_data
		mov    %bx,_0cf2a4_data
		call   _01dc5c_func
		mov    $_0ce044_data,%eax
		call   _01e3bc_func
		call   _06f3b4_func
		call   _06cc58_func
		call   _0590e8_func
		mov    _0ce086_data,%si
		test   %si,%si
		jle    _0704ae_jump
		call   _058298_func
		jmp    _0704b5_jump

	_0704ae_jump:
		jge    _0704b5_jump
		call   _0581b8_func

	_0704b5_jump:
		mov    _0ce084_data,%ax
		test   %ax,%ax
		jge    _0704c7_jump
		call   _05886c_func
		jmp    _0704ce_jump

	_0704c7_jump:
		jle    _0704ce_jump
		call   _0587e8_func

	_0704ce_jump:
		xor    %eax,%eax
		call   _065de4_func
		cmpb   $0x000001,_0cf44b_data
		jne    _0704f2_jump
		mov    _0cf21e_data,%ax
		xor    %dl,%dl
		mov    %ax,_0cf220_data
		mov    %dl,_0cf44b_data

	_0704f2_jump:
		mov    $_0ce044_data,%eax
		call   _01cca0_func
		test   %al,%al
		jne    _07051f_jump
		cmpb   $0x000002,_0ce0b1_data
		jne    _070512_jump
		cmpb   $0x000008,_0ce0b0_data
		je     _070519_jump

	_070512_jump:
		mov    $0x000001,%eax
		jmp    _07051b_jump

	_070519_jump:
		xor    %eax,%eax

	_07051b_jump:
		test   %eax,%eax
		je     _07057c_jump

	_07051f_jump:
		mov    $_0ce044_data,%eax
		mov    $0x000080,%cl
		call   _06fa14_func
		mov    _0ce0c5_data,%bh
		mov    %cl,_0cf471_data
		and    $0x0000fb,%bh
		mov    $0x000001,%ch
		mov    %bh,_0ce0c5_data
		mov    _0ce94a_data,%bx
		mov    %ch,_0cf469_data
		test   %bx,%bx
		jl     _070564_jump
		mov    $0x000002,%dl
		mov    %dl,_0ce0ba_data
		mov    %dl,_0ce953_data
		jmp    _07057c_jump

	_070564_jump:
		xor    %al,%al
		xor    %ecx,%ecx
		mov    %al,_0ce0ba_data
		mov    $0x000001,%ah
		mov    %cx,_0ce94a_data
		mov    %ah,_0cf46d_data

	_07057c_jump:
		mov    $_0ce044_data,%eax
		call   _055b7c_func
		call   _07020c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070590_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_0ce044_data,%eax
		xor    %edx,%edx
		call   _024f68_func
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _0705b8_jump
		xor    %edx,%edx
		mov    %dx,_0ce084_data

	_0705b8_jump:
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0ce0b0_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _0705df_jump
		xor    %al,%al
		jmp    _0705e1_jump

	_0705df_jump:
		mov    $0x000002,%al

	_0705e1_jump:
		cmpw   $0x000000,_0ce086_data
		jle    _070643_jump
		mov    _0ce084_data,%eax
		mov    _0ce070_data,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    _0ce0ad_data,%al
		add    %edx,%eax
		sar    $0x000004,%eax
		mov    %edx,_0ce070_data
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0ce06c_data,%ecx
		mov    _0ce0ac_data,%al
		add    %ecx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e1b4_func
		mov    _0ce084_data,%edx
		mov    _0ce070_data,%esi
		sar    $0x000010,%edx
		add    %edx,%esi
		xor    %ah,%ah
		mov    %esi,_0ce070_data
		jmp    _070653_jump

	_070643_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_0ce044_data,%eax
		call   _024cd0_func
		xor    %ah,%ah

	_070653_jump:
		cwtl   
		testb  $0x000002,_0924f4_data(%eax)
		je     _0706c1_jump
		mov    _0ce084_data,%eax
		mov    _0ce070_data,%edi
		sar    $0x000010,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    _0ce0aa_data,%al
		mov    _0924f4_data(%eax),%cl
		mov    %edi,_0ce070_data
		test   $0x000002,%cl
		jne    _0706a3_jump
		cmpw   $0x000000,_0ce086_data
		jge    _0706a3_jump
		xor    %esi,%esi
		lea    0x000004(%edi),%ebp
		mov    %si,_0ce086_data
		mov    %ebp,_0ce070_data
		jmp    _0706ad_jump

	_0706a3_jump:
		mov    $_0ce044_data,%eax
		call   _0258a0_func

	_0706ad_jump:
		xor    %edi,%edi
		mov    $0xffffffff,%eax
		mov    %di,_0ce084_data
		mov    %ax,_0ce08e_data

	_0706c1_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_0706c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000010,_092535_data(,%eax,4)
		je     _070706_jump
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		call   _055230_func
		mov    %eax,%ebx
		jmp    _07070a_jump

	_070706_jump:
		mov    0x000040(%edx),%bx

	_07070a_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000020,_092535_data(,%eax,4)
		je     _070727_jump
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		call   _055230_func
		jmp    _07072b_jump

	_070727_jump:
		mov    0x000042(%edx),%ax

	_07072b_jump:
		mov    _0ce084_data,%cx
		add    %ebx,%ecx
		mov    %ecx,%esi
		mov    0x00004e(%edx),%bx
		mov    _0ce086_data,%di
		add    %ebx,%esi
		add    0x00004c(%edx),%di
		mov    %cx,_0ce084_data
		mov    %edi,%ebx
		mov    %di,_0ce086_data
		add    %eax,%ebx
		mov    %si,_0ce084_data
		mov    %bx,_0ce086_data
		call   _070590_func
		cmpl   $0x000000,0x000024(%edx)
		jne    _07077b_jump
		movw   $0x00ffff,_0ce08e_data

	_07077b_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070784_func:
		push   %ecx
		push   %edx
		cmpb   $0x000001,_0cf44b_data
		jne    _07082e_jump
		cmpw   $0x000000,_0cf250_data
		jne    _0707d6_jump
		cmpw   $0x000000,_0ce086_data
		jne    _0707d6_jump
		call   _041d08_func
		test   %ax,%ax
		je     _0707c1_jump
		testb  $0x000008,_0ce0c5_data
		jne    _0707c1_jump
		mov    $0x000001,%eax
		jmp    _070805_jump

	_0707c1_jump:
		call   _041c98_func
		test   %ax,%ax
		je     _07080a_jump
		testb  $0x000008,_0ce0c5_data
		je     _07080a_jump
		jmp    _070803_jump

	_0707d6_jump:
		cmpw   $0x000000,_0cf250_data
		jle    _0707f0_jump
		testb  $0x000008,_0ce0c5_data
		jne    _0707f0_jump
		mov    $0x000001,%eax
		jmp    _070805_jump

	_0707f0_jump:
		cmpw   $0x000000,_0cf250_data
		jge    _07080a_jump
		testb  $0x000008,_0ce0c5_data
		je     _07080a_jump

	_070803_jump:
		xor    %eax,%eax

	_070805_jump:
		call   _06deb8_func

	_07080a_jump:
		cmpb   $0x000000,_09294c_data
		jne    _07081b_jump
		call   _06e4b0_func
		pop    %edx
		pop    %ecx
		ret    

	_07081b_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cf16a_data
		mov    %cx,_0cf188_data
		pop    %edx
		pop    %ecx
		ret    

	_07082e_jump:
		testb  $0x000060,_0cf221_data
		jne    _0708e2_jump
		call   _041d08_func
		test   %ax,%ax
		jne    _07084e_jump
		testb  $0x000018,_0cf221_data
		je     _070858_jump

	_07084e_jump:
		mov    $0x000001,%eax
		call   _06deb8_func

	_070858_jump:
		call   _041c98_func
		test   %ax,%ax
		je     _070872_jump
		testb  $0x000018,_0cf221_data
		jne    _070872_jump
		xor    %eax,%eax
		call   _06deb8_func

	_070872_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _070899_jump
		cmpb   $0x000000,_09294c_data
		jne    _070899_jump
		testb  $0x000018,_0cf221_data
		jne    _070899_jump
		call   _06d9a0_func
		incb   _09294c_data

	_070899_jump:
		call   _041de8_func
		test   %ax,%ax
		je     _0708c0_jump
		cmpb   $0x000000,_09294c_data
		jne    _0708c0_jump
		testb  $0x000018,_0cf221_data
		jne    _0708c0_jump
		call   _06dce0_func
		incb   _09294c_data

	_0708c0_jump:
		cmpb   $0x000000,_09294c_data
		jne    _07081b_jump
		testb  $0x000018,_0cf221_data
		jne    _07081b_jump
		call   _06e4b0_func
		pop    %edx
		pop    %ecx
		ret    

	_0708e2_jump:
		call   _041d08_func
		test   %ax,%ax
		je     _0708f3_jump
		xor    %eax,%eax
		call   _06deb8_func

	_0708f3_jump:
		call   _041c98_func
		test   %ax,%ax
		je     _070907_jump
		mov    $0x000001,%eax
		call   _06deb8_func

	_070907_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _070925_jump
		cmpb   $0x000000,_09294c_data
		jne    _070925_jump
		call   _06d9a0_func
		incb   _09294c_data

	_070925_jump:
		call   _041de8_func
		test   %ax,%ax
		je     _070943_jump
		cmpb   $0x000000,_09294c_data
		jne    _070943_jump
		call   _06dce0_func
		incb   _09294c_data

	_070943_jump:
		cmpb   $0x000000,_09294c_data
		jne    _070954_jump
		call   _06e4b0_func
		pop    %edx
		pop    %ecx
		ret    

	_070954_jump:
		xor    %edx,%edx
		mov    %dx,_0cf16a_data
		mov    %dx,_0cf188_data
		pop    %edx
		pop    %ecx
		ret    



_070968_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    %dx,_0cf2a6_data
		mov    %dx,_0cf2a4_data
		call   _06fb18_func
		test   %al,%al
		je     _070ca4_jump
		mov    _0ce0b5_data,%ah
		inc    %ah
		mov    %ah,_0ce0b5_data
		cmp    $0x000003,%ah
		jbe    _0709a4_jump
		xor    %dh,%dh
		mov    %dh,_0ce0b5_data

	_0709a4_jump:
		xor    %eax,%eax
		mov    _0ce06c_data,%bx
		mov    _0ce0ac_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce070_data,%cx
		mov    _0ce0ad_data,%al
		add    %ecx,%eax
		cwtl   
		mov    %eax,%edx
		mov    _0ce036_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		mov    _0ce078_data,%edx
		mov    %ax,_0ce098_data
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _0ce0ac_data,%al
		add    %edx,%eax
		add    $0x00001e,%eax
		test   %eax,%eax
		jl     _070a2b_jump
		xor    %eax,%eax
		mov    _0ce07a_data,%edx
		mov    _0ce0ad_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		add    $0x000014,%eax
		test   %eax,%eax
		jl     _070a2b_jump
		cmpw   $0x000122,_0ce07a_data
		jg     _070a2b_jump
		cmpw   $0x0000c8,_0ce07c_data
		jle    _070a38_jump

	_070a2b_jump:
		xor    %bl,%bl
		mov    %bl,_0ce0ba_data
		call   _06fd78_func

	_070a38_jump:
		mov    _0ce098_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _070a7d_jump
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce0b0_data,%al
		testb  $0x000008,0x000007(%edx,%eax,8)
		je     _070a7d_jump
		call   _02da44_func
		test   %ax,%ax
		je     _070a7d_jump
		mov    $0x000001,%eax
		xor    %edx,%edx
		call   _02dd0c_func

	_070a7d_jump:
		xor    %cl,%cl
		mov    $_0ce044_data,%eax
		mov    %cl,_09294c_data
		call   _01dc5c_func
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _070aa6_jump
		mov    $_0ce044_data,%eax
		call   _01e3bc_func

	_070aa6_jump:
		mov    _0ce0b1_data,%ch
		cmp    $0x000003,%ch
		je     _070c27_jump
		cmp    $0x000006,%ch
		jne    _070ac3_jump
		cmpb   $0x00000e,_0ce0b0_data
		je     _070aca_jump

	_070ac3_jump:
		mov    $0x000001,%eax
		jmp    _070acc_jump

	_070aca_jump:
		xor    %eax,%eax

	_070acc_jump:
		test   %eax,%eax
		je     _070c27_jump
		call   *_0c3f5c_data
		test   %ax,%ax
		je     _070b03_jump
		mov    _0ce0b0_data,%dl
		cmp    $0x000004,%dl
		je     _070b03_jump
		cmp    $0x000002,%dl
		je     _070b03_jump
		cmp    $0x000008,%dl
		je     _070b03_jump
		cmp    $0x000005,%dl
		je     _070b03_jump
		cmp    $0x000003,%dl
		je     _070b03_jump
		call   _06eb38_func

	_070b03_jump:
		call   *_0c3f64_data
		test   %ax,%ax
		je     _070b13_jump
		call   _06ea20_func

	_070b13_jump:
		call   *_0c3f60_data
		test   %ax,%ax
		cmpb   $0x000000,_0ce174_data
		je     _070b43_jump
		cmpb   $0x00000c,_0ce0b0_data
		jne    _070b33_jump
		call   _065dc0_func

	_070b33_jump:
		call   *_0c3f5c_data
		test   %ax,%ax
		jne    _070b43_jump
		call   _06595c_func

	_070b43_jump:
		call   _041d08_func
		test   %ax,%ax
		je     _070b57_jump
		mov    $0x000001,%eax
		call   _06deb8_func

	_070b57_jump:
		call   _041c98_func
		test   %ax,%ax
		je     _070b68_jump
		xor    %eax,%eax
		call   _06deb8_func

	_070b68_jump:
		call   _041d78_func
		test   %ax,%ax
		je     _070b7d_jump
		call   _06d9a0_func
		incb   _09294c_data

	_070b7d_jump:
		call   _041de8_func
		test   %ax,%ax
		je     _070b92_jump
		call   _06dce0_func
		incb   _09294c_data

	_070b92_jump:
		cmpb   $0x000000,_09294c_data
		jne    _070ba0_jump
		call   _06e4b0_func

	_070ba0_jump:
		mov    _0ce078_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffec,%eax
		jge    _070bc0_jump
		cmpw   $0x000000,_0ce084_data
		jge    _070bc0_jump
		xor    %edx,%edx
		mov    %dx,_0ce084_data

	_070bc0_jump:
		cmpw   $0x0000d2,_0ce07a_data
		jle    _070bde_jump
		cmpw   $0x000000,_0ce084_data
		jle    _070bde_jump
		xor    %esi,%esi
		mov    %si,_0ce084_data

	_070bde_jump:
		cmpw   $0x000003,_0ce07c_data
		jge    _070bfb_jump
		cmpw   $0x000000,_0ce086_data
		jge    _070bfb_jump
		xor    %edx,%edx
		mov    %dx,_0ce086_data

	_070bfb_jump:
		xor    %edx,%edx
		mov    _0ce07a_data,%eax
		mov    _0ce0ad_data,%dl
		sar    $0x000010,%eax
		add    %edx,%eax
		cmp    $0x0000be,%eax
		jle    _070c27_jump
		cmpw   $0x000000,_0ce086_data
		jle    _070c27_jump
		xor    %ecx,%ecx
		mov    %cx,_0ce086_data

	_070c27_jump:
		mov    _0ce086_data,%si
		test   %si,%si
		jle    _070c3a_jump
		call   _058298_func
		jmp    _070c41_jump

	_070c3a_jump:
		jge    _070c41_jump
		call   _0581b8_func

	_070c41_jump:
		mov    _0ce084_data,%ax
		test   %ax,%ax
		jge    _070c53_jump
		call   _05886c_func
		jmp    _070c5a_jump

	_070c53_jump:
		jle    _070c5a_jump
		call   _0587e8_func

	_070c5a_jump:
		testb  $0x000004,_0ce0c5_data
		je     _070c6d_jump
		mov    $_0ce044_data,%eax
		call   _055b7c_func

	_070c6d_jump:
		cmpw   $0x000000,_0cf288_data
		jne    _070ca4_jump
		cmpw   $0x000000,_0cf272_data
		jne    _070ca4_jump
		push   $_0cf26a_data
		mov    $_0cf24e_data,%ecx
		mov    $_0cf24c_data,%ebx
		mov    $_0cf24a_data,%edx
		mov    $_0ce044_data,%eax
		call   _01d928_func
		call   _02ec18_func

	_070ca4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070cac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		xor    %edx,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0cf2a6_data
		mov    %dx,_0cf2a4_data
		xor    %edx,%edx
		call   _0722cc_func
		call   _06fb18_func
		test   %al,%al
		je     _07127a_jump
		xor    %eax,%eax
		mov    _0ce06c_data,%bx
		mov    _0ce0ac_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce070_data,%cx
		mov    _0ce0ad_data,%al
		add    %ecx,%eax
		cwtl   
		mov    %eax,%edx
		mov    _0ce036_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		mov    %ax,_0ce098_data
		call   _02dbc8_func
		mov    _0cf2c6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _070d4c_jump
		xor    %eax,%eax
		mov    _0ce07a_data,%edx
		mov    _0ce0ad_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		test   %eax,%eax
		jge    _070d4c_jump
		xor    %esi,%esi
		mov    %si,_0ce086_data

	_070d4c_jump:
		mov    _0ce098_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _070d91_jump
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce0b0_data,%al
		testb  $0x000008,0x000007(%edx,%eax,8)
		je     _070d91_jump
		call   _02da44_func
		test   %ax,%ax
		je     _070d91_jump
		mov    $0x000001,%eax
		xor    %edx,%edx
		call   _02dd0c_func

	_070d91_jump:
		testb  $0x000080,_0cf221_data
		je     _070db6_jump
		mov    _0ce098_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _070db6_jump
		cmpw   $0x000000,_0ce09e_data
		jne    _070db6_jump
		call   _05a734_func

	_070db6_jump:
		xor    %cl,%cl
		mov    $_0ce044_data,%eax
		mov    %cl,_09294c_data
		call   _01dc5c_func
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _070de1_jump
		mov    $_0ce044_data,%eax
		call   _01e3bc_func
		jmp    _070def_jump

	_070de1_jump:
		xor    %eax,%eax
		mov    %ax,_0ce086_data
		mov    %ax,_0ce084_data

	_070def_jump:
		mov    _0cf254_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _070ed3_jump
		xor    %eax,%eax
		mov    _0ce0b1_data,%al
		mov    _0ce050_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce0b0_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _070ed3_jump
		cmpb   $0x000000,_0ce0b1_data
		jne    _070e62_jump
		mov    _0ce0b0_data,%ah
		cmp    $0x000004,%ah
		je     _070e5c_jump
		cmp    $0x000005,%ah
		je     _070e5c_jump
		cmp    $0x000006,%ah
		je     _070e5c_jump
		cmp    $0x000007,%ah
		je     _070e5c_jump
		cmp    $0x000009,%ah
		je     _070e5c_jump
		cmp    $0x00000a,%ah
		je     _070e5c_jump
		mov    $0x000001,%eax
		jmp    _070e5e_jump

	_070e5c_jump:
		xor    %eax,%eax

	_070e5e_jump:
		test   %eax,%eax
		jne    _070eae_jump

	_070e62_jump:
		mov    _0ce0b1_data,%ch
		cmp    $0x000001,%ch
		jne    _070e7d_jump
		cmp    _0ce0b0_data,%ch
		setne  %al
		and    $_0000ff_case,%eax
		jne    _070eae_jump

	_070e7d_jump:
		mov    _0ce0b1_data,%dl
		cmp    $0x000003,%dl
		jne    _070ed3_jump
		mov    _0ce0b0_data,%dh
		cmp    $0x000001,%dh
		je     _070ea8_jump
		cmp    %dl,%dh
		je     _070ea8_jump
		cmp    $0x000002,%dh
		je     _070ea8_jump
		cmp    $0x000004,%dh
		je     _070ea8_jump
		mov    $0x000001,%eax
		jmp    _070eaa_jump

	_070ea8_jump:
		xor    %eax,%eax

	_070eaa_jump:
		test   %eax,%eax
		je     _070ed3_jump

	_070eae_jump:
		cmpw   $0x000000,_0cf256_data
		je     _070ebf_jump
		mov    $0x000015,%ebx
		jmp    _070ec4_jump

	_070ebf_jump:
		mov    $0x000014,%ebx

	_070ec4_jump:
		mov    $0x000003,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func

	_070ed3_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _070ee5_jump
		cmpb   $0x000008,_0ce0b0_data
		je     _070ef7_jump

	_070ee5_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _070f01_jump
		cmpb   $0x00001f,_0ce0b0_data
		jne    _070f01_jump

	_070ef7_jump:
		call   _06f3b4_func
		jmp    _07104a_jump

	_070f01_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _070f93_jump
		mov    _0ce0b0_data,%dl
		cmp    $0x000010,%dl
		jne    _070f41_jump
		call   _07aac0_func
		mov    _0cf272_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _070f50_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		movw   $0x000001,0x000056(%edx,%eax,4)
		jmp    _070f50_jump

	_070f41_jump:
		cmp    $0x000015,%dl
		je     _070f4b_jump
		cmp    $0x000014,%dl
		jne    _070f50_jump

	_070f4b_jump:
		call   _06f2cc_func

	_070f50_jump:
		mov    _0ce0b0_data,%bh
		cmp    $0x000016,%bh
		setne  %al
		and    $_0000ff_case,%eax
		je     _07104a_jump
		cmp    $0x000017,%bh
		setne  %al
		and    $_0000ff_case,%eax
		je     _07104a_jump
		cmp    $0x000020,%bh
		setne  %al
		and    $_0000ff_case,%eax
		je     _07104a_jump
		call   _06cc58_func
		jmp    _07104a_jump

	_070f93_jump:
		call   *_0c3f58_data
		test   %ax,%ax
		je     _070fa3_jump
		call   _06eb78_func

	_070fa3_jump:
		call   *_0c3f5c_data
		test   %ax,%ax
		je     _070fb3_jump
		call   _06eb38_func

	_070fb3_jump:
		call   *_0c3f64_data
		test   %ax,%ax
		je     _070fc3_jump
		call   _06ea20_func

	_070fc3_jump:
		call   *_0c3f60_data
		test   %ax,%ax
		cmpb   $0x000000,_0ca8c5_data
		je     _070fee_jump
		call   _0420c0_func
		test   %ax,%ax
		je     _070fee_jump
		call   _042088_func
		test   %ax,%ax
		je     _070fee_jump
		call   _07b8b0_func

	_070fee_jump:
		cmpb   $0x000000,_0ce174_data
		je     _071015_jump
		cmpb   $0x00000c,_0ce0b0_data
		jne    _071005_jump
		call   _065dc0_func

	_071005_jump:
		call   *_0c3f5c_data
		test   %ax,%ax
		jne    _071015_jump
		call   _06595c_func

	_071015_jump:
		mov    _0ce0b1_data,%ch
		cmp    $0x000007,%ch
		jne    _071027_jump
		call   _06ee70_func
		jmp    _071045_jump

	_071027_jump:
		cmp    $0x000002,%ch
		jne    _071033_jump
		call   _06f3b4_func
		jmp    _071045_jump

	_071033_jump:
		call   *_0c3f58_data
		test   %ax,%ax
		jne    _071045_jump
		movb   $0x000001,_0cf470_data

	_071045_jump:
		call   _070784_func

	_07104a_jump:
		mov    _0cf221_data,%al
		test   $0x000060,%al
		je     _0710db_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000005,%edx
		mov    $_0ce044_data,%eax
		call   _01d7e0_func
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		lea    (%edx,%eax,1),%ebx
		mov    _0ce0c8_data,%eax
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		mov    _0ce0cc_data,%edx
		mov    %ebx,0x000028(%eax)
		mov    %ebx,0x000028(%edx)
		xor    %ecx,%ecx
		mov    0x00000a(%esp),%ebx
		mov    0x000074(%eax),%cl
		sar    $0x000010,%ebx
		sub    %ecx,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    %ebx,0x00002c(%edx)
		cmpl   $0x000000,0x000024(%edx)
		jne    _0710c2_jump
		mov    %edx,%eax
		call   _01f3d4_func

	_0710c2_jump:
		mov    _0ce0c8_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _071190_jump
		call   _01f3d4_func
		jmp    _071190_jump

	_0710db_jump:
		test   $0x000018,%al
		je     _071190_jump
		and    $0x000018,%al
		cmp    $0x000008,%al
		jne    _071126_jump
		mov    _0cf221_data,%ah
		and    $0x0000e6,%ah
		mov    $0x000003,%ebx
		mov    %ah,%dl
		mov    %ah,_0cf221_data
		or     $0x000011,%dl
		mov    $_0ce044_data,%eax
		mov    %dl,_0cf221_data
		call   _07af48_func
		mov    $0x000001,%edx
		mov    $_0ce044_data,%eax
		call   _01d444_func
		jmp    _071190_jump

	_071126_jump:
		cmpb   $0x000001,_0ce0b1_data
		jne    _07113f_jump
		mov    _0ce0b0_data,%dh
		cmp    $0x000003,%dh
		je     _07116d_jump
		cmp    $0x000007,%dh
		je     _07116d_jump

	_07113f_jump:
		cmpb   $0x000002,_0ce0b1_data
		je     _07116d_jump
		mov    $0x000003,%ebx
		mov    _0cf221_data,%cl
		mov    $0x000001,%edx
		or     $0x000001,%cl
		mov    $_0ce044_data,%eax
		mov    %cl,_0cf221_data
		call   _01d444_func
		jmp    _071190_jump

	_07116d_jump:
		mov    _0cf221_data,%al
		and    $0x000018,%al
		cmp    $0x000018,%al
		jne    _071190_jump
		cmpb   $0x000002,_0ce0b1_data
		setne  %al
		and    $_0000ff_case,%eax
		je     _071190_jump
		andb   $0x0000e7,_0cf221_data

	_071190_jump:
		mov    _0ce08c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0711a2_jump
		call   _0706c8_func

	_0711a2_jump:
		call   _06ff08_func
		test   %ax,%ax
		je     _0711d1_jump
		cmpb   $0x000007,_0ce0b1_data
		jne    _0711ba_jump
		call   _06f140_func

	_0711ba_jump:
		xor    %ecx,%ecx
		mov    %cx,_0ce084_data
		mov    %cx,_0cf250_data
		mov    %cx,_0ce08c_data

	_0711d1_jump:
		mov    _0cf282_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0711e3_jump
		call   _06fe20_func

	_0711e3_jump:
		call   _0702d4_func
		call   _0590e8_func
		mov    _0ce086_data,%ax
		test   %ax,%ax
		jle    _0711ff_jump
		call   _058298_func
		jmp    _071206_jump

	_0711ff_jump:
		jge    _071206_jump
		call   _0581b8_func

	_071206_jump:
		mov    _0ce084_data,%bx
		test   %bx,%bx
		jge    _071219_jump
		call   _05886c_func
		jmp    _071220_jump

	_071219_jump:
		jle    _071220_jump
		call   _0587e8_func

	_071220_jump:
		testb  $0x000004,_0ce0c5_data
		je     _071249_jump
		cmpb   $0x000007,_0ce0b1_data
		setne  %al
		and    $_0000ff_case,%eax
		je     _071249_jump
		mov    $_0ce044_data,%eax
		call   _055b7c_func
		call   _0703fc_func

	_071249_jump:
		push   $_0cf26a_data
		mov    $_0cf24e_data,%ecx
		mov    $_0cf24c_data,%ebx
		mov    $_0cf24a_data,%edx
		mov    $_0ce044_data,%eax
		call   _01d928_func
		call   _02ec18_func
		cmpb   $0x000000,_0cf465_data
		je     _07127a_jump
		call   _061390_func

	_07127a_jump:
		call   _07020c_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071290_func:
		push   %edx
		mov    $0x01f400,%edx
		mov    $_0cd29c_data,%eax
		call   _07f050_func
		pop    %edx
		ret    



_0712a4_func:
		mov    $_0cd29c_data,%eax
		jmp    _07f35c_func



_0712b0_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,0x000008(%esp)
		mov    %dx,0x000004(%esp)
		mov    %bx,(%esp)
		xor    %eax,%eax
		mov    _0cf43c_data,%al
		mov    $_0c6a38_data,%edx
		call   _03d90c_func
		call   _03b3e0_func
		mov    $0x000002,%eax
		mov    $0x00fa00,%ecx
		call   _03c480_func
		call   _016ddd_func
		mov    _0cd1e0_data,%esi
		mov    _0ccae4_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cd158_data,%edi
		mov    _0ccae4_data,%esi
		xor    %ebx,%ebx
		call   _014a16_func
		mov    $_0c7338_data,%esi
		mov    $_0c6a38_data,%edi

	_071326_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _07135d_jump
		call   _016ded_func
		call   _016ddd_func
		mov    %esi,%edx
		mov    %edi,%eax
		call   _03c500_func
		inc    %ebx
		mov    0x000008(%esp),%edx
		cmp    %dx,%bx
		jne    _071326_jump
		mov    0x000004(%esp),%ecx
		dec    %ecx
		xor    %edx,%ebx
		mov    %cx,0x000004(%esp)
		jmp    _071326_jump

	_07135d_jump:
		call   _0420e8_func
		xor    %ebx,%ebx
		mov    $_0c6a38_data,%edi
		xor    %esi,%esi

	_07136b_jump:
		call   _041e58_func
		test   %ax,%ax
		jne    _0713ba_jump
		call   _041ee4_func
		test   %ax,%ax
		jne    _0713ba_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0713ba_jump
		call   _016ded_func
		call   _016ddd_func
		mov    $_0c7338_data,%edx
		mov    %edi,%eax
		call   _03c500_func
		call   _0420e8_func
		inc    %ebx
		cmp    0x000008(%esp),%bx
		jne    _07136b_jump
		mov    (%esp),%edx
		dec    %edx
		mov    %esi,%ebx
		mov    %dx,(%esp)
		jmp    _07136b_jump

	_0713ba_jump:
		mov    $_0c6a38_data,%edx
		mov    $0x000002,%eax
		call   _03c5f0_func
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0713d0_func:
		push   %edx
	_0713d3_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x000002,%edx
		mov    $_0cd29c_data,%eax
		call   _047694_func
		pop    %edx
		ret    



_0713e4_func:
		push   %ebx
		push   %edx
		call   _071290_func
		mov    $0x000008,%ebx
		xor    %ah,%ah
		mov    $0xffffffff,%edx
		mov    %ah,_0cf474_data
		call   _0713d0_func
		call   _01cb88_func
		call   _03c9c0_func
		mov    $0x00003c,%eax
		call   _0712b0_func
		call   _0712a4_func
		call   _01cc5c_func
		pop    %edx
		pop    %ebx
		ret    

.data

_071430_data:
		.ascii   "(.37<@CFHJMPSVY[]_`behkmoqsuxz|}"
		.ascii  "\x7f\x81\x83\x85\x87\x89\x8a\x8c"
		.ascii  "\x8e\x90\x91\x93\x95\x96\x98\x99"
		.ascii  "\x9b\x9c\x9e\xa0\xa1\xa3\xa4\xa6"
		.ascii  "\xa7\xa8\xaa\xab\xad\xae\xb0\xb1"
		.ascii  "\xb2\xb4\xb5\xb6\xb8\xb9\xba\xbb"
		.ascii  "\xbd\xbe\xbf\xc1\xc2\xc3\xc4\xc6"
		.ascii  "\xc7\xc8\xc9\xca\xcb\xcd"

.text

	_0714b0_jump:
		ret    



_0714b4_func:
		mov    %ax,_097f10_data
		mov    %eax,%eax
		ret    



_0714c0_func:
		push   %ebx

	_0714c1_jump:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
	_0714c8_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		cmpb   $0x000000,_0cf410_data
	_0714cd_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		je     _0714e8_jump
		xor    %esi,%esi
		xor    %edi,%edi

	_0714d2_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _03eb2c_func
		cmp    $0x000020,%si
		jle    _0714d2_jump

	_0714e8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071558_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    0x000036(%eax),%ax
		add    %edx,%eax
		movswl %ax,%edx
		cmp    $0xffffffa0,%edx
		jge    _071570_jump
		xor    %eax,%eax
		jmp    _07158e_jump

	_071570_jump:
		cmp    $0x0001a0,%ax
		jle    _071588_jump
		mov    $0x00007f,%eax
		cmp    $0x00007f,%ax
		jle    _071599_jump
		mov    $0x00007f,%eax
		pop    %edx
		ret    

	_071588_jump:
		lea    0x000060(%edx),%eax
		sar    $0x000002,%eax

	_07158e_jump:
		cmp    $0x00007f,%ax
		jle    _071599_jump
		mov    $0x00007f,%eax

	_071599_jump:
		pop    %edx
		ret    



_07159c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x000008(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x000010(%esp),%ebx
		lea    0x000008(%esp),%edx
		call   _01d364_func
		xor    %edx,%edx
		mov    _0ce06c_data,%ebx
		mov    _0ce0ac_data,%dl
		add    %ebx,%edx
		mov    -0x000002(%esp),%ebx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    %ebx
		add    %ebx,%eax
		sub    %edx,%eax
		cltd   
		xor    %edx,%eax
		sub    %edx,%eax
		mov    0x000006(%esp),%ecx
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce070_data,%edx
		mov    _0ce0ad_data,%al
		sar    $0x000010,%ecx
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    %ecx
		sar    $0x000010,%eax
		add    %eax,%ecx
		lea    -0x000028(%edx),%eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		cltd   
		xor    %edx,%eax
		sub    %edx,%eax
		movswl %bx,%edx
		cwtl   
		add    %edx,%eax
		mov    $0x00007f,%edx
		sar    $0x000002,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %dx,%dx
		jge    _071627_jump
		xor    %edx,%eax

	_071627_jump:
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071630_func:
		push   %ebx
		push   %edx
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000007,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x000014,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _0714b4_func
		pop    %edx
		pop    %ebx



_071650_func:
		ret    



_071654_func:
		test   %ax,%ax
		ret    



_071658_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0cf410_data
		je     _0716ed_jump
		mov    $0xfffffffe,%ebx
		xor    %eax,%eax

	_07166e_jump:
		add    $0x000002,%eax
		xor    %edx,%edx
		mov    %bx,_0e4fb6_data(%eax)
		mov    %dx,_0e4e9e_data(%eax)
		cmp    $0x000028,%eax
		jne    _07166e_jump
		mov    $0x000002,%eax
		mov    %dx,_0e5166_data
		mov    %dx,_0e516a_data
		mov    %dx,_0e5160_data
		mov    $0xfffffffe,%edx
		mov    %ax,_0e5164_data
		xor    %eax,%eax

	_0716ad_jump:
		add    $0x00000c,%eax
		mov    %dx,_0e4fd4_data(%eax)
		cmp    $0x000180,%eax
		jne    _0716ad_jump
		xor    %edx,%edx
		mov    _0c3f72_data,%dx
		mov    %edx,%eax
		shl    $0x000007,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x000014,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _0714b4_func
		mov    _0c3f72_data,%eax
		sar    $0x000010,%eax
		call   _071654_func

	_0716ed_jump:
		pop    %edx
		pop    %ebx
		nop
		ret    



_0716f4_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %eax,%eax

	_0716fa_jump:
		movswl %ax,%edx
		cmp    _0e4fb8_data(,%edx,2),%bx
		je     _07170e_jump
		inc    %eax
		cmp    $0x000014,%ax
		jne    _0716fa_jump

	_07170e_jump:
		cmp    $0x000014,%ax
		jne    _071732_jump

	_071714_jump:
		dec    %eax
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _071728_jump
		cmpw   $0x000000,_0e4ea0_data(,%edx,2)
		jne    _071714_jump

	_071728_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _071732_jump
		xor    %eax,%eax

	_071732_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _071742_jump
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

	_071742_jump:
		mov    _0e4ea0_data(,%edx,2),%ax
		pop    %edx
		pop    %ebx
		ret    



_071750_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e5166_data,%cx
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		test   %cx,%cx
		je     _071797_jump
		mov    $_0e4ec8_data,%edx
		mov    _0e4ec8_data,%si
		xor    %eax,%eax
		cmp    %si,%bx
		je     _07178d_jump

	_07177b_jump:
		cmp    %cx,%ax
		jge    _07178d_jump
		inc    %eax
		mov    0x000018(%edx),%di
		add    $0x000018,%edx
		cmp    %di,%bx
		jne    _07177b_jump

	_07178d_jump:
		cmp    %cx,%ax
		jne    _071797_jump
		mov    $0xffffffff,%eax

	_071797_jump:
		mov    %cx,_0e5166_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0717a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    $_0e4fe0_data,%edx
		mov    _0e4fe0_data,%cx
		xor    %eax,%eax
		cmp    %cx,%bx
		je     _0717d0_jump

	_0717bd_jump:
		cmp    $0x000020,%ax
		jge    _0717d0_jump
		inc    %eax
		mov    0x00000c(%edx),%si
		add    $0x00000c,%edx
		cmp    %si,%bx
		jne    _0717bd_jump

	_0717d0_jump:
		cmp    $0x000020,%ax
		jne    _0717db_jump
		mov    $0xffffffff,%eax

	_0717db_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07181c_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $_0e4fe6_data,%ebx
		mov    $_0e4fe0_data,%edx
		xor    %eax,%eax
		cmp    $0x000030,%cx
		jne    _07184e_jump

	_071835_jump:
		cmp    (%ebx),%cx
		jne    _07183f_jump
		cmp    (%edx),%si
		je     _071867_jump

	_07183f_jump:
		cmp    $0x000020,%ax
		jge    _071867_jump
		inc    %eax
		add    $0x00000c,%ebx
		add    $0x00000c,%edx
		jmp    _071835_jump

	_07184e_jump:
		cmp    (%ebx),%cx
		je     _071867_jump
		cmp    (%edx),%si
		je     _071867_jump
		cmp    $0x000020,%ax
		jge    _071867_jump
		inc    %eax
		add    $0x00000c,%ebx
		add    $0x00000c,%edx
		jmp    _07184e_jump

	_071867_jump:
		cmp    $0x000020,%ax
		jne    _071872_jump
		mov    $0xffffffff,%eax

	_071872_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_071878_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0e5166_data,%si
		cwtl   
		call   _071750_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _07195b_jump
		mov    _0e5166_data,%si
		mov    %eax,%ebx
		cmp    %si,%ax
		jge    _071947_jump

	_0718a7_jump:
		movswl %bx,%eax
		lea    0x000001(%eax),%edx
		imul   $0x000018,%edx,%edx
		imul   $0x000018,%eax,%eax
		mov    _0e4ec8_data(%edx),%cx
		mov    %cx,_0e4ec8_data(%eax)
		mov    _0e4eca_data(%edx),%cx
		mov    %cx,_0e4eca_data(%eax)
		mov    _0e4ecc_data(%edx),%cx
		mov    %cx,_0e4ecc_data(%eax)
		mov    _0e4ece_data(%edx),%cx
		mov    %cx,_0e4ece_data(%eax)
		mov    _0e4ed0_data(%edx),%cx
		mov    %cx,_0e4ed0_data(%eax)
		mov    _0e4ed2_data(%edx),%cx
		mov    %cx,_0e4ed2_data(%eax)
		mov    _0e4ed4_data(%edx),%cx
		mov    %cx,_0e4ed4_data(%eax)
		mov    _0e4ed6_data(%edx),%cx
		mov    %cx,_0e4ed6_data(%eax)
		mov    _0e4ed8_data(%edx),%ecx
		mov    %ecx,_0e4ed8_data(%eax)
		mov    _0e4edc_data(%edx),%dx
		inc    %ebx
		mov    %dx,_0e4edc_data(%eax)
		cmp    %si,%bx
		jl     _0718a7_jump

	_071947_jump:
		mov    %si,_0e5166_data
		test   %si,%si
		jle    _07195b_jump
		dec    %esi
		mov    %si,_0e5166_data

	_07195b_jump:
		mov    _0e5166_data,%si
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071968_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0e5166_data,%si
		mov    _0cd2c4_data,%ebp
		xor    %ebx,%ebx
		test   %si,%si
		jle    _071a5f_jump

	_071986_jump:
		movswl %bx,%eax
		imul   $0x000018,%eax,%eax
		mov    _0e4ed8_data(%eax),%edx
		cmp    %ebp,%edx
		jae    _071a55_jump
		test   %edx,%edx
		je     _071a55_jump
		mov    %ebx,%ecx
		cmp    %si,%bx
		jge    _071a4d_jump

	_0719ad_jump:
		movswl %cx,%eax
		lea    0x000001(%eax),%edx
		imul   $0x000018,%edx,%edx
		imul   $0x000018,%eax,%eax
		mov    _0e4ec8_data(%edx),%di
		mov    %di,_0e4ec8_data(%eax)
		mov    _0e4eca_data(%edx),%di
		mov    %di,_0e4eca_data(%eax)
		mov    _0e4ecc_data(%edx),%di
		mov    %di,_0e4ecc_data(%eax)
		mov    _0e4ece_data(%edx),%di
		mov    %di,_0e4ece_data(%eax)
		mov    _0e4ed0_data(%edx),%di
		mov    %di,_0e4ed0_data(%eax)
		mov    _0e4ed2_data(%edx),%di
		mov    %di,_0e4ed2_data(%eax)
		mov    _0e4ed4_data(%edx),%di
		mov    %di,_0e4ed4_data(%eax)
		mov    _0e4ed6_data(%edx),%di
		mov    %di,_0e4ed6_data(%eax)
		mov    _0e4ed8_data(%edx),%edi
		mov    %edi,_0e4ed8_data(%eax)
		mov    _0e4edc_data(%edx),%dx
		inc    %ecx
		mov    %dx,_0e4edc_data(%eax)
		cmp    %si,%cx
		jl     _0719ad_jump

	_071a4d_jump:
		test   %si,%si
		jle    _071a56_jump
		dec    %esi
		jmp    _071a56_jump

	_071a55_jump:
		inc    %ebx

	_071a56_jump:
		cmp    %si,%bx
		jl     _071986_jump

	_071a5f_jump:
		mov    %ebp,_0cd2c4_data
		mov    %si,_0e5166_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071a74_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    $_0e4fe0_data,%edx
		mov    _0e4fe0_data,%cx
		xor    %eax,%eax
		cmp    %cx,%bx
		je     _071aa0_jump

	_071a8d_jump:
		cmp    $0x000020,%ax
		jge    _071aa0_jump
		inc    %eax
		mov    0x00000c(%edx),%si
		add    $0x00000c,%edx
		cmp    %si,%bx
		jne    _071a8d_jump

	_071aa0_jump:
		cmp    $0x000020,%ax
		je     _071aab_jump
		movw   $0x00fffe,(%edx)

	_071aab_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071b04_func:
		movswl %dx,%edx
		mov    _071430_data(%edx),%dl
		and    $_0000ff_case,%edx
		cwtl   
		imul   %edx,%eax
		sar    $0x000008,%eax
		ret    



_071b1c_func:
		push   %ebx
		mov    $0x00007f,%ebx
		movswl %dx,%edx
		sub    %edx,%ebx
		mov    _071430_data(%ebx),%dl
		and    $_0000ff_case,%edx
		cwtl   
		imul   %edx,%eax
		sar    $0x000008,%eax
		pop    %ebx
		ret    



_071b3c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		cmpb   $0x000000,_0cf410_data
		je     _072207_jump
		cmpw   $0x000000,_0ce09e_data
		je     _071b68_jump
		cmp    _0cf27a_data,%si
		je     _071b71_jump

	_071b68_jump:
		cmp    _0cf28a_data,%si
		jne    _071b76_jump

	_071b71_jump:
		mov    $0xffffffff,%esi

	_071b76_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		jne    _071b8c_jump
		cmp    $0x00000f,%di
		je     _071b8c_jump
		xor    %eax,%eax
		mov    %ax,_0e5160_data

	_071b8c_jump:
		movswl %si,%ebx
		mov    %ebx,%eax
		call   _0716f4_func
		mov    %eax,0x00001c(%esp)
		cmp    %ax,%di
		je     _071c31_jump
		movswl %ax,%edx
		testb  $0x000008,_0974f0_data(%edx)
		je     _071c31_jump
		mov    %ebx,%eax
		call   _071878_func
		mov    %ebx,%eax
		call   _07181c_func
		test   %ax,%ax
		jl     _071c31_jump
		movswl %ax,%ebp
		lea    0x000000(,%ebp,4),%edx
		sub    %ebp,%edx
		xor    %ebx,%ebx
		shl    $0x000002,%edx
		xor    %ecx,%ecx
		mov    _0e4fe4_data(%edx),%eax
		mov    %edx,0x000008(%esp)
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    _0979f0_data(,%eax,4),%bl
		mov    _0979f2_data(,%eax,4),%cl
		push   %ebx
		xor    %ebx,%ebx
		mov    _097df0_data(%eax),%dl
		mov    _0979f1_data(,%eax,4),%bl
		mov    %ebp,%eax
		call   _03eb2c_func
		mov    0x000008(%esp),%eax
		mov    $0xfffffffe,%edx
		mov    $0xffffffff,%ebx
		mov    %dx,_0e4fe0_data(%eax)
		xor    %ch,%ch
		mov    %bx,_0e4fe6_data(%eax)
		mov    %ch,_097ef0_data(%ebp)

	_071c31_jump:
		cmpb   $0x000000,_0cf445_data
		jne    _072194_jump
		test   %di,%di
		je     _072194_jump
		mov    0x00001c(%esp),%ecx
		cmp    %cx,%di
		jne    _071c60_jump
		movswl %cx,%eax
		testb  $0x000004,_0974f0_data(%eax)
		je     _072194_jump

	_071c60_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _071c7e_jump
		cmp    _0cf28a_data,%si
		jne    _071c94_jump
		mov    _0cf288_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _071c94_jump

	_071c7e_jump:
		mov    $_0ce044_data,%eax
		mov    $0x00007f,%cl
		call   _071558_func
		mov    %al,0x000028(%esp)
		mov    %cl,0x000024(%esp)
		jmp    _071cd4_jump

	_071c94_jump:
		movswl %si,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		call   _071558_func
		mov    %al,0x000028(%esp)
		movswl %di,%eax
		testb  $0x000001,_0974f0_data(%eax)
		jne    _071cc4_jump
		movb   $0x00007f,0x000024(%esp)
		jmp    _071cd4_jump

	_071cc4_jump:
		mov    _0cc7a0_data,%eax
		add    %edx,%eax
		call   _07159c_func
		mov    %al,0x000024(%esp)

	_071cd4_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _0979f1_data,%bl
		mov    _0979f2_data,%cl
		cmp    $0x000035,%di
		jb     _071d3b_jump
		jbe    _071d71_jump
		cmp    $0x000050,%di
		jb     _071d1c_jump
		jbe    _071e52_jump
		cmp    $0x000067,%di
		jb     _071f10_jump
		jbe    _071f09_jump
		cmp    $0x0000f5,%di
		je     _071ef0_jump
		jmp    _071f10_jump

	_071d1c_jump:
		cmp    $0x000037,%di
		jb     _071f10_jump
		jbe    _071f09_jump
		cmp    $0x000039,%di
		je     _071f09_jump
		jmp    _071f10_jump

	_071d3b_jump:
		cmp    $0x00000f,%di
		jb     _071d62_jump
		jbe    _071e09_jump
		cmp    $0x000013,%di
		jb     _071f10_jump
		jbe    _071ed7_jump
		cmp    $0x00002f,%di
		je     _071db1_jump
		jmp    _071f10_jump

	_071d62_jump:
		cmp    $0x00000e,%di
		je     _071e91_jump
		jmp    _071f10_jump

	_071d71_jump:
		movswl %si,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		cmpw   $0x0000ee,0x000060(%eax,%edx,4)
		je     _071da5_jump
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097ac5_data,%bl
		mov    _097ac4_data,%al
		mov    _097ac6_data,%cl
		jmp    _071f2e_jump

	_071da5_jump:
		xor    %eax,%eax
		mov    _0979f0_data,%al
		jmp    _071f2e_jump

	_071db1_jump:
		cmpw   $0x000005,_0cf282_data
		je     _071de2_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _097aac_data,%al
		mov    _097aad_data,%bl
		mov    %ax,0x000020(%esp)
		mov    $0x00007f,%ah
		mov    _097aae_data,%cl
		mov    %ah,0x000024(%esp)
		jmp    _071f33_jump

	_071de2_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _097c98_data,%al
		mov    _097c99_data,%bl
		mov    %ax,0x000020(%esp)
		mov    $0x00007f,%al
		mov    _097c9a_data,%cl
		mov    %al,0x000024(%esp)
		jmp    _071f33_jump

	_071e09_jump:
		mov    _0e5160_data,%ax
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0e5160_data
		cmp    $0x000002,%ax
		jle    _071e43_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _097a2c_data,%al
		mov    _097a2d_data,%bl
		mov    %ax,0x000020(%esp)
		xor    %eax,%eax
		mov    _097a2e_data,%cl
		mov    %ax,_0e5160_data

	_071e43_jump:
		mov    $0xffffffff,%eax
		call   _071878_func
		jmp    _071f33_jump

	_071e52_jump:
		mov    _0e5164_data,%ax
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0e5164_data
		cmp    $0x000001,%ax
		jle    _071f33_jump
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _097b31_data,%bl
		mov    _097b32_data,%cl
		mov    _097b30_data,%al
		mov    %dx,_0e5164_data
		jmp    _071f2e_jump

	_071e91_jump:
		movswl %si,%eax
		mov    %eax,%edx
		xor    %ebx,%ebx
		shl    $0x000005,%edx
		xor    %ecx,%ecx
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		mov    _097a29_data,%bl
		mov    _097a2a_data,%cl
		mov    0x00006c(%eax,%edx,4),%al
		and    $_0000ff_case,%eax
		mov    _097f02_data(%eax),%al
		xor    %ah,%ah
		mov    %eax,0x000018(%esp)
		mov    0x000018(%esp),%edx
		mov    _097a28_data,%al
		add    %eax,%edx
		mov    %dx,0x000020(%esp)
		jmp    _071f33_jump

	_071ed7_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097a3d_data,%bl
		mov    _097a3c_data,%al
		mov    _097a3e_data,%cl
		jmp    _071f2e_jump

	_071ef0_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097dc5_data,%bl
		mov    _097dc4_data,%al
		mov    _097dc6_data,%cl
		jmp    _071f2e_jump

	_071f09_jump:
		mov    $0xffffffff,%ebx
		jmp    _071f33_jump

	_071f10_jump:
		movswl %di,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _0979f1_data(,%edx,4),%bl
		mov    _0979f0_data(,%edx,4),%al
		mov    _0979f2_data(,%edx,4),%cl

	_071f2e_jump:
		mov    %ax,0x000020(%esp)

	_071f33_jump:
		movswl %bx,%eax
		mov    %eax,0x00000c(%esp)
		cmp    $0xffffffff,%eax
		je     _07215c_jump
		cmp    $_0000ff_case,%bx
		je     _07215c_jump
		movswl %si,%ebp
		mov    %ebp,%eax
		call   _071878_func
		xor    %eax,%eax
		mov    0x000028(%esp),%al
		mov    %eax,0x000004(%esp)
		movswl %di,%eax
		mov    %eax,0x000014(%esp)
		shl    $0x000002,%eax
		mov    %eax,0x000010(%esp)
		mov    0x000010(%esp),%edx
		xor    %eax,%eax
		mov    _0979f3_data(%edx),%al
		mov    %eax,0x000008(%esp)
		xor    %edx,%edx
		mov    _097f0e_data,%eax
		mov    0x000024(%esp),%dl
		sar    $0x000010,%eax
		imul   %edx,%eax
		mov    %edx,(%esp)
		imul   0x000008(%esp),%eax
		sar    $0x00000e,%eax
		mov    0x000004(%esp),%edx
		cwtl   
		call   _071b1c_func
		mov    0x000010(%esp),%edx
		xor    %eax,%eax
		mov    _0979f3_data(%edx),%al
		mov    %eax,0x000008(%esp)
		mov    _097f0e_data,%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		imul   %edx,%eax
		imul   0x000008(%esp),%eax
		sar    $0x00000e,%eax
		mov    0x000004(%esp),%edx
		cwtl   
		call   _071b04_func
		mov    0x000014(%esp),%eax
		cmpb   $0x000000,_0975f0_data(%eax)
		jne    _072096_jump
		mov    0x000004(%esp),%eax
		mov    0x000010(%esp),%edx
		push   %eax
		xor    %eax,%eax
		mov    _0979f3_data(%edx),%al
		mov    _097f0e_data,%edx
		mov    0x000004(%esp),%ebx
		sar    $0x000010,%edx
		imul   %ebx,%edx
		imul   %edx,%eax
		movswl %cx,%ebx
		sar    $0x00000e,%eax
		mov    0x000018(%esp),%ecx
		cwtl   
		mov    0x000022(%esp),%edx
		push   %eax
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _097df0_data(%ecx),%al
		mov    %edx,%ecx
		mov    0x000014(%esp),%edx
		call   _03e9dc_func
		movswl %ax,%ebx
		cmp    $0xffffffff,%ebx
		je     _07215c_jump
		mov    %ebp,%eax
		call   _071a74_func
		lea    0x000000(,%ebx,4),%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000024(%esp),%al
		mov    %ax,_0e4fe2_data(,%edx,4)
		xor    %eax,%eax
		mov    %si,_0e4fe0_data(,%edx,4)
		mov    0x000028(%esp),%al
		mov    %ax,_0e4fe4_data(,%edx,4)
		mov    0x000014(%esp),%eax
		mov    %di,_0e4fe6_data(,%edx,4)
		testb  $0x000010,_0974f0_data(%eax)
		je     _07215c_jump
		movb   $0x000001,_097ef0_data(%ebx)
		jmp    _07215c_jump

	_072096_jump:
		call   _071968_func
		mov    %ebp,%eax
		call   _071878_func
		mov    _0e5164_data,%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    0x000020(%esp),%eax
		mov    %bx,_0e4ecc_data(,%edx,8)
		mov    0x000010(%esp),%ebx
		mov    %ax,_0e4ed0_data(,%edx,8)
		xor    %eax,%eax
		mov    _0979f3_data(%ebx),%al
		mov    %ax,_0e4ed2_data(,%edx,8)
		xor    %eax,%eax
		mov    0x000024(%esp),%al
		mov    %ax,_0e4ed4_data(,%edx,8)
		xor    %eax,%eax
		mov    0x000028(%esp),%al
		mov    0x000014(%esp),%ebx
		mov    %ax,_0e4ed6_data(,%edx,8)
		xor    %eax,%eax
		mov    _0975f0_data(%ebx),%al
		mov    _0cd2c4_data,%ebx
		mov    %si,_0e4ec8_data(,%edx,8)
		add    %ebx,%eax
		mov    %eax,_0e4ed8_data(,%edx,8)
		mov    0x000014(%esp),%eax
		mov    %di,_0e4eca_data(,%edx,8)
		mov    _0977f0_data(,%eax,2),%bx
		mov    %cx,_0e4ece_data(,%edx,8)
		test   %bx,%bx
		setne  %al
		xor    %ah,%ah
		mov    _0e5166_data,%cx
		mov    %ax,_0e4edc_data(,%edx,8)
		cmp    $0x000009,%cx
		jge    _07215c_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_0e5166_data

	_07215c_jump:
		cmp    $0x0000cb,%di
		je     _07217f_jump
		cmp    $0x0000ed,%di
		je     _07217f_jump
		cmp    $0x0000d1,%di
		je     _07217f_jump
		cmp    $0x0000e1,%di
		je     _07217f_jump
		cmp    $0x0000ec,%di
		jne    _072194_jump

	_07217f_jump:
		mov    _0cf471_data,%ch
		cmp    $0x000040,%ch
		je     _07218f_jump
		cmp    $0x000080,%ch
		jne    _072194_jump

	_07218f_jump:
		call   _01cc08_func

	_072194_jump:
		xor    %eax,%eax

	_072196_jump:
		movswl %ax,%edx
		add    %edx,%edx
		cmp    _0e4fb8_data(%edx),%si
		je     _0721b9_jump
		mov    _0e4fb6_data(%edx),%edx
		sar    $0x000010,%edx
		cmp    $0xfffffffe,%edx
		je     _0721b9_jump
		inc    %eax
		cmp    $0x000014,%ax
		jne    _072196_jump

	_0721b9_jump:
		cmp    $0x000014,%ax
		jne    _0721f4_jump
		test   %di,%di
		je     _072207_jump
		mov    _0cc7a0_data,%ebx

	_0721ca_jump:
		dec    %eax
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _0721ea_jump
		mov    _0e4fb6_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		cmpl   $0x000000,0x000024(%edx,%ebx,1)
		jne    _0721ca_jump

	_0721ea_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _0721f4_jump
		xor    %eax,%eax

	_0721f4_jump:
		movswl %ax,%edx
		mov    %si,_0e4fb8_data(,%edx,2)
		mov    %di,_0e4ea0_data(,%edx,2)

	_072207_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_072210_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cf410_data
		je     _0722c4_jump
		movswl %ax,%esi
		lea    0x000000(,%esi,4),%eax
		xor    %edx,%edx
		mov    _0979f1_data(%eax),%dl
		cmp    $0xffffffff,%edx
		je     _0722c4_jump
		cmp    $_0000ff_case,%dl
		je     _0722c4_jump
		mov    _097f0e_data,%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    _0979f3_data(%eax),%bl
		imul   %ecx,%ebx
		sar    $0x000007,%ebx
		push   $0x000040
		movswl %bx,%ebx
		xor    %ecx,%ecx
		push   %ebx
		xor    %ebx,%ebx
		mov    _0979f0_data(%eax),%cl
		mov    _0979f2_data(%eax),%bl
		xor    %eax,%eax
		mov    _097df0_data(%esi),%al
		call   _03e9dc_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _0722c4_jump
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $0xfffffffe,%ebx
		mov    $0x000040,%ecx
		mov    %bx,_0e4fe0_data(,%eax,4)
		mov    %cx,_0e4fe2_data(,%eax,4)
		mov    _0974f0_data(%esi),%bh
		mov    %cx,_0e4fe4_data(,%eax,4)
		test   $0x000010,%bh
		je     _0722c4_jump
		movb   $0x000001,_097ef0_data(%edx)

	_0722c4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0722cc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		cmpb   $0x000000,_0cf410_data
		je     _07271a_jump
		cmpw   $0x000000,_0ce09e_data
		je     _0722f5_jump
		cmp    _0cf27a_data,%si
		je     _0722fe_jump

	_0722f5_jump:
		cmp    _0cf28a_data,%si
		jne    _072303_jump

	_0722fe_jump:
		mov    $0xffffffff,%esi

	_072303_jump:
		movswl %si,%edx
		mov    %edx,%eax
		call   _071750_func
		mov    %ax,0x000004(%esp)
		cwtl   
		cmp    $0xffffffff,%eax
		je     _072631_jump
		cmp    $0xffffffff,%edx
		je     _072337_jump
		cmp    _0cf28a_data,%si
		jne    _07233b_jump
		mov    _0cf288_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _07233b_jump

	_072337_jump:
		mov    $0x00007f,%al
		jmp    _072383_jump

	_07233b_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0e4ec8_data(,%eax,8),%eax
		sar    $0x000010,%eax
		mov    _0974f0_data(%eax),%dl
		test   $0x000001,%dl
		je     _072365_jump
		test   $0x000002,%dl
		jne    _072369_jump

	_072365_jump:
		mov    $0x00007f,%al
		jmp    _072383_jump

	_072369_jump:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		call   _07159c_func

	_072383_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,0x000008(%esp)
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000003,%edi
		mov    0x000008(%esp),%edx
		mov    %dx,_0e4ed4_data(%edi)
		mov    _0cd2c4_data,%edx
		mov    %edx,(%esp)
		mov    (%esp),%ebx
		cmp    _0e4ed8_data(%edi),%ebx
		jne    _072631_jump
		mov    _0e4ed4_data(%edi),%edx
		sar    $0x000010,%edx
		mov    _0e4ed0_data(%edi),%ebx
		push   %edx
		mov    _097f0e_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		and    $_0000ff_case,%eax
		imul   %edx,%eax
		imul   %ebx,%eax
		mov    _0e4ece_data(%edi),%ecx
		sar    $0x000010,%ecx
		sar    $0x00000e,%eax
		mov    _0e4eca_data(%edi),%edx
		cwtl   
		sar    $0x000010,%edx
		push   %eax
		mov    _0e4ec8_data(%edi),%eax
		mov    _0e4ecc_data(%edi),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    _097df0_data(%eax),%al
		and    $_0000ff_case,%eax
		call   _03e9dc_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _072485_jump
		movswl %si,%eax
		call   _071a74_func
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000008(%esp),%ebx
		mov    %si,_0e4fe0_data(,%eax,4)
		mov    %bx,_0e4fe2_data(,%eax,4)
		mov    _0e4ed6_data(%edi),%bx
		mov    %bx,_0e4fe4_data(,%eax,4)
		mov    _0e4eca_data(%edi),%bx
		mov    %bx,_0e4fe6_data(,%eax,4)
		mov    _0e4ec8_data(%edi),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_0974f0_data(%eax)
		je     _072485_jump
		movb   $0x000001,_097ef0_data(%edx)

	_072485_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		shl    $0x000003,%ebx
		cmpw   $0x000000,_0e4edc_data(%ebx)
		je     _072564_jump
		mov    _0e4ec8_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _0976f0_data(%eax),%al
		mov    (%esp),%ecx
		and    $_0000ff_case,%eax
		add    %ecx,%eax
		mov    %eax,_0e4ed8_data(%ebx)
		mov    _0e4ec8_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _0977f0_data(,%eax,2),%ax
		mov    %ax,_0e4eca_data(%ebx)
		mov    _0e4ec8_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _0979f1_data(,%eax,4),%al
		xor    %ah,%ah
		mov    %ax,_0e4ecc_data(%ebx)
		mov    _0e5164_data,%edx
		mov    _0e4ec8_data(%ebx),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    _0979f2_data(,%eax,4),%cl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %cx,_0e4ece_data(,%eax,8)
		mov    _0e4ec8_data(%ebx),%edx
		sar    $0x000010,%edx
		mov    _0979f0_data(,%edx,4),%dl
		xor    %dh,%dh
		mov    %dx,_0e4ed0_data(,%eax,8)
		mov    _0e4ec8_data(%ebx),%edx
		sar    $0x000010,%edx
		mov    _0979f3_data(,%edx,4),%dl
		xor    %dh,%dh
		xor    %ecx,%ecx
		mov    %dx,_0e4ed2_data(,%eax,8)
		mov    %cx,_0e4edc_data(%ebx)
		jmp    _072631_jump

	_072564_jump:
		mov    0x000004(%esp),%ebx
		cmp    _0e5166_data,%bx
		jge    _07261c_jump
		mov    _0e5166_data,%di

	_07257c_jump:
		movswl %bx,%eax
		lea    0x000001(%eax),%edx
		imul   $0x000018,%edx,%edx
		imul   $0x000018,%eax,%eax
		mov    _0e4ec8_data(%edx),%cx
		mov    %cx,_0e4ec8_data(%eax)
		mov    _0e4eca_data(%edx),%cx
		mov    %cx,_0e4eca_data(%eax)
		mov    _0e4ecc_data(%edx),%cx
		mov    %cx,_0e4ecc_data(%eax)
		mov    _0e4ece_data(%edx),%cx
		mov    %cx,_0e4ece_data(%eax)
		mov    _0e4ed0_data(%edx),%cx
		mov    %cx,_0e4ed0_data(%eax)
		mov    _0e4ed2_data(%edx),%cx
		mov    %cx,_0e4ed2_data(%eax)
		mov    _0e4ed4_data(%edx),%cx
		mov    %cx,_0e4ed4_data(%eax)
		mov    _0e4ed6_data(%edx),%cx
		mov    %cx,_0e4ed6_data(%eax)
		mov    _0e4ed8_data(%edx),%ecx
		mov    %ecx,_0e4ed8_data(%eax)
		mov    _0e4edc_data(%edx),%dx
		inc    %ebx
		mov    %dx,_0e4edc_data(%eax)
		cmp    %di,%bx
		jl     _07257c_jump

	_07261c_jump:
		mov    _0e5166_data,%ax
		test   %ax,%ax
		jle    _072631_jump
		mov    %eax,%edx
		dec    %edx
		mov    %dx,_0e5166_data

	_072631_jump:
		movswl %si,%edx
		mov    %edx,%eax
		call   _0717a4_func
		mov    %eax,%ebx
		cwtl   
		cmp    $0xffffffff,%eax
		je     _07271a_jump
		cmp    $0xffffffff,%edx
		je     _072662_jump
		cmp    _0cf28a_data,%si
		jne    _072666_jump
		mov    _0cf288_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _072666_jump

	_072662_jump:
		mov    $0x00007f,%dl
		jmp    _0726b9_jump

	_072666_jump:
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		cmpw   $0x0000cc,_0e4fe6_data(%eax)
		je     _072699_jump
		mov    _0e4fe4_data(%eax),%eax
		sar    $0x000010,%eax
		mov    _0974f0_data(%eax),%cl
		test   $0x000001,%cl
		je     _072699_jump
		test   $0x000002,%cl
		jne    _07269d_jump

	_072699_jump:
		mov    $0x00007f,%dl
		jmp    _0726b9_jump

	_07269d_jump:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		call   _07159c_func
		mov    %al,%dl

	_0726b9_jump:
		movswl %bx,%ecx
		mov    %ecx,%ebx
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		xor    %ecx,%ebx
		shl    $0x000002,%eax
		mov    %dl,%bl
		mov    _0e4fe4_data(%eax),%si
		mov    _097ef0_data(%ecx),%dh
		mov    %bx,_0e4fe2_data(%eax)
		test   %dh,%dh
		je     _07271a_jump
		mov    _0e4fe4_data(%eax),%eax
		mov    _097f0e_data,%edi
		sar    $0x000010,%eax
		movswl %si,%ebx
		movzbl _0979f3_data(,%eax,4),%esi
		xor    %eax,%eax
		sar    $0x000010,%edi
		mov    %dl,%al
		imul   %edi,%eax
		imul   %esi,%eax
		sar    $0x00000e,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _03eb3c_func

	_07271a_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_072724_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,_0cf410_data
		je     _0727e2_jump
		cmpw   $0x000000,_0ce09e_data
		je     _07274f_jump
		cmp    _0cf27a_data,%bx
		jne    _07274f_jump
		mov    $0xffffffff,%ebx

	_07274f_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		call   _0717a4_func
		mov    %eax,%esi
		movswl %ax,%edi
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		cmp    $0xffffffff,%edi
		je     _0727a3_jump
		cmp    $0xffffffff,%edx
		jne    _072779_jump
		mov    $_0ce044_data,%eax
		jmp    _072781_jump

	_072779_jump:
		mov    _0cc7a0_data,%edx
		add    %edx,%eax

	_072781_jump:
		call   _071558_func
		xor    %ebx,%ebx
		movswl %si,%edx
		mov    %al,%bl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %bx,_0e4fe4_data(,%eax,4)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0727a3_jump:
		cmp    %edi,%edx
		jne    _0727ae_jump
		mov    $_0ce044_data,%eax
		jmp    _0727b6_jump

	_0727ae_jump:
		mov    _0cc7a0_data,%edx
		add    %edx,%eax

	_0727b6_jump:
		call   _071558_func
		mov    %al,%cl
		movswl %bx,%eax
		call   _071750_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _0727e2_jump
		lea    0x000000(,%edx,4),%eax
		xor    %ebx,%ebx
		sub    %edx,%eax
		mov    %cl,%bl
		mov    %bx,_0e4ed6_data(,%eax,8)

	_0727e2_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0727e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		cmpb   $0x000000,_0cf410_data
		je     _072980_jump
		mov    $_0e4fe6_data,%ebp
		xor    %edi,%edi
		mov    $_0e4fe0_data,%esi
		mov    %edi,0x000004(%esp)

	_07280e_jump:
		mov    (%esi),%dx
		test   %dx,%dx
		jl     _07282b_jump
		movswl %dx,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc7a0_data,%eax
		cmpl   $0x000000,0x000024(%edx,%eax,1)
		je     _07284c_jump

	_07282b_jump:
		movswl (%esi),%eax
		cmp    $0xfffffffe,%eax
		jne    _07283c_jump
		movswl 0x000000(%ebp),%eax
		cmp    $0xffffffff,%eax
		jne    _07284c_jump

	_07283c_jump:
		mov    _0cc7a4_data,%bx
		cmp    (%esi),%bx
		jg     _0728dc_jump

	_07284c_jump:
		mov    0x000004(%esp),%eax
		mov    _0e4fe4_data(%eax),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_0974f0_data(%eax)
		je     _0728d1_jump
		movswl 0x000000(%ebp),%edx
		xor    %ecx,%ecx
		mov    _0979f0_data(,%edx,4),%cl
		push   %ecx
		xor    %ecx,%ecx
		mov    _0979f1_data(,%edx,4),%al
		mov    _0979f2_data(,%edx,4),%cl
		and    $_0000ff_case,%eax
		mov    _097df0_data(%edx),%dl
		mov    %eax,0x000004(%esp)
		mov    0x000004(%esp),%ebx
		and    $_0000ff_case,%edx
		movswl %di,%eax
		call   _03eb2c_func
		xor    %dh,%dh
		xor    %eax,%eax
		mov    %dh,_097ef0_data(%edi)
		xor    %edx,%edx

	_0728ad_jump:
		mov    _0e4fb8_data(%eax),%bx
		cmp    (%esi),%bx
		je     _0728c2_jump
		add    $0x000002,%eax
		inc    %edx
		cmp    $0x000028,%eax
		jne    _0728ad_jump

	_0728c2_jump:
		cmp    $0x000014,%edx
		jge    _0728d1_jump
		movw   $0x00ffff,_0e4ea0_data(,%edx,2)

	_0728d1_jump:
		movw   $0x00fffe,(%esi)
		movw   $0x00ffff,0x000000(%ebp)

	_0728dc_jump:
		mov    (%esi),%dx
		test   %dx,%dx
		jl     _07290b_jump
		movswl %dx,%eax
		imul   $0x000084,%eax,%edx
		mov    _0cc7a0_data,%ecx
		cmpl   $0x000000,0x000024(%ecx,%edx,1)
		je     _07290b_jump
		xor    %edx,%edx
		call   _0722cc_func
		movswl (%esi),%eax
		xor    %edx,%edx
		call   _072724_func

	_07290b_jump:
		mov    0x000004(%esp),%ecx
		inc    %edi
		add    $0x00000c,%ebp
		add    $0x00000c,%ecx
		add    $0x00000c,%esi
		mov    %ecx,0x000004(%esp)
		cmp    $0x000020,%edi
		jl     _07280e_jump
		xor    %edi,%edi
		xor    %esi,%esi
		xor    %ebp,%ebp
		jmp    _072974_jump

	_07292e_jump:
		mov    _0cc7a4_data,%bx
		cmp    _0e4ec8_data(%esi),%bx
		jle    _072970_jump
		mov    _0e4ec6_data(%esi),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%edx
		mov    _0cc7a0_data,%ecx
		cmp    0x000024(%ecx,%edx,1),%ebp
		je     _072970_jump
		mov    %ebp,%edx
		call   _0722cc_func
		mov    _0e4ec6_data(%esi),%eax
		mov    %ebp,%edx
		sar    $0x000010,%eax
		call   _072724_func

	_072970_jump:
		add    $0x000018,%esi
		inc    %edi

	_072974_jump:
		mov    _0e5164_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jl     _07292e_jump

	_072980_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07298c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cf410_data
		je     _0729e2_jump
		xor    %ecx,%ecx
		xor    %esi,%esi

	_07299d_jump:
		movswl %cx,%eax
		imul   $0x00000c,%eax,%eax
		mov    _0e4fe6_data(%eax),%dx
		cmp    $0x000006,%dx
		je     _0729cf_jump
		cmp    $0x0000f5,%dx
		je     _0729cf_jump
		cmp    $0x000002,%dx
		je     _0729cf_jump
		mov    _0e4fe4_data(%eax),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_0974f0_data(%eax)
		je     _0729db_jump

	_0729cf_jump:
		movswl %cx,%eax
		mov    %esi,%ebx
		mov    %esi,%edx
		call   _03eb3c_func

	_0729db_jump:
		inc    %ecx
		cmp    $0x000020,%cx
		jl     _07299d_jump

	_0729e2_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0729e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cf410_data
		je     _072a0c_jump
		xor    %ecx,%ecx
		xor    %esi,%esi

	_0729f9_jump:
		movswl %cx,%eax
		mov    %esi,%ebx
		mov    %esi,%edx
		inc    %ecx
		call   _03eb3c_func
		cmp    $0x000020,%cx
		jl     _0729f9_jump

	_072a0c_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072a14_func:
		push   %edx
		mov    $0x000001,%edx
		call   _0729e8_func
		mov    %dx,_097f22_data
		pop    %edx
		ret    



_072a28_func:
		push   %edx
		xor    %edx,%edx
		mov    %dx,_097f22_data
		pop    %edx
		ret    

_072a34_switch:
		.long   _072a76_case
		.long   _072aa8_case
		.long   _072a7d_case
		.long   _072a84_case
		.long   _072a8b_case
		.long   _072aa3_case


	_072a4c_jump:
		push   %edx
		cmpb   $0x000000,_0cf410_data
		je     _072ab6_jump
		test   %eax,%eax
		jne    _072aa8_case
		mov    _0cf232_data,%dx
		dec    %edx
		cmp    $0x000005,%dx
		ja     _072aa8_case
		and    $0x00ffff,%edx
		jmp    *%cs:_072a34_switch(,%edx,4)

	_072a76_case:
		mov    $0x000001,%eax
		jmp    _072aa8_case

	_072a7d_case:
		mov    $0x000002,%eax
		jmp    _072aa8_case

	_072a84_case:
		mov    $0x000004,%eax
		jmp    _072aa8_case

	_072a8b_case:
		cmpw   $0x000003,_0cf224_data
		jne    _072a9c_jump
		mov    $0x000003,%eax
		jmp    _072aa8_case

	_072a9c_jump:
		mov    $0x000009,%eax
		jmp    _072aa8_case

	_072aa3_case:
		mov    $0x000007,%eax

	_072aa8_case:
		mov    _097f0e_data,%edx
		sar    $0x000010,%edx
		call   _03ed14_func

	_072ab6_jump:
		pop    %edx
		ret    



_072ab8_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cd2ac_data,%edx
		test   %edx,%edx
		jne    _072b1d_jump
		mov    $_0cd2a8_data,%esi
		call   _012748_func
		mov    _0cf280_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cf26e_data,%eax
		sar    $0x000010,%eax
		mov    _094ef3_data(%edx,%eax,1),%al
		and    $_0000ff_case,%eax
		call   _02a868_func
		xor    %bh,%bh
		mov    $0x000001,%eax
		mov    %bh,_097f25_data
		mov    %eax,_0cd2ac_data
		jmp    _072c2f_jump

	_072b1d_jump:
		cmp    $0xffffffff,%edx
		je     _072c2f_jump
		mov    $_0cd264_data,%esi
		call   _012748_func
		mov    _0cd264_data,%edx
		sub    _0cd2a8_data,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x0000b6,%ebx
		add    %eax,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %eax,_0cd2ac_data
		mov    _0cf280_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,8),%edx
		mov    _0cf26e_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		mov    _0cd2ac_data,%esi
		add    %eax,%edx
		add    $0x000002,%esi
		mov    _094f74_data(%edx),%edi
		mov    %esi,_0cd2ac_data
		cmp    %edi,%esi
		jb     _072c2f_jump
		mov    _097f24_data,%al
		inc    %al
		mov    _097f24_data,%ah
		test   %ah,%ah
		jne    _072bc0_jump
		mov    %al,_097f24_data
		call   _02a81c_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_072bc0_jump:
		cmp    $0x000004,%ah
		jae    _072bd0_jump
		mov    %al,_097f24_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_072bd0_jump:
		mov    $_0cd2a8_data,%esi
		call   _012748_func
		mov    _0cf280_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0cf26e_data,%edx
		sar    $0x000010,%edx
		mov    _094ef3_data(%edx,%eax,2),%al
		and    $_0000ff_case,%eax
		mov    $0x000001,%ebp
		call   _02a7ac_func
		xor    %bl,%bl
		mov    _097f25_data,%dh
		mov    %bl,_097f24_data
		test   %dh,%dh
		sete   %al
		mov    %ebp,_0cd2ac_data
		mov    %al,_097f25_data

	_072c2f_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_072c38_func:
		call   _029910_func
		test   %al,%al
		je     _072c68_jump
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a4d0_func
		test   %al,%al
		je     _072c68_jump
		call   _02a814_func
		call   _029530_func
		and    $_0000ff_case,%eax
		jmp    _02a520_func

	_072c68_jump:
		mov    %al,_0cf444_data
		ret    



_072c70_func:
		call   _02a814_func
		call   _029530_func
		and    $_0000ff_case,%eax
		call   _02a4f4_func
		jmp    _0298e8_jump



_072c90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0e5170_data,%ebp
		movw   $0x000000,0x000000(%ebp)
		test   %ax,%ax
		jl     _072cbc_jump
		movswl %ax,%ebx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _072cb8_jump
		mov    %ebx,%eax

	_072cb8_jump:
		neg    %eax
		jmp    _072ccc_jump

	_072cbc_jump:
		movswl %ax,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _072ccc_jump
		mov    %ebx,%eax

	_072ccc_jump:
		mov    %ax,0x000002(%ebp)
		test   %ax,%ax
		jle    _072cd9_jump
		xor    %eax,%eax
		jmp    _072cde_jump

	_072cd9_jump:
		mov    $0x000003,%eax

	_072cde_jump:
		mov    %al,0x000018(%ebp)
		mov    0x00001c(%ebp),%ax
		mov    %eax,%ebx
		mov    %ax,0x000008(%esp)
		neg    %ebx
		movb   $0x000000,0x000019(%ebp)
		mov    %bx,0x000008(%esp)
		jmp    _072d4e_jump

	_072cf9_jump:
		xor    %eax,%eax
		mov    0x00001c(%ebp),%ax
		call   _07f56f_func
		mov    %eax,%esi
		mov    %edx,%edi
		mov    0x000006(%esp),%eax
		mov    %esi,%ebx
		sar    $0x000010,%eax
		mov    %edi,%ecx
		call   _07f562_func
		call   _0800d8_func
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _08531c_func
		call   _07f75f_func
		call   _07fdac_func
		mov    0x000004(%esp),%edx
		add    (%esp),%edx
		mov    0x000008(%esp),%ecx
		lea    0x000000(,%edx,4),%esi
		inc    %ecx
		mov    0x000024(%ebp),%edx
		mov    %cx,0x000008(%esp)
		mov    %eax,(%edx,%esi,1)

	_072d4e_jump:
		xor    %eax,%eax
		mov    0x00001c(%ebp),%ax
		mov    %eax,0x000004(%esp)
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000004(%esp),%edx
		mov    %eax,(%esp)
		cmp    %edx,%eax
		jl     _072cf9_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_072d73_jump:
		ret    

	_072d74_case:
		mov    _0e5170_data,%eax
		test   %eax,%eax
		je     _072d73_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _072d8b_jump
		add    $0x000024,%eax
		call   _07f44c_func

	_072d8b_jump:
		cmpl   $0x000000,_0e5170_data
		je     _072d73_jump
		mov    $_0e5170_data,%eax
		jmp    _07f44c_func



_072da0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %dx,0x000004(%esp)
		mov    %ebx,%esi
		mov    %ecx,(%esp)
		xor    %ah,%ah
		mov    %ah,0x000008(%esp)
		test   %ebx,%ebx
		je     _072e9e_jump
		test   %ecx,%ecx
		je     _072e9e_jump
		mov    $0x000030,%eax
		call   _07f434_func
		mov    %eax,%ebp
		mov    %eax,_0e5170_data
		test   %eax,%eax
		je     _072e9e_jump
		xor    %eax,%eax
		mov    $0x000028,%ebx
		mov    %di,%ax
		cmp    %ebx,%eax
		jle    _072df1_jump
		mov    %ebx,%eax

	_072df1_jump:
		mov    %eax,%ebx
		mov    $0x000008,%eax
		cmp    %ebx,%eax
		jge    _072dfe_jump
		mov    %ebx,%eax

	_072dfe_jump:
		mov    %ax,0x00001c(%ebp)
		add    %eax,%eax
		mov    %ax,0x00001e(%ebp)
		xor    %eax,%eax
		mov    $0x400921fb,%ecx
		mov    0x00001c(%ebp),%ax
		mov    $0x54442eea,%ebx
		call   _07f56f_func
		call   _07f75f_func
		call   _07fdb0_func
		mov    %ax,0x000020(%ebp)
		xor    %eax,%eax
		mov    $0x54442eea,%ebx
		mov    0x00001c(%ebp),%ax
		mov    $0x400921fb,%ecx
		call   _07f56f_func
		call   _07f75f_func
		mov    $0x3fe00000,%ecx
		xor    %ebx,%ebx
		call   _07f75f_func
		call   _07fdb0_func
		mov    $0x00fa00,%ecx
		mov    _0ccad8_data,%edi
		mov    %ax,0x000022(%ebp)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _072e6f_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_072e6f_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0ccad8_data,%eax
		mov    %eax,0x000028(%ebp)
		mov    (%esp),%eax
		mov    %eax,0x00002c(%ebp)
		xor    %eax,%eax
		mov    0x00001e(%ebp),%ax
		shl    $0x000002,%eax
		call   _07f434_func
		mov    %eax,0x000024(%ebp)
		test   %eax,%eax
		je     _072e9e_jump
		movb   $0x000001,0x000008(%esp)

	_072e9e_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _072eb3_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		call   _072c90_func
		jmp    _072eb8_jump

	_072eb3_jump:
		call   _072d74_case

	_072eb8_jump:
		mov    0x000008(%esp),%al
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_072ec4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0e5170_data,%esi
		mov    0x000018(%esi),%al
		cmp    $0x000001,%al
		jb     _072eed_jump
		jbe    _072f83_jump
		cmp    $0x000002,%al
		je     _073043_jump
		jmp    _0730a4_jump

	_072eed_jump:
		test   %al,%al
		jne    _0730a4_jump
		cmpb   $0x000000,0x000019(%esi)
		jne    _072f32_jump
		cmpw   $0x000000,0x000002(%esi)
		jle    _072f21_jump
		movl   $0x00013f,0x000004(%esi)
		mov    0x000004(%esi),%eax
		mov    %eax,0x000014(%esi)
		xor    %eax,%eax
		mov    $0x00013f,%edx
		mov    0x000022(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x000008(%esi)
		jmp    _072f2e_jump

	_072f21_jump:
		mov    0x000014(%esi),%eax
		movl   $0x00013f,0x000004(%esi)
		mov    %eax,0x000008(%esi)

	_072f2e_jump:
		movb   $0x000001,0x000019(%esi)

	_072f32_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		call   _07f562_func
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %edx,%ebx
		call   _07f56f_func
		mov    %eax,%ebp
		mov    %edx,%edi
		mov    %ecx,%eax
		mov    %ebx,%edx
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _0800d8_func
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _08006a_func
		call   _07f75f_func
		call   _07fdac_func
		xor    %edx,%edx
		mov    %eax,0x00000c(%esi)
		mov    0x000022(%esi),%dx
		mov    0x000014(%esi),%eax
		sub    %edx,%eax
		jmp    _0730a1_jump

	_072f83_jump:
		cmpb   $0x000000,0x000019(%esi)
		jne    _072fbb_jump
		cmpw   $0x000000,0x000002(%esi)
		jle    _072fa1_jump
		mov    0x000014(%esi),%eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,0x000008(%esi)
		jmp    _072fb7_jump

	_072fa1_jump:
		mov    0x000014(%esi),%eax
		mov    %eax,0x000008(%esi)
		xor    %eax,%eax
		mov    $0x00013f,%edx
		mov    0x000022(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x000004(%esi)

	_072fb7_jump:
		movb   $0x000001,0x000019(%esi)

	_072fbb_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		call   _07f562_func
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    0x000020(%esi),%ax
		mov    %edx,0x000004(%esp)
		call   _07f56f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		call   _0853a4_func
		jg     _073021_jump
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		call   _07f56f_func
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		mov    %edi,%ebx
		mov    %ebp,%ecx
		call   _0800d8_func
		mov    %edi,%ebx
		mov    %ebp,%ecx
		call   _080091_func
		call   _07f75f_func
		call   _07fdac_func
		mov    %eax,0x00000c(%esi)
		jmp    _073031_jump

	_073021_jump:
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,%ebp
		mov    %eax,0x00000c(%esi)
		neg    %ebp
		mov    %ebp,0x00000c(%esi)

	_073031_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		mov    $0x00013f,%edx
		sub    %eax,%edx
		mov    %edx,0x000010(%esi)
		jmp    _0730a4_jump

	_073043_jump:
		cmpb   $0x000000,0x000019(%esi)
		jne    _073089_jump
		cmpw   $0x000000,0x000002(%esi)
		jle    _073068_jump
		mov    0x000014(%esi),%eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,%ebx
		mov    %eax,0x000008(%esi)
		neg    %ebx
		mov    %ebx,0x000008(%esi)
		jmp    _073085_jump

	_073068_jump:
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		dec    %eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,%edx
		mov    %eax,0x000014(%esi)
		neg    %edx
		mov    %edx,0x000014(%esi)
		mov    %edx,0x000008(%esi)

	_073085_jump:
		movb   $0x000001,0x000019(%esi)

	_073089_jump:
		mov    0x000014(%esi),%eax
		xor    %edx,%edx
		mov    %eax,0x00000c(%esi)
		mov    %eax,%ecx
		mov    0x000022(%esi),%dx
		mov    0x000014(%esi),%eax
		neg    %ecx
		add    %edx,%eax
		mov    %ecx,0x00000c(%esi)

	_0730a1_jump:
		mov    %eax,0x000010(%esi)

	_0730a4_jump:
		mov    (%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0730af_jump
		neg    %eax

	_0730af_jump:
		mov    (%esi),%di
		add    %eax,%edi
		mov    0x000002(%esi),%ax
		mov    %di,(%esi)
		test   %ax,%ax
		jle    _0730c8_jump
		cmpb   $0x000004,0x000018(%esi)
		jne    _0730d8_jump
		jmp    _0730d3_jump

	_0730c8_jump:
		mov    0x000015(%esi),%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _0730d8_jump

	_0730d3_jump:
		movw   $0x000000,(%esi)

	_0730d8_jump:
		mov    (%esi),%ax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0730e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0e5170_data,%edx
		cmpb   $0x000003,0x000018(%edx)
		jne    _073129_jump
		mov    $0x003e80,%ecx
		mov    0x00002c(%edx),%edi
		cld    
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		cmpw   $0x000000,0x000002(%edx)
		jle    _073118_jump
		mov    0x000018(%edx),%al
		inc    %al
		jmp    _07311d_jump

	_073118_jump:
		mov    0x000018(%edx),%al
		dec    %al

	_07311d_jump:
		movb   $0x000000,0x000019(%edx)
		mov    %al,0x000018(%edx)
		jmp    _073420_jump

	_073129_jump:
		mov    0x000028(%edx),%eax
		mov    %eax,0x000010(%esp)
		mov    0x000018(%edx),%al
		mov    0x00002c(%edx),%ebp
		cmp    $0x000001,%al
		jb     _07314d_jump
		jbe    _073238_jump
		cmp    $0x000002,%al
		je     _073337_jump
		jmp    _0733de_jump

	_07314d_jump:
		test   %al,%al
		jne    _0733de_jump
		cmpw   $0x000000,0x000002(%edx)
		jle    _073174_jump
		cmpb   $0x000001,0x000019(%edx)
		jne    _073174_jump
		mov    $0x003e80,%ecx
		mov    0x000010(%esp),%esi
		mov    %ebp,%edi
		cld    
		rep movsl %ds:(%esi),%es:(%edi)
		movb   $0x000002,0x000019(%edx)

	_073174_jump:
		xor    %esi,%esi
		mov    %esi,0x000008(%esp)
		mov    $0x000140,%edi

	_07317f_jump:
		mov    0x00000c(%edx),%esi
		xor    %ecx,%ecx
		test   %esi,%esi
		jle    _0731b5_jump

	_073188_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		sub    %ecx,%eax
		mov    0x000024(%edx),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    0x000010(%edx),%eax
		mov    0x000014(%edx),%ebx
		add    (%esi),%eax
		mov    0x000010(%esp),%esi
		add    %ecx,%ebx
		add    %eax,%esi
		lea    (%ebx,%ebp,1),%eax
		mov    (%esi),%bl
		mov    %bl,(%eax)
		inc    %ecx
		cmp    0x00000c(%edx),%ecx
		jl     _073188_jump

	_0731b5_jump:
		cmpw   $0x000000,0x000002(%edx)
		jle    _0731e6_jump
		mov    0x00000c(%edx),%ecx
		jmp    _0731d2_jump

	_0731c1_jump:
		mov    0x000014(%edx),%eax
		add    %ecx,%eax
		cmp    $0x000140,%eax
		jge    _0731d1_jump
		movb   $0x000000,(%eax,%ebp,1)

	_0731d1_jump:
		inc    %ecx

	_0731d2_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0731dd_jump
		neg    %eax

	_0731dd_jump:
		add    0x00000c(%edx),%eax
		cmp    %eax,%ecx
		jge    _07320f_jump
		jmp    _0731c1_jump

	_0731e6_jump:
		mov    $0xffffffff,%ecx
		mov    0x000010(%esp),%ebx
		jmp    _0731ff_jump

	_0731f1_jump:
		mov    0x000014(%edx),%eax
		sub    %ecx,%eax
		lea    (%eax,%ebp,1),%esi
		mov    (%ebx,%eax,1),%al
		inc    %ecx
		mov    %al,(%esi)

	_0731ff_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _07320a_jump
		neg    %eax

	_07320a_jump:
		dec    %eax
		cmp    %eax,%ecx
		jl     _0731f1_jump

	_07320f_jump:
		mov    0x000010(%esp),%esi
		mov    0x000008(%esp),%eax
		add    $0x000140,%ebp
		add    %edi,%esi
		inc    %eax
		mov    %esi,0x000010(%esp)
		mov    %eax,0x000008(%esp)
		cmp    $0x0000c8,%eax
		jge    _0733de_jump
		jmp    _07317f_jump

	_073238_jump:
		xor    %ecx,%ecx
		mov    %ecx,0x000004(%esp)
		mov    0x00000c(%edx),%ecx
		jmp    _073299_jump

	_073243_jump:
		add    %ecx,%eax
		mov    0x000024(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x000010(%edx),%eax
		mov    (%ebx),%edi
		lea    (%eax,%edi,1),%ebx
		mov    0x000014(%edx),%esi
		mov    $0x00013f,%eax
		mov    0x000010(%esp),%edi
		cmp    %ebx,%eax
		jle    _073267_jump
		mov    %ebx,%eax

	_073267_jump:
		add    %eax,%edi
		mov    (%edi),%bl
		add    %ecx,%esi
		test   %bl,%bl
		jne    _07328f_jump
		test   %ecx,%ecx
		jg     _073279_jump
		mov    %esi,%eax
		jmp    _07328f_jump

	_073279_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		add    %ecx,%eax
		mov    0x000024(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x000010(%edx),%eax
		sub    (%ebx),%eax
		dec    %eax

	_07328f_jump:
		add    0x000010(%esp),%eax
		mov    (%eax),%al
		inc    %ecx
		mov    %al,(%esi,%ebp,1)

	_073299_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		cmp    %eax,%ecx
		jl     _073243_jump
		cmpw   $0x000000,0x000002(%edx)
		jle    _0732d1_jump
		mov    %eax,%ecx
		jmp    _0732b8_jump

	_0732ae_jump:
		mov    0x000014(%edx),%eax
		add    %ecx,%eax
		inc    %ecx
		movb   $0x000000,(%eax,%ebp,1)

	_0732b8_jump:
		mov    (%edx),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x00001c(%edx),%bx
		test   %eax,%eax
		jge    _0732c9_jump
		neg    %eax

	_0732c9_jump:
		add    %ebx,%eax
		cmp    %eax,%ecx
		jge    _073307_jump
		jmp    _0732ae_jump

	_0732d1_jump:
		cmp    0x000014(%edx),%eax
		jge    _073307_jump
		mov    %eax,%ebx
		mov    (%edx),%eax
		sar    $0x000010,%eax
		neg    %ebx
		test   %eax,%eax
		jge    _0732e5_jump
		neg    %eax

	_0732e5_jump:
		sub    %eax,%ebx
		mov    0x00000c(%edx),%esi
		mov    %ebx,%eax
		cmp    %esi,%ebx
		jge    _073307_jump

	_0732f0_jump:
		mov    0x000014(%edx),%ebx
		add    %eax,%ebx
		mov    0x000010(%esp),%ecx
		lea    (%ebx,%ebp,1),%esi
		mov    (%ecx,%ebx,1),%bl
		mov    %bl,(%esi)
		inc    %eax
		cmp    0x00000c(%edx),%eax
		jl     _0732f0_jump

	_073307_jump:
		mov    0x000010(%esp),%edi
		mov    0x000004(%esp),%eax
		add    $0x000140,%ebp
		add    $0x000140,%edi
		inc    %eax
		mov    %edi,0x000010(%esp)
		mov    %eax,0x000004(%esp)
		cmp    $0x0000c8,%eax
		jge    _0733de_jump
		mov    0x00000c(%edx),%ecx
		jmp    _073299_jump

	_073337_jump:
		xor    %ebx,%ebx
		mov    %ebx,(%esp)

	_07333c_jump:
		mov    0x00000c(%edx),%ecx
		jmp    _073382_jump

	_073341_jump:
		add    %ecx,%eax
		mov    0x000024(%edx),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    0x000014(%edx),%ebx
		mov    0x000010(%edx),%eax
		mov    (%esi),%edi
		add    %ecx,%ebx
		add    %edi,%eax
		mov    0x000010(%esp),%edi
		mov    %ebx,0x00000c(%esp)
		cmpb   $0x000000,(%edi,%eax,1)
		jne    _073374_jump
		test   %ecx,%ecx
		jge    _07336f_jump
		mov    0x00000c(%esp),%eax
		jmp    _073374_jump

	_07336f_jump:
		mov    0x000010(%edx),%eax
		sub    (%esi),%eax

	_073374_jump:
		add    0x000010(%esp),%eax
		mov    0x00000c(%esp),%ebx
		mov    (%eax),%al
		inc    %ecx
		mov    %al,(%ebx,%ebp,1)

	_073382_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		cmp    %eax,%ecx
		jl     _073341_jump
		cmpw   $0x000000,0x000002(%edx)
		jle    _0733b8_jump
		mov    %eax,%ecx
		jmp    _0733a1_jump

	_073397_jump:
		mov    0x000014(%edx),%eax
		add    %ecx,%eax
		inc    %ecx
		movb   $0x000000,(%eax,%ebp,1)

	_0733a1_jump:
		mov    (%edx),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x00001c(%edx),%bx
		test   %eax,%eax
		jge    _0733b2_jump
		neg    %eax

	_0733b2_jump:
		add    %ebx,%eax
		cmp    %eax,%ecx
		jl     _073397_jump

	_0733b8_jump:
		mov    0x000010(%esp),%edi
		mov    (%esp),%eax
		add    $0x000140,%ebp
		add    $0x000140,%edi
		inc    %eax
		mov    %edi,0x000010(%esp)
		mov    %eax,(%esp)
		cmp    $0x0000c8,%eax
		jl     _07333c_jump

	_0733de_jump:
		mov    (%edx),%eax
		mov    0x000014(%edx),%ecx
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    0x000002(%edx),%bx
		mov    %ecx,0x000014(%edx)
		test   %bx,%bx
		jle    _07340f_jump
		cmp    0x000008(%edx),%ecx
		jge    _073420_jump
		mov    0x000018(%edx),%cl
		movb   $0x000000,0x000019(%edx)
		inc    %cl
		mov    %cl,0x000018(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07340f_jump:
		cmp    0x000004(%edx),%ecx
		jle    _073420_jump
		mov    0x000018(%edx),%bh
		movb   $0x000000,0x000019(%edx)
		dec    %bh
		mov    %bh,0x000018(%edx)

	_073420_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073430_func:
		xor    %ah,%ah
		mov    %ah,_0ce4d9_data
		ret    



_07343c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    _0ce950_data,%al
		mov    %al,0x00025a(%edx)
		mov    _0cf2ae_data,%ax
		mov    %ax,0x000034(%edx)
		mov    _0cf2b0_data,%ax
		mov    %ax,0x000036(%edx)
		mov    _0ce06c_data,%ax
		mov    %ax,0x000038(%edx)
		mov    _0ce070_data,%ax
		mov    %ax,0x00003a(%edx)
		mov    _0ce07a_data,%ax
		mov    %ax,0x00003c(%edx)
		mov    _0ce07c_data,%ax
		mov    %ax,0x00003e(%edx)
		mov    _0ce0c5_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,0x000040(%edx)
		mov    _0cf221_data,%al
		add    %al,%al
		shr    $0x000006,%al
		mov    %al,0x000254(%edx)
		mov    _0cf220_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    %al,0x000255(%edx)
		mov    _0cf220_data,%al
		and    $0x000001,%al
		mov    %al,0x000256(%edx)
		test   %ecx,%ecx
		je     _073500_jump
		mov    0x000034(%ecx),%ax
		mov    %ax,0x000046(%edx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x000042(%edx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x000044(%edx)
		mov    0x00007b(%ecx),%al
		mov    %al,0x000248(%edx)
		mov    0x000081(%ecx),%al
		and    $0x000001,%al
		mov    %al,0x000249(%edx)
		jmp    _073506_jump

	_073500_jump:
		movw   $0x00ffff,0x000046(%edx)

	_073506_jump:
		mov    _0cc7a2_data,%ecx
		mov    _0ce8d4_data,%esi
		sar    $0x000010,%ecx
		lea    0x000048(%edx),%edi
		add    %ecx,%ecx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %al,%al

	_07352c_jump:
		xor    %ecx,%ecx
		mov    %al,%cl
		mov    _0ce0a6_data(%ecx),%ah
		mov    %ah,0x00024a(%ecx,%edx,1)
		inc    %al
		cmp    $0x000005,%al
		jb     _07352c_jump
		mov    _0ce0ae_data,%al
		mov    %al,0x00024f(%edx)
		mov    _0ce0af_data,%al
		mov    %al,0x000250(%edx)
		mov    _0ce0b1_data,%al
		mov    %al,0x000251(%edx)
		mov    _0ce0b0_data,%al
		mov    %al,0x000252(%edx)
		xor    %al,%al

	_073571_jump:
		xor    %ecx,%ecx
		mov    %al,%cl
		mov    _0ca908_data(,%ecx,2),%bx
		inc    %al
		mov    %bx,0x000020(%edx,%ecx,2)
		cmp    $0x000008,%al
		jb     _073571_jump
		mov    _0cf21c_data,%ax
		mov    _0cc7a4_data,%cx
		mov    %ax,0x000030(%edx)
		mov    _0cf21a_data,%ax
		xor    %ebx,%ebx
		mov    %ax,0x000032(%edx)
		mov    _0ce170_data,%al
		mov    %ecx,(%esp)
		mov    %al,0x000253(%edx)
		mov    _0cc7a0_data,%eax
		test   %cx,%cx
		jle    _07361d_jump

	_0735bd_jump:
		mov    0x000060(%eax),%di
		cmp    $0x00008d,%di
		je     _0735dd_jump
		cmp    $0x0000a4,%di
		je     _0735dd_jump
		cmp    $0x0000b3,%di
		je     _0735dd_jump
		cmp    $0x0000f2,%di
		jne    _07360f_jump

	_0735dd_jump:
		mov    %ebx,%ecx
		xor    %bh,%ch
		and    $0x00001f,%cl
		mov    $0x000001,%esi
		movswl %cx,%ecx
		movswl %bx,%edi
		shl    %cl,%esi
		mov    0x000081(%eax),%cl
		sar    $0x000005,%edi
		test   $0x000004,%cl
		je     _073607_jump
		movswl %di,%ecx
		or     %esi,(%edx,%ecx,4)
		jmp    _07360f_jump

	_073607_jump:
		movswl %di,%ecx
		not    %esi
		and    %esi,(%edx,%ecx,4)

	_07360f_jump:
		mov    (%esp),%esi
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jl     _0735bd_jump

	_07361d_jump:
		mov    _0cf471_data,%al
		movb   $0x000001,0x000259(%edx)
		mov    %al,0x000258(%edx)
		mov    _0cf474_data,%al
		mov    %al,0x000257(%edx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_073644_switch:
		.long   _0738d0_case
		.long   _0738d7_case
		.long   _0738d0_case
		.long   _0738d7_case
		.long   _0738c7_case
		.long   _0738d7_case
		.long   _0738d7_case
		.long   _0738d0_case
		.long   _0738d7_case
		.long   _0738d0_case
		.long   _0738d7_case
		.long   _0738c7_case




_073674_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edx
		cmpb   $0x000000,0x000259(%eax)
		je     _073a6f_jump
		mov    _0cf221_data,%bl
		test   $0x000002,%bl
		je     _0736b2_jump
		mov    $0x000021,%ecx
		mov    $_0ce044_data,%edi
		mov    %bl,%bh
		mov    $_0ce7cc_data,%esi
		and    $0x0000fd,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %bh,_0cf221_data

	_0736b2_jump:
		mov    0x00025a(%edx),%al
		mov    %al,_0ce950_data
		mov    0x000034(%edx),%ax
		mov    %ax,_0cf2ae_data
		mov    0x000036(%edx),%ax
		mov    %ax,_0cf2b0_data
		mov    0x000036(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,_0ce06c_data
		mov    0x000038(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,_0ce070_data
		mov    0x00003c(%edx),%ax
		mov    _0ce0c5_data,%cl
		mov    %ax,_0ce07a_data
		mov    0x00003e(%edx),%ax
		and    $0x0000f7,%cl
		mov    %ax,_0ce07c_data
		mov    0x000040(%edx),%al
		mov    %cl,_0ce0c5_data
		and    $0x000001,%al
		mov    %cl,%ch
		shl    $0x000003,%al
		or     %al,%ch
		mov    0x000255(%edx),%al
		and    $0x000001,%al
		mov    _0cf220_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0cf220_data
		shl    $0x000003,%al
		mov    %ah,%bl
		or     %al,%bl
		mov    %bl,_0cf220_data
		mov    _0cf282_data,%bx
		mov    %ch,_0ce0c5_data
		cmp    $0x000006,%bx
		jne    _07379c_jump
		cmpw   $0x000003,_0cf270_data
		jne    _07379c_jump
		mov    _0cf220_data,%bh
		mov    0x000256(%edx),%al
		and    $0x0000fe,%bh
		and    $0x000001,%al
		mov    %bh,%cl
		mov    %bh,_0cf220_data
		or     %al,%cl
		mov    %cl,_0cf220_data
		mov    0x000254(%edx),%al
		mov    _0cf221_data,%ch
		and    $0x000003,%al
		and    $0x00009f,%ch
		shl    $0x000005,%al
		mov    %ch,%ah
		mov    %ch,_0cf221_data
		or     %al,%ah
		mov    %ah,_0cf221_data

	_07379c_jump:
		mov    0x000044(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0737f5_jump
		mov    %eax,%ebx
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000040(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,0x000028(%eax)
		mov    0x000042(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    0x000248(%edx),%bl
		mov    %bl,0x00007b(%eax)
		mov    0x000249(%edx),%bl
		and    $0x000001,%bl
		mov    0x000081(%eax),%bh
		and    $0x0000fe,%bh
		mov    %bh,%cl
		mov    %bh,0x000081(%eax)
		or     %bl,%cl
		mov    %cl,0x000081(%eax)

	_0737f5_jump:
		cmp    $_0ce280_data,%edx
		jne    _07385d_jump
		mov    _0cc7a4_data,%si
		xor    %eax,%eax
		test   %si,%si
		jle    _07385d_jump

	_07380b_jump:
		movswl %ax,%ebx
		lea    0x000000(,%ebx,2),%ecx
		imul   $0x000084,%ebx,%ebx
		mov    _0ce8d4_data,%esi
		lea    (%edx,%ecx,1),%edi
		add    %esi,%ecx
		mov    0x000048(%edi),%si
		mov    %si,(%ecx)
		cmp    %ax,%si
		je     _073842_jump
		mov    _0cc7a0_data,%ecx
		movl   $0x000001,0x000020(%ecx,%ebx,1)
		jmp    _073850_jump

	_073842_jump:
		mov    _0cc7a0_data,%ecx
		movl   $0x000000,0x000020(%ecx,%ebx,1)

	_073850_jump:
		mov    _0cc7a4_data,%di
		inc    %eax
		cmp    %di,%ax
		jl     _07380b_jump

	_07385d_jump:
		xor    %eax,%eax
		jmp    _073872_jump

	_073861_jump:
		movswl %ax,%ecx
		mov    0x00024a(%ecx,%edx,1),%bl
		inc    %eax
		mov    %bl,_0ce0a6_data(%ecx)

	_073872_jump:
		movswl %ax,%ebx
		cmp    $0x000005,%ebx
		jb     _073861_jump
		mov    0x00024f(%edx),%al
		mov    %al,_0ce0ae_data
		mov    0x000250(%edx),%al
		mov    %al,_0ce0af_data
		mov    0x000251(%edx),%al
		mov    %al,_0ce0b1_data
		mov    0x000252(%edx),%al
		mov    %al,_0ce0b0_data
		cmp    $_0ce280_data,%edx
		jne    _0738d7_case
		mov    0x000253(%edx),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _0738d7_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_073644_switch(,%eax,4)

	_0738c7_case:
		movb   $0x000003,0x000253(%edx)
		jmp    _0738d7_case

	_0738d0_case:
		movb   $0x000001,0x000253(%edx)

	_0738d7_case:
		mov    _0ce0d0_data,%ebx
		mov    0x000253(%edx),%al
		mov    %al,0x00006e(%ebx)
		mov    %al,_0ce170_data
		mov    0x000258(%edx),%al
		mov    %al,_0cf471_data
		xor    %eax,%eax
		mov    %ax,_0cf250_data
		mov    %ax,_0cf276_data

	_073904_jump:
		movswl %ax,%ebx
		mov    0x000020(%edx,%ebx,2),%cx
		inc    %eax
		mov    %cx,_0ca908_data(,%ebx,2)
		cmp    $0x000008,%ax
		jl     _073904_jump
		mov    $0xffffffff,%edi
		mov    $0x000001,%ebx
		mov    0x000030(%edx),%ax
		xor    %ecx,%ecx
		mov    %ax,_0cf21c_data
		mov    %cx,_0ce084_data
		mov    %cx,_0ce086_data
		mov    %di,_0ce09a_data
		mov    %ebx,_0ce068_data
		mov    _0ce0c5_data,%ch
		mov    0x000032(%edx),%ax
		xor    %ebx,%ebx
		or     $0x000004,%ch
		mov    %ax,_0cf21a_data
		mov    %ch,_0ce0c5_data
		xor    %eax,%eax
		mov    _0cc7a4_data,%cx
		mov    %ax,_0cf2a4_data
		mov    %ax,_0cf2a6_data
		mov    _0cc7a0_data,%eax
		mov    %ecx,(%esp)
		test   %cx,%cx
		jle    _073a4e_jump

	_07398d_jump:
		mov    0x000060(%eax),%di
		cmp    $0x000003,%di
		je     _073a35_jump
		cmp    $0x00000d,%di
		je     _073a35_jump
		cmp    $0x00000f,%di
		je     _073a35_jump
		cmp    $0x00003b,%di
		je     _073a35_jump
		cmp    $0x000024,%di
		je     _073a35_jump
		cmp    $0x000042,%di
		je     _073a35_jump
		cmp    $0x00003e,%di
		je     _073a35_jump
		cmp    $0x000063,%di
		je     _073a35_jump
		cmp    $0x00008d,%di
		je     _073a0b_jump
		cmp    $0x0000a4,%di
		je     _073a0b_jump
		cmp    $0x0000b3,%di
		je     _0739f9_jump
		cmp    $0x0000f2,%di
		jne    _073a05_jump

	_0739f9_jump:
		movl   $0x000001,0x00001c(%eax)
		mov    0x00001c(%eax),%ecx
		jmp    _073a07_jump

	_073a05_jump:
		xor    %ecx,%ecx

	_073a07_jump:
		test   %ecx,%ecx
		je     _073a3c_jump

	_073a0b_jump:
		movswl %bx,%ecx
		sar    $0x000005,%ecx
		mov    %ecx,%edi
		mov    %ebx,%ecx
		xor    %bh,%ch
		and    $0x00001f,%cl
		mov    $0x000001,%esi
		movswl %cx,%ecx
		shl    %cl,%esi
		movswl %di,%ecx
		test   %esi,(%edx,%ecx,4)
		je     _073a35_jump
		orb    $0x000004,0x000081(%eax)
		jmp    _073a3c_jump

	_073a35_jump:
		andb   $0x0000fb,0x000081(%eax)

	_073a3c_jump:
		mov    (%esp),%esi
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jl     _07398d_jump

	_073a4e_jump:
		xor    %al,%al
		mov    %al,_0cf469_data
		mov    0x000257(%edx),%al
		inc    %al
		mov    %al,_0cf474_data
		xor    %eax,%eax
		mov    0x000257(%edx),%al
		call   _03c62c_func

	_073a6f_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073a78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cf282_data,%si
		mov    _0cf270_data,%di
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		xor    %edx,%edx
		cmp    %ax,%si
		jle    _073ab3_jump

	_073a9d_jump:
		movswl %ax,%ebx
		mov    _094a2c_data(%ebx),%bl
		xor    %bh,%bh
		shl    $0x000005,%ebx
		inc    %eax
		add    %ebx,%edx
		cmp    %si,%ax
		jl     _073a9d_jump

	_073ab3_jump:
		mov    $0x000001,%eax
		cmp    %ax,%di
		jle    _073ac6_jump

	_073abd_jump:
		inc    %eax
		add    $0x000020,%edx
		cmp    %di,%ax
		jl     _073abd_jump

	_073ac6_jump:
		mov    $0x000003,%cl
		mov    (%esp),%eax
		mov    %si,_0cf282_data
		mov    %di,_0cf270_data
		test   %ax,%ax
		js     _073ae3_jump
		sar    %cl,%ax
		jmp    _073aec_jump

	_073ae3_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_073aec_jump:
		mov    _0cf282_data,%si
		add    %edx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073b20_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _073a78_func
		mov    %dl,%cl
		movswl %ax,%ebx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _073b42_jump
		sar    %cl,%ax
		jmp    _073b4b_jump

	_073b42_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_073b4b_jump:
		or     %al,_0cb508_data(%ebx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073b58_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _073a78_func
		mov    %dl,%cl
		movswl %ax,%ebx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _073b7a_jump
		sar    %cl,%ax
		jmp    _073b83_jump

	_073b7a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_073b83_jump:
		and    _0cb508_data(%ebx),%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073b90_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx

	_073b95_jump:
		movswl %dx,%eax
		imul   $0x000014,%eax,%ebx
		mov    _094d1c_data(%ebx),%cl
		and    $0x000001,%cl
		mov    _0caab8_data(%eax),%ch
		and    $0x0000fe,%ch
		mov    %ch,_0caab8_data(%eax)
		or     %cl,%ch
		mov    %ch,_0caab8_data(%eax)
		mov    _094d1c_data(%ebx),%cl
		shl    $0x000005,%cl
		shr    $0x000007,%cl
		and    $0x000001,%cl
		and    $0x0000fd,%ch
		mov    _094d1d_data(%ebx),%bl
		mov    %ch,_0caab8_data(%eax)
		add    %cl,%cl
		and    $0x000007,%bl
		or     %cl,%ch
		mov    %ch,%bh
		mov    %ch,_0caab8_data(%eax)
		and    $0x0000e3,%bh
		mov    %bh,_0caab8_data(%eax)
		shl    $0x000002,%bl
		mov    %bh,%cl
		or     %bl,%cl
		inc    %edx
		mov    %cl,_0caab8_data(%eax)
		cmp    $0x000018,%dx
		jl     _073b95_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073c0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx

	_073c11_jump:
		movswl %bx,%edx
		imul   $0x000014,%edx,%eax
		mov    _0caab8_data(%edx),%cl
		and    $0x000001,%cl
		mov    _094d1c_data(%eax),%ch
		and    $0x0000fe,%ch
		mov    %ch,_094d1c_data(%eax)
		or     %cl,%ch
		mov    %ch,_094d1c_data(%eax)
		mov    _0caab8_data(%edx),%cl
		shl    $0x000006,%cl
		shr    $0x000007,%cl
		mov    _0caab8_data(%edx),%dl
		and    $0x000001,%cl
		shl    $0x000003,%dl
		and    $0x0000fb,%ch
		shr    $0x000005,%dl
		mov    %ch,_094d1c_data(%eax)
		shl    $0x000002,%cl
		mov    %dl,_094d1d_data(%eax)
		or     %cl,%ch
		inc    %ebx
		mov    %ch,_094d1c_data(%eax)
		cmp    $0x000018,%bx
		jl     _073c11_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073c78_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $_0c1234_data,%edx
		call   _0810de_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _073ca9_jump
		mov    $0x000002,%ebx
		xor    %edx,%edx
		call   _08050a_func
		mov    %ecx,%eax
		call   _0853dc_func
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _081192_func
		mov    %edx,%eax

	_073ca9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073cb0_func:
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cf41c_data
		jne    _073cfa_jump
		cmpb   $0x000000,_0cf445_data
		je     _073cfa_jump
		mov    _0cf41d_data,%dh
		test   %dh,%dh
		je     _073cfa_jump
		jmp    _073cd7_jump

	_073cd7_jump:
		mov    %dh,%al
		mov    $0x001000,%ecx
		mov    $0x0f0000,%esi

	_073ce3_jump:
		sub    (%esi),%al
		inc    %esi
		dec    %ecx
		cmp    $0x000000,%ecx
		jne    _073ce3_jump
		cmp    $0x000000,%al
		je     _073cf2_jump

	_073cf0_jump:
		jmp    _073cf0_jump

	_073cf2_jump:
		jmp    _073cfa_jump

	_073cfa_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_073d00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000100,%esp
		mov    %al,%dl
		mov    $_0cc98c_data,%esi
		mov    %esp,%edi
		call   _073cb0_func
		push   %edi

	_073d1b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _073d33_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _073d1b_jump

	_073d33_jump:
		pop    %edi
		mov    $_0c1238_data,%esi
		mov    %esp,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_073d44_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _073d5c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _073d44_jump

	_073d5c_jump:
		pop    %edi
		mov    %esp,%edi
		mov    $0x00000a,%ebx
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %esp,%eax
		movzbl %dl,%ebp
		add    %eax,%ecx
		mov    $_0c1240_data,%esi
		mov    %ecx,%edx
		mov    %ebp,%eax
		mov    %esp,%edi
		call   _080a4e_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_073d8e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _073da6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _073d8e_jump

	_073da6_jump:
		pop    %edi
		lea    0x0000ec(%esp),%eax
		mov    $_0cc98c_data,%esi
		lea    0x000078(%esp),%edi
		call   _08546d_func
		push   %edi

	_073dbd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _073dd5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _073dbd_jump

	_073dd5_jump:
		pop    %edi
		lea    0x0000ec(%esp),%esi
		lea    0x000078(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_073dea_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _073e02_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _073dea_jump

	_073e02_jump:
		pop    %edi
		push   $0x000180
		push   $0x000222
		lea    0x000080(%esp),%eax
		push   %eax
		call   _080bde_func
		add    $0x00000c,%esp
		movswl %ax,%ecx
		mov    %eax,%esi
		cmp    $0xffffffff,%ecx
		je     _073f68_jump
		shl    $0x000002,%ebp
		mov    $0x000004,%ebx
		lea    -0x000004(%ebp),%edx
		mov    %ecx,%eax
		add    $_0cd148_data,%edx
		call   _085521_func
		mov    $0x000001,%ebx
		mov    $_0cf434_data,%edx
		mov    %ecx,%eax
		call   _085521_func
		call   _073b90_func
		mov    $0x000018,%ebx
		mov    $_0caab8_data,%edx
		mov    %ecx,%eax
		call   _085521_func
		mov    $0x000002,%ebx
		mov    $_0cf220_data,%edx
		mov    %ecx,%eax
		call   _085521_func
		mov    $0x000014,%ebx
		mov    $_0ce164_data,%edx
		mov    %ecx,%eax
		call   _085521_func
		mov    $0x00000a,%ebx
		mov    $_0ce94a_data,%edx
		mov    %ecx,%eax
		call   _085521_func
		mov    $0x000001,%ebx
		mov    $_0ce0ba_data,%edx
		mov    %ecx,%eax
		call   _085521_func
		mov    $0x000a20,%ebx
		mov    $_0cb508_data,%edx
		mov    %ecx,%eax
		call   _085521_func
		mov    $0x000018,%ebx
		mov    $_0caad0_data,%edx
		mov    %ecx,%eax
		call   _085521_func
		cmpb   $0x000000,_0cf445_data
		je     _073ee5_jump
		mov    $0x000002,%ebx
		mov    $_0cf232_data,%edx
		jmp    _073eef_jump

	_073ee5_jump:
		mov    $0x000002,%ebx
		mov    $_0cf44f_data,%edx

	_073eef_jump:
		mov    %ecx,%eax
		call   _085521_func
		mov    $0x000002,%ebx
		movswl %si,%ecx
		mov    $_0cf228_data,%edx
		mov    %ecx,%eax
		call   _085521_func
		mov    %ecx,%eax
		mov    $_0c1248_data,%edx
		call   _080e81_func
		lea    0x000078(%esp),%eax
		call   _0810de_func
		mov    %eax,%esi
		mov    %eax,%edi
		test   %eax,%eax
		je     _073f68_jump
		mov    $_0c124c_data,%edx
		mov    %esp,%eax
		call   _0810de_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _073f57_jump
		mov    %eax,%edx
		mov    %esi,%eax
		call   _031c78_func
		call   _031970_func
		mov    %al,0x0000fc(%esp)
		mov    %ecx,%eax
		call   _081192_func
		jmp    _073f5f_jump

	_073f57_jump:
		movb   $0x000001,0x0000fc(%esp)

	_073f5f_jump:
		mov    %edi,%eax
		call   _081192_func
		jmp    _073f70_jump

	_073f68_jump:
		movb   $0x000001,0x0000fc(%esp)

	_073f70_jump:
		mov    $_0c124c_data,%edx
		lea    0x000078(%esp),%eax
		call   _0810de_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _073fa1_jump
		mov    $0x000001,%ebx
		mov    $0x000a7a,%edx
		mov    %eax,%ecx
		mov    $_0ce044_data,%eax
		call   _080606_func
		mov    %esi,%eax
		call   _081192_func

	_073fa1_jump:
		lea    0x000078(%esp),%eax
		call   _07f953_func
		cmpb   $0x000000,_0cf41c_data
		jne    _073ff1_jump
		cmpb   $0x000000,_0cf445_data
		je     _073ff1_jump
		mov    _0cf41a_data,%ch
		test   %ch,%ch
		je     _073ff1_jump
		jmp    _073fce_jump

	_073fce_jump:
		mov    %ch,%al
		mov    $0x001000,%ecx
		mov    $0x0c0000,%esi

	_073fda_jump:
		sub    (%esi),%al
		inc    %esi
		dec    %ecx
		cmp    $0x000000,%ecx
		jne    _073fda_jump
		cmp    $0x000000,%al
		je     _073fe9_jump

	_073fe7_jump:
		jmp    _073fe7_jump

	_073fe9_jump:
		jmp    _073ff1_jump

	_073ff1_jump:
		mov    0x0000fc(%esp),%al
		add    $0x000100,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074008_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000104,%esp
		mov    %al,0x000100(%esp)
		mov    $_0cc98c_data,%esi
		mov    %esp,%edi
		mov    %esp,%edx
		push   %edi

	_074024_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07403c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074024_jump

	_07403c_jump:
		pop    %edi
		mov    $_0c1238_data,%esi
		mov    %esp,%edi
		mov    $0x00000a,%ebx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_074052_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07406a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074052_jump

	_07406a_jump:
		pop    %edi
		mov    %esp,%edi
		mov    $_0c1240_data,%esi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		xor    %eax,%eax
		add    %ecx,%edx
		mov    0x000100(%esp),%al
		mov    %esp,%edi
		call   _080a4e_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_074097_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0740af_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074097_jump

	_0740af_jump:
		pop    %edi
		lea    0x0000ec(%esp),%eax
		mov    $_0cc98c_data,%esi
		lea    0x000078(%esp),%edi
		call   _08546d_func
		push   %edi

	_0740c6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0740de_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0740c6_jump

	_0740de_jump:
		pop    %edi
		lea    0x0000ec(%esp),%esi
		lea    0x000078(%esp),%edi
		mov    $_0c1248_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0740f8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074110_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0740f8_jump

	_074110_jump:
		pop    %edi
		mov    %esp,%eax
		call   _0810de_func
		mov    %eax,%esi
		mov    %eax,%edi
		test   %eax,%eax
		je     _074163_jump
		mov    $_0c124c_data,%edx
		lea    0x000078(%esp),%eax
		call   _0810de_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _074152_jump
		mov    %eax,%edx
		mov    %esi,%eax
		call   _031e58_func
		call   _031970_func
		mov    %al,0x0000fc(%esp)
		mov    %ecx,%eax
		call   _081192_func
		jmp    _07415a_jump

	_074152_jump:
		movb   $0x000001,0x0000fc(%esp)

	_07415a_jump:
		mov    %edi,%eax
		call   _081192_func
		jmp    _07416b_jump

	_074163_jump:
		movb   $0x000001,0x0000fc(%esp)

	_07416b_jump:
		cmpb   $0x000000,0x0000fc(%esp)
		jne    _07418d_jump
		lea    0x000078(%esp),%eax
		call   _073c78_func
		cmp    $0x000a7a,%eax
		je     _07418d_jump
		movb   $0x000001,0x0000fc(%esp)

	_07418d_jump:
		cmpb   $0x000000,0x0000fc(%esp)
		jne    _0742ab_jump
		push   $0x000180
		push   $0x000200
		lea    0x000080(%esp),%eax
		push   %eax
		call   _080bde_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		je     _0742ab_jump
		xor    %eax,%eax
		mov    0x000100(%esp),%al
		shl    $0x000002,%eax
		mov    $_0cd148_data,%edx
		sub    $0x000004,%eax
		mov    $0x000004,%ebx
		add    %eax,%edx
		mov    %ecx,%eax
		call   _084de6_func
		mov    $0x000001,%ebx
		mov    $_0cf434_data,%edx
		mov    %ecx,%eax
		call   _084de6_func
		mov    $0x000018,%ebx
		mov    $_0caab8_data,%edx
		mov    %ecx,%eax
		call   _084de6_func
		mov    $0x000002,%ebx
		mov    $_0cf220_data,%edx
		mov    %ecx,%eax
		call   _084de6_func
		mov    $0x000014,%ebx
		mov    $_0ce164_data,%edx
		mov    %ecx,%eax
		call   _084de6_func
		mov    $0x00000a,%ebx
		mov    $_0ce94a_data,%edx
		mov    %ecx,%eax
		call   _084de6_func
		mov    $0x000001,%ebx
		mov    $_0ce0ba_data,%edx
		mov    %ecx,%eax
		call   _084de6_func
		mov    $0x000a20,%ebx
		mov    $_0cb508_data,%edx
		mov    %ecx,%eax
		call   _084de6_func
		mov    $0x000018,%ebx
		mov    $_0caad0_data,%edx
		mov    %ecx,%eax
		call   _084de6_func
		mov    $0x000002,%ebx
		mov    $_0cf44f_data,%edx
		mov    %ecx,%eax
		call   _084de6_func
		mov    $0x000002,%ebx
		mov    $_0cf228_data,%edx
		mov    %ecx,%eax
		call   _084de6_func
		mov    %ecx,%eax
		call   _080e81_func
		xor    %edx,%edx
		call   _073c0c_func
		mov    %dx,_0cf22c_data
		mov    %dx,_0cf22a_data
		jmp    _0742b3_jump

	_0742ab_jump:
		movb   $0x000001,0x0000fc(%esp)

	_0742b3_jump:
		mov    $_0c124c_data,%edx
		lea    0x000078(%esp),%eax
		call   _0810de_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _0742e4_jump
		mov    $0x000001,%ebx
		mov    $0x000a7a,%edx
		mov    %eax,%ecx
		mov    $_0ce044_data,%eax
		call   _080606_func
		mov    %esi,%eax
		call   _081192_func

	_0742e4_jump:
		lea    0x000078(%esp),%eax
		call   _07f953_func
		mov    0x0000fc(%esp),%al
		add    $0x000104,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074300_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000104,%esp
		mov    %al,0x0000fc(%esp)
		mov    $_0cc98c_data,%esi
		mov    %esp,%edi
		mov    %esp,%edx
		push   %edi

	_07431c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074334_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07431c_jump

	_074334_jump:
		pop    %edi
		mov    $_0c1238_data,%esi
		mov    %esp,%edi
		mov    $0x00000a,%ebx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_07434a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074362_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07434a_jump

	_074362_jump:
		pop    %edi
		mov    %esp,%edi
		mov    $_0c1240_data,%esi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		xor    %eax,%eax
		add    %ecx,%edx
		mov    0x0000fc(%esp),%al
		mov    %esp,%edi
		call   _080a4e_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_07438f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0743a7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07438f_jump

	_0743a7_jump:
		pop    %edi
		lea    0x0000ec(%esp),%eax
		mov    $_0cc98c_data,%esi
		lea    0x000078(%esp),%edi
		call   _08546d_func
		push   %edi

	_0743be_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0743d6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0743be_jump

	_0743d6_jump:
		pop    %edi
		lea    0x0000ec(%esp),%esi
		lea    0x000078(%esp),%edi
		mov    $_0c1248_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0743f0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074408_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0743f0_jump

	_074408_jump:
		pop    %edi
		mov    %esp,%eax
		call   _0810de_func
		mov    %eax,%esi
		mov    %eax,%ebx
		test   %eax,%eax
		je     _07445b_jump
		mov    $_0c124c_data,%edx
		lea    0x000078(%esp),%eax
		call   _0810de_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _07444a_jump
		mov    %eax,%edx
		mov    %esi,%eax
		call   _031e58_func
		call   _031970_func
		mov    %al,0x000100(%esp)
		mov    %ecx,%eax
		call   _081192_func
		jmp    _074452_jump

	_07444a_jump:
		movb   $0x000001,0x000100(%esp)

	_074452_jump:
		mov    %ebx,%eax
		call   _081192_func
		jmp    _074463_jump

	_07445b_jump:
		movb   $0x000001,0x000100(%esp)

	_074463_jump:
		cmpb   $0x000000,0x000100(%esp)
		jne    _074485_jump
		lea    0x000078(%esp),%eax
		call   _073c78_func
		cmp    $0x000a7a,%eax
		je     _074485_jump
		movb   $0x000001,0x000100(%esp)

	_074485_jump:
		cmpb   $0x000000,0x000100(%esp)
		jne    _07458e_jump
		push   $0x000180
		push   $0x000200
		lea    0x000080(%esp),%eax
		push   %eax
		call   _080bde_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		je     _07458e_jump
		movzbl 0x0000fc(%esp),%esi
		shl    $0x000002,%esi
		mov    $0x000004,%ebx
		lea    -0x000004(%esi),%edx
		mov    %ecx,%eax
		add    $_0cd148_data,%edx
		call   _084de6_func
		mov    $0x000001,%ebx
		mov    $_0cf434_data,%edx
		mov    %ecx,%eax
		call   _084de6_func
		mov    $0x000018,%ebx
		mov    $_0caab8_data,%edx
		mov    %ecx,%eax
		call   _084de6_func
		mov    $0x000002,%ebx
		mov    $_0cf220_data,%edx
		mov    %ecx,%eax
		call   _084de6_func
		mov    $0x000014,%ebx
		mov    $_0ce164_data,%edx
		mov    %ecx,%eax
		call   _084de6_func
		mov    $0x00000a,%ebx
		mov    $_0ce94a_data,%edx
		mov    %ecx,%eax
		call   _084de6_func
		mov    %ecx,%eax
		call   _080e81_func
		mov    _0cf434_data,%al
		xor    %ch,%ch
		mov    %al,_0cd2b7_data(%esi)
		mov    %ch,_0cd2b6_data(%esi)
		xor    %eax,%eax

	_07454a_jump:
		xor    %edx,%edx
		mov    _0caab8_data(%eax),%bl
		mov    0x0000fc(%esp),%dl
		shl    $0x000003,%bl
		shl    $0x000002,%edx
		shr    $0x000005,%bl
		mov    _0cd2b6_data(%edx),%bh
		add    %bl,%bh
		inc    %eax
		mov    %bh,_0cd2b6_data(%edx)
		cmp    $0x000018,%eax
		jl     _07454a_jump
		mov    _0ce94a_data,%al
		mov    %al,_0cd2b4_data(%edx)
		mov    _0ce950_data,%al
		mov    %al,_0cd2b5_data(%edx)
		jmp    _074596_jump

	_07458e_jump:
		movb   $0x000001,0x000100(%esp)

	_074596_jump:
		mov    $_0c124c_data,%edx
		lea    0x000078(%esp),%eax
		call   _0810de_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _0745c7_jump
		mov    $0x000001,%ebx
		mov    $0x000a7a,%edx
		mov    %eax,%ecx
		mov    $_0ce044_data,%eax
		call   _080606_func
		mov    %esi,%eax
		call   _081192_func

	_0745c7_jump:
		lea    0x000078(%esp),%eax
		call   _07f953_func
		cmpb   $0x000000,_0cf41e_data
		je     _0745eb_jump
		xor    %eax,%eax
		mov    0x0000fc(%esp),%al
		xor    %ch,%ch
		mov    %ch,_0cd144_data(,%eax,4)

	_0745eb_jump:
		mov    0x000100(%esp),%al
		add    $0x000104,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074600_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00007c,%esp
		mov    $_0cc98c_data,%esi
		mov    _095e24_data,%al
		mov    %esp,%edi
		mov    %al,0x000078(%esp)
		push   %edi

	_074619_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074631_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074619_jump

	_074631_jump:
		pop    %edi
		mov    $_0c1250_data,%esi
		mov    %esp,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_074642_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07465a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074642_jump

	_07465a_jump:
		pop    %edi
		push   $0x000180
		push   $0x000222
		lea    0x000008(%esp),%eax
		push   %eax
		call   _080bde_func
		add    $0x00000c,%esp
		movswl %ax,%esi
		mov    %eax,%edi
		cmp    $0xffffffff,%esi
		jne    _074683_jump
		xor    %al,%al
		jmp    _074b97_jump

	_074683_jump:
		mov    $0x000001,%ebx
		mov    $_0cf428_data,%edx
		mov    %esi,%eax
		call   _085521_func
		cmp    $0xffffffff,%eax
		jne    _0746a4_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0746a4_jump:
		call   _03ef28_func
		mov    $0x000004,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _0746c6_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0746c6_jump:
		call   _03ef30_func
		mov    $0x000004,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _0746e8_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0746e8_jump:
		call   _03ef38_func
		mov    $0x000004,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _07470a_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07470a_jump:
		call   _03ef40_func
		mov    $0x000004,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _07472c_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07472c_jump:
		call   _03ef48_func
		mov    $0x000004,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _07474e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07474e_jump:
		mov    $0x000001,%ebx
		mov    $_0cf416_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _07476e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07476e_jump:
		mov    $0x000002,%ebx
		mov    $_0c3f68_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _07478e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07478e_jump:
		mov    $0x000002,%ebx
		mov    $_0c3f6a_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _0747ae_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0747ae_jump:
		mov    $0x000002,%ebx
		mov    $_0c3f6c_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _0747ce_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0747ce_jump:
		mov    $0x000002,%ebx
		mov    $_0c3f6e_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _0747ee_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0747ee_jump:
		mov    $0x000002,%ebx
		mov    $_0c3f70_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _07480e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07480e_jump:
		mov    $0x000002,%ebx
		mov    $_0c3f72_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _07482e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07482e_jump:
		mov    $0x000002,%ebx
		mov    $_0c3f74_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _07484e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07484e_jump:
		mov    $0x000001,%ebx
		mov    $_0cf417_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _07486e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07486e_jump:
		mov    $0x000001,%ebx
		mov    $_0cf414_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _07488e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07488e_jump:
		mov    $0x000002,%ebx
		mov    $_0cf14a_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _0748ae_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0748ae_jump:
		mov    $0x000002,%ebx
		mov    $_0cf146_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _0748ce_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0748ce_jump:
		mov    $0x000002,%ebx
		mov    $_0cf140_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _0748ee_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0748ee_jump:
		mov    $0x000002,%ebx
		mov    $_0cf148_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _07490e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07490e_jump:
		mov    $0x000002,%ebx
		mov    $_0cf144_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _07492e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07492e_jump:
		mov    $0x000002,%ebx
		mov    $_0cf142_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _07494e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07494e_jump:
		xor    %cl,%cl
		mov    $0x000001,%esi

	_074955_jump:
		xor    %eax,%eax
		mov    %cl,%al
		mov    $_0c91a0_data,%edx
		add    %eax,%eax
		mov    %esi,%ebx
		add    %eax,%edx
		movswl %di,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _07497b_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07497b_jump:
		inc    %cl
		cmp    $0x000004,%cl
		jb     _074955_jump
		movswl %di,%esi
		xor    %cl,%cl

	_074987_jump:
		xor    %eax,%eax
		mov    %cl,%al
		mov    $0x000001,%ebx
		mov    _095df8_data(,%eax,4),%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _0749ad_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0749ad_jump:
		inc    %cl
		cmp    $0x000007,%cl
		jb     _074987_jump
		mov    $0x000001,%ebx
		mov    $_095de5_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _0749d4_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0749d4_jump:
		mov    $0x000001,%ebx
		mov    $_0cf40b_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _0749f4_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0749f4_jump:
		mov    $0x000001,%ebx
		mov    $_095e22_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _074a14_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074a14_jump:
		mov    0x000078(%esp),%ah
		cmp    $0x000001,%ah
		je     _074a2c_jump
		test   %ah,%ah
		je     _074a2c_jump
		cmp    $0x000002,%ah
		je     _074a2c_jump
		xor    %bl,%bl
		mov    %bl,0x000078(%esp)

	_074a2c_jump:
		mov    $0x000001,%ebx
		movswl %di,%esi
		lea    0x000078(%esp),%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _074a4e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074a4e_jump:
		mov    $0x000001,%ebx
		mov    $_095e1e_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _074a6e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074a6e_jump:
		mov    $0x000001,%ebx
		mov    $_095e25_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _074a8e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074a8e_jump:
		mov    $0x000001,%ebx
		mov    $_0cf409_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _074aae_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074aae_jump:
		mov    $0x000010,%ebx
		mov    $_095e28_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _074ace_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074ace_jump:
		mov    $0x000010,%ebx
		mov    $_095e38_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _074aee_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074aee_jump:
		mov    $0x000010,%ebx
		mov    $_095e48_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _074b0e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074b0e_jump:
		mov    $0x000004,%ebx
		mov    $_095e58_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _074b2e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074b2e_jump:
		mov    $0x000004,%ebx
		mov    $_095e5c_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _074b4e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074b4e_jump:
		mov    $0x000004,%ebx
		mov    $_095e60_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _074b6e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074b6e_jump:
		mov    $0x000004,%ebx
		mov    $_095e64_data,%edx
		mov    %esi,%eax
		call   _085521_func
		test   %eax,%eax
		jg     _074b8e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074b8e_jump:
		mov    %esi,%eax
		call   _080e81_func
		mov    $0x000001,%al

	_074b97_jump:
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074ba0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000078,%esp
		mov    $_0cc98c_data,%esi
		mov    %esp,%edi
		push   %edi

	_074bb0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074bc8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074bb0_jump

	_074bc8_jump:
		pop    %edi
		mov    $_0c1250_data,%esi
		mov    %esp,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_074bd9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074bf1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074bd9_jump

	_074bf1_jump:
		pop    %edi
		push   $0x000180
		push   $0x000200
		lea    0x000008(%esp),%eax
		push   %eax
		call   _080bde_func
		add    $0x00000c,%esp
		movswl %ax,%esi
		mov    %eax,%edi
		cmp    $0xffffffff,%esi
		jne    _074c1a_jump
		xor    %al,%al
		jmp    _075166_jump

	_074c1a_jump:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _080e86_func
		cmp    $0x000084,%eax
		je     _074c3a_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074c3a_jump:
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _080e86_func
		mov    $0x000001,%ebx
		mov    $_0cf428_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		cmp    $0xffffffff,%eax
		jne    _074c66_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074c66_jump:
		mov    $0x000004,%ebx
		mov    $_0cc9f0_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		cmp    $0xffffffff,%eax
		jne    _074c87_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074c87_jump:
		mov    $0x000004,%ebx
		mov    $_0cc9f8_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		cmp    $0xffffffff,%eax
		jne    _074ca8_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074ca8_jump:
		mov    $0x000004,%ebx
		mov    $_0cca00_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		cmp    $0xffffffff,%eax
		jne    _074cc9_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074cc9_jump:
		mov    $0x000004,%ebx
		mov    $_0cc9fc_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		cmp    $0xffffffff,%eax
		jne    _074cea_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074cea_jump:
		mov    $0x000004,%ebx
		mov    $_0cc9f4_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		cmp    $0xffffffff,%eax
		jne    _074d0b_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074d0b_jump:
		mov    $0x000001,%ebx
		mov    $_0cf416_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		cmp    $0xffffffff,%eax
		jne    _074d2c_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074d2c_jump:
		mov    $0x000002,%ebx
		mov    $_0c3f68_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074d4c_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074d4c_jump:
		mov    $0x000002,%ebx
		mov    $_0c3f6a_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074d6c_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074d6c_jump:
		mov    $0x000002,%ebx
		mov    $_0c3f6c_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074d8c_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074d8c_jump:
		mov    $0x000002,%ebx
		mov    $_0c3f6e_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074dac_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074dac_jump:
		mov    $0x000002,%ebx
		mov    $_0c3f70_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074dcc_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074dcc_jump:
		mov    $0x000002,%ebx
		mov    $_0c3f72_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074dec_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074dec_jump:
		mov    $0x000002,%ebx
		mov    $_0c3f74_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074e0c_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074e0c_jump:
		mov    $0x000001,%ebx
		mov    $_0cf413_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074e2c_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074e2c_jump:
		mov    $0x000001,%ebx
		mov    $_0cf415_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074e4c_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074e4c_jump:
		mov    $0x000002,%ebx
		mov    $_0cf14a_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074e6c_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074e6c_jump:
		mov    $0x000002,%ebx
		mov    $_0cf146_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074e8c_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074e8c_jump:
		mov    $0x000002,%ebx
		mov    $_0cf140_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074eac_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074eac_jump:
		mov    $0x000002,%ebx
		mov    $_0cf148_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074ecc_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074ecc_jump:
		mov    $0x000002,%ebx
		mov    $_0cf144_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074eec_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074eec_jump:
		mov    $0x000002,%ebx
		mov    $_0cf142_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074f0c_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074f0c_jump:
		xor    %cl,%cl
		mov    $0x000001,%esi

	_074f13_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		movswl %di,%eax
		add    %edx,%edx
		mov    %esi,%ebx
		add    $_0c91a0_data,%edx
		call   _084de6_func
		test   %eax,%eax
		jg     _074f38_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074f38_jump:
		inc    %cl
		cmp    $0x000004,%cl
		jb     _074f13_jump
		movswl %di,%esi
		xor    %cl,%cl

	_074f44_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    _095df8_data(,%edx,4),%edx
		call   _084de6_func
		test   %eax,%eax
		jg     _074f6a_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074f6a_jump:
		inc    %cl
		cmp    $0x000007,%cl
		jb     _074f44_jump
		mov    $0x000001,%ebx
		mov    $_095de5_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074f91_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074f91_jump:
		mov    $0x000001,%ebx
		mov    $_0cf40b_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074fb1_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074fb1_jump:
		mov    $0x000001,%ebx
		mov    $_095e22_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _074fd1_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074fd1_jump:
		cmpb   $0x000046,_095e24_data
		je     _074ffa_jump
		mov    $0x000001,%ebx
		mov    $_095e24_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _07501a_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074ffa_jump:
		mov    $0x000001,%ebx
		mov    $_095e1e_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _07501a_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07501a_jump:
		mov    $0x000001,%ebx
		movswl %di,%esi
		mov    $_095e1e_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _07503d_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07503d_jump:
		mov    $0x000001,%ebx
		mov    $_095e25_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _07505d_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07505d_jump:
		mov    $0x000001,%ebx
		mov    $_0cf409_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _07507d_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07507d_jump:
		mov    $0x000010,%ebx
		mov    $_095e28_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _07509d_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07509d_jump:
		mov    $0x000010,%ebx
		mov    $_095e38_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _0750bd_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0750bd_jump:
		mov    $0x000010,%ebx
		mov    $_095e48_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _0750dd_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0750dd_jump:
		mov    $0x000004,%ebx
		mov    $_095e58_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _0750fd_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0750fd_jump:
		mov    $0x000004,%ebx
		mov    $_095e5c_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _07511d_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07511d_jump:
		mov    $0x000004,%ebx
		mov    $_095e60_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _07513d_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07513d_jump:
		mov    $0x000004,%ebx
		mov    $_095e64_data,%edx
		mov    %esi,%eax
		call   _084de6_func
		test   %eax,%eax
		jg     _07515d_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07515d_jump:
		mov    %esi,%eax
		call   _080e81_func
		mov    $0x000001,%al

	_075166_jump:
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075170_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cf45a_data
		jne    _075235_jump
		mov    _0cf260_data,%ecx
		mov    _0cf2a2_data,%ebx
		mov    _0cf25e_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sub    %ebx,%eax
		add    %ebx,%ecx
		mov    %eax,%ebx
		mov    _0cf2ac_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _0751b7_jump
		cmp    %ecx,%eax
		jg     _0751b7_jump
		mov    $0x000001,%eax
		jmp    _0751b9_jump

	_0751b7_jump:
		xor    %eax,%eax

	_0751b9_jump:
		test   %eax,%eax
		je     _0751fe_jump
		mov    _0cf262_data,%ecx
		mov    _0cf2a4_data,%ebx
		mov    _0cf25c_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sub    %ebx,%eax
		add    %ebx,%ecx
		mov    %eax,%ebx
		mov    _0cf2ae_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _0751f4_jump
		cmp    %ecx,%eax
		jg     _0751f4_jump
		mov    $0x000001,%eax
		jmp    _0751f6_jump

	_0751f4_jump:
		xor    %eax,%eax

	_0751f6_jump:
		test   %eax,%eax
		je     _0751fe_jump
		mov    $0x000001,%al
		jmp    _075200_jump

	_0751fe_jump:
		xor    %al,%al

	_075200_jump:
		mov    %al,_0cf45a_data
		test   %al,%al
		je     _07524e_jump
		mov    _0cf2ae_data,%ax
		mov    %ax,_0cf268_data
		mov    %ax,_0cf25a_data
		mov    _0cf25e_data,%ax
		mov    %ax,_0cf25c_data
		mov    _0cf264_data,%ax
		mov    %ax,_0cf266_data
		jmp    _07524e_jump

	_075235_jump:
		mov    _0cf25c_data,%ax
		mov    _0cf2b0_data,%dx
		cmp    %dx,%ax
		jge    _07524e_jump
		mov    %dx,_0cf25c_data

	_07524e_jump:
		mov    _0cf45a_data,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075258_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%bl
		call   _0188b0_func
		cwtl   
		sub    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01dc5c_func
		movl   $0x000000,0x000024(%edx)
		movw   $0x000000,0x000040(%edx)
		xor    %bl,%bl
		movw   $0x000000,0x000042(%edx)
		mov    %bl,_0cf483_data
		mov    0x000081(%edx),%ah
		mov    0x000060(%edx),%cx
		xor    %bh,%bh
		or     $0x000004,%ah
		mov    %bl,_0cf488_data
		mov    %bx,_0e518a_data
		mov    %ah,0x000081(%edx)
		cmp    $0x00004a,%cx
		jne    _0752c7_jump
		mov    _0e5185_data,%al
		mov    %al,0x000076(%edx)
		mov    %edx,%eax
		call   _018a6c_func

	_0752c7_jump:
		xor    %cl,%cl
		xor    %esi,%esi
		mov    %cl,_0e5184_data
		mov    %si,_0e518e_data
		mov    %si,_0e5188_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0752e4_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ebx
		cmpw   $0x000000,0x000056(%eax)
		jle    _0753e9_jump
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0753e9_jump

	_07530e_jump:
		cmpw   $0x00005c,0x000060(%ecx)
		jne    _0753d9_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0753d9_jump
		movw   $0x000000,0x000042(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%ecx)
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sar    %eax
		test   %bx,%bx
		je     _07534c_jump
		neg    %eax

	_07534c_jump:
		movswl %ax,%edx
		mov    0x000028(%esi),%eax
		add    %edx,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		add    $0x000002,%bl
		mov    %eax,0x00002c(%ecx)
		mov    %bl,0x00006c(%ecx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    $0x000001,%ebx
		mov    0x00002c(%ecx),%ax
		mov    %ebx,%edx
		mov    %ax,0x00003e(%ecx)
		mov    %ecx,%eax
		movb   $0x000000,0x00006d(%ecx)
		call   _060460_func
		mov    %ecx,%eax
		call   _01dc5c_func
		mov    0x000081(%ecx),%dl
		or     $0x000004,%dl
		mov    %dl,0x000081(%ecx)
		mov    %dl,%dh
		movl   $0x000001,0x000024(%ecx)
		and    $0x0000bf,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f3d4_func
		movb   $0x000000,0x000071(%ecx)
		mov    0x000056(%esi),%ax
		dec    %eax
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		call   _01dc5c_func
		mov    %ecx,%eax
		movw   $0x00000a,0x000050(%ecx)
		call   _07abbc_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0753d9_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _07530e_jump

	_0753e9_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0753f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movw   $0x000000,0x000040(%eax)
		mov    $0x000001,%ebx
		movw   $0x000000,0x000042(%eax)
		call   _01dc5c_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d444_func
		mov    0x000032(%ecx),%edx
		mov    $0x0000f6,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		mov    %ecx,%eax
		call   _07abbc_func
		movw   $0x00000a,0x000050(%ecx)
		movw   $0x000003,0x000056(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07543c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    0x000060(%eax),%ax
		cmp    $0x00005d,%ax
		jb     _07545e_jump
		jbe    _0755a8_jump
		cmp    $0x0000b6,%ax
		je     _07546d_jump
		jmp    _075638_jump

	_07545e_jump:
		cmp    $0x00005c,%ax
		je     _07551a_jump
		jmp    _075638_jump

	_07546d_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _075638_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%esi),%al
		mov    _0e517c_data,%cx
		add    %ebx,%eax
		sub    %ecx,%eax
		cmp    $0x000014,%ax
		jge    _0754bb_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		mov    0x000081(%esi),%ah
		movw   $0x000003,0x000040(%esi)
		or     $0x000008,%ah
		mov    %ah,0x000081(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0754bb_jump:
		cmp    $0x0000c8,%ax
		jge    _075638_jump
		movswl %ax,%edx
		sar    $0x000003,%edx
		sub    $0x000002,%edx
		cmp    $0x000002,%dl
		jae    _0754d5_jump
		mov    $0x000002,%dl

	_0754d5_jump:
		cmp    $0x000032,%ax
		setl   %al
		and    $_0000ff_case,%eax
		inc    %eax
		mov    %al,%dh
		xor    %eax,%eax
		mov    %dl,%al
		xor    %ebx,%ebx
		mov    _0cf3ed_data(%eax),%bl
		sar    %eax
		cmp    %eax,%ebx
		jge    _07550b_jump
		mov    0x00003a(%esi),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    %dh,%al
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07550b_jump:
		mov    0x00003a(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07551a_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _075638_jump
		mov    0x000050(%esi),%cx
		dec    %cx
		mov    %cx,0x000050(%esi)
		jne    _075638_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%al
		jb     _075547_jump
		jbe    _07555b_jump
		cmp    $0x000003,%al
		je     _075580_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075547_jump:
		cmp    $0x000001,%al
		jne    _075638_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0752e4_func

	_07555b_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0752e4_func
		mov    0x000081(%esi),%ch
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075580_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0752e4_func
		mov    0x000081(%esi),%cl
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%cl
		mov    %cl,0x000081(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0755a8_jump:
		push   $0x00008c
		mov    _0e517c_data,%eax
		push   $0x000014
		sar    $0x000010,%eax
		push   %eax
		mov    _0e517a_data,%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00002c(%esi),%di
		mov    0x000069(%esi),%al
		add    %edi,%eax
		sub    $0x000018,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		mov    $0x000010,%ecx
		sub    $0x000008,%eax
		mov    %ecx,%ebx
		cwtl   
		call   _02b560_func
		test   %ax,%ax
		je     _075638_jump
		cmpb   $0x000000,_0e5184_data
		jne    _075602_jump
		movb   $0x000001,_0e5184_data

	_075602_jump:
		mov    0x00002c(%esi),%edx
		movl   $0x000000,0x000024(%esi)
		add    $0x00001e,%edx
		mov    %edx,0x00002c(%esi)
		mov    $0x0000f3,%eax
		mov    0x000081(%esi),%bl
		mov    0x000032(%esi),%edx
		and    $0x0000fb,%bl
		sar    $0x000010,%edx
		mov    %bl,0x000081(%esi)
		call   _071b3c_func
		mov    %esi,%eax
		call   _07abbc_func

	_075638_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_075640_switch:
		.long   _075730_case
		.long   _07573e_case
		.long   _07574c_case
		.long   _07575a_case




_075650_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    0x000060(%eax),%dx
		mov    %eax,%ecx
		cmp    $0x000066,%dx
		jne    _07567a_jump

	_075661_jump:
		cmpl   $0x000000,0x000024(%ecx)
		je     _07567a_jump
		mov    0x0000e4(%ecx),%di
		add    $0x000084,%ecx
		cmp    $0x000066,%di
		je     _075661_jump

	_07567a_jump:
		cmpw   $0x000066,0x000060(%ecx)
		jne    _0757b3_jump
		cmp    $0x000004,%bx
		jge    _0756ec_jump
		movswl %bx,%edx
		mov    $0x000002,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x000081(%ecx),%al
		and    $0x000001,%dl
		and    $0x0000f7,%al
		shl    $0x000003,%dl
		mov    %al,0x000081(%ecx)
		mov    %al,%ah
		or     %dl,%ah
		mov    %ah,0x000081(%ecx)
		cmp    $0x000002,%bx
		jge    _0756c5_jump
		mov    $0xffffffff,%edx
		jmp    _0756ca_jump

	_0756c5_jump:
		mov    $0x000001,%edx

	_0756ca_jump:
		mov    %dx,0x000042(%ecx)
		testb  $0x000008,0x000081(%ecx)
		je     _0756de_jump
		mov    $0x000001,%edx
		jmp    _0756e3_jump

	_0756de_jump:
		mov    $0xffffffff,%edx

	_0756e3_jump:
		mov    %dx,0x000040(%ecx)
		jmp    _075766_jump

	_0756ec_jump:
		movswl %bx,%edx
		mov    $0x000002,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x000081(%ecx),%ah
		and    $0x000001,%dl
		and    $0x0000f7,%ah
		shl    $0x000003,%dl
		mov    %ah,%dh
		mov    %ah,0x000081(%ecx)
		or     %dl,%dh
		sub    $0x000004,%ebx
		mov    %dh,0x000081(%ecx)
		cmp    $0x000003,%bx
		ja     _075766_jump
		xor    %edx,%edx
		mov    %bx,%dx
		jmp    *%cs:_075640_switch(,%edx,4)

	_075730_case:
		movw   $0x000000,0x000042(%ecx)
		movw   $0x00fffe,0x000040(%ecx)
		jmp    _075766_jump

	_07573e_case:
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _075766_jump

	_07574c_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fffe,0x000042(%ecx)
		jmp    _075766_jump

	_07575a_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000002,0x000042(%ecx)

	_075766_jump:
		mov    0x000028(%esi),%edx
		mov    %edx,0x000028(%ecx)
		mov    $0x000001,%ebx
		mov    0x00002c(%esi),%edx
		movb   $0x000002,0x00006d(%ecx)
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    %ebx,%edx
		movb   $0x000005,0x00006c(%ecx)
		call   _060460_func
		mov    %ecx,%eax
		call   _01dc5c_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f3d4_func
		mov    %ecx,%eax
		call   _01dc5c_func

	_0757b3_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0757b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0758c1_jump

	_0757d6_jump:
		cmpw   $0x000066,0x000060(%ecx)
		jne    _0758b1_jump
		mov    0x000024(%ecx),%ebx
		test   %ebx,%ebx
		jne    _0758b1_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000f4,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		mov    %esi,%eax
		call   _07abbc_func
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _075650_func
		mov    $0x000001,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _075650_func
		mov    $0x000002,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _075650_func
		mov    $0x000003,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _075650_func
		mov    $0x000004,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _075650_func
		mov    $0x000005,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _075650_func
		mov    $0x000006,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _075650_func
		mov    $0x000007,%ebx
		lea    0x000084(%ecx),%eax
		mov    %esi,%edx
		call   _075650_func
		mov    0x000081(%esi),%ah
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0758b1_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _0757d6_jump

	_0758c1_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0758c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0759f4_jump

	_0758e6_jump:
		cmpw   $0x00005d,0x000060(%ecx)
		jne    _0759e4_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0759e4_jump
		cmpw   $0x000000,0x000040(%esi)
		jne    _075929_jump
		movw   $0x00ffff,0x000040(%ecx)
		movw   $0x00fffc,0x000042(%ecx)
		movb   $0x00000a,0x000072(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x000002,0x000050(%ecx)
		and    $0x0000f7,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _07596a_jump

	_075929_jump:
		mov    _0ce0d0_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jge    _07593c_jump
		mov    $0xfffffffc,%eax
		jmp    _075941_jump

	_07593c_jump:
		mov    $0x000004,%eax

	_075941_jump:
		mov    %ax,0x000040(%ecx)
		test   %ax,%ax
		jge    _075953_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _07595a_jump

	_075953_jump:
		orb    $0x000008,0x000081(%ecx)

	_07595a_jump:
		movb   $_0000ff_case,0x000072(%ecx)
		movw   $0x000001,0x000050(%ecx)
		movw   $0x00ffff,0x000042(%ecx)

	_07596a_jump:
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		movb   $0x000002,0x00006d(%ecx)
		mov    %eax,0x00002c(%ecx)
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%ax
		mov    %ebx,%edx
		mov    %ax,0x00003c(%ecx)
		mov    %ecx,%eax
		movb   $0x000003,0x00006c(%ecx)
		call   _060460_func
		mov    %ecx,%eax
		call   _01dc5c_func
		mov    0x000081(%ecx),%bl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _01f3d4_func
		movb   $0x000000,0x000071(%ecx)
		movw   $0x0000c8,0x000056(%ecx)
		mov    0x000081(%esi),%bh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bh
		mov    %ecx,%eax
		mov    %bh,0x000081(%esi)
		call   _01dc5c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0759e4_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _0758e6_jump

	_0759f4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0759fc_func:
		push   %ebx
		mov    0x000060(%eax),%dx
		cmp    $0x00005b,%dx
		jb     _075a1a_jump
		jbe    _075a27_jump
		cmp    $0x00005d,%dx
		jb     _075a52_jump
		jbe    _075a2e_jump
		cmp    $0x0000b6,%dx
		je     _075a20_jump
		pop    %ebx
		ret    

	_075a1a_jump:
		cmp    $0x00005a,%dx
		jne    _075a52_jump

	_075a20_jump:
		call   _0758c8_func
		pop    %ebx
		ret    

	_075a27_jump:
		call   _0757b8_func
		pop    %ebx
		ret    

	_075a2e_jump:
		mov    _0ce0d0_data,%edx
		mov    0x000040(%edx),%dx
		movw   $0x00ffff,0x000042(%eax)
		movb   $_0000ff_case,0x000072(%eax)
		mov    0x000040(%eax),%bx
		movw   $0x000001,0x000050(%eax)
		add    %edx,%ebx
		mov    %bx,0x000040(%eax)

	_075a52_jump:
		pop    %ebx
		ret    



_075a54_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x00005c,%ax
		jb     _075a75_jump
		jbe    _075a7f_jump
		cmp    $0x00005d,%ax
		jbe    _075a8a_jump
		cmp    $0x0000b6,%ax
		je     _075a8a_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075a75_jump:
		cmp    $0x00005a,%ax
		je     _075a8a_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075a7f_jump:
		mov    %edx,%eax
		call   _0753f0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075a8a_jump:
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _075a96_jump
		neg    %eax

	_075a96_jump:
		mov    %eax,%ebx
		mov    %ax,0x000042(%edx)
		neg    %ebx
		mov    %bx,0x000042(%edx)
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jle    _075ab4_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,0x000042(%edx)

	_075ab4_jump:
		mov    $0x00000a,%al
		mov    0x000071(%edx),%ah
		sub    %ah,%al
		mov    %al,0x000071(%edx)
		mov    %edx,%eax
		call   _01dc5c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075acc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		cmpb   $0x000006,_0e5190_data
		jbe    _075ae4_jump
		movb   $0x000006,_0e5190_data

	_075ae4_jump:
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%di
		xor    %eax,%eax
		test   %di,%di
		jle    _075c5b_jump

	_075afc_jump:
		xor    %edx,%edx
		mov    _0e5190_data,%dl
		imul   $0x00000a,%edx,%edx
		xor    %ebx,%ebx
		xor    %esi,%esi
		mov    _097f28_data(%edx),%bl
		mov    0x000060(%ecx),%si
		add    $0x00005a,%ebx
		cmp    %ebx,%esi
		jne    _075c4b_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _075c4b_jump
		mov    0x000081(%ecx),%bl
		mov    0x000081(%ebp),%al
		and    $0x0000f7,%bl
		and    $0x000008,%al
		mov    %bl,0x000081(%ecx)
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,0x000081(%ecx)
		mov    _097f2c_data(%edx),%ax
		mov    %ax,0x000042(%ecx)
		testb  $0x000008,0x000081(%ecx)
		je     _075b7d_jump
		mov    _097f2a_data(%edx),%ax
		mov    _0e517e_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%bl
		add    $0x000017,%edx
		mov    %ax,0x000040(%ecx)
		jmp    _075ba1_jump

	_075b7d_jump:
		mov    _097f2a_data(%edx),%ax
		mov    %eax,%edx
		mov    %ax,0x000040(%ecx)
		neg    %edx
		mov    %dx,0x000040(%ecx)
		mov    _0e517e_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%bl
		add    $0x000009,%edx

	_075ba1_jump:
		sub    %ebx,%edx
		mov    %edx,0x000028(%ecx)
		mov    _0e5180_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000069(%ecx),%dl
		sub    %edx,%ebx
		add    $0x000019,%ebx
		mov    %ebx,0x00002c(%ecx)
		xor    %ebx,%ebx
		mov    _0e5190_data,%bl
		lea    0x000000(,%ebx,4),%edx
		add    %ebx,%edx
		movb   $0x000002,0x00006d(%ecx)
		mov    $0x000001,%ebx
		mov    _097f28_data(,%edx,2),%al
		mov    %ebx,%edx
		mov    %al,0x00006c(%ecx)
		mov    %ecx,%eax
		call   _060460_func
		mov    %ecx,%eax
		call   _01dc5c_func
		mov    0x000081(%ecx),%ah
		xor    %ebx,%ebx
		or     $0x000004,%ah
		movl   $0x000001,0x000024(%ecx)
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		and    $0x0000bf,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f3d4_func
		mov    _0e5190_data,%bl
		lea    0x000000(,%ebx,4),%edx
		movb   $0x000000,0x000071(%ecx)
		add    %ebx,%edx
		movb   $0x00000a,0x000072(%ecx)
		mov    _097f2e_data(,%edx,2),%ax
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		call   _01dc5c_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075c4b_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %di,%ax
		jl     _075afc_jump

	_075c5b_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075c64_func:
		push   %ebx
		push   %edx
		mov    _0e518c_data,%bx
		mov    _0e5188_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		movswl %bx,%eax
		mov    _097f6e_data(%edx,%eax,4),%eax
		mov    %eax,_0e5174_data
		cmpw   $0x000000,_0e5176_data
		je     _075ca8_jump
		xor    %ebx,%ebx
		jmp    _075ca9_jump

	_075ca8_jump:
		inc    %ebx

	_075ca9_jump:
		mov    _0e5174_data,%al
		mov    %bx,_0e518c_data
		pop    %edx
		pop    %ebx
		ret    



_075cb8_func:
		push   %edx
		cmpw   $0x00004a,0x000060(%eax)
		jne    _075cdd_jump
		call   _075acc_func
		mov    _0e5175_data,%al
		inc    %al
		mov    %al,_0cf486_data
		call   _075c64_func
		mov    %al,_0e5190_data
		pop    %edx
		ret    

	_075cdd_jump:
		xor    %dl,%dl
		mov    %dl,_0e5190_data
		call   _075acc_func
		pop    %edx
		ret    



_075cec_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000064,_0cf483_data
		je     _075d7b_jump
		mov    0x000076(%eax),%dh
		dec    %dh
		mov    %dh,0x000076(%eax)
		test   %dh,%dh
		jbe    _075d73_jump
		mov    0x00006d(%eax),%cl
		cmp    $0x000002,%cl
		je     _075d35_jump
		mov    $0x000003,%ebx
		mov    0x00006c(%eax),%dl
		mov    %cl,_0e5186_data
		mov    %dl,_0e5187_data
		xor    %edx,%edx
		mov    $0x000002,%ch
		call   _01d444_func
		mov    %ch,_0e5184_data
		jmp    _075d3c_jump

	_075d35_jump:
		xor    %al,%al
		mov    %al,_0e5184_data

	_075d3c_jump:
		mov    _0e518a_data,%dx
		inc    %edx
		mov    %dx,_0e518a_data
		cmp    $0x000003,%dx
		jle    _075d5c_jump
		movw   $0x000003,_0e518a_data
		jmp    _075d65_jump

	_075d5c_jump:
		xor    %ecx,%ecx
		mov    %cx,_0e518c_data

	_075d65_jump:
		call   _075c64_func
		mov    %al,_0e5190_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075d73_jump:
		xor    %bh,%bh
		mov    %bh,_0e5184_data

	_075d7b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075d80_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cf483_data,%al
		cmp    $0x000002,%al
		jb     _075d98_jump
		jbe    _075ddf_jump
		cmp    $0x000003,%al
		je     _075dee_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075d98_jump:
		cmp    $0x000001,%al
		jne    _075e1a_jump
		mov    0x000076(%ecx),%al
		dec    %al
		xor    %edx,%edx
		mov    %al,0x000076(%ecx)
		xor    %eax,%eax
		mov    0x000076(%ecx),%dl
		mov    0x000077(%ecx),%al
		sub    %edx,%eax
		cmp    $0x000003,%eax
		jl     _075dc0_jump
		movb   $0x000002,_0cf483_data

	_075dc0_jump:
		xor    %dl,%dl
		mov    %ecx,%eax
		mov    %dl,_0cf482_data
		mov    $0x000003,%edx
		call   _01d434_func
		movb   $0x000002,_0e5184_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075ddf_jump:
		xor    %bl,%bl
		mov    %bl,_0e5184_data
		decb   0x000076(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075dee_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    0x000076(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		dec    %dl
		xor    %ah,%ah
		mov    %dl,0x000076(%ecx)
		mov    $0x000002,%dh
		mov    %ah,_0cf482_data
		mov    %dh,_0e5184_data

	_075e1a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075e20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %esp,%eax
		mov    $_0e5182_data,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $_0e5180_data,%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d7e0_func
		testb  $0x000008,0x000081(%esi)
		je     _075e67_jump
		mov    0x000004(%esp),%esi
		mov    _0e5180_data,%dx
		sub    $0x000020,%esi
		add    %esi,%edx
		mov    %dx,_0e5180_data

	_075e67_jump:
		mov    _0e5180_data,%bx
		mov    _0e5182_data,%cx
		add    $0x00000c,%ebx
		add    $0x00000c,%ecx
		mov    %bx,_0e5180_data
		mov    %cx,_0e5182_data
		add    $0x000008,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075e94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000020,%esp
		mov    %eax,%esi
		lea    0x000018(%esp),%ebx
		push   %ebx
		lea    0x000020(%esp),%ebx
		lea    0x000010(%esp),%ecx
		push   %ebx
		mov    $0x000002,%edx
		lea    0x000018(%esp),%ebx
		call   _01d7e0_func
		lea    0x000004(%esp),%ebx
		lea    0x000008(%esp),%ecx
		push   %ebx
		lea    0x000018(%esp),%ebx
		mov    $0x000005,%edx
		push   %ebx
		mov    %esi,%eax
		lea    0x000008(%esp),%ebx
		call   _01d7e0_func
		mov    0x00001a(%esp),%ebx
		mov    0x000008(%esp),%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%esp),%ecx
		sub    $0x000014,%ebx
		sar    $0x000010,%ecx
		sar    %ebx
		add    $0x000014,%eax
		add    %ecx,%ebx
		mov    %ax,_0e517e_data
		mov    %bx,_0e517c_data
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_075f0c_switch:
		.long   _0762eb_case
		.long   _0761ad_case
		.long   _07622f_case
		.long   _076215_case

_075f1c_switch:
		.long   _076263_case
		.long   _076263_case
		.long   _076263_case
		.long   _076263_case
		.long   _076263_case
		.long   _076263_case
		.long   _076263_case
		.long   _076274_case
		.long   _07629b_case
		.long   _0762c2_case




_075f44_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		call   _075170_func
		mov    %esi,%eax
		call   _075e20_func
		mov    %esi,%eax
		call   _075e94_func
		cmpb   $0x000001,0x000076(%esi)
		jae    _076010_jump
		cmpb   $0x000064,_0cf483_data
		je     _076010_jump
		xor    %dh,%dh
		xor    %eax,%eax
		mov    %dh,_0e5184_data
		mov    0x000069(%esi),%al
		add    0x00002c(%esi),%eax
		mov    _0ce036_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		je     _076010_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		movb   $_0000ff_case,0x00006b(%esi)
		call   _01d444_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000001,%cl
		call   _060460_func
		mov    $0x000064,%bh
		mov    $0x0001a4,%edx
		movw   $0x000000,0x000040(%esi)
		mov    %cl,_0cf467_data
		movw   $0x000000,0x000042(%esi)
		mov    %bh,_0cf483_data
		mov    %dx,_0e5188_data

	_076010_jump:
		cmpb   $0x000001,_0e5184_data
		jne    _07602a_jump
		mov    %esi,%eax
		xor    %cl,%cl
		call   _075cec_func
		mov    %cl,_0cf482_data
		jmp    _076090_jump

	_07602a_jump:
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _076088_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		mov    _0cf3ed_data(%eax),%dl
		test   %dl,%dl
		jne    _076088_jump
		mov    $0x000001,%bl
		mov    %dl,_0cf47e_data
		mov    %bl,_0cf482_data
		jmp    _076090_jump

	_076088_jump:
		xor    %dh,%dh
		mov    %dh,_0cf482_data

	_076090_jump:
		mov    _0cf483_data,%al
		mov    0x000028(%esi),%dx
		cmp    $0x000002,%al
		jb     _0760be_jump
		jbe    _076313_jump
		cmp    $0x000004,%al
		jb     _0764e8_jump
		jbe    _0766dd_jump
		cmp    $0x000064,%al
		je     _0769e9_jump
		jmp    _076a1e_jump

	_0760be_jump:
		test   %al,%al
		ja     _07615a_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0760d6_jump
		cmpb   $0x000000,0x00006c(%esi)
		je     _076a1e_jump

	_0760d6_jump:
		movswl %dx,%eax
		mov    _0ce06c_data,%ebx
		lea    0x0000dc(%eax),%edx
		cmp    %ebx,%edx
		jle    _0760f9_jump
		lea    0x00006e(%ebx),%edx
		cmp    %eax,%edx
		jle    _0760f9_jump
		movb   $0x000001,_0cf47e_data
		jmp    _076107_jump

	_0760f9_jump:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func

	_076107_jump:
		cmpb   $0x000000,_0cf47e_data
		je     _076a1e_jump
		cmpb   $0x000000,_0cf482_data
		je     _076a1e_jump
		mov    $0x000001,%ah
		mov    $0x000001,%ebx
		mov    %ah,_0cf483_data
		mov    %ah,_0cf481_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %ax,_0e518c_data
		mov    %ax,_0e518a_data
		call   _075c64_func
		mov    %al,_0e5190_data
		mov    %esi,%eax
		call   _01d444_func
		jmp    _076a1e_jump

	_07615a_jump:
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		call   _01dbe4_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _076196_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d444_func
		xor    %bl,%bl
		movw   $0x000000,0x000040(%esi)
		mov    %bl,_0cf482_data

	_076196_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%al
		ja     _076a1e_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_075f0c_switch(,%edx,4)

	_0761ad_case:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%esi),%edx
		and    $_0000ff_case,%eax
		mov    (%edx,%ebx,1),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _076a1e_jump
		mov    0x00006b(%esi),%cl
		cmp    $0x000018,%cl
		je     _076209_jump
		cmp    $0x00001c,%cl
		jne    _0761f2_jump
		cmpb   $0x000000,_0cf486_data
		je     _076209_jump

	_0761f2_jump:
		cmpb   $0x000020,0x00006b(%esi)
		jne    _076a1e_jump
		cmpb   $0x000000,_0cf486_data
		jne    _076a1e_jump

	_076209_jump:
		mov    %esi,%eax
		call   _075cb8_func
		jmp    _076a1e_jump

	_076215_case:
		cmpb   $0x000000,_0cf482_data
		je     _076a1e_jump
		xor    %cl,%cl
		mov    %cl,_0e5184_data
		jmp    _076a1e_jump

	_07622f_case:
		cmpb   $0x000000,_0cf482_data
		je     _076a1e_jump
		mov    _0cf486_data,%al
		cmp    $0x000001,%al
		ja     _0762dc_jump
		mov    _0e5174_data,%al
		cmp    $0x000009,%al
		ja     _076a1e_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_075f1c_switch(,%eax,4)

	_076263_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d434_func
		jmp    _076a1e_jump

	_076274_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000003,%edi
		call   _01d444_func
		mov    $0x000002,%bl
		mov    %di,_0e5188_data
		mov    %bl,_0cf483_data
		jmp    _076a1e_jump

	_07629b_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000002,%ecx
		call   _01d444_func
		mov    $0x000003,%dh
		mov    %cx,_0e5188_data
		mov    %dh,_0cf483_data
		jmp    _076a1e_jump

	_0762c2_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		movb   $0x000004,_0cf483_data
		jmp    _076a1e_jump

	_0762dc_jump:
		mov    %al,%ah
		dec    %ah
		mov    %ah,_0cf486_data
		jmp    _076a1e_jump

	_0762eb_case:
		cmpb   $0x000000,_0cf482_data
		je     _076a1e_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d434_func
		call   _075c64_func
		mov    %al,_0e5190_data
		jmp    _076a1e_jump

	_076313_jump:
		cmpb   $0x000000,_0cf482_data
		je     _07634d_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _07634d_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _07634d_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0e5187_data,%bl
		mov    _0e5186_data,%dl
		xor    %cl,%cl
		call   _01d444_func
		mov    %cl,_0e5184_data
		mov    %cl,_0cf482_data

	_07634d_jump:
		mov    0x00006d(%esi),%al
		test   %al,%al
		jne    _07644c_jump
		testb  $0x000008,0x000081(%esi)
		jne    _07636f_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edi
		mov    0x000068(%esi),%al
		add    %edi,%eax
		test   %eax,%eax
		jl     _076393_jump

	_07636f_jump:
		testb  $0x000008,0x000081(%esi)
		je     _076399_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    _0cf284_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _076399_jump

	_076393_jump:
		movw   $0x000000,0x000040(%esi)

	_076399_jump:
		cmpb   $0x000000,_0cf482_data
		je     _076a1e_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _076a1e_jump
		jbe    _0763bc_jump
		cmp    $0x00000b,%al
		je     _0763f3_jump
		jmp    _076a1e_jump

	_0763bc_jump:
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ebp
		movw   $0x00fffa,0x000042(%esi)
		sub    $0x000006,%ebp
		mov    0x000081(%esi),%dh
		mov    %ebp,0x00002c(%esi)
		test   $0x000008,%dh
		je     _0763e5_jump
		mov    $0x000001,%eax
		jmp    _0763ea_jump

	_0763e5_jump:
		mov    $0xffffffff,%eax

	_0763ea_jump:
		mov    %ax,0x000040(%esi)
		jmp    _076a1e_jump

	_0763f3_jump:
		mov    _0e5188_data,%dx
		dec    %edx
		mov    %dx,_0e5188_data
		test   %dx,%dx
		jle    _076420_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000040(%esi)
		jmp    _076a1e_jump

	_076420_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		testb  $0x000008,0x000081(%esi)
		je     _07643e_jump
		mov    $0x000002,%eax
		jmp    _076443_jump

	_07643e_jump:
		mov    $0xfffffffe,%eax

	_076443_jump:
		mov    %ax,0x000040(%esi)
		jmp    _076a1e_jump

	_07644c_jump:
		cmp    $0x000001,%al
		jne    _076a1e_jump
		testb  $0x000008,0x000081(%esi)
		jne    _076467_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _076492_jump

	_076467_jump:
		testb  $0x000008,0x000081(%esi)
		je     _076a1e_jump
		mov    _0cf284_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _076a1e_jump

	_076492_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $_0000ff_case,%eax
		mov    0x000081(%esi),%bl
		sub    %eax,%edx
		and    $0x0000f7,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%esi)
		and    $0x000001,%al
		mov    %bl,%bh
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		xor    %ebx,%ebx
		mov    $0x000001,%cl
		call   _01d444_func
		mov    %cl,_0cf483_data
		movw   $0x000000,0x000040(%esi)
		jmp    _076a1e_jump

	_0764e8_jump:
		cmpb   $0x000000,_0cf482_data
		je     _076522_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _076522_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _076522_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0e5187_data,%bl
		mov    _0e5186_data,%dl
		call   _01d444_func
		xor    %bh,%bh
		mov    %bh,_0e5184_data
		mov    %bh,_0cf482_data

	_076522_jump:
		mov    0x00006d(%esi),%ch
		test   %ch,%ch
		jne    _076607_jump
		testb  $0x000008,0x000081(%esi)
		jne    _076544_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		test   %eax,%eax
		jl     _076568_jump

	_076544_jump:
		testb  $0x000008,0x000081(%esi)
		je     _07656e_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    _0cf284_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _07656e_jump

	_076568_jump:
		movw   $0x000000,0x000040(%esi)

	_07656e_jump:
		cmpb   $0x000000,_0cf482_data
		je     _076a1e_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _076a1e_jump
		jbe    _076591_jump
		cmp    $0x00000b,%al
		je     _0765c8_jump
		jmp    _076a1e_jump

	_076591_jump:
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ecx
		movw   $0x00fffa,0x000042(%esi)
		sub    $0x000006,%ecx
		mov    0x000081(%esi),%dl
		mov    %ecx,0x00002c(%esi)
		test   $0x000008,%dl
		je     _0765ba_jump
		mov    $0x000001,%eax
		jmp    _0765bf_jump

	_0765ba_jump:
		mov    $0xffffffff,%eax

	_0765bf_jump:
		mov    %ax,0x000040(%esi)
		jmp    _076a1e_jump

	_0765c8_jump:
		mov    _0e5188_data,%ax
		mov    $0x000001,%edx
		dec    %eax
		xor    %ebx,%ebx
		mov    %ax,_0e5188_data
		mov    %esi,%eax
		call   _01d444_func
		testb  $0x000008,0x000081(%esi)
		je     _0765f3_jump
		mov    $0x000002,%eax
		jmp    _0765f8_jump

	_0765f3_jump:
		mov    $0xfffffffe,%eax

	_0765f8_jump:
		movw   $0x00001e,0x000056(%esi)
		mov    %ax,0x000040(%esi)
		jmp    _076a1e_jump

	_076607_jump:
		cmp    $0x000001,%ch
		jne    _076a1e_jump
		mov    _0e5188_data,%bx
		cmp    $0x000001,%bx
		jne    _076649_jump
		mov    0x000056(%esi),%cx
		sub    %ebx,%ecx
		mov    %cx,0x000056(%esi)
		cmp    %bx,%cx
		jge    _076a1e_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000040(%esi)
		jmp    _076a1e_jump

	_076649_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _07665c_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _076687_jump

	_07665c_jump:
		testb  $0x000008,0x000081(%esi)
		je     _076a1e_jump
		mov    _0cf284_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _076a1e_jump

	_076687_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $_0000ff_case,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,0x000081(%esi)
		or     %al,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		xor    %ebx,%ebx
		call   _01d444_func
		mov    $0x000001,%bh
		movw   $0x000000,0x000040(%esi)
		mov    %bh,_0cf483_data
		jmp    _076a1e_jump

	_0766dd_jump:
		cmpb   $0x000000,_0cf482_data
		je     _076717_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _076717_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _076717_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0e5187_data,%bl
		mov    _0e5186_data,%dl
		call   _01d444_func
		xor    %bl,%bl
		mov    %bl,_0e5184_data
		mov    %bl,_0cf482_data

	_076717_jump:
		mov    0x00006d(%esi),%cl
		test   %cl,%cl
		jne    _07694f_jump
		testb  $0x000008,0x000081(%esi)
		jne    _076739_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		add    %ecx,%eax
		test   %eax,%eax
		jl     _07675d_jump

	_076739_jump:
		testb  $0x000008,0x000081(%esi)
		je     _076763_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    _0cf284_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _076763_jump

	_07675d_jump:
		movw   $0x000000,0x000040(%esi)

	_076763_jump:
		cmpb   $0x000000,_0cf482_data
		je     _076a1e_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _076a1e_jump
		jbe    _07678a_jump
		cmp    $0x00000b,%al
		je     _076852_jump
		jmp    _076a1e_jump

	_07678a_jump:
		mov    0x000028(%esi),%ax
		mov    _0ce06c_data,%dx
		add    $0x000030,%eax
		movb   $0x000005,0x000072(%esi)
		sub    %edx,%eax
		movb   $0x000000,0x000071(%esi)
		test   %ax,%ax
		jge    _0767ab_jump
		neg    %eax

	_0767ab_jump:
		cmp    $0x000064,%ax
		jle    _0767f5_jump
		movswl %ax,%edx
		mov    $0x000014,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		cmp    $0x000009,%ax
		jle    _0767d2_jump
		movw   $0x000009,0x000042(%esi)
		jmp    _0767de_jump

	_0767d2_jump:
		cmp    $0x000004,%ax
		jge    _0767de_jump
		movw   $0x000004,0x000042(%esi)

	_0767de_jump:
		testb  $0x000008,0x000081(%esi)
		je     _0767ee_jump
		mov    $0x000002,%eax
		jmp    _076837_jump

	_0767ee_jump:
		mov    $0xfffffffe,%eax
		jmp    _076837_jump

	_0767f5_jump:
		movswl %ax,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		cmp    $0x000009,%ax
		jle    _076816_jump
		movw   $0x000009,0x000042(%esi)
		jmp    _076822_jump

	_076816_jump:
		cmp    $0x000004,%ax
		jge    _076822_jump
		movw   $0x000004,0x000042(%esi)

	_076822_jump:
		testb  $0x000008,0x000081(%esi)
		je     _076832_jump
		mov    $0x000001,%eax
		jmp    _076837_jump

	_076832_jump:
		mov    $0xffffffff,%eax

	_076837_jump:
		mov    %ax,0x000040(%esi)
		mov    0x000040(%esi),%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x00002c(%esi)
		negw   0x000042(%esi)
		jmp    _076a1e_jump

	_076852_jump:
		testb  $0x000008,0x000081(%esi)
		je     _07686b_jump
		mov    0x000028(%esi),%eax
		mov    _0ce06c_data,%edi
		add    $0x000030,%eax
		cmp    %edi,%eax
		jl     _076884_jump

	_07686b_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _076897_jump
		mov    0x000028(%esi),%eax
		mov    _0ce06c_data,%ebp
		add    $0x000030,%eax
		cmp    %ebp,%eax
		jle    _076897_jump

	_076884_jump:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		jmp    _076a1e_jump

	_076897_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _0768aa_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _0768cd_jump

	_0768aa_jump:
		testb  $0x000008,0x000081(%esi)
		je     _076923_jump
		mov    _0cf284_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _076923_jump

	_0768cd_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $_0000ff_case,%eax
		mov    0x000081(%esi),%bh
		sub    %eax,%edx
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,%cl
		mov    %bh,0x000081(%esi)
		and    $0x000001,%al
		xor    %ebx,%ebx
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%cl
		mov    %esi,%eax
		mov    %cl,0x000081(%esi)
		call   _01d444_func
		mov    $0x000001,%ch
		movw   $0x000000,0x000040(%esi)
		mov    %ch,_0cf483_data
		jmp    _076a1e_jump

	_076923_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		testb  $0x000008,0x000081(%esi)
		je     _076941_jump
		mov    $0x000002,%eax
		jmp    _076946_jump

	_076941_jump:
		mov    $0xfffffffe,%eax

	_076946_jump:
		mov    %ax,0x000040(%esi)
		jmp    _076a1e_jump

	_07694f_jump:
		cmp    $0x000001,%cl
		jne    _076a1e_jump
		testb  $0x000008,0x000081(%esi)
		jne    _07696b_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _076996_jump

	_07696b_jump:
		testb  $0x000008,0x000081(%esi)
		je     _076a1e_jump
		mov    _0cf284_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _076a1e_jump

	_076996_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $_0000ff_case,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%esi)
		mov    %dl,%dh
		xor    %ebx,%ebx
		or     %al,%dh
		mov    %esi,%eax
		mov    %dh,0x000081(%esi)
		xor    %edx,%edx
		call   _01d444_func
		mov    $0x000001,%bl
		movw   $0x000000,0x000040(%esi)
		mov    %bl,_0cf483_data
		jmp    _076a1e_jump

	_0769e9_jump:
		mov    _0e5188_data,%bx
		dec    %ebx
		mov    %bx,_0e5188_data
		cmp    $0x000001,%bx
		jge    _076a1e_jump
		mov    $0x0003e7,%edi
		mov    $0x000001,%ch
		mov    _0cf228_data,%al
		mov    %di,_0e5188_data
		or     $0x000004,%al
		mov    %ch,_0cf465_data
		mov    %al,_0cf228_data

	_076a1e_jump:
		mov    _0cf284_data,%ecx
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		xor    %ebx,%ebx
		add    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		add    $0x00012f,%ecx
		add    %edx,%eax
		cmp    %ebx,%eax
		jl     _076a50_jump
		cmp    %ecx,%eax
		jg     _076a50_jump
		mov    $0x000001,%eax
		jmp    _076a52_jump

	_076a50_jump:
		xor    %eax,%eax

	_076a52_jump:
		test   %eax,%eax
		jne    _076a5c_jump
		movw   $0x000000,0x000040(%esi)

	_076a5c_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076a64_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpw   $0x000000,0x000042(%eax)
		jle    _076aa2_jump
		call   _025590_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    %bx,_0cf242_data
		mov    $0x00000b,%ebx
		call   _01d444_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _055148_func

	_076aa2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_076aa8_switch:
		.long   _076be5_case
		.long   _076c56_case
		.long   _076d34_case
		.long   _076e2d_case

_076ab8_switch:
		.long   _076e6c_case
		.long   _076f88_case
		.long   _076e6c_case
		.long   _076e6c_case
		.long   _076f88_case
		.long   _076f88_case
		.long   _076f88_case
		.long   _076f88_case
		.long   _076f88_case
		.long   _076f88_case
		.long   _076e91_case
		.long   _076e6c_case




_076ae8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		movb   $0x000001,_0cf45a_data
		mov    %esi,%eax
		call   _075e20_func
		mov    0x000028(%esi),%ax
		mov    %ax,_0e5178_data
		mov    0x00002c(%esi),%ax
		mov    %ax,_0e517a_data
		mov    %esi,%eax
		call   _075e94_func
		cmpb   $0x000001,_0e5184_data
		jne    _076b29_jump
		mov    %esi,%eax
		call   _075d80_func

	_076b29_jump:
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _076b87_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		mov    _0cf3ed_data(%eax),%dh
		test   %dh,%dh
		jne    _076b87_jump
		mov    $0x000001,%bh
		mov    %dh,_0cf47e_data
		mov    %bh,_0cf482_data
		jmp    _076b8f_jump

	_076b87_jump:
		xor    %bl,%bl
		mov    %bl,_0cf482_data

	_076b8f_jump:
		mov    _0ce06c_data,%ebx
		mov    _0cf284_data,%eax
		add    $0x000096,%ebx
		sar    $0x000010,%eax
		mov    0x000028(%esi),%dx
		cmp    %eax,%ebx
		jle    _076bcb_jump
		mov    _0ce038_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    _0ce070_data,%ebx
		sub    $0x00006e,%eax
		cmp    %ebx,%eax
		jge    _076bcb_jump
		mov    0x000076(%esi),%al
		mov    %al,_0e5185_data

	_076bcb_jump:
		mov    _0cf483_data,%al
		cmp    $0x000003,%al
		ja     _076f88_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_076aa8_switch(,%eax,4)

	_076be5_case:
		mov    %esi,%eax
		call   _025590_func
		movswl %dx,%eax
		mov    _0ce06c_data,%ebx
		add    $0x0000dc,%eax
		cmp    %ebx,%eax
		jle    _076c12_jump
		lea    0x0000dc(%ebx),%eax
		movswl %dx,%edx
		cmp    %edx,%eax
		jle    _076c12_jump
		movb   $0x000001,_0cf47e_data

	_076c12_jump:
		cmpb   $0x000000,_0cf47e_data
		je     _076f88_case
		cmpb   $0x000000,_0cf482_data
		je     _076f88_case
		mov    $0x000001,%cl
		mov    $0x000001,%ebx
		xor    %al,%al
		xor    %edx,%edx
		mov    %cl,_0cf483_data
		mov    %al,_0cf481_data
		mov    $0x000002,%ch
		mov    %esi,%eax
		mov    %ch,_0cf486_data
		call   _01d444_func
		jmp    _076f88_case

	_076c56_case:
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%al
		jb     _076c70_jump
		jbe    _076ce3_jump
		cmp    $0x000003,%al
		je     _076d1b_jump
		jmp    _076f88_case

	_076c70_jump:
		cmp    $0x000001,%al
		jne    _076f88_case
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _076f88_case
		mov    0x00006b(%esi),%bh
		cmp    $0x000018,%bh
		je     _076cd1_jump
		cmp    $0x00001c,%bh
		jne    _076cba_jump
		cmpb   $0x000001,_0cf481_data
		ja     _076cd1_jump

	_076cba_jump:
		cmpb   $0x000020,0x00006b(%esi)
		jne    _076f88_case
		cmpb   $0x000003,_0cf481_data
		jbe    _076f88_case

	_076cd1_jump:
		mov    %esi,%eax
		call   _075cb8_func
		incb   _0cf481_data
		jmp    _076f88_case

	_076ce3_jump:
		cmpb   $0x000000,_0cf482_data
		je     _076f88_case
		mov    _0cf486_data,%dl
		cmp    $0x000001,%dl
		ja     _076d0c_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d434_func
		jmp    _076f88_case

	_076d0c_jump:
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0cf486_data
		jmp    _076f88_case

	_076d1b_jump:
		cmpb   $0x000000,_0cf482_data
		je     _076f88_case
		xor    %al,%al
		mov    %al,_0e5184_data
		jmp    _076f88_case

	_076d34_case:
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _076d46_jump
		jbe    _076d76_jump
		cmp    $0x00000b,%al
		je     _076db1_jump
		jmp    _076f88_case

	_076d46_jump:
		cmp    $0x000003,%al
		jne    _076f88_case
		cmpb   $0x000000,_0cf482_data
		je     _076f88_case
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %cl,%cl
		xor    %edx,%edx
		mov    %cl,_0e5184_data
		call   _01d444_func
		jmp    _076f88_case

	_076d76_jump:
		cmpb   $0x000000,_0cf482_data
		je     _076f88_case
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fffa,0x000042(%esi)
		mov    $0x000002,%ebx
		mov    0x00002c(%esi),%eax
		movw   $0x00ffff,0x000040(%esi)
		sub    $0x000006,%eax
		mov    %bx,_0e5188_data
		mov    %eax,0x00002c(%esi)
		jmp    _076f88_case

	_076db1_jump:
		cmpb   $0x000000,_0cf482_data
		je     _076f88_case
		mov    _0ce06c_data,%eax
		mov    0x000028(%esi),%ebp
		sub    $0x000032,%eax
		cmp    %ebp,%eax
		jle    _076e1a_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $_0000ff_case,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%esi)
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		xor    %edx,%edx
		call   _01d434_func
		movb   $0x000003,_0cf483_data
		jmp    _076f88_case

	_076e1a_jump:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		jmp    _076f88_case

	_076e2d_case:
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%al
		jb     _076e3f_jump
		jbe    _076eca_jump
		jmp    _076f88_case

	_076e3f_jump:
		test   %al,%al
		jne    _076f88_case
		cmpb   $0x000000,_0cf482_data
		je     _076f88_case
		mov    0x00006c(%esi),%al
		cmp    $0x00000b,%al
		ja     _076f88_case
		and    $_0000ff_case,%eax
		jmp    *%cs:_076ab8_switch(,%eax,4)

	_076e6c_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		xor    %cl,%cl
		mov    _0e5188_data,%ax
		mov    %cl,_0e5184_data
		mov    %ax,0x000040(%esi)
		jmp    _076f88_case

	_076e91_case:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d444_func
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fff9,0x000042(%esi)
		movw   $0x000002,0x000040(%esi)
		mov    0x000072(%esi),%al
		mov    0x00002c(%esi),%edi
		movb   $0x000005,0x000072(%esi)
		sub    $0x000007,%edi
		mov    %al,0x00006b(%esi)
		mov    %edi,0x00002c(%esi)
		jmp    _076f88_case

	_076eca_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		mov    _0ce036_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%bl
		add    $0x000032,%edx
		add    %ebx,%edx
		sar    $0x000004,%edx
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $_0000ff_case,%eax
		testb  $0x000002,_0924f4_data(%eax)
		jne    _076f32_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000000,0x000040(%esi)
		jmp    _076f88_case

	_076f32_jump:
		mov    0x000028(%esi),%edx
		mov    _0cf2ac_data,%eax
		add    $0x000096,%edx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _076f82_jump
		cmpw   $0x000002,_0e5188_data
		jne    _076f6e_jump
		cmpb   $0x000000,_0cf3ef_data
		je     _076f82_jump
		movw   $0x000001,0x000040(%esi)
		cmpb   $0x000002,_0cf3f1_data
		jae    _076f88_case
		decb   0x00006b(%esi)
		jmp    _076f88_case

	_076f6e_jump:
		movw   $0x000001,0x000040(%esi)
		cmpb   $0x000000,_0cf3ef_data
		je     _076f88_case
		decb   0x00006b(%esi)
		jmp    _076f88_case

	_076f82_jump:
		movw   $0x000002,0x000040(%esi)

	_076f88_case:
		mov    _0cf284_data,%ecx
		mov    0x000028(%esi),%edi
		mov    0x00003e(%esi),%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		add    %edi,%eax
		add    $0x00012f,%ecx
		add    %edx,%eax
		cmp    %ebx,%eax
		jl     _076fba_jump
		cmp    %ecx,%eax
		jg     _076fba_jump
		mov    $0x000001,%eax
		jmp    _076fbc_jump

	_076fba_jump:
		xor    %eax,%eax

	_076fbc_jump:
		test   %eax,%eax
		jne    _076fc6_jump
		movw   $0x000000,0x000040(%esi)

	_076fc6_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076fd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cf483_data,%al
		cmp    $0x000002,%al
		jb     _07701d_jump
		cmp    $0x000003,%al
		ja     _07701d_jump
		cmpw   $0x000000,0x000042(%ecx)
		jle    _07701d_jump
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _025590_func
		xor    %edx,%edx
		mov    %bx,_0cf23e_data
		mov    %ecx,%eax
		mov    $0x00000b,%ebx
		call   _01d444_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _055148_func

	_07701d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077024_func:
		mov    0x000076(%eax),%al
		xor    %ah,%ah
		inc    %eax
		mov    %ax,_0e5188_data
		ret    



_077034_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _075e20_func
		mov    0x000028(%ecx),%ax
		mov    %ax,_0e5178_data
		mov    0x00002c(%ecx),%ax
		mov    %ax,_0e517a_data
		mov    %ecx,%eax
		call   _075e94_func
		cmpb   $0x000002,_0cf483_data
		jne    _077075_jump
		mov    0x00006d(%ecx),%dl
		test   %dl,%dl
		jne    _077075_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _077075_jump
		mov    %dl,_0cf483_data

	_077075_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jne    _0770d3_jump
		xor    %eax,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		mov    _0cf3ed_data(%eax),%bh
		test   %bh,%bh
		jne    _0770d3_jump
		mov    $0x000001,%ah
		mov    %bh,_0cf47e_data
		mov    %ah,_0cf482_data
		jmp    _0770da_jump

	_0770d3_jump:
		xor    %al,%al
		mov    %al,_0cf482_data

	_0770da_jump:
		mov    _0cf483_data,%al
		cmp    $0x000001,%al
		jb     _0771cf_jump
		jbe    _0770f5_jump
		cmp    $0x000002,%al
		je     _0771ac_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0770f5_jump:
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%al
		jb     _0771cf_jump
		jbe    _07710e_jump
		cmp    $0x000003,%al
		je     _077197_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07710e_jump:
		cmpb   $0x000018,0x00006b(%ecx)
		jne    _07713f_jump
		xor    %edx,%edx
		mov    0x00000c(%ecx),%ebx
		mov    0x00006d(%ecx),%dl
		and    $_0000ff_case,%eax
		mov    (%ebx,%edx,4),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _07713f_jump
		mov    %ecx,%eax
		call   _075cb8_func

	_07713f_jump:
		cmpb   $0x000000,_0cf482_data
		je     _0771cf_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $_0000ff_case,%eax
		mov    0x000081(%ecx),%bl
		sub    %eax,%edx
		and    $0x0000f7,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%ecx)
		and    $0x000001,%al
		mov    %bl,%bh
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%bh
		mov    %ecx,%eax
		mov    %bh,0x000081(%ecx)
		call   _01d434_func
		incb   _0cf483_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_077197_jump:
		cmpb   $0x000000,_0cf482_data
		je     _0771cf_jump
		xor    %cl,%cl
		mov    %cl,_0e5184_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0771ac_jump:
		cmpb   $0x000000,_0cf482_data
		je     _0771cf_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _0771cf_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		movw   $0x000002,0x000040(%ecx)
		call   _01d444_func

	_0771cf_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0771d4_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0cf483_data
		jne    _0771f9_jump
		mov    $0x000001,%dh
		mov    $0x000001,%ebx
		mov    %dh,_0cf483_data
		mov    %dh,_0cf486_data
		xor    %edx,%edx
		call   _01d444_func

	_0771f9_jump:
		pop    %edx
		pop    %ebx
		ret    



_0771fc_func:
		cmpb   $0x000002,_0cf483_data
		jae    _07720b_jump
		mov    $0xffffffff,%eax
		ret    

	_07720b_jump:
		mov    $0x000001,%eax
		ret    



_077220_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %edx,0x00000c(%esp)
		mov    %ecx,0x000008(%esp)
		xor    %ah,%ah
		mov    %ax,_0e6e5c_data
		cmp    $0x0000c8,%bx
		jbe    _077268_jump
		mov    _0ce038_data,%eax
		sar    $0x000010,%eax
		xor    %esi,%esi
		shl    $0x000004,%eax
		mov    %bx,%si
		lea    -0x0000c8(%eax),%edx
		sub    $0x0000c8,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ax,_0e6e54_data
		jmp    _077271_jump

	_077268_jump:
		movw   $0x000001,_0e6e54_data

	_077271_jump:
		mov    _0e6e54_data,%cx
		test   %cx,%cx
		jne    _077288_jump
		movw   $0x000002,_0e6e54_data
		jmp    _077292_jump

	_077288_jump:
		mov    %ecx,%esi
		inc    %esi
		mov    %si,_0e6e54_data

	_077292_jump:
		mov    _0ce038_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		xor    %esi,%esi
		lea    -0x0000c8(%eax),%edx
		mov    _0e6e54_data,%si
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    %bx,%ax
		lea    -0x0000c8(%eax),%esi
		sub    %edx,%esi
		lea    -0x000001(%esi),%edx
		mov    %dx,_0e6e56_data
		cmpw   $0x000005,_0cf282_data
		jne    _0772fd_jump
		cmpw   $0x00000a,_0cf270_data
		jne    _0772fd_jump
		mov    0x000020(%esp),%ecx
		xor    %esi,%esi
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%si
		mov    %eax,%edx
		mov    %esi,%eax
		call   _078534_func
		jmp    _0774c4_jump

	_0772fd_jump:
		mov    _0cf280_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0e6e5c_data,%dx
		mov    _09806c_data(%edx,%eax,2),%al
		xor    %ah,%ah
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ax,_0e6e5a_data
		jmp    _07741e_jump

	_077332_jump:
		imul   $0x000018,%esi,%eax
		mov    _0cf280_data,%edi
		sar    $0x000010,%edi
		dec    %edi
		imul   $0x005dc0,%edi,%ebp
		mov    %ebp,(%esp)
		movzwl _0e6e5c_data,%ebp
		imul   $0x000960,%ebp,%ecx
		mov    %ecx,0x000004(%esp)
		mov    (%esp),%ecx
		shl    $0x000003,%esi
		add    0x000004(%esp),%ecx
		add    %ecx,%esi
		mov    _0980a8_data(%esi),%cx
		mov    %cx,_0e5194_data(%eax)
		mov    _0980aa_data(%esi),%cl
		mov    %cl,_0e519c_data(%eax)
		mov    _0980ac_data(%esi),%cl
		mov    %cl,_0e519d_data(%eax)
		mov    _0980ae_data(%esi),%cl
		imul   $0x00000a,%edi,%esi
		mov    %cl,_0e5198_data(%eax)
		xor    %ecx,%ecx
		mov    %cx,_0e519a_data(%eax)
		add    %ebp,%esi
		mov    %cx,_0e51a8_data(%eax)
		mov    _098030_data(%esi),%cl
		mov    %bx,_0e5196_data(%eax)
		test   %cl,%cl
		je     _0773c2_jump
		cmp    $0x000002,%cl
		jne    _0773f3_jump

	_0773c2_jump:
		xor    %esi,%esi
		movswl %bx,%eax
		mov    0x00000c(%esp),%si
		imul   %eax,%esi
		imul   $0x000140,%eax,%eax
		mov    0x000008(%esp),%edi
		add    %esi,%edi
		movswl %dx,%esi
		imul   $0x000018,%esi,%esi
		add    0x000020(%esp),%eax
		mov    %edi,_0e51a0_data(%esi)
		mov    %eax,_0e51a4_data(%esi)
		jmp    _07740e_jump

	_0773f3_jump:
		mov    0x000008(%esp),%edi
		movswl %bx,%esi
		add    %esi,%edi
		mov    %edi,_0e51a0_data(%eax)
		mov    0x000020(%esp),%edi
		add    %edi,%esi
		mov    %esi,_0e51a4_data(%eax)

	_07740e_jump:
		movswl %dx,%eax
		imul   $0x000018,%eax,%eax
		mov    _0e5194_data(%eax),%di
		inc    %edx
		add    %edi,%ebx

	_07741e_jump:
		xor    %eax,%eax
		movswl %dx,%esi
		mov    _0e6e5a_data,%ax
		cmp    %eax,%esi
		jl     _077332_jump
		mov    _0cf280_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e6e5c_data,%ax
		mov    _0bb328_data(%edx,%eax,1),%al
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ax,_0e6e58_data
		jmp    _0774b4_jump

	_077462_jump:
		mov    _0cf280_data,%esi
		sar    $0x000010,%esi
		dec    %esi
		imul   $0x000640,%esi,%edi
		xor    %esi,%esi
		mov    _0e6e5c_data,%si
		imul   $0x0000a0,%esi,%esi
		add    %edi,%esi
		mov    _0bb364_data(%esi,%eax,8),%bx
		mov    %bx,_0e6db4_data(,%eax,8)
		mov    _0bb366_data(%esi,%eax,8),%bx
		mov    %bx,_0e6db6_data(,%eax,8)
		mov    _0bb368_data(%esi,%eax,8),%bx
		inc    %edx
		mov    %bx,_0e6db8_data(,%eax,8)

	_0774b4_jump:
		xor    %esi,%esi
		movswl %dx,%eax
		mov    _0e6e58_data,%si
		cmp    %esi,%eax
		jl     _077462_jump

	_0774c4_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_0774d0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000064,%esp
		mov    %eax,0x000020(%esp)
		mov    %edx,0x000054(%esp)
		mov    %ebx,0x000034(%esp)
		mov    %ecx,0x000048(%esp)
		mov    _0cf280_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e6e5c_data,%ax
		add    %edx,%eax
		mov    _098030_data(%eax),%dl
		test   %dl,%dl
		je     _077518_jump
		cmp    $0x000002,%dl
		jne    _0779aa_jump

	_077518_jump:
		mov    0x000074(%esp),%eax
		mov    0x000034(%esp),%ecx
		mov    0x000054(%esp),%ebx
		mov    _0cf282_data,%si
		sub    %ecx,%eax
		sub    $0x0000c8,%ebx
		mov    %ax,0x000044(%esp)
		cmp    $0x000004,%si
		jne    _0775d3_jump
		mov    _0cf270_data,%di
		cmp    %si,%di
		je     _077558_jump
		cmp    $0x00000b,%di
		jne    _0775d3_jump

	_077558_jump:
		mov    _0cf2be_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _0775d3_jump
		xor    %edx,%edx
		mov    $0x0000c8,%esi
		mov    0x000078(%esp),%dx
		sub    %edx,%esi
		mov    0x00002c(%eax),%ecx
		mov    %esi,%edx
		sub    $0x00006e,%ecx
		xor    %esi,%edx
		sub    %esi,%ecx
		mov    0x000048(%esp),%dx
		cmp    %ecx,%edx
		jge    _0775bf_jump
		mov    0x000078(%esp),%ecx
		mov    0x00002c(%eax),%dx
		mov    $0x0000c8,%eax
		sub    $0x00006e,%edx
		sub    %ecx,%eax
		sub    %eax,%edx
		mov    %edx,0x000048(%esp)
		test   %dx,%dx
		jge    _0775bf_jump
		xor    %edi,%edi
		mov    %edi,0x000048(%esp)

	_0775bf_jump:
		mov    0x000048(%esp),%eax
		mov    0x000078(%esp),%edx
		cmp    %dx,%ax
		jb     _0775d3_jump
		mov    %edx,%eax
		dec    %eax
		mov    %eax,0x000048(%esp)

	_0775d3_jump:
		mov    _0cf280_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e6e5c_data,%ax
		cmpb   $0x000000,_098030_data(%edx,%eax,1)
		jne    _07764e_jump
		cmpw   $0x000003,_0cf282_data
		jne    _077623_jump
		cmpw   $0x00000a,_0cf270_data
		jne    _077623_jump
		mov    _0cf2ae_data,%eax
		sar    $0x000010,%eax
		sar    %eax
		add    $0x00000b,%eax
		mov    %ax,0x000014(%esp)
		jmp    _077662_jump

	_077623_jump:
		mov    _0cf2ae_data,%edx
		xor    %ecx,%ecx
		sar    $0x000010,%edx
		mov    _0e6e54_data,%cx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		xor    %edx,%edx
		mov    _0e6e56_data,%dx
		add    %edx,%eax
		mov    %ax,0x000014(%esp)
		jmp    _077662_jump

	_07764e_jump:
		mov    $0x0000c8,%eax
		mov    0x000078(%esp),%ecx
		mov    %ebx,%edx
		sub    %ecx,%eax
		add    %eax,%edx
		mov    %dx,0x000014(%esp)

	_077662_jump:
		xor    %eax,%eax
		mov    $0x0000c8,%edx
		mov    0x000078(%esp),%ax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %bx,%edx
		add    %eax,%edx
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jle    _077692_jump
		mov    $0x0000c8,%eax
		sub    0x000078(%esp),%eax
		add    %eax,%ebx
		mov    %bx,0x000014(%esp)

	_077692_jump:
		xor    %ebx,%ebx
		mov    _0e6e5a_data,%cx
		mov    %ebx,0x000024(%esp)
		test   %cx,%cx
		jbe    _077825_jump
		mov    0x000078(%esp),%eax
		mov    0x000048(%esp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x000028(%esp)

	_0776b6_jump:
		xor    %esi,%esi
		mov    0x000024(%esp),%si
		imul   $0x000018,%esi,%esi
		xor    %eax,%eax
		mov    0x000034(%esp),%ax
		movzwl _0e519a_data(%esi),%ebp
		mov    _0e51a0_data(%esi),%ebx
		mov    _0e51a4_data(%esi),%edi
		add    %ebx,%ebp
		add    %eax,%edi
		add    %eax,%ebp
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000008,%edx
		shl    $0x000006,%eax
		mov    0x000014(%esp),%ecx
		add    %eax,%edx
		mov    _0e5194_data(%esi),%ax
		mov    _0e5196_data(%esi),%si
		sub    %ecx,%esi
		sub    %edx,%edi
		mov    %esi,%edx
		add    %eax,%edx
		test   %si,%si
		jge    _07773d_jump
		test   %dx,%dx
		jle    _07773d_jump
		test   %ax,%ax
		je     _07773d_jump
		movswl %si,%eax
		neg    %eax
		mov    %eax,%ecx
		mov    %eax,%ebx
		shl    $0x000008,%ecx
		shl    $0x000006,%ebx
		add    %ecx,%ebx
		add    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x000020(%esp),%bx
		imul   %ebx,%eax
		xor    %esi,%esi
		add    %eax,%ebp
		mov    %edx,%eax

	_07773d_jump:
		movswl %dx,%ebx
		mov    %ebx,0x00000c(%esp)
		xor    %ebx,%ebx
		mov    0x000048(%esp),%bx
		mov    %ebx,0x000010(%esp)
		mov    0x00000c(%esp),%ebx
		cmp    0x000010(%esp),%ebx
		jle    _07780c_jump
		xor    %ecx,%ecx
		mov    0x000078(%esp),%cx
		movswl %si,%ebx
		mov    %ecx,0x000004(%esp)
		cmp    %ecx,%ebx
		jge    _07780c_jump
		cmp    0x000010(%esp),%ebx
		jge    _0777a7_jump
		mov    0x00000c(%esp),%ecx
		cmp    0x000004(%esp),%ecx
		jle    _0777a7_jump
		xor    %edx,%edx
		mov    0x000010(%esp),%eax
		mov    0x000020(%esp),%dx
		sub    %ebx,%eax
		imul   %eax,%edx
		add    %edx,%ebp
		mov    %eax,%edx
		shl    $0x000008,%edx
		shl    $0x000006,%eax
		add    %edx,%eax
		add    %eax,%edi
		mov    0x000028(%esp),%eax
		jmp    _0777eb_jump

	_0777a7_jump:
		xor    %ebx,%ebx
		movswl %si,%ecx
		mov    0x000048(%esp),%bx
		cmp    %ebx,%ecx
		jge    _0777d9_jump
		xor    %edx,%edx
		sub    %ecx,%ebx
		mov    0x000020(%esp),%dx
		imul   %ebx,%edx
		add    %edx,%ebp
		mov    %ebx,%edx
		shl    $0x000008,%edx
		shl    $0x000006,%ebx
		add    %ebx,%edx
		add    %edx,%edi
		mov    0x000048(%esp),%edx
		sub    %esi,%edx
		sub    %edx,%eax
		jmp    _0777eb_jump

	_0777d9_jump:
		xor    %ebx,%ebx
		movswl %dx,%edx
		mov    0x000078(%esp),%bx
		cmp    %ebx,%edx
		jle    _0777eb_jump
		mov    %ebx,%eax
		sub    %esi,%eax

	_0777eb_jump:
		mov    0x000042(%esp),%ecx
		mov    _0ccadc_data,%esi
		xor    %edx,%edx
		movswl %ax,%ebx
		mov    0x000020(%esp),%dx
		sub    %esi,%ebp
		sar    $0x000010,%ecx
		mov    %ebp,%esi
		call   *_0ccabc_data

	_07780c_jump:
		mov    0x000024(%esp),%ebx
		inc    %ebx
		mov    _0e6e5a_data,%cx
		mov    %ebx,0x000024(%esp)
		cmp    %cx,%bx
		jb     _0776b6_jump

	_077825_jump:
		mov    0x000020(%esp),%esi
		mov    $0x000001,%eax
		mov    _0e6e58_data,%dx
		xor    %edi,%edi
		shr    %si
		mov    %edi,0x00001c(%esp)
		mov    %eax,0x00004c(%esp)
		mov    %esi,0x000020(%esp)
		test   %dx,%dx
		jbe    _077dbe_jump

	_07784f_jump:
		xor    %eax,%eax
		mov    0x00001c(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0e6db8_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		cmpw   $0x000000,_0e5194_data(%edx)
		je     _077983_jump
		movzwl 0x00004c(%esp),%ebp
		imul   $0x00000c,%ebp,%ebp
		mov    _0e6db4_data(%eax),%ax
		mov    _0e519a_data(%edx),%cx
		mov    _0ce738_data,%ebx
		sub    %ecx,%eax
		mov    (%ebx),%ebx
		mov    %ax,0x000060(%esp)
		add    %ebx,%ebp
		cmp    $0x000140,%ax
		jle    _0778a9_jump
		mov    0x000020(%esp),%eax
		sub    %ax,0x000060(%esp)

	_0778a9_jump:
		mov    0x00005e(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000005(%ebp),%dl
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    0x000034(%esp),%dx
		cmp    %edx,%ebx
		jle    _077916_jump
		xor    %edx,%edx
		mov    0x00001c(%esp),%dx
		mov    0x000014(%esp),%ecx
		mov    _0e6db6_data(,%edx,8),%bx
		sub    %ecx,%ebx
		xor    %ch,%ch
		mov    0x000006(%ebp),%cl
		movzbw 0x000005(%ebp),%si
		shl    $0x000008,%ecx
		movswl %bx,%ebx
		add    %esi,%ecx
		mov    _0cd154_data,%esi
		mov    %esi,(%esp)
		mov    _0ce738_data,%esi
		and    $0x00ffff,%ecx
		mov    0x000000(%ebp),%edi
		mov    0x000008(%esi),%esi
		mov    _0c1eec_data(,%edx,4),%edx
		add    %edi,%esi
		mov    (%esp),%edi
		call   _016d60_func

	_077916_jump:
		mov    0x000020(%esp),%eax
		add    %ax,0x000060(%esp)
		xor    %edx,%edx
		mov    0x00005e(%esp),%eax
		mov    0x000074(%esp),%dx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _077983_jump
		xor    %edx,%edx
		mov    0x00001c(%esp),%dx
		mov    0x000014(%esp),%edi
		mov    _0e6db6_data(,%edx,8),%bx
		sub    %edi,%ebx
		movswl %bx,%ebx
		mov    %ebx,(%esp)
		xor    %bh,%bh
		mov    0x000006(%ebp),%bl
		mov    %ebx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%bl
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    %bx,%cx
		mov    _0ce738_data,%ebx
		mov    _0c1eec_data(,%edx,4),%edx
		mov    0x000008(%ebx),%esi
		mov    0x000000(%ebp),%ebx
		mov    _0cd154_data,%edi
		add    %ebx,%esi
		mov    (%esp),%ebx
		call   _016d60_func

	_077983_jump:
		mov    0x00001c(%esp),%esi
		mov    0x00004c(%esp),%edi
		mov    _0e6e58_data,%dx
		inc    %esi
		inc    %edi
		mov    %esi,0x00001c(%esp)
		mov    %edi,0x00004c(%esp)
		cmp    %dx,%si
		jae    _077dbe_jump
		jmp    _07784f_jump

	_0779aa_jump:
		xor    %edx,%edx
		mov    _0e6e5a_data,%bx
		mov    %edx,0x000040(%esp)
		test   %bx,%bx
		jbe    _077c4e_jump
		mov    0x000078(%esp),%eax
		sub    %ecx,%eax
		mov    0x000034(%esp),%esi
		mov    %eax,0x000058(%esp)
		mov    0x000074(%esp),%eax
		sub    %esi,%eax
		mov    %eax,0x00002c(%esp)

	_0779d8_jump:
		xor    %edi,%edi
		mov    0x000040(%esp),%di
		imul   $0x000018,%edi,%edi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000020(%esp),%dx
		mov    _0e519a_data(%edi),%ax
		imul   %edx,%eax
		mov    _0e51a0_data(%edi),%esi
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x000048(%esp),%ax
		imul   %eax,%edx
		imul   $0x000140,%eax,%eax
		add    %edx,%esi
		mov    _0e5194_data(%edi),%dx
		mov    _0e51a4_data(%edi),%ebx
		mov    %dx,0x00003c(%esp)
		mov    0x000054(%esp),%edx
		add    %ebx,%eax
		mov    _0e519a_data(%edi),%bx
		mov    0x000048(%esp),%ecx
		sub    %ebx,%edx
		sub    %ecx,%edx
		xor    %ebx,%ebx
		mov    %dx,0x000038(%esp)
		mov    _0e5196_data(%edi),%dx
		mov    0x00003c(%esp),%edi
		mov    %dx,0x000018(%esp)
		add    %edi,%edx
		mov    0x000034(%esp),%bx
		movswl %dx,%ebp
		cmp    %ebx,%ebp
		jle    _077c35_jump
		xor    %ecx,%ecx
		mov    0x000016(%esp),%edi
		mov    0x000074(%esp),%cx
		sar    $0x000010,%edi
		mov    %ecx,0x000008(%esp)
		cmp    %ecx,%edi
		jge    _077c35_jump
		cmpw   $0x000000,0x00003c(%esp)
		je     _077c35_jump
		cmp    %ebx,%edi
		jge    _077aa0_jump
		cmp    0x000008(%esp),%ebp
		jle    _077aa0_jump
		mov    0x00002c(%esp),%edx
		sub    %edi,%ebx
		mov    %dx,0x00003c(%esp)
		add    %ebx,%esi
		add    %ebx,%eax
		jmp    _077aea_jump

	_077aa0_jump:
		xor    %ecx,%ecx
		mov    0x000016(%esp),%ebx
		mov    0x000034(%esp),%cx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jge    _077acf_jump
		mov    %ecx,%edx
		sub    %ebx,%edx
		add    %edx,%esi
		add    %edx,%eax
		mov    %ecx,%edx
		mov    0x000018(%esp),%ecx
		mov    0x00003c(%esp),%edi
		sub    %ecx,%edx
		sub    %edx,%edi
		mov    %di,0x00003c(%esp)
		jmp    _077aea_jump

	_077acf_jump:
		xor    %ecx,%ecx
		movswl %dx,%ebx
		mov    0x000074(%esp),%cx
		cmp    %ecx,%ebx
		jle    _077aea_jump
		mov    0x00003c(%esp),%ebx
		sub    %ecx,%edx
		sub    %edx,%ebx
		mov    %bx,0x00003c(%esp)

	_077aea_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000078(%esp),%bx
		mov    0x000048(%esp),%dx
		sub    %edx,%ebx
		mov    0x000036(%esp),%edx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jle    _077b0e_jump
		mov    0x000058(%esp),%edx
		mov    %dx,0x000038(%esp)

	_077b0e_jump:
		cmpw   $0x000000,0x000038(%esp)
		jle    _077b7e_jump
		mov    0x00003a(%esp),%ecx
		mov    0x000036(%esp),%ebx
		xor    %edx,%edx
		mov    _0ccadc_data,%edi
		mov    0x000020(%esp),%dx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		add    %eax,%edi
		call   *_0ccabc_data
		xor    %eax,%eax
		mov    0x000040(%esp),%ax
		imul   $0x000018,%eax,%eax
		mov    0x000036(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000140,%edx,%edx
		mov    _0e51a0_data(%eax),%esi
		mov    _0e51a4_data(%eax),%edi
		xor    %eax,%eax
		mov    0x000048(%esp),%ax
		imul   $0x000140,%eax,%eax
		add    %edi,%edx
		mov    0x000038(%esp),%ebx
		add    %edx,%eax
		mov    0x000058(%esp),%edx
		sub    %ebx,%edx
		mov    %dx,0x000038(%esp)
		jmp    _077bce_jump

	_077b7e_jump:
		xor    %eax,%eax
		mov    0x000040(%esp),%ax
		imul   $0x000018,%eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000054(%esp),%bx
		mov    _0e519a_data(%eax),%dx
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    0x000048(%esp),%dx
		mov    %edx,%ecx
		imul   $0x000140,%edx,%edx
		sub    %ebx,%ecx
		xor    %ebx,%ebx
		mov    0x000020(%esp),%bx
		imul   %ecx,%ebx
		mov    _0e51a0_data(%eax),%esi
		mov    _0e51a4_data(%eax),%eax
		add    %edx,%eax
		mov    0x000058(%esp),%edx
		mov    %dx,0x000038(%esp)
		add    %ebx,%esi

	_077bce_jump:
		xor    %ebx,%ebx
		mov    0x000016(%esp),%edx
		mov    0x000034(%esp),%bx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jge    _077be6_jump
		sub    %edx,%ebx
		add    %ebx,%esi
		add    %ebx,%eax

	_077be6_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000078(%esp),%bx
		mov    0x000048(%esp),%dx
		sub    %edx,%ebx
		mov    0x000036(%esp),%edx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jle    _077c0a_jump
		mov    0x000058(%esp),%edx
		mov    %dx,0x000038(%esp)

	_077c0a_jump:
		cmpw   $0x000000,0x000038(%esp)
		jle    _077c35_jump
		mov    0x00003a(%esp),%ecx
		mov    0x000036(%esp),%ebx
		xor    %edx,%edx
		mov    _0ccadc_data,%edi
		mov    0x000020(%esp),%dx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		add    %eax,%edi
		call   *_0ccabc_data

	_077c35_jump:
		mov    0x000040(%esp),%esi
		inc    %esi
		mov    _0e6e5a_data,%di
		mov    %esi,0x000040(%esp)
		cmp    %di,%si
		jb     _0779d8_jump

	_077c4e_jump:
		mov    $0x000001,%edx
		xor    %eax,%eax
		mov    _0e6e58_data,%bx
		mov    %eax,0x00005c(%esp)
		mov    %edx,0x000050(%esp)
		test   %bx,%bx
		jbe    _077dbe_jump

	_077c6d_jump:
		xor    %eax,%eax
		mov    0x00005c(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0e6db8_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		cmpw   $0x000000,_0e5194_data(%edx)
		je     _077d9c_jump
		xor    %ebx,%ebx
		mov    0x000050(%esp),%bx
		imul   $0x00000c,%ebx,%ebp
		mov    _0e6db6_data(%eax),%ax
		mov    _0e519a_data(%edx),%cx
		mov    _0ce738_data,%ebx
		sub    %ecx,%eax
		mov    (%ebx),%ebx
		mov    %ax,0x000030(%esp)
		add    %ebx,%ebp
		cmp    $0x0000c8,%ax
		jle    _077cc9_jump
		mov    0x000054(%esp),%eax
		sub    %ax,0x000030(%esp)

	_077cc9_jump:
		mov    0x00002e(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000006(%ebp),%al
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    0x000048(%esp),%ax
		cmp    %eax,%edx
		jle    _077d30_jump
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %dx,%cx
		mov    _0ce738_data,%edx
		mov    _0cd154_data,%edi
		mov    0x00005c(%esp),%ax
		mov    0x000008(%edx),%esi
		mov    0x000000(%ebp),%edx
		mov    %eax,(%esp)
		add    %edx,%esi
		mov    (%esp),%edx
		mov    _0e6db2_data(,%eax,8),%eax
		shl    $0x000002,%edx
		sar    $0x000010,%eax
		mov    _0c1eec_data(%edx),%edx
		call   _016d60_func

	_077d30_jump:
		mov    0x000054(%esp),%eax
		add    %ax,0x000030(%esp)
		xor    %eax,%eax
		mov    0x00002e(%esp),%ebx
		mov    0x000078(%esp),%ax
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jge    _077d9c_jump
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%esi
		shl    $0x000008,%esi
		mov    0x000005(%ebp),%dl
		xor    %eax,%eax
		add    %esi,%edx
		xor    %esi,%esi
		mov    0x00005c(%esp),%ax
		mov    %dx,%si
		mov    _0cd154_data,%edx
		mov    _0e6db2_data(,%eax,8),%ecx
		mov    %edx,(%esp)
		mov    _0ce738_data,%edx
		sar    $0x000010,%ecx
		mov    0x000000(%ebp),%ebp
		mov    0x000008(%edx),%edx
		mov    (%esp),%edi
		add    %edx,%ebp
		mov    _0c1eec_data(,%eax,4),%edx
		mov    %ecx,%eax
		mov    %esi,%ecx
		mov    %ebp,%esi
		call   _016d60_func

	_077d9c_jump:
		mov    0x00005c(%esp),%esi
		mov    0x000050(%esp),%edi
		mov    _0e6e58_data,%dx
		inc    %esi
		inc    %edi
		mov    %esi,0x00005c(%esp)
		mov    %edi,0x000050(%esp)
		cmp    %dx,%si
		jb     _077c6d_jump

	_077dbe_jump:
		add    $0x000064,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_077dc8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000028(%esp)
		mov    %ebx,0x000008(%esp)
		mov    %ecx,0x000018(%esp)
		mov    _0cf280_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e6e5c_data,%ax
		add    %edx,%eax
		mov    _098030_data(%eax),%dl
		test   %dl,%dl
		je     _077e10_jump
		cmp    $0x000002,%dl
		jne    _077f97_jump

	_077e10_jump:
		mov    0x000004(%esp),%esi
		mov    _0cf278_data,%dx
		mov    _0cf2b0_data,%ax
		xor    %edi,%edi
		shr    %si
		add    %edx,%edx
		add    %eax,%eax
		mov    %edi,0x000024(%esp)
		sub    %eax,%edx
		mov    %esi,0x000004(%esp)
		add    $0x0000c8,%edx
		mov    $0x000001,%eax
		mov    %edx,0x00002c(%esp)
		mov    _0e6e58_data,%dx
		mov    %eax,0x000010(%esp)
		test   %dx,%dx
		jbe    _0780ff_jump

	_077e57_jump:
		xor    %eax,%eax
		mov    0x000024(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0e6db8_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		cmpw   $0x000000,_0e5194_data(%edx)
		jne    _077f70_jump
		movzwl 0x000010(%esp),%ebp
		imul   $0x00000c,%ebp,%ebp
		mov    _0e6db4_data(%eax),%ax
		mov    _0e519a_data(%edx),%cx
		mov    _0ce738_data,%ebx
		sub    %ecx,%eax
		mov    (%ebx),%ebx
		mov    %ax,0x000020(%esp)
		add    %ebx,%ebp
		cmp    $0x000140,%ax
		jle    _077eb1_jump
		mov    0x000004(%esp),%eax
		sub    %ax,0x000020(%esp)

	_077eb1_jump:
		mov    0x00001e(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000005(%ebp),%dl
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    0x000008(%esp),%dx
		cmp    %edx,%ebx
		jle    _077f11_jump
		xor    %edx,%edx
		mov    0x00002c(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		xor    %dh,%dh
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0ce738_data,%edx
		mov    0x000008(%edx),%esi
		add    0x000000(%ebp),%esi
		xor    %edx,%edx
		mov    0x000024(%esp),%dx
		mov    _0cd154_data,%edi
		shl    $0x000002,%edx
		movswl %bx,%ebx
		mov    _0c1eec_data(%edx),%edx
		call   _016d60_func

	_077f11_jump:
		mov    0x000004(%esp),%eax
		add    %ax,0x000020(%esp)
		xor    %edx,%edx
		mov    0x00001e(%esp),%eax
		mov    0x000040(%esp),%dx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _077f70_jump
		xor    %edx,%edx
		mov    0x00002c(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		xor    %dh,%dh
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		mov    _0ce738_data,%esi
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000008(%esi),%esi
		mov    %dx,%cx
		add    0x000000(%ebp),%esi
		xor    %edx,%edx
		mov    _0cd154_data,%edi
		mov    0x000024(%esp),%dx
		movswl %bx,%ebx
		mov    _0c1eec_data(,%edx,4),%edx
		call   _016d60_func

	_077f70_jump:
		mov    0x000024(%esp),%edi
		mov    0x000010(%esp),%eax
		mov    _0e6e58_data,%dx
		inc    %edi
		inc    %eax
		mov    %edi,0x000024(%esp)
		mov    %eax,0x000010(%esp)
		cmp    %dx,%di
		jae    _0780ff_jump
		jmp    _077e57_jump

	_077f97_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    _0e6e58_data,%cx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x00000c(%esp)
		test   %cx,%cx
		jbe    _0780ff_jump

	_077fb6_jump:
		xor    %eax,%eax
		mov    0x000014(%esp),%ax
		shl    $0x000003,%eax
		xor    %ebx,%ebx
		mov    _0e6db8_data(%eax),%bx
		imul   $0x000018,%ebx,%ebx
		cmpw   $0x000000,_0e5194_data(%ebx)
		jne    _0780dd_jump
		xor    %edx,%edx
		mov    0x00000c(%esp),%dx
		imul   $0x00000c,%edx,%ebp
		mov    _0ce738_data,%edx
		mov    (%edx),%edx
		mov    _0e6db6_data(%eax),%ax
		add    %edx,%ebp
		mov    _0e519a_data(%ebx),%dx
		sub    %edx,%eax
		mov    %ax,0x00001c(%esp)
		cmp    $0x0000c8,%ax
		jle    _078012_jump
		mov    0x000028(%esp),%eax
		sub    %ax,0x00001c(%esp)

	_078012_jump:
		mov    0x00001a(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000006(%ebp),%al
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		cmp    %eax,%edx
		jle    _078077_jump
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		mov    _0cd154_data,%edi
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		xor    %eax,%eax
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000014(%esp),%ax
		mov    %dx,%cx
		mov    _0ce738_data,%edx
		mov    0x000000(%ebp),%esi
		mov    %eax,(%esp)
		mov    0x000008(%edx),%edx
		mov    _0e6db2_data(,%eax,8),%eax
		add    %edx,%esi
		mov    (%esp),%edx
		sar    $0x000010,%eax
		mov    _0c1eec_data(,%edx,4),%edx
		call   _016d60_func

	_078077_jump:
		mov    0x000028(%esp),%eax
		add    %ax,0x00001c(%esp)
		xor    %eax,%eax
		mov    0x00001a(%esp),%ebx
		mov    0x000044(%esp),%ax
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jge    _0780dd_jump
		xor    %eax,%eax
		mov    0x000014(%esp),%ax
		mov    _0e6db2_data(,%eax,8),%edx
		sar    $0x000010,%edx
		mov    %edx,(%esp)
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		mov    _0ce738_data,%esi
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000008(%esi),%esi
		mov    %dx,%cx
		mov    0x000000(%ebp),%edx
		mov    _0cd154_data,%edi
		add    %edx,%esi
		mov    _0c1eec_data(,%eax,4),%edx
		mov    (%esp),%eax
		call   _016d60_func

	_0780dd_jump:
		mov    0x000014(%esp),%ebx
		mov    0x00000c(%esp),%ecx
		mov    _0e6e58_data,%si
		inc    %ebx
		inc    %ecx
		mov    %ebx,0x000014(%esp)
		mov    %ecx,0x00000c(%esp)
		cmp    %si,%bx
		jb     _077fb6_jump

	_0780ff_jump:
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_078108_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %ax,0x00000c(%esp)
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    _0cf280_data,%eax
		sar    $0x000010,%eax
		dec    %eax
		lea    0x000000(,%eax,4),%edx
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e6e5c_data,%ax
		add    %edx,%eax
		mov    _098030_data(%eax),%dl
		test   %dl,%dl
		jne    _078347_jump
		mov    _0e6e5a_data,%bx
		shr    %si
		xor    %ecx,%ecx
		test   %bx,%bx
		jbe    _078314_jump
		mov    %esi,%eax
		shl    $0x000004,%eax
		mov    %eax,0x000008(%esp)

	_078162_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		cmpw   $0x000000,_0e5194_data(%ebx)
		jne    _07818c_jump
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		add    %edx,%edx
		movzwl %si,%ebp
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		jmp    _0782fd_jump

	_07818c_jump:
		mov    _0e5198_data(%ebx),%dh
		test   %dh,%dh
		jne    _0781c9_jump
		xor    %eax,%eax
		mov    %si,%ax
		movzbl _0e519c_data(%ebx),%ebp
		mov    %eax,%edx
		imul   %ebp,%edx
		mov    %eax,(%esp)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		mov    (%esp),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		jmp    _0782fd_jump

	_0781c9_jump:
		cmp    $0x000001,%dh
		je     _0781d3_jump
		cmp    $0x000004,%dh
		jne    _07823f_jump

	_0781d3_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %edx,%edx
		mov    _0e51a8_data(%ebx),%dx
		movzbl _0e519d_data(%ebx),%ebp
		add    %ebp,%edx
		movzwl %si,%ebp
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    _0e5198_data(%ebx),%ah
		mov    %dx,_0e51a8_data(%ebx)
		cmp    $0x000001,%ah
		jne    _078223_jump
		xor    %edx,%edx
		mov    _0e51a8_data(%ebx),%dx
		sar    $0x000004,%edx
		jmp    _0782fd_jump

	_078223_jump:
		xor    %eax,%eax
		mov    _0e519c_data(%ebx),%al
		mov    %eax,%edx
		imul   %ebp,%edx
		mov    %eax,(%esp)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		jmp    _0782b9_jump

	_07823f_jump:
		cmp    $0x000002,%dh
		je     _07824d_jump
		cmp    $0x000005,%dh
		jne    _078304_jump

	_07824d_jump:
		xor    %edx,%edx
		mov    %cx,%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		mov    _0e519d_data(%edx),%bl
		movzwl _0e51a8_data(%edx),%ebp
		cmp    %ebp,%ebx
		jle    _078273_jump
		mov    0x000008(%esp),%eax
		add    %ax,_0e51a8_data(%edx)

	_078273_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %dh,%dh
		mov    _0e519d_data(%ebx),%dl
		sub    %dx,_0e51a8_data(%ebx)
		cmpb   $0x000002,_0e5198_data(%ebx)
		jne    _0782a1_jump
		xor    %edx,%edx
		mov    _0e51a8_data(%ebx),%dx
		sar    $0x000004,%edx
		jmp    _0782fd_jump

	_0782a1_jump:
		xor    %eax,%eax
		mov    _0e519c_data(%ebx),%al
		movzwl %si,%ebp
		mov    %eax,(%esp)
		imul   %ebp,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx

	_0782b9_jump:
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %dx,_0e519a_data(%ebx)
		xor    %edx,%edx
		mov    _0e51a8_data(%ebx),%dx
		mov    %edx,%ebp
		xor    %edx,%edx
		sar    $0x000004,%ebp
		mov    _0e519a_data(%ebx),%dx
		add    %ebp,%edx
		mov    %dx,_0e519a_data(%ebx)
		mov    _0e519a_data(%ebx),%ax
		xor    %edx,%edx
		div    %si

	_0782fd_jump:
		mov    %dx,_0e519a_data(%ebx)

	_078304_jump:
		mov    _0e6e5a_data,%ax
		inc    %ecx
		cmp    %ax,%cx
		jb     _078162_jump

	_078314_jump:
		cmpw   $0x000005,_0cf282_data
		jne    _07852b_jump
		cmpw   $0x00000a,_0cf270_data
		jne    _07852b_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %di,%dx
		mov    %si,%ax
		call   _0785c8_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_078347_jump:
		cmp    $0x000001,%dl
		jne    _07852b_jump
		mov    _0e6e5a_data,%dx
		xor    %ecx,%ecx
		test   %dx,%dx
		jbe    _07852b_jump
		mov    %ebx,%eax
		shl    $0x000004,%eax
		mov    %eax,0x000004(%esp)

	_07836b_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		cmpw   $0x000000,_0e5194_data(%ebx)
		jne    _078399_jump
		mov    _0cf2ae_data,%edx
		sar    $0x000010,%edx
		xor    %esi,%esi
		add    %edx,%edx
		mov    %di,%si
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		jmp    _078513_jump

	_078399_jump:
		mov    _0e5198_data(%ebx),%al
		test   %al,%al
		jne    _0783d1_jump
		xor    %esi,%esi
		mov    %di,%si
		movzbl _0e519c_data(%ebx),%ebp
		mov    %esi,%edx
		imul   %ebp,%edx
		mov    _0cf2ae_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		jmp    _078513_jump

	_0783d1_jump:
		cmp    $0x000001,%al
		je     _0783d9_jump
		cmp    $0x000004,%al
		jne    _07844f_jump

	_0783d9_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %edx,%edx
		mov    _0e51a8_data(%ebx),%dx
		movzbl _0e519d_data(%ebx),%esi
		add    %esi,%edx
		xor    %esi,%esi
		mov    %di,%si
		mov    %edx,%eax
		mov    %esi,%ebp
		sar    $0x00001f,%edx
		shl    $0x000004,%ebp
		idiv   %ebp
		mov    %dx,_0e51a8_data(%ebx)
		cmpb   $0x000001,_0e5198_data(%ebx)
		jne    _078425_jump
		xor    %edx,%edx
		mov    _0e51a8_data(%ebx),%dx
		sar    $0x000004,%edx
		jmp    _078513_jump

	_078425_jump:
		mov    %esi,%eax
		movzbl _0e519c_data(%ebx),%ebp
		imul   %ebp,%eax
		mov    _0cf2ae_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		jmp    _0784e0_jump

	_07844f_jump:
		cmp    $0x000002,%al
		je     _07845b_jump
		cmp    $0x000005,%al
		jne    _07851a_jump

	_07845b_jump:
		xor    %edx,%edx
		mov    %cx,%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		movzbl _0e519d_data(%edx),%esi
		mov    _0e51a8_data(%edx),%bx
		cmp    %ebx,%esi
		jle    _078484_jump
		mov    0x000004(%esp),%eax
		add    %eax,%ebx
		mov    %bx,_0e51a8_data(%edx)

	_078484_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %dh,%dh
		mov    _0e519d_data(%ebx),%dl
		mov    _0e51a8_data(%ebx),%si
		sub    %edx,%esi
		mov    _0e5198_data(%ebx),%ah
		mov    %si,_0e51a8_data(%ebx)
		cmp    $0x000002,%ah
		jne    _0784b9_jump
		xor    %edx,%edx
		mov    %si,%dx
		sar    $0x000004,%edx
		jmp    _078513_jump

	_0784b9_jump:
		movzwl %di,%ebp
		movzbl _0e519c_data(%ebx),%esi
		mov    %ebp,%edx
		imul   %esi,%edx
		mov    _0cf2ae_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp

	_0784e0_jump:
		mov    %dx,_0e519a_data(%ebx)
		xor    %edx,%edx
		mov    _0e51a8_data(%ebx),%dx
		mov    %edx,%esi
		xor    %edx,%edx
		sar    $0x000004,%esi
		mov    _0e519a_data(%ebx),%dx
		add    %esi,%edx
		mov    %dx,_0e519a_data(%ebx)
		mov    _0e519a_data(%ebx),%ax
		xor    %edx,%edx
		div    %di

	_078513_jump:
		mov    %dx,_0e519a_data(%ebx)

	_07851a_jump:
		mov    _0e6e5a_data,%si
		inc    %ecx
		cmp    %si,%cx
		jb     _07836b_jump

	_07852b_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_078534_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %ebx,(%esp)
		mov    %ecx,%edi
		mov    (%esp),%ebp
		mov    %dx,_0e6e5a_data
		xor    %ebx,%ebx
		jmp    _0785a6_jump

	_07854f_jump:
		imul   $0x000018,%edx,%eax
		movw   $0x000001,_0e5194_data(%eax)
		movb   $0x000002,_0e519c_data(%eax)
		xor    %ch,%ch
		mov    %ch,_0e519d_data(%eax)
		xor    %cl,%cl
		mov    %ch,_0e5198_data(%eax)
		mov    %cx,_0e519a_data(%eax)
		mov    %cx,_0e51a8_data(%eax)
		xor    %ecx,%ecx
		mov    %si,%cx
		imul   %edx,%ecx
		imul   $0x000140,%edx,%edx
		mov    %bx,_0e5196_data(%eax)
		add    %ebp,%ecx
		mov    %ecx,_0e51a0_data(%eax)
		add    %edi,%edx
		inc    %ebx
		mov    %edx,_0e51a4_data(%eax)

	_0785a6_jump:
		xor    %eax,%eax
		movswl %bx,%edx
		mov    _0e6e5a_data,%ax
		cmp    %eax,%edx
		jl     _07854f_jump
		xor    %esi,%esi
		mov    %si,_0e6e58_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0785c8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,(%esp)
		mov    %edx,0x000004(%esp)
		mov    %edx,%eax
		mov    _0cf2ae_data,%edx
		sar    $0x000010,%edx
		sub    $0x0000c9,%eax
		sar    $0x000002,%edx
		cmp    %ax,%dx
		jle    _0785f1_jump
		mov    %eax,%edx

	_0785f1_jump:
		call   _079c58_func
		sub    _0cf2b0_data,%ax
		add    %edx,%eax
		sub    $0x000014,%eax
		mov    %ax,0x000008(%esp)
		cmpb   $0x000000,_0cf453_data
		jne    _078616_jump
		incb   _0bd8f4_data

	_078616_jump:
		cmpb   $0x000010,_0bd8f4_data
		jne    _078627_jump
		xor    %bl,%bl
		mov    %bl,_0bd8f4_data

	_078627_jump:
		mov    0x000008(%esp),%ecx
		mov    _0bd8f4_data,%al
		mov    $0x00005a,%ebx
		mov    %al,0x00000c(%esp)
		jmp    _0786a8_jump

	_07863b_jump:
		dec    %ebx
		cmp    $0x000010,%bx
		jge    _078647_jump
		mov    $0x000010,%ebx

	_078647_jump:
		test   %cx,%cx
		jle    _078693_jump
		xor    %edx,%edx
		mov    0x00000c(%esp),%dl
		mov    _0bd8e4_data(%edx),%dl
		and    $_0000ff_case,%edx
		shl    $0x000004,%edx
		movswl %bx,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %cx,%edi
		imul   $0x000018,%edi,%edi
		xor    %esi,%esi
		xor    %edx,%edx
		mov    (%esp),%si
		mov    _0e519a_data(%edi),%dx
		cwtl   
		add    %esi,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %dx,_0e519a_data(%edi)

	_078693_jump:
		mov    0x00000c(%esp),%al
		inc    %al
		mov    %al,0x00000c(%esp)
		cmp    $0x000010,%al
		jne    _0786a7_jump
		xor    %dl,%dl
		mov    %dl,0x00000c(%esp)

	_0786a7_jump:
		inc    %ecx

	_0786a8_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		movswl %cx,%eax
		add    $0x00005a,%edx
		cmp    %edx,%eax
		jge    _0786c8_jump
		xor    %edx,%edx
		mov    0x000004(%esp),%dx
		cmp    %edx,%eax
		jl     _07863b_jump

	_0786c8_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0786d0_func:
		push   %ebx
		push   %ecx
		mov    _0cc7b0_data(%edx),%bl
		mov    _0cc7b0_data(%eax),%cl
		mov    %bl,_0cc7b0_data(%eax)
		mov    %cl,_0cc7b0_data(%edx)
		pop    %ecx
		pop    %ebx
		ret    



_0786f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000001,%edx
		mov    _0cc7a2_data,%esi
		xor    %ebx,%ebx
		xor    %ah,%ah
		mov    %dx,_0cf2ec_data
		mov    %ah,_0cf487_data
		sar    $0x000010,%esi
		mov    _0cc7a0_data,%eax
		xor    %edx,%edx
		test   %esi,%esi
		jle    _07876d_jump

	_07871f_jump:
		mov    0x000060(%eax),%cx
		cmp    $0x0000bc,%cx
		jne    _078736_jump
		inc    %ebx
		mov    0x000034(%eax),%cl
		mov    %cl,_0cc7af_data(%ebx)
		jmp    _078763_jump

	_078736_jump:
		cmp    $0x0000f8,%cx
		jne    _078746_jump
		mov    %dx,_0cf2d8_data
		jmp    _078763_jump

	_078746_jump:
		cmp    $0x0000ea,%cx
		jne    _078763_jump
		xor    %ecx,%ecx
		mov    _0cf487_data,%cl
		mov    %dl,_0ce8d8_data(%ecx)
		inc    %cl
		mov    %cl,_0cf487_data

	_078763_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %esi,%edx
		jl     _07871f_jump

	_07876d_jump:
		mov    $0x000001,%edi

	_078772_jump:
		xor    %esi,%esi
		xor    %ebx,%ebx

	_078776_jump:
		xor    %eax,%eax
		mov    _0cc7b1_data(%ebx),%al
		imul   $0x000084,%eax,%edx
		xor    %ecx,%ecx
		mov    _0cc7b0_data(%ebx),%cl
		imul   $0x000084,%ecx,%ecx
		mov    _0cc7a0_data,%eax
		add    %eax,%edx
		mov    0x000028(%ecx,%eax,1),%eax
		cmp    0x000028(%edx),%eax
		jle    _0787ae_jump
		lea    0x000001(%ebx),%edx
		mov    %ebx,%eax
		mov    %edi,%esi
		call   _0786d0_func

	_0787ae_jump:
		inc    %ebx
		cmp    $0x000007,%ebx
		jl     _078776_jump
		test   %esi,%esi
		jne    _078772_jump
		cmpb   $0x000000,_0cf425_data
		jne    _0787ca_jump
		cmpb   $0x000000,_0ca8c4_data
		je     _0787d3_jump

	_0787ca_jump:
		movb   $0x000008,_0cf480_data
		jmp    _0787f5_jump

	_0787d3_jump:
		mov    $0x0000b1,%eax
		call   _06b8d0_func
		movswl %ax,%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		shl    $0x000003,%edx
		mov    %dl,_0cf480_data

	_0787f5_jump:
		xor    %eax,%eax
		mov    _0cf480_data,%al
		mov    _0924dc_data(%eax),%al
		and    $_0000ff_case,%eax
		mov    _0cc7b0_data(%eax),%al
		mov    $0x000020,%esi
		mov    $0x000138,%edi
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ax,_0cf1fa_data
		mov    %ah,_0cf47d_data
		mov    %si,_0ce03a_data
		mov    %di,_0cf266_data
		mov    %di,_0cf278_data
		mov    %edx,_0e6e60_data
		xor    %eax,%eax
		jmp    _0788a0_jump

	_078846_jump:
		xor    %edx,%edx
		mov    _0ce8d8_data(%eax),%dl
		imul   $0x000084,%edx,%ebx
		mov    _0ce03a_data,%cx
		shl    $0x000004,%ecx
		mov    _0cc7a0_data,%edx
		sub    $0x00003c,%ecx
		mov    %cx,0x00003e(%edx,%ebx,1)
		xor    %ebx,%ebx
		mov    _0ce8d8_data(%eax),%bl
		imul   $0x000084,%ebx,%ebx
		mov    0x00003c(%edx,%ebx,1),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,0x00002c(%edx,%ebx,1)
		xor    %ebx,%ebx
		mov    _0ce8d8_data(%eax),%bl
		imul   $0x000084,%ebx,%ebx
		mov    0x00003e(%edx,%ebx,1),%dx
		inc    %eax
		mov    %dx,_0e6e64_data

	_0788a0_jump:
		xor    %edx,%edx
		mov    _0cf487_data,%dl
		cmp    %edx,%eax
		jl     _078846_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0788b4_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %ax,(%esp)
		mov    %edx,%esi
		mov    _0cc7a0_data,%ebx
		mov    _0cc7a4_data,%cx
		xor    %edx,%edx
		xor    %eax,%eax

	_0788d1_jump:
		cmpw   $0x0000aa,0x000060(%ebx)
		jne    _0788e4_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _0788e4_jump
		mov    $0x000001,%edx

	_0788e4_jump:
		add    $0x000084,%ebx
		inc    %eax
		test   %dx,%dx
		jne    _0788f5_jump
		cmp    %cx,%ax
		jl     _0788d1_jump

	_0788f5_jump:
		sub    $0x000084,%ebx
		test   %dx,%dx
		je     _078955_jump
		orb    $0x000004,0x000081(%ebx)
		mov    %ebx,%eax
		movl   $0x000001,0x000024(%ebx)
		call   _01f3d4_func
		mov    -0x000002(%esp),%eax
		mov    0x000081(%ebx),%dl
		movw   $0x000000,0x000040(%ebx)
		and    $0x0000bf,%dl
		sar    $0x000010,%eax
		mov    %dl,0x000081(%ebx)
		mov    %eax,0x000028(%ebx)
		movswl %si,%eax
		mov    $0x000003,%edx
		mov    %eax,0x00002c(%ebx)
		mov    %ebx,%eax
		movw   $0x000000,0x000042(%ebx)
		call   _01d43c_func
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _01d434_func

	_078955_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07895c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%ecx
		call   _07ae8c_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _0789a0_jump
		movswl %di,%eax
		add    $0x000040,%eax
		mov    %eax,0x000028(%edx)
		movswl %cx,%eax
		add    $0x000040,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f3d4_func
		movb   $0x000001,0x00007e(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000050(%edx)
		call   _01dc5c_func

	_0789a0_jump:
		mov    %ecx,%eax
		add    $0x000020,%eax
		movswl %ax,%edx
		mov    %edi,%eax
		add    $0x00008c,%eax
		cwtl   
		call   _07b640_func
		mov    $0x0000aa,%eax
		xor    %ebx,%ebx
		call   _01d0f0_func
		lea    0x000528(%eax),%edx

	_0789c9_jump:
		cmpl   $0x000000,0x000024(%edx)
		jne    _0789d6_jump
		mov    %edx,%eax
		call   _01f3d4_func

	_0789d6_jump:
		mov    0x000081(%edx),%ah
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		movswl %di,%eax
		movb   $0x000003,0x00006d(%edx)
		add    $0x000008,%eax
		mov    %eax,0x000028(%edx)
		movswl %cx,%eax
		mov    %eax,0x00002c(%edx)
		movswl %bx,%eax
		movb   $0x000002,0x00006c(%edx)
		mov    _0bd8f8_data(,%eax,2),%si
		mov    %si,0x000040(%edx)
		add    $0x000084,%edx
		mov    _0bd908_data(,%eax,2),%ax
		movb   $0x000002,-0x000019(%edx)
		inc    %ebx
		mov    %ax,-0x000042(%edx)
		cmp    $0x000008,%bx
		jl     _0789c9_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_078a34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpw   $0x000000,_0cf2e6_data
		je     _078bc5_jump
		mov    $0x000003,%ebx
		mov    _0cf1f8_data,%edx
		mov    _0cc7a0_data,%ecx
		sar    $0x000010,%edx
		mov    _0cf2e6_data,%si
		mov    %edx,%eax
		mov    _0cf2e2_data,%di
		shl    $0x000005,%eax
		mov    %bx,_0cf2da_data
		add    %edx,%eax
		dec    %esi
		shl    $0x000002,%eax
		mov    _0cf2d4_data,%bx
		add    %eax,%ecx
		mov    _0cf2e0_data,%ax
		mov    %si,_0cf2e6_data
		sub    %eax,%ebx
		mov    _0cf2d6_data,%si
		movswl %bx,%eax
		sub    %edi,%esi
		test   %eax,%eax
		jge    _078aa6_jump
		neg    %eax

	_078aa6_jump:
		mov    %eax,%edx
		movswl %si,%eax
		mov    %edx,%edi
		test   %eax,%eax
		jge    _078ab3_jump
		neg    %eax

	_078ab3_jump:
		add    %eax,%edi
		cmp    $0x000008,%di
		jge    _078ad3_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d43c_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d434_func

	_078ad3_jump:
		test   %di,%di
		jle    _078b03_jump
		mov    _0cf2da_data,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %di,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    _0cf2da_data,%cl
		mov    %eax,%ebx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%esi

	_078b03_jump:
		cmpb   $0x000000,_0cf3f1_data
		jne    _078b1d_jump
		cmpw   $0x000032,_0cf2e6_data
		jge    _078b1d_jump
		mov    $0x000001,%eax
		jmp    _078b1f_jump

	_078b1d_jump:
		xor    %eax,%eax

	_078b1f_jump:
		test   %ax,%ax
		je     _078b74_jump
		mov    _0cf2da_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _078b41_jump
		mov    $0x000001,%eax
		jg     _078b41_jump
		neg    %eax

	_078b41_jump:
		mov    _0cf2dc_data,%edx
		mov    _0cf2dc_data,%bx
		sar    $0x000010,%edx
		add    %eax,%ebx
		movswl %si,%eax
		sub    %edx,%eax
		mov    %bx,_0cf2dc_data
		cmp    $0x000000,%eax
		je     _078b6d_jump
		mov    $0x000001,%eax
		jg     _078b6d_jump
		neg    %eax

	_078b6d_jump:
		add    %ax,_0cf2de_data

	_078b74_jump:
		mov    _0cf2dc_data,%ax
		mov    _0cf2e0_data,%si
		mov    _0cf2e2_data,%dx
		add    %eax,%esi
		mov    _0cf2de_data,%ax
		add    %eax,%edx
		mov    %dx,_0cf2e2_data
		mov    _0cf3f0_data,%dl
		mov    %si,_0cf2e0_data
		test   %dl,%dl
		jne    _078bc5_jump
		test   %di,%di
		je     _078bc5_jump
		mov    _0cf2e0_data,%edx
		mov    _0cf2de_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0788b4_func

	_078bc5_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078bcc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0cf2e6_data,%dx
		test   %dx,%dx
		je     _078de7_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    _0ce172_data,%ah
		mov    %bx,_0cf2e6_data
		test   %ah,%ah
		je     _078c3c_jump
		mov    $0x000003,%eax
		mov    _0ce0d0_data,%edx
		mov    %ax,_0cf2da_data
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		add    %ebx,%eax
		sub    $0x000068,%eax
		mov    %ax,_0cf2d4_data
		xor    %eax,%eax
		mov    0x00002c(%edx),%cx
		mov    0x000074(%edx),%al
		add    %ecx,%eax
		sub    $0x000078,%eax
		mov    _0cf3ef_data,%dh
		mov    %ax,_0cf2d6_data
		test   %dh,%dh
		jmp    _078c81_jump

	_078c3c_jump:
		mov    _0ce0ac_data,%al
		add    _0ce06c_data,%ax
		sub    $0x000078,%eax
		mov    %ax,_0cf2d4_data
		xor    %eax,%eax
		mov    _0ce070_data,%di
		mov    _0ce0ad_data,%al
		mov    $0x000003,%ecx
		add    %edi,%eax
		mov    _0cf3f5_data,%dl
		sub    $0x00008c,%eax
		mov    %cx,_0cf2da_data
		mov    %ax,_0cf2d6_data
		test   %dl,%dl

	_078c81_jump:
		sete   %al
		xor    %ah,%ah
		mov    %eax,(%esp)
		mov    _0cf2d4_data,%bx
		mov    _0cf2e0_data,%ax
		mov    _0cf2d6_data,%si
		sub    %eax,%ebx
		mov    _0cf2e2_data,%di
		movswl %bx,%eax
		sub    %edi,%esi
		test   %eax,%eax
		jge    _078cb1_jump
		neg    %eax

	_078cb1_jump:
		mov    %eax,%edx
		movswl %si,%eax
		mov    %edx,%edi
		test   %eax,%eax
		jge    _078cbe_jump
		neg    %eax

	_078cbe_jump:
		add    %eax,%edi
		test   %di,%di
		jle    _078cf0_jump
		mov    _0cf2da_data,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %di,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    _0cf2da_data,%cl
		mov    %eax,%ebx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%esi

	_078cf0_jump:
		cmpw   $0x000000,(%esp)
		je     _078d47_jump
		mov    _0cf2da_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _078d14_jump
		mov    $0x000001,%eax
		jg     _078d14_jump
		neg    %eax

	_078d14_jump:
		mov    _0cf2dc_data,%edx
		mov    _0cf2dc_data,%bx
		sar    $0x000010,%edx
		add    %eax,%ebx
		movswl %si,%eax
		sub    %edx,%eax
		mov    %bx,_0cf2dc_data
		cmp    $0x000000,%eax
		je     _078d40_jump
		mov    $0x000001,%eax
		jg     _078d40_jump
		neg    %eax

	_078d40_jump:
		add    %ax,_0cf2de_data

	_078d47_jump:
		mov    _0cf2dc_data,%ax
		mov    _0cf2e0_data,%si
		mov    _0cf2e2_data,%dx
		add    %eax,%esi
		mov    _0cf2de_data,%ax
		mov    %si,_0cf2e0_data
		add    %eax,%edx
		mov    _0cf2de_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0cf2e2_data
		cmp    $0xffffff6a,%eax
		jge    _078da8_jump
		mov    _0cf2dc_data,%bx
		mov    %esi,%ecx
		neg    %ebx
		add    %ebx,%ecx
		mov    %ecx,%esi
		mov    %cx,_0cf2e0_data
		add    %ebx,%esi
		mov    %bx,_0cf2dc_data
		mov    %si,_0cf2e0_data

	_078da8_jump:
		cmpb   $0x000000,_0cf3f0_data
		jne    _078dcc_jump
		test   %di,%di
		je     _078dcc_jump
		mov    _0cf2e0_data,%edx
		mov    _0cf2de_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0788b4_func

	_078dcc_jump:
		cmpw   $0x000000,_0cf2e6_data
		jne    _078de7_jump
		mov    $0xffff8300,%eax
		mov    %ax,_0cf2e0_data
		mov    %ax,_0cf2e2_data

	_078de7_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078df4_func:
		push   %ebx
		push   %ecx
		push   %edi
		mov    %eax,%ebx
		mov    %edx,%ecx
		incb   _0cf480_data
		xor    %eax,%eax
		mov    _0cf480_data,%al
		mov    _0924dc_data(%eax),%al
		and    $_0000ff_case,%eax
		xor    %edx,%edx
		mov    _0cc7b0_data(%eax),%dl
		mov    %dx,_0cf1fa_data
		xor    %edx,%edx
		mov    _0cc7b0_data(%eax),%dl
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		cmpw   $_0000ff_case,_0cf2e6_data
		je     _078e4f_jump
		movw   $0x00003c,_0cf2e6_data

	_078e4f_jump:
		sub    $0x000050,%ebx
		mov    $0x000004,%edx
		mov    %bx,_0cf2e0_data
		mov    %dx,_0cf2de_data
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000068(%eax),%dl
		add    %ebx,%edx
		sub    $0x000078,%edx
		mov    %dx,_0cf2d4_data
		xor    %edx,%edx
		mov    $0xfffffffc,%edi
		mov    0x000074(%eax),%dl
		mov    0x00002c(%eax),%ax
		sub    $0x00000a,%ecx
		add    %edx,%eax
		mov    %cx,_0cf2e2_data
		sub    $0x000078,%eax
		mov    _0cf2e0_data,%edx
		mov    %ax,_0cf2d6_data
		mov    _0cf2de_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %di,_0cf2dc_data
		call   _0788b4_func
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret    



_078ec0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,_0ce172_data
		je     _078ed6_jump
		mov    _0ce0d0_data,%eax
		jmp    _078edb_jump

	_078ed6_jump:
		mov    $_0ce044_data,%eax

	_078edb_jump:
		sub    $0x000050,%ebx
		sub    $0x00000a,%edx
		mov    %bx,_0cf2e0_data
		mov    %dx,_0cf2e2_data
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000068(%eax),%dl
		mov    $0x000078,%ecx
		add    %ebx,%edx
		sub    %ecx,%edx
		mov    $0xfffffffc,%esi
		mov    %dx,_0cf2d4_data
		xor    %edx,%edx
		mov    $0x000002,%edi
		mov    0x000074(%eax),%dl
		mov    0x00002c(%eax),%ax
		mov    %cx,_0cf2e6_data
		add    %edx,%eax
		mov    %si,_0cf2dc_data
		sub    %ecx,%eax
		mov    _0cf2e0_data,%edx
		mov    %ax,_0cf2d6_data
		mov    _0cf2de_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %di,_0cf2de_data
		call   _0788b4_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_078f58_func:
		push   %ebx
		push   %edx
		mov    _0cf2d6_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc7a0_data,%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		orb    $0x000004,0x000081(%edx)
		mov    0x000028(%eax),%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%eax),%eax
		movw   $0x00ff80,0x000040(%edx)
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000042(%edx)
		call   _01dc5c_func
		mov    %edx,%eax
		call   _01f3d4_func
		pop    %edx
		pop    %ebx
		ret    



_078fa8_func:
		push   %edx
		mov    $0x000028,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0ce09a_data
		pop    %edx
		ret    



_078fbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cf278_data,%si
		mov    _0e6e64_data,%di
		mov    _0e6e60_data,%ebp
		cmpw   $0x000003,_0cf254_data
		je     _07900b_jump
		cmpb   $0x000002,_0ce0b1_data
		jne    _078ff2_jump
		cmpb   $0x000009,_0ce0b0_data
		je     _07900b_jump

	_078ff2_jump:
		cmpb   $0x000003,_0ce0b1_data
		jne    _07901b_jump
		mov    _0ce0b0_data,%bl
		cmp    $0x000017,%bl
		je     _07900b_jump
		cmp    $0x000007,%bl
		jne    _07901b_jump

	_07900b_jump:
		xor    %cl,%cl
		xor    %edx,%edx
		mov    %cl,_0cf47d_data
		mov    %edx,_0ce8ec_data

	_07901b_jump:
		test   %ebp,%ebp
		je     _07903d_jump
		mov    _0cf3f1_data,%ch
		dec    %ebp
		cmp    $0x000002,%ch
		jb     _079035_jump
		addw   $0x000002,_0cf2ae_data
		jmp    _07903d_jump

	_079035_jump:
		subw   $0x000002,_0cf2ae_data

	_07903d_jump:
		cmpl   $0x000060,_0ce8ec_data
		jge    _07904f_jump
		cmpb   $0x000001,_0cf47d_data
		je     _07906c_jump

	_07904f_jump:
		cmpl   $0x0000c4,_0ce8ec_data
		jge    _0791b7_jump
		cmpb   $0x000002,_0cf47d_data
		jne    _0791b7_jump

	_07906c_jump:
		cmpb   $0x000001,_0cf47d_data
		jne    _07907e_jump
		cmpb   $0x000000,_0cf3ef_data
		je     _079098_jump

	_07907e_jump:
		cmpb   $0x000002,_0cf47d_data
		jne    _0791b7_jump
		cmpb   $0x000000,_0cf3f1_data
		jne    _0791b7_jump

	_079098_jump:
		cmpb   $0x000002,_0cf3f1_data
		jb     _0790ab_jump
		addw   $0x000003,_0cf2ae_data
		jmp    _0790b3_jump

	_0790ab_jump:
		subw   $0x000003,_0cf2ae_data

	_0790b3_jump:
		mov    _0cf266_data,%ax
		mov    _0cf25c_data,%bx
		dec    %esi
		cmp    %bx,%ax
		jle    _0790d0_jump
		mov    %eax,%ecx
		dec    %ecx
		mov    %cx,_0cf266_data

	_0790d0_jump:
		incl   _0ce8ec_data
		testb  $0x00000f,_0ce8ec_data
		jne    _0790e6_jump
		decw   _0ce03a_data

	_0790e6_jump:
		xor    %eax,%eax
		jmp    _0791a6_jump

	_0790ed_jump:
		movswl %ax,%ebx
		xor    %edx,%edx
		mov    _0ce8d8_data(%ebx),%dl
		imul   $0x000084,%edx,%ecx
		mov    _0cc7a0_data,%edx
		decl   0x00002c(%ecx,%edx,1)
		xor    %ecx,%ecx
		mov    _0ce8d8_data(%ebx),%cl
		imul   $0x000084,%ecx,%ecx
		decw   0x00003e(%ecx,%edx,1)
		cmpb   $0x000001,_0cf47d_data
		jne    _079156_jump
		cmpb   $0x000000,_0cf3f7_data
		jne    _079156_jump
		xor    %ecx,%ecx
		mov    _0ce8d8_data(%ebx),%cl
		imul   $0x000084,%ecx,%ecx
		decl   0x00002c(%ecx,%edx,1)
		mov    _0ce8d8_data(%ebx),%bl
		and    $_0000ff_case,%ebx
		imul   $0x000084,%ebx,%ebx
		decw   0x00003e(%edx,%ebx,1)

	_079156_jump:
		movswl %ax,%ebx
		mov    _0ce8d8_data(%ebx),%bl
		and    $_0000ff_case,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0cc7a0_data,%edx
		add    %edx,%ebx
		movswl %si,%edx
		mov    0x00002c(%ebx),%ecx
		add    $0x000078,%edx
		cmp    %ecx,%edx
		jle    _079183_jump
		mov    %edx,0x00002c(%ebx)

	_079183_jump:
		movswl %ax,%edx
		mov    _0ce8d8_data(%edx),%dl
		and    $_0000ff_case,%edx
		imul   $0x000084,%edx,%ebx
		mov    _0cc7a0_data,%edx
		mov    0x00002c(%edx,%ebx,1),%dx
		inc    %eax
		mov    %edx,%edi

	_0791a6_jump:
		xor    %edx,%edx
		mov    _0cf487_data,%dl
		cmp    %dx,%ax
		jl     _0790ed_jump

	_0791b7_jump:
		cmpl   $0x000060,_0ce8ec_data
		jne    _0791de_jump
		cmpb   $0x000001,_0cf47d_data
		jne    _0791de_jump
		mov    $0x00003c,%ebp
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %edx,_0ce8ec_data
		mov    %ah,_0cf47d_data

	_0791de_jump:
		cmpl   $0x0000c4,_0ce8ec_data
		jne    _079208_jump
		cmpb   $0x000002,_0cf47d_data
		jne    _079208_jump
		mov    $0x00003c,%ebp
		xor    %ecx,%ecx
		xor    %dh,%dh
		mov    %ecx,_0ce8ec_data
		mov    %dh,_0cf47d_data

	_079208_jump:
		mov    %ebp,_0e6e60_data
		mov    %di,_0e6e64_data
		mov    %si,_0cf278_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079224_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0cf1f8_data,%ebx
		movzbw 0x00006d(%eax),%si
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x00006c(%eax),%dl
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc7a0_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		test   %si,%si
		jne    _0793a9_jump
		cmp    $0x000002,%dx
		jb     _0793a9_jump
		cmp    $0x000003,%dx
		jbe    _07935b_jump
		cmp    $0x000004,%dx
		jne    _0793a9_jump
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _0793a9_jump
		cmpw   $0x000000,_0cf242_data
		jne    _0793a9_jump
		mov    $0x000001,%esi
		mov    _0cf204_data,%di
		mov    0x00006c(%ebx),%dl
		add    %esi,%edi
		mov    %si,_0cf242_data
		mov    %di,_0cf204_data
		cmp    $0x000007,%dl
		jne    _0792f6_jump
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d43c_func
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d434_func
		mov    _0cf480_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    %dh,%al
		mov    %dh,_0cf480_data
		mov    _0924dc_data(%eax),%al
		and    $_0000ff_case,%eax
		mov    _0cc7b0_data(%eax),%al
		xor    %ah,%ah
		mov    %ax,_0cf1fa_data

	_0792f6_jump:
		cmpw   $0x000004,_0cf204_data
		jne    _079311_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _060460_func

	_079311_jump:
		cmpw   $0x000005,_0cf204_data
		jne    _0793a9_jump
		mov    $0x000005,%edx
		mov    _0cf20e_data,%di
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %bx,_0cf204_data
		mov    %bx,_0cf200_data
		inc    %edi
		mov    $0x000001,%ebx
		mov    %di,_0cf20e_data
		call   _060460_func
		decb   _0cf480_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07935b_jump:
		cmpw   $0x000004,_0cf2e4_data
		jne    _079383_jump
		mov    $0x000008,%edx
		mov    %ecx,%eax
		mov    $0x000008,%ebx
		call   _01d434_func
		mov    %bx,_0cf2e4_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079383_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d434_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _060460_func
		movw   $0x000004,_0cf2e4_data

	_0793a9_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0793b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %dx,%dx
		jne    _079475_jump
		cmp    $0x000004,%ax
		jb     _079475_jump
		ja     _079475_jump
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _079475_jump
		cmpw   $0x000000,_0cf242_data
		jne    _079475_jump
		mov    $0x000001,%ebx
		mov    _0cf204_data,%si
		mov    _0ce0b1_data,%dl
		add    %ebx,%esi
		mov    %bx,_0cf242_data
		mov    %si,_0cf204_data
		cmp    $0x000005,%dl
		jne    _079436_jump
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _01d43c_func
		mov    $0x000002,%edx
		mov    $_0ce044_data,%eax
		call   _01d434_func

	_079436_jump:
		cmpw   $0x000003,_0cf204_data
		jne    _079475_jump
		mov    $0x000001,%ebx
		mov    _0cf20e_data,%dx
		xor    %eax,%eax
		inc    %edx
		mov    %ax,_0cf2e6_data
		mov    %dx,_0cf20e_data
		mov    %ecx,%eax
		mov    $0x000006,%edx
		call   _060460_func
		xor    %ebx,%ebx
		movb   $0x000000,0x00006b(%ecx)
		mov    %bx,_0cf204_data

	_079475_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07947c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006d(%eax),%bl
		mov    0x00006c(%eax),%dl
		call   _078a34_func
		test   %bx,%bx
		jne    _079591_jump
		cmp    $0x000004,%dx
		jb     _0794b1_jump
		jbe    _0794bd_jump
		cmp    $0x000007,%dx
		je     _079526_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0794b1_jump:
		cmp    $0x000002,%dx
		jb     _0795b0_jump
		jmp    _079515_jump

	_0794bd_jump:
		mov    _0cf204_data,%dx
		mov    %edx,%eax
		inc    %eax
		test   %dx,%dx
		jbe    _0794d7_jump
		cmp    $0x000001,%dx
		je     _0794f4_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0794d7_jump:
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _0795b0_jump
		mov    $0x000001,%bl
		mov    %ax,_0cf204_data
		mov    %bl,_0cf47d_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0794f4_jump:
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _0795b0_jump
		mov    $0x000001,%ebx
		mov    %ax,_0cf204_data
		mov    %bx,_0cf242_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079515_jump:
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d434_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079526_jump:
		cmpb   $0x000009,0x00006b(%ecx)
		jne    _0795b0_jump
		cmpw   $0x000000,_0cf2e6_data
		jne    _0795b0_jump
		mov    0x00002a(%ecx),%edx
		mov    0x000026(%ecx),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _078df4_func
		mov    _0cf204_data,%si
		inc    %esi
		mov    %si,_0cf204_data
		cmp    $0x000005,%si
		jne    _0795b0_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _060460_func
		mov    _0cf20e_data,%dx
		xor    %eax,%eax
		inc    %edx
		mov    %ax,_0cf204_data
		mov    %dx,_0cf20e_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079591_jump:
		cmp    $0x000001,%bx
		jne    _0795b0_jump
		cmp    $0x00000f,%dx
		jne    _0795b0_jump
		mov    _0cf200_data,%dx
		cmp    0x000048(%ecx),%dx
		jne    _0795b0_jump
		movw   $0x000000,0x000048(%ecx)

	_0795b0_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0795b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006d(%eax),%bl
		mov    0x00006c(%eax),%dl
		call   _078a34_func
		test   %bx,%bx
		jne    _079663_jump
		cmp    $0x000002,%dx
		jb     _079663_jump
		mov    _0cf204_data,%ax
		inc    %eax
		cmp    $0x000002,%dx
		jbe    _079618_jump
		cmp    $0x000004,%dx
		jne    _079663_jump
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _079663_jump
		cmpw   $0x000001,_0cf204_data
		jne    _079663_jump
		mov    $0x000002,%dh
		mov    %ax,_0cf204_data
		mov    %dh,_0cf47d_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079618_jump:
		mov    _0cf204_data,%bx
		test   %bx,%bx
		jne    _07963f_jump
		mov    $0x000001,%ebx
		mov    $0x00000b,%edx
		mov    %ax,_0cf204_data
		mov    %ecx,%eax
		call   _060460_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07963f_jump:
		cmp    $0x000002,%bx
		jne    _079663_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d43c_func
		mov    $0x00000f,%edx
		mov    %ecx,%eax
		call   _01d434_func
		movw   $0x000003,0x000040(%ecx)

	_079663_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079668_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _079732_jump
		mov    0x00006c(%ecx),%dl
		cmp    $0x000008,%dl
		jne    _0796b1_jump
		cmpb   $0x000041,0x00006b(%ecx)
		jne    _079732_jump
		mov    %ecx,%eax
		mov    $0x000009,%edx
		call   _078f58_func
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d434_func
		mov    $0x000009,%edx
		mov    %ecx,%eax
		call   _060460_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0796b1_jump:
		cmp    $0x000009,%dl
		jne    _0796f0_jump
		mov    _0cf2d6_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		addw   $0x000002,0x000040(%edx,%eax,4)
		mov    0x00003e(%edx,%eax,4),%eax
		sar    $0x000010,%eax
		neg    %eax
		cmp    $0xffffff92,%eax
		jne    _079732_jump
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d434_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0796f0_jump:
		cmp    $0x00000a,%dl
		jne    _079732_jump
		cmpb   $0x000007,0x00006b(%ecx)
		jne    _079732_jump
		mov    _0cf2d6_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		mov    _0cc7a0_data,%edx
		add    %ecx,%eax
		movl   $0xffff8300,0x000028(%edx,%eax,4)
		mov    0x000081(%edx,%eax,4),%cl
		movl   $0xffff8300,0x00002c(%edx,%eax,4)
		and    $0x0000fb,%cl
		mov    %cl,0x000081(%edx,%eax,4)

	_079732_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079738_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    $0x000010,%ebx
		mov    $0xffffffff,%edx
		mov    _0cf2e2_data,%ax
		mov    _0cf2e0_data,%di
		add    $0x000078,%eax
		add    $0x000078,%edi
		mov    %ax,(%esp)
		mov    0x00006d(%esi),%ah
		mov    %ebx,%ecx
		test   %ah,%ah
		jne    _079774_jump
		cmpb   $0x00000b,0x00006c(%esi)
		je     _07977b_jump

	_079774_jump:
		mov    $0x000001,%eax
		jmp    _07977d_jump

	_07977b_jump:
		xor    %eax,%eax

	_07977d_jump:
		test   %eax,%eax
		je     _0797b8_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _07978d_jump
		cmpb   $0x00000c,0x00006c(%esi)
		je     _079794_jump

	_07978d_jump:
		mov    $0x000001,%eax
		jmp    _079796_jump

	_079794_jump:
		xor    %eax,%eax

	_079796_jump:
		test   %eax,%eax
		je     _0797b8_jump
		push   %esi
		movswl %cx,%eax
		movswl %di,%edx
		push   %eax
		movswl %bx,%ecx
		mov    0x000006(%esp),%ebx
		mov    $0x000096,%eax
		sar    $0x000010,%ebx
		call   _02c7a0_func
		mov    %eax,%edx

	_0797b8_jump:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _07983a_jump
		mov    $0x00000b,%edx
		mov    %esi,%eax
		call   _01d434_func
		mov    _0cf2e0_data,%edx
		mov    _0cf2de_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		call   _07895c_func
		mov    $0xffff8300,%edx
		mov    %cx,_0cf2e6_data
		mov    0x000076(%esi),%ah
		mov    %dx,_0cf2e0_data
		dec    %ah
		mov    %dx,_0cf2e2_data
		mov    %ah,0x000076(%esi)
		cmp    $0x000001,%ah
		jne    _079820_jump
		mov    $0x000001,%ebx
		mov    $0x00000d,%edx
		mov    %esi,%eax
		call   _060460_func

	_079820_jump:
		cmpb   $0x000000,0x000076(%esi)
		jne    _07983a_jump
		mov    $0x00000c,%edx
		mov    %esi,%eax
		mov    $0x000001,%bl
		call   _01d434_func
		mov    %bl,_0cf467_data

	_07983a_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079844_func:
		push   %ecx
		orb    $0x000040,_0cf228_data
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07986f_jump
		cmpb   $0x00000c,0x00006c(%eax)
		jne    _07986f_jump
		cmpb   $0x00007f,0x00006b(%eax)
		jb     _07986f_jump
		mov    $0x000001,%cl
		movb   $0x000081,0x00006b(%eax)
		mov    %cl,_0cf465_data
		call   _061390_func

	_07986f_jump:
		pop    %ecx
		ret    

_079874_switch:
		.long   _079962_case
		.long   _079972_case
		.long   _079982_case
		.long   _079992_case




_079884_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		movzbw 0x00006c(%ecx),%si
		mov    %eax,(%esp)
		test   %ax,%ax
		jne    _0798e8_jump
		cmp    $0x000001,%si
		jne    _0798e8_jump
		cmpb   $0x000000,0x00006b(%ecx)
		jne    _0798bc_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000ac,%eax
		sar    $0x000010,%edx
		call   _071b3c_func

	_0798bc_jump:
		cmpb   $0x000032,0x00006b(%ecx)
		jne    _0798d2_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000ad,%eax
		sar    $0x000010,%edx
		call   _071b3c_func

	_0798d2_jump:
		cmpb   $0x000064,0x00006b(%ecx)
		jne    _0798e8_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000b1,%eax
		sar    $0x000010,%edx
		call   _071b3c_func

	_0798e8_jump:
		mov    _0cf270_data,%bx
		cmp    $0x00000a,%bx
		jne    _0799a2_jump
		mov    %ecx,%eax
		call   _02f788_func
		cmpw   $0x000000,_0cf2ec_data
		jne    _07990f_jump
		call   _0786f0_func

	_07990f_jump:
		mov    %ecx,%eax
		call   _079668_func
		call   _078fbc_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		mov    _0ce06c_data,%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jge    _079945_jump
		cmpw   $0x000003,_0cf254_data
		je     _079945_jump
		mov    $0x000001,%eax
		mov    %ecx,%edx
		call   _02dd0c_func

	_079945_jump:
		mov    _0cf20e_data,%ax
		cmp    $0x000003,%ax
		ja     _079af2_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_079874_switch(,%eax,4)

	_079962_case:
		mov    %ecx,%eax
		call   _079224_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079972_case:
		mov    %ecx,%eax
		call   _0793b0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079982_case:
		mov    %ecx,%eax
		call   _07947c_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079992_case:
		mov    %ecx,%eax
		call   _0795b8_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0799a2_jump:
		cmp    $0x00000b,%bx
		jne    _079af2_jump
		cmpw   $0x000000,_0cf2ec_data
		jne    _079a35_jump
		mov    $0x000001,%bl
		mov    _0cc7a0_data,%edx
		mov    0x000077(%ecx),%al
		mov    %bl,_0cf45a_data
		mov    %al,0x000076(%ecx)
		mov    _0cc7a4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _0799f8_jump

	_0799dc_jump:
		cmpw   $0x0000f8,0x000060(%edx)
		jne    _0799ec_jump
		mov    %ax,_0cf2d8_data
		jmp    _0799f8_jump

	_0799ec_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _0799dc_jump

	_0799f8_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _060460_func
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d43c_func
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d434_func
		mov    $0x000001,%eax
		mov    $0x000004,%edx
		mov    %ax,_0cf2ec_data
		mov    %dx,_0cf20e_data

	_079a35_jump:
		mov    %ecx,%eax
		call   _02f788_func
		call   _078bcc_func
		mov    %ecx,%eax
		call   _079668_func
		mov    %ecx,%eax
		call   _079738_func
		mov    %ecx,%eax
		mov    (%esp),%ebx
		call   _079844_func
		test   %bx,%bx
		jne    _079af2_jump
		cmp    $0x000002,%si
		jb     _079af2_jump
		cmp    $0x000003,%si
		jbe    _079ab2_jump
		cmp    $0x000007,%si
		jne    _079af2_jump
		cmpb   $0x000009,0x00006b(%ecx)
		jne    _079af2_jump
		cmpw   $0x000000,_0cf2e6_data
		jne    _079af2_jump
		mov    $_0000ff_case,%edi
		mov    0x00002a(%ecx),%edx
		mov    0x000026(%ecx),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %di,_0cf2e6_data
		call   _078ec0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079ab2_jump:
		cmpw   $0x000005,_0cf2e4_data
		jne    _079add_jump
		mov    $0x000008,%edx
		mov    %ecx,%eax
		mov    $0x000008,%ebx
		call   _01d434_func
		mov    %bx,_0cf2e4_data
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079add_jump:
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d434_func
		movw   $0x000005,_0cf2e4_data

	_079af2_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079afc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		xor    %eax,%eax
		mov    _0cf20e_data,%dx
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%dx
		jae    _079b7e_jump
		test   %dx,%dx
		jne    _079b7e_jump
		test   %bx,%bx
		jne    _079b7e_jump
		test   %ax,%ax
		jbe    _079b37_jump
		cmp    $0x000002,%ax
		jb     _079b7e_jump
		cmp    $0x000003,%ax
		jbe    _079b61_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079b37_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d434_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _060460_func
		xor    %edx,%edx
		mov    %dx,_0cf204_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079b61_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d434_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _060460_func

	_079b7e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079b84_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		xor    %eax,%eax
		mov    _0cf20e_data,%dx
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%dx
		jb     _079ba8_jump
		jbe    _079c32_jump
		pop    %ecx
		pop    %ebx
		ret    

	_079ba8_jump:
		test   %dx,%dx
		jne    _079c52_jump
		test   %bx,%bx
		jne    _079c52_jump
		cmp    $0x000001,%ax
		jb     _079bcb_jump
		jbe    _079c05_jump
		cmp    $0x000003,%ax
		jbe    _079c12_jump
		pop    %ecx
		pop    %ebx
		ret    

	_079bcb_jump:
		test   %ax,%ax
		jne    _079c52_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d434_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _060460_func
		movb   $0x000000,0x000073(%ecx)
		xor    %ebx,%ebx
		movb   $0x000051,0x00006b(%ecx)
		mov    %bx,_0cf204_data
		pop    %ecx
		pop    %ebx
		ret    

	_079c05_jump:
		cmpb   $0x000051,0x00006b(%ecx)
		jae    _079c52_jump
		movb   $0x000051,0x00006b(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_079c12_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d434_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _060460_func
		pop    %ecx
		pop    %ebx
		ret    

	_079c32_jump:
		test   %bx,%bx
		jne    _079c52_jump
		addl   $0x000002,0x000028(%ecx)
		incw   _0cf200_data
		cmp    $0x000002,%ax
		jb     _079c52_jump
		cmp    $0x000003,%ax
		ja     _079c52_jump
		mov    %bx,0x000048(%ecx)

	_079c52_jump:
		pop    %ecx
		pop    %ebx
		ret    



_079c58_func:
		mov    _0e6e64_data,%ax
		ret    



_079c60_func:
		push   %edx
		mov    _0ce06c_data,%ax
		mov    %ax,_0cf29c_data
		mov    _0ce070_data,%ax
		mov    %ax,_0cf294_data
		mov    _0cf2ae_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0cf2a8_data
		mov    _0cf2b0_data,%ax
		mov    %dx,_0cf292_data
		mov    %ax,_0cf2ac_data
		pop    %edx
		ret    

_079ca0_switch:
		.long   _079ddb_case
		.long   _079e81_case
		.long   _079ef5_case
		.long   _079f57_case
		.long   _079f88_case
		.long   _079f9d_case

_079cb8_switch:
		.long   _079fd7_case
		.long   _07a1b3_case
		.long   _07a2e6_case
		.long   _07a3fc_case
		.long   _07a511_case
		.long   _07a5d1_case

_079cd0_switch:
		.long   _07a1d3_case
		.long   _07a5fa_case
		.long   _07a1f1_case
		.long   _07a5fa_case
		.long   _07a5fa_case
		.long   _07a22b_case
		.long   _07a5fa_case
		.long   _07a24c_case
		.long   _07a5fa_case
		.long   _07a28b_case
		.long   _07a5fa_case
		.long   _07a5fa_case
		.long   _07a163_case
		.long   _07a2ba_case
		.long   _07a2d0_case

_079d0c_switch:
		.long   _07a306_case
		.long   _07a5fa_case
		.long   _07a32f_case
		.long   _07a34d_case
		.long   _07a5fa_case
		.long   _07a5fa_case
		.long   _07a5fa_case
		.long   _07a387_case
		.long   _07a5fa_case
		.long   _07a3a8_case
		.long   _07a3d1_case
		.long   _07a3e6_case

_079d3c_switch:
		.long   _07a41c_case
		.long   _07a43d_case
		.long   _07a5fa_case
		.long   _07a5fa_case
		.long   _07a467_case
		.long   _07a5fa_case
		.long   _07a492_case
		.long   _07a5fa_case
		.long   _07a4b3_case
		.long   _07a4e5_case
		.long   _07a4fb_case

_079d68_switch:
		.long   _07a531_case
		.long   _07a5fa_case
		.long   _07a5fa_case
		.long   _07a5fa_case
		.long   _07a5fa_case
		.long   _07a5fa_case
		.long   _07a585_case
		.long   _07a5fa_case
		.long   _07a5fa_case
		.long   _07a5ae_case
		.long   _07a5be_case




_079d94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		mov    _0cf292_data,%cx
		xor    %edx,%edx
		test   %cx,%cx
		je     _079fb9_jump
		call   _079c60_func
		cmpw   $0x000005,0x000060(%ebx)
		je     _079fb9_jump
		mov    _0cf282_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _079fb9_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_079ca0_switch(,%eax,4)

	_079ddb_case:
		cmpw   $0x000002,_0cf270_data
		jne    _079df5_jump
		testb  $0x000001,_0cf220_data
		je     _079df5_jump
		incw   _0cf224_data

	_079df5_jump:
		cmpw   $0x000005,_0cf270_data
		jne    _079e0f_jump
		testb  $0x000001,_0cf228_data
		je     _079e0f_jump
		incw   _0cf224_data

	_079e0f_jump:
		cmpw   $0x000007,_0cf270_data
		jne    _079e2b_jump
		testb  $0x000002,_0cf220_data
		je     _079e2b_jump
		movw   $0x000008,_0cf270_data

	_079e2b_jump:
		cmpw   $0x00000d,_0cf270_data
		jne    _079e45_jump
		testb  $0x000002,_0cf228_data
		je     _079e45_jump
		incw   _0cf224_data

	_079e45_jump:
		cmpw   $0x00000f,_0cf270_data
		jne    _079e61_jump
		testb  $0x000002,_0cf228_data
		je     _079e61_jump
		movw   $0x000001,_0cf288_data

	_079e61_jump:
		cmpw   $0x000010,_0cf270_data
		jne    _079fb9_jump
		testb  $0x000080,_0cf220_data
		je     _079fb9_jump
		jmp    _079fb0_jump

	_079e81_case:
		cmpw   $0x000005,_0cf270_data
		jne    _079e9d_jump
		testb  $0x000001,_0cf229_data
		je     _079e9d_jump
		movw   $0x000001,_0cf288_data

	_079e9d_jump:
		cmpw   $0x000009,_0cf270_data
		jne    _079eb9_jump
		testb  $0x000004,_0cf228_data
		je     _079eb9_jump
		movw   $0x000001,_0cf288_data

	_079eb9_jump:
		cmpw   $0x00000a,_0cf270_data
		jne    _079ed5_jump
		testb  $0x000004,_0cf220_data
		je     _079ed5_jump
		movw   $0x00000b,_0cf270_data

	_079ed5_jump:
		cmpw   $0x00000e,_0cf270_data
		jne    _079fb9_jump
		testb  $0x000004,_0cf228_data
		je     _079fb9_jump
		jmp    _079fb0_jump

	_079ef5_case:
		mov    _0cf270_data,%di
		cmp    $0x000001,%di
		jne    _079f12_jump
		testb  $0x000008,_0cf228_data
		je     _079f12_jump
		mov    %di,_0cf288_data

	_079f12_jump:
		cmpw   $0x000009,_0cf270_data
		jne    _079f2e_jump
		testb  $0x000008,_0cf228_data
		je     _079f2e_jump
		movw   $0x000001,_0cf288_data

	_079f2e_jump:
		cmpw   $0x00000a,_0cf270_data
		jne    _079fb9_jump
		testb  $0x000001,_0cf221_data
		je     _079fb9_jump
		movw   $0x00000b,_0cf270_data
		jmp    _079fb9_jump

	_079f57_case:
		cmpw   $0x000003,_0cf270_data
		jne    _079f73_jump
		testb  $0x000010,_0cf228_data
		je     _079f73_jump
		movw   $0x000001,_0cf288_data

	_079f73_jump:
		cmpw   $0x00000a,_0cf270_data
		jne    _079fb9_jump
		testb  $0x000020,_0cf228_data
		je     _079fb9_jump
		jmp    _079fb0_jump

	_079f88_case:
		cmpw   $0x000009,_0cf270_data
		jne    _079fb9_jump
		testb  $0x000040,_0cf228_data
		je     _079fb9_jump
		jmp    _079fb0_jump

	_079f9d_case:
		cmpw   $0x000003,_0cf270_data
		jne    _079fb9_jump
		testb  $0x000080,_0cf228_data
		je     _079fb9_jump

	_079fb0_jump:
		movw   $0x000001,_0cf288_data

	_079fb9_jump:
		mov    _0cf282_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _07a5fa_case
		and    $0x00ffff,%eax
		jmp    *%cs:_079cb8_switch(,%eax,4)

	_079fd7_case:
		mov    _0cf270_data,%ax
		cmp    $0x00000c,%ax
		jb     _07a023_jump
		jbe    _07a142_jump
		cmp    $0x000013,%ax
		jb     _07a00e_jump
		jbe    _07a427_jump
		cmp    $0x000014,%ax
		jbe    _07a187_jump
		cmp    $0x000015,%ax
		je     _07a19d_jump
		jmp    _07a5fa_case

	_07a00e_jump:
		cmp    $0x000011,%ax
		jb     _07a5fa_case
		jbe    _07a163_case
		jmp    _07a171_jump

	_07a023_jump:
		cmp    $0x000004,%ax
		jb     _07a04a_jump
		jbe    _07a072_jump
		cmp    $0x000008,%ax
		jb     _07a5fa_case
		jbe    _07a0bf_jump
		cmp    $0x00000b,%ax
		je     _07a100_jump
		jmp    _07a5fa_case

	_07a04a_jump:
		cmp    $0x000002,%ax
		jne    _07a5fa_case
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07a5fa_case
		movw   $0x000015,_0cf224_data
		mov    $0x000001,%edx
		jmp    _07a5fa_case

	_07a072_jump:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07a08f_jump
		mov    $0x000014,%edi
		mov    $0x000001,%edx
		mov    %di,_0cf224_data
		jmp    _07a5fa_case

	_07a08f_jump:
		mov    $0x000001,%esi
		mov    _094d30_data,%ch
		mov    %si,_0cf288_data
		test   $0x000001,%ch
		jne    _07a5fa_case
		mov    %ch,%al
		or     $0x000004,%al
		mov    %al,_094d30_data
		orb    $0x000004,_094e84_data
		jmp    _07a5fa_case

	_07a0bf_jump:
		mov    $0x000001,%ebx
		mov    _094d44_data,%ah
		mov    %bx,_0cf288_data
		test   $0x000001,%ah
		jne    _07a0e1_jump
		mov    %ah,%bl
		or     $0x000004,%bl
		mov    %bl,_094d44_data

	_07a0e1_jump:
		mov    _094d6c_data,%bh
		test   $0x000001,%bh
		jne    _07a5fa_case
		mov    %bh,%cl
		or     $0x000004,%cl
		mov    %cl,_094d6c_data
		jmp    _07a5fa_case

	_07a100_jump:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07a11a_jump
		movw   $0x000012,_0cf224_data
		mov    $0x000001,%edx
		jmp    _07a5fa_case

	_07a11a_jump:
		mov    $0x000001,%eax
		mov    _094d58_data,%ch
		mov    %ax,_0cf288_data
		test   $0x000001,%ch
		jne    _07a5fa_case
		mov    %ch,%al
		or     $0x000004,%al
		mov    %al,_094d58_data
		jmp    _07a5fa_case

	_07a142_jump:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07a5fa_case
		mov    $0x000013,%esi
		mov    $0x000001,%edx
		mov    %si,_0cf224_data
		jmp    _07a5fa_case

	_07a163_case:
		movw   $0x000001,_0cf288_data
		jmp    _07a5fa_case

	_07a171_jump:
		mov    $0x00000b,%edi
		mov    $0x000001,%edx
		mov    %di,_0cf224_data
		jmp    _07a5fa_case

	_07a187_jump:
		mov    $0x000004,%ecx
		mov    $0x000001,%edx
		mov    %cx,_0cf224_data
		jmp    _07a5fa_case

	_07a19d_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %bx,_0cf224_data
		jmp    _07a5fa_case

	_07a1b3_case:
		mov    _0cf270_data,%ax
		sub    $0x000004,%eax
		cmp    $0x00000e,%ax
		ja     _07a5fa_case
		and    $0x00ffff,%eax
		jmp    *%cs:_079cd0_switch(,%eax,4)

	_07a1d3_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07a5fa_case
		movw   $0x000011,_0cf224_data
		mov    $0x000001,%edx
		jmp    _07a5fa_case

	_07a1f1_case:
		mov    $0x000001,%edi
		mov    _094d80_data,%bl
		mov    %di,_0cf288_data
		test   $0x000001,%bl
		jne    _07a5fa_case
		mov    %bl,%bh
		mov    _094e98_data,%cl
		or     $0x000004,%bh
		or     $0x000004,%cl
		mov    %bh,_094d80_data
		mov    %cl,_094e98_data
		jmp    _07a5fa_case

	_07a22b_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07a5fa_case
		mov    $0x000012,%esi
		mov    $0x000001,%edx
		mov    %si,_0cf224_data
		jmp    _07a5fa_case

	_07a24c_case:
		mov    $0x000001,%ebx
		mov    _094d94_data,%cl
		mov    %bx,_0cf288_data
		test   $0x000001,%cl
		jne    _07a26e_jump
		mov    %cl,%ch
		or     $0x000004,%ch
		mov    %ch,_094d94_data

	_07a26e_jump:
		mov    _094dbc_data,%al
		test   $0x000001,%al
		jne    _07a5fa_case
		mov    %al,%ah
		or     $0x000004,%ah
		mov    %ah,_094dbc_data
		jmp    _07a5fa_case

	_07a28b_case:
		movw   $0x000001,_0cf288_data
		mov    _094da8_data,%ah
		test   $0x000001,%ah
		jne    _07a5fa_case
		mov    %ah,%bl
		or     $0x000004,%bl
		mov    %bl,_094da8_data
		orb    $0x000004,_094eac_data
		jmp    _07a5fa_case

	_07a2ba_case:
		mov    $0x000004,%esi
		mov    $0x000001,%edx
		mov    %si,_0cf224_data
		jmp    _07a5fa_case

	_07a2d0_case:
		mov    $0x000009,%ecx
		mov    $0x000001,%edx
		mov    %cx,_0cf224_data
		jmp    _07a5fa_case

	_07a2e6_case:
		mov    _0cf270_data,%ax
		sub    $0x000002,%eax
		cmp    $0x00000b,%ax
		ja     _07a5fa_case
		and    $0x00ffff,%eax
		jmp    *%cs:_079d0c_switch(,%eax,4)

	_07a306_case:
		mov    $0x000001,%ebx
		mov    _094dd0_data,%ch
		mov    %bx,_0cf288_data
		test   $0x000001,%ch
		jne    _07a5fa_case
		mov    %ch,%al
		or     $0x000004,%al
		mov    %al,_094dd0_data
		jmp    _07a5fa_case

	_07a32f_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07a5fa_case
		movw   $0x00000c,_0cf224_data
		mov    $0x000001,%edx
		jmp    _07a5fa_case

	_07a34d_case:
		mov    $0x000001,%edi
		mov    _094de4_data,%bl
		mov    %di,_0cf288_data
		test   $0x000001,%bl
		jne    _07a5fa_case
		mov    %bl,%bh
		mov    _094ec0_data,%cl
		or     $0x000004,%bh
		or     $0x000004,%cl
		mov    %bh,_094de4_data
		mov    %cl,_094ec0_data
		jmp    _07a5fa_case

	_07a387_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07a5fa_case
		mov    $0x00000d,%esi
		mov    $0x000001,%edx
		mov    %si,_0cf224_data
		jmp    _07a5fa_case

	_07a3a8_case:
		mov    $0x000001,%ebx
		mov    _094df8_data,%al
		mov    %bx,_0cf288_data
		test   $0x000001,%al
		jne    _07a5fa_case
		mov    %al,%ah
		or     $0x000004,%ah
		mov    %ah,_094df8_data
		jmp    _07a5fa_case

	_07a3d1_case:
		mov    $0x000004,%eax
		mov    $0x000001,%edx
		mov    %ax,_0cf224_data
		jmp    _07a5fa_case

	_07a3e6_case:
		mov    $0x000009,%edi
		mov    $0x000001,%edx
		mov    %di,_0cf224_data
		jmp    _07a5fa_case

	_07a3fc_case:
		mov    _0cf270_data,%ax
		sub    $0x000003,%eax
		cmp    $0x00000a,%ax
		ja     _07a5fa_case
		and    $0x00ffff,%eax
		jmp    *%cs:_079d3c_switch(,%eax,4)

	_07a41c_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07a5fa_case

	_07a427_jump:
		mov    $0x00000c,%esi
		mov    $0x000001,%edx
		mov    %si,_0cf224_data
		jmp    _07a5fa_case

	_07a43d_case:
		mov    $0x000001,%eax
		mov    _094e0c_data,%cl
		mov    %ax,_0cf288_data
		test   $0x000001,%cl
		jne    _07a5fa_case
		mov    %cl,%ch
		or     $0x000004,%ch
		mov    %ch,_094e0c_data
		jmp    _07a5fa_case

	_07a467_case:
		mov    $0x000001,%edi
		mov    _094e20_data,%bl
		mov    %di,_0cf288_data
		test   $0x000001,%bl
		jne    _07a5fa_case
		mov    %bl,%bh
		or     $0x000004,%bh
		mov    %bh,_094e20_data
		jmp    _07a5fa_case

	_07a492_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07a5fa_case
		mov    $0x00000d,%esi
		mov    $0x000001,%edx
		mov    %si,_0cf224_data
		jmp    _07a5fa_case

	_07a4b3_case:
		mov    $0x000001,%eax
		mov    _094e34_data,%ch
		mov    %ax,_0cf288_data
		test   $0x000001,%ch
		jne    _07a5fa_case
		call   _035598_func
		orb    $0x000004,_094e34_data
		orb    $0x000004,_094ed4_data
		jmp    _07a5fa_case

	_07a4e5_case:
		mov    $0x000003,%edi
		mov    $0x000001,%edx
		mov    %di,_0cf224_data
		jmp    _07a5fa_case

	_07a4fb_case:
		mov    $0x000009,%esi
		mov    $0x000001,%edx
		mov    %si,_0cf224_data
		jmp    _07a5fa_case

	_07a511_case:
		mov    _0cf270_data,%ax
		sub    $0x000002,%eax
		cmp    $0x00000a,%ax
		ja     _07a5fa_case
		and    $0x00ffff,%eax
		jmp    *%cs:_079d68_switch(,%eax,4)

	_07a531_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07a54e_jump
		mov    $0x00000c,%ecx
		mov    $0x000001,%edx
		mov    %cx,_0cf224_data
		jmp    _07a5fa_case

	_07a54e_jump:
		movw   $0x000001,_0cf288_data
		mov    _094e48_data,%bl
		test   $0x000001,%bl
		jne    _07a5fa_case
		mov    %bl,%bh
		mov    _094ed4_data,%cl
		or     $0x000004,%bh
		or     $0x000004,%cl
		mov    %bh,_094e48_data
		mov    %cl,_094ed4_data
		jmp    _07a5fa_case

	_07a585_case:
		mov    $0x000001,%edi
		mov    _094e5c_data,%ch
		mov    %di,_0cf288_data
		test   $0x000001,%ch
		jne    _07a5fa_case
		mov    %ch,%al
		or     $0x000004,%al
		mov    %al,_094e5c_data
		orb    $0x000004,_094ee8_data
		jmp    _07a5fa_case

	_07a5ae_case:
		movw   $0x000001,_0cf288_data
		call   _035598_func
		jmp    _07a5fa_case

	_07a5be_case:
		mov    $0x000002,%ecx
		mov    $0x000001,%edx
		mov    %cx,_0cf224_data
		jmp    _07a5fa_case

	_07a5d1_case:
		mov    _0cf270_data,%ax
		cmp    $0x000004,%ax
		jne    _07a5fa_case
		movw   $0x000001,_0cf288_data
		mov    $0x000001,%bl
		mov    %bl,_0cf432_data
		mov    %bl,_0cf42d_data
		mov    %bl,_0cf46d_data

	_07a5fa_case:
		mov    _094e70_data,%bl
		test   $0x000001,%bl
		jne    _07a619_jump
		cmpb   $0x000066,_0cf450_data
		jb     _07a619_jump
		mov    %bl,%cl
		or     $0x000004,%cl
		mov    %cl,_094e70_data

	_07a619_jump:
		cmpw   $0x000000,_0cf288_data
		jne    _07a62f_jump
		test   %dx,%dx
		jne    _07a62f_jump
		incw   _0cf224_data

	_07a62f_jump:
		movw   $0x000001,_0cf272_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a640_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    %eax,%esi
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07a735_jump

	_07a65f_jump:
		cmpw   $0x000013,0x000060(%ecx)
		jne    _07a725_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07a725_jump
		mov    0x000081(%ecx),%ah
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		call   _05538c_func
		cmpl   $0x000000,0x000024(%ecx)
		je     _07a699_jump
		mov    %ecx,%eax
		call   _01f3d4_func

	_07a699_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x000062(%esi),%dl
		cmp    $0x00000a,%dl
		jne    _07a6c6_jump
		mov    0x00002c(%esi),%ebp
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%dl
		mov    0x000069(%ecx),%al
		add    %ebp,%edx
		jmp    _07a6fd_jump

	_07a6c6_jump:
		xor    %eax,%eax
		mov    %dl,%al
		testb  $0x000002,_0924f4_data(%eax)
		jne    _07a6e9_jump
		mov    _0ce038_data,%edx
		sar    $0x000010,%edx
		xor    %eax,%eax
		shl    $0x000004,%edx
		mov    0x000069(%ecx),%al
		sub    $0x000010,%edx
		jmp    _07a6fd_jump

	_07a6e9_jump:
		mov    _0ce038_data,%edx
		sar    $0x000010,%edx
		xor    %eax,%eax
		shl    $0x000004,%edx
		mov    0x000069(%ecx),%al
		sub    $0x000006,%edx

	_07a6fd_jump:
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01dc5c_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d444_func
		movb   $0x000000,0x00006b(%ecx)
		orb    $0x000040,0x000081(%esi)
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a725_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _07a65f_jump

	_07a735_jump:
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a73c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		mov    (%ebx),%ebx
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000060(%edx),%bx
		cmp    $0x00000f,%bx
		jne    _07a77e_jump
		mov    0x000005(%eax),%dh
		movb   $_0000ff_case,0x000001(%eax)
		and    $0x00000f,%dh
		movb   $0x000001,(%eax)
		mov    %dh,%bl
		mov    %dh,0x000005(%eax)
		or     $0x0000a0,%bl
		mov    %bl,0x000005(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_07a77e_jump:
		cmp    $0x00000d,%bx
		jne    _07a794_jump
		movb   $0x0000fe,0x000001(%eax)
		mov    0x000005(%eax),%dl
		movb   $0x000002,(%eax)
		and    $0x00000f,%dl
		mov    %dl,0x000005(%eax)

	_07a794_jump:
		pop    %edx
		pop    %ebx
		ret    



_07a798_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    0x00006d(%eax),%ah
		test   %ah,%ah
		jne    _07a967_jump
		cmpb   $0x00000b,0x00006c(%esi)
		jne    _07a967_jump
		cmpw   $0x000000,0x000052(%esi)
		jne    _07a979_jump
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%dx
		xor    %al,%al
		test   %dx,%dx
		jle    _07a95a_jump

	_07a7d8_jump:
		mov    0x000060(%ecx),%bx
		cmp    $0x00000d,%bx
		je     _07a7ec_jump
		cmp    $0x00000f,%bx
		jne    _07a94a_jump

	_07a7ec_jump:
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07a94a_jump
		mov    0x000081(%esi),%al
		mov    0x000081(%ecx),%bh
		and    $0x000008,%al
		and    $0x0000f7,%bh
		movl   $0x000001,0x000024(%ecx)
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    $0x000002,%ebx
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f3d4_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _01d444_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000008(%eax),%eax
		mov    0x000012(%eax),%al
		mov    %al,0x00006a(%ecx)
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		mov    0x000081(%ecx),%bl
		sub    %eax,%edx
		test   $0x000008,%bl
		je     _07a871_jump
		mov    $0x000040,%eax
		jmp    _07a876_jump

	_07a871_jump:
		mov    $0xffffffc0,%eax

	_07a876_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    %ecx,%eax
		call   _01dc5c_func
		mov    0x000032(%ecx),%edx
		mov    $0x000018,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		testb  $0x000008,0x000081(%ecx)
		je     _07a8bf_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		jmp    _07a8c8_jump

	_07a8bf_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_07a8c8_jump:
		call   _060460_func
		cmpw   $0x00000e,0x000060(%esi)
		jne    _07a92a_jump
		mov    _0ce06c_data,%edi
		mov    0x000028(%esi),%eax
		sub    %edi,%eax
		test   %eax,%eax
		jge    _07a8e5_jump
		neg    %eax

	_07a8e5_jump:
		sar    $0x000005,%eax
		movw   $0x00000f,0x000060(%ecx)
		mov    %eax,%edi
		mov    0x00002c(%esi),%ebp
		mov    _0ce070_data,%eax
		sub    %ebp,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0ce06c_data,%ebx
		mov    0x000028(%esi),%eax
		sub    %ebx,%eax
		test   %eax,%eax
		jge    _07a912_jump
		neg    %eax

	_07a912_jump:
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %di,%edx
		movb   $0x00000a,0x000072(%ecx)
		sub    %edx,%eax
		mov    %ax,0x000042(%ecx)
		jmp    _07a936_jump

	_07a92a_jump:
		movw   $0x00000d,0x000060(%ecx)
		movw   $0x000000,0x000042(%ecx)

	_07a936_jump:
		mov    %ecx,%eax
		call   _01dc5c_func
		movw   $0x000001,0x000052(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a94a_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _07a7d8_jump

	_07a95a_jump:
		movw   $0x000001,0x000052(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a967_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _07a979_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _07a979_jump
		movw   $0x000000,0x000052(%esi)

	_07a979_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a980_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    0x000032(%eax),%edx
		mov    _0ce8d4_data,%ebx
		sar    $0x000010,%edx
		mov    (%ebx,%edx,2),%dx
		cmp    0x000034(%eax),%dx
		je     _07a9fb_jump
		movswl %dx,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc7a0_data,%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		mov    0x000081(%edx),%bl
		movw   $0x000018,0x000060(%edx)
		and    $0x0000ef,%bl
		mov    %bl,0x000081(%edx)
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%cx
		mov    0x000069(%edx),%bl
		mov    0x00002c(%eax),%si
		add    %ecx,%ebx
		mov    0x000069(%eax),%al
		sub    %esi,%ebx
		xor    %ah,%ah
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %bx,%bx
		setle  %bl
		and    $_0000ff_case,%ebx
		add    $0x000003,%ebx
		cwtl   
		mov    %bl,0x000070(%edx)
		test   %eax,%eax
		jge    _07a9f7_jump
		neg    %eax

	_07a9f7_jump:
		mov    %ax,0x000048(%edx)

	_07a9fb_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07aa00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0cc7a0_data,%eax
		mov    _0cc7a4_data,%si
		xor    %dl,%dl
		xor    %ebx,%ebx
		test   %si,%si
		jle    _07aa55_jump

	_07aa1e_jump:
		cmpw   $0x000027,0x000060(%eax)
		jne    _07aa4a_jump
		movzbl %dl,%edi
		mov    0x000034(%eax),%cx
		mov    %cx,(%esp,%edi,2)
		mov    0x000024(%eax),%ecx
		inc    %dl
		test   %ecx,%ecx
		jne    _07aa41_jump
		movw   $0x00000a,0x000056(%eax)
		jmp    _07aa45_jump

	_07aa41_jump:
		incw   0x000056(%eax)

	_07aa45_jump:
		cmp    $0x000002,%dl
		jae    _07aa55_jump

	_07aa4a_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jl     _07aa1e_jump

	_07aa55_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		mov    (%esp),%esi
		lea    (%eax,%edx,1),%ebp
		mov    %esi,%ebx
		xor    %al,%al

	_07aa75_jump:
		movswl %bx,%edx
		imul   $0x000084,%edx,%edx
		movswl %si,%edi
		imul   $0x000084,%edi,%edi
		mov    _0cc7a0_data,%ecx
		add    %ecx,%edx
		add    %ecx,%edi
		mov    0x000056(%edx),%cx
		cmp    0x000056(%edi),%cx
		jle    _07aa9f_jump
		mov    %ebx,%esi
		mov    %edx,%ebp

	_07aa9f_jump:
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		mov    (%esp,%edx,2),%bx
		cmp    $0x000002,%al
		jb     _07aa75_jump
		mov    %ebp,%eax
		movw   $0x000001,0x000056(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07aac0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %ebp
		cmpl   $0x000001,_0bd918_data
		je     _07aad6_jump
		xor    %ebx,%ebx
		mov    %ebx,_0bd918_data

	_07aad6_jump:
		xor    %eax,%eax
		mov    _0ce0ae_data,%al
		lea    0x000000(,%eax,4),%ecx
		sub    %eax,%ecx
		mov    _0ce048_data,%eax
		mov    0x00000a(%eax,%ecx,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0ce0af_data,%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _07abac_jump
		cmpl   $0x000000,_0bd918_data
		jne    _07abb4_jump
		call   _07aa00_func
		mov    0x000024(%eax),%edi
		mov    %eax,%ecx
		test   %edi,%edi
		je     _07ab28_jump
		call   _07af48_func
		jmp    _07ab2d_jump

	_07ab28_jump:
		call   _01f3d4_func

	_07ab2d_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000026,%ebx
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01d444_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    (%eax),%eax
		mov    0x000132(%eax),%al
		mov    _0ce06c_data,%ebp
		mov    %al,0x00006a(%ecx)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0ce0ac_data,%al
		mov    0x000068(%ecx),%dl
		add    %ebp,%eax
		sub    %edx,%eax
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		mov    _0ce070_data,%edx
		mov    _0ce0ad_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    %eax,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01dc5c_func
		movl   $0x000001,_0bd918_data
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07abac_jump:
		xor    %ecx,%ecx
		mov    %ecx,_0bd918_data

	_07abb4_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07abbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%dx
		xor    %ebx,%ebx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07ac87_jump

	_07abdc_jump:
		cmpw   $0x000053,0x000060(%ecx)
		jne    _07ac77_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07ac77_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d444_func
		mov    0x000081(%ecx),%ah
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01f3d4_func
		mov    0x000068(%esi),%bl
		mov    0x000028(%esi),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		sub    %ebx,%eax
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000069(%esi),%al
		mov    0x00002c(%esi),%esi
		mov    0x000069(%ecx),%bl
		add    %eax,%esi
		sub    %ebx,%esi
		mov    %ecx,%eax
		add    $0x00000a,%esi
		xor    %ebx,%ebx
		mov    %esi,0x00002c(%ecx)
		call   _01dc5c_func
		mov    0x00006d(%ecx),%bl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%ecx),%al
		mov    0x000002(%ebx,%eax,8),%al
		movb   $0x000000,0x00006b(%ecx)
		movb   $0x000002,0x000073(%ecx)
		mov    %ecx,%ebx
		mov    %al,0x00006a(%ecx)
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ac77_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _07abdc_jump

	_07ac87_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ac90_func:
		push   %edx
		mov    %eax,%edx
		call   _07abbc_func
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%edx)
		pop    %edx
		ret    



_07acb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07ad53_jump

	_07acce_jump:
		cmpw   $0x00008b,0x000060(%ecx)
		jne    _07ad43_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07ad43_jump
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000042(%ecx)
		and    $0x0000f7,%ah
		movw   $0x000000,0x000040(%ecx)
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01dc5c_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f3d4_func
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000007,0x000072(%ecx)
		jmp    _07ad53_jump

	_07ad43_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _07acce_jump

	_07ad53_jump:
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _060460_func
		cmpb   $0x000014,0x000070(%esi)
		jne    _07ad7a_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%esi)

	_07ad7a_jump:
		mov    $0x00000c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d444_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ad90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0ce06c_data,%ax
		mov    0x000028(%edx),%bx
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce0ac_data,%al
		mov    0x00002c(%edx),%cx
		add    %ebx,%eax
		mov    _0ce070_data,%bx
		mov    0x000069(%edx),%dl
		sub    %ecx,%ebx
		xor    %dh,%dh
		sub    %edx,%ebx
		mov    _0ce0ad_data,%dl
		add    %ebx,%edx
		test   %ax,%ax
		setg   %cl
		test   %dx,%dx
		setg   %ch
		test   %cl,%cl
		jne    _07ade2_jump
		neg    %eax

	_07ade2_jump:
		test   %ch,%ch
		jne    _07ade8_jump
		neg    %edx

	_07ade8_jump:
		cmp    $0x0000c8,%ax
		jle    _07adf6_jump
		cwtl   
		movswl %dx,%edx
		sar    %eax
		sar    %edx

	_07adf6_jump:
		test   %dx,%dx
		jne    _07ae13_jump
		test   %cl,%cl
		je     _07ae09_jump
		mov    $0x000180,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ae09_jump:
		mov    $0x000080,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ae13_jump:
		cmp    %ax,%dx
		jle    _07ae33_jump
		movswl %ax,%ebx
		shl    $0x000006,%ebx
		movswl %dx,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cwtl   
		mov    _094cd0_data(%eax),%al
		jmp    _07ae50_jump

	_07ae33_jump:
		movswl %dx,%edx
		shl    $0x000006,%edx
		movswl %ax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000080,%dl
		mov    _094cd0_data(%eax),%dh
		mov    %dl,%al
		sub    %dh,%al

	_07ae50_jump:
		test   %cl,%cl
		je     _07ae6b_jump
		test   %ch,%ch
		je     _07ae5f_jump
		mov    $0x000180,%edx
		jmp    _07ae80_jump

	_07ae5f_jump:
		xor    %ah,%ah
		add    $0x000180,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ae6b_jump:
		test   %ch,%ch
		je     _07ae7b_jump
		xor    %ah,%ah
		add    $0x000080,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ae7b_jump:
		mov    $0x000080,%edx

	_07ae80_jump:
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ae8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cc798_data,%edx
		movswl (%edx),%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0cc7a0_data,%ecx
		shl    $0x000002,%edx
		xor    %ebx,%ebx
		add    %edx,%ecx
		mov    _0cc79c_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07af3f_jump
		mov    _0cc79c_data,%si

	_07aec6_jump:
		cmpw   $0x00008f,0x000060(%ecx)
		jne    _07af1e_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07af1e_jump
		mov    $0x000014,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d444_func
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01f3d4_func
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		lea    (%ebx,%edx,1),%eax
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		lea    0x000000(,%edx,8),%ebx
		mov    (%eax),%edx
		mov    0x000002(%edx,%ebx,1),%al
		movb   $0x000000,0x00006b(%ecx)
		mov    %ecx,%ebx
		mov    %al,0x00006a(%ecx)
		jmp    _07af3f_jump

	_07af1e_jump:
		inc    %eax
		mov    _0cc798_data,%edx
		movswl %ax,%ecx
		movswl (%edx,%ecx,2),%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0cc7a0_data,%edx
		add    %edx,%ecx
		cmp    %si,%ax
		jl     _07aec6_jump

	_07af3f_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07af48_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%edi
		call   _07ae8c_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _07b009_jump
		mov    0x000028(%edi),%edx
		mov    %edx,0x000028(%eax)
		mov    0x00002c(%edi),%edx
		mov    %edx,0x00002c(%eax)
		lea    0x00001c(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x000014(%esp),%ebx
		lea    0x000018(%esp),%edx
		call   _01d364_func
		lea    0x000018(%esp),%edx
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		lea    0x000010(%esp),%edx
		call   _01d364_func
		movl   $0x000001,0x000024(%esi)
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%ebx
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		sar    $0x000010,%ecx
		add    %edx,%ebx
		mov    0x000012(%esp),%edx
		sar    %ecx
		sar    $0x000010,%edx
		add    %ecx,%edx
		sub    %edx,%ebx
		add    %ebx,0x000028(%esi)
		mov    0x000016(%esp),%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		lea    (%ebx,%edx,1),%ecx
		mov    0x00001a(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		movb   $0x000001,0x00007e(%esi)
		add    %ebx,%edx
		mov    0x00002c(%esi),%ebx
		sub    %edx,%ecx
		movw   $0x000000,0x000050(%esi)
		add    %ecx,%ebx
		mov    %esi,%eax
		mov    %ebx,0x00002c(%esi)
		call   _01dc5c_func

	_07b009_jump:
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_07b014_switch:
		.long   _07b110_case
		.long   _07b0dc_case
		.long   _07b0e2_case
		.long   _07b0f0_case
		.long   _07b0f6_case




_07b028_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		xor    %edx,%edx
		mov    %edx,0x000020(%esp)

	_07b039_jump:
		call   _07ae8c_func
		mov    %eax,%esi
		mov    %eax,%edi
		test   %eax,%eax
		je     _07b138_jump
		mov    0x000028(%ebp),%eax
		mov    %eax,0x000028(%esi)
		mov    0x00002c(%ebp),%eax
		lea    0x00000c(%esp),%ecx
		mov    %eax,0x00002c(%esi)
		mov    %esp,%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		lea    0x000014(%esp),%eax
		lea    0x000018(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%edx
		mov    %ebp,%eax
		call   _01d364_func
		mov    0x00000a(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    -0x000002(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %ebx,%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		movl   $0x000001,0x000024(%esi)
		sub    %edx,%ebx
		mov    0x000020(%esp),%esi
		mov    %ebx,%edx
		cmp    $0x000004,%si
		ja     _07b110_case
		xor    %ebx,%ebx
		mov    %si,%bx
		jmp    *%cs:_07b014_switch(,%ebx,4)

	_07b0dc_case:
		add    0x000018(%esp),%eax
		jmp    _07b110_case

	_07b0e2_case:
		mov    0x000018(%esp),%ecx
		mov    0x000014(%esp),%esi
		add    %ecx,%eax
		add    %esi,%edx
		jmp    _07b110_case

	_07b0f0_case:
		add    0x000014(%esp),%edx
		jmp    _07b110_case

	_07b0f6_case:
		mov    0x000016(%esp),%ebx
		sar    $0x000010,%ebx
		cwtl   
		sar    %ebx
		add    %ebx,%eax
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%ebx
		movswl %dx,%edx
		sar    %ebx
		add    %ebx,%edx

	_07b110_case:
		cwtl   
		mov    0x000028(%edi),%ebx
		mov    0x00002c(%edi),%ecx
		add    %eax,%ebx
		movswl %dx,%eax
		add    %eax,%ecx
		mov    %ecx,0x00002c(%edi)
		imul   $0x000005,0x000020(%esp),%eax
		movb   $0x000000,0x00007e(%edi)
		mov    %ax,0x000050(%edi)
		mov    %edi,%eax
		mov    %ebx,0x000028(%edi)
		call   _01dc5c_func

	_07b138_jump:
		mov    0x000020(%esp),%ebx
		inc    %ebx
		mov    %ebx,0x000020(%esp)
		cmp    $0x000004,%bx
		jle    _07b039_jump
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b158_func:
		push   %ebx
		push   %edx
		call   _07ae8c_func
		test   %eax,%eax
		je     _07b1a5_jump
		movb   $0x000000,0x00007e(%eax)
		mov    _0cf2ac_data,%edx
		movb   $0x00000a,0x00007f(%eax)
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%eax),%bl
		movw   $_0000ff_case,0x000050(%eax)
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x000028(%eax)
		mov    _0cf2ae_data,%edx
		mov    0x000069(%eax),%bl
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%eax)
		add    %ebx,%edx
		mov    %edx,0x00002c(%eax)
		mov    0x000034(%eax),%ax
		pop    %edx
		pop    %ebx
		ret    

	_07b1a5_jump:
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

_07b1b0_switch:
		.long   _07b298_case
		.long   _07b2a9_case
		.long   _07b2ba_case
		.long   _07b2cb_case
		.long   _07b2dc_case
		.long   _07b2ed_case
		.long   _07b2fe_case
		.long   _07b30f_case
		.long   _07b320_case
		.long   _07b331_case
		.long   _07b342_case
		.long   _07b353_case
		.long   _07b364_case
		.long   _07b375_case
		.long   _07b386_case
		.long   _07b397_case
		.long   _07b3a8_case
		.long   _07b3b9_case
		.long   _07b3ca_case
		.long   _07b3db_case
		.long   _07b3ec_case
		.long   _07b3fd_case
		.long   _07b40e_case
		.long   _07b41f_case
		.long   _07b430_case
		.long   _07b441_case
		.long   _07b452_case
		.long   _07b463_case
		.long   _07b474_case
		.long   _07b482_case
		.long   _07b490_case
		.long   _07b49e_case
		.long   _07b4ac_case
		.long   _07b4ba_case
		.long   _07b4c8_case
		.long   _07b4d6_case




_07b240_func:
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %dx,(%esp)
		mov    %ebx,%ecx
		mov    _0cc7a0_data,%edx
		mov    _0cc7a4_data,%ax
		xor    %ebx,%ebx
		test   %ax,%ax
		jle    _07b558_jump

	_07b264_jump:
		cmpw   $0x000092,0x000060(%edx)
		jne    _07b548_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _07b548_jump
		andb   $0x0000f7,0x000081(%edx)
		cmp    $0x000023,%cx
		ja     _07b4e2_jump
		xor    %eax,%eax
		mov    %cx,%ax
		jmp    *%cs:_07b1b0_switch(,%eax,4)

	_07b298_case:
		movw   $0x000100,0x000056(%edx)
		movw   $0x000000,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b2a9_case:
		movw   $0x0000fc,0x000056(%edx)
		movw   $0x00ffd4,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b2ba_case:
		movw   $0x0000f0,0x000056(%edx)
		movw   $0x00ffa9,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b2cb_case:
		movw   $0x0000dd,0x000056(%edx)
		movw   $0x00ff80,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b2dc_case:
		movw   $0x0000c4,0x000056(%edx)
		movw   $0x00ff5c,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b2ed_case:
		movw   $0x0000a4,0x000056(%edx)
		movw   $0x00ff3c,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b2fe_case:
		movw   $0x000080,0x000056(%edx)
		movw   $0x00ff23,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b30f_case:
		movw   $0x000057,0x000056(%edx)
		movw   $0x00ff10,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b320_case:
		movw   $0x00002c,0x000056(%edx)
		movw   $0x00ff04,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b331_case:
		movw   $0x00ff04,0x000056(%edx)
		movw   $0x00ffd4,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b342_case:
		movw   $0x00ff10,0x000056(%edx)
		movw   $0x00ffa9,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b353_case:
		movw   $0x00ff23,0x000056(%edx)
		movw   $0x00ff80,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b364_case:
		movw   $0x00ff3c,0x000056(%edx)
		movw   $0x00ff5c,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b375_case:
		movw   $0x00ff5c,0x000056(%edx)
		movw   $0x00ff3c,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b386_case:
		movw   $0x00ff80,0x000056(%edx)
		movw   $0x00ff23,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b397_case:
		movw   $0x00ffa9,0x000056(%edx)
		movw   $0x00ff10,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b3a8_case:
		movw   $0x00ffd4,0x000056(%edx)
		movw   $0x00ff04,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b3b9_case:
		movw   $0x000000,0x000056(%edx)
		movw   $0x00ff00,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b3ca_case:
		movw   $0x00ff00,0x000056(%edx)
		movw   $0x000000,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b3db_case:
		movw   $0x00ff04,0x000056(%edx)
		movw   $0x00002c,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b3ec_case:
		movw   $0x00ff10,0x000056(%edx)
		movw   $0x000057,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b3fd_case:
		movw   $0x00ff23,0x000056(%edx)
		movw   $0x000080,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b40e_case:
		movw   $0x00ff3c,0x000056(%edx)
		movw   $0x0000a4,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b41f_case:
		movw   $0x00ff5c,0x000056(%edx)
		movw   $0x0000c4,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b430_case:
		movw   $0x00ff80,0x000056(%edx)
		movw   $0x0000dd,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b441_case:
		movw   $0x00ffa9,0x000056(%edx)
		movw   $0x0000f0,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b452_case:
		movw   $0x00ffd4,0x000056(%edx)
		movw   $0x0000fc,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b463_case:
		movw   $0x0000fc,0x000056(%edx)
		movw   $0x00002c,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b474_case:
		movw   $0x0000f0,0x000056(%edx)
		movw   $0x000057,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b482_case:
		movw   $0x0000dd,0x000056(%edx)
		movw   $0x000080,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b490_case:
		movw   $0x0000c4,0x000056(%edx)
		movw   $0x0000a4,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b49e_case:
		movw   $0x0000a4,0x000056(%edx)
		movw   $0x0000c4,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b4ac_case:
		movw   $0x000080,0x000056(%edx)
		movw   $0x0000dd,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b4ba_case:
		movw   $0x000057,0x000056(%edx)
		movw   $0x0000f0,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b4c8_case:
		movw   $0x00002c,0x000056(%edx)
		movw   $0x0000fc,0x00004a(%edx)
		jmp    _07b4e2_jump

	_07b4d6_case:
		movw   $0x000000,0x000056(%edx)
		movw   $0x000100,0x00004a(%edx)

	_07b4e2_jump:
		movswl %si,%eax
		movw   $0x000000,0x000040(%edx)
		mov    %eax,0x000028(%edx)
		mov    -0x000002(%esp),%eax
		movw   $0x000000,0x000042(%edx)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000056(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    %cl,0x000076(%edx)
		call   _01dc5c_func
		mov    0x000081(%edx),%cl
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%cl
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _01f3d4_func
		mov    $0x0000cd,%eax
		movswl %bx,%edx
		call   _071b3c_func
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		ret    

	_07b548_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %ax,%bx
		jl     _07b264_jump

	_07b558_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		ret    



_07b560_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    _0ce0d0_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _07b5a1_jump
		mov    _0cf24c_data,%edx
		mov    _0cf248_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		mov    %eax,%edx
		mov    _0cf268_data,%eax
		mov    _0cf24a_data,%edi
		sar    $0x000010,%eax
		sar    $0x000010,%edi
		sar    %eax
		jmp    _07b5b7_jump

	_07b5a1_jump:
		xor    %edx,%edx
		mov    0x000028(%eax),%di
		mov    0x000068(%eax),%dl
		add    %edi,%edx
		movzbl 0x000069(%eax),%edi
		add    %edi,%edi
		mov    0x00002c(%eax),%eax
		sar    %edi

	_07b5b7_jump:
		add    %edi,%eax
		mov    0x000028(%esi),%di
		sub    %edi,%edx
		mov    %edx,(%esp)
		xor    %edx,%edx
		mov    (%esp),%edi
		mov    0x000068(%esi),%dl
		sub    %edx,%edi
		mov    %di,0x000000(%ebp)
		xor    %edx,%edx
		movzbl 0x000074(%esi),%edi
		mov    0x000069(%esi),%dl
		add    %edx,%edi
		mov    0x00002c(%esi),%ebp
		sar    %edi
		cwtl   
		add    %ebp,%edi
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _07b5ed_jump
		neg    %eax

	_07b5ed_jump:
		mov    %ax,(%ebx)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		shl    $0x000002,%eax
		mov    %ax,(%ecx)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_07b604_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    $0xffffffff,%ebx
		xor    %eax,%eax

	_07b60e_jump:
		movswl %ax,%edx
		imul   $0x000282,%edx,%edx
		cmpw   $0x000000,_0c96a0_data(%edx)
		jne    _07b631_jump
		mov    $0x000001,%esi
		mov    %eax,%ebx
		mov    %si,_0c96a0_data(%edx)
		jmp    _07b638_jump

	_07b631_jump:
		inc    %eax
		cmp    $0x000008,%ax
		jl     _07b60e_jump

	_07b638_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_07b640_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ecx
		mov    %edx,%ebx
		call   _07b604_func
		movswl %ax,%edx
		mov    %ax,0x00000c(%esp)
		cmp    $0xffffffff,%edx
		je     _07b738_jump
		mov    $0x000100,%edi
		lea    0x000000(,%edx,4),%eax
		shl    $0x000006,%ecx
		xor    %esi,%esi
		shl    $0x000006,%ebx
		mov    %si,0x000010(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)
		add    %edx,%eax
		mov    $0x000040,%esi
		shl    $0x000006,%eax
		mov    $0x000020,%ecx
		add    %edx,%eax
		mov    $_0c9420_data,%edx
		add    %eax,%eax
		mov    $0x000080,%ebx
		add    %eax,%edx
		jmp    _07b716_jump

	_07b6a4_jump:
		mov    0x000004(%esp),%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    %ax,0x000002(%edx)
		movswl %bx,%eax
		add    $0x000002,%edx
		call   _06b8d0_func
		sub    %edi,%eax
		add    $0x000002,%edx
		mov    %eax,(%esp)
		movswl %si,%eax
		add    $0x000002,%edx
		call   _06b8d0_func
		sub    %ecx,%eax
		add    $0x000002,%edx
		mov    %ax,-0x000004(%edx)
		mov    (%esp),%eax
		mov    %ax,-0x000002(%edx)
		mov    $0x000008,%eax
		add    $0x000002,%edx
		call   _06b8d0_func
		mov    %ax,0x000014(%esp)
		add    $0x000004,%ebx
		mov    0x000014(%esp),%al
		add    $0x000002,%edi
		add    $0x000008,%al
		add    $0x000004,%esi
		mov    %al,-0x000002(%edx)
		mov    0x000010(%esp),%eax
		add    $0x000002,%ecx
		inc    %eax
		movb   $0x000080,-0x000001(%edx)
		mov    %ax,0x000010(%esp)

	_07b716_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000040,%ebp
		shl    $0x000003,%eax
		sub    %eax,%ebp
		mov    %ebp,%eax
		mov    0x00000e(%esp),%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%eax
		jg     _07b6a4_jump

	_07b738_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07b744_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0cca2c_data,%ebp
		mov    _0cf2a4_data,%ax
		mov    _0cf2a6_data,%di
		xor    %edx,%edx
		shl    $0x000006,%eax
		shl    $0x000006,%edi
		mov    %dx,0x000004(%esp)
		mov    %eax,(%esp)

	_07b770_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000282,%eax,%eax
		cmpw   $0x000001,_0c96a0_data(%eax)
		jne    _07b819_jump
		add    $_0c9420_data,%eax
		xor    %esi,%esi
		xor    %edx,%edx

	_07b794_jump:
		cmpb   $0x000080,0x000009(%eax)
		jb     _07b7fb_jump
		mov    (%esp),%ecx
		mov    0x000004(%eax),%bx
		sub    %ecx,%ebx
		add    %bx,(%eax)
		mov    0x000006(%eax),%bx
		mov    0x000002(%eax),%cx
		sub    %edi,%ebx
		add    %ebx,%ecx
		mov    %cx,0x000002(%eax)
		mov    _0cca34_data,%ecx
		movswl (%eax),%ebx
		shl    $0x000006,%ecx
		cmp    %ecx,%ebx
		jg     _07b7e1_jump
		mov    _0cca40_data,%ecx
		shl    $0x000006,%ecx
		cmp    %ecx,%ebx
		jl     _07b7e1_jump
		mov    (%eax),%ecx
		mov    %ebp,%ebx
		sar    $0x000010,%ecx
		shl    $0x000006,%ebx
		cmp    %ebx,%ecx
		jle    _07b7e7_jump

	_07b7e1_jump:
		movb   $0x000000,0x000009(%eax)
		jmp    _07b7ec_jump

	_07b7e7_jump:
		mov    $0x000001,%esi

	_07b7ec_jump:
		xor    %ebx,%ebx
		mov    0x000006(%eax),%cx
		mov    0x000008(%eax),%bl
		add    %ebx,%ecx
		mov    %cx,0x000006(%eax)

	_07b7fb_jump:
		inc    %edx
		add    $0x00000a,%eax
		cmp    $0x000040,%dx
		jl     _07b794_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000282,%eax,%eax
		mov    %si,_0c96a0_data(%eax)

	_07b819_jump:
		mov    0x000004(%esp),%ebx
		inc    %ebx
		mov    %bx,0x000004(%esp)
		cmp    $0x000008,%bx
		jl     _07b770_jump
		mov    %ebp,_0cca2c_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b840_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		call   _060460_func
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0ce8d4_data,%eax
		movw   $0x000001,0x000052(%ecx)
		mov    (%edx,%eax,1),%ax
		cmp    0x000034(%ecx),%ax
		je     _07b8aa_jump
		movswl %ax,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0cc7a0_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		cmpw   $0x0000a8,0x000060(%ecx)
		jne    _07b8aa_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _060460_func
		movw   $0x000001,0x000052(%ecx)

	_07b8aa_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b8b0_func:
		push   %edx
		mov    $_0ce044_data,%eax
		mov    $0x000001,%edx
		call   _079d94_func
		mov    %dx,_0cf272_data
		pop    %edx
		ret    



_07b8cc_func:
		push   %edx
		cmpb   $0x000000,_0cf46d_data
		jne    _07b8f1_jump
		mov    _0cf288_data,%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		cmp    $0xffffffff,%eax
		setne  %al
		mov    %dl,_0cf43b_data
		mov    %al,_0cf47a_data

	_07b8f1_jump:
		pop    %edx
		ret    



_07b8f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000015,%edx
		call   _01d434_func
		mov    _0cf282_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		cmpb   $0x00000a,0x000076(%eax)
		jne    _07b928_jump
		movb   $0x000005,0x000076(%eax)
		jmp    _07b938_jump

	_07b928_jump:
		mov    $0x000017,%ebx
		xor    %edx,%edx
		movb   $0x000001,0x000076(%eax)
		call   _01d444_func

	_07b938_jump:
		mov    _0cc7a0_data,%edx
		mov    _0cc7a4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _07b99d_jump

	_07b94c_jump:
		cmpw   $0x0000de,0x000060(%edx)
		jne    _07b991_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _07b991_jump
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		movw   $0x000001,0x000042(%edx)
		mov    0x000081(%edx),%bl
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%bl
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		mov    %bl,0x000081(%edx)
		call   _01f3d4_func
		movb   $0x000004,0x000072(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07b991_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _07b94c_jump

	_07b99d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b9a4_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    _0cc7a0_data,%edx
		mov    _0cc7a4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _07ba08_jump

	_07b9bf_jump:
		cmpw   $0x0000dd,0x000060(%edx)
		jne    _07b9fc_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _07b9fc_jump
		movswl %cx,%eax
		sub    $0x00008e,%eax
		mov    %eax,0x000028(%edx)
		movswl %si,%eax
		sub    $0x000080,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f3d4_func
		orb    $0x000004,0x000081(%edx)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07b9fc_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _07b9bf_jump

	_07ba08_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07ba0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf272_data,%esi
		sar    $0x000010,%esi
		cmp    $0xffffffff,%esi
		jne    _07ba26_jump
		xor    %eax,%eax
		jmp    _07babc_jump

	_07ba26_jump:
		movswl %ax,%ecx
		lea    0x000032(%ecx),%edx
		mov    $0x000065,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %ax,%ebx
		mov    $0x000005,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		imul   $0x000065,%ebx,%eax
		add    %esi,%edx
		sub    %eax,%ecx
		movswl %dx,%edx
		mov    %ecx,%eax
		mov    $0x000033,%ecx
		test   %eax,%eax
		jge    _07ba60_jump
		neg    %eax

	_07ba60_jump:
		sub    %eax,%ecx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006a(%ebx),%al
		mov    _094cc6_data(,%eax,2),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00006b(%ebx),%al
		add    %eax,%edx
		mov    $0x00000e,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %dx,%eax
		mov    _094caa_data(,%eax,2),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    $0x000032,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    0x00002c(%ebx),%edx
		sub    %eax,%edx
		mov    %edx,%eax

	_07babc_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07bac4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ebx
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07bb6c_jump

	_07bae2_jump:
		cmpw   $0x000085,0x000060(%ecx)
		jne    _07bb5c_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07bb5c_jump
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f3d4_func
		mov    0x000028(%ebx),%eax
		mov    %eax,0x000028(%ecx)
		mov    $0x000002,%edx
		mov    0x00002c(%ebx),%ebx
		mov    %ecx,%eax
		mov    %ebx,0x00002c(%ecx)
		mov    $0x000012,%ebx
		call   _01d444_func
		mov    _0cf2ae_data,%di
		mov    0x000028(%ecx),%ax
		sub    %edi,%eax
		mov    %ax,0x000036(%ecx)
		mov    _0cf2b0_data,%dx
		mov    0x00002c(%ecx),%ax
		movw   $0x00fffe,0x000042(%ecx)
		sub    %edx,%eax
		mov    %ax,0x000038(%ecx)
		mov    %ecx,%eax
		movw   $0x000001,0x000040(%ecx)
		call   _01dc5c_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07bb5c_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _07bae2_jump

	_07bb6c_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07bb74_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc7a0_data,%eax
		mov    _0cc7a4_data,%cx
		xor    %ebx,%ebx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _07bbab_jump

	_07bb8f_jump:
		cmpw   $0x00004b,0x000060(%eax)
		jne    _07bba0_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _07bba0_jump
		mov    %eax,%ebx
		jmp    _07bbab_jump

	_07bba0_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %cx,%dx
		jl     _07bb8f_jump

	_07bbab_jump:
		test   %ebx,%ebx
		jne    _07bbbd_jump
		mov    $0x00004b,%eax
		call   _01d0f0_func
		mov    %eax,%ebx
		jmp    _07bbc4_jump

	_07bbbd_jump:
		mov    %ebx,%eax
		call   _01f3d4_func

	_07bbc4_jump:
		mov    0x000081(%ebx),%ah
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ebx)
		mov    0x000081(%ebx),%dl
		movw   $0x000000,0x00005e(%ebx)
		and    $0x0000bf,%dl
		mov    %dl,0x000081(%ebx)
		mov    0x000028(%esi),%eax
		sub    $0x000028,%eax
		mov    %eax,0x000028(%ebx)
		mov    0x00002c(%esi),%eax
		movb   $0x000000,0x00006a(%ebx)
		movb   $0x000001,0x00006b(%ebx)
		movb   $0x000000,0x00006d(%ebx)
		movb   $0x000000,0x00006f(%ebx)
		sub    $0x000014,%eax
		movb   $0x000000,0x00006e(%ebx)
		mov    %eax,0x00002c(%ebx)
		mov    %ebx,%eax
		movb   $0x000000,0x00006c(%ebx)
		call   _01dc5c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07bc28_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf220_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _07bc64_jump
		movw   $0x00ffff,_0cf222_data
		call   _057a14_func
		mov    _0cf220_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,4)

	_07bc64_jump:
		mov    _0cf238_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _07bca1_jump
		mov    $0xffffffff,%ebx
		mov    _0cc7a0_data,%eax
		mov    %bx,_0cf23a_data
		mov    -0x000003(%eax),%ch
		sub    $0x000084,%eax
		mov    $0x000004,%bh
		and    $0x0000fb,%ch
		mov    %bh,_0ce0ba_data
		mov    %bh,_0ce953_data
		mov    %ch,0x000081(%eax)

	_07bca1_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07bcb0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000050,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%edx
		mov    _0e6e70_data,%eax
		mov    %eax,0x000030(%esp)
		mov    0x000014(%eax),%eax
		xor    %ebx,%ebx
		mov    %eax,0x000044(%esp)
		mov    0x000030(%esp),%eax
		mov    %cx,%bx
		movw   $0x000000,(%eax)
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _07bce5_jump
		mov    %ebx,%eax

	_07bce5_jump:
		mov    0x000030(%esp),%ebx
		mov    %ax,0x000002(%ebx)
		test   %dx,%dx
		jl     _07bd02_jump
		mov    $0x000001,%eax
		movswl %dx,%ebx
		cmp    %ebx,%eax
		jge    _07bd00_jump
		mov    %ebx,%eax

	_07bd00_jump:
		jmp    _07bd14_jump

	_07bd02_jump:
		movswl %dx,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _07bd12_jump
		mov    %ebx,%eax

	_07bd12_jump:
		neg    %eax

	_07bd14_jump:
		mov    0x000030(%esp),%edx
		mov    %ax,0x00000c(%edx)
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     _07bd28_jump
		mov    %di,0x000004(%edx)

	_07bd28_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _07bd38_jump
		mov    0x000030(%esp),%eax
		mov    %si,0x000006(%eax)

	_07bd38_jump:
		mov    0x000030(%esp),%eax
		xor    %ebx,%ebx
		mov    0x00000e(%eax),%bx
		mov    $0x00013f,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000030(%esp),%eax
		mov    0x000002(%eax),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _07bd5b_jump
		mov    %ebx,%eax

	_07bd5b_jump:
		mov    0x000030(%esp),%ebx
		xor    %edx,%edx
		mov    0x00000e(%ebx),%dx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    0x000030(%esp),%edx
		cmp    %ebx,%eax
		jge    _07bd73_jump
		mov    %ebx,%eax

	_07bd73_jump:
		xor    %ebx,%ebx
		mov    0x00000e(%edx),%bx
		mov    %ax,0x000004(%edx)
		mov    $0x0000c7,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000004(%edx),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _07bd92_jump
		mov    %ebx,%eax

	_07bd92_jump:
		mov    0x000030(%esp),%ebx
		xor    %edx,%edx
		mov    0x00000e(%ebx),%dx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    0x000030(%esp),%edx
		cmp    %ebx,%eax
		jge    _07bdaa_jump
		mov    %ebx,%eax

	_07bdaa_jump:
		mov    %ax,0x000006(%edx)
		call   _080b8d_func
		and    $0x000007,%eax
		cmp    $0x000004,%eax
		jge    _07bdc1_jump
		mov    0x00000c(%edx),%ax
		jmp    _07bdc7_jump

	_07bdc1_jump:
		mov    0x00000c(%edx),%ax
		neg    %eax

	_07bdc7_jump:
		mov    0x000030(%esp),%edx
		mov    %ax,0x000008(%edx)
		call   _080b8d_func
		and    $0x000007,%eax
		cmp    $0x000004,%eax
		jge    _07bde2_jump
		mov    0x00000c(%edx),%ax
		jmp    _07bde8_jump

	_07bde2_jump:
		mov    0x00000c(%edx),%ax
		neg    %eax

	_07bde8_jump:
		mov    0x000030(%esp),%edx
		mov    %ax,0x00000a(%edx)
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     _07c096_jump
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _07c096_jump
		xor    %esi,%esi
		mov    0x00000e(%edx),%si
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		add    %eax,%eax
		call   _07f562_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x40590000,%edx
		xor    %eax,%eax
		call   _0800d8_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07f75f_func
		mov    %eax,0x000020(%esp)
		mov    %esi,%eax
		neg    %eax
		mov    %edx,0x000024(%esp)
		call   _07f562_func
		jmp    _07c068_jump

	_07be52_jump:
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07f75f_func
		mov    %edx,0x00002c(%esp)
		mov    0x000030(%esp),%edx
		mov    %eax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		neg    %eax
		call   _07f562_func
		jmp    _07c02e_jump

	_07be81_jump:
		mov    %esi,%eax
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07f75f_func
		mov    0x000028(%esp),%ebx
		mov    0x00002c(%esp),%ecx
		call   _07f5a8_func
		call   _07fd4a_func
		mov    %eax,0x00004c(%esp)
		mov    %edx,%ebp
		mov    0x000020(%esp),%eax
		mov    0x000024(%esp),%edx
		mov    0x00004c(%esp),%ebx
		mov    %ebp,%ecx
		call   _0802de_func
		call   _07f75f_func
		mov    0x00004c(%esp),%ebx
		mov    %ebp,%ecx
		call   _07f75f_func
		call   _084f10_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00004c(%esp),%eax
		mov    %ebp,%edx
		call   _07f75f_func
		mov    %eax,0x00000c(%esp)
		mov    %edx,0x000038(%esp)
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   _0853a4_func
		jne    _07bf20_jump
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		call   _0853a4_func
		jne    _07bf20_jump
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%ebp
		mov    %esi,0x000034(%esp)
		mov    %edi,0x00003c(%esp)
		mov    %eax,0x000040(%esp)
		jmp    _07bfdc_jump

	_07bf20_jump:
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _08571b_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _080091_func
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000008(%esp)
		mov    %ebx,%eax
		mov    %ecx,%edx
		call   _08006a_func
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    %eax,0x00001c(%esp)
		mov    %edx,(%esp)
		mov    0x00004c(%esp),%eax
		mov    %ebp,%edx
		call   _07f75f_func
		mov    0x00001c(%esp),%ebx
		mov    (%esp),%ecx
		mov    %eax,0x000010(%esp)
		mov    %edx,0x000014(%esp)
		mov    0x00000c(%esp),%eax
		mov    0x000038(%esp),%edx
		call   _07f75f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000010(%esp),%eax
		mov    0x000014(%esp),%edx
		call   _07f5a2_func
		mov    0x00001c(%esp),%ebx
		mov    (%esp),%ecx
		mov    %eax,0x000034(%esp)
		mov    %edx,0x00003c(%esp)
		mov    0x00004c(%esp),%eax
		mov    %ebp,%edx
		call   _07f75f_func
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    %eax,0x000014(%esp)
		mov    %edx,%ebp
		mov    0x00000c(%esp),%eax
		mov    0x000038(%esp),%edx
		call   _07f75f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000014(%esp),%eax
		mov    %ebp,%edx
		call   _07f5a8_func
		mov    %eax,0x000040(%esp)
		mov    %edx,%ebp

	_07bfdc_jump:
		mov    0x000034(%esp),%eax
		mov    0x00003c(%esp),%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07f5a2_func
		call   _07fdac_func
		mov    0x000044(%esp),%edx
		mov    0x000048(%esp),%ebx
		mov    0x000018(%esp),%ecx
		mov    %al,(%edx)
		mov    0x000040(%esp),%eax
		mov    %ebp,%edx
		call   _07f5a2_func
		call   _07fdac_func
		mov    0x000044(%esp),%edx
		add    $0x000002,%edx
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		mov    %al,-0x000001(%edx)
		mov    %edx,0x000044(%esp)
		mov    %esi,%eax
		mov    %edi,%edx
		call   _07f5a8_func

	_07c02e_jump:
		mov    %eax,%esi
		mov    %edx,%edi
		mov    0x000030(%esp),%edx
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		call   _07f56f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   _0853a4_func
		jle    _07be81_jump
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		call   _07f5a8_func

	_07c068_jump:
		mov    %eax,0x000048(%esp)
		mov    %edx,0x000018(%esp)
		mov    0x000030(%esp),%edx
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		call   _07f56f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		call   _0853a4_func
		jle    _07be52_jump

	_07c096_jump:
		add    $0x000050,%esp
		pop    %ebp
		pop    %edi
		pop    %esi

	_07c09c_jump:
		ret    

	_07c0a0_case:
		mov    _0e6e70_data,%eax
		test   %eax,%eax
		je     _07c09c_jump
		cmpl   $0x000000,0x000014(%eax)
		je     _07c0b7_jump
		add    $0x000014,%eax
		call   _07f44c_func

	_07c0b7_jump:
		cmpl   $0x000000,_0e6e70_data
		je     _07c09c_jump
		mov    $_0e6e70_data,%eax
		jmp    _07f44c_func



_07c0cc_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    0x000020(%esp),%esi
		mov    %ax,0x000004(%esp)
		mov    %dx,0x000008(%esp)
		mov    %cx,(%esp)
		xor    %ah,%ah
		mov    %ah,0x00000c(%esp)
		test   %esi,%esi
		je     _07c197_jump
		cmpl   $0x000000,0x000024(%esp)
		je     _07c197_jump
		mov    $0x000020,%eax
		call   _07f434_func
		mov    %eax,%edx
		mov    %eax,_0e6e70_data
		test   %eax,%eax
		je     _07c197_jump
		xor    %eax,%eax
		mov    %bx,%ax
		mov    $0x000030,%ebx
		cmp    %ebx,%eax
		jle    _07c125_jump
		mov    %ebx,%eax

	_07c125_jump:
		mov    %eax,%ebx
		mov    $0x000008,%eax
		cmp    %ebx,%eax
		jge    _07c132_jump
		mov    %ebx,%eax

	_07c132_jump:
		mov    %ax,0x00000e(%edx)
		add    %eax,%eax
		inc    %eax
		mov    %ax,0x000010(%edx)
		mov    0x00000e(%edx),%ax
		add    %eax,%eax
		mov    $0x00fa00,%ecx
		inc    %eax
		mov    _0ccad8_data,%edi
		mov    %ax,0x000012(%edx)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07c15d_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07c15d_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _07c166_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_07c166_jump:
		mov    _0ccad8_data,%eax
		mov    %eax,0x000018(%edx)
		mov    0x000024(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x00001c(%edx)
		xor    %eax,%eax
		mov    0x000012(%edx),%bx
		mov    0x000010(%edx),%ax
		imul   %ebx,%eax
		add    %eax,%eax
		call   _07f434_func
		mov    %eax,0x000014(%edx)
		test   %eax,%eax
		je     _07c197_jump
		movb   $0x000001,0x00000c(%esp)

	_07c197_jump:
		cmpb   $0x000000,0x00000c(%esp)
		je     _07c1c1_jump
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%edx
		xor    %ecx,%ecx
		mov    0x000002(%esp),%eax
		mov    0x00001c(%esp),%cx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _07bcb0_func
		jmp    _07c1c6_jump

	_07c1c1_jump:
		call   _07c0a0_case

	_07c1c6_jump:
		mov    0x00000c(%esp),%al
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_07c1d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e6e70_data,%edx
		mov    0x000008(%edx),%ax
		add    %ax,0x000004(%edx)
		mov    0x000006(%edx),%cx
		mov    0x00000a(%edx),%ax
		mov    0x000002(%edx),%ebx
		add    %eax,%ecx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		add    %ebx,%eax
		mov    %cx,0x000006(%edx)
		cmp    $0x000140,%eax
		jl     _07c223_jump
		mov    $0x00013f,%ebx
		mov    0x00000e(%edx),%ax
		mov    0x000008(%edx),%si
		sub    %eax,%ebx
		neg    %esi
		mov    %bx,0x000004(%edx)
		mov    %si,0x000008(%edx)

	_07c223_jump:
		mov    0x000002(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jge    _07c243_jump
		mov    0x000008(%edx),%di
		mov    %ax,0x000004(%edx)
		neg    %edi
		mov    %di,0x000008(%edx)

	_07c243_jump:
		mov    0x000004(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		add    %ebx,%eax
		cmp    $0x0000c8,%eax
		jl     _07c271_jump
		mov    $0x0000c7,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		mov    0x00000a(%edx),%ax
		mov    %bx,0x000006(%edx)
		neg    %eax
		mov    %ax,0x00000a(%edx)

	_07c271_jump:
		mov    0x000004(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jge    _07c291_jump
		mov    0x00000a(%edx),%bx
		mov    %ax,0x000006(%edx)
		neg    %ebx
		mov    %bx,0x00000a(%edx)

	_07c291_jump:
		mov    0x00000a(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _07c29d_jump
		neg    %eax

	_07c29d_jump:
		mov    (%edx),%cx
		add    %eax,%ecx
		mov    0x000002(%edx),%si
		mov    %cx,(%edx)
		cmp    %si,%cx
		jbe    _07c2b3_jump
		movw   $0x000000,(%edx)

	_07c2b3_jump:
		mov    (%edx),%ax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c2bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0e6e70_data,%ebp
		mov    $0x00fa00,%ecx
		xor    %ebx,%ebx
		mov    0x00001c(%ebp),%edi
		mov    0x000018(%ebp),%esi
		mov    0x000014(%ebp),%edx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07c2e5_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07c2e5_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _07c2ee_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_07c2ee_jump:
		mov    0x000002(%ebp),%eax
		mov    0x000004(%ebp),%ecx
		mov    0x00000e(%ebp),%bx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sub    %ebx,%ecx
		sub    %ebx,%eax
		mov    %ecx,%ebx
		mov    %ecx,0x000004(%esp)
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000018(%ebp),%esi
		mov    0x00001c(%ebp),%ecx
		add    %eax,%esi
		add    %eax,%ecx
		xor    %eax,%eax
		mov    $0x000140,%ebx
		mov    0x000010(%ebp),%ax
		sub    %eax,%ebx
		mov    %ebx,(%esp)
		xor    %ebx,%ebx
		mov    %ebx,0x000004(%esp)
		jmp    _07c370_jump

	_07c334_jump:
		xor    %edi,%edi
		jmp    _07c356_jump

	_07c338_jump:
		movsbl 0x000001(%edx),%ebx
		movsbl (%edx),%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		inc    %esi
		inc    %ecx
		add    $0x000002,%edx
		mov    -0x000001(%esi,%eax,1),%al
		inc    %edi
		mov    %al,-0x000001(%ecx)

	_07c356_jump:
		xor    %eax,%eax
		mov    0x000010(%ebp),%ax
		cmp    %eax,%edi
		jl     _07c338_jump
		mov    0x000004(%esp),%edi
		mov    (%esp),%eax
		inc    %edi
		add    %eax,%esi
		add    %eax,%ecx
		mov    %edi,0x000004(%esp)

	_07c370_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x000012(%ebp),%ax
		cmp    %edi,%eax
		jg     _07c334_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c390_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		cmp    $0x000001,%al
		ja     _07c442_jump
		test   %al,%al
		jne    _07c3ad_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _07c3b4_jump

	_07c3ad_jump:
		orb    $0x000008,0x000081(%ecx)

	_07c3b4_jump:
		mov    %ecx,%eax
		call   _0552b4_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _07c3cf_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d444_func

	_07c3cf_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024f68_func
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _07c434_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _07c407_jump
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		or     $0x000008,%ah
		mov    $0x000005,%edx
		mov    %ah,0x000081(%ecx)
		jmp    _07c41f_jump

	_07c407_jump:
		mov    0x000081(%ecx),%al
		mov    $0x000001,%ebx
		and    $0x0000f7,%al
		mov    $0x000004,%edx
		mov    %al,0x000081(%ecx)

	_07c41f_jump:
		mov    %ecx,%eax
		call   _060460_func
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)

	_07c434_jump:
		mov    %ecx,%eax
		call   _0552b4_func
		mov    %ecx,%eax
		call   _025590_func

	_07c442_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c448_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000003,0x00006c(%eax)
		jne    _07c471_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%al
		mov    %al,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07c471_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000001,%al
		jbe    _07c494_jump
		cmp    $0x000014,%al
		jne    _07c5e9_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07c494_jump:
		test   %al,%al
		jne    _07c4a1_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _07c4a8_jump

	_07c4a1_jump:
		orb    $0x000008,0x000081(%ecx)

	_07c4a8_jump:
		mov    %ecx,%eax
		call   _0552b4_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _07c4c3_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d444_func

	_07c4c3_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024f68_func
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		je     _07c4ff_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _07c4e9_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _07c4f0_jump

	_07c4e9_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_07c4f0_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _07c570_jump

	_07c4ff_jump:
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01d6f4_func
		test   %ax,%ax
		je     _07c57f_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _02f310_func
		test   %ax,%ax
		je     _07c57f_jump
		cmpw   $0x000028,0x000060(%ecx)
		jne    _07c57f_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _07c54d_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _07c554_jump

	_07c54d_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_07c554_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _07c566_jump
		mov    $0x000001,%ebx
		mov    $0x000009,%edx
		jmp    _07c570_jump

	_07c566_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_07c570_jump:
		mov    %ecx,%eax
		call   _060460_func
		movb   $0x000005,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)

	_07c57f_jump:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000074(%ecx),%al
		add    %edx,%eax
		test   %eax,%eax
		jl     _07c59b_jump
		xor    %eax,%eax
		mov    0x000065(%ecx),%al
		testb  $0x000010,_0924f4_data(%eax)
		je     _07c59f_jump

	_07c59b_jump:
		incw   0x000042(%ecx)

	_07c59f_jump:
		mov    %ecx,%eax
		call   _0552b4_func
		cmpb   $0x000002,0x00006d(%ecx)
		je     _07c5b7_jump
		mov    %ecx,%eax
		call   _025590_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07c5b7_jump:
		mov    0x00006c(%ecx),%bl
		cmp    $0x000001,%bl
		je     _07c5c4_jump
		cmp    $0x000003,%bl
		jne    _07c5e9_jump

	_07c5c4_jump:
		mov    0x000081(%ecx),%dh
		lea    0x000081(%ecx),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_07c5e9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c5f0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e7ac_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _07c617_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		andb   $0x0000ef,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_07c617_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _060460_func
		movb   $0x000007,0x000072(%ecx)
		mov    _0ce0d0_data,%eax
		movb   $0x000002,0x000073(%ecx)
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _07c648_jump
		andb   $0x0000f7,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_07c648_jump:
		jge    _07c651_jump
		orb    $0x000008,0x000081(%ecx)

	_07c651_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07c654_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x000060(%esi),%dx
		xor    %al,%al
		cmp    $0x000024,%dx
		jne    _07c68e_jump
		mov    0x00007f(%esi),%ah
		test   %ah,%ah
		je     _07c67d_jump
		cmpb   $0x000000,_0cf3f0_data
		jne    _07c67d_jump
		mov    %ah,%dh
		dec    %dh
		mov    %dh,0x00007f(%esi)

	_07c67d_jump:
		cmpb   $0x000000,0x00007f(%esi)
		jne    _07c68e_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _07cd3c_func
		mov    $0x000001,%al

	_07c68e_jump:
		test   %al,%al
		jne    _07c6d9_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _024f68_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000001,_0924f4_data(%edx)
		je     _07c6b9_jump
		mov    $0xffffffff,%edx
		mov    %esi,%eax
		call   _07cd3c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07c6b9_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _07c6d9_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _07c6d9_jump
		lea    0x000042(%esi),%ebx
		push   $0x000003
		lea    0x000040(%esi),%edx
		mov    $0x00001e,%ecx
		mov    %esi,%eax
		call   _01e7cc_func

	_07c6d9_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c6e0_func:
		push   %ebx
		push   %edx
		xor    %dl,%dl
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07c6fd_jump
		mov    0x00006c(%eax),%bl
		test   %bl,%bl
		je     _07c6fb_jump
		cmp    $0x00000e,%bl
		je     _07c6fb_jump
		cmp    $0x000008,%bl
		jne    _07c6fd_jump

	_07c6fb_jump:
		mov    $0x000001,%dl

	_07c6fd_jump:
		mov    %dl,%al
		pop    %edx
		pop    %ebx
		ret    



_07c704_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		call   _07c6e0_func
		test   %al,%al
		je     _07c74c_jump
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01dbe4_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _07c74c_jump
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _060460_func

	_07c74c_jump:
		xor    %eax,%eax
		mov    _0ce06c_data,%edx
		mov    _0ce0ac_data,%al
		mov    0x000028(%ecx),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%ecx),%dl
		sub    %edx,%eax
		test   %eax,%eax
		jge    _07c76d_jump
		neg    %eax

	_07c76d_jump:
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce070_data,%edi
		mov    _0ce0ad_data,%al
		lea    (%eax,%edi,1),%edx
		mov    0x00002c(%ecx),%ebp
		xor    %eax,%eax
		sub    %ebp,%edx
		mov    0x000069(%ecx),%al
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _07c793_jump
		neg    %eax

	_07c793_jump:
		mov    %eax,%edx
		mov    0x00006d(%ecx),%ah
		cmp    $0x000002,%ah
		je     _07c851_jump
		cmp    $0x000001,%ah
		je     _07c851_jump
		test   %ah,%ah
		jne    _07c7ec_jump
		cmpb   $0x00000b,0x00006c(%ecx)
		jne    _07c7ec_jump
		mov    %ecx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _07c7ec_jump
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d444_func
		movw   $0x00fff9,0x000042(%ecx)
		movb   $0x000000,0x000071(%ecx)
		mov    0x00002c(%ecx),%eax
		movb   $0x000004,0x000072(%ecx)
		sub    $0x00000e,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _07c851_jump

	_07c7ec_jump:
		mov    0x00007b(%ecx),%ah
		xor    %esi,%esi
		test   %ah,%ah
		je     _07c843_jump
		cmp    $0x0000aa,%bx
		jge    _07c806_jump
		cmp    $0x000026,%dx
		jge    _07c806_jump
		movb   $0x000001,0x00007d(%ecx)

	_07c806_jump:
		mov    %ecx,%eax
		call   _07c6e0_func
		test   %al,%al
		je     _07c843_jump
		cmp    $0x00005f,%bx
		jge    _07c82e_jump
		cmp    $0x000032,%dx
		jge    _07c82e_jump
		cmpb   $0x000000,0x00007f(%ecx)
		jne    _07c82e_jump
		mov    $0x000001,%esi
		movb   $0x000064,0x00007f(%ecx)
		jmp    _07c843_jump

	_07c82e_jump:
		cmpb   $0x000000,0x00007d(%ecx)
		je     _07c843_jump
		mov    0x00007f(%ecx),%bl
		test   %bl,%bl
		jne    _07c843_jump
		mov    $0xffffffff,%esi
		mov    %bl,0x00007d(%ecx)

	_07c843_jump:
		cmpw   $0x000000,0x000040(%ecx)
		jne    _07c851_jump
		mov    %ecx,%eax
		call   _07d55c_func

	_07c851_jump:
		mov    0x00007f(%ecx),%bh
		test   %bh,%bh
		je     _07c85f_jump
		mov    %bh,%al
		dec    %al
		mov    %al,0x00007f(%ecx)

	_07c85f_jump:
		cmpw   $0x000000,0x000040(%ecx)
		jne    _07c86f_jump
		test   %si,%si
		je     _07c955_jump

	_07c86f_jump:
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01d6f4_func
		test   %ax,%ax
		je     _07c89a_jump
		mov    $0x000001,%ebx
		mov    $0x00000e,%edx
		jmp    _07c94e_jump

	_07c89a_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024f68_func
		and    $_0000ff_case,%eax
		testb  $0x000001,_0924f4_data(%eax)
		jne    _07c8d3_jump
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %edx,%eax
		cmp    $0x000020,%eax
		jl     _07c8d3_jump
		mov    _0cf284_data,%edx
		sar    $0x000010,%edx
		add    $0x00010c,%edx
		cmp    %edx,%eax
		jle    _07c926_jump

	_07c8d3_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		setne  %al
		and    $_0000ff_case,%eax
		je     _07c926_jump
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%ebx
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    0x00007b(%ecx),%al
		mov    %ebx,0x000028(%ecx)
		test   %al,%al
		je     _07c90d_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _060460_func
		movb   $0x000000,0x00006b(%ecx)
		jmp    _07c91e_jump

	_07c90d_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _060460_func

	_07c91e_jump:
		movw   $0x000000,0x000040(%ecx)
		jmp    _07c955_jump

	_07c926_jump:
		mov    0x00006d(%ecx),%bl
		cmp    $0x000001,%bl
		je     _07c955_jump
		cmp    $0x000002,%bl
		je     _07c955_jump
		test   %si,%si
		jge    _07c944_jump
		mov    $0x000001,%ebx
		mov    $0x00000d,%edx
		jmp    _07c94e_jump

	_07c944_jump:
		mov    $0x000001,%ebx
		mov    $0x000011,%edx

	_07c94e_jump:
		mov    %ecx,%eax
		call   _060460_func

	_07c955_jump:
		mov    %ecx,%eax
		call   _0552b4_func
		cmpb   $0x000002,0x00006d(%ecx)
		je     _07c969_jump
		mov    %ecx,%eax
		call   _025590_func

	_07c969_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c970_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _07c6e0_func
		test   %al,%al
		je     _07c9ce_jump
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01dbe4_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _07c9b5_jump
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _060460_func

	_07c9b5_jump:
		mov    0x00007f(%ecx),%dh
		test   %dh,%dh
		jne    _07c9c5_jump
		mov    %ecx,%eax
		call   _07d55c_func
		jmp    _07c9e5_jump

	_07c9c5_jump:
		mov    %dh,%bl
		dec    %bl
		mov    %bl,0x00007f(%ecx)
		jmp    _07c9e5_jump

	_07c9ce_jump:
		mov    %ecx,%eax
		call   _07d55c_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _07c9e5_jump
		cmpb   $0x000009,0x00006c(%ecx)
		jne    _07c9e5_jump
		movb   $0x0000fa,0x00007f(%ecx)

	_07c9e5_jump:
		mov    %ecx,%eax
		call   _025590_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c9f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000070(%eax),%al
		test   %al,%al
		jbe    _07ca05_jump
		cmp    $0x000001,%al
		je     _07ca58_jump
		jmp    _07ca9e_jump

	_07ca05_jump:
		mov    0x000081(%edx),%bh
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%edx)
		call   _0552b4_func
		mov    0x00006c(%edx),%al
		cmp    $0x00000b,%al
		jb     _07ca30_jump
		jbe    _07caa4_jump
		cmp    $0x00000d,%al
		je     _07ca44_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ca30_jump:
		cmp    $0x000009,%al
		jne    _07caaa_jump

	_07ca38_jump:
		mov    0x000040(%edx),%ax
		mov    %ax,0x000042(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ca44_jump:
		mov    0x000040(%edx),%ax
		mov    %eax,%ecx
		mov    %ax,0x000042(%edx)
		neg    %ecx
		mov    %cx,0x000042(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ca58_jump:
		orb    $0x000008,0x000081(%edx)
		mov    %edx,%eax
		call   _0552b4_func
		mov    0x000081(%edx),%bl
		and    $0x0000f7,%bl
		mov    0x00006c(%edx),%al
		mov    %bl,0x000081(%edx)
		cmp    $0x00000c,%al
		jb     _07ca86_jump
		jbe    _07caa4_jump
		cmp    $0x00000e,%al
		je     _07ca38_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ca86_jump:
		cmp    $0x00000a,%al
		jne    _07caaa_jump
		mov    0x000040(%edx),%ax
		mov    %eax,%ebx
		mov    %ax,0x000042(%edx)
		neg    %ebx
		mov    %bx,0x000042(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ca9e_jump:
		movw   $0x000000,0x000040(%edx)

	_07caa4_jump:
		movw   $0x000000,0x000042(%edx)

	_07caaa_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_07cab0_switch:
		.long   _07cb1b_case
		.long   _07cb57_case
		.long   _07cb8b_case
		.long   _07cbb7_case
		.long   _07cbdd_case
		.long   _07cc16_case




_07cac8_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%ecx
		mov    %ebx,%esi
		cmpb   $0x000000,(%ebx)
		jne    _07cc76_jump
		xor    %ebx,%ebx
		mov    0x000028(%eax),%edi
		mov    0x000068(%eax),%bl
		add    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		sub    %ebx,%edi
		xor    %ebx,%ebx
		mov    %edi,0x000028(%ecx)
		mov    0x000069(%eax),%bl
		mov    0x00002c(%eax),%edx
		xor    %eax,%eax
		add    %edx,%ebx
		mov    0x000069(%ecx),%al
		sub    %eax,%ebx
		mov    0x00006c(%ecx),%al
		sub    $0x000009,%al
		mov    %ebx,0x00002c(%ecx)
		cmp    $0x000005,%al
		ja     _07cc48_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_07cab0_switch(,%eax,4)

	_07cb1b_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000003,%edi
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%ebp
		mov    0x000069(%ecx),%bl
		sub    %eax,%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edx
		add    %ebx,%eax
		mov    %ebp,0x000028(%ecx)
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _07cc48_jump

	_07cb57_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		add    %eax,0x000028(%ecx)
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		mov    $0x000003,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edi
		add    %ebx,%eax
		sub    %eax,%edi
		jmp    _07cc45_jump

	_07cb8b_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000028(%ecx),%ebp
		sub    %ebx,%eax
		sub    %eax,%ebp
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		mov    %ebp,0x000028(%ecx)
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _07cc48_jump

	_07cbb7_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		mov    0x000028(%ecx),%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edi
		mov    0x000069(%ecx),%al
		mov    %ebx,0x000028(%ecx)
		sub    %eax,%edi
		jmp    _07cc45_jump

	_07cbdd_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000003,%edi
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%ebp
		mov    0x000069(%ecx),%bl
		sub    %eax,%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edx
		sub    %ebx,%eax
		mov    %ebp,0x000028(%ecx)
		add    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _07cc48_jump

	_07cc16_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		add    %eax,0x000028(%ecx)
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		mov    $0x000003,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edi
		sub    %ebx,%eax
		add    %eax,%edi

	_07cc45_jump:
		mov    %edi,0x00002c(%ecx)

	_07cc48_jump:
		mov    %ecx,%eax
		call   _01dc5c_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f3d4_func
		andb   $0x0000bf,0x000081(%ecx)
		movb   $0x000001,(%esi)

	_07cc76_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07cc7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		mov    %ah,0x000008(%esp)
		mov    %ah,0x000014(%esp)
		cmpw   $0x000000,0x000040(%esi)
		setg   %bl
		test   %bl,%bl
		jbe    _07cca7_jump
		cmp    $0x000001,%bl
		je     _07ccbb_jump
		jmp    _07cccd_jump

	_07cca7_jump:
		mov    $0x00000c,%al
		mov    $0x00000a,%ch
		mov    %al,0x000018(%esp)
		mov    $0x00000e,%ah
		mov    %ch,0x00000c(%esp)
		mov    %ah,0x000010(%esp)
		jmp    _07cccd_jump

	_07ccbb_jump:
		mov    $0x000009,%bl
		mov    $0x00000d,%cl
		mov    %bl,0x00000c(%esp)
		mov    $0x00000b,%bh
		mov    %cl,0x000010(%esp)
		mov    %bh,0x000018(%esp)

	_07cccd_jump:
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%bx
		xor    %edi,%edi
		mov    %ebx,(%esp)
		test   %bx,%bx
		jle    _07cd30_jump

	_07cce4_jump:
		cmpw   $0x00004f,0x000060(%ecx)
		jne    _07cd21_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07cd21_jump
		mov    0x00000c(%esp),%dl
		mov    0x00006c(%ecx),%bl
		cmp    %dl,%bl
		jne    _07cd02_jump
		lea    0x000014(%esp),%ebx
		jmp    _07cd18_jump

	_07cd02_jump:
		cmp    0x000018(%esp),%bl
		jne    _07cd0e_jump
		lea    0x000008(%esp),%ebx
		jmp    _07cd18_jump

	_07cd0e_jump:
		cmp    0x000010(%esp),%bl
		jne    _07cd21_jump
		lea    0x000004(%esp),%ebx

	_07cd18_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _07cac8_func

	_07cd21_jump:
		mov    (%esp),%eax
		inc    %edi
		add    $0x000084,%ecx
		cmp    %ax,%di
		jl     _07cce4_jump

	_07cd30_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07cd3c_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _07cd55_jump
		mov    $0x000001,%edx
		mov    %ebx,%eax
		call   _01d434_func

	_07cd55_jump:
		mov    $0x000054,%eax
		call   _072210_func
		cmpl   $0x000000,0x000024(%ebx)
		je     _07cddf_jump
		cmpb   $0x000002,0x00006d(%ebx)
		jne    _07cda7_jump
		cmpb   $0x000001,0x00006c(%ebx)
		jne    _07cda7_jump
		mov    0x000028(%ebx),%ecx
		movw   $0x00ffff,0x000040(%ebx)
		add    $0x000014,%ecx
		mov    %ebx,%eax
		mov    %ecx,0x000028(%ebx)
		call   _07cc7c_func
		mov    0x000028(%ebx),%esi
		movw   $0x000001,0x000040(%ebx)
		sub    $0x000014,%esi
		mov    %ebx,%eax
		mov    %esi,0x000028(%ebx)
		call   _07cc7c_func
		addl   $0x00000a,0x000028(%ebx)
		jmp    _07cdae_jump

	_07cda7_jump:
		mov    %ebx,%eax
		call   _07cc7c_func

	_07cdae_jump:
		mov    0x000060(%ebx),%dx
		movl   $0x000000,0x000024(%ebx)
		cmp    $0x000024,%dx
		jne    _07cdc8_jump
		andb   $0x0000fb,0x000081(%ebx)
		jmp    _07cdd8_jump

	_07cdc8_jump:
		mov    _0cf2ae_data,%eax
		sar    $0x000010,%eax
		add    $0x0001e4,%eax
		mov    %eax,0x00002c(%ebx)

	_07cdd8_jump:
		mov    %ebx,%eax
		call   _07abbc_func

	_07cddf_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07cde4_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%ecx
		mov    %bl,0x000010(%esp)
		cmpw   $0x000023,0x000060(%eax)
		jne    _07cfcc_jump
		mov    _0cc7a0_data,%esi
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07d134_jump

	_07ce15_jump:
		cmpw   $0x000024,0x000060(%esi)
		jne    _07cfb5_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _07cfb5_jump
		mov    0x000010(%esp),%bh
		movb   $0x0000c8,0x00007f(%esi)
		test   %bh,%bh
		je     _07ce59_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _07ce7e_jump

	_07ce59_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_07ce7e_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    %cx,0x000042(%esi)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		movsbw (%eax,%edx,8),%ax
		testb  $0x000008,0x000081(%esi)
		je     _07cea7_jump
		cwtl   
		jmp    _07ceaa_jump

	_07cea7_jump:
		cwtl   
		neg    %eax

	_07ceaa_jump:
		mov    $0x00007a,%ecx
		mov    %ax,0x000040(%esi)
		xor    %eax,%eax
		mov    $0x000035,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _07cecc_jump
		cmp    %ecx,%eax
		jg     _07cecc_jump
		mov    $0x000001,%eax
		jmp    _07cece_jump

	_07cecc_jump:
		xor    %eax,%eax

	_07cece_jump:
		test   %eax,%eax
		je     _07ced9_jump
		mov    $0x000003,%eax
		jmp    _07cf04_jump

	_07ced9_jump:
		mov    $0x000090,%ecx
		mov    $0x00007b,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _07cef5_jump
		cmp    %ecx,%eax
		jg     _07cef5_jump
		mov    $0x000001,%eax
		jmp    _07cef7_jump

	_07cef5_jump:
		xor    %eax,%eax

	_07cef7_jump:
		test   %eax,%eax
		je     _07ceff_jump
		xor    %eax,%eax
		jmp    _07cf04_jump

	_07ceff_jump:
		mov    $0xffffffff,%eax

	_07cf04_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _07d134_jump
		lea    0x000008(%esp),%eax
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%ebx
		mov    %edi,%eax
		call   _01d7e0_func
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		xor    %eax,%eax
		mov    0x00000a(%esp),%edx
		mov    0x000074(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000028(%esi),%ax
		mov    %edx,0x00002c(%esi)
		mov    %ax,0x00003c(%esi)
		mov    $0x000002,%ebx
		mov    0x00002c(%esi),%ax
		mov    %ebx,%edx
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		call   _01d444_func
		mov    %esi,%eax
		call   _0552b4_func
		mov    %esi,%eax
		call   _01dc5c_func
		movb   $0x000000,0x000071(%esi)
		movb   $0x000007,0x000072(%esi)
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f3d4_func
		andb   $0x0000bf,0x000081(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07cfb5_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _07ce15_jump
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07cfcc_jump:
		mov    _0cc7a0_data,%esi
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07d134_jump

	_07cfe4_jump:
		cmpw   $0x00002c,0x000060(%esi)
		jne    _07d124_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _07d124_jump
		mov    0x000032(%esi),%edx
		mov    $0x00005a,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		cmpb   $0x000000,0x000010(%esp)
		je     _07d033_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _07d058_jump

	_07d033_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_07d058_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %cx,0x000042(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbw (%edx,%eax,8),%ax
		testb  $0x000008,0x000081(%esi)
		je     _07d081_jump
		cwtl   
		jmp    _07d084_jump

	_07d081_jump:
		cwtl   
		neg    %eax

	_07d084_jump:
		mov    %ax,0x000040(%esi)
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000007,%edx
		mov    %edi,%eax
		call   _01d7e0_func
		mov    -0x000002(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000006,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _060460_func
		mov    %esi,%eax
		call   _01dc5c_func
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f3d4_func
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07d124_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _07cfe4_jump

	_07d134_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07d13c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _07c390_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _07d1fe_jump
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _07d15c_jump
		cmpb   $0x000090,0x00006b(%ecx)
		jae    _07d162_jump

	_07d15c_jump:
		movw   $0x000000,0x000052(%ecx)

	_07d162_jump:
		mov    0x00006c(%ecx),%bl
		cmp    $0x000001,%bl
		je     _07d16f_jump
		cmp    $0x000002,%bl
		jne    _07d19d_jump

	_07d16f_jump:
		mov    %ecx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _07d19d_jump
		cmpb   $0x000000,0x00007b(%ecx)
		je     _07d18c_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _07d196_jump

	_07d18c_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_07d196_jump:
		mov    %ecx,%eax
		call   _060460_func

	_07d19d_jump:
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _07d204_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _07d204_jump
		cmpb   $0x000090,0x00006b(%ecx)
		jne    _07d204_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _07d204_jump
		mov    $0x000001,%ebx
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		call   _07cde4_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07d1fe_jump:
		movw   $0x000000,0x000052(%ecx)

	_07d204_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d208_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _07c390_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _07d2b4_jump
		cmpb   $0x000006,0x00006c(%ecx)
		je     _07d228_jump
		movw   $0x000000,0x000052(%ecx)

	_07d228_jump:
		mov    0x00006c(%ecx),%dh
		cmp    $0x000001,%dh
		je     _07d235_jump
		cmp    $0x000006,%dh
		jne    _07d263_jump

	_07d235_jump:
		mov    %ecx,%eax
		call   _01cca0_func
		test   %al,%al
		je     _07d263_jump
		cmpb   $0x000000,0x00007b(%ecx)
		je     _07d252_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _07d25c_jump

	_07d252_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_07d25c_jump:
		mov    %ecx,%eax
		call   _060460_func

	_07d263_jump:
		cmpb   $0x000006,0x00006c(%ecx)
		jne    _07d2ba_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _07d2ba_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		dec    %eax
		xor    %edx,%edx
		mov    _0cf3ee_data(%eax),%dl
		cmp    %eax,%edx
		jne    _07d2ba_jump
		mov    $0x000001,%ebx
		xor    %eax,%edx
		mov    %ecx,%eax
		call   _07cde4_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07d2b4_jump:
		movw   $0x000000,0x000052(%ecx)

	_07d2ba_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d2c0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    %eax,%edi
		mov    %edx,0x000018(%esp)
		mov    _0cc7a0_data,%esi
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07d553_jump

	_07d2e5_jump:
		cmpw   $0x000024,0x000060(%esi)
		jne    _07d543_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _07d543_jump
		mov    0x000018(%esp),%ecx
		movb   $0x0000c8,0x00007f(%esi)
		test   %cx,%cx
		je     _07d32a_jump
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000081(%esi)
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _07d34f_jump

	_07d32a_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_07d34f_jump:
		mov    0x00006d(%edi),%al
		mov    $0xffffffff,%edx
		test   %al,%al
		jne    _07d387_jump
		cmpb   $0x00000d,0x00006c(%edi)
		jne    _07d387_jump
		mov    $0x000065,%ecx
		xor    %eax,%eax
		mov    $0x000034,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _07d37f_jump
		cmp    %ecx,%eax
		jg     _07d37f_jump
		mov    $0x000001,%eax
		jmp    _07d381_jump

	_07d37f_jump:
		xor    %eax,%eax

	_07d381_jump:
		test   %eax,%eax
		je     _07d3bc_jump
		jmp    _07d3b7_jump

	_07d387_jump:
		cmpb   $0x000000,0x00006d(%edi)
		jne    _07d3bc_jump
		cmpb   $0x000009,0x00006c(%edi)
		jne    _07d3bc_jump
		mov    $0x000037,%ecx
		xor    %eax,%eax
		mov    $0x000010,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _07d3b1_jump
		cmp    %ecx,%eax
		jg     _07d3b1_jump
		mov    $0x000001,%eax
		jmp    _07d3b3_jump

	_07d3b1_jump:
		xor    %eax,%eax

	_07d3b3_jump:
		test   %eax,%eax
		je     _07d3bc_jump

	_07d3b7_jump:
		mov    $0x000003,%edx

	_07d3bc_jump:
		movswl %dx,%edx
		cmp    $0xffffffff,%edx
		je     _07d553_jump
		lea    0x00000c(%esp),%eax
		push   %eax
		lea    0x000014(%esp),%eax
		lea    0x000018(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%ebx
		mov    %edi,%eax
		call   _01d7e0_func
		mov    0x000018(%esp),%eax
		cmp    $0x000001,%ax
		jb     _07d3f5_jump
		jbe    _07d40f_jump
		cmp    $0x000002,%ax
		je     _07d419_jump
		jmp    _07d448_jump

	_07d3f5_jump:
		test   %ax,%ax
		jne    _07d448_jump
		mov    $0xfffffffe,%edx
		mov    _0ce173_data,%al
		mov    %edx,0x000004(%esp)
		dec    %al
		add    %al,0x000076(%edi)
		jmp    _07d448_jump

	_07d40f_jump:
		movl   $0x000001,0x000004(%esp)
		jmp    _07d448_jump

	_07d419_jump:
		cmpb   $0x000002,_0ce0b1_data
		jne    _07d434_jump
		mov    _0cf290_data,%ax
		mov    %ax,0x00004e(%esi)
		mov    _0cf28e_data,%ax
		jmp    _07d444_jump

	_07d434_jump:
		mov    _0ce06c_data,%ax
		mov    %ax,0x00004e(%esi)
		mov    _0ce070_data,%ax

	_07d444_jump:
		mov    %ax,0x00004c(%esi)

	_07d448_jump:
		mov    0x000006(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		xor    %eax,%eax
		mov    0x000012(%esp),%edx
		mov    0x000074(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000028(%esi),%ax
		mov    %edx,0x00002c(%esi)
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    0x000018(%esp),%ebx
		mov    %ax,0x00003e(%esi)
		cmp    $0x000002,%bx
		je     _07d4d7_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000081(%esi),%dl
		movsbw (%ebx,%eax,1),%ax
		test   $0x000008,%dl
		je     _07d4bf_jump
		cwtl   
		jmp    _07d4c2_jump

	_07d4bf_jump:
		cwtl   
		neg    %eax

	_07d4c2_jump:
		mov    %eax,(%esp)
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0552b4_func
		mov    %esi,%eax
		call   _01d434_func
		jmp    _07d4f9_jump

	_07d4d7_jump:
		mov    $0x000001,%edx
		mov    $0x00001e,%ecx
		mov    %esi,%eax
		lea    0x000004(%esp),%ebx
		call   _01d434_func
		push   $0x000003
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _01e7cc_func

	_07d4f9_jump:
		mov    (%esp),%eax
		mov    %ax,0x000040(%esi)
		mov    0x000004(%esp),%eax
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01dc5c_func
		movb   $0x000000,0x000071(%esi)
		movb   $0x000007,0x000072(%esi)
		mov    0x000081(%esi),%dh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dh
		mov    %esi,%eax
		mov    %dh,0x000081(%esi)
		call   _01f3d4_func
		andb   $0x0000bf,0x000081(%esi)
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07d543_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _07d2e5_jump

	_07d553_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07d55c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07d66b_jump
		cmpb   $0x00000d,0x00006c(%ecx)
		jne    _07d577_jump
		cmpb   $0x000065,0x00006b(%ecx)
		jae    _07d589_jump

	_07d577_jump:
		cmpb   $0x000009,0x00006c(%ecx)
		jne    _07d583_jump
		cmpb   $0x000037,0x00006b(%ecx)
		jae    _07d589_jump

	_07d583_jump:
		movw   $0x000000,0x000052(%ecx)

	_07d589_jump:
		mov    0x00006c(%ecx),%al
		test   %al,%al
		je     _07d598_jump
		cmp    $0x00000e,%al
		je     _07d598_jump
		cmp    $0x000008,%al
		jne    _07d5c1_jump

	_07d598_jump:
		cmpb   $0x000001,0x00006b(%ecx)
		jae    _07d5c1_jump
		cmpb   $0x000002,0x00007b(%ecx)
		jb     _07d5b0_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _07d5ba_jump

	_07d5b0_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx

	_07d5ba_jump:
		mov    %ecx,%eax
		call   _060460_func

	_07d5c1_jump:
		mov    0x00006c(%ecx),%bh
		cmp    $0x00000d,%bh
		jne    _07d61c_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _07d671_jump
		cmpb   $0x000065,0x00006b(%ecx)
		jne    _07d671_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _07d671_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _07d2c0_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07d61c_jump:
		cmp    $0x000009,%bh
		jne    _07d671_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _07d671_jump
		cmpb   $0x000037,0x00006b(%ecx)
		jne    _07d671_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %bh,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $_0000ff_case,%eax
		cmpb   $0x000000,_0cf3ed_data(%eax)
		jne    _07d671_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _07d2c0_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07d66b_jump:
		movw   $0x000000,0x000052(%ecx)

	_07d671_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d678_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %ebp
		mov    %eax,%ebp
		mov    %edx,%ebx
		cmp    $0x000008,%dx
		jb     _07d690_jump
		jbe    _07d69d_jump
		cmp    $0x000009,%dx
		je     _07d6a4_jump
		jmp    _07d6a9_jump

	_07d690_jump:
		cmp    $0x000007,%dx
		jne    _07d6a9_jump
		mov    $0xfffffffd,%esi
		jmp    _07d6a9_jump

	_07d69d_jump:
		mov    $0x000002,%esi
		jmp    _07d6a9_jump

	_07d6a4_jump:
		mov    $0xffffffff,%esi

	_07d6a9_jump:
		mov    _0cc7a0_data,%ecx
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07d74c_jump

	_07d6c1_jump:
		cmpw   $0x00006e,0x000060(%ecx)
		jne    _07d73c_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07d73c_jump
		mov    $0x000002,%edx
		and    $_0000ff_case,%ebx
		mov    %ecx,%eax
		call   _01d444_func
		movw   $0x00fffa,0x000042(%ecx)
		mov    %si,0x000040(%ecx)
		mov    0x000028(%ebp),%ebx
		mov    %ebx,0x000028(%ecx)
		mov    0x00002c(%ebp),%ebx
		mov    %ebx,0x00002c(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _060460_func
		mov    %ecx,%eax
		call   _01dc5c_func
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f3d4_func
		movb   $0x000000,0x000071(%ecx)
		mov    0x000081(%ecx),%dl
		movb   $0x000005,0x000072(%ecx)
		and    $0x0000bf,%dl
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07d73c_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _07d6c1_jump

	_07d74c_jump:
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_07d754_switch:
		.long   _07d824_case
		.long   _07d832_case
		.long   _07d840_case
		.long   _07d84e_case
		.long   _07d85c_case




_07d768_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,(%esp)
		mov    $0x000054,%eax
		call   _072210_func
		mov    _0cc7a0_data,%ebp
		mov    _0cc7a4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07d7bc_jump

	_07d792_jump:
		cmpw   $0x00006e,0x000060(%ebp)
		jne    _07d7b0_jump
		mov    %ebp,%edi

	_07d79b_jump:
		mov    0x0000e4(%edi),%cx
		add    $0x000084,%edi
		cmp    $0x00006e,%cx
		je     _07d79b_jump
		jmp    _07d7bc_jump

	_07d7b0_jump:
		inc    %eax
		add    $0x000084,%ebp
		cmp    %dx,%ax
		jl     _07d792_jump

	_07d7bc_jump:
		cmpw   $0x00006e,0x000060(%ebp)
		jne    _07d8e4_jump
		xor    %eax,%eax
		mov    %ax,0x00000c(%esp)

	_07d7ce_jump:
		mov    %ebp,%esi
		cmp    %edi,%ebp
		ja     _07d7e4_jump

	_07d7d4_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _07d7e4_jump
		add    $0x000084,%esi
		cmp    %edi,%esi
		jbe    _07d7d4_jump

	_07d7e4_jump:
		cmp    %edi,%esi
		ja     _07d8d0_jump
		mov    $0x000002,%edx
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    0x00000c(%esp),%bl
		call   _01d444_func
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    0x00000c(%esp),%ecx
		mov    %ah,0x000081(%esi)
		cmp    $0x000004,%cx
		ja     _07d868_jump
		xor    %eax,%eax
		mov    %cx,%ax
		jmp    *%cs:_07d754_switch(,%eax,4)

	_07d824_case:
		movw   $0x000000,0x000042(%esi)
		movw   $0x000004,0x000040(%esi)
		jmp    _07d868_jump

	_07d832_case:
		movw   $0x000000,0x000042(%esi)
		movw   $0x00fffe,0x000040(%esi)
		jmp    _07d868_jump

	_07d840_case:
		movw   $0x00fffc,0x000042(%esi)
		movw   $0x00fffc,0x000040(%esi)
		jmp    _07d868_jump

	_07d84e_case:
		movw   $0x00fffc,0x000042(%esi)
		movw   $0x000002,0x000040(%esi)
		jmp    _07d868_jump

	_07d85c_case:
		movw   $0x00fffa,0x000042(%esi)
		movw   $0x00ffff,0x000040(%esi)

	_07d868_jump:
		lea    0x000004(%esp),%eax
		mov    0x00000a(%esp),%edx
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000018(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    0x000008(%esp),%eax
		call   _01d7e0_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		mov    $0x000001,%ebx
		sar    $0x000010,%eax
		mov    %ebx,%edx
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		call   _060460_func
		mov    %esi,%eax
		call   _01dc5c_func
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f3d4_func

	_07d8d0_jump:
		mov    0x00000c(%esp),%edx
		inc    %edx
		mov    %dx,0x00000c(%esp)
		cmp    $0x000005,%dx
		jl     _07d7ce_jump

	_07d8e4_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_07d8f0_switch:
		.long   _07d9bc_case
		.long   _07d9a2_case
		.long   _07d988_case
		.long   _07d94b_case




_07d900_func:
		push   %ebx
		mov    %eax,%ebx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07da1b_jump
		cmpw   $0x000000,_0cf28c_data
		jl     _07da1b_jump
		mov    0x000032(%ebx),%edx
		mov    $0x000053,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		mov    0x000076(%ebx),%dl
		dec    %dl
		mov    %dl,%al
		mov    %dl,0x000076(%ebx)
		cmp    $0x000003,%dl
		ja     _07da1b_jump
		and    $_0000ff_case,%eax
		jmp    *%cs:_07d8f0_switch(,%eax,4)

	_07d94b_case:
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d434_func
		mov    $0x000007,%edx
		mov    %ebx,%eax
		call   _07d678_func
		mov    _0cf28a_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ebx
		shl    $0x000005,%ebx
		add    %eax,%ebx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%ebx
		mov    $0x000006,%edx
		add    %ebx,%eax
		call   _01d434_func
		pop    %ebx
		ret    

	_07d988_case:
		mov    $0x000006,%edx
		mov    %ebx,%eax
		call   _01d434_func
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _07d678_func
		pop    %ebx
		ret    

	_07d9a2_case:
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d434_func
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _07d678_func
		pop    %ebx
		ret    

	_07d9bc_case:
		mov    _0cf28a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc7a0_data,%edx
		cmpb   $0x000006,0x00006c(%edx,%eax,4)
		jne    _07da1b_jump
		mov    0x000032(%ebx),%edx
		mov    $0x000053,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _01d434_func
		mov    _0cf28a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc7a0_data,%eax
		shl    $0x000002,%edx
		movb   $0x000003,0x00006c(%edx,%eax,1)
		movb   $0x000004,0x00006e(%edx,%eax,1)
		movb   $0x00000a,0x00006e(%ebx)

	_07da1b_jump:
		pop    %ebx
		ret    



_07da20_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07da8c_jump
		mov    %ecx,%eax
		call   _01e7ac_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _07da7c_jump
		mov    %ecx,%eax
		call   _07d768_func
		movl   $0x000000,0x000024(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0ce08e_data,%dx
		jne    _07da72_jump
		movw   $0x00ffff,_0ce08e_data
		mov    $0x000002,%ebx
		mov    $_0ce044_data,%eax
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d444_func

	_07da72_jump:
		andb   $0x0000fb,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_07da7c_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d434_func
		movb   $0x000000,0x00006b(%ecx)

	_07da8c_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07da90_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07daa3_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _07daaa_jump

	_07daa3_jump:
		mov    %ecx,%eax
		call   _01e7ac_func

	_07daaa_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,(%esp)
		mov    %ecx,%eax
		mov    $0x000008,%edx
		call   _01dbe4_func
		mov    %ecx,%eax
		call   _060460_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		mov    (%esp),%dh
		shr    $0x000007,%al
		cmp    %dh,%al
		je     _07db07_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _060460_func
		cmpw   $0x000023,0x000060(%ecx)
		jne    _07db07_jump
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _07cde4_func

	_07db07_jump:
		cmpb   $0x000003,0x000076(%ecx)
		jae    _07db50_jump
		cmpw   $0x000023,0x000060(%ecx)
		jne    _07db22_jump
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _07cde4_func

	_07db22_jump:
		cmpb   $0x000000,0x000076(%ecx)
		jne    _07db3e_jump
		mov    $0x000001,%ebx
		mov    0x000077(%ecx),%al
		xor    %edx,%edx
		mov    %al,0x000076(%ecx)
		mov    %ecx,%eax
		call   _060460_func
		jmp    _07db50_jump

	_07db3e_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _060460_func
		movb   $0x000002,0x000073(%ecx)

	_07db50_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_07db58_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e7ac_func
		movb   $0x000000,0x00007f(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%bl
		call   _01dbe4_func
		mov    0x000032(%ecx),%edx
		mov    $0x000056,%eax
		sar    $0x000010,%edx
		call   _071b3c_func
		mov    0x000081(%ecx),%dl
		shl    $0x000004,%bl
		shl    $0x000004,%dl
		shr    $0x000007,%bl
		shr    $0x000007,%dl
		cmp    %bl,%dl
		je     _07dbb2_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000001,%ebx
		call   _07d2c0_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _060460_func
		pop    %ecx
		pop    %ebx
		ret    

	_07dbb2_jump:
		cmpb   $0x00000f,0x000076(%ecx)
		jae    _07dbf6_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07d2c0_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _07dbde_jump
		mov    $0x000001,%ebx
		mov    0x000077(%ecx),%dl
		mov    %ecx,%eax
		mov    %dl,0x000076(%ecx)
		xor    %edx,%edx
		call   _060460_func
		pop    %ecx
		pop    %ebx
		ret    

	_07dbde_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		je     _07dbf2_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _060460_func

	_07dbf2_jump:
		movb   $0x000002,0x000073(%ecx)

	_07dbf6_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07dbfc_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07dc2a_jump
		mov    0x00006c(%eax),%dh
		cmp    $0x000001,%dh
		je     _07dc39_jump
		cmp    $0x000002,%dh
		je     _07dc39_jump
		cmp    $0x000005,%dh
		je     _07dc39_jump
		cmp    $0x000006,%dh
		je     _07dc39_jump
		cmp    $0x000003,%dh
		je     _07dc39_jump
		cmp    $0x000007,%dh
		je     _07dc39_jump
		cmp    $0x000004,%dh
		je     _07dc39_jump

	_07dc2a_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		call   _060460_func

	_07dc39_jump:
		pop    %edx
		pop    %ebx
		ret    



_07dc3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07dc4d_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _07dc59_jump

	_07dc4d_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _07dc72_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _07dc72_jump

	_07dc59_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _060460_func
		movb   $0x000007,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)

	_07dc72_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07dc80_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%ebp
		mov    %edx,%eax
		lea    0x00c800(%edx),%eax
		mov    %ecx,%ebx
		mov    %eax,(%esp)

	_07dc98_jump:
		mov    %ebp,%ecx
		mov    %edx,%edi
		mov    %ebx,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07dca8_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07dca8_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    (%esp),%ecx
		add    $0x000100,%edx
		add    $0x000140,%ebx
		cmp    %ecx,%edx
		jne    _07dc98_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07dccc_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %edx,%ecx
		mov    %ebx,%ebp
		mov    %eax,%edx
		add    $0x00c800,%eax
		mov    %ecx,%ebx
		mov    %eax,(%esp)

	_07dce3_jump:
		mov    %ebp,%ecx
		mov    %ebx,%edi
		mov    %edx,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07dcf3_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07dcf3_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    (%esp),%ecx
		add    $0x000100,%edx
		add    $0x000140,%ebx
		cmp    %ecx,%edx
		jne    _07dce3_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07dd20_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07dd42_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _07dd42_jump
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		jmp    _07ddbc_jump

	_07dd42_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000002,%al
		jb     _07dd74_jump
		jbe    _07ddb5_jump
		cmp    $0x000014,%al
		jb     _07ddbc_jump
		ja     _07ddbc_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		mov    %ecx,%eax
		call   _07df50_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07dd74_jump:
		test   %al,%al
		jne    _07dd81_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _07dd88_jump

	_07dd81_jump:
		orb    $0x000008,0x000081(%ecx)

	_07dd88_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _07dd94_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _07dda0_jump

	_07dd94_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _07ddbc_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _07ddbc_jump

	_07dda0_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d444_func
		mov    %ecx,%eax
		call   _0552b4_func

	_07ddb5_jump:
		mov    %ecx,%eax
		call   _025590_func

	_07ddbc_jump:
		mov    %ecx,%eax
		call   _07df50_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ddc8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dl,0x000010(%esp)
		lea    0x000008(%esp),%ecx
		movb   $0x000064,0x00007f(%eax)
		lea    0x000004(%esp),%eax
		mov    %esp,%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d364_func
		testb  $0x000008,0x000081(%esi)
		je     _07de0c_jump
		mov    0x000008(%esp),%eax
		mov    0x00000c(%esp),%ebx
		sub    $0x000010,%eax
		add    %eax,%ebx
		mov    %bx,0x00000c(%esp)
		jmp    _07de20_jump

	_07de0c_jump:
		mov    0x000008(%esp),%eax
		mov    0x00000c(%esp),%edx
		add    $0x00004c,%eax
		sub    %eax,%edx
		mov    %dx,0x00000c(%esp)

	_07de20_jump:
		mov    0x000008(%esp),%ecx
		add    $0x00005c,%ecx
		mov    0x000004(%esp),%eax
		mov    %cx,0x000008(%esp)
		mov    $0x000001,%cl
		test   %ax,%ax
		js     _07de3c_jump
		sar    %cl,%ax
		jmp    _07de45_jump

	_07de3c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07de45_jump:
		add    $0x000002,%eax
		mov    $0x000002,%cl
		mov    %ax,0x000004(%esp)
		test   %ax,%ax
		js     _07de5b_jump
		sar    %cl,%ax
		jmp    _07de64_jump

	_07de5b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07de64_jump:
		mov    (%esp),%edi
		add    %eax,%edi
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000a(%esp),%eax
		mov    _0cf268_data,%ecx
		sar    $0x000010,%eax
		mov    %di,0x000004(%esp)
		push   %eax
		mov    0x000006(%esp),%eax
		mov    _0cf24c_data,%ebx
		sar    $0x000010,%eax
		mov    _0cf24a_data,%edx
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    _0cf248_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b560_func
		test   %ax,%ax
		je     _07df1a_jump
		mov    $0x000001,%cl
		mov    _0cf24e_data,%ax
		test   %ax,%ax
		js     _07decd_jump
		sar    %cl,%ax
		jmp    _07ded6_jump

	_07decd_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07ded6_jump:
		mov    $0x000001,%cl
		mov    _0cf26a_data,%ax
		test   %ax,%ax
		js     _07dee8_jump
		sar    %cl,%ax
		jmp    _07def1_jump

	_07dee8_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07def1_jump:
		mov    0x000081(%esi),%dl
		mov    $0x000007,%eax
		test   $0x000008,%dl
		jne    _07df08_jump
		cmpb   $0x000000,0x000010(%esp)
		je     _07df18_jump

	_07df08_jump:
		testb  $0x000008,0x000081(%esi)
		je     _07df1a_jump
		cmpb   $0x000001,0x000010(%esp)
		jne    _07df1a_jump

	_07df18_jump:
		neg    %eax

	_07df1a_jump:
		test   %ax,%ax
		je     _07df47_jump
		mov    _0cf276_data,%dx
		add    %eax,%edx
		mov    _0ce0b1_data,%cl
		mov    %dx,_0cf276_data
		cmp    $0x000005,%cl
		je     _07df47_jump
		mov    $0x000008,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %ax,_0cf250_data

	_07df47_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07df50_func:
		push   %ecx
		push   %edx
		mov    0x00007f(%eax),%dl
		test   %dl,%dl
		je     _07df60_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x00007f(%eax)

	_07df60_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07df99_jump
		cmpb   $0x000002,0x00006c(%eax)
		jne    _07df72_jump
		cmpb   $0x00000a,0x00006b(%eax)
		jae    _07df7a_jump

	_07df72_jump:
		mov    0x00006c(%eax),%ch
		cmp    $0x000004,%ch
		jne    _07df7e_jump

	_07df7a_jump:
		xor    %edx,%edx
		jmp    _07df94_jump

	_07df7e_jump:
		cmp    $0x000006,%ch
		jne    _07df89_jump
		cmpb   $0x00000a,0x00006b(%eax)
		jae    _07df8f_jump

	_07df89_jump:
		cmpb   $0x000007,0x00006c(%eax)
		jne    _07df99_jump

	_07df8f_jump:
		mov    $0x000001,%edx

	_07df94_jump:
		call   _07ddc8_func

	_07df99_jump:
		pop    %edx
		pop    %ecx
		ret    



_07df9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		call   _060460_func
		mov    %ecx,%eax
		call   _0258a0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07dfbc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e7ac_func
		mov    _0ce0d0_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _07dfdc_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _07dfe5_jump

	_07dfdc_jump:
		jge    _07dfe5_jump
		orb    $0x000008,0x000081(%ecx)

	_07dfe5_jump:
		cmpb   $0x000000,0x000076(%ecx)
		je     _07e008_jump
		mov    0x00002c(%ecx),%edx
		mov    $0x000001,%ebx
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000004,%edx
		call   _060460_func
		pop    %ecx
		pop    %ebx
		ret    

	_07e008_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		mov    0x000081(%ecx),%bl
		movb   $0x000002,0x000070(%ecx)
		and    $0x0000ef,%bl
		mov    %bl,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_07e02c_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00007f(%eax)
		jne    _07e05b_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07e040_jump
		cmpb   $0x000000,0x00006c(%eax)
		je     _07e04c_jump

	_07e040_jump:
		cmpb   $0x000001,0x00006d(%eax)
		jne    _07e05b_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _07e05b_jump

	_07e04c_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		call   _060460_func

	_07e05b_jump:
		pop    %edx
		pop    %ebx
		ret    



_07e060_func:
		push   %esi
		push   %edi
		push   %ebp
		movswl %bx,%ebx
		movswl %cx,%ecx
		mov    0x000028(%eax),%edi
		mov    0x00002c(%eax),%ebp
		add    %edi,%ebx
		lea    (%ecx,%ebp,1),%edi
		mov    _0ce038_data,%cx
		sar    $0x000004,%edi
		imul   %edi,%ecx
		sar    $0x000004,%ebx
		add    %ebx,%ecx
		xor    %esi,%esi
		mov    %cx,(%edx)
		cmp    0x000058(%eax),%cx
		je     _07e0fb_jump
		mov    %cx,0x000058(%eax)
		mov    _0ce036_data,%ecx
		movswl %bx,%eax
		sar    $0x000010,%ecx
		xor    %ebx,%ebx
		dec    %ecx
		cmp    %ebx,%eax
		jl     _07e0b3_jump
		cmp    %ecx,%eax
		jg     _07e0b3_jump
		mov    $0x000001,%eax
		jmp    _07e0b5_jump

	_07e0b3_jump:
		xor    %eax,%eax

	_07e0b5_jump:
		test   %eax,%eax
		je     _07e0fb_jump
		mov    _0ce038_data,%ecx
		movswl %di,%eax
		sar    $0x000010,%ecx
		xor    %ebx,%ebx
		dec    %ecx
		cmp    %ebx,%eax
		jl     _07e0d7_jump
		cmp    %ecx,%eax
		jg     _07e0d7_jump
		mov    $0x000001,%eax
		jmp    _07e0d9_jump

	_07e0d7_jump:
		xor    %eax,%eax

	_07e0d9_jump:
		test   %eax,%eax
		je     _07e0fb_jump
		movswl (%edx),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce040_data,%edx
		cmpb   $0x000001,0x000002(%edx,%eax,2)
		sete   %al
		xor    %ah,%ah
		mov    %eax,%esi

	_07e0fb_jump:
		mov    %esi,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

_07e104_switch:
		.long   _07e3c3_case
		.long   _07e438_case
		.long   _07e41c_case
		.long   _07e400_case
		.long   _07e384_case
		.long   _07e3be_case
		.long   _07e3df_case
		.long   _07e417_case
		.long   _07e22d_case
		.long   _07e292_case
		.long   _07e292_case
		.long   _07e30c_case
		.long   _07e30c_case




_07e138_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    0x000081(%eax),%ah
		and    $0x0000f7,%ah
		mov    0x00006d(%edi),%dl
		mov    %ah,0x000081(%edi)
		test   %dl,%dl
		jne    _07e479_jump
		cmpb   $0x00000e,0x00006c(%edi)
		jne    _07e479_jump
		mov    %esp,%edx
		mov    %edi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    0x000069(%edi),%cl
		mov    0x000068(%edi),%bl
		call   _07e060_func
		test   %ax,%ax
		je     _07e479_jump
		mov    _0ce952_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc7a0_data,%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		mov    _0cea1c_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _07e479_jump

	_07e1af_jump:
		cmpw   $0x0000a3,0x000060(%edx)
		jne    _07e44d_jump
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%ecx
		mov    0x000069(%edx),%bl
		add    %ecx,%ebx
		mov    _0ce036_data,%ecx
		sar    $0x000004,%ebx
		sar    $0x000010,%ecx
		imul   %ebx,%ecx
		xor    %ebx,%ebx
		mov    0x000028(%edx),%esi
		mov    0x000068(%edx),%bl
		add    %esi,%ebx
		sar    $0x000004,%ebx
		add    %ecx,%ebx
		cmp    (%esp),%bx
		jne    _07e44d_jump
		mov    0x000042(%edi),%si
		movswl %si,%eax
		mov    0x000040(%edi),%cx
		test   %eax,%eax
		jge    _07e1fe_jump
		neg    %eax

	_07e1fe_jump:
		mov    %eax,%ebx
		movswl %cx,%eax
		test   %eax,%eax
		jge    _07e209_jump
		neg    %eax

	_07e209_jump:
		cmp    %ebx,%eax
		jge    _07e20f_jump
		mov    %ebx,%eax

	_07e20f_jump:
		mov    0x00006c(%edx),%bl
		mov    %eax,0x000004(%esp)
		cmp    $0x00000c,%bl
		ja     _07e43c_jump
		and    $_0000ff_case,%ebx
		jmp    *%cs:_07e104_switch(,%ebx,4)

	_07e22d_case:
		test   %cx,%cx
		jne    _07e24d_jump
		test   %si,%si
		jle    _07e240_jump
		mov    %eax,%esi
		neg    %esi
		jmp    _07e43c_jump

	_07e240_jump:
		jge    _07e43c_jump
		mov    %eax,%esi
		jmp    _07e43c_jump

	_07e24d_jump:
		test   %si,%si
		jne    _07e27d_jump
		test   %cx,%cx
		jle    _07e268_jump
		mov    %eax,%ecx
		neg    %ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		jmp    _07e479_jump

	_07e268_jump:
		jge    _07e43c_jump
		mov    %eax,%ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		jmp    _07e479_jump

	_07e27d_jump:
		neg    %ecx
		neg    %esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e292_case:
		cmpb   $0x000009,0x00006c(%edx)
		jne    _07e29f_jump
		mov    $0x000001,%eax
		jmp    _07e2a4_jump

	_07e29f_jump:
		mov    $0xffffffff,%eax

	_07e2a4_jump:
		test   %si,%si
		jne    _07e2f0_jump
		test   %cx,%cx
		jle    _07e2cc_jump
		mov    0x000004(%esp),%ecx
		add    %eax,%ecx
		cmp    $0x000004,%cx
		jle    _07e2bf_jump
		mov    $0x000004,%ecx

	_07e2bf_jump:
		cmp    $0x000002,%cx
		jge    _07e2f0_jump
		mov    $0x000002,%ecx
		jmp    _07e2f0_jump

	_07e2cc_jump:
		jge    _07e2f0_jump
		mov    0x000004(%esp),%edx
		mov    %eax,%ecx
		sub    %edx,%ecx
		movswl %cx,%eax
		cmp    $0xfffffffe,%eax
		jle    _07e2e3_jump
		mov    $0xfffffffe,%ecx

	_07e2e3_jump:
		movswl %cx,%eax
		cmp    $0xfffffffc,%eax
		jge    _07e2f0_jump
		mov    $0xfffffffc,%ecx

	_07e2f0_jump:
		test   %cx,%cx
		je     _07e43c_jump
		xor    %esi,%esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e30c_case:
		cmpb   $0x00000b,0x00006c(%edx)
		jne    _07e319_jump
		mov    $0x000001,%eax
		jmp    _07e31e_jump

	_07e319_jump:
		mov    $0xffffffff,%eax

	_07e31e_jump:
		test   %cx,%cx
		jne    _07e368_jump
		test   %si,%si
		jle    _07e346_jump
		mov    0x000004(%esp),%esi
		add    %eax,%esi
		cmp    $0x000004,%si
		jle    _07e339_jump
		mov    $0x000004,%esi

	_07e339_jump:
		cmp    $0x000002,%si
		jge    _07e368_jump
		mov    $0x000002,%esi
		jmp    _07e368_jump

	_07e346_jump:
		jge    _07e368_jump
		mov    0x000004(%esp),%esi
		sub    %esi,%eax
		mov    %eax,%esi
		cwtl   
		cmp    $0xfffffffe,%eax
		jle    _07e35b_jump
		mov    $0xfffffffe,%esi

	_07e35b_jump:
		movswl %si,%eax
		cmp    $0xfffffffc,%eax
		jge    _07e368_jump
		mov    $0xfffffffc,%esi

	_07e368_jump:
		test   %si,%si
		je     _07e43c_jump
		xor    %ecx,%ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e384_case:
		test   %cx,%cx
		jne    _07e39e_jump
		mov    %eax,%ecx
		xor    %esi,%esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e39e_jump:
		test   %si,%si
		jne    _07e43c_jump
		mov    %eax,%esi
		xor    %ecx,%ecx
		neg    %esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e3be_case:
		test   %cx,%cx
		jne    _07e3d8_jump

	_07e3c3_case:
		mov    %eax,%ecx
		xor    %esi,%esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e3d8_jump:
		test   %si,%si
		jne    _07e43c_jump
		jmp    _07e438_case

	_07e3df_case:
		test   %cx,%cx
		jne    _07e3fb_jump
		mov    %eax,%ecx
		xor    %esi,%esi
		neg    %ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e3fb_jump:
		test   %si,%si
		jne    _07e43c_jump

	_07e400_case:
		mov    %eax,%esi
		xor    %ecx,%ecx
		neg    %esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e417_case:
		test   %cx,%cx
		jne    _07e433_jump

	_07e41c_case:
		mov    %eax,%ecx
		xor    %esi,%esi
		neg    %ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e433_jump:
		test   %si,%si
		jne    _07e43c_jump

	_07e438_case:
		mov    %eax,%esi
		xor    %ecx,%ecx

	_07e43c_jump:
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e44d_jump:
		inc    %eax
		movswl %ax,%edx
		mov    _0ce952_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc7a0_data,%ebx
		mov    _0cea1c_data,%cx
		add    %ebx,%edx
		cmp    %cx,%ax
		jl     _07e1af_jump

	_07e479_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e484_func:
		push   %edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000003,%dl
		ja     _07e4a2_jump
		mov    0x000081(%eax),%dl
		movb   $0x000004,0x00007e(%eax)
		and    $0x0000f7,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    

	_07e4a2_jump:
		movb   $0x000000,0x00007e(%eax)
		pop    %edx
		ret    

_07e4a8_switch:
		.long   _07e52f_case
		.long   _07e536_case
		.long   _07e53d_case
		.long   _07e544_case




_07e4b8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000005,0x00006d(%eax)
		jne    _07e54b_jump
		cmpb   $0x000035,0x00006c(%ecx)
		jne    _07e54b_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000eb,%eax
		sar    $0x000010,%edx
		mov    $0x000036,%ebx
		call   _071b3c_func
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d444_func
		mov    0x000032(%ecx),%eax
		mov    _0ce8d4_data,%edx
		sar    $0x000010,%eax
		movswl (%edx,%eax,2),%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0cc7a0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpw   $0x0000a3,0x000060(%eax)
		jne    _07e54b_jump
		mov    0x00006c(%eax),%cl
		cmp    $0x000003,%cl
		ja     _07e54b_jump
		xor    %edx,%edx
		mov    %cl,%dl
		jmp    *%cs:_07e4a8_switch(,%edx,4)

	_07e52f_case:
		mov    $0x000001,%edx
		jmp    _07e546_jump

	_07e536_case:
		mov    $0x000002,%edx
		jmp    _07e546_jump

	_07e53d_case:
		mov    $0x000003,%edx
		jmp    _07e546_jump

	_07e544_case:
		xor    %edx,%edx

	_07e546_jump:
		call   _01d434_func

	_07e54b_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07e550_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07e57b_jump
		cmpb   $0x00000d,0x00006c(%ecx)
		jne    _07e57b_jump
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d444_func
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)

	_07e57b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e580_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%edi
		mov    %edx,%ebx
		mov    $0x000140,%eax
		mov    _0e6e74_data,%esi
		mov    %eax,%edx
		movzbl (%esi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %al,0x000018(%esp)
		mov    $0x0000c8,%eax
		mov    %eax,%edx
		movzbl 0x000001(%esi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00001c(%esi),%ecx
		mov    %al,0x000014(%esp)
		call   _010010_func
		movw   $0x000000,0x000004(%esi)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _07e5d8_jump
		mov    %ebx,%eax

	_07e5d8_jump:
		mov    %ax,0x000006(%esi)
		test   %di,%di
		jl     _07e5f1_jump
		mov    $0x000001,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _07e5ef_jump
		mov    %ebx,%eax

	_07e5ef_jump:
		jmp    _07e603_jump

	_07e5f1_jump:
		movswl %di,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _07e601_jump
		mov    %ebx,%eax

	_07e601_jump:
		neg    %eax

	_07e603_jump:
		mov    %ax,0x000008(%esi)
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		mov    0x000014(%esp),%al
		mov    %al,(%esp)
		mul    %ah
		mov    %al,0x00000c(%esp)

	_07e61a_jump:
		xor    %dl,%dl
		mov    0x00000c(%esp),%al
		mov    0x000018(%esp),%dh
		mov    %al,0x00001c(%esp)

	_07e628_jump:
		xor    %ah,%ah
		xor    %bh,%bh
		mov    0x000018(%esp),%al
		mov    %dl,%bl
		imul   %ebx,%eax
		mov    %eax,%ebx
		mov    %ax,0x000004(%ecx)
		xor    %ah,%bh
		mov    %ax,(%ecx)
		mov    0x00001c(%esp),%bl
		mov    %bl,0x000006(%ecx)
		mov    %bl,0x000002(%ecx)
		cmp    $0x0000a0,%ax
		jae    _07e655_jump
		mov    0x000014(%esi),%edi
		jmp    _07e65e_jump

	_07e655_jump:
		mov    0x000018(%esi),%edi
		sub    $0x0000a0,%eax

	_07e65e_jump:
		mov    %edi,0x000008(%ecx)
		mov    %al,0x00002e(%ecx)
		mov    %al,0x00002c(%ecx)
		add    %dh,%al
		dec    %al
		mov    %al,0x000032(%ecx)
		mov    %al,0x000030(%ecx)
		mov    0x000014(%esp),%al
		mov    %bl,0x000033(%ecx)
		add    %bl,%al
		mov    %bl,0x00002d(%ecx)
		dec    %al
		mov    %al,0x000031(%ecx)
		mov    %al,0x00002f(%ecx)
		inc    %dl
		mov    (%esi),%bl
		add    $0x000034,%ecx
		cmp    %bl,%dl
		jbe    _07e628_jump
		mov    (%esp),%al
		add    %al,0x00000c(%esp)
		mov    0x000004(%esp),%dh
		inc    %dh
		mov    0x000001(%esi),%bl
		mov    %dh,0x000004(%esp)
		cmp    %bl,%dh
		jbe    _07e61a_jump
		xor    %bh,%bh
		mov    %bh,0x000008(%esp)
		mov    %bh,0x000010(%esp)

	_07e6b6_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		movzbl 0x000010(%esp),%edi
		add    %eax,%eax
		mov    $0xc0440000,%ecx
		cwtl   
		movb   $0x000000,0x000020(%edi,%esi,1)
		call   _05d270_func
		cwtl   
		xor    %ebx,%ebx
		call   _07f562_func
		call   _07f75f_func
		mov    $0x3f600000,%ecx
		xor    %ebx,%ebx
		call   _07f75f_func
		call   _07fdac_func
		mov    0x000008(%esp),%ch
		mov    %al,0x00006b(%edi,%esi,1)
		mov    0x000010(%esp),%al
		add    $0x00000a,%ch
		inc    %al
		mov    %ch,0x000008(%esp)
		mov    %al,0x000010(%esp)
		cmp    $0x00004b,%al
		jb     _07e6b6_jump
		movw   $0x000000,0x0000b6(%esi)
		movb   $0x00004b,0x0000b8(%esi)
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx

	_07e726_jump:
		ret    

	_07e728_case:
		mov    _0e6e74_data,%eax
		test   %eax,%eax
		je     _07e726_jump
		cmpl   $0x000000,0x00001c(%eax)
		je     _07e73f_jump
		add    $0x00001c,%eax
		call   _07f44c_func

	_07e73f_jump:
		cmpl   $0x000000,_0e6e74_data
		je     _07e726_jump
		mov    $_0e6e74_data,%eax
		jmp    _07f44c_func



_07e754_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %edx,0x000008(%esp)
		mov    %bx,0x000004(%esp)
		mov    %ecx,(%esp)
		mov    0x000018(%esp),%edx
		xor    %cl,%cl
		test   %edx,%edx
		je     _07e80e_jump
		cmpl   $0x000000,0x00001c(%esp)
		je     _07e80e_jump
		mov    $0x0000bc,%eax
		call   _07f434_func
		mov    %eax,%edx
		mov    %eax,_0e6e74_data
		test   %eax,%eax
		je     _07e80e_jump
		mov    %eax,%esi
		xor    %ebx,%ebx
		mov    $0x000002,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _07e7a7_jump
		mov    %ebx,%eax

	_07e7a7_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    0x000008(%esp),%bx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _07e7bb_jump
		mov    %ebx,%eax

	_07e7bb_jump:
		mov    %al,0x000001(%edx)
		mov    0x000008(%esp),%eax
		inc    %edi
		inc    %eax
		imul   %eax,%edi
		mov    0x000018(%esp),%eax
		mov    %di,0x000002(%edx)
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%edx)
		mov    0x00001c(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		call   _07f434_func
		mov    %eax,0x00001c(%edx)
		test   %eax,%eax
		je     _07e80e_jump
		mov    _0ccad8_data,%eax
		mov    %eax,0x000014(%edx)
		add    $0x00c800,%eax
		mov    $0x000001,%cl
		mov    %eax,0x000018(%edx)

	_07e80e_jump:
		test   %cl,%cl
		je     _07e84b_jump
		mov    $0x0000a0,%ebx
		mov    0x000014(%esi),%edx
		mov    0x00000c(%esi),%eax
		call   _07dc80_func
		mov    $0x0000a0,%ebx
		mov    0x00000c(%esi),%eax
		mov    0x000018(%esi),%edx
		add    $0x0000a0,%eax
		call   _07dc80_func
		xor    %edx,%edx
		mov    0x000002(%esp),%eax
		mov    (%esp),%dx
		sar    $0x000010,%eax
		call   _07e580_func
		jmp    _07e850_jump

	_07e84b_jump:
		call   _07e728_case

	_07e850_jump:
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_07e85c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		xor    %ah,%ah
		mov    _0e6e74_data,%ebp
		mov    %ah,(%esp)
		jmp    _07e992_jump

	_07e875_jump:
		mov    $0x000001,%dl
		mov    0x0000b6(%ebp),%cx
		mov    %dl,0x000008(%esp)
		add    $0x000002,%ecx
		mov    0x000001(%ebp),%dh
		mov    %cx,0x0000b6(%ebp)
		cmp    %dl,%dh
		jbe    _07e93f_jump

	_07e897_jump:
		xor    %ah,%ah
		xor    %dh,%dh
		mov    0x000000(%ebp),%al
		mov    0x000008(%esp),%dl
		inc    %eax
		imul   %edx,%eax
		xor    %ebx,%ebx
		inc    %eax
		mov    %ax,%bx
		imul   $0x000034,%ebx,%ebx
		mov    0x00001c(%ebp),%eax
		add    %eax,%ebx
		mov    $0x000001,%ah
		mov    0x000000(%ebp),%dl
		mov    %ah,0x000004(%esp)
		cmp    %ah,%dl
		jbe    _07e92c_jump

	_07e8c1_jump:
		xor    %esi,%esi
		mov    (%ebx),%si
		sub    $0x0000a0,%esi
		mov    %esi,%eax
		imul   %esi,%eax
		xor    %ecx,%ecx
		mov    0x000002(%ebx),%cl
		sub    $0x000064,%ecx
		mov    %ecx,%edx
		imul   %ecx,%edx
		add    %edx,%eax
		sar    $0x000009,%eax
		mov    %esi,%edx
		mov    0x00001d(%eax,%ebp,1),%edi
		shl    $0x000009,%edx
		sar    $0x000018,%edi
		mov    %edx,%eax
		add    $0x000200,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %ecx,%edx
		lea    0x0000a0(%eax),%esi
		shl    $0x000009,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		lea    0x000064(%eax),%ecx
		mov    %cl,0x000006(%ebx)
		mov    0x000004(%esp),%cl
		inc    %cl
		mov    %si,0x000004(%ebx)
		mov    %cl,0x000004(%esp)
		mov    0x000000(%ebp),%ch
		add    $0x000034,%ebx
		cmp    %ch,%cl
		jb     _07e8c1_jump

	_07e92c_jump:
		mov    0x000008(%esp),%bl
		inc    %bl
		mov    %bl,0x000008(%esp)
		cmp    0x000001(%ebp),%bl
		jb     _07e897_jump

	_07e93f_jump:
		mov    0x0000b8(%ebp),%cl
		test   %cl,%cl
		je     _07e95d_jump
		mov    %cl,%ch
		xor    %ebx,%ebx
		dec    %ch
		mov    %ch,%bl
		mov    %ch,0x0000b8(%ebp)
		mov    0x00006b(%ebx,%ebp,1),%bl
		jmp    _07e960_jump

	_07e95d_jump:
		mov    0x00006a(%ebp),%bl

	_07e960_jump:
		cmpw   $0x000258,0x0000b6(%ebp)
		jbe    _07e973_jump
		cmpb   $0x000000,0x000020(%ebp)
		jne    _07e973_jump
		xor    %bl,%bl

	_07e973_jump:
		mov    $0x00004a,%al

	_07e975_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    0x00001f(%edx,%ebp,1),%ah
		mov    %ah,0x000020(%edx,%ebp,1)
		dec    %al
		test   %al,%al
		ja     _07e975_jump
		mov    (%esp),%dh
		inc    %dh
		mov    %bl,0x000020(%ebp)
		mov    %dh,(%esp)

	_07e992_jump:
		mov    0x000006(%ebp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    (%esp),%dl
		test   %eax,%eax
		jge    _07e9a3_jump
		neg    %eax

	_07e9a3_jump:
		cmp    %eax,%edx
		jl     _07e875_jump
		mov    0x000006(%ebp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _07e9b7_jump
		neg    %eax

	_07e9b7_jump:
		mov    0x000004(%ebp),%dx
		add    %eax,%edx
		mov    0x000006(%ebp),%bx
		mov    %dx,0x000004(%ebp)
		cmp    %bx,%dx
		jbe    _07e9d0_jump
		movw   $0x000000,0x000004(%ebp)

	_07e9d0_jump:
		mov    0x000004(%ebp),%ax
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e9e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0e6e74_data,%ebx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %edx,(%esp)
		mov    %ah,0x000004(%esp)
		mov    0x00001c(%ebx),%edx
		mov    0x000001(%ebx),%al
		mov    %edx,%ecx
		test   %al,%al
		jbe    _07eaed_jump

	_07ea0a_jump:
		xor    %al,%al
		mov    %al,0x000008(%esp)
		cmpb   $0x000000,(%ebx)
		jbe    _07eacc_jump
		lea    0x000008(%edx),%edi

	_07ea1c_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		imul   $0x000034,%eax,%esi
		movzwl 0x000004(%ecx,%esi,1),%ebp
		mov    %ebp,0x00000c(%edx)
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000010(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		inc    %esi
		imul   $0x000034,%esi,%esi
		mov    0x000004(%ecx,%esi,1),%si
		and    $0x00ffff,%esi
		mov    %esi,0x000014(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		inc    %esi
		imul   $0x000034,%esi,%esi
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000018(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		add    $0x000002,%esi
		imul   $0x000034,%esi,%esi
		mov    0x000004(%ecx,%esi,1),%si
		and    $0x00ffff,%esi
		dec    %esi
		mov    %esi,0x00001c(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		add    $0x000002,%esi
		imul   $0x000034,%esi,%esi
		inc    %eax
		imul   $0x000034,%eax,%eax
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000020(%edx)
		xor    %esi,%esi
		mov    0x000004(%ecx,%eax,1),%si
		dec    %esi
		mov    %esi,0x000024(%edx)
		mov    0x000006(%ecx,%eax,1),%al
		and    $_0000ff_case,%eax
		mov    %eax,0x000028(%edx)
		mov    %edi,%esi
		mov    0x000010(%ebx),%eax
		call   _010045_func
		incl   (%esp)
		mov    0x000008(%esp),%al
		inc    %al
		add    $0x000034,%edx
		mov    %al,0x000008(%esp)
		mov    (%ebx),%ah
		add    $0x000034,%edi
		cmp    %ah,%al
		jb     _07ea1c_jump

	_07eacc_jump:
		mov    0x000004(%esp),%ah
		mov    (%esp),%esi
		inc    %ah
		add    $0x000034,%edx
		mov    %ah,0x000004(%esp)
		mov    %ah,%al
		inc    %esi
		mov    0x000001(%ebx),%ah
		mov    %esi,(%esp)
		cmp    %ah,%al
		jb     _07ea0a_jump

	_07eaed_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07eb00_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $0x000016,%ebx
		movb   $0x000000,(%eax)
		mov    %esp,%eax
		movb   $0x000000,(%edx)
		xor    %edx,%edx
		call   _07fcc0_func
		mov    $0x001600,%edx
		mov    $0x00002f,%eax
		mov    %dx,(%esp)
		mov    %esp,%edx
		call   _0656e8_func
		mov    (%esp),%ah
		cmp    $0x000001,%ah
		jb     _07eb52_jump
		jbe    _07eb5b_jump
		cmp    $0x000080,%ah
		jb     _07ec15_jump
		jbe    _07eb68_jump
		cmp    $_0000ff_case,%ah
		je     _07eb5b_jump
		jmp    _07ec15_jump

	_07eb52_jump:
		test   %ah,%ah
		je     _07eb68_jump
		jmp    _07ec15_jump

	_07eb5b_jump:
		movb   $0x000002,(%esi)
		mov    $0x000001,%al
		movb   $0x000000,(%ecx)
		jmp    _07ec22_jump

	_07eb68_jump:
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _07fcc0_func
		mov    $0x004680,%ebx
		mov    %esp,%edx
		mov    $0x00002f,%eax
		mov    %bx,(%esp)
		call   _0656e8_func
		cmpb   $0x000080,(%esp)
		jne    _07eb9a_jump
		xor    %al,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07eb9a_jump:
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $0x001605,%ecx
		call   _07fcc0_func
		xor    %esi,%esi
		mov    $0x000001,%edx
		mov    $0x00002f,%eax
		mov    %cx,(%esp)
		mov    %si,0x000004(%esp)
		mov    %si,0x000008(%esp)
		mov    %dx,0x000006(%esp)
		mov    %esp,%edx
		mov    %si,0x000002(%esp)
		call   _0656e8_func
		cmpw   $0x000000,0x000004(%esp)
		jne    _07ec0c_jump
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $0x001606,%ecx
		call   _07fcc0_func
		mov    %esp,%edx
		mov    $0x00002f,%eax
		mov    %cx,(%esp)
		call   _0656e8_func
		mov    $0x000081,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07ec0c_jump:
		mov    $0x000082,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07ec15_jump:
		mov    (%esp),%al
		mov    %al,(%esi)
		mov    0x000001(%esp),%al
		mov    %al,(%ecx)
		mov    $0x000083,%al

	_07ec22_jump:
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07ec30_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000028,%esp
		mov    $0x00001c,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _07fcc0_func
		mov    $0x00000c,%ebx
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		lea    0x00001c(%esp),%ecx
		call   _07fcc0_func
		mov    $0x000500,%edx
		mov    $_0c1ea0_data,%eax
		mov    %edx,(%esp)
		mov    %ds,%edx
		mov    $_0c1ea0_data,%ebx
		mov    $0x000031,%eax
		mov    %dx,0x00001c(%esp)
		mov    %ebx,0x000014(%esp)
		mov    %esp,%ebx
		mov    %esp,%edx
		call   _0851f3_func
		mov    _0c1ea0_data,%eax
		add    $0x000028,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ee30_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    %edx,%eax
		and    $0x000003,%eax
		add    %eax,%edx
		je     _07ee52_jump
		mov    (%ebx),%ecx
		mov    0x000008(%ebx),%esi
		add    %edx,%ecx
		cmp    %esi,%ecx
		jbe    _07eee5_jump

	_07ee52_jump:
		mov    $0x000064,%eax
		call   _07f158_func
		mov    %eax,%ecx
		cmp    $_0cd268_data,%ebx
		jne    _07ee70_jump
		mov    _0c1540_data,%eax
		mov    %eax,(%esp)
		jmp    _07eeb7_jump

	_07ee70_jump:
		cmp    $_0cd274_data,%ebx
		jne    _07ee84_jump
		mov    %esp,%edi
		mov    $_0c1544_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		jmp    _07eeb7_jump

	_07ee84_jump:
		cmp    $_0cd248_data,%ebx
		jne    _07ee98_jump
		mov    %esp,%edi
		mov    $_0c154c_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		jmp    _07eeb7_jump

	_07ee98_jump:
		cmp    $_0cd254_data,%ebx
		jne    _07eead_jump
		mov    %esp,%edi
		mov    $_0c1554_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		jmp    _07eeb7_jump

	_07eead_jump:
		mov    %esp,%edi
		mov    $_0c155c_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)

	_07eeb7_jump:
		push   %edx
		push   %ebx
		lea    0x000008(%esp),%eax
		push   %eax
		push   $_0c1568_data
		push   %ecx
		call   _07fceb_func
		add    $0x000014,%esp
		mov    %ecx,%eax
		call   _01f474_func
		mov    %ecx,%eax
		call   _07f2f0_func
		xor    %eax,%eax
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07eee5_jump:
		mov    (%ebx),%edi
		mov    %ecx,(%ebx)
		mov    _0bd920_data,%edx
		mov    0x000004(%ebx),%eax
		mov    _0cd268_data,%ebp
		add    %edi,%eax
		cmp    %ebp,%edx
		jae    _07ef20_jump
		mov    _0cf282_data,%dx
		mov    %dx,_0bd924_data
		mov    _0cf270_data,%dx
		mov    %ebp,_0bd920_data
		mov    %dx,_0bd926_data

	_07ef20_jump:
		mov    _0bd928_data,%edx
		mov    _0cd274_data,%ebx
		cmp    %ebx,%edx
		jae    _07ef52_jump
		mov    _0cf282_data,%dx
		mov    %dx,_0bd92c_data
		mov    _0cf270_data,%dx
		mov    %ebx,_0bd928_data
		mov    %dx,_0bd92e_data

	_07ef52_jump:
		mov    _0bd930_data,%edx
		mov    _0cd248_data,%ecx
		cmp    %ecx,%edx
		jae    _07ef84_jump
		mov    _0cf282_data,%dx
		mov    %dx,_0bd934_data
		mov    _0cf270_data,%dx
		mov    %ecx,_0bd930_data
		mov    %dx,_0bd936_data

	_07ef84_jump:
		mov    _0bd938_data,%edx
		mov    _0cd254_data,%esi
		cmp    %esi,%edx
		jae    _07efb6_jump
		mov    _0cf282_data,%dx
		mov    %dx,_0bd93c_data
		mov    _0cf270_data,%dx
		mov    %esi,_0bd938_data
		mov    %dx,_0bd93e_data

	_07efb6_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07efc0_func:
		push   %ebx
		push   %edx
		mov    $_0cd284_data,%eax
		mov    $0x000168,%ebx
		call   _07f44c_func
		xor    %edx,%edx
		mov    $_0c9038_data,%eax
		mov    %edx,_0cd284_data
		call   _07fcc0_func
		pop    %edx
		pop    %ebx
		ret    



_07efe8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%edx
		mov    $_0cd280_data,%eax
		call   _07f050_func
		mov    %eax,%ecx
		mov    %eax,_0bd91c_data
		mov    _0cd284_data,%eax
		mov    %eax,_0c903c_data
		mov    _0cd288_data,%eax
		mov    %eax,_0c9038_data
		xor    %ah,%ah
		mov    %ah,_0c9040_data
		mov    $0x000001,%eax

	_07f021_jump:
		movswl %ax,%edx
		imul   $0x00000c,%edx,%edx
		mov    _0cd284_data,%ebx
		add    %ecx,%ebx
		mov    %ebx,_0c903c_data(%edx)
		xor    %ebx,%ebx
		mov    %ebx,_0c9038_data(%edx)
		xor    %bl,%bl
		inc    %eax
		mov    %bl,_0c9040_data(%edx)
		cmp    $0x00001e,%ax
		jl     _07f021_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f050_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%eax
		and    $0x000003,%eax
		add    %eax,%edx
		mov    %edx,%eax
		call   _085814_func
		mov    %eax,0x000004(%ecx)
		test   %eax,%eax
		jne    _07f092_jump
		mov    $0x000064,%eax
		call   _07f158_func
		push   %edx
		push   $_0c15a0_data
		push   %eax
		mov    %eax,%ebx
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %ebx,%eax
		call   _01f474_func
		mov    %ebx,%eax
		call   _07f2f0_func

	_07f092_jump:
		mov    0x000004(%ecx),%ebx
		mov    %edx,0x000008(%ecx)
		and    $0x000003,%ebx
		mov    %edx,%eax
		mov    %ebx,(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_07f0a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		xor    %ecx,%ecx

	_07f0ab_jump:
		movswl %cx,%edx
		imul   $0x00000c,%edx,%edx
		cmpb   $0x000000,_0c9040_data(%edx)
		jne    _07f147_jump
		cmpl   $0x000000,_0c9038_data(%edx)
		je     _07f147_jump

	_07f0cb_jump:
		xor    %esi,%esi
		xor    %eax,%eax

	_07f0cf_jump:
		movswl %cx,%edx
		imul   $0x00000c,%edx,%edx
		mov    _0c903c_data(%edx),%ebx
		mov    _0c9038_data(%edx),%ebp
		movswl %ax,%edx
		imul   $0x00000c,%edx,%edx
		add    %ebp,%ebx
		cmp    _0c903c_data(%edx),%ebx
		jne    _07f0fa_jump
		cmpb   $0x000000,_0c9040_data(%edx)
		je     _07f101_jump

	_07f0fa_jump:
		inc    %eax
		cmp    $0x00001e,%ax
		jl     _07f0cf_jump

	_07f101_jump:
		cmp    $0x00001e,%ax
		jge    _07f143_jump
		movswl %ax,%edx
		imul   $0x00000c,%edx,%edx
		movswl %cx,%ebx
		imul   $0x00000c,%ebx,%ebx
		mov    _0c9038_data(%edx),%esi
		mov    _0c9038_data(%ebx),%eax
		add    %esi,%eax
		mov    _0cd288_data,%ebp
		mov    %eax,_0c9038_data(%ebx)
		mov    _0cd284_data,%ebx
		xor    %eax,%eax
		add    %ebp,%ebx
		mov    %eax,_0c9038_data(%edx)
		mov    %ebx,_0c903c_data(%edx)

	_07f143_jump:
		test   %esi,%esi
		jne    _07f0cb_jump

	_07f147_jump:
		inc    %ecx
		cmp    $0x00001e,%cx
		jl     _07f0ab_jump
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f158_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    %eax,%ebp
		mov    $0x00001e,%edx
		mov    _0cd288_data,%edi
		and    $0x000003,%eax
		mov    %edx,0x000064(%esp)
		add    %eax,%ebp
		xor    %edx,%edx

	_07f179_jump:
		movswl %dx,%esi
		imul   $0x00000c,%esi,%esi
		cmpb   $0x000000,_0c9040_data(%esi)
		jne    _07f1b1_jump
		mov    %edi,%ecx
		mov    %ebp,%ebx
		mov    _0c9038_data(%esi),%eax
		cmp    %ebx,%eax
		jl     _07f1a1_jump
		cmp    %ecx,%eax
		jg     _07f1a1_jump
		mov    $0x000001,%eax
		jmp    _07f1a3_jump

	_07f1a1_jump:
		xor    %eax,%eax

	_07f1a3_jump:
		test   %eax,%eax
		je     _07f1b1_jump
		mov    %edx,0x000064(%esp)
		mov    _0c9038_data(%esi),%edi

	_07f1b1_jump:
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _07f179_jump
		mov    0x000064(%esp),%edi
		cmp    $0x00001e,%di
		jge    _07f2a4_jump
		xor    %edx,%edx

	_07f1c8_jump:
		movswl %di,%esi
		imul   $0x00000c,%esi,%esi
		mov    _0c903c_data(%esi),%eax
		mov    _0c9038_data(%esi),%esi
		add    %eax,%esi
		movswl %dx,%eax
		imul   $0x00000c,%eax,%eax
		cmp    _0c903c_data(%eax),%esi
		je     _07f1f1_jump
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _07f1c8_jump

	_07f1f1_jump:
		movswl %dx,%esi
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		cmpb   $0x000000,_0c9040_data(,%eax,4)
		je     _07f22b_jump
		mov    _0cd288_data,%ecx
		xor    %edx,%edx

	_07f20f_jump:
		movswl %dx,%esi
		imul   $0x00000c,%esi,%esi
		mov    _0cd284_data,%eax
		add    %ecx,%eax
		cmp    _0c903c_data(%esi),%eax
		je     _07f22b_jump
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _07f20f_jump

	_07f22b_jump:
		movswl %di,%esi
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		movswl %dx,%edi
		lea    0x000000(,%eax,4),%esi
		lea    0x000000(,%edi,4),%eax
		mov    _0c903c_data(%esi),%ebx
		sub    %edi,%eax
		add    %ebp,%ebx
		mov    %ebx,_0c903c_data(,%eax,4)
		mov    _0c9038_data(%esi),%ebx
		mov    _0c9038_data(,%eax,4),%ecx
		sub    %ebp,%ebx
		mov    _0cd280_data,%edi
		add    %ebx,%ecx
		add    %ebp,%edi
		mov    %ecx,_0c9038_data(,%eax,4)
		mov    $0x000001,%bh
		mov    %ebp,_0c9038_data(%esi)
		mov    %edi,_0cd280_data
		mov    %bh,_0c9040_data(%esi)
		mov    _0bd940_data,%eax
		mov    _0c903c_data(%esi),%esi
		cmp    %edi,%eax
		jae    _07f2e1_jump
		mov    %edi,_0bd940_data
		jmp    _07f2e1_jump

	_07f2a4_jump:
		mov    %ebp,%eax
		call   _085814_func
		mov    %eax,%esi
		mov    _0bd91c_data,%eax
		mov    _0bd940_data,%edx
		add    %ebp,%eax
		cmp    %edx,%eax
		jbe    _07f2c3_jump
		mov    %eax,_0bd940_data

	_07f2c3_jump:
		test   %esi,%esi
		jne    _07f2e1_jump
		push   %ebp
		push   $_0c15c8_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _07fceb_func
		add    $0x00000c,%esp
		mov    %esp,%eax
		call   _01f474_func

	_07f2e1_jump:
		mov    %esi,%eax
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f2f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    (%esp),%esi
		xor    %cl,%cl
		xor    %edx,%edx

	_07f302_jump:
		movswl %dx,%ebx
		imul   $0x00000c,%ebx,%ebx
		cmp    _0c903c_data(%ebx),%esi
		jne    _07f33e_jump
		cmpb   $0x000000,_0c9040_data(%ebx)
		je     _07f345_jump
		mov    $0x000001,%cl
		mov    _0cd280_data,%edi
		mov    _0c9038_data(%ebx),%eax
		xor    %dl,%dl
		sub    %eax,%edi
		mov    %dl,_0c9040_data(%ebx)
		mov    %edi,_0cd280_data
		call   _07f0a4_func
		jmp    _07f345_jump

	_07f33e_jump:
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _07f302_jump

	_07f345_jump:
		test   %cl,%cl
		jne    _07f350_jump
		mov    %esp,%eax
		call   _07f44c_func

	_07f350_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f35c_func:
		push   %edx
		mov    %eax,%edx
		cmp    $_0cd268_data,%eax
		lea    0x000004(%edx),%eax
		call   _07f44c_func
		movl   $0x000000,0x000004(%edx)
		movl   $0x000000,0x000008(%edx)
		movl   $0x000000,(%edx)
		pop    %edx
		ret    



_07f384_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf48d_data,%bl
		xor    %eax,%eax
		mov    _0cf48c_data,%al
		jmp    _07f3a3_jump

	_07f396_jump:
		movswl %ax,%edx
		xor    %ecx,%ecx
		inc    %eax
		mov    %ecx,_0cc7b8_data(,%edx,4)

	_07f3a3_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		cmp    %dx,%ax
		jl     _07f396_jump
		mov    _0cf48c_data,%bl
		mov    _0924d6_data,%ax
		mov    %bl,_0cf48d_data
		mov    %ax,_0924d4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f3c8_func:
		push   %ebx
		push   %edx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		add    %ebx,%edx
		and    $0x000003,%edx
		lea    (%ebx,%edx,1),%eax
		mov    %eax,_0e6e84_data
		pop    %edx
		pop    %ebx
		ret    



_07f3e0_func:
		push   %ebx
		push   %edx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		add    %ebx,%edx
		and    $0x000003,%edx
		lea    (%ebx,%edx,1),%eax
		mov    %eax,_0e6e80_data
		pop    %edx
		pop    %ebx
		ret    



_07f3f8_func:
		push   %edx
		mov    _0e6e84_data,%edx
		mov    %edx,(%eax)
		pop    %edx
		ret    



_07f404_func:
		push   %edx
		mov    _0e6e80_data,%edx
		mov    %edx,(%eax)
		pop    %edx
		ret    



_07f410_func:
		push   %edx
		mov    %eax,%edx
		call   _07f384_func
		mov    0x000004(%edx),%eax
		and    $0x000003,%eax
		mov    %eax,(%edx)
		pop    %edx
		ret    



_07f424_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000004(%eax),%eax
		and    $0x000003,%eax
		mov    %eax,(%edx)
		pop    %edx
		ret    



_07f434_func:
		jmp    _085814_func



_07f43c_func:
		push   %ebx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _0858f7_func
		pop    %ebx
		ret    



_07f44c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    (%eax),%ebx
		test   %ebx,%ebx
		je     _07f463_jump
		mov    %ebx,%eax
		call   _08590f_func
		movl   $0x000000,(%edx)

	_07f463_jump:
		pop    %edx
		pop    %ebx
		ret    



_07f466_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%edx

	_07f46d_jump:
		mov    (%edx),%al
		test   %al,%al
		je     _07f485_jump
		sub    $0x000061,%al
		xor    %ebx,%ebx
		mov    %al,%bl
		cmp    $0x000019,%ebx
		jg     _07f482_jump
		add    $0x000041,%al
		mov    %al,(%edx)

	_07f482_jump:
		inc    %edx
		jmp    _07f46d_jump

	_07f485_jump:
		mov    %ecx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f48b_func:
		push   %ecx

	_07f48c_jump:
		test   %ebx,%ebx
		jne    _07f494_jump

	_07f490_jump:
		xor    %eax,%eax
		pop    %ecx
		ret    

	_07f494_jump:
		mov    (%eax),%cl
		mov    (%edx),%ch
		cmp    %ch,%cl
		je     _07f4aa_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    %cl,%bl
		mov    %ch,%al
		sub    %eax,%ebx
		mov    %ebx,%eax
		pop    %ecx
		ret    

	_07f4aa_jump:
		cmpb   $0x000000,(%eax)
		je     _07f490_jump
		inc    %eax
		inc    %edx
		dec    %ebx
		jmp    _07f48c_jump



_07f4c0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmp    %edx,%eax
		je     _07f534_jump

	_07f4c8_jump:
		mov    (%ebx),%eax
		mov    (%edx),%ecx
		cmp    %eax,%ecx
		jne    _07f539_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _07f534_jump
		mov    0x000004(%ebx),%eax
		mov    0x000004(%edx),%ecx
		cmp    %eax,%ecx
		jne    _07f539_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _07f534_jump
		mov    0x000008(%ebx),%eax
		mov    0x000008(%edx),%ecx
		cmp    %eax,%ecx
		jne    _07f539_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _07f534_jump
		mov    0x00000c(%ebx),%eax
		mov    0x00000c(%edx),%ecx
		cmp    %eax,%ecx
		jne    _07f539_jump
		add    $0x000010,%ebx
		add    $0x000010,%edx
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		je     _07f4c8_jump

	_07f534_jump:
		sub    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_07f539_jump:
		cmp    %cl,%al
		jne    _07f55a_jump
		cmp    $0x000000,%al
		je     _07f534_jump
		cmp    %ch,%ah
		jne    _07f55a_jump
		cmp    $0x000000,%ah
		je     _07f534_jump
		shr    $0x000010,%eax
		shr    $0x000010,%ecx
		cmp    %cl,%al
		jne    _07f55a_jump
		cmp    $0x000000,%al
		je     _07f534_jump
		cmp    %ch,%ah

	_07f55a_jump:
		sbb    %eax,%eax
		or     $0x000001,%al
		pop    %ecx
		pop    %ebx
		ret    



_07f562_func:
		or     %eax,%eax
		jns    _07f56f_func
		neg    %eax
		mov    $0x000bff,%edx
		jmp    _07f574_jump



_07f56f_func:
		mov    $0x0003ff,%edx

	_07f574_jump:
		or     %eax,%eax
		je     _07f59f_jump
		push   %ecx
		bsr    %eax,%ecx
		mov    %cl,%ch
		mov    $0x00001f,%cl
		sub    %ch,%cl
		shl    %cl,%eax
		add    %eax,%eax
		mov    %ch,%cl
		movzbl %ch,%ecx
		add    %edx,%ecx
		mov    %eax,%edx
		and    $0xfffff000,%edx
		or     %ecx,%edx
		ror    $0x00000c,%edx
		shl    $0x000014,%eax
		pop    %ecx
		ret    

	_07f59f_jump:
		sub    %edx,%edx
		ret    



_07f5a2_func:
		xor    $0x80000000,%ecx



_07f5a8_func:
		or     %ebx,%ebx
		jne    _07f5b2_jump
		add    %ecx,%ecx
		je     _07f5be_jump
		rcr    %ecx

	_07f5b2_jump:
		or     %eax,%eax
		jne    _07f5c1_jump
		add    %edx,%edx
		jne    _07f5bf_jump
		mov    %ecx,%edx
		mov    %ebx,%eax

	_07f5be_jump:
		ret    

	_07f5bf_jump:
		rcr    %edx

	_07f5c1_jump:
		cmpb   $0x000000,_0bd971_data
		je     _07f5eb_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		faddl  (%esp)

	_07f5d4_jump:
		fstpl  0x000008(%esp)
		add    $0x000008,%esp
		fwait
		pop    %eax
		pop    %edx
		cmp    $0x80000000,%edx
		jne    _07f5ea_jump
		sub    %edx,%edx
		mov    %edx,%eax

	_07f5ea_jump:
		ret    

	_07f5eb_jump:
		push   %ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		mov    %ecx,%ebp
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %di,%cx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		je     _07f62c_jump
		or     $0x100000,%edx

	_07f62c_jump:
		or     %cx,%cx
		je     _07f637_jump
		or     $0x100000,%esi

	_07f637_jump:
		add    %eax,%eax
		adc    %edx,%edx
		add    %ebx,%ebx
		adc    %esi,%esi
		sub    %di,%cx
		je     _07f673_jump
		jae    _07f64e_jump
		mov    %edi,%ebp
		neg    %cx
		xchg   %eax,%ebx
		xchg   %esi,%edx

	_07f64e_jump:
		cmp    $0x000036,%cx
		jbe    _07f673_jump
		mov    %esi,%edx
		mov    %ebx,%eax
		add    %ebp,%ebp
		rcr    %edx
		rcr    %eax
		and    $0x800fffff,%edx
		ror    $0x00000d,%ebp
		and    $0x7ff00000,%ebp
		or     %ebp,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07f673_jump:
		or     %ecx,%ecx
		jns    _07f684_jump
		neg    %esi
		neg    %ebx
		sbb    $0x000000,%esi
		xor    $0x80000000,%ebp

	_07f684_jump:
		sub    %edi,%edi
		cmp    $0x000000,%cl
		je     _07f6ae_jump
		push   %ebx
		sub    %ebx,%ebx
		cmp    $0x000020,%cl
		jb     _07f6a0_jump
		or     %eax,%eax
		setne  %bl
		mov    %ebx,%edi
		sub    %ebx,%ebx
		mov    %edx,%eax
		sub    %edx,%edx

	_07f6a0_jump:
		shrd   %cl,%eax,%ebx
		or     %ebx,%edi
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		pop    %ebx

	_07f6ae_jump:
		add    %ebx,%eax
		adc    %esi,%edx
		jns    _07f6d7_jump
		cmp    $0x000035,%cl
		jb     _07f6ca_jump
		test   $0x7fffffff,%edi
		setne  %bl
		shr    %ebx
		adc    $0x000000,%eax
		adc    $0x000000,%edx

	_07f6ca_jump:
		neg    %edx
		neg    %eax
		sbb    $0x000000,%edx
		xor    $0x80000000,%ebp

	_07f6d7_jump:
		mov    %eax,%ebx
		or     %edx,%ebx
		je     _07f747_jump
		or     %bp,%bp
		je     _07f74b_jump

	_07f6e2_jump:
		test   $0x7fe00000,%edx
		jne    _07f6f4_jump
		dec    %bp
		je     _07f74b_jump
		add    %eax,%eax
		adc    %edx,%edx
		jmp    _07f6e2_jump

	_07f6f4_jump:
		test   $0x400000,%edx
		je     _07f70c_jump
		shr    %edx
		rcr    %eax
		adc    $0x000000,%edi
		inc    %bp
		cmp    $0x0007ff,%bp
		je     _07f755_jump

	_07f70c_jump:
		shr    %edx
		rcr    %eax
		jae    _07f736_jump
		or     %edi,%edi
		setne  %bl
		or     %eax,%ebx
		shr    %ebx
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		test   $0x200000,%edx
		je     _07f736_jump
		shr    %edx
		rcr    %eax
		inc    %bp
		cmp    $0x0007ff,%bp
		je     _07f755_jump

	_07f736_jump:
		and    $0x0fffff,%edx
		mov    %ebp,%ecx
		shl    $0x000015,%ebp
		add    %ecx,%ecx
		rcr    %ebp
		or     %ebp,%edx

	_07f747_jump:
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07f74b_jump:
		add    %ebp,%ebp
		rcr    %edx
		rcr    %eax
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07f755_jump:
		mov    %ebp,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _0859a3_jump



_07f75f_func:
		or     %eax,%eax
		jne    _07f76a_jump
		add    %edx,%edx
		jne    _07f768_jump
		ret    

	_07f768_jump:
		rcr    %edx

	_07f76a_jump:
		or     %ebx,%ebx
		jne    _07f779_jump
		add    %ecx,%ecx
		jne    _07f777_jump
		sub    %eax,%eax
		sub    %edx,%edx
		ret    

	_07f777_jump:
		rcr    %ecx

	_07f779_jump:
		cmpb   $0x000000,_0bd971_data
		je     _07f791_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		fmull  (%esp)
		jmp    _07f5d4_jump

	_07f791_jump:
		push   %ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %di,%cx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		jne    _07f7da_jump
		inc    %di

	_07f7cc_jump:
		dec    %di
		add    %eax,%eax
		adc    %edx,%edx
		test   $0x100000,%edx
		je     _07f7cc_jump

	_07f7da_jump:
		or     $0x100000,%edx
		or     %cx,%cx
		jne    _07f7f5_jump
		inc    %cx

	_07f7e7_jump:
		dec    %cx
		add    %ebx,%ebx
		adc    %esi,%esi
		test   $0x100000,%esi
		je     _07f7e7_jump

	_07f7f5_jump:
		or     $0x100000,%esi
		add    %di,%cx
		sub    $0x0003ff,%cx
		js     _07f816_jump
		cmp    $0x0007ff,%cx
		jb     _07f816_jump
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _0859a3_jump

	_07f816_jump:
		cmp    $0x00ffcb,%cx
		jge    _07f824_jump
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _085992_jump

	_07f824_jump:
		push   %ecx
		mov    $0x00000b,%cl
		shld   %cl,%eax,%edx
		shld   %cl,%ebp,%eax
		and    $0xfffff800,%eax
		shld   %cl,%ebx,%esi
		shld   %cl,%ebp,%ebx
		and    $0xfffff800,%ebx
		sub    %ebp,%ebp
		push   %esi
		push   %edx
		push   %eax
		mul    %ebx
		xchg   %eax,%esi
		mov    %edx,%ecx
		pop    %edx
		mul    %edx
		mov    %edx,%edi
		add    %eax,%ecx
		adc    %ebp,%edi
		adc    %ebp,%ebp
		pop    %eax
		xchg   %eax,%ebx
		mul    %ebx
		add    %eax,%ecx
		adc    %edx,%edi
		adc    $0x000000,%ebp
		mov    %ebx,%eax
		pop    %edx
		mul    %edx
		add    %edi,%eax
		adc    %ebp,%edx
		sub    %ebx,%ebx
		mov    $0x00000a,%cl
		shrd   %cl,%eax,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		pop    %ecx

	_07f875_jump:
		test   $0x200000,%edx
		je     _07f88e_jump
		shr    %edx
		rcr    %eax
		rcr    %ebx
		inc    %cx
		cmp    $0x0007ff,%cx
		je     _07f8f2_jump
		jmp    _07f875_jump

	_07f88e_jump:
		add    %ebx,%ebx
		jae    _07f8bc_jump
		jne    _07f8a1_jump
		or     %esi,%esi
		setne  %bl
		shr    %ebx
		jb     _07f8a1_jump
		mov    %eax,%esi
		shr    %esi

	_07f8a1_jump:
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		test   $0x200000,%edx
		je     _07f8bc_jump
		shr    %edx
		rcr    %eax
		inc    %cx
		cmp    $0x0007ff,%cx
		je     _07f8f2_jump

	_07f8bc_jump:
		or     %cx,%cx
		jg     _07f8d7_jump
		jne    _07f8c7_jump
		mov    $0x000001,%cl
		jmp    _07f8cc_jump

	_07f8c7_jump:
		neg    %cx
		dec    %cx

	_07f8cc_jump:
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %cx,%cx

	_07f8d7_jump:
		and    $0x0fffff,%edx
		mov    %ecx,%esi
		ror    $0x00000b,%ecx
		add    %esi,%esi
		rcr    %ecx
		and    $0xfff00000,%ecx
		or     %ecx,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07f8f2_jump:
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _0859a3_jump



_07f8fc_func:
		push   %ebx
		push   %edx
		sub    $0x000004,%esp
		lea    0x000014(%esp),%eax
		mov    %esp,%ebx
		mov    0x000010(%esp),%edx
		mov    %eax,(%esp)
		mov    $_0bd98e_data,%eax
		call   _0859fc_func
		add    $0x000004,%esp
		pop    %edx
		pop    %ebx
		ret    

	_07f91e_jump:
		ret    



_07f91f_func:
		push   %edx
		mov    %eax,%edx
		call   *_0bd944_data
		call   *_0bd948_data
		mov    %edx,%eax
		call   _07f937_func
		pop    %edx
		ret    



_07f937_func:
		push   %edx
		mov    %eax,%edx
		call   *_0bd948_data
		call   *_0bd94c_data
		mov    %edx,%eax
		jmp    _07fc77_jump



_07f94e_func:
		jmp    _085aad_jump



_07f953_func:
		push   %edx
		mov    %eax,%edx
		mov    $0x000041,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _07f970_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _085aee_func
		pop    %edx
		ret    

	_07f970_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_07f974_func:
		push   %ebx
		push   %edx
		sub    $0x000004,%esp
		mov    $0x000020,%edx
		mov    _0e6f08_data,%ebx
		mov    %edx,_0e6f08_data
		mov    %ebx,%edx
		shl    $0x000002,%edx

	_07f98f_jump:
		test   %edx,%edx
		je     _07f9a5_jump
		mov    _0e6e84_data(%edx),%eax
		sub    $0x000004,%edx
		mov    %eax,(%esp)
		dec    %ebx
		call   *(%esp)
		jmp    _07f98f_jump

	_07f9a5_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ebx
		ret    



_07f9ab_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $_07f974_func,%edx
		mov    _0e6f08_data,%ecx
		mov    %edx,_0bd944_data
		cmp    $0x000020,%ecx
		jge    _07f9de_jump
		mov    %ecx,%eax
		xor    %ecx,%eax
		lea    0x000001(%ecx),%edx
		mov    %ebx,_0e6e88_data(,%ecx,4)
		mov    %edx,_0e6f08_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07f9de_jump:
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f9e8_func:
		jmp    _07fa60_jump



_07fa5c_func:
		arpl   %bp,0x00006e(%edi)
	_07fa60_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %bh,%bl
		and    $0xfffffffc,%esp
		mov    %esp,%ebx
		mov    %ebx,_0bdbb4_data
		mov    %ebx,_0bdba0_data
		mov    $0x000024,%ax
		mov    %ax,_0bdbac_data
		mov    $0x50484152,%ebx
		sub    %eax,%eax
		mov    $0x000030,%ah
		int    $0x000021
		mov    %al,_0bdbd7_data
		mov    %ah,_0bdbd8_data
		mov    %eax,%ecx
		sub    %esi,%esi
		mov    $0x000081,%edi
		shr    $0x000010,%eax
		cmp    $0x004458,%ax
		jne    _07fae2_jump
		sub    $0x000030,%bl
		mov    %bl,%al
		mov    $0x000000,%ah
		push   %eax
		data16 mov _0bdbac_data,%es
		mov    %es:0x00005c,%ebx
		add    $0x000fff,%ebx
		and    $0xfffff000,%ebx
		mov    %ebx,_0bdba0_data
		shr    $0x00000c,%ebx
		mov    %ds,%ax
		mov    %eax,%es
		mov    $0x00004a,%ah
		int    $0x000021
		pop    %eax
		mov    %ds,%bx
		mov    $0x00002c,%cx
		jmp    _07fb1a_jump

	_07fae2_jump:
		cmp    $0x004243,%ax
		jne    _07fb1c_jump
		mov    %edx,_0bd950_data
		mov    %edx,%esi
		mov    0x00001c(%esi),%edx
		mov    %esp,%ebx
		sub    %edx,%ebx
		mov    $0x00004a,%ah
		int    $0x000021
		mov    %ds,%bx
		data16 mov %ds,_0bdbac_data
		mov    0x000010(%esi),%eax
		add    %eax,%edi
		sub    %esi,%esi
		mov    0x00002c(%eax),%si
		shl    $0x000004,%esi
		mov    %ds,%cx
		mov    $0x000009,%al
		mov    $0x000000,%ah

	_07fb1a_jump:
		jmp    _07fb75_jump

	_07fb1c_jump:
		mov    $0x000078,%dx
		mov    $0x00ff00,%ax
		int    $0x000021
		cmp    $0x000000,%al
		je     _07fb5e_jump
		mov    %gs,%ax
		cmp    $0x000000,%ax
		je     _07fb39_jump
		mov    %ax,_0bd954_data

	_07fb39_jump:
		mov    $0x000006,%ax
		mov    %ds,%bx
		int    $0x000031
		mov    $0x000001,%al
		mov    $0x000000,%ah
		or     %cx,%dx
		je     _07fb4d_jump
		mov    $0x000001,%ah

	_07fb4d_jump:
		data16 mov %es,_0bdbac_data
		mov    %es:0x00002c,%cx
		jmp    _07fb75_jump

	_07fb5e_jump:
		mov    %ds,%dx
		mov    $0x000024,%cx
		mov    %ecx,%ds
		mov    $0x00002c,%cx
		mov    %edx,%ds
		mov    $0x000017,%bx
		mov    $0x000000,%al
		mov    $0x000000,%ah

	_07fb75_jump:
		mov    %al,_0bdbce_data
		mov    %ah,_0bdbcf_data
		mov    %ebx,%es
		data16 mov %ds,%es:_07fcbd_jump
		mov    %esi,_0bdbd1_data
		mov    %cx,_0bdbd5_data
		push   %esi
		data16 mov _0bdbac_data,%es
		ds mov $_0e6f68_data,%edx
		add    $0x00000f,%edx
		and    $0x0000f0,%dl
		sub    %ecx,%ecx
		mov    %es:-0x000001(%edi),%cl
		cld    
		mov    $0x000020,%al
		repz scas %es:(%edi),%al
		lea    -0x000001(%edi),%esi
		mov    %edx,%edi
		mov    %es,%bx
		mov    %ds,%dx
		mov    %ebx,%ds
		mov    %edx,%es
		je     _07fbca_jump
		inc    %ecx
		rep movsb %ds:(%esi),%es:(%edi)

	_07fbca_jump:
		sub    %al,%al
		stos   %al,%es:(%edi)
		stos   %al,%es:(%edi)
		pop    %esi
		dec    %edi
		push   %edi
		push   %edx
		data16 mov %es:_0bdbd5_data,%ds
		sub    %ebp,%ebp

	_07fbdc_jump:
		mov    (%esi),%eax
		or     $0x20202020,%eax
		cmp    $0x37386f6e,%eax
		jne    _07fbf1_jump
		cmpb   $0x00003d,0x000004(%esi)
		jne    _07fbf1_jump
		inc    %ebp

	_07fbf1_jump:
		cmpb   $0x000000,(%esi)
		lods   %ds:(%esi),%al
		jne    _07fbf1_jump
		cmpb   $0x000000,(%esi)
		jne    _07fbdc_jump
		lods   %ds:(%esi),%al
		inc    %esi
		inc    %esi

	_07fbff_jump:
		cmpb   $0x000000,(%esi)
		movsb  %ds:(%esi),%es:(%edi)
		jne    _07fbff_jump
		pop    %ds
		pop    %esi
		mov    %esp,%ebx
		mov    %bp,_0bdbcc_data
		mov    %edi,_0bdbb0_data
		mov    %ebx,_0bdb9c_data
		ds mov $_0e6f68_data,%ecx
		ds mov $_0c1ea0_data,%edi
		sub    %edi,%ecx
		cmpb   $0x000001,_0bdbce_data
		jne    _07fc40_jump
		cmp    $0x001000,%ecx
		jbe    _07fc40_jump
		mov    $0x001000,%ecx

	_07fc40_jump:
		mov    %cl,%dl
		shr    $0x000002,%ecx
		sub    %eax,%eax
		rep stos %eax,%es:(%edi)
		mov    %dl,%cl
		and    $0x000003,%cl
		rep stos %al,%es:(%edi)
		ds mov $_0e6f68_data,%eax
		add    $0x00000f,%eax
		and    $0x0000f0,%al
		mov    %eax,_0bdba4_data
		mov    %esi,_0bdba8_data
		mov    $_0000ff_case,%eax
		call   _085bae_func
		sub    %ebp,%ebp
		call   _085b5f_func

	_07fc77_jump:
		jmp    _07fc9c_jump



_07fc79_func:
		push   %edx
		push   %eax
		mov    $_07fa5c_func,%edx
		mov    $0x003d01,%ax
		int    $0x000021
		mov    %ax,%bx
		pop    %edx
		mov    %edx,%esi
		cld    

	_07fc8d_jump:
		lods   %ds:(%esi),%al
		cmp    $0x000000,%al
		jne    _07fc8d_jump
		mov    %esi,%ecx
		sub    %edx,%ecx
		dec    %ecx
		mov    $0x000040,%ah
		int    $0x000021
		pop    %eax

	_07fc9c_jump:
		push   %eax
		mov    $0x000000,%eax
		mov    $_0000ff_case,%edx
		call   _085bf9_func
		pop    %eax
		mov    $0x00004c,%ah
		int    $0x000021
		lea    0x000000(%eax),%eax



_07fcb4_func:
		data16 mov %cs:_07fcbd_jump,%ds
		ret    

	_07fcbd_jump:
		add    %al,(%eax)


_07fcc0_func:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %dl,0x000051(%eax)
		mov    %dl,%dh
		shl    $0x000008,%edx
		mov    %dh,%dl
		shl    $0x000008,%edx
		mov    %dh,%dl
		mov    %ebx,%ecx
		call   _085150_func
		pop    %ecx
		pop    %eax
		ret    



_07fcd8_func:
		push   %ebx
		push   %ecx
		mov    %dl,%bl
		mov    (%eax),%edx
		lea    0x000001(%edx),%ecx
		mov    %ecx,(%eax)
		mov    %bl,(%edx)
		incl   0x000010(%eax)
		pop    %ecx
		pop    %ebx
		ret    



_07fceb_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		lea    0x00001c(%esp),%eax
		mov    $_07fcd8_func,%ecx
		mov    %esp,%ebx
		mov    0x000018(%esp),%edx
		mov    %eax,(%esp)
		mov    0x000014(%esp),%eax
		call   _085e18_func
		mov    0x000014(%esp),%edx
		movb   $0x000000,(%edx,%eax,1)
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07fd1b_func:
		push   %edx
		xor    %edx,%edx
		mov    _0bdbc0_data,%eax
		mov    %edx,_0bdbc0_data
		test   %eax,%eax
		jne    _07fd36_jump
		mov    $0x000008,%ah
		int    $0x000021
		and    $_0000ff_case,%eax

	_07fd36_jump:
		pop    %edx
		ret    



_07fd4a_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		test   %edx,%edx
		jge    _07fd69_jump
		lea    -0x000008(%ebp),%edx
		mov    $0x002043,%eax
		call   _0869d4_func
		jmp    _07fd94_jump

	_07fd69_jump:
		cmpb   $0x000000,_0bd971_data
		je     _07fd88_jump
		mov    -0x000008(%ebp),%eax
		push   %ebp
		push   %edx
		push   %eax
		mov    %esp,%ebp
		fldl   0x000000(%ebp)
		fsqrt  
		fstpl  0x000000(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		jmp    _07fd94_jump

	_07fd88_jump:
		test   %edx,%edx
		je     _07fd9a_jump
		mov    -0x000008(%ebp),%eax
		call   _086ac4_func

	_07fd94_jump:
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)

	_07fd9a_jump:
		mov    -0x000008(%ebp),%eax
		mov    -0x000004(%ebp),%edx
		mov    %ebp,%esp
		pop    %ebp
		ret    



_07fdac_func:
		mov    $0x00001f,%al
		jmp    _07fdb2_jump



_07fdb0_func:
		mov    $0x000020,%al

	_07fdb2_jump:
		add    %edx,%edx
		rcr    %ah
		shr    %ah
		or     %al,%ah
		shr    %edx
		push   %ecx
		mov    %edx,%ecx
		sar    $0x000014,%ecx
		and    $0x0007ff,%cx
		sub    $0x0003fe,%cx
		jl     _07fe21_jump
		cmp    $0x000020,%cx
		jg     _07fe1a_jump
		and    $0x00003f,%al
		cmp    %al,%cl
		jg     _07fe1a_jump
		mov    %ah,%ch
		and    $0x0fffff,%edx
		and    $0xfff00000,%eax
		or     %eax,%edx
		rol    $0x00000c,%edx
		stc    
		rcr    %edx
		rcr    %ch
		cmp    $0x000020,%cl
		jne    _07fdfc_jump
		mov    %edx,%eax
		add    %ch,%ch
		jmp    _07fe07_jump

	_07fdfc_jump:
		sub    %eax,%eax
		shld   %cl,%edx,%eax
		shl    %cl,%edx
		add    %ch,%ch
		add    %edx,%edx

	_07fe07_jump:
		mov    $_0000ff_case,%cl
		rcr    %cl
		and    %cl,%ch
		add    %ch,%ch
		adc    $0x000000,%eax
		add    %ch,%ch
		jae    _07fe18_jump
		neg    %eax

	_07fe18_jump:
		pop    %ecx
		ret    

	_07fe1a_jump:
		mov    $0x80000000,%eax
		pop    %ecx
		ret    

	_07fe21_jump:
		sub    %eax,%eax
		pop    %ecx
		ret    



_07fe25_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000038,%esp
		mov    %eax,-0x000044(%ebp)
		mov    %edx,-0x000040(%ebp)
		mov    %ebx,%esi
		lea    -0x00002c(%ebp),%ebx
		call   _086cf6_func
		cmpl   $0x000020,-0x00002c(%ebp)
		jl     _07fe5b_jump
		mov    _0c1a24_data(,%esi,4),%eax
		lea    -0x000044(%ebp),%edx
		or     $0x000024,%ah
		call   _0869d4_func
		jmp    _080050_jump

	_07fe5b_jump:
		lea    -0x000034(%ebp),%eax
		push   %eax
		lea    -0x000028(%ebp),%eax
		push   %eax
		push   $0x3fe921fb
		push   $0x54442d18
		mov    -0x000040(%ebp),%ebx
		push   %ebx
		mov    -0x000044(%ebp),%ecx
		push   %ecx
		call   _086d4a_func
		mov    %esi,%eax
		mov    -0x000028(%ebp),%edx
		and    $0x000002,%eax
		add    %edx,%eax
		and    $0x000007,%eax
		mov    %eax,-0x000028(%ebp)
		testb  $0x000001,-0x000028(%ebp)
		je     _07feab_jump
		mov    $0x54442d18,%eax
		mov    $0x3fe921fb,%edx
		mov    -0x000034(%ebp),%ebx
		mov    -0x000030(%ebp),%ecx
		call   _07f5a2_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_07feab_jump:
		lea    -0x00001c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _086cf6_func
		mov    -0x00001c(%ebp),%ebx
		cmp    $0xffffffe6,%ebx
		jge    _07fedc_jump
		mov    -0x000034(%ebp),%edi
		mov    -0x000030(%ebp),%eax
		xor    %ecx,%ecx
		mov    %eax,-0x000014(%ebp)
		mov    $0x3ff00000,%eax
		mov    %ecx,-0x000018(%ebp)
		mov    %eax,-0x000010(%ebp)
		jmp    _07ff7f_jump

	_07fedc_jump:
		test   %ebx,%ebx
		jle    _07fee5_jump
		xor    %eax,%eax
		mov    %eax,-0x00001c(%ebp)

	_07fee5_jump:
		mov    -0x00001c(%ebp),%edx
		neg    %edx
		mov    %edx,-0x00001c(%ebp)
		cmp    $0x000008,%edx
		jle    _07fef9_jump
		movl   $0x000008,-0x00001c(%ebp)

	_07fef9_jump:
		mov    -0x00001c(%ebp),%eax
		mov    _0c1a00_data(,%eax,4),%eax
		mov    %eax,-0x00001c(%ebp)
		mov    -0x000028(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		jne    _07ff13_jump
		cmp    $0x000001,%esi
		jne    _07ff4f_jump

	_07ff13_jump:
		mov    $0x000008,%eax
		mov    -0x00001c(%ebp),%edx
		sub    %edx,%eax
		mov    %eax,-0x000024(%ebp)
		mov    %edx,%eax
		mov    $_0c19b8_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    -0x000034(%ebp),%eax
		mov    %edx,-0x000020(%ebp)
		mov    -0x000030(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07f75f_func
		mov    -0x000024(%ebp),%ecx
		mov    -0x000020(%ebp),%ebx
		call   _086e43_func
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000010(%ebp)

	_07ff4f_jump:
		mov    -0x000028(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		je     _07ff5c_jump
		cmp    $0x000001,%esi
		jne    _07ff7f_jump

	_07ff5c_jump:
		mov    $0x000008,%ecx
		mov    -0x00001c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		sub    %ebx,%ecx
		shl    $0x000003,%ebx
		mov    -0x000030(%ebp),%edx
		add    $_0c1970_data,%ebx
		call   _086e78_func
		mov    %eax,%edi
		mov    %edx,-0x000014(%ebp)

	_07ff7f_jump:
		mov    -0x000028(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		je     _07ff92_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,-0x00003c(%ebp)
		mov    -0x000010(%ebp),%eax
		jmp    _07ff98_jump

	_07ff92_jump:
		mov    -0x000014(%ebp),%eax
		mov    %edi,-0x00003c(%ebp)

	_07ff98_jump:
		mov    %eax,-0x000038(%ebp)
		testb  $0x000004,-0x000028(%ebp)
		je     _07ffb2_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _0802de_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_07ffb2_jump:
		cmp    $0x000001,%esi
		jne    _08002d_jump
		mov    -0x000028(%ebp),%edx
		mov    -0x000028(%ebp),%eax
		add    $0x000002,%edx
		add    $0x000003,%eax
		mov    %edx,-0x000028(%ebp)
		test   $0x000002,%al
		je     _07ffd6_jump
		mov    -0x000018(%ebp),%ebx
		mov    -0x000010(%ebp),%ecx
		jmp    _07ffdb_jump

	_07ffd6_jump:
		mov    -0x000014(%ebp),%ecx
		mov    %edi,%ebx

	_07ffdb_jump:
		testb  $0x000004,-0x000028(%ebp)
		je     _07ffee_jump
		mov    %ebx,%eax
		mov    %ecx,%edx
		call   _0802de_func
		mov    %eax,%ebx
		mov    %edx,%ecx

	_07ffee_jump:
		test   %ecx,%ecx
		jne    _08001c_jump
		call   _086ebf_func
		cmpl   $0x000000,-0x000038(%ebp)
		jle    _08000a_jump
		mov    _0c1a50_data,%eax
		mov    _0c1a54_data,%edx
		jmp    _080050_jump

	_08000a_jump:
		mov    _0c1a50_data,%eax
		mov    _0c1a54_data,%edx
		call   _0802de_func
		jmp    _080050_jump

	_08001c_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _0800d8_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_08002d_jump:
		cmpl   $0x00001c,-0x00002c(%ebp)
		jl     _08004a_jump
		lea    -0x00003c(%ebp),%ebx
		mov    _0c1a24_data(,%esi,4),%eax
		lea    -0x000044(%ebp),%edx
		or     $0x000002,%ah
		call   _0869de_func
		jmp    _080050_jump

	_08004a_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx

	_080050_jump:
		lea    -0x00000c(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_08006a_func:
		push   %ebx
		cmpb   $0x000000,_0bd971_data
		je     _08007b_jump
		call   _086ef5_func
		pop    %ebx
		ret    

	_08007b_jump:
		xor    %ebx,%ebx
		call   _07fe25_func
		pop    %ebx
		ret    



_080091_func:
		push   %ebx
		cmpb   $0x000000,_0bd971_data
		je     _0800a2_jump
		call   _086eec_func
		pop    %ebx
		ret    

	_0800a2_jump:
		mov    $0x000002,%ebx
		call   _07fe25_func
		pop    %ebx
		ret    



_0800d8_func:
		or     %ebx,%ebx
		jne    _0800e7_jump
		add    %ecx,%ecx
		jne    _0800e5_jump
		jmp    _085997_jump

	_0800e5_jump:
		rcr    %ecx

	_0800e7_jump:
		or     %eax,%eax
		jne    _0800f2_jump
		add    %edx,%edx
		jne    _0800f0_jump
		ret    

	_0800f0_jump:
		rcr    %edx

	_0800f2_jump:
		cmpb   $0x000000,_0bd971_data
		je     _08012b_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		testb  $0x000001,_0bdc3c_data
		je     _080112_jump
		call   _087690_func
		jmp    _080118_jump

	_080112_jump:
		fdivl  (%esp)
		add    $0x000008,%esp

	_080118_jump:
		fstpl  (%esp)
		fwait
		pop    %eax
		pop    %edx
		cmp    $0x80000000,%edx
		jne    _08012a_jump
		sub    %edx,%edx
		mov    %edx,%eax

	_08012a_jump:
		ret    

	_08012b_jump:
		push   %ebp
		mov    %esp,%ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %cx,%di
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		je     _08016e_jump
		or     $0x100000,%edx
		jmp    _08017c_jump

	_08016e_jump:
		add    %eax,%eax
		adc    %edx,%edx
		dec    %di
		test   $0x100000,%edx
		je     _08016e_jump

	_08017c_jump:
		or     %cx,%cx
		je     _080189_jump
		or     $0x100000,%esi
		jmp    _080197_jump

	_080189_jump:
		add    %ebx,%ebx
		adc    %esi,%esi
		dec    %cx
		test   $0x100000,%esi
		je     _080189_jump

	_080197_jump:
		sub    %cx,%di
		add    $0x0003ff,%di
		js     _0801b2_jump
		cmp    $0x0007ff,%di
		jb     _0801b2_jump
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _0859a3_jump

	_0801b2_jump:
		cmp    $0x00ffcc,%di
		jge    _0801c0_jump
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _085992_jump

	_0801c0_jump:
		push   %edi
		mov    $0x00000b,%cl
		shld   %cl,%eax,%edx
		shld   %cl,%ebp,%eax
		and    $0xfffff800,%eax
		shld   %cl,%ebx,%esi
		shld   %cl,%ebp,%ebx
		and    $0xfffff800,%ebx
		push   %esi
		push   %ebx
		mov    %esi,%ecx
		mov    %edx,%edi
		mov    %eax,%esi
		sub    %eax,%eax
		cmp    %edx,%ecx
		ja     _0801eb_jump
		sub    %ecx,%edx
		inc    %eax

	_0801eb_jump:
		push   %eax
		mov    %esi,%eax
		div    %ecx
		push   %eax
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %edx,%ebx
		mul    %edx
		add    %ebx,%eax
		adc    $0x000000,%edx
		mov    -0x000014(%ebp),%ebx
		testb  $0x000001,-0x000018(%ebp)
		je     _08020c_jump
		add    %ebx,%eax
		adc    -0x000010(%ebp),%edx

	_08020c_jump:
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     _080226_jump

	_080214_jump:
		subl   $0x000001,-0x00001c(%ebp)
		sbbl   $0x000000,-0x000018(%ebp)
		add    %ebx,%ecx
		adc    -0x000010(%ebp),%esi
		adc    $0x000000,%edi
		jne    _080214_jump

	_080226_jump:
		mov    %esi,%edi
		mov    %ecx,%esi
		mov    -0x000010(%ebp),%ecx
		cmp    %edi,%ecx
		ja     _08023b_jump
		sub    %ecx,%edi
		addl   $0x000001,-0x00001c(%ebp)
		adcl   $0x000000,-0x000018(%ebp)

	_08023b_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		div    %ecx
		push   %eax
		or     %eax,%eax
		je     _080272_jump
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %edx,%ebx
		mul    %edx
		add    %ebx,%eax
		adc    $0x000000,%edx
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     _080272_jump

	_08025b_jump:
		subl   $0x000001,-0x000020(%ebp)
		sbbl   $0x000000,-0x00001c(%ebp)
		sbbl   $0x000000,-0x000018(%ebp)
		add    -0x000014(%ebp),%ecx
		adc    -0x000010(%ebp),%esi
		adc    $0x000000,%edi
		jne    _08025b_jump

	_080272_jump:
		pop    %eax
		pop    %edx
		pop    %ebx
		add    $0x000008,%esp
		pop    %edi
		dec    %di
		shr    %ebx
		jae    _080284_jump
		rcr    %edx
		rcr    %eax
		inc    %edi

	_080284_jump:
		sub    %esi,%esi
		mov    $0x00000b,%cl
		shrd   %cl,%edx,%eax
		rcr    %esi
		shrd   %cl,%esi,%edx
		or     $0xfff00000,%edx
		add    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		adc    $0x000000,%edi
		or     %di,%di
		jg     _0802c3_jump
		jne    _0802ac_jump
		mov    $0x000001,%cl
		jmp    _0802b2_jump

	_0802ac_jump:
		neg    %di
		mov    %di,%cx

	_0802b2_jump:
		and    $0x1fffff,%edx
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %di,%di

	_0802c3_jump:
		and    $0x0fffff,%edx
		mov    %edi,%esi
		ror    $0x00000b,%edi
		add    %esi,%esi
		rcr    %edi
		and    $0xfff00000,%edi
		or     %edi,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    



_0802de_func:
		test   %edx,%edx
		jne    _0802e4_jump
		test   %eax,%eax

	_0802e4_jump:
		je     _0802ec_jump
		xor    $0x80000000,%edx

	_0802ec_jump:
		ret    



_0802ed_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		push   %eax
		push   %edx
		mov    %ecx,%ebp
		testb  $0x000001,0x00000c(%ecx)
		jne    _080317_jump
		mov    $0x000004,%eax
		call   _086eb3_func
		mov    0x00000c(%ecx),%dh
		or     $0x000020,%dh
		xor    %eax,%eax
		mov    %dh,0x00000c(%ecx)
		jmp    _0804c1_jump

	_080317_jump:
		imul   %edx,%ebx
		test   %ebx,%ebx
		jne    _080325_jump
		mov    %ebx,%eax
		jmp    _0804c1_jump

	_080325_jump:
		cmpl   $0x000000,0x000008(%ecx)
		jne    _080332_jump
		mov    %ebp,%eax
		call   _087774_func

	_080332_jump:
		xor    %esi,%esi
		mov    0x00000c(%ebp),%dl
		mov    %esi,0x000008(%esp)
		test   $0x000040,%dl
		je     _080442_jump
		mov    %ebx,0x00000c(%esp)

	_080348_jump:
		mov    0x000004(%ebp),%edx
		test   %edx,%edx
		je     _0803a3_jump
		mov    0x00000c(%esp),%ebx
		cmp    %ebx,%edx
		jbe    _080359_jump
		mov    %ebx,%edx

	_080359_jump:
		mov    0x000004(%esp),%edi
		mov    %edx,%ecx
		mov    0x000000(%ebp),%esi
		mov    0x000008(%esp),%ebx
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x00000c(%esp),%eax
		mov    0x000000(%ebp),%ecx
		lea    (%edi,%edx,1),%esi
		add    %edx,%ebx
		mov    %esi,0x000004(%esp)
		mov    %ebx,0x000008(%esp)
		mov    0x000004(%ebp),%edi
		add    %edx,%ecx
		sub    %edx,%eax
		sub    %edx,%edi
		mov    %ecx,0x000000(%ebp)
		mov    %eax,0x00000c(%esp)
		mov    %edi,0x000004(%ebp)

	_0803a3_jump:
		mov    0x00000c(%esp),%ecx
		test   %ecx,%ecx
		je     _0804b6_jump
		cmp    0x000014(%ebp),%ecx
		jae    _0803be_jump
		testb  $0x000004,0x00000d(%ebp)
		je     _08042e_jump

	_0803be_jump:
		movl   $0x000000,0x000004(%ebp)
		mov    0x00000c(%esp),%ebx
		mov    0x000008(%ebp),%eax
		mov    0x00000d(%ebp),%cl
		mov    %eax,0x000000(%ebp)
		test   $0x000004,%cl
		jne    _0803e4_jump
		cmp    $0x000200,%ebx
		jbe    _0803e4_jump
		xor    %bl,%bl
		and    $0x0000fe,%bh

	_0803e4_jump:
		mov    0x000004(%esp),%edx
		mov    0x000010(%ebp),%eax
		call   _0877eb_func
		cmp    $0xffffffff,%eax
		jne    _0803fe_jump
		orb    $0x000020,0x00000c(%ebp)
		jmp    _0804b6_jump

	_0803fe_jump:
		test   %eax,%eax
		jne    _08040b_jump

	_080402_jump:
		orb    $0x000010,0x00000c(%ebp)
		jmp    _0804b6_jump

	_08040b_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000008(%esp),%ecx
		add    %eax,%edx
		sub    %eax,%ebx
		add    %eax,%ecx
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %ecx,0x000008(%esp)
		jmp    _080348_jump

	_08042e_jump:
		mov    %ebp,%eax
		call   _08087e_func
		test   %eax,%eax
		je     _0804b6_jump
		jmp    _080348_jump

	_080442_jump:
		mov    0x000004(%esp),%edx
		add    %edx,%ebx

	_080448_jump:
		cmpl   $0x000000,0x000004(%ebp)
		jne    _080459_jump
		mov    %ebp,%eax
		call   _08087e_func
		test   %eax,%eax
		je     _0804b6_jump

	_080459_jump:
		mov    0x000004(%ebp),%ecx
		mov    0x000000(%ebp),%eax
		dec    %ecx
		lea    0x000001(%eax),%esi
		mov    %ecx,0x000004(%ebp)
		mov    %esi,0x000000(%ebp)
		mov    (%eax),%al
		and    $_0000ff_case,%eax
		cmp    $0x00000d,%eax
		jne    _08049d_jump
		cmpl   $0x000000,0x000004(%ebp)
		jne    _080486_jump
		mov    %ebp,%eax
		call   _08087e_func
		test   %eax,%eax
		je     _0804b6_jump

	_080486_jump:
		mov    0x000004(%ebp),%edi
		mov    0x000000(%ebp),%eax
		dec    %edi
		lea    0x000001(%eax),%esi
		mov    %edi,0x000004(%ebp)
		mov    %esi,0x000000(%ebp)
		mov    (%eax),%al
		and    $_0000ff_case,%eax

	_08049d_jump:
		cmp    $0x00001a,%eax
		je     _080402_jump
		mov    %al,(%edx)
		mov    0x000008(%esp),%eax
		inc    %eax
		inc    %edx
		mov    %eax,0x000008(%esp)
		cmp    %ebx,%edx
		jne    _080448_jump

	_0804b6_jump:
		mov    0x000008(%esp),%eax
		mov    (%esp),%esi
		xor    %edx,%edx
		div    %esi

	_0804c1_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0804c8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		andb   $0x0000ef,0x00000c(%edx)
		cmp    0x000004(%edx),%eax
		jg     _0804f4_jump
		mov    0x000008(%edx),%ebx
		mov    (%edx),%ecx
		sub    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _0804f4_jump
		mov    0x000004(%edx),%edi
		lea    (%ecx,%eax,1),%esi
		sub    %eax,%edi
		mov    %esi,(%edx)
		xor    %eax,%eax
		mov    %edi,0x000004(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0804f4_jump:
		mov    0x000008(%edx),%eax
		movl   $0x000000,0x000004(%edx)
		mov    %eax,(%edx)
		mov    $0x000001,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_08050a_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%esi
		testb  $0x000006,0x00000c(%eax)
		je     _080572_jump
		testb  $0x000010,0x00000d(%ecx)
		je     _080543_jump
		mov    %ecx,%eax
		call   _08780a_func
		test   %eax,%eax
		je     _080557_jump
		test   %ebx,%ebx
		jne    _08053a_jump
		test   %esi,%esi
		jge    _08053a_jump

	_080530_jump:
		mov    $0x000009,%eax
		call   _086eb3_func

	_08053a_jump:
		mov    $0xffffffff,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_080543_jump:
		cmp    $0x000001,%ebx
		jne    _08054b_jump
		sub    0x000004(%ecx),%esi

	_08054b_jump:
		mov    0x000008(%ecx),%eax
		movl   $0x000000,0x000004(%ecx)
		mov    %eax,(%ecx)

	_080557_jump:
		andb   $0x0000eb,0x00000c(%ecx)
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		call   _080e86_func
		cmp    $0xffffffff,%eax
		jne    _080600_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_080572_jump:
		cmp    $0x000001,%ebx
		jb     _080580_jump
		jbe    _080586_jump
		cmp    $0x000002,%ebx
		je     _0805dc_jump
		jmp    _080530_jump

	_080580_jump:
		test   %ebx,%ebx
		je     _0805ab_jump
		jmp    _080530_jump

	_080586_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		mov    0x000004(%ecx),%edi
		call   _0804c8_func
		test   %eax,%eax
		je     _080600_jump
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		sub    %edi,%edx
		call   _080e86_func
		cmp    $0xffffffff,%eax
		jne    _080600_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0805ab_jump:
		mov    0x000010(%ecx),%eax
		call   _0878e3_func
		mov    0x000004(%ecx),%edx
		mov    %esi,%edi
		sub    %edx,%eax
		sub    %eax,%edi
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _0804c8_func
		test   %eax,%eax
		je     _080600_jump
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		call   _080e86_func
		cmp    $0xffffffff,%eax
		jne    _080600_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0805dc_jump:
		mov    0x000008(%ecx),%eax
		mov    0x00000c(%ecx),%dl
		mov    %eax,(%ecx)
		and    $0x0000ef,%dl
		mov    0x000010(%ecx),%eax
		mov    %dl,0x00000c(%ecx)
		mov    %esi,%edx
		movl   $0x000000,0x000004(%ecx)
		call   _080e86_func
		cmp    $0xffffffff,%eax
		je     _080602_jump

	_080600_jump:
		xor    %eax,%eax

	_080602_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_080606_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		push   %eax
		push   %edx
		mov    %ecx,%ebp
		testb  $0x000002,0x00000c(%ecx)
		jne    _08062b_jump
		mov    $0x000004,%eax
		call   _086eb3_func
		orb    $0x000020,0x00000c(%ecx)
		xor    %eax,%eax
		jmp    _0807bf_jump

	_08062b_jump:
		imul   %edx,%ebx
		test   %ebx,%ebx
		jne    _080639_jump
		mov    %ebx,%eax
		jmp    _0807bf_jump

	_080639_jump:
		cmpl   $0x000000,0x000008(%ecx)
		jne    _080646_jump
		mov    %ebp,%eax
		call   _087774_func

	_080646_jump:
		mov    0x00000c(%ebp),%eax
		mov    0x00000c(%ebp),%dl
		xor    %esi,%esi
		and    $0x000030,%eax
		and    $0x0000cf,%dl
		mov    %esi,0x00000c(%esp)
		mov    %eax,0x000008(%esp)
		mov    %dl,0x00000c(%ebp)
		test   $0x000040,%dl
		je     _080741_jump
		mov    %ebx,0x000010(%esp)

	_08066c_jump:
		cmpl   $0x000000,0x000004(%ebp)
		jne    _0806b4_jump
		mov    0x000010(%esp),%eax
		cmp    0x000014(%ebp),%eax
		jb     _0806b4_jump
		mov    %eax,%ebx
		xor    %al,%bl
		and    $0x0000fe,%bh
		test   %ebx,%ebx
		jne    _080688_jump
		mov    %eax,%ebx

	_080688_jump:
		mov    0x000004(%esp),%edx
		mov    0x000010(%ebp),%eax
		call   _0878f4_func
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		je     _0806ae_jump
		test   %eax,%eax
		jne    _080715_jump
		call   _087968_func
		movl   $0x00000c,(%eax)

	_0806ae_jump:
		orb    $0x000020,0x00000c(%ebp)
		jmp    _080715_jump

	_0806b4_jump:
		mov    0x000014(%ebp),%edx
		mov    0x000004(%ebp),%ebx
		mov    0x000010(%esp),%ecx
		sub    %ebx,%edx
		cmp    %ecx,%edx
		jbe    _0806c6_jump
		mov    %ecx,%edx

	_0806c6_jump:
		mov    0x000004(%esp),%esi
		mov    %edx,%ecx
		mov    0x000000(%ebp),%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x000004(%ebp),%edi
		add    %edx,%edi
		mov    0x00000d(%ebp),%bh
		mov    %edi,0x000004(%ebp)
		or     $0x000010,%bh
		mov    0x000000(%ebp),%esi
		mov    %bh,0x00000d(%ebp)
		add    %edx,%esi
		mov    0x000004(%ebp),%eax
		mov    0x000014(%ebp),%ebx
		mov    %esi,0x000000(%ebp)
		cmp    %ebx,%eax
		je     _08070e_jump
		testb  $0x000004,0x00000d(%ebp)
		je     _080715_jump

	_08070e_jump:
		mov    %ebp,%eax
		call   _08780a_func

	_080715_jump:
		mov    0x000004(%esp),%ecx
		mov    0x00000c(%esp),%esi
		mov    0x000010(%esp),%edi
		add    %edx,%ecx
		add    %edx,%esi
		mov    %ecx,0x000004(%esp)
		mov    %esi,0x00000c(%esp)
		sub    %edx,%edi
		mov    %edi,0x000010(%esp)
		je     _08079c_jump
		testb  $0x000020,0x00000c(%ebp)
		je     _08066c_jump
		jmp    _08079c_jump

	_080741_jump:
		mov    0x00000d(%ebp),%cl
		xor    %edi,%edi
		test   $0x000004,%cl
		je     _08075c_jump
		mov    %cl,%ch
		and    $0x0000fa,%ch
		mov    %ch,%al
		or     $0x000001,%al
		mov    $0x000001,%edi
		mov    %al,0x00000d(%ebp)

	_08075c_jump:
		mov    0x000004(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		inc    %edx
		mov    %edx,0x000004(%esp)
		mov    %ebp,%edx
		call   _08092a_func
		testb  $0x000030,0x00000c(%ebp)
		jne    _080783_jump
		mov    0x00000c(%esp),%ecx
		inc    %ecx
		mov    %ecx,0x00000c(%esp)
		cmp    %ecx,%ebx
		jne    _08075c_jump

	_080783_jump:
		test   %edi,%edi
		je     _08079c_jump
		mov    0x00000d(%ebp),%dh
		and    $0x0000fa,%dh
		mov    %dh,%bl
		or     $0x000004,%bl
		mov    %ebp,%eax
		mov    %bl,0x00000d(%ebp)
		call   _08780a_func

	_08079c_jump:
		testb  $0x000020,0x00000c(%ebp)
		je     _0807a8_jump
		xor    %edx,%edx
		mov    %edx,0x00000c(%esp)

	_0807a8_jump:
		mov    0x000008(%esp),%eax
		mov    (%esp),%ecx
		mov    0x00000c(%ebp),%ebx
		xor    %edx,%edx
		or     %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %ebx,0x00000c(%ebp)
		div    %ecx

	_0807bf_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0807c6_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		testb  $0x000001,0x00000c(%eax)
		jne    _0807ec_jump
		mov    $0x000004,%eax
		call   _086eb3_func
		mov    0x00000c(%edx),%bl
		or     $0x000020,%bl
		mov    $0xffffffff,%eax
		mov    %bl,0x00000c(%edx)
		jmp    _08080c_jump

	_0807ec_jump:
		mov    0x000004(%edx),%ebx
		dec    %ebx
		mov    %ebx,0x000004(%edx)
		test   %ebx,%ebx
		jge    _080800_jump
		mov    %edx,%eax
		call   _08084f_func
		jmp    _08080c_jump

	_080800_jump:
		mov    (%edx),%ebx
		mov    (%ebx),%al
		inc    %ebx
		and    $_0000ff_case,%eax
		mov    %ebx,(%edx)

	_08080c_jump:
		testb  $0x000040,0x00000c(%edx)
		jne    _08084a_jump
		cmp    $0x00000d,%eax
		jne    _080837_jump
		mov    0x000004(%edx),%esi
		dec    %esi
		mov    %esi,0x000004(%edx)
		test   %esi,%esi
		jge    _08082b_jump
		mov    %edx,%eax
		call   _08084f_func
		jmp    _080837_jump

	_08082b_jump:
		mov    (%edx),%ebx
		mov    (%ebx),%al
		inc    %ebx
		and    $_0000ff_case,%eax
		mov    %ebx,(%edx)

	_080837_jump:
		cmp    $0x00001a,%eax
		jne    _08084a_jump
		mov    0x00000c(%edx),%cl
		or     $0x000010,%cl
		mov    $0xffffffff,%eax
		mov    %cl,0x00000c(%edx)

	_08084a_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08084f_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _08087e_func
		test   %eax,%eax
		jne    _080866_jump
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_080866_jump:
		mov    0x000004(%edx),%ebx
		mov    (%edx),%ecx
		dec    %ebx
		inc    %ecx
		mov    %ebx,0x000004(%edx)
		mov    %ecx,(%edx)
		mov    -0x000001(%ecx),%al
		and    $_0000ff_case,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08087e_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpl   $0x000000,0x000008(%eax)
		jne    _08088f_jump
		call   _087774_func

	_08088f_jump:
		mov    0x00000d(%ecx),%ah
		test   $0x000020,%ah
		je     _0808a6_jump
		test   $0x000006,%ah
		je     _0808a6_jump
		mov    $0x002000,%eax
		call   _087979_func

	_0808a6_jump:
		mov    0x000008(%ecx),%edx
		mov    %edx,(%ecx)
		mov    0x00000c(%ecx),%dh
		mov    0x00000c(%ecx),%eax
		and    $0x0000fb,%dh
		and    $0x002400,%eax
		mov    %dh,0x00000c(%ecx)
		cmp    $0x002400,%eax
		jne    _0808e6_jump
		mov    0x000010(%ecx),%ebx
		test   %ebx,%ebx
		jne    _0808e6_jump
		mov    %ebx,0x000004(%ecx)
		call   _084ee1_func
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		je     _080903_jump
		mov    (%ecx),%eax
		mov    %dl,(%eax)
		movl   $0x000001,0x000004(%ecx)
		jmp    _080903_jump

	_0808e6_jump:
		testb  $0x000004,0x00000d(%ecx)
		je     _0808f3_jump
		mov    $0x000001,%ebx
		jmp    _0808f6_jump

	_0808f3_jump:
		mov    0x000014(%ecx),%ebx

	_0808f6_jump:
		mov    (%ecx),%edx
		mov    0x000010(%ecx),%eax
		call   _0877eb_func
		mov    %eax,0x000004(%ecx)

	_080903_jump:
		mov    0x000004(%ecx),%esi
		test   %esi,%esi
		jg     _080922_jump
		jne    _080912_jump
		orb    $0x000010,0x00000c(%ecx)
		jmp    _080922_jump

	_080912_jump:
		mov    0x00000c(%ecx),%bh
		movl   $0x000000,0x000004(%ecx)
		or     $0x000020,%bh
		mov    %bh,0x00000c(%ecx)

	_080922_jump:
		mov    0x000004(%ecx),%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08092a_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		testb  $0x000002,0x00000c(%edx)
		jne    _08094f_jump
		mov    $0x000004,%eax
		call   _086eb3_func
		orb    $0x000020,0x00000c(%edx)

	_080945_jump:
		mov    $0xffffffff,%eax
		jmp    _0809c8_jump

	_08094f_jump:
		cmpl   $0x000000,0x000008(%edx)
		jne    _08095c_jump
		mov    %edx,%eax
		call   _087774_func

	_08095c_jump:
		mov    $0x000400,%ecx
		cmp    $0x00000a,%ebx
		jne    _080999_jump
		mov    0x00000c(%edx),%al
		mov    $0x000600,%ecx
		test   $0x000040,%al
		jne    _080999_jump
		orb    $0x000010,0x00000d(%edx)
		mov    (%edx),%eax
		movb   $0x00000d,(%eax)
		mov    (%edx),%esi
		inc    %esi
		mov    0x000004(%edx),%edi
		mov    %esi,(%edx)
		inc    %edi
		mov    0x000014(%edx),%ebp
		mov    %edi,0x000004(%edx)
		cmp    %ebp,%edi
		jne    _080999_jump
		mov    %edx,%eax
		call   _08780a_func
		test   %eax,%eax
		jne    _080945_jump

	_080999_jump:
		orb    $0x000010,0x00000d(%edx)
		mov    (%edx),%eax
		mov    %bl,(%eax)
		mov    (%edx),%eax
		inc    %eax
		mov    0x000004(%edx),%esi
		mov    %eax,(%edx)
		inc    %esi
		mov    0x00000c(%edx),%edi
		mov    %esi,0x000004(%edx)
		test   %edi,%ecx
		jne    _0809b9_jump
		cmp    0x000014(%edx),%esi
		jne    _0809c4_jump

	_0809b9_jump:
		mov    %edx,%eax
		call   _08780a_func
		test   %eax,%eax
		jne    _080945_jump

	_0809c4_jump:
		xor    %eax,%eax
		mov    %bl,%al

	_0809c8_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0809ce_func:
		push   %ebx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    $_0bd98e_data,%eax
		call   _0859fc_func
		pop    %ebx
		ret    

.data

_0809df_data:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"

.text



_080a04_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x000001(%esp),%ecx
		mov    %dl,(%esp)

	_080a1a_jump:
		lea    0x000024(%esp),%ebx
		mov    %edi,0x000024(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %eax,(%ebx)
		mov    %cs:_0809df_data(%edx),%al
		mov    %al,(%ecx)
		mov    0x000024(%esp),%eax
		inc    %ecx
		test   %eax,%eax
		jne    _080a1a_jump

	_080a3a_jump:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    _080a3a_jump
		mov    %ebp,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_080a4e_func:
		push   %ecx
		mov    %edx,%ecx
		cmp    $0x00000a,%ebx
		jne    _080a60_jump
		test   %eax,%eax
		jge    _080a60_jump
		neg    %eax
		movb   $0x00002d,(%edx)
		inc    %edx

	_080a60_jump:
		call   _080a04_func
		mov    %ecx,%eax
		pop    %ecx
		ret    

.data

_080a69_data:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"

.text



_080a8e_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x000001(%esp),%ecx
		mov    %dl,(%esp)

	_080aa4_jump:
		lea    0x000024(%esp),%ebx
		mov    %edi,0x000024(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %edx,(%ebx)
		mov    0x000024(%esp),%edx
		mov    %cs:_080a69_data(%edx),%dl
		mov    %dl,(%ecx)
		inc    %ecx
		test   %eax,%eax
		jne    _080aa4_jump

	_080ac4_jump:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    _080ac4_jump
		mov    %ebp,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_080ad8_func:
		push   %ecx
		mov    %edx,%ecx
		cmp    $0x00000a,%ebx
		jne    _080aea_jump
		test   %eax,%eax
		jge    _080aea_jump
		neg    %eax
		movb   $0x00002d,(%edx)
		inc    %edx

	_080aea_jump:
		call   _080a8e_func
		mov    %ecx,%eax
		pop    %ecx
		ret    



_080af3_func:
		push   %edx
		mov    %ebx,%edx
		xor    %ebx,%ebx
		mov    _0bdbce_data,%bl
		cmp    $0x000002,%ebx
		jl     _080b16_jump
		cmp    $0x000008,%ebx
		jg     _080b16_jump
		push   %ds
		mov    %ecx,%ds
		mov    %al,%cl
		mov    $0x000004,%al
		mov    $0x000025,%ah
		int    $0x000021
		pop    %ds
		pop    %edx
		ret    

	_080b16_jump:
		push   %ds
		mov    %ecx,%ds
		mov    $0x000025,%ah
		int    $0x000021
		pop    %ds
		pop    %edx
		ret    



_080b20_func:
		jmp    _07f953_func



_080b25_func:
		cmpl   $0x000000,_0bdbc0_data
		je     _080b34_jump
		mov    $0x000001,%eax
		ret    

	_080b34_jump:
		mov    $0x00000b,%ah
		int    $0x000021
		movsbl %al,%eax
		ret    



_080b3c_func:
		mov    %eax,%ecx
		mov    %edx,%eax
		mov    %ebp,%esp
		xchg   %ecx,0x000028(%ebp)
		xchg   %eax,0x00002c(%ebp)
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		pop    %ebp
		pop    %ebx
		pop    %ebx
		pop    %edx
		lret   



_080b55_func:
		push   %ebx
		push   %ecx
		xor    %edx,%edx
		mov    _0bdbce_data,%dl
		cmp    $0x000002,%edx
		jl     _080b72_jump
		cmp    $0x000008,%edx
		jg     _080b72_jump
		mov    %al,%cl
		mov    $0x002502,%eax
		jmp    _080b7c_jump

	_080b72_jump:
		and    $_0000ff_case,%eax
		xor    %cl,%cl
		or     $0x000035,%ah

	_080b7c_jump:
		push   %es
		int    $0x000021
		mov    %es,%edx
		pop    %es
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_080b87_func:
		mov    $_0bd960_data,%eax
		ret    



_080b8d_func:
		push   %edx
		call   _080b87_func
		test   %eax,%eax
		je     _080baf_jump
		imul   $0x41c64e6d,(%eax),%edx
		add    $0x003039,%edx
		mov    %edx,(%eax)
		mov    %edx,%eax
		shr    $0x000010,%eax
		and    $0x007fff,%eax

	_080baf_jump:
		pop    %edx
		ret    



_080bb1_func:
		push   %edx
		mov    %eax,%edx
		call   _080b87_func
		test   %eax,%eax
		je     _080bbf_jump
		mov    %edx,(%eax)

	_080bbf_jump:
		pop    %edx
		ret    



_080bc1_func:
		push   %ecx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %esp,%eax
		mov    %esp,%ecx
		call   _0879a8_func
		mov    %esi,%eax
		call   _0851f3_func
		add    $0x00000c,%esp
		pop    %esi
		pop    %ecx
		ret    



_080bde_func:
		push   %ebx
		push   %edx
		lea    0x000014(%esp),%eax
		add    $0x000004,%eax
		mov    -0x000004(%eax),%eax
		push   %eax
		push   $0x000000
		mov    0x000018(%esp),%edx
		push   %edx
		mov    0x000018(%esp),%ebx
		push   %ebx
		call   _080c02_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ebx
		ret    



_080c02_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    0x000024(%esp),%esi

	_080c0e_jump:
		movzbl (%esi),%edi
		cmp    $0x000020,%edi
		jne    _080c19_jump
		inc    %esi
		jmp    _080c0e_jump

	_080c19_jump:
		mov    0x000028(%esp),%eax
		and    $0x000083,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000004(%esp),%al
		mov    0x00002c(%esp),%ah
		mov    %esi,%edx
		or     %ah,%al
		mov    $0xffffffff,%edi
		mov    $0x00003d,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _080c4c_jump
		xor    %edi,%edi
		mov    (%esp),%di

	_080c4c_jump:
		mov    0x000028(%esp),%dl
		test   $0x000003,%dl
		je     _080ccf_jump
		cmp    $0xffffffff,%edi
		je     _080ccf_jump
		mov    %edi,%eax
		call   _0879d0_func
		test   %eax,%eax
		jne    _080ccf_jump
		testb  $0x000004,0x000029(%esp)
		je     _080c97_jump
		test   $0x000020,%dl
		je     _080c97_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    $0x000007,%eax
		call   _086eb3_func
		mov    $0xffffffff,%eax
		jmp    _080de2_jump

	_080c97_jump:
		testb  $0x000040,0x000028(%esp)
		je     _080ccf_jump
		lea    0x000008(%esp),%edx
		mov    %edi,%ebx
		xor    %ecx,%ecx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jge    _080ccf_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax

	_080cbf_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		call   _085aee_func
		jmp    _080de2_jump

	_080ccf_jump:
		cmp    $0xffffffff,%edi
		jne    _080d71_jump
		testb  $0x000020,0x000028(%esp)
		je     _080cbf_jump
		xor    %eax,%eax
		mov    (%esp),%ax
		cmp    $0x000002,%eax
		jne    _080cbf_jump
		lea    0x000030(%esp),%eax
		add    $0x000004,%eax
		mov    -0x000004(%eax),%eax
		test   %eax,%eax
		jne    _080cfd_jump
		mov    $0x000180,%eax

	_080cfd_jump:
		mov    _0bdc40_data,%edx
		not    %edx
		and    %edx,%eax
		xor    %ecx,%ecx
		test   $0x000080,%al
		jne    _080d12_jump
		mov    $0x000001,%ecx

	_080d12_jump:
		and    $_0000ff_case,%ecx
		mov    %esi,%edx
		mov    $0x00003c,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _080cbf_jump
		xor    %edi,%edi
		mov    0x00002c(%esp),%edx
		mov    (%esp),%di
		test   %edx,%edx
		je     _080d71_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _080cbf_jump
		mov    0x000004(%esp),%al
		mov    0x00002c(%esp),%ch
		mov    %esi,%edx
		or     %ch,%al
		mov    $0x00003d,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _080cbf_jump
		xor    %edi,%edi
		mov    (%esp),%di

	_080d71_jump:
		mov    %edi,%eax
		call   _0879f7_func
		and    $0x00003c,%al
		mov    %eax,%edx
		mov    %edi,%eax
		call   _0879d0_func
		test   %eax,%eax
		je     _080d8a_jump
		or     $0x000020,%dh

	_080d8a_jump:
		andb   $0x00007f,0x000004(%esp)
		cmpl   $0x000002,0x000004(%esp)
		jne    _080d99_jump
		or     $0x000003,%dl

	_080d99_jump:
		cmpl   $0x000000,0x000004(%esp)
		jne    _080da3_jump
		or     $0x000001,%dl

	_080da3_jump:
		cmpl   $0x000001,0x000004(%esp)
		jne    _080dad_jump
		or     $0x000002,%dl

	_080dad_jump:
		testb  $0x000010,0x000028(%esp)
		je     _080db7_jump
		or     $0x000080,%dl

	_080db7_jump:
		mov    %edx,%eax
		mov    0x000029(%esp),%bl
		or     $0x000040,%al
		test   $0x000003,%bl
		je     _080dcb_jump
		test   $0x000002,%bl
		je     _080dd9_jump
		jmp    _080dd7_jump

	_080dcb_jump:
		cmpl   $0x000200,_0bdb7d_data
		jne    _080dd9_jump

	_080dd7_jump:
		mov    %eax,%edx

	_080dd9_jump:
		mov    %edi,%eax
		call   _087a4c_func
		mov    %edi,%eax

	_080de2_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_080e50_func:
		push   $0x003f00
		push   %ds
		mov    %ecx,%ds
		mov    %edx,%ecx
		mov    %ebx,%edx
		mov    %eax,%ebx
		mov    0x000004(%esp),%eax
		int    $0x000021
		pop    %ds
		push   %ds
		jb     _080e6e_jump
		mov    0x00000c(%esp),%ebx
		mov    %eax,(%ebx)

	_080e6e_jump:
		call   _087a62_func
		pop    %ds
		add    $0x000004,%esp
		ret    $0x000004



_080e81_func:
		jmp    _087a75_func



_080e86_func:
		push   %ecx
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %esp,%edi
		mov    %bl,%al
		mov    %ecx,%ebx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		mov    %ax,%ss:(%edi)
		mov    %dx,%ss:0x000002(%edi)
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _080ec0_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _085aee_func
		mov    $0xffffffff,%eax
		jmp    _080ec3_jump

	_080ec0_jump:
		mov    (%esp),%eax

	_080ec3_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %ecx
		ret    



_080ec9_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx

	_080ecd_jump:
		mov    (%ebx),%al
		xor    %ecx,%ecx
		mov    (%edx),%ah
		mov    %al,%cl
		cmp    $0x000041,%ecx
		jl     _080ee1_jump
		cmp    $0x00005a,%ecx
		jg     _080ee1_jump
		add    $0x000020,%al

	_080ee1_jump:
		xor    %ecx,%ecx
		mov    %ah,%cl
		cmp    $0x000041,%ecx
		jl     _080ef2_jump
		cmp    $0x00005a,%ecx
		jg     _080ef2_jump
		add    $0x000020,%ah

	_080ef2_jump:
		cmp    %ah,%al
		jne    _080efe_jump
		test   %ah,%ah
		je     _080efe_jump
		inc    %ebx
		inc    %edx
		jmp    _080ecd_jump

	_080efe_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ah,%al
		and    $_0000ff_case,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_080f10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%al
		xor    %edx,%edx
		call   _087aaa_func
		mov    %al,(%esp)
		and    $_0000ff_case,%eax
		cmp    $0x000072,%eax
		je     _080f4c_jump
		cmp    $0x000077,%eax
		je     _080f4c_jump
		cmp    $0x000061,%eax
		je     _080f4c_jump
		mov    $0x000009,%eax
		call   _086eb3_func
		xor    %eax,%eax
		jmp    _080fd9_jump

	_080f4c_jump:
		xor    %ecx,%ecx
		mov    %edx,%esi
		mov    0x000001(%ebx),%cl
		or     $0x000003,%si
		cmp    $0x00002b,%ecx
		jne    _080f81_jump
		xor    %eax,%eax
		mov    %esi,%edx
		mov    0x000002(%ebx),%al
		or     $0x000040,%si
		cmp    $0x000062,%eax
		je     _080f7d_jump
		cmp    $0x000074,%eax
		je     _080fbb_jump
		cmpl   $0x000200,_0bdb7d_data

	_080f7b_jump:
		jne    _080fbb_jump

	_080f7d_jump:
		mov    %esi,%edx
		jmp    _080fbb_jump

	_080f81_jump:
		mov    %edx,%eax
		or     $0x000040,%al
		cmp    $0x000062,%ecx
		jne    _080f9e_jump
		mov    %eax,%edx
		mov    0x000002(%ebx),%bl
		and    $_0000ff_case,%ebx
		cmp    $0x00002b,%ebx
		jne    _080fbb_jump
		or     $0x000003,%al
		jmp    _080fb9_jump

	_080f9e_jump:
		cmp    $0x000074,%ecx
		jne    _080fad_jump
		xor    %eax,%eax
		mov    0x000002(%ebx),%al
		cmp    $0x00002b,%eax
		jmp    _080f7b_jump

	_080fad_jump:
		cmpl   $0x000200,_0bdb7d_data
		jne    _080fbb_jump

	_080fb9_jump:
		mov    %eax,%edx

	_080fbb_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x000077,%eax
		jne    _080fca_jump
		or     $0x000002,%dl
		jmp    _080fd7_jump

	_080fca_jump:
		cmp    $0x000061,%eax
		jne    _080fd4_jump
		or     $0x000082,%dl
		jmp    _080fd7_jump

	_080fd4_jump:
		or     $0x000001,%dl

	_080fd7_jump:
		mov    %edx,%eax

	_080fd9_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_080fe1_func:
		push   %esi
		mov    %eax,%esi
		mov    %dl,%al
		mov    %ecx,%edx
		mov    0x000008(%esp),%ecx
		andb   $0x0000fc,0x00000c(%ecx)
		or     %ebx,0x00000c(%ecx)
		and    $_0000ff_case,%eax
		call   _087aaa_func
		and    $_0000ff_case,%eax
		cmp    $0x000072,%eax
		jne    _081024_jump
		xor    %eax,%eax
		test   $0x000002,%bl
		je     _081013_jump
		mov    $0x000002,%eax

	_081013_jump:
		test   $0x000040,%bl
		je     _08101d_jump
		or     $0x000002,%ah
		jmp    _081020_jump

	_08101d_jump:
		or     $0x000001,%ah

	_081020_jump:
		push   $0x000000
		jmp    _08104f_jump

	_081024_jump:
		test   $0x000001,%bl
		setne  %al
		and    $_0000ff_case,%eax
		add    $0x000021,%eax
		test   $0x000080,%bl
		je     _08103b_jump
		or     $0x000010,%al
		jmp    _08103d_jump

	_08103b_jump:
		or     $0x000040,%al

	_08103d_jump:
		test   $0x000040,%bl
		je     _081047_jump
		or     $0x000002,%ah
		jmp    _08104a_jump

	_081047_jump:
		or     $0x000001,%ah

	_08104a_jump:
		push   $0x000180

	_08104f_jump:
		push   %edx
		push   %eax
		push   %esi
		call   _080c02_func
		add    $0x000010,%esp
		mov    %eax,0x000010(%ecx)
		cmpl   $0xffffffff,0x000010(%ecx)
		jne    _081070_jump
		mov    %ecx,%eax
		call   _087b5e_func
		xor    %eax,%eax
		pop    %esi
		ret    $0x000004

	_081070_jump:
		movl   $0x000000,0x000004(%ecx)
		movl   $0x000000,0x000008(%ecx)
		movl   $0x000000,0x000014(%ecx)
		test   $0x000080,%bl
		je     _081098_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _08050a_func

	_081098_jump:
		mov    %ecx,%eax
		call   _087bb5_func
		mov    %ecx,%eax
		pop    %esi
		ret    $0x000004



_0810a5_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %ebx,%ecx
		mov    %edx,%eax
		call   _080f10_func
		mov    %eax,%ebx
		test   %eax,%eax
		je     _0810da_jump
		xor    %eax,%eax
		call   _087ab8_func
		mov    %eax,%edi
		test   %eax,%eax
		je     _0810d8_jump
		push   %eax
		mov    (%edx),%dl
		and    $_0000ff_case,%edx
		mov    %esi,%eax
		call   _080fe1_func
		mov    %eax,%edi

	_0810d8_jump:
		mov    %edi,%eax

	_0810da_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0810de_func:
		push   %ebx
		xor    %ebx,%ebx
		call   _0810a5_func
		pop    %ebx
		ret    



_081192_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    _0e6f30_data,%eax

	_08119b_jump:
		test   %eax,%eax
		jne    _0811a7_jump
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

	_0811a7_jump:
		cmp    0x000004(%eax),%ebx
		je     _0811b0_jump
		mov    (%eax),%eax
		jmp    _08119b_jump

	_0811b0_jump:
		mov    $0x000001,%edx
		mov    %ebx,%eax
		call   _0811bf_func
		pop    %edx
		pop    %ebx
		ret    



_0811bf_func:
		push   %ebx
		mov    %eax,%ebx
		call   _081245_func
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _087b5e_func
		mov    %edx,%eax
		pop    %ebx
		ret    



_0811d4_func:
		add    $0x000030,%eax
		cmp    $0x000039,%eax
		jle    _0811df_jump
		add    $0x000027,%eax

	_0811df_jump:
		ret    



_0811e0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%edi
		call   _087be6_func
		mov    %eax,%ebx
		lea    0x000004(%ecx),%edx
		movb   $0x000074,(%ecx)
		mov    %ecx,%esi

	_0811f7_jump:
		mov    %ebx,%eax
		and    $0x00000f,%eax
		call   _0811d4_func
		mov    %al,(%edx)
		dec    %edx
		shr    $0x000004,%ebx
		cmp    %esi,%edx
		jne    _0811f7_jump
		mov    %edi,%eax
		sar    $0x000004,%eax
		and    $0x00000f,%eax
		movb   $0x00005f,0x000005(%ecx)
		call   _0811d4_func
		mov    %al,0x000006(%ecx)
		mov    %edi,%eax
		and    $0x00000f,%eax
		call   _0811d4_func
		movb   $0x00002e,0x000008(%ecx)
		movb   $0x000074,0x000009(%ecx)
		movb   $0x00006d,0x00000a(%ecx)
		movb   $0x000070,0x00000b(%ecx)
		movb   $0x000000,0x00000c(%ecx)
		mov    %al,0x000007(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_081245_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		cmpl   $0x000000,0x00000c(%eax)
		jne    _081261_jump
		mov    $0xffffffff,%eax
		jmp    _0812cc_jump

	_081261_jump:
		mov    0x00000d(%eax),%ah
		xor    %esi,%esi
		test   $0x000010,%ah
		je     _081274_jump
		mov    %ecx,%eax
		call   _08780a_func
		mov    %eax,%esi

	_081274_jump:
		mov    %ecx,%eax
		call   _0853dc_func
		cmp    $0xffffffff,%eax
		je     _08128e_jump
		mov    %eax,%edx
		mov    0x000010(%ecx),%ebp
		xor    %ebx,%ebx
		mov    %ebp,%eax
		call   _080e86_func

	_08128e_jump:
		test   %edi,%edi
		je     _08129c_jump
		mov    0x000010(%ecx),%eax
		call   _087a75_func
		or     %eax,%esi

	_08129c_jump:
		testb  $0x000008,0x00000c(%ecx)
		je     _0812b1_jump
		mov    0x000008(%ecx),%eax
		call   _08590f_func
		movl   $0x000000,0x000008(%ecx)

	_0812b1_jump:
		testb  $0x000008,0x00000d(%ecx)
		je     _0812ca_jump
		xor    %edx,%edx
		mov    %esp,%eax
		mov    0x000019(%ecx),%dl
		call   _0811e0_func
		mov    %esp,%eax
		call   _080b20_func

	_0812ca_jump:
		mov    %esi,%eax

	_0812cc_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0812d5_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0812ea_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		movl   $0x000000,-0x000008(%ebp)
		movl   $0x000000,-0x000004(%ebp)

	_081309_jump:
		cmpl   $0x000020,-0x000004(%ebp)
		jb     _081316_jump
		jmp    _081339_jump

	_081311_jump:
		incl   -0x000004(%ebp)
		jmp    _081309_jump

	_081316_jump:
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _081337_jump
		incl   -0x000008(%ebp)

	_081337_jump:
		jmp    _081311_jump

	_081339_jump:
		mov    -0x000008(%ebp),%eax
		mov    %eax,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081349_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08135e_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081373_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		testb  $0x000002,-0x00000c(%ebp)
		je     _081395_jump
		movb   $0x000001,_0bfbf0_data
		jmp    _08139c_jump

	_081395_jump:
		movb   $0x000000,_0bfbf0_data

	_08139c_jump:
		testb  $0x000001,-0x00000c(%ebp)
		jne    _0813ce_jump
		movb   $0x000001,_0bfbec_data
		call   _087d71_func
		mov    %cs,%eax
		mov    $_081a1c_func,%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		push   $0x00ffff
		call   _087caf_func
		add    $0x00000c,%esp
		call   _087d9d_func
		jmp    _0813d5_jump

	_0813ce_jump:
		movb   $0x000000,_0bfbec_data

	_0813d5_jump:
		cmpl   $0x000000,-0x000010(%ebp)
		je     _0813e1_jump
		testb  $0x000001,-0x00000c(%ebp)
		je     _0813e3_jump

	_0813e1_jump:
		jmp    _081435_jump

	_0813e3_jump:
		cmpl   $0x00ff00,-0x000010(%ebp)
		jne    _081402_jump
		mov    $0x00ffff,%eax
		call   _0819e7_func
		movl   $0x00ff00,_0be733_data
		jmp    _081419_jump

	_081402_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000010(%ebp)
		call   _0819e7_func
		mov    -0x000010(%ebp),%eax
		mov    %eax,_0be733_data

	_081419_jump:
		mov    %cs,_0be6f5_data
		movl   $_081ae6_func,_0be6f1_data
		movl   $0x010000,_0be773_data
		jmp    _08143f_jump

	_081435_jump:
		movl   $0x00ffff,_0be693_data

	_08143f_jump:
		movl   $0x000000,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_08144f_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		cmpb   $0x000000,_0bfbec_data
		je     _081478_jump
		call   _087d71_func
		call   _087dc9_func
		call   _087d9d_func

	_081478_jump:
		movl   $0x000000,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081489_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000020,%esp
		mov    %eax,-0x000018(%ebp)
		mov    %cx,-0x00001c(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x00000c(%ebp)
		movl   $0x000000,-0x000004(%ebp)

	_0814ad_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _0814ba_jump
		jmp    _0814d3_jump

	_0814b5_jump:
		incl   -0x000004(%ebp)
		jmp    _0814ad_jump

	_0814ba_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0be697_data(%eax)
		jne    _0814d1_jump
		cmpw   $0x000000,_0be69b_data(%eax)
		je     _0814d3_jump

	_0814d1_jump:
		jmp    _0814b5_jump

	_0814d3_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _0814e5_jump
		movl   $0x00000b,-0x000014(%ebp)
		jmp    _08168c_jump

	_0814e5_jump:
		cmpb   $0x000000,_0bfbec_data
		je     _0814f3_jump
		call   _087d71_func

	_0814f3_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		imul   $0x000006,-0x000004(%ebp),%edx
		mov    -0x00001c(%ebp),%eax
		mov    %ax,_0be69b_data(%edx)
		mov    -0x000020(%ebp),%eax
		mov    %eax,_0be697_data(%edx)
		mov    -0x000004(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000018(%ebp),%eax
		mov    %eax,_0be6f7_data(%edx)
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		cmp    _0be693_data,%eax
		jae    _08155e_jump
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		call   _0819e7_func
		mov    _0be693_data,%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,-0x00000c(%ebp)

	_08155e_jump:
		movl   $0x000000,-0x000004(%ebp)

	_081565_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _081575_jump
		jmp    _08166d_jump

	_081570_jump:
		incl   -0x000004(%ebp)
		jmp    _081565_jump

	_081575_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0be697_data(%eax)
		jne    _081590_jump
		cmpw   $0x000000,_0be69b_data(%eax)
		je     _081668_jump

	_081590_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0be6f7_data(%eax)
		jne    _0815e8_jump
		cmpl   $0x00ffff,_0be693_data
		jne    _0815c0_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x010000,_0be737_data(%eax)
		jmp    _0815e6_jump

	_0815c0_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0be693_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    $0x123333,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be737_data(%eax)

	_0815e6_jump:
		jmp    _08161a_jump

	_0815e8_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be6f7_data(%eax),%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0be693_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be737_data(%eax)

	_08161a_jump:
		cmpl   $0x000000,-0x00000c(%ebp)
		je     _081668_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    -0x00000c(%ebp),%edx
		and    $0x00ffff,%edx
		mov    _0be777_data(%eax),%eax
		imul   %edx,%eax
		shr    $0x000010,%eax
		mov    %eax,-0x000010(%ebp)
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    -0x00000c(%ebp),%edx
		shr    $0x000010,%edx
		mov    _0be777_data(%eax),%eax
		imul   %edx,%eax
		shr    $0x000010,%eax
		add    %eax,-0x000010(%ebp)
		mov    -0x000004(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000010(%ebp),%eax
		mov    %eax,_0be777_data(%edx)

	_081668_jump:
		jmp    _081570_jump

	_08166d_jump:
		cmpb   $0x000000,_0bfbec_data
		je     _08167b_jump
		call   _087d9d_func

	_08167b_jump:
		mov    -0x000008(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000014(%ebp)

	_08168c_jump:
		mov    -0x000014(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000008



_08180e_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		movl   $0x000000,-0x000008(%ebp)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0be69b_data(%eax)
		movl   $0x000000,_0be697_data(%eax)
		movl   $0x000000,-0x000004(%ebp)

	_081844_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _081851_jump
		jmp    _08189e_jump

	_08184c_jump:
		incl   -0x000004(%ebp)
		jmp    _081844_jump

	_081851_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0be697_data(%eax)
		jne    _081868_jump
		cmpw   $0x000000,_0be69b_data(%eax)
		je     _08189c_jump

	_081868_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be6f7_data(%eax),%eax
		cmp    -0x000008(%ebp),%eax
		jbe    _08188b_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0be6f7_data(%eax)
		jne    _08188d_jump

	_08188b_jump:
		jmp    _08189c_jump

	_08188d_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be6f7_data(%eax),%eax
		mov    %eax,-0x000008(%ebp)

	_08189c_jump:
		jmp    _08184c_jump

	_08189e_jump:
		cmpl   $0x000000,-0x000008(%ebp)
		je     _0818b5_jump
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000008(%ebp)
		call   _0819e7_func
		jmp    _0818bf_jump

	_0818b5_jump:
		mov    $0x00ffff,%eax
		call   _0819e7_func

	_0818bf_jump:
		cmpb   $0x000000,_0bfbec_data
		je     _0818cd_jump
		call   _087d71_func

	_0818cd_jump:
		movl   $0x000000,-0x000004(%ebp)

	_0818d4_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _0818e4_jump
		jmp    _08199e_jump

	_0818df_jump:
		incl   -0x000004(%ebp)
		jmp    _0818d4_jump

	_0818e4_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0be697_data(%eax)
		jne    _0818ff_jump
		cmpw   $0x000000,_0be69b_data(%eax)
		je     _081999_jump

	_0818ff_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0be6f7_data(%eax)
		jne    _081957_jump
		cmpl   $0x00ffff,_0be693_data
		jne    _08192f_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x010000,_0be737_data(%eax)
		jmp    _081955_jump

	_08192f_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0be693_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    $0x123333,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be737_data(%eax)

	_081955_jump:
		jmp    _081989_jump

	_081957_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be6f7_data(%eax),%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0be693_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be737_data(%eax)

	_081989_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0be777_data(%eax)

	_081999_jump:
		jmp    _0818df_jump

	_08199e_jump:
		cmpb   $0x000000,_0bfbec_data
		je     _0819ac_jump
		call   _087d9d_func

	_0819ac_jump:
		movl   $0x000000,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0819e7_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %eax,_0be693_data
		pushl  -0x000008(%ebp)
		call   _087c69_func
		add    $0x000004,%esp
		movl   $0x000000,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081a1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		incl   _0be9c6_data
		movl   $0x000000,_0bebb0_data

	_081a3a_jump:
		cmpl   $0x000010,_0bebb0_data
		jb     _081a50_jump
		jmp    _081ad9_jump

	_081a48_jump:
		incl   _0bebb0_data
		jmp    _081a3a_jump

	_081a50_jump:
		imul   $0x000006,_0bebb0_data,%eax
		cmpl   $0x000000,_0be697_data(%eax)
		jne    _081a6a_jump
		cmpw   $0x000000,_0be69b_data(%eax)
		je     _081ad4_jump

	_081a6a_jump:
		mov    _0bebb0_data,%eax
		shl    $0x000002,%eax
		mov    _0bebb0_data,%edx
		shl    $0x000002,%edx
		mov    _0be737_data(%edx),%edx
		add    %edx,_0be777_data(%eax)
		mov    _0bebb0_data,%eax
		shl    $0x000002,%eax
		testb  $0x000001,_0be779_data(%eax)
		je     _081ad4_jump
		mov    _0bebb0_data,%eax
		shl    $0x000002,%eax
		movw   $0x000000,_0be779_data(%eax)
		mov    _0bebb0_data,%eax
		cmpb   $_0000ff_case,_0be7b7_data(%eax)
		je     _081ac7_jump
		mov    _0bebb0_data,%eax
		mov    _0be7b7_data(%eax),%al
		mov    %al,_0be7c7_data

	_081ac7_jump:
		imul   $0x000006,_0bebb0_data,%eax
		lcall  *_0be697_data(%eax)

	_081ad4_jump:
		jmp    _081a48_jump

	_081ad9_jump:
		decl   _0be9c6_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lret   



_081ae6_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		call   _087e45_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lret   



_081b00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081b15_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0827e9_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0827fe_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082813_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    $_0887d9_func,%edx
		mov    $_088818_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0887d9_func,%eax
		push   %eax
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08284c_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082acf_jump

	_08284c_jump:
		mov    $_08882d_func,%edx
		mov    $_0888d3_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08882d_func,%eax
		push   %eax
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082877_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082acf_jump

	_082877_jump:
		mov    $_084ca9_func,%edx
		mov    $_084d94_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_084ca9_func,%eax
		push   %eax
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0828a2_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082acf_jump

	_0828a2_jump:
		mov    $_0827fe_func,%edx
		mov    $_083ba8_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0827fe_func,%eax
		push   %eax
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0828cd_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082acf_jump

	_0828cd_jump:
		mov    $_0888e8_func,%edx
		mov    $_088e94_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0888e8_func,%eax
		push   %eax
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0828f8_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082acf_jump

	_0828f8_jump:
		mov    $_0812d5_func,%edx
		mov    $_081349_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0812d5_func,%eax
		push   %eax
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082923_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082acf_jump

	_082923_jump:
		mov    $_088ea9_func,%edx
		mov    $_088f20_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_088ea9_func,%eax
		push   %eax
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08294e_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082acf_jump

	_08294e_jump:
		mov    $_083bbd_func,%edx
		mov    $_084610_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_083bbd_func,%eax
		push   %eax
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082979_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082acf_jump

	_082979_jump:
		mov    $_08135e_func,%edx
		mov    $_081b00_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08135e_func,%eax
		push   %eax
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0829a4_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082acf_jump

	_0829a4_jump:
		mov    $_084625_func,%edx
		mov    $_084c94_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_084625_func,%eax
		push   %eax
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0829cf_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082acf_jump

	_0829cf_jump:
		mov    $_081b15_func,%edx
		mov    $_0827e9_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_081b15_func,%eax
		push   %eax
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0829fa_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082acf_jump

	_0829fa_jump:
		mov    $_087bec_jump,%edx
		mov    $_087e9e_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_087bec_jump,%eax
		push   %eax
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082a25_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082acf_jump

	_082a25_jump:
		mov    $_087ef4_jump,%edx
		mov    $_088777_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_087ef4_jump,%eax
		push   %eax
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082a50_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082acf_jump

	_082a50_jump:
		mov    $_0bdc9c_data,%edx
		mov    $_0bebb4_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bdc9c_data,%eax
		push   %eax
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082a78_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082acf_jump

	_082a78_jump:
		mov    $_0bebb8_data,%edx
		mov    $_0bfbf4_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bebb8_data,%eax
		push   %eax
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082aa0_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082acf_jump

	_082aa0_jump:
		mov    $_0bfbf8_data,%edx
		mov    $_0bfcf8_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bfbf8_data,%eax
		push   %eax
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082ac8_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082acf_jump

	_082ac8_jump:
		movl   $0x000000,-0x000004(%ebp)

	_082acf_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082ad9_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    $_0887d9_func,%edx
		mov    $_088818_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0887d9_func,%eax
		push   %eax
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082b12_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082d95_jump

	_082b12_jump:
		mov    $_08882d_func,%edx
		mov    $_0888d3_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08882d_func,%eax
		push   %eax
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082b3d_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082d95_jump

	_082b3d_jump:
		mov    $_084ca9_func,%edx
		mov    $_084d94_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_084ca9_func,%eax
		push   %eax
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082b68_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082d95_jump

	_082b68_jump:
		mov    $_0827fe_func,%edx
		mov    $_083ba8_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0827fe_func,%eax
		push   %eax
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082b93_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082d95_jump

	_082b93_jump:
		mov    $_0888e8_func,%edx
		mov    $_088e94_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0888e8_func,%eax
		push   %eax
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082bbe_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082d95_jump

	_082bbe_jump:
		mov    $_0812d5_func,%edx
		mov    $_081349_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0812d5_func,%eax
		push   %eax
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082be9_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082d95_jump

	_082be9_jump:
		mov    $_088ea9_func,%edx
		mov    $_088f20_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_088ea9_func,%eax
		push   %eax
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082c14_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082d95_jump

	_082c14_jump:
		mov    $_083bbd_func,%edx
		mov    $_084610_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_083bbd_func,%eax
		push   %eax
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082c3f_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082d95_jump

	_082c3f_jump:
		mov    $_08135e_func,%edx
		mov    $_081b00_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08135e_func,%eax
		push   %eax
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082c6a_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082d95_jump

	_082c6a_jump:
		mov    $_084625_func,%edx
		mov    $_084c94_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_084625_func,%eax
		push   %eax
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082c95_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082d95_jump

	_082c95_jump:
		mov    $_081b15_func,%edx
		mov    $_0827e9_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_081b15_func,%eax
		push   %eax
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082cc0_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082d95_jump

	_082cc0_jump:
		mov    $_087bec_jump,%edx
		mov    $_087e9e_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_087bec_jump,%eax
		push   %eax
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082ceb_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082d95_jump

	_082ceb_jump:
		mov    $_087ef4_jump,%edx
		mov    $_088777_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_087ef4_jump,%eax
		push   %eax
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082d16_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082d95_jump

	_082d16_jump:
		mov    $_0bdc9c_data,%edx
		mov    $_0bebb4_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bdc9c_data,%eax
		push   %eax
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082d3e_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082d95_jump

	_082d3e_jump:
		mov    $_0bebb8_data,%edx
		mov    $_0bfbf4_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bebb8_data,%eax
		push   %eax
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082d66_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082d95_jump

	_082d66_jump:
		mov    $_0bfbf8_data,%edx
		mov    $_0bfcf8_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bfbf8_data,%eax
		push   %eax
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _082d8e_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _082d95_jump

	_082d8e_jump:
		movl   $0x000000,-0x000004(%ebp)

	_082d95_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082d9f_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %dx,-0x000010(%ebp)
		mov    %eax,-0x000014(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		call   _082813_func
		mov    %eax,-0x000004(%ebp)
		cmpl   $0x000000,-0x000004(%ebp)
		je     _082dcb_jump
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		jmp    _082e10_jump

	_082dcb_jump:
		movl   $0x000001,_0beb20_data
		cmpl   $0x000000,-0x000014(%ebp)
		jne    _082de2_jump
		cmpw   $0x000000,-0x000010(%ebp)
		je     _082e02_jump

	_082de2_jump:
		mov    -0x000010(%ebp),%ebx
		mov    -0x000014(%ebp),%eax
		mov    %ds,%edi
		mov    $_0be7c8_data,%edx
		mov    %edi,%esi
		mov    %edx,%edi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _088f35_func
		jmp    _082e09_jump

	_082e02_jump:
		movb   $0x000000,_0be7c8_data

	_082e09_jump:
		movl   $0x000000,-0x000008(%ebp)

	_082e10_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_082e18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		call   _082ad9_func
		mov    %eax,-0x000004(%ebp)
		cmpl   $0x000000,-0x000004(%ebp)
		je     _082e3d_jump
		movl   $0x000000,-0x000008(%ebp)
		jmp    _082e4e_jump

	_082e3d_jump:
		movl   $0x000000,_0beb20_data
		movl   $0x000000,-0x000008(%ebp)

	_082e4e_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082e58_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000084,%esp
		mov    %eax,-0x000034(%ebp)
		mov    %cx,-0x000078(%ebp)
		mov    %ebx,-0x00007c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000004(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000010(%eax),%eax
		mov    %eax,-0x000008(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000008(%eax),%ax
		mov    %ax,-0x000048(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000004(%eax),%eax
		mov    %eax,-0x00004c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00000c(%eax),%eax
		mov    %eax,-0x000010(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000010(%eax),%eax
		mov    %eax,-0x000014(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000014(%eax),%eax
		mov    %eax,-0x000018(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000018(%eax),%eax
		mov    %eax,-0x00001c(%ebp)
		movl   $0x000006,-0x00002c(%ebp)
		movl   $0x000000,-0x000028(%ebp)

	_082ed5_jump:
		cmpl   $0x000005,-0x000028(%ebp)
		jb     _082ee2_jump
		jmp    _082efb_jump

	_082edd_jump:
		incl   -0x000028(%ebp)
		jmp    _082ed5_jump

	_082ee2_jump:
		mov    -0x000028(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0be24e_data(%eax)
		jne    _082ef9_jump
		mov    -0x000028(%ebp),%eax
		mov    %eax,-0x00002c(%ebp)
		jmp    _082efb_jump

	_082ef9_jump:
		jmp    _082edd_jump

	_082efb_jump:
		cmpl   $0x000006,-0x00002c(%ebp)
		jne    _082f0d_jump
		movl   $0x00000b,-0x000024(%ebp)
		jmp    _08370e_jump

	_082f0d_jump:
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000034(%ebp),%eax
		mov    %eax,_0be24e_data(%edx)
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000024(%eax)
		jne    _082f33_jump
		lgs    0x000014(%ebp),%eax
		cmpw   $0x000000,%gs:0x000028(%eax)
		je     _082f96_jump

	_082f33_jump:
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000028(%eax),%ax
		mov    %ax,-0x000058(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000024(%eax),%eax
		mov    %eax,-0x00005c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000030(%eax),%ax
		mov    %ax,-0x000060(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00002c(%eax),%eax
		mov    %eax,-0x000064(%ebp)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000058(%ebp),%eax
		mov    %ax,_0bdccc_data(%edx)
		mov    -0x00005c(%ebp),%eax
		mov    %eax,_0bdcc8_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000060(%ebp),%eax
		mov    %ax,_0bdcea_data(%edx)
		mov    -0x000064(%ebp),%eax
		mov    %eax,_0bdce6_data(%edx)
		jmp    _083054_jump

	_082f96_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bdca0_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bdd04_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    $_0bdd68_data,%eax
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00005c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000064(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    -0x00002c(%ebp),%edx
		mov    -0x000034(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _0888fd_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _082ff8_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _08370e_jump

	_082ff8_jump:
		mov    -0x000058(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000028(%edx)
		mov    -0x00005c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000024(%edx)
		mov    -0x000060(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000030(%edx)
		mov    -0x000064(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x00002c(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000058(%ebp),%eax
		mov    %ax,_0bdccc_data(%edx)
		mov    -0x00005c(%ebp),%eax
		mov    %eax,_0bdcc8_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000060(%ebp),%eax
		mov    %ax,_0bdcea_data(%edx)
		mov    -0x000064(%ebp),%eax
		mov    %eax,_0bdce6_data(%edx)

	_083054_jump:
		imul   $0x00006c,-0x00002c(%ebp),%eax
		mov    $_0be266_data,%edx
		add    %edx,%eax
		mov    %ds,%ebx
		mov    -0x00002c(%ebp),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _088842_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _083083_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _08370e_jump

	_083083_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0be24e_data(%eax)
		jae    _083492_jump
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000004(%ebp),%eax
		mov    %eax,_0bdde0_data(%edx)
		cmpl   $0x000000,-0x000010(%ebp)
		je     _0831cd_jump
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0beb0c_data(%eax)
		movw   $0x000000,-0x000080(%ebp)
		movl   $0x000000,-0x000084(%ebp)
		mov    -0x00002c(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    $_0bde26_data,%eax
		add    %eax,%ebx
		lea    -0x00003c(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _083930_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		mov    %bx,-0x000048(%ebp)
		mov    %ecx,-0x00004c(%ebp)
		mov    -0x00004c(%ebp),%eax
		cmp    -0x000084(%ebp),%eax
		jne    _08312d_jump
		mov    -0x000048(%ebp),%eax
		cmp    -0x000080(%ebp),%ax
		jne    _08312d_jump
		mov    -0x00002c(%ebp),%eax
		call   _088b20_func
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0be24e_data(%eax)
		movl   $0x000005,-0x000024(%ebp)
		jmp    _08370e_jump

	_08312d_jump:
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000048(%ebp),%eax
		mov    %ax,_0bddf8_data(%edx)
		mov    -0x00004c(%ebp),%eax
		mov    %eax,_0bddf4_data(%edx)
		imul   $0x00006c,-0x00002c(%ebp),%eax
		cmpl   $0x000008,_0be28a_data(%eax)
		jne    _0831a8_jump
		imul   $0x00006c,-0x00002c(%ebp),%eax
		testb  $0x000080,_0be2a3_data(%eax)
		je     _083183_jump
		movl   $0x000000,-0x000044(%ebp)

	_083165_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _083174_jump
		jmp    _083181_jump

	_08316f_jump:
		incl   -0x000044(%ebp)
		jmp    _083165_jump

	_083174_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000000,%gs:(%eax)
		jmp    _08316f_jump

	_083181_jump:
		jmp    _0831a6_jump

	_083183_jump:
		movl   $0x000000,-0x000044(%ebp)

	_08318a_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _083199_jump
		jmp    _0831a6_jump

	_083194_jump:
		incl   -0x000044(%ebp)
		jmp    _08318a_jump

	_083199_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000080,%gs:(%eax)
		jmp    _083194_jump

	_0831a6_jump:
		jmp    _0831cb_jump

	_0831a8_jump:
		movl   $0x000000,-0x000044(%ebp)

	_0831af_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _0831be_jump
		jmp    _0831cb_jump

	_0831b9_jump:
		incl   -0x000044(%ebp)
		jmp    _0831af_jump

	_0831be_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000000,%gs:(%eax)
		jmp    _0831b9_jump

	_0831cb_jump:
		jmp    _0831ef_jump

	_0831cd_jump:
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000048(%ebp),%eax
		mov    %ax,_0bddf8_data(%edx)
		mov    -0x00004c(%ebp),%eax
		mov    %eax,_0bddf4_data(%edx)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000048(%eax),%eax
		mov    %eax,-0x00003c(%ebp)

	_0831ef_jump:
		mov    -0x000048(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000008(%edx)
		mov    -0x00004c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000004(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000048(%edx)
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000034(%eax)
		jne    _083309_jump
		lgs    0x000014(%ebp),%eax
		cmpw   $0x000000,%gs:0x000038(%eax)
		jne    _083309_jump
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000044(%eax)
		je     _0832a1_jump
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bdcb4_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bdd18_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bdd7c_data,%edx
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00006c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000074(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000044(%edx),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _088bf8_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _08329f_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _08370e_jump

	_08329f_jump:
		jmp    _083307_jump

	_0832a1_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bdcb4_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bdd18_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    $_0bdd7c_data,%eax
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00006c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000074(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		imul   $0x00006c,-0x00002c(%ebp),%edx
		mov    _0be2ce_data(%edx),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _088bf8_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _083307_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _08370e_jump

	_083307_jump:
		jmp    _083339_jump

	_083309_jump:
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000038(%eax),%ax
		mov    %ax,-0x000068(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000034(%eax),%eax
		mov    %eax,-0x00006c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000040(%eax),%ax
		mov    %ax,-0x000070(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00003c(%eax),%eax
		mov    %eax,-0x000074(%ebp)

	_083339_jump:
		imul   $0x00006c,-0x00002c(%ebp),%eax
		testb  $0x000002,_0be2a3_data(%eax)
		je     _08336e_jump
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		movzwl -0x000068(%ebp),%eax
		push   %eax
		pushl  -0x00006c(%ebp)
		movzwl -0x000070(%ebp),%eax
		push   %eax
		pushl  -0x000074(%ebp)
		call   _088520_func
		add    $0x000020,%esp

	_08336e_jump:
		mov    -0x000068(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000038(%edx)
		mov    -0x00006c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000034(%edx)
		mov    -0x000070(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000040(%edx)
		mov    -0x000074(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x00003c(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000068(%ebp),%eax
		mov    %ax,_0bdd30_data(%edx)
		mov    -0x00006c(%ebp),%eax
		mov    %eax,_0bdd2c_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000070(%ebp),%eax
		mov    %ax,_0bdd4e_data(%edx)
		mov    -0x000074(%ebp),%eax
		mov    %eax,_0bdd4a_data(%edx)
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bdda4_data(%eax)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		mov    -0x000038(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be4ee_data(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		mov    $_0beb34_data,%eax
		push   %eax
		pushl  -0x00002c(%ebp)
		pushl  -0x000038(%ebp)
		pushl  -0x000004(%ebp)
		movzwl -0x000048(%ebp),%eax
		push   %eax
		pushl  -0x00004c(%ebp)
		movzwl -0x000068(%ebp),%eax
		push   %eax
		pushl  -0x00006c(%ebp)
		movzwl -0x000070(%ebp),%eax
		push   %eax
		pushl  -0x000074(%ebp)
		call   _0882cf_func
		add    $0x000028,%esp
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0beb38_data,%dx
		mov    _0beb34_data,%ebx
		mov    %dx,_0bde52_data(%eax)
		mov    %ebx,_0bde4e_data(%eax)
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0beb40_data,%dx
		mov    _0beb3c_data,%ebx
		mov    %dx,_0be230_data(%eax)
		mov    %ebx,_0be22c_data(%eax)
		mov    _0beb48_data,%ax
		mov    %ax,-0x000050(%ebp)
		mov    _0beb44_data,%eax
		mov    %eax,-0x000054(%ebp)
		movzwl -0x000050(%ebp),%eax
		push   %eax
		pushl  -0x000054(%ebp)
		imul   $0x0000c0,-0x00002c(%ebp),%eax
		mov    $_0bde6c_data,%edx
		add    %edx,%eax
		push   %eax
		call   _088090_func
		add    $0x00000c,%esp
		jmp    _0834a9_jump

	_083492_jump:
		imul   $0x000006,-0x00002c(%ebp),%eax
		movw   $0x000000,_0bde52_data(%eax)
		movl   $0x000000,_0bde4e_data(%eax)

	_0834a9_jump:
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0bde52_data(%eax),%dx
		mov    _0bde4e_data(%eax),%ebx
		lgs    0x000014(%ebp),%eax
		mov    %dx,%gs:0x000020(%eax)
		lgs    0x000014(%ebp),%eax
		mov    %ebx,%gs:0x00001c(%eax)
		lgs    -0x00007c(%ebp),%eax
		pushl  %gs:0x000008(%eax)
		call   _0883f7_func
		add    $0x000004,%esp
		mov    -0x00002c(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    -0x00003c(%ebp),%eax
		mov    %eax,_0bde12_data(%ebx)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000040(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000004(%eax),%eax
		mov    %eax,-0x00000c(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x00000c(%eax),%eax
		mov    %eax,-0x000020(%ebp)
		mov    -0x000038(%ebp),%al
		mov    -0x00002c(%ebp),%edx
		mov    %al,_0be50e_data(%edx)
		pushl  -0x000020(%ebp)
		pushl  -0x00001c(%ebp)
		pushl  -0x000018(%ebp)
		pushl  -0x000038(%ebp)
		pushl  -0x00000c(%ebp)
		pushl  -0x000040(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _088322_func
		add    $0x000028,%esp
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _0883a6_func
		add    $0x000010,%esp
		pushl  -0x000014(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _088380_func
		add    $0x000014,%esp
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bde12_data(%eax),%eax
		mov    %eax,-0x00003c(%ebp)
		pushl  -0x000004(%ebp)
		pushl  -0x00003c(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _088357_func
		add    $0x000018,%esp
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bdd90_data(%eax)
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bddb8_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:(%ebx),%ebx
		mov    %ebx,_0be513_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000008(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000004(%ebx),%ebx
		mov    %dx,_0be51b_data(%eax)
		mov    %ebx,_0be517_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00000c(%ebx),%ebx
		mov    %ebx,_0be51f_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000010(%ebx),%ebx
		mov    %ebx,_0be523_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		mov    %eax,_0be527_data(%ebx)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000018(%ebx),%ebx
		mov    %ebx,_0be52b_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000020(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00001c(%ebx),%ebx
		mov    %dx,_0be533_data(%eax)
		mov    %ebx,_0be52f_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000028(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000024(%ebx),%ebx
		mov    %dx,_0be53b_data(%eax)
		mov    %ebx,_0be537_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000038(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000034(%ebx),%ebx
		mov    %dx,_0be54b_data(%eax)
		mov    %ebx,_0be547_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000030(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00002c(%ebx),%ebx
		mov    %dx,_0be543_data(%eax)
		mov    %ebx,_0be53f_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000040(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00003c(%ebx),%ebx
		mov    %dx,_0be553_data(%eax)
		mov    %ebx,_0be54f_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000044(%edx),%edx
		mov    %edx,_0be557_data(%eax)
		mov    -0x00002c(%ebp),%eax
		lgs    0x00001c(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000024(%ebp)

	_08370e_jump:
		mov    -0x000024(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000010



_083718_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000028,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bdd90_data(%eax)
		jne    _083748_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _083928_jump

	_083748_jump:
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bddb8_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0bde3a_data(%eax)
		jae    _083805_jump
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0beb0c_data(%eax)
		je     _083783_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		jne    _083788_jump

	_083783_jump:
		jmp    _083805_jump

	_083788_jump:
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bddf8_data(%edx),%ax
		mov    %ax,-0x00001c(%ebp)
		mov    _0bddf4_data(%edx),%eax
		mov    %eax,-0x000020(%ebp)
		call   _088580_func
		and    $_0000ff_case,%eax
		cmp    $0x000003,%eax
		jne    _0837df_jump
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    _0bde12_data(%ebx),%ecx
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    _0bde26_data(%ebx),%esi
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		movzwl %dx,%eax
		mov    %ecx,%ebx
		mov    %esi,%edx
		call   _083b2c_func
		jmp    _0837f5_jump

	_0837df_jump:
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		movzwl %dx,%ebx
		push   %ebx
		call   _0880f6_func
		add    $0x000004,%esp

	_0837f5_jump:
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0beb0c_data(%eax)

	_083805_jump:
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bdccc_data(%edx),%ax
		mov    %ax,-0x000024(%ebp)
		mov    _0bdcc8_data(%edx),%eax
		mov    %eax,-0x000028(%ebp)
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bdcea_data(%edx),%ax
		mov    %ax,-0x000014(%ebp)
		mov    _0bdce6_data(%edx),%eax
		mov    %eax,-0x000018(%ebp)
		movzwl -0x000024(%ebp),%eax
		push   %eax
		pushl  -0x000028(%ebp)
		movzwl -0x000014(%ebp),%eax
		push   %eax
		pushl  -0x000018(%ebp)
		call   _0881a4_func
		add    $0x000010,%esp
		movzwl -0x000024(%ebp),%eax
		push   %eax
		pushl  -0x000028(%ebp)
		movzwl -0x000014(%ebp),%eax
		push   %eax
		pushl  -0x000018(%ebp)
		call   _0882ac_func
		add    $0x000010,%esp
		mov    -0x000010(%ebp),%eax
		movzbl _0be50e_data(%eax),%eax
		push   %eax
		call   _08842c_func
		add    $0x000004,%esp
		cmpl   $0x000000,-0x000008(%ebp)
		je     _08388e_jump
		mov    -0x000010(%ebp),%eax
		call   _088b20_func
		mov    -0x000010(%ebp),%eax
		call   _088dd2_func

	_08388e_jump:
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bdccc_data(%eax)
		movl   $0x000000,_0bdcc8_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bdcea_data(%eax)
		movl   $0x000000,_0bdce6_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bde52_data(%eax)
		movl   $0x000000,_0bde4e_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bdd30_data(%eax)
		movl   $0x000000,_0bdd2c_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bdd4e_data(%eax)
		movl   $0x000000,_0bdd4a_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0be24e_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bdd90_data(%eax)
		movl   $0x000000,-0x000004(%ebp)

	_083928_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_083930_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000030,%esp
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000018(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x00000c(%ebp)
		call   _088580_func
		and    $_0000ff_case,%eax
		cmp    $0x000003,%eax
		jne    _08399e_jump
		lea    -0x000014(%ebp),%ebx
		lea    -0x000010(%ebp),%edx
		lea    -0x000028(%ebp),%eax
		call   _083a10_func
		test   %eax,%eax
		je     _08397f_jump
		movw   $0x000000,-0x00002c(%ebp)
		movl   $0x000000,-0x000030(%ebp)
		jmp    _083a05_jump

	_08397f_jump:
		mov    -0x000014(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)
		mov    -0x000010(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %eax,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    %ax,-0x00002c(%ebp)
		mov    -0x000028(%ebp),%eax
		mov    %eax,-0x000030(%ebp)
		jmp    _083a05_jump

	_08399e_jump:
		lea    -0x00000c(%ebp),%eax
		push   %eax
		lea    -0x000004(%ebp),%eax
		push   %eax
		mov    -0x00001c(%ebp),%eax
		shr    $0x000004,%eax
		add    $0x000004,%eax
		push   %eax
		call   _0880c0_func
		add    $0x00000c,%esp
		mov    -0x000004(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)

	_0839c0_jump:
		mov    -0x000004(%ebp),%edx
		and    $0x00ffff,%edx
		mov    $0x00ffff,%eax
		sub    -0x00001c(%ebp),%eax
		cmp    %eax,%edx
		jbe    _0839f9_jump
		lea    -0x00000c(%ebp),%eax
		push   %eax
		lea    -0x000004(%ebp),%eax
		push   %eax
		mov    -0x00001c(%ebp),%eax
		shr    $0x000004,%eax
		add    $0x000004,%eax
		push   %eax
		call   _0880c0_func
		add    $0x00000c,%esp
		mov    -0x000004(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _0839c0_jump

	_0839f9_jump:
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,-0x00002c(%ebp)
		mov    %edx,-0x000030(%ebp)

	_083a05_jump:
		mov    -0x00002c(%ebp),%edx
		mov    -0x000030(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_083a10_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00002c,%esp
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		mov    -0x000024(%ebp),%eax
		movw   $0x000000,0x000004(%eax)
		mov    -0x000024(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    -0x000010(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    -0x000020(%ebp),%eax
		movl   $0x000000,(%eax)
		movl   $0x000000,-0x000004(%ebp)
		lea    -0x000004(%ebp),%eax
		push   %eax
		lea    -0x00000c(%ebp),%eax
		push   %eax
		push   $0x000020
		call   _08859d_func
		add    $0x00000c,%esp
		test   %eax,%eax
		je     _083a80_jump
		movl   $0x000000,-0x00001c(%ebp)
		jmp    _083b24_jump

	_083a80_jump:
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,-0x000028(%ebp)
		mov    %edx,-0x00002c(%ebp)
		lgs    -0x00002c(%ebp),%edx
		movl   $0x001000,%gs:(%edx)
		pushl  -0x000004(%ebp)
		call   _08860c_func
		add    $0x000004,%esp
		mov    %eax,-0x000018(%ebp)
		push   $0x000010
		mov    -0x000028(%ebp),%ebx
		mov    -0x00002c(%ebp),%edx
		mov    %ds,%esi
		mov    $_0beb24_data,%ecx
		mov    %esi,%eax
		mov    %ecx,%esi
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _088f64_func
		pushl  -0x000004(%ebp)
		pushl  -0x00000c(%ebp)
		call   _0885de_func
		add    $0x000008,%esp
		cmpl   $0x000000,-0x000018(%ebp)
		jne    _083b1d_jump
		andw   $0x00f000,_0beb30_data
		pushl  _0beb30_data
		call   _0886c5_func
		add    $0x000004,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    _0beb30_data,%eax
		mov    %eax,-0x000014(%ebp)
		xor    %ebx,%ebx
		mov    -0x00000c(%ebp),%edx
		mov    -0x000024(%ebp),%eax
		mov    %dx,0x000004(%eax)
		mov    -0x000024(%ebp),%eax
		mov    %ebx,(%eax)
		mov    -0x000014(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %eax,(%edx)
		movl   $0x000000,-0x00001c(%ebp)
		jmp    _083b24_jump

	_083b1d_jump:
		movl   $0x000005,-0x00001c(%ebp)

	_083b24_jump:
		mov    -0x00001c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_083b2c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00001c,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %ebx,-0x000004(%ebp)
		pushl  -0x000010(%ebp)
		call   _088745_func
		add    $0x000004,%esp
		lea    -0x00000c(%ebp),%edx
		push   %edx
		lea    -0x000008(%ebp),%edx
		push   %edx
		push   $0x000020
		call   _08859d_func
		add    $0x00000c,%esp
		xor    %edx,%edx
		mov    -0x000008(%ebp),%eax
		mov    %ax,-0x000018(%ebp)
		mov    %edx,-0x00001c(%ebp)
		push   $0x000010
		mov    %ds,%edx
		mov    $_0beb24_data,%esi
		mov    %edx,%ebx
		mov    %esi,%edx
		mov    -0x000018(%ebp),%eax
		mov    -0x00001c(%ebp),%esi
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _088f64_func
		pushl  -0x00000c(%ebp)
		call   _088678_func
		add    $0x000004,%esp
		pushl  -0x00000c(%ebp)
		pushl  -0x000008(%ebp)
		call   _0885de_func
		add    $0x000008,%esp
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_083ba8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083bbd_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083bd2_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000030,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %cx,-0x00001c(%ebp)
		mov    %ebx,-0x000020(%ebp)
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bdccc_data(%edx),%ax
		mov    %ax,-0x000024(%ebp)
		mov    _0bdcc8_data(%edx),%eax
		mov    %eax,-0x000028(%ebp)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0bde3a_data(%eax)
		jb     _083c39_jump
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000004(%eax),%ax
		mov    %ax,-0x000014(%ebp)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000018(%ebp)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x00000c(%ebp)
		jmp    _0841dc_jump

	_083c39_jump:
		movl   $0x000000,-0x000004(%ebp)

	_083c40_jump:
		cmpl   $0x000020,-0x000004(%ebp)
		jb     _083c50_jump
		jmp    _0841d3_jump

	_083c4b_jump:
		incl   -0x000004(%ebp)
		jmp    _083c40_jump

	_083c50_jump:
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		jne    _0841ce_jump
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%eax
		lgs    -0x000020(%ebp),%ebx
		mov    %gs:0x000004(%ebx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x000004(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x000004(%edx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x00000c(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:0x000008(%eax)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000004(%eax),%ax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%edx
		mov    %eax,%ebx
		lgs    -0x000020(%ebp),%eax
		add    %gs:0x000030(%eax),%edx
		mov    %ebx,%eax
		mov    %eax,%ebx
		mov    %edx,%ecx
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%eax
		mov    %bx,%gs:0x000014(%eax)
		mov    %ecx,%gs:0x000010(%eax)
		lgs    -0x000020(%ebp),%eax
		testb  $0x000040,%gs:0x000028(%eax)
		je     _083df2_jump
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000018(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x00001c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000034(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000020(%edx)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		add    %gs:0x000034(%edx),%eax
		lgs    -0x000020(%ebp),%ebx
		mov    %gs:0x00002c(%ebx),%ebx
		sub    %eax,%ebx
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		mov    %ebx,%gs:0x00002c(%edx)
		jmp    _083e4c_jump

	_083df2_jump:
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000018(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x00001c(%edx)

	_083e4c_jump:
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000014(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000032(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000018(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000034(%edx)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000028(%eax),%dx
		or     $0x0000a0,%dh
		imul   $0x0000c0,-0x000010(%ebp),%ebx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %ebx,%eax
		lgs    _0bde6c_data(%eax),%eax
		mov    %dx,%gs:0x000030(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000010(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000036(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x000020(%edx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x00001c(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x000040(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:0x00003c(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x00000c(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000038(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000024(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00004a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		movw   $0x000000,%gs:0x00003a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000038(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000044(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		movw   $0x000000,%gs:0x000048(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		movl   $0x000000,%gs:0x00004c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000050(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000040(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000054(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000044(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000056(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000048(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000058(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x00004c(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000050(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000054(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005e(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bde70_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bde6c_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000058(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000060(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		movl   $0x000000,%gs:0x000064(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		movw   $0x000000,%gs:0x000068(%edx)
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		jmp    _0841e3_jump

	_0841ce_jump:
		jmp    _083c4b_jump

	_0841d3_jump:
		movl   $0xffffffff,-0x000008(%ebp)
		jmp    _0841e3_jump

	_0841dc_jump:
		movl   $0x000000,-0x000008(%ebp)

	_0841e3_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_0841eb_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		cmpl   $0x000020,-0x000008(%ebp)
		jae    _084289_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _084241_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		testb  $0x000010,%gs:0x000031(%edx)
		je     _084243_jump

	_084241_jump:
		jmp    _084280_jump

	_084243_jump:
		imul   $0x0000c0,-0x00000c(%ebp),%eax
		imul   $0x000006,-0x000008(%ebp),%edx
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%eax
		andb   $0x00007f,%gs:0x000031(%eax)
		imul   $0x0000c0,-0x00000c(%ebp),%eax
		imul   $0x000006,-0x000008(%ebp),%edx
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		movw   $0x000000,%gs:0x000034(%edx)
		movl   $0x000000,-0x000004(%ebp)
		jmp    _084290_jump

	_084280_jump:
		movl   $0x000000,-0x000004(%ebp)
		jmp    _084290_jump

	_084289_jump:
		movl   $0x00000a,-0x000004(%ebp)

	_084290_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_084610_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084625_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084666_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000014(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%edx
		imul   $0x000006,-0x000010(%ebp),%eax
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _0846d3_jump
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		movswl %gs:0x000032(%edx),%eax
		mov    %eax,-0x000004(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,%gs:0x000032(%edx)
		jmp    _0846dc_jump

	_0846d3_jump:
		movl   $0x000000,-0x000008(%ebp)
		jmp    _0846e2_jump

	_0846dc_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)

	_0846e2_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_084909_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000014(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%edx
		imul   $0x000006,-0x000010(%ebp),%eax
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _084976_jump
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		movswl %gs:0x000054(%edx),%eax
		mov    %eax,-0x000004(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,%gs:0x000054(%edx)
		jmp    _08497f_jump

	_084976_jump:
		movl   $0x000000,-0x000008(%ebp)
		jmp    _084985_jump

	_08497f_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)

	_084985_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_084c94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084ca9_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084cbe_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		cmpl   $0x000020,-0x000008(%ebp)
		jae    _084d07_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bde6c_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		jne    _084cfe_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _084d0e_jump

	_084cfe_jump:
		movl   $0x000000,-0x000004(%ebp)
		jmp    _084d0e_jump

	_084d07_jump:
		movl   $0x00000a,-0x000004(%ebp)

	_084d0e_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_084d94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084da9_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _080e86_func
		mov    %eax,%esi
		cmp    $0xffffffff,%eax
		je     _084de0_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _080e86_func
		mov    %eax,%edi
		mov    %esi,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   _080e86_func
		mov    %edi,%eax

	_084de0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084de6_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		push   %eax
		mov    %edx,%ebp
		call   _0879f7_func
		mov    %eax,0x000008(%esp)
		test   %eax,%eax
		jne    _084e11_jump
		mov    $0x000004,%eax

	_084e02_jump:
		call   _086eb3_func
		mov    $0xffffffff,%eax
		jmp    _084ed9_jump

	_084e11_jump:
		test   $0x000001,%al
		jne    _084e1c_jump
		mov    $0x000006,%eax
		jmp    _084e02_jump

	_084e1c_jump:
		test   $0x000040,%al
		je     _084e48_jump
		mov    %ebx,%ecx
		mov    (%esp),%ebx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edi
		mov    %eax,%esi
		test   %eax,%eax
		jge    _084ed7_jump
		xor    %eax,%eax
		mov    %di,%ax

	_084e3e_jump:
		call   _085aee_func
		jmp    _084ed9_jump

	_084e48_jump:
		mov    %ebx,0x00000c(%esp)
		xor    %esi,%esi

	_084e4e_jump:
		mov    0x00000c(%esp),%ecx
		mov    (%esp),%ebx
		mov    %ebp,%edx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%ebx
		mov    %eax,%edi
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		jge    _084e72_jump
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    _084e3e_jump

	_084e72_jump:
		je     _084ed7_jump
		xor    %eax,%edi
		mov    %ebp,%eax
		lea    (%ebx,%ebp,1),%ecx
		xor    %edx,%edx
		mov    %ecx,0x000010(%esp)
		jmp    _084eb4_jump

	_084e83_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x00001a,%ebx
		jne    _084ea4_jump
		mov    0x000004(%esp),%ebp
		mov    %edi,%edx
		mov    $0x000001,%ebx
		sub    %ebp,%edx
		mov    (%esp),%eax
		inc    %edx
		call   _080e86_func
		jmp    _084ed7_jump

	_084ea4_jump:
		cmp    $0x00000d,%ebx
		je     _084eb2_jump
		mov    %edx,%ebx
		inc    %esi
		mov    (%eax),%cl
		inc    %edx
		mov    %cl,(%ebx,%ebp,1)

	_084eb2_jump:
		inc    %eax
		inc    %edi

	_084eb4_jump:
		cmp    0x000010(%esp),%eax
		jb     _084e83_jump
		mov    0x00000c(%esp),%ecx
		mov    0x000009(%esp),%ah
		sub    %edx,%ecx
		add    %edx,%ebp
		mov    %ecx,0x00000c(%esp)
		test   $0x000020,%ah
		jne    _084ed7_jump
		test   %ecx,%ecx
		jne    _084e4e_jump

	_084ed7_jump:
		mov    %esi,%eax

	_084ed9_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_084ee1_func:
		push   %edx
		xor    %edx,%edx
		mov    _0bdbc0_data,%eax
		mov    %edx,_0bdbc0_data
		test   %eax,%eax
		jne    _084efc_jump
		mov    $0x000001,%ah
		int    $0x000021
		and    $_0000ff_case,%eax

	_084efc_jump:
		pop    %edx
		ret    



_084f10_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		call   _088f95_func
		mov    $0xf368cb40,%ebx
		mov    $0x3cc003c9,%ecx
		mov    %eax,%edi
		mov    %edx,%esi
		call   _0853a4_func
		jge    _084f4c_jump
		xor    %esi,%esi
		mov    $0x3ff00000,%edi
		mov    %esi,-0x00003c(%ebp)
		mov    %edi,-0x000038(%ebp)
		jmp    _085133_jump

	_084f4c_jump:
		mov    $0xfefa39ef,%ebx
		mov    $0x40862e42,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _0853a4_func
		jle    _084f86_jump
		cmpl   $0x000000,-0x000038(%ebp)
		jge    _084f74_jump
		xor    %ebx,%ebx
		mov    %ebx,-0x00003c(%ebp)
		mov    %ebx,-0x000038(%ebp)
		jmp    _085133_jump

	_084f74_jump:
		lea    -0x00003c(%ebp),%edx
		mov    $0x008104,%eax
		call   _0869d4_func
		jmp    _08512d_jump

	_084f86_jump:
		cmpb   $0x000000,_0bd971_data
		je     _084f9f_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _088f9e_func
		jmp    _08512d_jump

	_084f9f_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		mov    $0x652b8301,%ebx
		mov    $0x3ff71547,%ecx
		call   _07f75f_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		call   _089047_func
		mov    -0x000038(%ebp),%edx
		mov    %eax,%esi
		mov    -0x00003c(%ebp),%eax
		lea    -0x000034(%ebp),%ebx
		call   _088f95_func
		call   _08905c_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _07fdac_func
		mov    %eax,-0x000014(%ebp)
		test   %esi,%esi
		jge    _085013_jump
		mov    %eax,%edx
		neg    %edx
		mov    %edx,-0x000014(%ebp)
		test   %ecx,%ecx
		je     _085013_jump
		lea    -0x000001(%edx),%esi
		xor    %eax,%eax
		mov    $0x3ff00000,%edx
		mov    %esi,-0x000014(%ebp)
		call   _07f5a2_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_085013_jump:
		mov    -0x000038(%ebp),%eax
		xor    %edi,%edi
		test   %eax,%eax
		je     _08505b_jump
		mov    $0x000004,%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _089088_func
		lea    -0x000034(%ebp),%ebx
		call   _08905c_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		test   %edx,%edx
		je     _08504e_jump
		mov    $0xfffffffc,%ebx
		call   _089088_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_08504e_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _07fdac_func
		mov    %eax,%edi

	_08505b_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07f75f_func
		mov    $0x4f237e45,%ebx
		mov    $0x4034d053,%ecx
		mov    %eax,%esi
		mov    %edx,-0x00002c(%ebp)
		call   _07f5a8_func
		mov    $0x1ac13af9,%ebx
		mov    $0x3fad92de,%ecx
		mov    %eax,-0x000028(%ebp)
		mov    %edx,-0x000024(%ebp)
		mov    -0x00002c(%ebp),%edx
		mov    %esi,%eax
		call   _07f75f_func
		mov    $0xa35ca6dc,%ebx
		mov    $0x401cdaa0,%ecx
		call   _07f5a8_func
		mov    -0x00003c(%ebp),%ebx
		mov    -0x000038(%ebp),%ecx
		call   _07f75f_func
		mov    %eax,-0x000020(%ebp)
		mov    %edx,%esi
		mov    -0x000028(%ebp),%eax
		mov    -0x000024(%ebp),%edx
		mov    -0x000020(%ebp),%ebx
		mov    %esi,%ecx
		call   _07f5a8_func
		mov    -0x000020(%ebp),%ebx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000018(%ebp)
		mov    %esi,%ecx
		mov    -0x000028(%ebp),%eax
		mov    -0x000024(%ebp),%edx
		call   _07f5a2_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    $_0c1a30_data,%esi
		call   _0800d8_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_0850f7_jump:
		test   %edi,%edi
		je     _08511f_jump
		test   $0x000001,%di
		je     _085118_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		call   _07f75f_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_085118_jump:
		sar    %edi
		add    $0x000008,%esi
		jmp    _0850f7_jump

	_08511f_jump:
		mov    -0x000014(%ebp),%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _089088_func

	_08512d_jump:
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_085133_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_085150_func:
		or     %ecx,%ecx
		je     _085180_jump
		cmp    %dl,(%eax)

	_085156_jump:
		test   $0x000003,%al
		je     _085163_jump
		mov    %dl,(%eax)
		inc    %eax
		ror    $0x000008,%edx
		dec    %ecx
		jne    _085156_jump

	_085163_jump:
		push   %ecx
		shr    $0x000002,%ecx
		call   _085187_func
		pop    %ecx
		and    $0x000003,%ecx
		je     _085180_jump
		mov    %dl,(%eax)
		dec    %ecx
		je     _085180_jump
		mov    %dh,0x000001(%eax)
		dec    %ecx
		je     _085180_jump
		mov    %dl,0x000002(%eax)

	_085180_jump:
		ret    



_085187_func:
		or     %ecx,%ecx
		je     _0851f2_jump

	_08518b_jump:
		test   $0x00001f,%al
		je     _085197_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		jne    _08518b_jump

	_085197_jump:
		push   %ecx
		shr    $0x000002,%ecx
		je     _0851d7_jump
		dec    %ecx
		je     _0851c9_jump

	_0851a0_jump:
		mov    %edx,(%eax)
		mov    %edx,0x000004(%eax)
		dec    %ecx
		mov    %edx,0x000008(%eax)
		mov    %edx,0x00000c(%eax)
		je     _0851c6_jump
		cmp    %dl,0x000020(%eax)
		mov    %edx,0x000010(%eax)
		mov    %edx,0x000014(%eax)
		dec    %ecx
		mov    %edx,0x000018(%eax)
		mov    %edx,0x00001c(%eax)
		lea    0x000020(%eax),%eax
		jne    _0851a0_jump
		lea    -0x000010(%eax),%eax

	_0851c6_jump:
		lea    0x000010(%eax),%eax

	_0851c9_jump:
		mov    %edx,(%eax)
		mov    %edx,0x000004(%eax)
		mov    %edx,0x000008(%eax)
		mov    %edx,0x00000c(%eax)
		lea    0x000010(%eax),%eax

	_0851d7_jump:
		pop    %ecx
		and    $0x000003,%ecx
		je     _0851f2_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		je     _0851f2_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		je     _0851f2_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax

	_0851f2_jump:
		ret    



_0851f3_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,%ebx
		mov    %ebp,%edx
		mov    %eax,%esi
		call   _089126_func
		mov    0x000000(%ebp),%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_08520c_func:
		push   %ecx
		push   %eax
		push   %edx
		mov    %ebx,%edx
		mov    $0x00001a,%ah
		int    $0x000021
		pop    %ecx
		pop    %edx
		mov    $0x00004e,%ah
		int    $0x000021
		call   _087a62_func
		mov    %ebx,%edx
		call   _085248_func
		pop    %ecx
		ret    



_085248_func:
		cmpb   $0x000009,_0bdbce_data
		jne    _08526a_jump
		push   %eax
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x00002f,%ah
		int    $0x000021
		mov    %ebx,%esi
		mov    %edx,%edi
		mov    $0x00002b,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %eax

	_08526a_jump:
		ret    



_08528e_func:
		push   %ebx
		push   %edx
		sub    $0x000024,%esp
		mov    %eax,%edx
		mov    %esp,%eax
		call   _089504_func
		cmp    $0x0001f4,%eax
		jl     _0852a6_jump
		incl   (%esp)

	_0852a6_jump:
		mov    %esp,%eax
		call   _0895c7_func
		mov    %eax,%ebx
		test   %edx,%edx
		je     _0852b5_jump
		mov    %eax,(%edx)

	_0852b5_jump:
		mov    %ebx,%eax
		add    $0x000024,%esp
		pop    %edx
		pop    %ebx
		ret    



_0852bd_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %ebx,%ecx
		cmp    %eax,%edx
		je     _085306_jump
		jae    _0852f0_jump
		lea    (%edx,%ebx,1),%edi
		cmp    %eax,%edi
		jbe    _0852f0_jump
		lea    -0x000001(%edi),%esi
		lea    (%eax,%ebx,1),%edi
		mov    %ds,%edx
		dec    %edi
		push   %es
		mov    %edx,%es
		std    
		dec    %esi
		dec    %edi
		shr    %ecx
		rep movsw %ds:(%esi),%es:(%edi)
		adc    %ecx,%ecx
		inc    %esi
		inc    %edi
		data16 rep movsb %ds:(%esi),%es:(%edi)
		pop    %es
		cld    
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0852f0_jump:
		mov    %edx,%esi
		mov    %eax,%edi
		mov    %ds,%edx
		push   %es
		mov    %edx,%es
		push   %ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %ecx
		and    $0x000003,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		pop    %es

	_085306_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08531c_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07f75f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x3ff00000,%edx
		xor    %eax,%eax
		call   _07f5a2_func
		test   %edx,%edx
		jge    _085356_jump
		lea    -0x000010(%ebp),%edx
		mov    $0x002041,%eax
		call   _0869d4_func
		jmp    _08539c_jump

	_085356_jump:
		jne    _085370_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		jge    _08536a_jump
		mov    $0x54442d18,%eax
		mov    $0x400921fb,%edx
		jmp    _08539c_jump

	_08536a_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		jmp    _08539c_jump

	_085370_jump:
		call   _07fd4a_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		call   _0800d8_func
		call   _08972d_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54442d15,%eax
		mov    $0x3ff921fb,%edx
		call   _07f5a2_func

	_08539c_jump:
		lea    -0x000008(%ebp),%esp
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_0853a4_func:
		push   %ebp
		test   $0x7ff00000,%edx
		jne    _0853af_jump
		sub    %edx,%edx

	_0853af_jump:
		test   $0x7ff00000,%ecx
		jne    _0853b9_jump
		sub    %ecx,%ecx

	_0853b9_jump:
		mov    %ecx,%ebp
		xor    %edx,%ebp
		mov    $0x000000,%ebp
		js     _0853d0_jump
		cmp    %ecx,%edx
		jne    _0853ca_jump
		cmp    %ebx,%eax

	_0853ca_jump:
		je     _0853d8_jump
		rcr    %ecx
		xor    %ecx,%edx

	_0853d0_jump:
		add    %edx,%edx
		sbb    $0x000000,%ebp
		add    %ebp,%ebp
		inc    %ebp

	_0853d8_jump:
		mov    %ebp,%eax
		pop    %ebp
		ret    



_0853dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000010(%eax),%eax
		call   _0878e3_func
		mov    %eax,%ebx
		cmp    $0xffffffff,%eax
		je     _085408_jump
		mov    0x000004(%edx),%ecx
		test   %ecx,%ecx
		je     _085406_jump
		testb  $0x000010,0x00000d(%edx)
		je     _085402_jump
		lea    (%ecx,%eax,1),%ebx
		jmp    _085406_jump

	_085402_jump:
		mov    %eax,%ebx
		sub    %ecx,%ebx

	_085406_jump:
		mov    %ebx,%eax

	_085408_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08540c_func:
		push   %ebx
		mov    %edx,%ebx
		cmp    $0x00001f,%edx
		jbe    _08541f_jump
		shr    $0x000005,%edx
		call   _08540c_func
		and    $0x00001f,%ebx

	_08541f_jump:
		cmp    $0x00000a,%ebx
		jb     _08542c_jump
		add    $0x000037,%bl
		mov    %bl,(%eax)
		inc    %eax
		pop    %ebx
		ret    

	_08542c_jump:
		add    $0x000030,%bl
		mov    %bl,(%eax)
		inc    %eax
		pop    %ebx
		ret    



_085434_func:
		push   %ebx
		push   %edx
		mov    $0x00005f,%ah
		mov    $_0e6f0c_data,%ebx
		mov    %ah,_0e6f0c_data
		inc    %ebx
		call   _087be6_func
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _08540c_func
		lea    0x000001(%eax),%ebx
		movb   $0x00002e,(%eax)
		movb   $0x000041,(%ebx)
		inc    %ebx
		movb   $0x000041,(%ebx)
		inc    %ebx
		mov    %ebx,%eax
		movb   $0x000040,(%ebx)
		sub    $_0e6f0c_data,%eax
		pop    %edx
		pop    %ebx
		ret    



_08546d_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		call   _087968_func
		mov    (%eax),%ebp
		cmpb   $0x000000,_0e6f0c_data
		jne    _08548e_jump

	_085485_jump:
		call   _085434_func
		mov    %eax,%esi
		jmp    _0854a6_jump

	_08548e_jump:
		mov    $_0e6f0c_data,%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		lea    -0x000001(%ecx),%esi

	_0854a6_jump:
		xor    %eax,%eax
		mov    _0e6f0c_data(%esi),%al
		cmp    $0x00005a,%eax
		jne    _0854cb_jump
		mov    $0x000041,%dh
		xor    %eax,%eax
		mov    %dh,_0e6f0c_data(%esi)
		mov    _0e6f0b_data(%esi),%al
		dec    %esi
		cmp    $0x00002e,%eax
		jne    _0854a6_jump
		jmp    _085485_jump

	_0854cb_jump:
		mov    %al,%dl
		inc    %dl
		mov    $_0e6f0c_data,%eax
		mov    %dl,_0e6f0c_data(%esi)
		xor    %edx,%edx
		call   _08989e_func
		test   %eax,%eax
		je     _0854a6_jump
		test   %ebx,%ebx
		je     _08550c_jump
		mov    $_0e6f0c_data,%esi
		mov    %ebx,%edi
		push   %edi

	_0854f1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _085509_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0854f1_jump

	_085509_jump:
		pop    %edi
		jmp    _085511_jump

	_08550c_jump:
		mov    $_0e6f0c_data,%ebx

	_085511_jump:
		mov    %ebp,%eax
		call   _086eb3_func
		mov    %ebx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_085521_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000018,%esp
		push   %eax
		push   %edx
		push   %ebx
		call   _0879f7_func
		mov    %eax,-0x000014(%ebp)
		test   %eax,%eax
		jne    _08554d_jump
		mov    $0x000004,%eax

	_08553e_jump:
		call   _086eb3_func
		mov    $0xffffffff,%eax
		jmp    _0856ef_jump

	_08554d_jump:
		test   $0x000002,%al
		jne    _085558_jump
		mov    $0x000006,%eax
		jmp    _08553e_jump

	_085558_jump:
		test   $0x000080,%al
		je     _08558f_jump
		mov    $0x000002,%al
		mov    -0x00001c(%ebp),%ebx
		xor    %edx,%edx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		rcl    %dx
		ror    %dx
		shl    $0x000010,%edx
		mov    %ax,%dx
		mov    %edx,-0x00000c(%ebp)
		test   %edx,%edx
		jge    _08558f_jump

	_08557f_jump:
		xor    %eax,%eax
		mov    -0x00000c(%ebp),%ax
		call   _085aee_func
		jmp    _0856ef_jump

	_08558f_jump:
		testb  $0x000040,-0x000014(%ebp)
		je     _0855ca_jump
		mov    -0x000024(%ebp),%ecx
		mov    -0x000020(%ebp),%edx
		mov    -0x00001c(%ebp),%ebx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,-0x00000c(%ebp)
		test   %eax,%eax
		jl     _08557f_jump
		cmp    -0x000024(%ebp),%eax
		je     _0856ec_jump
		mov    $0x00000c,%eax
		call   _086eb3_func
		mov    %esi,-0x000024(%ebp)
		jmp    _0856ec_jump

	_0855ca_jump:
		call   _0898d9_func
		mov    %eax,%edx
		cmp    $0x0000b0,%eax
		jae    _0855dd_jump
		call   _08991b_func

	_0855dd_jump:
		mov    $0x000200,%edi
		cmp    $0x000230,%edx
		jae    _0855ef_jump
		mov    $0x000080,%edi

	_0855ef_jump:
		lea    0x000003(%edi),%eax
		xor    %edx,%edx
		and    $0x0000fc,%al
		xor    %esi,%esi
		sub    %eax,%esp
		mov    %esp,%eax
		mov    %edx,-0x000004(%ebp)
		mov    %eax,-0x000010(%ebp)
		mov    -0x000020(%ebp),%eax
		mov    %edx,-0x000018(%ebp)
		mov    %eax,-0x000008(%ebp)

	_08560b_jump:
		mov    -0x000004(%ebp),%eax
		cmp    -0x000024(%ebp),%eax
		jae    _0856b6_jump
		mov    -0x000008(%ebp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00000a,%eax
		jne    _08566b_jump
		mov    -0x000010(%ebp),%eax
		movb   $0x00000d,(%esi,%eax,1)
		inc    %esi
		cmp    %edi,%esi
		jne    _08566b_jump
		mov    -0x00001c(%ebp),%ebx
		mov    %edi,%ecx
		mov    %eax,%edx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,-0x00000c(%ebp)
		test   %eax,%eax
		jl     _08557f_jump
		cmp    %edi,%eax
		je     _085663_jump

	_08564f_jump:
		mov    $0x00000c,%eax
		call   _086eb3_func
		mov    -0x000018(%ebp),%eax
		add    %esi,%eax
		jmp    _0856ef_jump

	_085663_jump:
		mov    -0x000004(%ebp),%eax
		xor    %edi,%esi
		mov    %eax,-0x000018(%ebp)

	_08566b_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x000008(%ebp),%edx
		mov    -0x000008(%ebp),%ebx
		mov    -0x000004(%ebp),%ecx
		inc    %ebx
		inc    %ecx
		mov    (%edx),%dl
		mov    %ebx,-0x000008(%ebp)
		mov    %dl,(%esi,%eax,1)
		inc    %esi
		mov    %ecx,-0x000004(%ebp)
		cmp    %edi,%esi
		jne    _08560b_jump
		mov    -0x00001c(%ebp),%ebx
		mov    %edi,%ecx
		mov    %eax,%edx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,-0x00000c(%ebp)
		test   %eax,%eax
		jl     _08557f_jump
		cmp    %edi,%eax
		jne    _08564f_jump
		mov    -0x000004(%ebp),%eax
		xor    %edi,%esi
		mov    %eax,-0x000018(%ebp)
		jmp    _08560b_jump

	_0856b6_jump:
		test   %esi,%esi
		je     _0856ec_jump
		mov    -0x000010(%ebp),%edx
		mov    -0x00001c(%ebp),%ebx
		mov    %esi,%ecx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edi
		mov    %eax,-0x00000c(%ebp)
		test   %eax,%eax
		jl     _08557f_jump
		cmp    %esi,%eax
		je     _0856ec_jump
		mov    $0x00000c,%eax
		call   _086eb3_func
		mov    -0x000018(%ebp),%eax
		add    %edi,%eax
		jmp    _0856ef_jump

	_0856ec_jump:
		mov    -0x000024(%ebp),%eax

	_0856ef_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08571b_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		call   _089047_func
		mov    -0x00000c(%ebp),%edx
		mov    %eax,%esi
		mov    -0x000010(%ebp),%eax
		call   _089047_func
		test   %esi,%esi
		jne    _085782_jump
		test   %eax,%eax
		jne    _08575e_jump
		lea    -0x000010(%ebp),%ebx
		lea    -0x000018(%ebp),%edx
		mov    $0x00204d,%eax
		call   _0869de_func
		jmp    _085801_jump

	_08575e_jump:
		jge    _085775_jump
		mov    $0x54442d18,%edx
		mov    $0x400921fb,%ebx

	_08576a_jump:
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		jmp    _085807_jump

	_085775_jump:
		xor    %edi,%edi
		mov    %esi,-0x00000c(%ebp)
		mov    %edi,-0x000010(%ebp)
		jmp    _085807_jump

	_085782_jump:
		test   %eax,%eax
		jne    _0857a8_jump
		test   %esi,%esi
		jge    _08579c_jump
		mov    $0x54442d15,%ecx
		mov    $0xbff921fb,%esi
		mov    %ecx,-0x000010(%ebp)
		mov    %esi,-0x00000c(%ebp)
		jmp    _085807_jump

	_08579c_jump:
		mov    $0x54442d15,%edx
		mov    $0x3ff921fb,%ebx
		jmp    _08576a_jump

	_0857a8_jump:
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    -0x000010(%ebp),%ebx
		mov    -0x00000c(%ebp),%ecx
		call   _0800d8_func
		call   _08972d_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		call   _089047_func
		test   %esi,%esi
		jl     _0857e8_jump
		test   %eax,%eax
		jge    _085807_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0x54442d18,%ebx
		mov    $0x400921fb,%ecx
		call   _07f5a8_func
		jmp    _085801_jump

	_0857e8_jump:
		test   %eax,%eax
		jle    _085807_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0x54442d18,%ebx
		mov    $0xc00921fb,%ecx
		call   _07f5a8_func

	_085801_jump:
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)

	_085807_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_085814_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		push   %gs
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		test   %eax,%eax
		je     _08582d_jump
		cmp    $0xffffffd4,%eax
		jbe    _085834_jump

	_08582d_jump:
		xor    %eax,%eax
		jmp    _0858e8_jump

	_085834_jump:
		mov    $_0bd964_data,%ebp
		lea    0x000003(%esi),%edi
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ah,(%esp)
		and    $0x00fffc,%di

	_085847_jump:
		mov    %edi,%eax
		cmp    $0x00000c,%edi
		jae    _085853_jump
		mov    $0x00000c,%eax

	_085853_jump:
		cmp    _0bd96c_data,%eax
		jbe    _085873_jump
		mov    _0bd968_data,%ecx
		test   %ecx,%ecx
		jne    _0858ab_jump

	_085865_jump:
		mov    %ecx,_0bd96c_data
		mov    _0bd964_data,%ecx
		jmp    _0858ab_jump

	_085873_jump:
		xor    %ecx,%ecx
		jmp    _085865_jump

	_085877_jump:
		mov    %ds,%edx
		mov    %ebp,%eax
		mov    %ecx,_0bd968_data
		and    $0x00ffff,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _08992a_func
		mov    %eax,%edx
		test   %eax,%eax
		jne    _0858de_jump
		mov    _0bd96c_data,%ebx
		mov    0x000014(%ecx),%eax
		cmp    %ebx,%eax
		jbe    _0858a8_jump
		mov    %eax,_0bd96c_data

	_0858a8_jump:
		mov    0x000008(%ecx),%ecx

	_0858ab_jump:
		test   %ecx,%ecx
		jne    _085877_jump
		cmpb   $0x000000,(%esp)
		jne    _0858c0_jump
		mov    %esi,%eax
		call   _089ebc_func
		test   %eax,%eax
		jne    _0858d5_jump

	_0858c0_jump:
		mov    %esi,%eax
		call   _08a085_func
		test   %eax,%eax
		je     _0858de_jump
		xor    %cl,%cl
		mov    %cl,(%esp)
		jmp    _085847_jump

	_0858d5_jump:
		movb   $0x000001,(%esp)
		jmp    _085847_jump

	_0858de_jump:
		xor    %ch,%ch
		mov    %edx,%eax
		mov    %ch,_0e6f34_data

	_0858e8_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %gs
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0858f7_func:
		push   %ebx
		imul   %edx,%eax
		mov    %eax,%ebx
		call   _085814_func
		test   %eax,%eax
		je     _08590d_jump
		xor    %edx,%edx
		call   _07fcc0_func

	_08590d_jump:
		pop    %ebx
		ret    



_08590f_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    %eax,%esi
		test   %eax,%eax
		je     _08598b_jump
		mov    _0e6f1c_data,%ecx
		test   %ecx,%ecx
		je     _085931_jump
		cmp    %eax,%ecx
		ja     _085931_jump
		cmp    0x000008(%ecx),%eax
		jb     _08594b_jump

	_085931_jump:
		mov    _0bd964_data,%ecx
		jmp    _085944_jump

	_085939_jump:
		cmp    %esi,%ecx
		ja     _085941_jump
		cmp    %ebx,%esi
		jb     _08594b_jump

	_085941_jump:
		mov    0x000008(%ecx),%ecx

	_085944_jump:
		mov    0x000008(%ecx),%ebx
		test   %ebx,%ebx
		jne    _085939_jump

	_08594b_jump:
		mov    $_0bd964_data,%eax
		mov    %ds,%edx
		and    $0x00ffff,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _0899d2_func
		mov    _0bd968_data,%ebp
		mov    %ecx,_0e6f1c_data
		cmp    %ebp,%ecx
		jae    _085983_jump
		mov    _0bd96c_data,%eax
		mov    0x000014(%ecx),%edx
		cmp    %eax,%edx
		jbe    _085983_jump
		mov    %edx,_0bd96c_data

	_085983_jump:
		xor    %ah,%ah
		mov    %ah,_0e6f34_data

	_08598b_jump:
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_085992_jump:
		sub    %edx,%edx
		sub    %eax,%eax
		ret    

	_085997_jump:
		mov    $0x000083,%eax
		call   _08a112_func
		jmp    _0859b4_jump

	_0859a3_jump:
		push   %eax
		call   _086ebf_func
		mov    $0x000084,%eax
		call   _08a112_func
		pop    %eax

	_0859b4_jump:
		and    $0x80000000,%eax
		or     $0x7ff00000,%eax
		mov    %eax,%edx
		sub    %eax,%eax
		ret    



_0859eb_func:
		push   %ebx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    (%ebx),%edx
		call   _08092a_func
		incl   0x000010(%ebx)
		pop    %ebx
		ret    



_0859fc_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    0x00000c(%eax),%ebp
		mov    0x00000c(%eax),%ah
		mov    0x000008(%esi),%ecx
		and    $0x0000cf,%ah
		and    $0x000030,%ebp
		mov    %ah,0x00000c(%esi)
		test   %ecx,%ecx
		jne    _085a1f_jump
		mov    %esi,%eax
		call   _087774_func

	_085a1f_jump:
		mov    0x00000d(%esi),%cl
		xor    %edi,%edi
		test   $0x000004,%cl
		je     _085a3a_jump
		mov    %cl,%ch
		and    $0x0000fa,%ch
		mov    %ch,%al
		or     $0x000001,%al
		mov    $0x000001,%edi
		mov    %al,0x00000d(%esi)

	_085a3a_jump:
		mov    $_0859eb_func,%ecx
		mov    %esi,%eax
		call   _085e18_func
		mov    %eax,%edx
		test   %edi,%edi
		je     _085a61_jump
		mov    0x00000d(%esi),%ah
		and    $0x0000fa,%ah
		mov    %ah,%bl
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x00000d(%esi)
		call   _08780a_func

	_085a61_jump:
		testb  $0x000020,0x00000c(%esi)
		je     _085a6c_jump
		mov    $0xffffffff,%edx

	_085a6c_jump:
		mov    0x00000c(%esi),%edi
		or     %ebp,%edi
		mov    %edx,%eax
		mov    %edi,0x00000c(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_085a7b_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x00002c,%ah
		int    $0x000021
		xor    %eax,%eax
		mov    %dh,%al
		mov    %eax,%ebx

	_085a89_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		xor    %eax,%eax
		mov    %dh,%al
		cmp    %eax,%ebx
		je     _085a89_jump
		xor    %esi,%esi
		mov    %al,%bl

	_085a99_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		inc    %esi
		cmp    %dh,%bl
		je     _085a99_jump
		mov    %esi,_0e6f24_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_085aad_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		test   %eax,%eax
		je     _085ade_jump
		imul   _0e6f24_data,%eax
		mov    $0x0003e8,%ebx
		add    $0x0001f4,%eax
		xor    %edx,%edx
		div    %ebx
		test   %eax,%eax
		jne    _085acf_jump
		inc    %eax

	_085acf_jump:
		mov    %eax,%esi
		xor    %eax,%eax
		mov    %al,%bl

	_085ad5_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		cmp    %dh,%bl
		dec    %esi
		jne    _085ad5_jump

	_085ade_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_085ae3_func:
		test   %edx,%edx
		jne    _085aea_jump
		xor    %eax,%eax

	_085ae9_jump:
		ret    

	_085aea_jump:
		test   %edx,%edx
		je     _085ae9_jump



_085aee_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    %al,%dl
		xor    %eax,%eax
		mov    %bl,%al
		call   _086ed6_func
		cmp    $0x000100,%ebx
		jae    _085b48_jump
		xor    %eax,%eax
		mov    _0bdbd7_data,%al
		cmp    $0x000003,%eax
		jl     _085b2e_jump
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000050,%ebx
		jne    _085b1e_jump
		mov    $0x00000e,%dl
		jmp    _085b2e_jump

	_085b1e_jump:
		cmp    $0x000022,%ebx
		jl     _085b27_jump
		mov    $0x000013,%dl
		jmp    _085b2e_jump

	_085b27_jump:
		cmp    $0x000020,%ebx
		jl     _085b2e_jump
		mov    $0x000005,%dl

	_085b2e_jump:
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x000013,%eax
		jle    _085b39_jump
		mov    $0x000013,%dl

	_085b39_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    _0bdb85_data(%ebx),%eax
		sar    $0x000018,%eax
		jmp    _085b52_jump

	_085b48_jump:
		mov    %ebx,%eax
		shr    $0x000008,%eax
		and    $_0000ff_case,%eax

	_085b52_jump:
		call   _086eb3_func
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    



_085b5f_func:
		push   %edx
		push   %ebp
		mov    %esp,%ebp
		mov    _0bdbb8_data,%edx
		add    $0x000003,%edx
		and    $0x0000fc,%dl
		call   _0898d9_func
		cmp    %eax,%edx
		jae    _085b80_jump
		mov    %edx,%eax
		sub    %eax,%esp
		mov    %esp,%eax
		jmp    _085b82_jump

	_085b80_jump:
		xor    %eax,%eax

	_085b82_jump:
		mov    _0bdbb8_data,%edx
		add    %edx,%eax
		mov    %eax,_0bdbbc_data
		call   _08a119_func
		mov    _0e6f3c_data,%edx
		mov    _0e6f38_data,%eax
		call   _0180f8_func
		call   _07f91f_func
		mov    %ebp,%esp
		pop    %ebp
		pop    %edx
		ret    



_085bae_func:
		push   %esi
		push   %edi
		push   %ebx
		push   %edx
		push   %es
		mov    %eax,%edx

	_085bb5_jump:
		ds mov $_0c1b98_data,%esi
		ds mov $_0c1bc8_data,%edi
		mov    %edi,%ebx
		mov    %dl,%al

	_085bc5_jump:
		cmp    %edi,%esi
		jae    _085bdd_jump
		cmpb   $0x000002,(%esi)
		je     _085bd8_jump
		cmp    %al,0x000001(%esi)
		ja     _085bd8_jump
		mov    %esi,%ebx
		mov    0x000001(%esi),%al

	_085bd8_jump:
		add    $0x000006,%esi
		jmp    _085bc5_jump

	_085bdd_jump:
		cmp    %edi,%ebx
		je     _085bf3_jump
		mov    0x000002(%ebx),%eax
		or     %eax,%eax
		je     _085bee_jump
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx

	_085bee_jump:
		movb   $0x000002,(%ebx)
		jmp    _085bb5_jump

	_085bf3_jump:
		pop    %es
		pop    %edx
		pop    %ebx
		pop    %edi
		pop    %esi
		ret    



_085bf9_func:
		push   %esi
		push   %edi
		push   %ebx
		push   %es
		mov    %dl,%dh
		mov    %al,%dl

	_085c01_jump:
		ds mov $_0c1bc8_data,%esi
		ds mov $_0c1bce_data,%edi
		mov    %edi,%ebx
		mov    %dl,%al

	_085c11_jump:
		cmp    %edi,%esi
		jae    _085c29_jump
		cmpb   $0x000002,(%esi)
		je     _085c24_jump
		cmp    0x000001(%esi),%al
		ja     _085c24_jump
		mov    %esi,%ebx
		mov    0x000001(%esi),%al

	_085c24_jump:
		add    $0x000006,%esi
		jmp    _085c11_jump

	_085c29_jump:
		cmp    %edi,%ebx
		je     _085c43_jump
		cmp    %dh,%al
		ja     _085c3e_jump
		mov    0x000002(%ebx),%eax
		or     %eax,%eax
		je     _085c3e_jump
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx

	_085c3e_jump:
		movb   $0x000002,(%ebx)
		jmp    _085c01_jump

	_085c43_jump:
		pop    %es
		pop    %ebx
		pop    %edi
		pop    %esi
		ret    



_085c48_func:
		ret    



_085c49_func:
		push   %ebx
		push   %edx
		mov    $_08a124_func,%edx
		mov    $_08a28c_func,%ebx
		mov    %edx,_0bfd10_data
		mov    %ebx,_0bfd14_data
		pop    %edx
		pop    %ebx
		ret    



_085c64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %esp,%ebx
		mov    _0bdba4_data,%eax
		xor    %edx,%edx
		call   _085d25_func
		mov    (%esp),%ecx
		inc    %eax
		mov    _0bdba4_data,%edx
		mov    %eax,0x000008(%esp)
		sub    %edx,%ecx
		shl    $0x000002,%eax
		inc    %ecx
		mov    %eax,0x000004(%esp)
		add    $0x000004,%eax
		add    %ecx,%eax
		call   _085814_func
		mov    %eax,%ebp
		test   %eax,%eax
		je     _085cfe_jump
		mov    %esp,%ebx
		mov    _0bdba4_data,%esi
		add    %ecx,%eax
		mov    %ebp,%edi
		mov    %eax,_0bd95c_data
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    _0bd95c_data,%ecx
		mov    _0bdba8_data,%eax
		lea    0x000004(%ecx),%edx
		mov    %eax,(%ecx)
		mov    %ebp,%eax
		mov    0x000004(%esp),%esi
		call   _085d25_func
		mov    _0bd95c_data,%ecx
		mov    0x000008(%esp),%eax
		add    %esi,%ecx
		mov    %eax,_0bd958_data
		movl   $0x000000,(%ecx)
		jmp    _085d08_jump

	_085cfe_jump:
		mov    %eax,_0bd95c_data
		mov    %eax,_0bd958_data

	_085d08_jump:
		mov    0x000008(%esp),%eax
		mov    %eax,_0e6f38_data
		mov    _0bd95c_data,%eax
		mov    %eax,_0e6f3c_data
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_085d25_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %edx,%esi
		mov    %ebx,(%esp)
		xor    %edi,%edi

	_085d33_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000020,%edx
		je     _085d41_jump
		cmp    $0x000009,%edx
		jne    _085d44_jump

	_085d41_jump:
		inc    %eax
		jmp    _085d33_jump

	_085d44_jump:
		test   %dl,%dl
		je     _085e09_jump
		cmp    $0x000022,%edx
		jne    _085d94_jump
		inc    %eax
		mov    %eax,%ebp
		mov    %eax,%edx

	_085d56_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x000022,%ebx
		je     _085dcf_jump
		test   %bl,%bl
		je     _085dcf_jump
		cmp    $0x00005c,%ebx
		jne    _085d80_jump
		xor    %ebx,%ebx
		mov    0x000001(%eax),%bl
		cmp    $0x000022,%ebx
		je     _085d7f_jump
		cmp    $0x00005c,%ebx
		jne    _085d80_jump

	_085d7f_jump:
		inc    %eax

	_085d80_jump:
		lea    0x000001(%eax),%ebx
		test   %esi,%esi
		je     _085d90_jump
		mov    (%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		inc    %edx
		jmp    _085d56_jump

	_085d90_jump:
		mov    %ebx,%eax
		jmp    _085d56_jump

	_085d94_jump:
		mov    %eax,%ebp
		mov    %eax,%edx

	_085d98_jump:
		cmpb   $0x000000,(%eax)
		je     _085dcf_jump
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x000020,%ebx
		je     _085dcf_jump
		cmp    $0x000009,%ebx
		je     _085dcf_jump
		cmp    $0x00005c,%ebx
		jne    _085dbb_jump
		xor    %ebx,%ebx
		mov    0x000001(%eax),%bl
		cmp    $0x000022,%ebx
		jne    _085dbb_jump
		inc    %eax

	_085dbb_jump:
		lea    0x000001(%eax),%ebx
		test   %esi,%esi
		je     _085dcb_jump
		mov    (%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		inc    %edx
		jmp    _085d98_jump

	_085dcb_jump:
		mov    %ebx,%eax
		jmp    _085d98_jump

	_085dcf_jump:
		lea    0x000001(%eax),%ebx
		mov    %ebx,0x000004(%esp)
		lea    0x000001(%edi),%ebx
		test   %esi,%esi
		je     _085df8_jump
		mov    %ebp,(%esi,%edi,4)
		mov    %ebx,%edi
		mov    (%eax),%bl
		test   %bl,%bl
		jne    _085dec_jump
		mov    %bl,(%edx)
		jmp    _085e09_jump

	_085dec_jump:
		mov    0x000004(%esp),%eax
		movb   $0x000000,(%edx)
		jmp    _085d33_jump

	_085df8_jump:
		mov    (%eax),%ch
		mov    %ebx,%edi
		test   %ch,%ch
		je     _085e09_jump
		mov    0x000004(%esp),%eax
		jmp    _085d33_jump

	_085e09_jump:
		mov    (%esp),%edx
		mov    %eax,(%edx)
		mov    %edi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_085e18_func:
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x00004c,%esp
		mov    %ebx,%esi
		mov    %ecx,0x000044(%esp)
		xor    %bl,%bl
		mov    %eax,0x000028(%esp)
		mov    %bl,0x000048(%esp)
		mov    %bl,0x00003c(%esp)
		xor    %ebx,%ebx
		mov    %edx,%edi
		mov    %ebx,0x000038(%esp)
		mov    $0x000004,%ebp
		jmp    _085ebe_jump

	_085e45_jump:
		lea    0x000028(%esp),%ebx
		mov    %esi,%edx
		call   _0860f2_func
		mov    %eax,%edi
		mov    (%eax),%al
		inc    %edi
		mov    %al,0x00003d(%esp)
		test   %al,%al
		je     _0860e6_jump
		xor    %eax,%eax
		mov    0x00003d(%esp),%al
		cmp    $0x00006e,%eax
		jne    _085f7a_jump
		mov    0x00003c(%esp),%al
		xor    %edx,%edx
		and    $0x000020,%al
		mov    %al,%dl
		mov    0x00003c(%esp),%ah
		and    $0x000040,%ah
		mov    0x00003c(%esp),%al
		and    $0x000080,%al
		test   %edx,%edx
		je     _085eef_jump
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _085ea6_jump
		mov    (%esi),%ecx
		add    $0x000008,%ecx
		mov    %ecx,(%esi)
		les    -0x000008(%ecx),%edx

	_085e9d_jump:
		mov    0x000038(%esp),%eax
		mov    %eax,%es:(%edx)
		jmp    _085ebe_jump

	_085ea6_jump:
		mov    %ah,%al
		and    $_0000ff_case,%eax
		je     _085ee4_jump
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x000004(%ebx),%edx

	_085eb8_jump:
		mov    0x000038(%esp),%eax
		mov    %eax,(%edx)

	_085ebe_jump:
		mov    (%edi),%cl
		test   %cl,%cl
		je     _0860e6_jump
		xor    %edx,%edx
		mov    %cl,%dl
		lea    0x000001(%edi),%eax
		cmp    $0x000025,%edx
		je     _085e45_jump
		mov    %eax,%edi
		lea    0x000028(%esp),%eax
		call   *0x000044(%esp)
		jmp    _085ebe_jump

	_085ee4_jump:
		mov    (%esi),%edx
		add    %ebp,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		jmp    _085eb8_jump

	_085eef_jump:
		mov    0x00003c(%esp),%dl
		and    $0x000010,%dl
		and    $_0000ff_case,%edx
		je     _085f40_jump
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _085f1a_jump
		mov    (%esi),%eax
		add    $0x000008,%eax
		mov    %eax,(%esi)
		les    -0x000008(%eax),%edx
		mov    0x000038(%esp),%eax
		mov    %ax,%es:(%edx)
		jmp    _085ebe_jump

	_085f1a_jump:
		mov    %ah,%al
		and    $_0000ff_case,%eax
		je     _085f35_jump
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x000004(%ecx),%edx

	_085f2c_jump:
		mov    0x000038(%esp),%eax
		mov    %ax,(%edx)
		jmp    _085ebe_jump

	_085f35_jump:
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x000004(%ebx),%edx
		jmp    _085f2c_jump

	_085f40_jump:
		mov    %al,%dl
		test   %edx,%edx
		je     _085f55_jump
		mov    (%esi),%edx
		add    $0x000008,%edx
		mov    %edx,(%esi)
		les    -0x000008(%edx),%edx
		jmp    _085e9d_jump

	_085f55_jump:
		mov    %ah,%al
		and    $_0000ff_case,%eax
		je     _085f6c_jump
		mov    (%esi),%eax
		add    %ebp,%eax
		mov    %eax,(%esi)
		mov    -0x000004(%eax),%edx
		jmp    _085eb8_jump

	_085f6c_jump:
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x000004(%ecx),%edx
		jmp    _085eb8_jump

	_085f7a_jump:
		lea    0x000048(%esp),%ecx
		lea    0x000028(%esp),%ebx
		mov    %esp,%eax
		mov    %esi,%edx
		call   _086430_func
		mov    %eax,%ebx
		mov    0x00003c(%esp),%al
		mov    %edx,%es
		and    $0x000008,%al
		and    $_0000ff_case,%eax
		jne    _085fc2_jump
		mov    0x00003e(%esp),%al
		cmp    $0x000020,%eax
		jne    _085fc2_jump

	_085fa5_jump:
		mov    0x00002c(%esp),%eax
		dec    %eax
		mov    %eax,0x00002c(%esp)
		test   %eax,%eax
		jl     _085fc2_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    0x00003e(%esp),%dl
		call   *0x000044(%esp)
		jmp    _085fa5_jump

	_085fc2_jump:
		lea    0x00003f(%esp),%ecx

	_085fc6_jump:
		mov    (%ecx),%al
		test   %al,%al
		je     _085fdb_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000028(%esp),%eax
		inc    %ecx
		call   *0x000044(%esp)
		jmp    _085fc6_jump

	_085fdb_jump:
		mov    0x000034(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000034(%esp)
		test   %eax,%eax
		je     _085ff9_jump
		mov    $0x000030,%edx
		lea    0x000028(%esp),%eax
		call   *0x000044(%esp)
		jmp    _085fdb_jump

	_085ff9_jump:
		mov    0x00003c(%esp),%al
		and    $0x000008,%al
		and    $_0000ff_case,%eax
		jne    _08602c_jump
		mov    0x00003e(%esp),%al
		cmp    $0x000020,%eax
		je     _08602c_jump

	_08600f_jump:
		mov    0x00002c(%esp),%eax
		dec    %eax
		mov    %eax,0x00002c(%esp)
		test   %eax,%eax
		jl     _08602c_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    0x00003e(%esp),%dl
		call   *0x000044(%esp)
		jmp    _08600f_jump

	_08602c_jump:
		xor    %eax,%eax
		mov    0x00003d(%esp),%al
		cmp    $0x000073,%eax
		je     _08603c_jump
		cmp    $0x000053,%eax
		jne    _086089_jump

	_08603c_jump:
		mov    0x00003c(%esp),%al
		and    $0x000020,%al
		and    $_0000ff_case,%eax
		je     _08606a_jump

	_086049_jump:
		mov    0x000030(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000030(%esp)
		test   %eax,%eax
		je     _0860a8_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x000044(%esp)
		add    $0x000002,%ebx
		jmp    _086049_jump

	_08606a_jump:
		mov    0x000030(%esp),%eax
		lea    -0x000001(%eax),%edx
		mov    %edx,0x000030(%esp)
		test   %eax,%eax
		je     _0860a8_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x000044(%esp)
		inc    %ebx
		jmp    _08606a_jump

	_086089_jump:
		mov    0x000030(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000030(%esp)
		test   %eax,%eax
		je     _0860a8_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x000044(%esp)
		inc    %ebx
		jmp    _086089_jump

	_0860a8_jump:
		mov    0x00003c(%esp),%al
		and    $0x000008,%al
		and    $_0000ff_case,%eax
		je     _085ebe_jump
		cmpl   $0x000000,0x00002c(%esp)
		jle    _085ebe_jump

	_0860c4_jump:
		mov    0x00002c(%esp),%eax
		lea    -0x000001(%eax),%edx
		mov    %edx,0x00002c(%esp)
		test   %eax,%eax
		je     _085ebe_jump
		mov    $0x000020,%edx
		lea    0x000028(%esp),%eax
		call   *0x000044(%esp)
		jmp    _0860c4_jump

	_0860e6_jump:
		mov    0x000038(%esp),%eax
		add    $0x00004c,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret    



_0860f2_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		movb   $0x000000,0x000017(%ebx)
		mov    %ebx,%edx
		movb   $0x000020,0x000016(%ebx)
		call   _086230_func
		movl   $0x000000,0x000004(%ebx)
		mov    (%eax),%dl
		and    $_0000ff_case,%edx
		cmp    $0x000030,%edx
		jl     _086140_jump
		cmp    $0x000039,%edx
		jg     _086140_jump

	_08611f_jump:
		imul   $0x00000a,0x000004(%ebx),%ecx
		xor    %edx,%edx
		mov    (%eax),%dl
		sub    $0x000030,%edx
		inc    %eax
		add    %edx,%ecx
		xor    %edx,%edx
		mov    %ecx,0x000004(%ebx)
		mov    (%eax),%dl
		cmp    $0x000030,%edx
		jl     _08616b_jump
		cmp    $0x000039,%edx
		jle    _08611f_jump
		jmp    _08616b_jump

	_086140_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x00002a,%edx
		jne    _08616b_jump
		mov    (%esi),%edx
		add    $0x000004,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		mov    %edx,0x000004(%ebx)
		test   %edx,%edx
		jge    _08616a_jump
		mov    %edx,%edi
		mov    0x000014(%ebx),%dl
		neg    %edi
		or     $0x000008,%dl
		mov    %edi,0x000004(%ebx)
		mov    %dl,0x000014(%ebx)

	_08616a_jump:
		inc    %eax

	_08616b_jump:
		movl   $0xffffffff,0x000008(%ebx)
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x00002e,%edx
		jne    _0861c4_jump
		inc    %eax
		movl   $0x000000,0x000008(%ebx)
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x00002a,%edx
		jne    _0861a7_jump
		mov    (%esi),%edx
		add    $0x000004,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		mov    %edx,0x000008(%ebx)
		test   %edx,%edx
		jge    _0861a4_jump
		movl   $0xffffffff,0x000008(%ebx)

	_0861a4_jump:
		inc    %eax
		jmp    _0861c4_jump

	_0861a7_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000030,%edx
		jl     _0861c4_jump
		cmp    $0x000039,%edx
		jg     _0861c4_jump
		imul   $0x00000a,0x000008(%ebx),%ecx
		sub    $0x000030,%edx
		add    %edx,%ecx
		inc    %eax
		mov    %ecx,0x000008(%ebx)
		jmp    _0861a7_jump

	_0861c4_jump:
		mov    (%eax),%dl
		lea    0x000001(%eax),%ecx
		cmp    $0x00004e,%dl
		jb     _0861e9_jump
		jbe    _086226_jump
		cmp    $0x00006c,%dl
		jb     _0861e0_jump
		jbe    _0861f9_jump
		cmp    $0x000077,%dl
		je     _0861f9_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0861e0_jump:
		cmp    $0x000068,%dl
		je     _086207_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0861e9_jump:
		cmp    $0x000046,%dl
		jb     _08622c_jump
		jbe    _08621c_jump
		cmp    $0x00004c,%dl
		je     _08620d_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0861f9_jump:
		mov    0x000014(%ebx),%dh
		or     $0x000020,%dh
		inc    %eax

	_086200_jump:
		mov    %dh,0x000014(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_086207_jump:
		orb    $0x000010,0x000014(%ebx)
		jmp    _08622a_jump

	_08620d_jump:
		mov    0x000014(%ebx),%dl
		or     $0x000040,%dl
		mov    %ecx,%eax
		mov    %dl,0x000014(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_08621c_jump:
		mov    0x000014(%ebx),%dh
		or     $0x000080,%dh
		mov    %ecx,%eax
		jmp    _086200_jump

	_086226_jump:
		orb    $0x000040,0x000014(%ebx)

	_08622a_jump:
		mov    %ecx,%eax

	_08622c_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_086230_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		movb   $0x000000,0x000014(%edx)

	_086238_jump:
		xor    %eax,%eax
		mov    (%ebx),%al
		cmp    $0x00002d,%eax
		jne    _086247_jump
		orb    $0x000008,0x000014(%edx)
		jmp    _086287_jump

	_086247_jump:
		cmp    $0x000023,%eax
		jne    _086252_jump
		orb    $0x000001,0x000014(%edx)
		jmp    _086287_jump

	_086252_jump:
		cmp    $0x00002b,%eax
		jne    _086267_jump
		mov    0x000014(%edx),%cl
		or     $0x000004,%cl
		mov    %cl,%ch
		and    $0x0000fd,%ch
		mov    %ch,0x000014(%edx)
		jmp    _086287_jump

	_086267_jump:
		cmp    $0x000020,%eax
		jne    _08627e_jump
		mov    0x000014(%edx),%al
		and    $0x000004,%al
		and    $_0000ff_case,%eax
		jne    _086287_jump
		orb    $0x000002,0x000014(%edx)
		jmp    _086287_jump

	_08627e_jump:
		cmp    $0x000030,%eax
		jne    _08628a_jump
		movb   $0x000030,0x000016(%edx)

	_086287_jump:
		inc    %ebx
		jmp    _086238_jump

	_08628a_jump:
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_08628f_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %edx,%ecx
		mov    %ebx,%edi
		mov    %eax,%edx
		mov    %ecx,%es
		xor    %eax,%eax

	_08629d_jump:
		mov    %edx,%esi
		mov    %es:(%esi),%bl
		inc    %edx
		test   %bl,%bl
		je     _0862ae_jump
		cmp    %edi,%eax
		je     _0862ae_jump
		inc    %eax
		jmp    _08629d_jump

	_0862ae_jump:
		pop    %es
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0862b3_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %eax,%ecx
		mov    %ebx,%esi
		mov    %ecx,%ebx
		mov    %edx,%es
		xor    %eax,%eax

	_0862c1_jump:
		mov    %ebx,%ecx
		mov    %es:(%ecx),%di
		add    $0x000002,%ebx
		test   %di,%di
		je     _0862ae_jump
		cmp    %esi,%eax
		je     _0862ae_jump
		inc    %eax
		jmp    _0862c1_jump



_0862d6_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    $0x000010,%ebx
		mov    %ebp,%edi
		call   _080a4e_func
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    (%esp),%eax
		mov    %ebp,%esi
		dec    %eax
		lea    (%ecx,%ebp,1),%edx
		lea    (%eax,%ebp,1),%ebx
		jmp    _086313_jump

	_08630c_jump:
		dec    %edx
		mov    (%edx),%cl
		dec    %eax
		mov    %cl,(%ebx)
		dec    %ebx

	_086313_jump:
		cmp    %esi,%edx
		jne    _08630c_jump
		lea    (%eax,%ebp,1),%edx

	_08631a_jump:
		test   %eax,%eax
		jl     _086325_jump
		dec    %eax
		movb   $0x000030,(%edx)
		dec    %edx
		jmp    _08631a_jump

	_086325_jump:
		add    (%esp),%ebp
		movb   $0x000000,0x000000(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_086334_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%esi
		mov    %edx,(%esp)
		test   %edx,%edx
		jge    _086350_jump
		neg    %edx
		lea    0x000001(%eax),%ecx
		movb   $0x00002d,(%eax)
		mov    %edx,(%esp)

	_086350_jump:
		cmpl   $0xffffffff,0x000008(%esi)
		jne    _08635d_jump
		movl   $0x000004,0x000008(%esi)

	_08635d_jump:
		mov    $0x00000a,%ebx
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    0x000002(%esp),%ax
		call   _080a4e_func
		mov    %ecx,%ebx

	_086372_jump:
		mov    (%ecx),%ah
		lea    0x000001(%ecx),%edx
		test   %ah,%ah
		je     _08637f_jump
		mov    %edx,%ecx
		jmp    _086372_jump

	_08637f_jump:
		cmpl   $0x000000,0x000008(%esi)
		je     _0863b1_jump
		movb   $0x00002e,(%ecx)
		xor    %eax,%eax
		mov    %edx,%ecx
		jmp    _0863a9_jump

	_08638e_jump:
		xor    %edx,%edx
		mov    %dx,0x000002(%esp)
		mov    (%esp),%edi
		imul   $0x00000a,%edi,%edx
		mov    %edx,(%esp)
		mov    0x000002(%esp),%dl
		add    $0x000030,%dl
		inc    %eax
		mov    %dl,(%ecx)
		inc    %ecx

	_0863a9_jump:
		cmp    0x000008(%esi),%eax
		jl     _08638e_jump
		movb   $0x000000,(%ecx)

	_0863b1_jump:
		mov    (%esp),%eax
		xor    %al,%al
		and    $0x000080,%ah
		and    $0x00ffff,%eax
		je     _086422_jump

	_0863c4_jump:
		cmp    %ebx,%ecx
		jne    _086401_jump
		lea    0x000001(%ebx),%ecx
		movb   $0x000031,(%ebx)

	_0863ce_jump:
		xor    %edx,%edx
		mov    (%ecx),%dl
		lea    0x000001(%ecx),%eax
		cmp    $0x000030,%edx
		jne    _0863de_jump
		mov    %eax,%ecx
		jmp    _0863ce_jump

	_0863de_jump:
		cmp    $0x00002e,%edx
		jne    _0863f8_jump
		movb   $0x000030,(%ecx)
		lea    0x000001(%eax),%ecx
		movb   $0x00002e,(%eax)

	_0863ec_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		cmp    $0x000030,%eax
		jne    _0863f8_jump
		inc    %ecx
		jmp    _0863ec_jump

	_0863f8_jump:
		movb   $0x000030,(%ecx)
		inc    %ecx
		movb   $0x000000,(%ecx)
		jmp    _086422_jump

	_086401_jump:
		dec    %ecx
		xor    %eax,%eax
		mov    (%ecx),%al
		cmp    $0x00002e,%eax
		jne    _08640c_jump
		dec    %ecx

	_08640c_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		cmp    $0x000039,%eax
		je     _08641d_jump
		mov    %al,%dl
		inc    %dl
		mov    %dl,(%ecx)
		jmp    _086422_jump

	_08641d_jump:
		movb   $0x000030,(%ecx)
		jmp    _0863c4_jump

	_086422_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_086429_func:
		call   *_0bfd10_data
		ret    



_086430_func:
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    %ecx,0x000004(%esp)
		mov    %edx,%eax
		movl   $0x000001,(%esp)
		mov    %ds,%edx
		mov    %edi,%ecx
		mov    %edx,%es
		mov    0x000015(%ebx),%dl
		movl   $0x000000,0x00000c(%ebx)
		cmp    $0x000069,%dl
		jb     _086479_jump
		jbe    _0864ca_jump
		cmp    $0x000075,%dl
		jb     _086474_jump
		jbe    _086487_jump
		cmp    $0x000078,%dl

	_08646d_jump:
		je     _086487_jump
		jmp    _0864d4_jump

	_086474_jump:
		cmp    $0x00006f,%dl
		jmp    _08646d_jump

	_086479_jump:
		cmp    $0x000058,%dl
		jb     _0864d4_jump
		jbe    _086487_jump
		cmp    $0x000064,%dl
		je     _0864ca_jump
		jmp    _0864d4_jump

	_086487_jump:
		mov    0x000014(%esi),%dl
		and    $0x000020,%dl
		and    $_0000ff_case,%edx
		je     _0864a1_jump
		mov    (%eax),%edx
		add    $0x000004,%edx
		mov    %edx,(%eax)
		mov    -0x000004(%edx),%ebp
		jmp    _0864c6_jump

	_0864a1_jump:
		mov    0x000014(%esi),%dl
		and    $0x000010,%dl
		and    $_0000ff_case,%edx
		je     _0864bc_jump
		mov    (%eax),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%eax)
		movzwl -0x000004(%ebp),%ebp
		jmp    _0864c6_jump

	_0864bc_jump:
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    -0x000004(%ebx),%ebp

	_0864c6_jump:
		andb   $0x0000f9,0x000014(%esi)

	_0864ca_jump:
		cmpl   $0xffffffff,0x000008(%esi)
		je     _0864d4_jump
		movb   $0x000020,0x000016(%esi)

	_0864d4_jump:
		mov    0x000015(%esi),%dl
		mov    $0x00000a,%ebx
		cmp    $0x000065,%dl
		jb     _086541_jump
		jbe    _0865c1_jump
		cmp    $0x00006f,%dl
		jb     _086528_jump
		jbe    _0865d7_jump
		cmp    $0x000073,%dl
		jb     _08651a_jump
		jbe    _08666c_jump
		cmp    $0x000075,%dl
		jb     _08683e_jump
		jbe    _086758_jump
		cmp    $0x000078,%dl
		je     _086735_jump
		jmp    _08683e_jump

	_08651a_jump:
		cmp    $0x000070,%dl
		je     _08677b_jump
		jmp    _08683e_jump

	_086528_jump:
		cmp    $0x000067,%dl
		jb     _08658f_jump
		jbe    _0865c1_jump
		cmp    $0x000069,%dl
		je     _08661b_jump
		jmp    _08683e_jump

	_086541_jump:
		cmp    $0x000050,%dl
		jb     _086579_jump
		jbe    _08677b_jump
		cmp    $0x000058,%dl
		jb     _08656b_jump
		jbe    _086735_jump
		cmp    $0x000063,%dl
		jb     _08683e_jump
		jbe    _086812_jump
		jmp    _08661b_jump

	_08656b_jump:
		cmp    $0x000053,%dl
		je     _08666c_jump
		jmp    _08683e_jump

	_086579_jump:
		cmp    $0x000046,%dl
		jb     _08658a_jump
		jbe    _08658f_jump
		cmp    $0x000047,%dl

	_086583_jump:
		je     _0865c1_jump
		jmp    _08683e_jump

	_08658a_jump:
		cmp    $0x000045,%dl
		jmp    _086583_jump

	_08658f_jump:
		mov    0x000014(%esi),%dl
		and    $0x000010,%dl
		and    $_0000ff_case,%edx
		je     _0865c1_jump
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    %edi,%eax
		mov    -0x000004(%ebx),%edx
		mov    %esi,%ebx
		call   _086334_func
		mov    $0xffffffff,%ebx
		mov    %ds,%eax
		mov    %ds,%edx
		mov    %eax,%es
		mov    %edi,%eax
		mov    %edi,%ecx
		jmp    _086611_jump

	_0865c1_jump:
		mov    %esi,%ebx
		mov    %eax,%edx
		mov    %edi,%eax
		call   _086429_func
		mov    $0xffffffff,%ebx
		mov    %edx,%es
		mov    %eax,%ecx
		jmp    _086611_jump

	_0865d7_jump:
		mov    0x000014(%esi),%al
		mov    $0x000008,%ebx
		and    $0x000001,%al
		and    $_0000ff_case,%eax
		je     _0865ec_jump
		movb   $0x000030,(%edi)
		inc    %edi

	_0865ec_jump:
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _080ad8_func

	_0865f5_jump:
		cmpl   $0x000000,0x000008(%esi)
		jne    _086608_jump
		xor    %eax,%eax
		mov    (%edi),%al
		cmp    $0x000030,%eax
		jne    _086608_jump
		movb   $0x000000,%es:(%ecx)

	_086608_jump:
		mov    $0xffffffff,%ebx
		mov    %es,%edx
		mov    %ecx,%eax

	_086611_jump:
		call   _08628f_func
		jmp    _086867_jump

	_08661b_jump:
		mov    0x000014(%esi),%dl
		and    $0x000020,%dl
		and    $_0000ff_case,%edx
		je     _08663c_jump
		mov    (%eax),%edx
		add    $0x000004,%edx
		mov    %edx,(%eax)
		mov    -0x000004(%edx),%eax
		mov    %edi,%edx

	_086635_jump:
		call   _080ad8_func
		jmp    _0865f5_jump

	_08663c_jump:
		mov    0x000014(%esi),%dl
		and    $0x000010,%dl
		and    $_0000ff_case,%edx
		je     _086659_jump
		mov    (%eax),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%eax)
		mov    %edi,%edx
		movswl -0x000004(%ebp),%eax
		jmp    _086635_jump

	_086659_jump:
		mov    (%eax),%edx
		add    $0x000004,%edx
		mov    %edx,(%eax)
		mov    -0x000004(%edx),%eax
		mov    %edi,%edx
		call   _080a4e_func
		jmp    _0865f5_jump

	_08666c_jump:
		mov    0x000014(%esi),%dl
		and    $0x000080,%dl
		and    $_0000ff_case,%edx
		je     _08669d_jump
		mov    (%eax),%edi
		add    $0x000008,%edi
		mov    %edi,(%eax)
		mov    -0x000008(%edi),%ecx
		mov    -0x000004(%edi),%dx
		test   %ecx,%ecx
		jne    _086691_jump
		test   %dx,%dx
		je     _086695_jump

	_086691_jump:
		mov    %edx,%es
		jmp    _0866d3_jump

	_086695_jump:
		mov    %ds,%eax
		mov    0x000004(%esp),%ecx
		jmp    _0866d1_jump

	_08669d_jump:
		mov    0x000014(%esi),%dl
		and    $0x000040,%dl
		and    $_0000ff_case,%edx
		je     _0866bd_jump
		mov    (%eax),%ecx
		add    $0x000004,%ecx
		mov    %ecx,(%eax)
		mov    -0x000004(%ecx),%ecx
		test   %ecx,%ecx
		je     _086695_jump

	_0866b9_jump:
		mov    %ds,%eax
		jmp    _0866d1_jump

	_0866bd_jump:
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    -0x000004(%ebx),%ecx
		test   %ecx,%ecx
		jne    _0866b9_jump
		mov    %ds,%eax
		mov    0x000004(%esp),%ecx

	_0866d1_jump:
		mov    %eax,%es

	_0866d3_jump:
		mov    0x000014(%esi),%bl
		xor    %ebp,%ebp
		xor    %eax,%eax
		and    $0x0000f9,%bl
		mov    %ebp,(%esp)
		mov    0x000015(%esi),%al
		mov    %bl,0x000014(%esi)
		cmp    $0x000053,%eax
		jne    _08670d_jump
		mov    %bl,%al
		and    $0x000020,%al
		and    $_0000ff_case,%eax
		je     _086704_jump
		xor    %eax,%eax
		mov    %es:(%ecx),%ax
		add    $0x000002,%ecx
		jmp    _086867_jump

	_086704_jump:
		mov    %es:(%ecx),%al
		inc    %ecx
		jmp    _086867_jump

	_08670d_jump:
		mov    %bl,%al
		and    $0x000020,%al
		and    $_0000ff_case,%eax
		je     _086729_jump
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x000008(%esi),%ebx
		call   _0862b3_func
		jmp    _086867_jump

	_086729_jump:
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x000008(%esi),%ebx
		jmp    _086611_jump

	_086735_jump:
		mov    0x000014(%esi),%al
		and    $0x000001,%al
		and    $_0000ff_case,%eax
		je     _086753_jump
		test   %ebp,%ebp
		je     _086753_jump
		movb   $0x000030,0x000017(%esi)
		mov    0x000015(%esi),%al
		movb   $0x000000,0x000019(%esi)
		mov    %al,0x000018(%esi)

	_086753_jump:
		mov    $0x000010,%ebx

	_086758_jump:
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _080a8e_func
		xor    %eax,%eax
		mov    0x000015(%esi),%al
		cmp    $0x000058,%eax
		jne    _0865f5_jump
		mov    %edi,%eax
		call   _086919_func
		jmp    _0865f5_jump

	_08677b_jump:
		cmpl   $0x000000,0x000004(%esi)
		jne    _08679f_jump
		mov    0x000014(%esi),%dl
		and    $0x000080,%dl
		and    $_0000ff_case,%edx
		je     _086798_jump
		movl   $0x00000d,0x000004(%esi)
		jmp    _08679f_jump

	_086798_jump:
		movl   $0x000008,0x000004(%esi)

	_08679f_jump:
		andb   $0x0000f9,0x000014(%esi)
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    0x000014(%esi),%dl
		and    $0x000080,%dl
		mov    %dl,0x000008(%esp)
		xor    %edx,%edx
		mov    0x000008(%esp),%dl
		mov    -0x000004(%ebx),%ebp
		test   %edx,%edx
		je     _0867ea_jump
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    %edi,%edx
		mov    -0x000004(%ebx),%eax
		mov    $0x000004,%ebx
		and    $0x00ffff,%eax
		call   _0862d6_func
		mov    $0x000008,%ebx
		lea    0x000005(%edi),%edx
		mov    %ebp,%eax
		movb   $0x00003a,0x000004(%edi)
		jmp    _0867f3_jump

	_0867ea_jump:
		mov    $0x000008,%ebx
		mov    %edi,%edx
		mov    %ebp,%eax

	_0867f3_jump:
		call   _0862d6_func
		xor    %eax,%eax
		mov    0x000015(%esi),%al
		cmp    $0x000050,%eax
		jne    _086608_jump
		mov    %edi,%eax
		call   _086919_func
		jmp    _086608_jump

	_086812_jump:
		mov    (%eax),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%eax)
		mov    -0x000004(%ebp),%al
		movb   $0x000000,0x000001(%edi)
		mov    %al,(%edi)
		movl   $0x000001,0x000008(%esi)
		mov    0x000014(%esi),%dh
		xor    %eax,%eax
		and    $0x0000f9,%dh
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		mov    %dh,0x000014(%esi)
		jmp    _086867_jump

	_08683e_jump:
		movl   $0x000000,0x000004(%esi)
		mov    0x000015(%esi),%al
		movb   $0x000000,0x000001(%edi)
		mov    %al,(%edi)
		movl   $0x000001,0x000008(%esi)
		mov    0x000014(%esi),%al
		xor    %edi,%edi
		and    $0x0000f9,%al
		mov    %edi,(%esp)
		mov    %al,0x000014(%esi)
		mov    $0x000001,%eax

	_086867_jump:
		cmpl   $0x000000,(%esp)
		je     _0868bc_jump
		xor    %edx,%edx
		mov    %es:(%ecx),%dl
		cmp    $0x00002d,%edx
		jne    _08687f_jump
		inc    %ecx
		movb   $0x00002d,0x000017(%esi)
		dec    %eax
		jmp    _0868a5_jump

	_08687f_jump:
		mov    0x000014(%esi),%dl
		and    $0x000002,%dl
		and    $_0000ff_case,%edx
		je     _086893_jump
		movb   $0x000020,0x000017(%esi)
		jmp    _0868a5_jump

	_086893_jump:
		mov    0x000014(%esi),%dl
		and    $0x000004,%dl
		and    $_0000ff_case,%edx
		je     _0868a9_jump
		movb   $0x00002b,0x000017(%esi)

	_0868a5_jump:
		movb   $0x000000,0x000018(%esi)

	_0868a9_jump:
		mov    0x000008(%esi),%edx
		cmp    %edx,%eax
		jle    _0868b5_jump
		mov    %eax,0x000008(%esi)
		jmp    _0868bc_jump

	_0868b5_jump:
		mov    %edx,%ebx
		sub    %eax,%ebx
		mov    %ebx,0x00000c(%esi)

	_0868bc_jump:
		xor    %edx,%edx
		mov    0x000016(%esi),%dl
		cmp    $0x00002a,%edx
		jne    _0868d3_jump
		mov    0x000014(%esi),%dl
		movb   $0x000000,0x000017(%esi)
		and    $0x0000f9,%dl
		mov    %dl,0x000014(%esi)

	_0868d3_jump:
		mov    0x000008(%esi),%ebx
		cmp    $0xffffffff,%ebx
		je     _0868df_jump
		cmp    %ebx,%eax
		jge    _0868ec_jump

	_0868df_jump:
		xor    %edx,%edx
		mov    0x000015(%esi),%dl
		cmp    $0x000063,%edx
		je     _0868ec_jump
		mov    %eax,0x000008(%esi)

	_0868ec_jump:
		mov    $0xffffffff,%ebx
		lea    0x000017(%esi),%eax
		mov    %ds,%edx
		call   _08628f_func
		mov    0x000008(%esi),%ebp
		mov    0x00000c(%esi),%edx
		add    %ebp,%eax
		mov    0x000004(%esi),%ebx
		add    %edx,%eax
		mov    %es,%edx
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %ebx,0x000004(%esi)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret    



_086919_func:
		push   %edx
		mov    %eax,%edx

	_08691c_jump:
		cmpb   $0x000000,(%edx)
		je     _08692f_jump
		xor    %eax,%eax
		mov    (%edx),%al
		call   _08a2af_func
		mov    %al,(%edx)
		inc    %edx
		jmp    _08691c_jump

	_08692f_jump:
		pop    %edx
		ret    



_0869d4_func:
		push   %ebx
		mov    %edx,%ebx
		call   _0869de_func
		pop    %ebx
		ret    



_0869de_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		sub    $0x000020,%esp
		mov    %eax,%ecx
		mov    (%edx),%eax
		mov    %eax,-0x000020(%ebp)
		mov    0x000004(%edx),%eax
		mov    %eax,-0x00001c(%ebp)
		mov    (%ebx),%eax
		mov    %eax,-0x000018(%ebp)
		mov    0x000004(%ebx),%eax
		mov    %eax,-0x000014(%ebp)
		test   $0x000040,%cl
		je     _086a0a_jump
		mov    $0x000001,%esi
		jmp    _086a44_jump

	_086a0a_jump:
		test   $0x000080,%cl
		je     _086a16_jump
		mov    $0x000002,%esi
		jmp    _086a44_jump

	_086a16_jump:
		test   $0x000001,%ch
		je     _086a22_jump
		mov    $0x000003,%esi
		jmp    _086a44_jump

	_086a22_jump:
		test   $0x000008,%ch
		je     _086a2e_jump
		mov    $0x000004,%esi
		jmp    _086a44_jump

	_086a2e_jump:
		test   $0x000002,%ch
		je     _086a3a_jump
		mov    $0x000006,%esi
		jmp    _086a44_jump

	_086a3a_jump:
		test   $0x000004,%ch
		je     _086a44_jump
		mov    $0x000005,%esi

	_086a44_jump:
		mov    %ecx,%eax
		and    $0x00001f,%eax
		mov    _0bdbdc_data(,%eax,4),%eax
		mov    %esi,-0x000028(%ebp)
		mov    %eax,-0x000024(%ebp)
		test   $0x000010,%ch
		je     _086a73_jump
		mov    _0c1a50_data,%eax
		mov    _0c1a54_data,%edx
		call   _0802de_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		jmp    _086ab5_jump

	_086a73_jump:
		test   $0x000020,%ch
		je     _086a82_jump
		xor    %ecx,%ecx
		mov    %ecx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		jmp    _086ab5_jump

	_086a82_jump:
		test   $0x000040,%ch
		je     _086a96_jump
		xor    %edx,%edx
		mov    $0x3ff00000,%ebx
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		jmp    _086ab5_jump

	_086a96_jump:
		test   $0x000080,%ch
		je     _086aaa_jump
		mov    _0c1a50_data,%eax
		mov    %eax,-0x000010(%ebp)
		mov    _0c1a54_data,%eax
		jmp    _086ab2_jump

	_086aaa_jump:
		mov    (%ebx),%eax
		mov    %eax,-0x000010(%ebp)
		mov    0x000004(%ebx),%eax

	_086ab2_jump:
		mov    %eax,-0x00000c(%ebp)

	_086ab5_jump:
		lea    -0x000028(%ebp),%eax
		call   _08a30b_func
		lea    -0x000008(%ebp),%esp
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_086ac4_func:
		push   %ebx
		sub    $0x00000c,%esp
		mov    %esp,%ebx
		call   _086baf_func
		mov    %esp,%eax
		call   _086ae3_func
		mov    %esp,%eax
		call   _086c2f_func
		add    $0x00000c,%esp
		pop    %ebx
		ret    



_086ae2_func:
		ret    



_086ae3_func:
		push   %edi
		push   %esi
		push   %edx
		push   %ecx
		push   %ebx
		mov    0x000008(%eax),%cx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		or     %ebx,%ebx
		jne    _086b29_jump
		or     %edx,%edx
		jne    _086b1e_jump
		add    %cx,%cx
		je     _086ba9_jump

	_086b02_jump:
		movw   $0x00ffff,0x000008(%eax)
		movl   $0x000000,0x000004(%eax)
		movl   $0x000000,(%eax)

	_086b15_jump:
		orb    $0x0000c0,0x000007(%eax)
		jmp    _086ba9_jump

	_086b1e_jump:
		cmp    $0x007fff,%cx
		je     _086ba9_jump

	_086b29_jump:
		mov    %ecx,%edx
		and    $0x00007f,%dh
		cmp    $0x007fff,%dx
		je     _086b15_jump
		add    %cx,%cx
		jb     _086b15_jump
		shr    %cx
		je     _086b46_jump
		mov    0x000004(%eax),%edx
		add    %edx,%edx
		jae    _086b02_jump

	_086b46_jump:
		mov    0x000004(%eax),%edx
		sub    %edi,%edi
		push   %eax
		sub    $0x003fff,%cx
		sar    %cx
		jb     _086b5c_jump
		shr    %edx
		rcr    %ebx
		rcr    %edi

	_086b5c_jump:
		add    $0x003fff,%cx
		mov    %cx,0x000008(%eax)
		mov    %edx,%ecx
		mov    %ebx,%eax
		mov    %edx,%esi
		stc    
		rcr    %esi
		inc    %edx
		je     _086b8f_jump
		dec    %edx

	_086b72_jump:
		div    %esi
		dec    %esi
		cmp    %eax,%esi
		jbe    _086b84_jump
		inc    %esi
		add    %eax,%esi
		rcr    %esi
		mov    %ecx,%edx
		mov    %ebx,%eax
		jmp    _086b72_jump

	_086b84_jump:
		inc    %esi
		mov    %eax,%ecx
		mov    %edi,%eax
		div    %esi
		add    %ecx,%esi
		jmp    _086b98_jump

	_086b8f_jump:
		cmp    %esi,%eax
		je     _086ba1_jump
		xchg   %eax,%edx
		mov    %edi,%eax
		div    %esi

	_086b98_jump:
		sub    %edx,%edx
		stc    
		rcr    %esi
		rcr    %eax
		adc    %edx,%eax

	_086ba1_jump:
		adc    %esi,%edx
		pop    %esi
		mov    %eax,(%esi)
		mov    %edx,0x000004(%esi)

	_086ba9_jump:
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %esi
		pop    %edi
		ret    



_086baf_func:
		push   %ecx
		mov    %edx,%ecx
		shld   $0x00000b,%eax,%edx
		shl    $0x00000b,%eax
		sar    $0x000014,%ecx
		and    $0x0007ff,%cx
		je     _086bfa_jump
		cmp    $0x0007ff,%cx
		je     _086bd1_jump
		add    $0x003c00,%cx
		jmp    _086bf2_jump

	_086bd1_jump:
		mov    $0x007fff,%cx
		test   $0x7fffffff,%edx
		jne    _086bdf_jump
		or     %eax,%eax

	_086bdf_jump:
		je     _086bf2_jump
		push   %eax
		mov    $0x000001,%al
		mov    $0x000081,%ah
		call   _086ae2_func
		pop    %eax
		or     $0x40000000,%edx

	_086bf2_jump:
		or     $0x80000000,%edx
		jmp    _086c1f_jump

	_086bfa_jump:
		or     %edx,%edx
		jne    _086c06_jump
		or     %eax,%eax
		jne    _086c06_jump
		sub    %ecx,%ecx
		jmp    _086c1f_jump

	_086c06_jump:
		mov    $0x003c01,%cx
		or     %edx,%edx
		jne    _086c13_jump
		xchg   %eax,%edx
		sub    $0x000020,%cx

	_086c13_jump:
		or     %edx,%edx
		js     _086c1f_jump
		add    %eax,%eax
		adc    %edx,%edx
		dec    %cx
		jmp    _086c13_jump

	_086c1f_jump:
		mov    %eax,(%ebx)
		mov    %edx,0x000004(%ebx)
		add    %ecx,%ecx
		rcr    %cx
		mov    %cx,0x000008(%ebx)
		pop    %ecx
		ret    



_086c2f_func:
		push   %ecx
		push   %ebx
		push   %esi
		mov    0x000008(%eax),%cx
		mov    0x000004(%eax),%edx
		mov    (%eax),%eax
		mov    $0xfffff800,%esi
		mov    %eax,%ebx
		shl    $0x000016,%ebx
		jae    _086c5c_jump
		jne    _086c4b_jump
		add    %esi,%esi

	_086c4b_jump:
		add    $0x000800,%eax
		adc    $0x000000,%edx
		jae    _086c5c_jump
		mov    $0x80000000,%edx
		inc    %cx

	_086c5c_jump:
		and    %esi,%eax
		mov    %ecx,%ebx
		and    $0x007fff,%cx
		add    $0x00c400,%cx
		cmp    $0x0007ff,%cx
		jae    _086c92_jump
		or     %cx,%cx
		jne    _086c81_jump
		shrd   $0x00000c,%edx,%eax
		add    %edx,%edx
		shr    $0x00000c,%edx
		jmp    _086c8b_jump

	_086c81_jump:
		shrd   $0x00000b,%edx,%eax
		add    %edx,%edx
		shrd   $0x00000b,%ecx,%edx

	_086c8b_jump:
		add    %bx,%bx
		rcr    %edx
		jmp    _086cf2_jump

	_086c92_jump:
		cmp    $0x00c400,%cx
		jb     _086ccc_jump
		cmp    $0x00ffcc,%cx
		jl     _086cc6_jump
		sub    $0x00000c,%cx
		neg    %cx
		cmp    $0x000020,%cl
		jb     _086cb4_jump
		sub    $0x000020,%cl
		mov    %eax,%esi
		mov    %edx,%eax
		sub    %edx,%edx

	_086cb4_jump:
		shrd   %cl,%eax,%esi
		shrd   %cl,%edx,%eax
		shr    %cl,%edx
		add    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		jmp    _086cca_jump

	_086cc6_jump:
		sub    %eax,%eax
		sub    %edx,%edx

	_086cca_jump:
		jmp    _086cf2_jump

	_086ccc_jump:
		shrd   $0x00000b,%edx,%eax
		add    %edx,%edx
		shr    $0x00000b,%edx
		add    %bx,%bx
		rcr    %edx
		or     $0x7ff00000,%edx
		cmp    $0x0043ff,%cx
		je     _086cf2_jump
		push   %eax
		mov    $0x000008,%al
		mov    $0x000084,%ah
		call   _086ae2_func
		pop    %eax

	_086cf2_jump:
		pop    %esi
		pop    %ebx
		pop    %ecx
		ret    



_086cf6_func:
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    %ecx,(%esp)
		mov    %edx,0x000004(%esp)
		xor    %eax,%eax
		test   %edx,%edx
		je     _086d3b_jump
		mov    0x000006(%esp),%eax
		and    $0x007ff0,%eax
		mov    0x000006(%esp),%edx
		and    $0x00ffff,%eax
		and    $0x00800f,%edx
		sar    $0x000004,%eax
		mov    %edx,%ecx
		mov    %dx,0x000006(%esp)
		or     $0x003fe0,%ecx
		sub    $0x0003fe,%eax
		mov    %cx,0x000006(%esp)

	_086d3b_jump:
		mov    0x000004(%esp),%edx
		mov    %eax,(%ebx)
		mov    (%esp),%eax
		add    $0x000008,%esp
		pop    %ecx
		ret    



_086d4a_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %ecx
		push   %ebx
		push   %eax
		mov    0x000008(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		mov    0x000010(%ebp),%ebx
		mov    0x000014(%ebp),%ecx
		or     %ecx,%ecx
		jne    _086d76_jump
		sub    %eax,%eax
		mov    0x000018(%ebp),%ebx
		mov    %eax,(%ebx)
		mov    0x00001c(%ebp),%ebx
		mov    %eax,(%ebx)
		mov    %eax,0x000004(%ebx)
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %ebp
		ret    

	_086d76_jump:
		push   %esi
		push   %edi
		push   %edx
		push   %ecx
		mov    %edx,%esi
		mov    %ecx,%edi
		and    $0x7ff00000,%esi
		and    $0x7ff00000,%edi
		and    $0x0fffff,%edx
		and    $0x0fffff,%ecx
		or     $0x100000,%edx
		or     $0x100000,%ecx
		sub    %edi,%esi
		jl     _086e0e_jump
		sub    %edi,%edi

	_086da8_jump:
		cmp    %edx,%ecx
		jne    _086db0_jump
		cmp    %eax,%ebx
		je     _086db2_jump

	_086db0_jump:
		jae    _086db7_jump

	_086db2_jump:
		sub    %ebx,%eax
		sbb    %ecx,%edx
		stc    

	_086db7_jump:
		adc    %edi,%edi
		sub    $0x100000,%esi
		jl     _086dd8_jump
		add    %eax,%eax
		adc    %edx,%edx
		cmp    $0x200000,%edx
		jae    _086db2_jump
		cmp    $0x100000,%edx
		jae    _086da8_jump
		cmc    
		jmp    _086db7_jump

	_086dd8_jump:
		sub    %esi,%esi
		or     %eax,%eax
		jne    _086de4_jump
		or     %edx,%edx
		jne    _086de4_jump
		jmp    _086e0c_jump

	_086de4_jump:
		test   $0x200000,%edx
		jne    _086df8_jump
		adc    %eax,%eax
		adc    %edx,%edx
		sub    $0x100000,%esi
		jmp    _086de4_jump

	_086df8_jump:
		shr    %edx
		rcr    %eax
		add    $0x100000,%esi
		pop    %ecx
		push   %ecx
		and    $0x7ff00000,%ecx
		add    %ecx,%esi

	_086e0c_jump:
		jmp    _086e12_jump

	_086e0e_jump:
		add    %edi,%esi
		sub    %edi,%edi

	_086e12_jump:
		and    $0x0fffff,%edx
		add    %esi,%edx
		pop    %ecx
		pop    %esi
		and    $0x80000000,%esi
		or     %edx,%edx
		je     _086e28_jump
		or     %esi,%edx

	_086e28_jump:
		xor    %ecx,%esi
		jns    _086e2e_jump
		neg    %edi

	_086e2e_jump:
		mov    0x000018(%ebp),%esi
		mov    %edi,(%esi)
		mov    0x00001c(%ebp),%esi
		mov    %eax,(%esi)
		mov    %edx,0x000004(%esi)
		pop    %edi
		pop    %esi
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %ebp
		ret    



_086e43_func:
		push   %esi
		push   %edi
		push   %ebp
		push   %eax
		mov    %edx,%ebp
		mov    %ebx,%esi
		mov    %ecx,%edi
		lea    0x000008(%ebx),%esi
		mov    (%ebx),%eax
		mov    0x000004(%ebx),%edx

	_086e55_jump:
		mov    (%esp),%ebx
		mov    %ebp,%ecx
		call   _07f75f_func
		mov    %esi,%ecx
		mov    (%ecx),%ebx
		mov    0x000004(%ecx),%ecx
		add    $0x000008,%esi
		call   _07f5a8_func
		dec    %edi
		jne    _086e55_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_086e78_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07f75f_func
		mov    -0x00000c(%ebp),%ecx
		mov    -0x000010(%ebp),%ebx
		call   _086e43_func
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07f75f_func
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_086eae_func:
		mov    $0x00000d,%eax



_086eb3_func:
		push   %edx
		mov    %eax,%edx
		call   _087968_func
		mov    %edx,(%eax)
		pop    %edx
		ret    



_086ebf_func:
		mov    $0x00000e,%eax
		jmp    _086eb3_func



_086ed6_func:
		push   %edx
		mov    %eax,%edx
		call   _08796e_func
		mov    %edx,(%eax)
		pop    %edx
		ret    

.data

_086ee2_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f"

.text



_086eec_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		mov    $0x000002,%al
		jmp    _086efc_jump



_086ef5_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		mov    $0x000000,%al

	_086efc_jump:
		mov    %al,%dl
		fldt   %cs:_086ee2_data
		fldl   -0x000008(%ebp)
		ftst   
		fnstsw %ax
		and    $0x004100,%ax
		cmp    $0x000100,%ax
		jne    _086f1f_jump
		fchs   
		cmp    $0x000000,%dl
		jne    _086f1f_jump
		mov    $0x000004,%dl

	_086f1f_jump:
		fprem  
		fnstsw %ax
		test   $0x000400,%ax
		jne    _086f1f_jump
		mov    $0x000000,%al
		test   $0x000002,%ah
		je     _086f36_jump
		or     $0x000001,%al
		fsub   %st(1),%st
		fchs   

	_086f36_jump:
		test   $0x000040,%ah
		je     _086f3d_jump
		or     $0x000002,%al

	_086f3d_jump:
		test   $0x000001,%ah
		je     _086f44_jump
		add    $0x000004,%al

	_086f44_jump:
		fstp   %st(1)
		fptan  
		fld    %st(0)
		fmul   %st(0),%st
		fld    %st(2)
		fmul   %st(0),%st
		faddp  %st,%st(1)
		fsqrt  
		add    %dl,%al
		and    $0x000007,%al
		cmp    $0x000004,%al
		jl     _086f5e_jump
		fchs   

	_086f5e_jump:
		and    $0x000003,%al
		cmp    $0x000000,%al
		je     _086f66_jump
		cmp    $0x000003,%al

	_086f66_jump:
		jne    _086f83_jump
		fstp   %st(1)
		testb  $0x000001,_0bdc3c_data
		jne    _086f77_jump
		fdivrp %st,%st(1)
		jmp    _086f81_jump

	_086f77_jump:
		mov    $0x00000d,%eax
		call   _08716f_func

	_086f81_jump:
		jmp    _086f9c_jump

	_086f83_jump:
		testb  $0x000001,_0bdc3c_data
		jne    _086f90_jump
		fdivrp %st,%st(1)
		jmp    _086f9a_jump

	_086f90_jump:
		mov    $0x00000d,%eax
		call   _08716f_func

	_086f9a_jump:
		fstp   %st(1)

	_086f9c_jump:
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    

.data

_086fa4_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xff\x3f"

_086fae_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f\x55\x89\xe5\x52\x50\xd9"
		.ascii  "\xeb\xb2\x00\xb6\x00\xdd\x45\xf8"
		.ascii  "\xd9\xe4\xdf\xe0\x9e\x73\x04\xd9"
		.ascii  "\xe0\xf6\xd6\xd9\xf8\xdf\xe0\x9e"
		.ascii  "\x7a\xf9\x2e\xdb\x2d"
		.long   _086fa4_data
		.ascii  "\xdd\xda\xd8\xd1\xdf\xe0\x9e\x76"
		.ascii  "\x06\xd8\xe1\xf6\xd2\xf6\xd6\x2e"
		.ascii  "\xdb\x2d"
		.long   _086fae_func
		.ascii  "\xd8\xd9\xdf\xe0\x9e\x73\x04\xd8"
		.ascii  "\xe9\xf6\xd2\xdd\xd9\xf6\x05"
		.long   _0bdc3c_data
		.ascii  "\x01\x75\x04\xd9\xf2\xeb\x05"

.text



_087058_func:
		fldt   0x000010(%esp)
		fldt   0x000004(%esp)

	_087060_jump:
		mov    0x000008(%esp),%eax
		add    %eax,%eax
		jae    _0870f2_jump
		xor    $0xe000000,%eax
		test   $0xe000000,%eax
		je     _08707b_jump
		fdivrp %st,%st(1)
		ret    

	_08707b_jump:
		shr    $0x00001c,%eax
		cmpb   $0x000000,_0c1bd0_data(%eax)
		jne    _08708a_jump
		fdivrp %st,%st(1)
		ret    

	_08708a_jump:
		mov    0x00000c(%esp),%eax
		and    $0x007fff,%eax
		je     _0870fc_jump
		cmp    $0x007fff,%eax
		je     _0870fc_jump
		fnstcw 0x00001c(%esp)
		mov    0x00001c(%esp),%eax
		or     $0x00033f,%eax
		and    $0x00f3ff,%eax
		mov    %eax,0x000020(%esp)
		fldcw  0x000020(%esp)
		mov    0x000018(%esp),%eax
		and    $0x007fff,%eax
		cmp    $0x000001,%eax
		je     _0870db_jump
		fmuls  _0c1be0_data
		fxch   %st(1)
		fmuls  _0c1be0_data
		fxch   %st(1)
		fldcw  0x00001c(%esp)
		fdivrp %st,%st(1)
		ret    

	_0870db_jump:
		fmuls  _0c1be4_data
		fxch   %st(1)
		fmuls  _0c1be4_data
		fxch   %st(1)
		fldcw  0x00001c(%esp)
		fdivrp %st,%st(1)
		ret    

	_0870f2_jump:
		mov    0x000004(%esp),%eax
		or     0x000008(%esp),%eax
		jne    _0870ff_jump

	_0870fc_jump:
		fdivrp %st,%st(1)
		ret    

	_0870ff_jump:
		mov    0x00000c(%esp),%eax
		and    $0x007fff,%eax
		jne    _0870fc_jump
		fnstcw 0x00001c(%esp)
		mov    0x00001c(%esp),%eax
		or     $0x00033f,%eax
		and    $0x00f3ff,%eax
		mov    %eax,0x000020(%esp)
		fldcw  0x000020(%esp)
		mov    0x000018(%esp),%eax
		and    $0x007fff,%eax
		je     _087140_jump
		cmp    $0x007fff,%eax
		je     _087168_jump
		mov    0x000014(%esp),%eax
		add    %eax,%eax
		jae    _087168_jump
		jmp    _087148_jump

	_087140_jump:
		mov    0x000014(%esp),%eax
		add    %eax,%eax
		jb     _087168_jump

	_087148_jump:
		fxch   %st(1)
		fstp   %st(0)
		fld    %st(0)
		fmuls  _0c1be8_data
		fstpt  0x000004(%esp)
		fldt   0x000010(%esp)
		fxch   %st(1)
		fldcw  0x00001c(%esp)
		jmp    _087060_jump

	_087168_jump:
		fldcw  0x00001c(%esp)
		fdivrp %st,%st(1)
		ret    



_08716f_func:
		sub    $0x00002c,%esp
		jmp    *_0c1bec_data(,%eax,4)



_087179_func:
		fdiv   %st(0),%st
		add    $0x00002c,%esp
		ret    



_08717f_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087184_jump:
		fdivr  %st(0),%st
		add    $0x00002c,%esp
		ret    



_08718a_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08718f_jump:
		fdiv   %st(0),%st
		add    $0x00002c,%esp
		ret    



_087195_func:
		fdivrp %st,%st(0)
		add    $0x00002c,%esp
		ret    



_08719b_func:
		fdivr  %st(0),%st
		add    $0x00002c,%esp
		ret    



_0871a1_func:
		fdivp  %st,%st(0)
		add    $0x00002c,%esp
		ret    



_0871a7_func:
		fstpt  0x00000c(%esp)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087058_func
		fldt   0x000020(%esp)
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_0871c3_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0871c8_jump:
		fstpt  (%esp)
		fstpt  0x00000c(%esp)
		call   _087058_func
		fldt   0x00000c(%esp)
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_0871de_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0871e3_jump:
		fxch   %st(1)
		fstpt  0x00000c(%esp)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087058_func
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_0871ff_func:
		fstpt  (%esp)
		fstpt  0x00000c(%esp)
		call   _087058_func
		add    $0x00002c,%esp
		ret    



_08720f_func:
		fstpt  0x00000c(%esp)
		fstpt  (%esp)
		call   _087058_func
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_087223_func:
		fstpt  0x00000c(%esp)
		fstpt  (%esp)
		call   _087058_func
		add    $0x00002c,%esp
		ret    



_087233_func:
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087058_func
		fxch   %st(1)
		fldt   0x000020(%esp)
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_087253_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087258_jump:
		fstpt  (%esp)
		fxch   %st(1)
		fstpt  0x00000c(%esp)
		call   _087058_func
		fxch   %st(1)
		fldt   0x00000c(%esp)
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_087272_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087277_jump:
		fxch   %st(2)
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087058_func
		fxch   %st(1)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_087297_func:
		fstpt  (%esp)
		fxch   %st(1)
		fstpt  0x00000c(%esp)
		call   _087058_func
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_0872ab_func:
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fstpt  (%esp)
		call   _087058_func
		fxch   %st(1)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_0872c3_func:
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fstpt  (%esp)
		call   _087058_func
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_0872d7_func:
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087058_func
		fxch   %st(2)
		fldt   0x000020(%esp)
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_0872f7_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0872fc_jump:
		fstpt  (%esp)
		fxch   %st(2)
		fstpt  0x00000c(%esp)
		call   _087058_func
		fxch   %st(2)
		fldt   0x00000c(%esp)
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_087316_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08731b_jump:
		fxch   %st(3)
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087058_func
		fxch   %st(2)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_08733b_func:
		fstpt  (%esp)
		fxch   %st(2)
		fstpt  0x00000c(%esp)
		call   _087058_func
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_08734f_func:
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fstpt  (%esp)
		call   _087058_func
		fxch   %st(2)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_087367_func:
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fstpt  (%esp)
		call   _087058_func
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_08737b_func:
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087058_func
		fxch   %st(3)
		fldt   0x000020(%esp)
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_08739b_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0873a0_jump:
		fstpt  (%esp)
		fxch   %st(3)
		fstpt  0x00000c(%esp)
		call   _087058_func
		fxch   %st(3)
		fldt   0x00000c(%esp)
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_0873ba_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0873bf_jump:
		fxch   %st(4)
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087058_func
		fxch   %st(3)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_0873df_func:
		fstpt  (%esp)
		fxch   %st(3)
		fstpt  0x00000c(%esp)
		call   _087058_func
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_0873f3_func:
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fstpt  (%esp)
		call   _087058_func
		fxch   %st(3)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_08740b_func:
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fstpt  (%esp)
		call   _087058_func
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_08741f_func:
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087058_func
		fxch   %st(4)
		fldt   0x000020(%esp)
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_08743f_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087444_jump:
		fstpt  (%esp)
		fxch   %st(4)
		fstpt  0x00000c(%esp)
		call   _087058_func
		fxch   %st(4)
		fldt   0x00000c(%esp)
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_08745e_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087463_jump:
		fxch   %st(5)
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087058_func
		fxch   %st(4)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_087483_func:
		fstpt  (%esp)
		fxch   %st(4)
		fstpt  0x00000c(%esp)
		call   _087058_func
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_087497_func:
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fstpt  (%esp)
		call   _087058_func
		fxch   %st(4)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_0874af_func:
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fstpt  (%esp)
		call   _087058_func
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_0874c3_func:
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087058_func
		fxch   %st(5)
		fldt   0x000020(%esp)
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_0874e3_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0874e8_jump:
		fstpt  (%esp)
		fxch   %st(5)
		fstpt  0x00000c(%esp)
		call   _087058_func
		fxch   %st(5)
		fldt   0x00000c(%esp)
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_087502_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087507_jump:
		fxch   %st(6)
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087058_func
		fxch   %st(5)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_087527_func:
		fstpt  (%esp)
		fxch   %st(5)
		fstpt  0x00000c(%esp)
		call   _087058_func
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_08753b_func:
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fstpt  (%esp)
		call   _087058_func
		fxch   %st(5)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_087553_func:
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fstpt  (%esp)
		call   _087058_func
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_087567_func:
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087058_func
		fxch   %st(6)
		fldt   0x000020(%esp)
		fxch   %st(7)
		add    $0x00002c,%esp
		ret    



_087587_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08758c_jump:
		fstpt  (%esp)
		fxch   %st(6)
		fstpt  0x00000c(%esp)
		call   _087058_func
		fxch   %st(6)
		fldt   0x00000c(%esp)
		fxch   %st(7)
		add    $0x00002c,%esp
		ret    



_0875a6_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0875ab_jump:
		fxch   %st(7)
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087058_func
		fxch   %st(6)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_0875cb_func:
		fstpt  (%esp)
		fxch   %st(6)
		fstpt  0x00000c(%esp)
		call   _087058_func
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_0875df_func:
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fstpt  (%esp)
		call   _087058_func
		fxch   %st(6)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_0875f7_func:
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fstpt  (%esp)
		call   _087058_func
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_08760b_func:
		sub    $0x00002c,%esp
		fstpt  (%esp)
		fstpt  0x00000c(%esp)
		call   _087058_func
		add    $0x00002c,%esp
		ret    



_087690_func:
		push   %eax
		mov    0x00000c(%esp),%eax
		and    $0x7ff00000,%eax
		cmp    $0x7ff00000,%eax
		je     _0876d4_jump
		fnstsw %ax
		and    $0x003800,%eax
		je     _0876b7_jump
		fldl   0x000008(%esp)
		call   _08760b_func
		pop    %eax
		ret    $0x000008

	_0876b7_jump:
		fxch   %st(1)
		sub    $0x00000c,%esp
		fstpt  (%esp)
		fldl   0x000014(%esp)
		call   _08760b_func
		fldt   (%esp)
		fxch   %st(1)
		add    $0x00000c,%esp
		pop    %eax
		ret    $0x000008

	_0876d4_jump:
		fdivl  0x000008(%esp)
		pop    %eax
		ret    $0x000008



_087774_func:
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _087bb5_func
		cmpl   $0x000000,0x000014(%edx)
		jne    _0877a9_jump
		mov    0x00000d(%edx),%ah
		test   $0x000002,%ah
		je     _087794_jump
		movl   $0x000086,0x000014(%edx)
		jmp    _0877a9_jump

	_087794_jump:
		test   $0x000004,%ah
		je     _0877a2_jump
		movl   $0x000001,0x000014(%edx)
		jmp    _0877a9_jump

	_0877a2_jump:
		movl   $0x001000,0x000014(%edx)

	_0877a9_jump:
		mov    0x000014(%edx),%eax
		call   _085814_func
		mov    %eax,0x000008(%edx)
		test   %eax,%eax
		jne    _0877d8_jump
		mov    0x00000d(%edx),%cl
		movl   $0x000001,0x000014(%edx)
		and    $0x0000f8,%cl
		lea    0x000018(%edx),%eax
		mov    %cl,0x00000d(%edx)
		mov    %cl,%ch
		mov    %eax,0x000008(%edx)
		or     $0x000004,%ch
		mov    %ch,0x00000d(%edx)
		jmp    _0877dc_jump

	_0877d8_jump:
		orb    $0x000008,0x00000c(%edx)

	_0877dc_jump:
		mov    0x000008(%edx),%eax
		movl   $0x000000,0x000004(%edx)
		mov    %eax,(%edx)
		pop    %edx
		pop    %ecx
		ret    



_0877eb_func:
		push   %ecx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _087808_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _085aee_func

	_087808_jump:
		pop    %ecx
		ret    



_08780a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    0x00000d(%eax),%ah
		xor    %ebp,%ebp
		test   $0x000010,%ah
		je     _087896_jump
		mov    0x00000d(%ecx),%bh
		and    $0x0000ef,%bh
		mov    0x00000c(%ecx),%al
		mov    %bh,0x00000d(%ecx)
		test   $0x000002,%al
		je     _0878ce_jump
		mov    0x000008(%ecx),%ebx
		test   %ebx,%ebx
		je     _0878ce_jump
		mov    %ebx,%edi
		mov    0x000004(%ecx),%esi

	_087844_jump:
		test   %esi,%esi
		je     _0878ce_jump
		test   %ebp,%ebp
		jne    _0878ce_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    0x000010(%ecx),%eax
		call   _0878f4_func
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		jne    _087874_jump
		mov    0x00000c(%ecx),%bl
		or     $0x000020,%bl
		mov    %eax,%ebp
		mov    %bl,0x00000c(%ecx)
		jmp    _087890_jump

	_087874_jump:
		test   %eax,%eax
		jne    _087890_jump
		mov    $0x00000c,%eax
		call   _086eb3_func
		mov    0x00000c(%ecx),%ah
		or     $0x000020,%ah
		mov    $0xffffffff,%ebp
		mov    %ah,0x00000c(%ecx)

	_087890_jump:
		add    %edx,%edi
		sub    %edx,%esi
		jmp    _087844_jump

	_087896_jump:
		cmpl   $0x000000,0x000008(%ecx)
		je     _0878ce_jump
		andb   $0x0000ef,0x00000c(%ecx)
		testb  $0x000020,0x00000d(%ecx)
		jne    _0878ce_jump
		mov    0x000004(%ecx),%eax
		test   %eax,%eax
		je     _0878be_jump
		mov    %eax,%edx
		mov    $0x000001,%ebx
		neg    %edx
		mov    0x000010(%ecx),%eax
		call   _080e86_func

	_0878be_jump:
		cmp    $0xffffffff,%eax
		jne    _0878ce_jump
		mov    0x00000c(%ecx),%bl
		or     $0x000020,%bl
		mov    %eax,%ebp
		mov    %bl,0x00000c(%ecx)

	_0878ce_jump:
		mov    0x000008(%ecx),%eax
		movl   $0x000000,0x000004(%ecx)
		mov    %eax,(%ecx)
		mov    %ebp,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0878e3_func:
		push   %ebx
		push   %edx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _080e86_func
		pop    %edx
		pop    %ebx
		ret    



_0878f4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,%edi
		call   _0879f7_func
		test   $0x000080,%al
		je     _087939_jump
		mov    $0x000002,%al
		mov    %esi,%ebx
		xor    %edx,%edx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		rcl    %dx
		ror    %dx
		shl    $0x000010,%edx
		mov    %ax,%dx
		mov    %edx,(%esp)
		test   %edx,%edx
		jge    _087939_jump

	_08792c_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		call   _085aee_func
		jmp    _087960_jump

	_087939_jump:
		mov    %edi,%ecx
		mov    %ebp,%edx
		mov    %esi,%ebx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		mov    %eax,%edx
		test   %eax,%eax
		jl     _08792c_jump
		cmp    %edi,%eax
		je     _08795e_jump
		mov    $0x00000c,%eax
		call   _086eb3_func

	_08795e_jump:
		mov    %edx,%eax

	_087960_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_087968_func:
		mov    $_0e6f28_data,%eax
		ret    



_08796e_func:
		mov    $_0e6f2c_data,%eax
		ret    



_087979_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0e6f30_data,%edx
		xor    %ebx,%ebx
		jmp    _08799e_jump

	_087988_jump:
		mov    0x000004(%edx),%eax
		test   %ecx,0x00000c(%eax)
		je     _08799c_jump
		inc    %ebx
		testb  $0x000010,0x00000d(%eax)
		je     _08799c_jump
		call   _08780a_func

	_08799c_jump:
		mov    (%edx),%edx

	_08799e_jump:
		test   %edx,%edx
		jne    _087988_jump
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0879a8_func:
		push   %edx
		mov    %eax,%edx
		mov    %cs,%eax
		mov    %ax,0x000002(%edx)
		mov    %ds,%eax
		mov    %ax,0x000006(%edx)
		mov    %es,%eax
		mov    %ax,(%edx)
		mov    %ss,%eax
		mov    %ax,0x000004(%edx)
		mov    %fs,%eax
		mov    %ax,0x000008(%edx)
		mov    %gs,%eax
		mov    %ax,0x00000a(%edx)
		pop    %edx
		ret    



_0879d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $0x000000,%al
		mov    $0x000044,%ah
		int    $0x000021
		rcl    %edx
		ror    %edx
		xor    %dh,%dh
		xor    %eax,%eax
		and    $0x000080,%dl
		mov    %dx,%ax
		test   %eax,%eax
		setne  %al
		and    $_0000ff_case,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0879f7_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmp    _0bdc44_data,%eax
		jb     _087a0a_jump
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_087a0a_jump:
		cmp    $0x000005,%eax
		jg     _087a40_jump
		mov    %eax,%ebx
		mov    _0bdc98_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000001(%eax),%cl
		test   $0x000040,%cl
		jne    _087a40_jump
		mov    %cl,%ch
		or     $0x000040,%ch
		mov    %ch,0x000001(%eax)
		mov    %edx,%eax
		call   _0879d0_func
		test   %eax,%eax
		je     _087a40_jump
		mov    _0bdc98_data,%eax
		orb    $0x000020,0x000001(%ebx,%eax,1)

	_087a40_jump:
		mov    _0bdc98_data,%eax
		mov    (%eax,%edx,4),%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_087a4c_func:
		push   %ebx
		or     $0x000040,%dh
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    _0bdc98_data,%eax
		shl    $0x000002,%edx
		mov    %ebx,(%edx,%eax,1)
		pop    %ebx
		ret    



_087a62_func:
		jae    _087a72_jump
		and    $0x00ffff,%eax
		push   %eax
		call   _085aee_func
		pop    %eax
		jmp    _087a74_jump

	_087a72_jump:
		sub    %eax,%eax

	_087a74_jump:
		ret    



_087a75_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     _087a97_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _087a4c_func
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_087a97_jump:
		mov    $0x000004,%eax
		call   _086eb3_func
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_087aaa_func:
		cmp    $0x000041,%eax
		jl     _087ab7_jump
		cmp    $0x00005a,%eax
		jg     _087ab7_jump
		add    $0x000020,%eax

	_087ab7_jump:
		ret    



_087ab8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e6f20_data,%esi
		test   %esi,%esi
		je     _087ae0_jump
		mov    0x000004(%esi),%ecx
		mov    0x00000c(%ecx),%edi
		mov    (%esi),%eax
		and    $0x004003,%edi
		mov    %eax,_0e6f20_data
		or     $0x000003,%di
		jmp    _087b27_jump

	_087ae0_jump:
		mov    $_0bd974_data,%ecx
		jmp    _087b07_jump

	_087ae7_jump:
		testb  $0x000003,0x00000c(%ecx)
		jne    _087b04_jump
		mov    $0x000008,%eax
		call   _085814_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _087b4c_jump
		mov    $0x000003,%edi
		jmp    _087b27_jump

	_087b04_jump:
		add    $0x00001a,%ecx

	_087b07_jump:
		cmp    $_0bdb7c_data,%ecx
		jb     _087ae7_jump
		mov    $0x000022,%eax
		mov    $0x004003,%edi
		call   _085814_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _087b4c_jump
		lea    0x000008(%eax),%ecx

	_087b27_jump:
		mov    $0x00001a,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07fcc0_func
		mov    %edi,0x00000c(%ecx)
		mov    _0e6f30_data,%eax
		mov    %ecx,0x000004(%esi)
		mov    %esi,_0e6f30_data
		mov    %eax,(%esi)
		mov    %ecx,%eax
		jmp    _087b58_jump

	_087b4c_jump:
		mov    $0x000005,%eax
		call   _086eb3_func
		xor    %eax,%eax

	_087b58_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_087b5e_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $_0e6f30_data,%edx

	_087b68_jump:
		mov    (%edx),%eax
		test   %eax,%eax
		je     _087b93_jump
		mov    0x000004(%eax),%ecx
		cmp    %ecx,%ebx
		je     _087b79_jump
		mov    %eax,%edx
		jmp    _087b68_jump

	_087b79_jump:
		mov    0x00000c(%ecx),%cl
		or     $0x000003,%cl
		mov    %cl,0x00000c(%ebx)
		mov    (%eax),%ebx
		mov    %ebx,(%edx)
		mov    _0e6f20_data,%edx
		mov    %eax,_0e6f20_data
		mov    %edx,(%eax)

	_087b93_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_087b97_jump:
		push   %edx

	_087b98_jump:
		mov    _0e6f20_data,%edx
		test   %edx,%edx
		je     _087bb3_jump
		mov    %edx,%eax
		mov    (%edx),%edx
		call   _08590f_func
		mov    %edx,_0e6f20_data
		jmp    _087b98_jump

	_087bb3_jump:
		pop    %edx
		ret    



_087bb5_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		testb  $0x000020,0x00000d(%eax)
		jne    _087be2_jump
		mov    0x000010(%edx),%eax
		call   _0879d0_func
		test   %eax,%eax
		je     _087be2_jump
		mov    0x00000d(%edx),%bl
		or     $0x000020,%bl
		mov    %bl,0x00000d(%edx)
		test   $0x000007,%bl
		jne    _087be2_jump
		mov    %bl,%cl
		or     $0x000002,%cl
		mov    %cl,0x00000d(%edx)

	_087be2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_087be6_func:
		mov    _0bdbac_data,%eax
		ret    

	_087bec_jump:
		ret    



_087bed_func:
		push   %ds
		call   _07fcb4_func
		cmpw   $0x000001,_0bfbea_data
		je     _087c48_jump
		nop
		nop
		nop
		nop
		movw   $0x000001,_0bfbea_data
		mov    %esp,_0bebda_data
		data16 mov %ss,_0bebde_data
		lss    _0bebd2_data,%esp
		pusha  
		push   %es
		push   %fs
		push   %gs
		push   %ds
		pop    %es
		mov    %esp,_0bfbe2_data
		lcall  *_0bebc8_data
		pop    %gs
		pop    %fs
		pop    %es
		popa   
		lss    _0bebda_data,%esp
		movw   $0x000000,_0bfbea_data

	_087c48_jump:
		pop    %ds
		push   %ax
		mov    $0x000020,%ax
		out    %al,$0x000020
		pop    %ax
		iret   



_087c69_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bfbec_data
		je     _087ca4_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		mov    $0x000043,%dx
		mov    $0x000036,%al
		out    %al,(%dx)
		mov    $0x000040,%dx
		mov    0x000008(%ebp),%eax
		out    %al,(%dx)
		mov    %ah,%al
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_087ca4_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_087caf_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		les    0x00000c(%ebp),%edi
		mov    %edi,_0bebc8_data
		data16 mov %es,_0bebcc_data
		data16 mov %ds,_0bebd0_data
		data16 mov %ds,_0bebd6_data
		cmpl   $0x000000,_0bfbec_data
		je     _087d66_jump
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		cmpl   $0x000000,_0bfbf0_data
		je     _087d25_jump
		nop
		nop
		nop
		nop
		mov    $0x000204,%ax
		mov    $0x000008,%bl
		int    $0x000031
		mov    %edx,_0bebbc_data
		mov    %cx,_0bebc0_data
		mov    $0x000205,%ax
		mov    $0x000008,%bl
		mov    $_087bed_func,%edx
		mov    %cs,%cx
		int    $0x000031
		jmp    _087d4c_jump

	_087d25_jump:
		mov    $0x003508,%ax
		int    $0x000021
		mov    %ebx,_0bebbc_data
		data16 mov %es,_0bebc0_data
		push   %ds
		xor    %ax,%ax
		mov    %eax,%es
		mov    $0x002508,%ax
		mov    $_087bed_func,%edx
		push   %cs
		pop    %ds
		int    $0x000021
		pop    %ds

	_087d4c_jump:
		mov    $0x000043,%dx
		mov    $0x000036,%al
		out    %al,(%dx)
		mov    $0x000040,%dx
		mov    0x000008(%ebp),%eax
		out    %al,(%dx)
		mov    %ah,%al
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_087d66_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_087d71_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bfbec_data
		je     _087d92_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)

	_087d92_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_087d9d_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bfbec_data
		je     _087dbe_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_087dbe_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_087dc9_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bfbec_data
		je     _087e3a_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		cmpl   $0x000000,_0bfbf0_data
		je     _087e11_jump
		nop
		nop
		nop
		nop
		mov    $0x000205,%ax
		mov    $0x000008,%bl
		mov    _0bebc0_data,%cx
		mov    _0bebbc_data,%edx
		int    $0x000031
		jmp    _087e28_jump

	_087e11_jump:
		push   %ds
		mov    $0x002508,%ax
		mov    _0bebc0_data,%cx
		mov    _0bebbc_data,%edx
		mov    %ecx,%ds
		int    $0x000021
		pop    %ds

	_087e28_jump:
		mov    $0x000040,%dx
		mov    $0x000000,%ax
		out    %al,(%dx)
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_087e3a_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_087e45_func:
		cmpl   $0x000000,_0bfbec_data
		je     _087e9d_jump
		nop
		nop
		nop
		nop
		movw   $0x000000,_0bfbea_data
		mov    _0bfbe2_data,%esp
		pop    %gs
		pop    %fs
		pop    %es
		popa   
		lss    _0bebda_data,%esp
		mov    %eax,_0bfbe6_data
		pop    %eax
		mov    %ax,_0bfbe2_data
		push   %eax
		push   %eax
		mov    _0bebbc_data,%eax
		mov    %eax,(%esp)
		mov    _0bebc0_data,%eax
		mov    %eax,0x000004(%esp)
		mov    _0bfbe6_data,%eax
		push   %eax
		mov    _0bfbe2_data,%ax
		mov    %eax,%ds
		pop    %eax
		lret   

	_087e9d_jump:
		ret    

	_087e9e_jump:
		ret    



_087e9f_func:
		push   %ecx
		push   %eax

	_087ea1_jump:
		mov    (%edx),%cl
		mov    %cl,(%eax)
		cmp    $0x000000,%cl
		je     _087ebb_jump
		mov    0x000001(%edx),%cl
		add    $0x000002,%edx
		mov    %cl,0x000001(%eax)
		add    $0x000002,%eax
		cmp    $0x000000,%cl
		jne    _087ea1_jump

	_087ebb_jump:
		pop    %eax
		pop    %ecx
		ret    



_087ebe_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    %eax,%edi
		push   %es
		push   %ds
		pop    %es
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_087ed1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _087ee9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _087ed1_jump

	_087ee9_jump:
		pop    %edi
		pop    %es
		mov    %edi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_087ef4_jump:
		ret    



_087ef5_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%cx
		mov    0x00000a(%ebp),%bx
		mov    0x00000c(%ebp),%di
		mov    0x00000e(%ebp),%si
		mov    $0x000600,%ax
		int    $0x000031
		mov    $0x000000,%eax
		jae    _087f27_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax

	_087f27_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_087f32_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%cx
		mov    0x00000a(%ebp),%bx
		mov    0x00000c(%ebp),%di
		mov    0x00000e(%ebp),%si
		mov    $0x000601,%ax
		int    $0x000031
		mov    $0x000000,%eax
		jae    _087f64_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax

	_087f64_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_087f6f_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		push   %eax
		mov    %ax,-0x000002(%ebp)
		push   %eax
		mov    %ax,%bx
		mov    $0x000008,%ax
		xor    %cx,%cx
		mov    0x000008(%ebp),%edx
		int    $0x000031
		pop    %eax
		mov    $0x000501,%ax
		xor    %ebx,%ebx
		mov    0x000008(%ebp),%ecx
		add    $0x000050,%cx
		int    $0x000031
		push   %ebx
		mov    0x00000c(%ebp),%ebx
		mov    %si,(%ebx)
		mov    %di,0x000002(%ebx)
		pop    %ebx
		pop    %eax
		push   %eax
		mov    0x000010(%ebp),%esi
		mov    %cx,(%esi)
		mov    %bx,0x000002(%esi)
		mov    %cx,%dx
		mov    %bx,%cx
		mov    %ax,%bx
		mov    $0x000007,%ax
		int    $0x000031
		movzwl -0x000002(%ebp),%ecx
		lar    %ecx,%ecx
		shr    $0x000008,%ecx
		or     $0x004000,%cx
		mov    -0x000002(%ebp),%bx
		mov    $0x000009,%ax
		int    $0x000031
		pop    %eax
		xor    %edx,%edx
		mov    %ax,%dx
		xor    %eax,%eax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_087ffd_func:
		push   %eax
		mov    %ds,%ax
		mov    %eax,%gs
		pop    %eax
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000010(%ebp),%si
		mov    0x000012(%ebp),%di
		mov    $0x000502,%ax
		int    $0x000031
		mov    $0x000001,%ax
		mov    0x00000c(%ebp),%bx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088033_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		push   %eax
		push   %eax
		push   %eax
		push   %eax
		mov    0x00000c(%ebp),%bx
		mov    $0x000006,%ax
		int    $0x000031
		pop    %ebx
		mov    $0x000007,%ax
		int    $0x000031
		xor    %ebx,%ebx
		mov    0x00000c(%ebp),%bx
		lsl    %bx,%edx
		mov    $0x000008,%ax
		pop    %ebx
		xor    %ecx,%ecx
		int    $0x000031
		mov    $0x000009,%ax
		pop    %ebx
		lar    %bx,%ecx
		shr    $0x000008,%ecx
		or     $0x004008,%cx
		int    $0x000031
		pop    %edx
		xor    %eax,%eax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088090_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%esi
		les    0x00000c(%ebp),%edi
		mov    $0x000020,%ecx

	_0880a7_jump:
		mov    %edi,(%esi)
		data16 mov %es,0x000004(%esi)
		add    $0x00006c,%edi
		add    $0x000006,%esi
		loop   _0880a7_jump
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0880c0_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		xor    %eax,%eax
		mov    $0x000100,%ax
		mov    0x000008(%ebp),%ebx
		add    $0x000100,%ebx
		int    $0x000031
		mov    0x00000c(%ebp),%esi
		shl    $0x000004,%eax
		mov    %eax,(%esi)
		mov    0x000010(%ebp),%esi
		mov    %dx,(%esi)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0880f6_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%es
		mov    %eax,%fs
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		xor    %eax,%eax
		mov    $0x000101,%ax
		mov    0x000008(%ebp),%edx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088156_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000008,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		push   %ds
		push   %es
		les    0x000018(%ebp),%edi
		lds    0x000010(%ebp),%esi
		mov    %edx,%esi
		mov    $0x00006a,%ecx
		cld    
		rep movsb %ds:(%esi),%es:(%edi)
		les    0x000018(%ebp),%edi
		data16 mov %ds,%es:0x000044(%edi)
		data16 mov %ds,%es:0x00004c(%edi)
		data16 mov %ds,%es:0x000054(%edi)
		data16 mov %ds,%es:0x00005c(%edi)
		pop    %es
		pop    %ds
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0881a4_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000005,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0882ac_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0882cf_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x00000a,%eax
		mov    0x000020(%ebp),%ecx
		les    0x000018(%ebp),%edi
		mov    0x000024(%ebp),%edx
		mov    0x000028(%ebp),%ebx
		push   %ds
		pop    %gs
		lcall  *0x000008(%ebp)
		cli    
		mov    0x00002c(%ebp),%ebx
		mov    %edi,(%ebx)
		mov    %ecx,0x000008(%ebx)
		mov    %esi,0x000010(%ebx)
		mov    0x00000c(%ebp),%ax
		mov    %ax,0x000004(%ebx)
		mov    0x000014(%ebp),%ax
		mov    %ax,0x00000c(%ebx)
		mov    %ax,0x000014(%ebx)
		sti    
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088322_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000000,%eax
		mov    0x000018(%ebp),%bx
		mov    0x00001c(%ebp),%cx
		mov    0x000020(%ebp),%dx
		mov    %dl,%ch
		mov    0x00002c(%ebp),%si
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088357_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000004,%eax
		mov    0x00001c(%ebp),%ecx
		mov    0x000018(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088380_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000002,%eax
		mov    0x000018(%ebp),%ebx
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0883a6_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000003,%eax
		mov    $0x000008,%bx
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0883f7_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		cmp    $0x000003,%al
		jne    _088421_jump
		nop
		nop
		nop
		nop
		mov    $0x000081,%ah
		mov    $0x00000b,%al
		mov    0x000008(%ebp),%ebx
		xor    %dx,%dx
		int    $0x00004b
		mov    $0x000000,%ax

	_088421_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08842c_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		cmp    $0x000003,%al
		jne    _088456_jump
		nop
		nop
		nop
		nop
		mov    $0x000081,%ah
		mov    $0x00000c,%al
		mov    0x000008(%ebp),%ebx
		xor    %dx,%dx
		int    $0x00004b
		mov    $0x000000,%ax

	_088456_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088520_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %esi
		push   %es
		mov    $0x00000b,%ax
		lfs    0x000020(%ebp),%edi
		lcall  *0x000018(%ebp)
		mov    %eax,%esi
		mov    %edx,%es
		mov    $0x00000c,%ax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %esi
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088580_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08859d_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000100,%ax
		mov    0x000008(%ebp),%ebx
		int    $0x000031
		jae    _0885c2_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax
		jmp    _0885d3_jump

	_0885c2_jump:
		mov    0x00000c(%ebp),%esi
		mov    %dx,(%esi)
		mov    0x000010(%ebp),%esi
		mov    %ax,(%esi)
		mov    $0x000000,%eax

	_0885d3_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0885de_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%fs
		mov    %eax,%es
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000101,%ax
		mov    0x000008(%ebp),%dx
		int    $0x000031
		mov    $0x000000,%ax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08860c_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $_0bfc98_data,%esi
		movl   $0x008107,0x00001c(%esi)
		movl   $0x000000,0x000014(%esi)
		mov    0x000008(%ebp),%ax
		mov    %ax,0x000022(%esi)
		movl   $0x000000,(%esi)
		mov    $0x000300,%ax
		mov    $0x00004b,%bl
		mov    $0x000000,%bh
		mov    $0x000000,%cx
		mov    $_0bfc98_data,%edi
		push   %ds
		pop    %es
		int    $0x000031
		mov    $_0bfc98_data,%esi
		andw   $0x000001,0x000020(%esi)
		jne    _088668_jump
		nop
		nop
		nop
		nop
		mov    $0x000000,%eax
		jmp    _08866d_jump

	_088668_jump:
		mov    $0x000001,%eax

	_08866d_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088678_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $_0bfc98_data,%esi
		movl   $0x008108,0x00001c(%esi)
		movl   $0x000000,0x000014(%esi)
		mov    0x000008(%ebp),%ax
		mov    %ax,0x000022(%esi)
		movl   $0x000000,(%esi)
		mov    $0x000300,%ax
		mov    $0x00004b,%bl
		mov    $0x000000,%bh
		mov    $0x000000,%cx
		mov    $_0bfc98_data,%edi
		push   %ds
		pop    %es
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0886c5_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000800,%ax
		mov    0x00000a(%ebp),%bx
		mov    0x000008(%ebp),%cx
		mov    $0x000000,%si
		mov    $0x004000,%di
		int    $0x000031
		mov    %cx,-0x000008(%ebp)
		mov    %bx,-0x000006(%ebp)
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		mov    %ax,-0x000004(%ebp)
		mov    $0x000007,%ax
		mov    -0x000004(%ebp),%bx
		mov    -0x000006(%ebp),%cx
		mov    -0x000008(%ebp),%dx
		int    $0x000031
		mov    $0x000008,%ax
		mov    -0x000004(%ebp),%bx
		mov    $0x00ffff,%cx
		mov    $0x00ffff,%dx
		int    $0x000031
		mov    $0x000009,%ax
		xor    %ecx,%ecx
		mov    %ds,%cx
		lar    %ecx,%ecx
		shr    $0x000008,%ecx
		mov    -0x000004(%ebp),%bx
		int    $0x000031
		mov    -0x000004(%ebp),%ax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088745_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%fs
		mov    %eax,%es
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%ax
		mov    0x000008(%ebp),%bx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    

	_088777_jump:
		ret    



_088778_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    _0bfd1c_data,%esi
		test   %esi,%esi
		je     _0887d0_jump
		test   %eax,%eax
		je     _0887d0_jump
		mov    %eax,%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    %ecx,%edi
		jmp    _0887ca_jump

	_0887a4_jump:
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _08a522_func
		test   %eax,%eax
		jne    _0887c7_jump
		mov    (%ecx,%edi,1),%al
		and    $_0000ff_case,%eax
		cmp    $0x00003d,%eax
		jne    _0887c7_jump
		lea    0x000001(%edi),%eax
		add    %ecx,%eax
		jmp    _0887d2_jump

	_0887c7_jump:
		add    $0x000004,%esi

	_0887ca_jump:
		mov    (%esi),%ecx
		test   %ecx,%ecx
		jne    _0887a4_jump

	_0887d0_jump:
		xor    %eax,%eax

	_0887d2_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0887d9_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_088818_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08882d_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_088842_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %cx,-0x00000c(%ebp)
		mov    %ebx,-0x000010(%ebp)
		imul   $0x000006,-0x000008(%ebp),%eax
		cmpl   $0x000000,_0bdcc8_data(%eax)
		jne    _088878_jump
		cmpw   $0x000000,_0bdccc_data(%eax)
		jne    _088878_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _0888cb_jump

	_088878_jump:
		cmpl   $0x000000,-0x000010(%ebp)
		jne    _088885_jump
		cmpw   $0x000000,-0x00000c(%ebp)
		je     _0888bb_jump

	_088885_jump:
		movzwl -0x00000c(%ebp),%eax
		push   %eax
		pushl  -0x000010(%ebp)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bdccc_data(%eax),%edx
		push   %edx
		pushl  _0bdcc8_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bdcea_data(%eax),%edx
		push   %edx
		pushl  _0bdce6_data(%eax)
		call   _088156_func
		add    $0x000018,%esp
		jmp    _0888c4_jump

	_0888bb_jump:
		movl   $0x000002,-0x000004(%ebp)
		jmp    _0888cb_jump

	_0888c4_jump:
		movl   $0x000000,-0x000004(%ebp)

	_0888cb_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_0888d3_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0888e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0888fd_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000048,%esp
		mov    %eax,-0x00002c(%ebp)
		mov    %edx,-0x000030(%ebp)
		mov    %cx,-0x000044(%ebp)
		mov    %ebx,-0x000048(%ebp)
		movl   $0x00002c,-0x00000c(%ebp)
		movl   $0x000030,-0x000010(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		cmpl   $0x000005,-0x000030(%ebp)
		jbe    _088943_jump
		movl   $0x00000a,-0x000028(%ebp)
		jmp    _088b17_jump

	_088943_jump:
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bdd90_data(%eax)
		je     _08895e_jump
		movl   $0x000009,-0x000028(%ebp)
		jmp    _088b17_jump

	_08895e_jump:
		cmpl   $0x00e000,-0x00002c(%ebp)
		jb     _088970_jump
		cmpl   $0x00e200,-0x00002c(%ebp)
		jbe    _08897c_jump

	_088970_jump:
		movl   $0x000006,-0x000028(%ebp)
		jmp    _088b17_jump

	_08897c_jump:
		mov    $_0be7c8_data,%edx
		mov    $_0be8c7_data,%eax
		call   _087e9f_func
		mov    $_0c1870_data,%edx
		mov    $_0be8c7_data,%eax
		call   _087ebe_func
		push   $0x000200
		mov    $_0be8c7_data,%eax
		push   %eax
		call   _080bde_func
		add    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		cmpl   $0xffffffff,-0x000004(%ebp)
		jne    _0889c2_jump
		movl   $0x00000f,-0x000028(%ebp)
		jmp    _088b17_jump

	_0889c2_jump:
		mov    -0x00000c(%ebp),%ebx
		mov    $_0beb54_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _084de6_func

	_0889d2_jump:
		mov    -0x000018(%ebp),%eax
		cmp    _0beb74_data,%eax
		ja     _0889e3_jump
		cmpl   $0x000000,-0x000014(%ebp)
		je     _0889e8_jump

	_0889e3_jump:
		jmp    _088ae6_jump

	_0889e8_jump:
		mov    -0x000010(%ebp),%ebx
		mov    $_0beb80_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _084de6_func
		mov    _0beba4_data,%eax
		mov    %eax,-0x000008(%ebp)
		mov    _0beba8_data,%eax
		cmp    -0x00002c(%ebp),%eax
		jne    _088a13_jump
		testb  $0x000080,_0bebad_data
		jne    _088a18_jump

	_088a13_jump:
		jmp    _088ace_jump

	_088a18_jump:
		movl   $0x000001,-0x000014(%ebp)
		lea    -0x000024(%ebp),%eax
		push   %eax
		pushl  0x000018(%ebp)
		pushl  -0x000008(%ebp)
		call   _087f6f_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,-0x00003c(%ebp)
		mov    %ecx,-0x000040(%ebp)
		movzwl -0x00003c(%ebp),%eax
		push   %eax
		pushl  -0x000040(%ebp)
		call   _088033_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,-0x000034(%ebp)
		mov    %ecx,-0x000038(%ebp)
		pushl  -0x000008(%ebp)
		pushl  -0x000024(%ebp)
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088a75_jump
		movl   $0x000005,-0x000028(%ebp)
		jmp    _088b17_jump

	_088a75_jump:
		lea    -0x000020(%ebp),%eax
		push   %eax
		mov    -0x000008(%ebp),%edx
		mov    -0x00003c(%ebp),%ebx
		mov    -0x000040(%ebp),%eax
		mov    -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _080e50_func
		mov    -0x000034(%ebp),%eax
		lgs    -0x000048(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000038(%ebp),%eax
		lgs    -0x000048(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000010(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000040(%ebp),%eax
		lgs    0x000010(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000008(%ebp),%al
		mov    0x00001c(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    0x000020(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _088ade_jump

	_088ace_jump:
		mov    $0x000001,%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _080e86_func

	_088ade_jump:
		incl   -0x000018(%ebp)
		jmp    _0889d2_jump

	_088ae6_jump:
		mov    -0x000004(%ebp),%eax
		call   _080e81_func
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0beba8_data,%edx
		mov    %edx,_0bde3a_data(%eax)
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bdd90_data(%eax)
		movl   $0x000000,-0x000028(%ebp)

	_088b17_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		ret    $0x000014



_088b20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		cmpl   $0x000005,-0x000008(%ebp)
		jbe    _088b43_jump
		movl   $0x00000a,-0x000004(%ebp)
		jmp    _088bee_jump

	_088b43_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bdd90_data(%eax)
		jne    _088b5e_jump
		movl   $0x00000a,-0x000004(%ebp)
		jmp    _088bee_jump

	_088b5e_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bdd90_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bdd04_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bdca0_data(%eax)
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088b9b_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _088bee_jump

	_088b9b_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bdd68_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bdccc_data(%eax),%edx
		push   %edx
		pushl  _0bdcc8_data(%eax)
		call   _087ffd_func
		add    $0x00000c,%esp
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bdd68_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bdcea_data(%eax),%edx
		push   %edx
		pushl  _0bdce6_data(%eax)
		call   _087ffd_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_088bee_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_088bf8_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000044,%esp
		mov    %eax,-0x00002c(%ebp)
		mov    %cx,-0x000040(%ebp)
		mov    %ebx,-0x000044(%ebp)
		movl   $0x00002c,-0x00000c(%ebp)
		movl   $0x000030,-0x000010(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		cmpl   $0x001000,-0x00002c(%ebp)
		jb     _088c3c_jump
		cmpl   $0x001023,-0x00002c(%ebp)
		jbe    _088c48_jump

	_088c3c_jump:
		movl   $0x000006,-0x000028(%ebp)
		jmp    _088dc8_jump

	_088c48_jump:
		mov    $_0be7c8_data,%edx
		mov    $_0be8c7_data,%eax
		call   _087e9f_func
		mov    $_0c1870_data,%edx
		mov    $_0be8c7_data,%eax
		call   _087ebe_func
		push   $0x000200
		mov    $_0be8c7_data,%eax
		push   %eax
		call   _080bde_func
		add    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		cmpl   $0xffffffff,-0x000004(%ebp)
		jne    _088c8e_jump
		movl   $0x00000f,-0x000028(%ebp)
		jmp    _088dc8_jump

	_088c8e_jump:
		mov    -0x00000c(%ebp),%ebx
		mov    $_0beb54_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _084de6_func

	_088c9e_jump:
		mov    -0x000018(%ebp),%eax
		cmp    _0beb74_data,%eax
		ja     _088caf_jump
		cmpl   $0x000000,-0x000014(%ebp)
		je     _088cb4_jump

	_088caf_jump:
		jmp    _088db9_jump

	_088cb4_jump:
		mov    -0x000010(%ebp),%ebx
		mov    $_0beb80_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _084de6_func
		mov    _0beba4_data,%eax
		mov    %eax,-0x000008(%ebp)
		mov    _0beba8_data,%eax
		cmp    -0x00002c(%ebp),%eax
		jne    _088cdf_jump
		testb  $0x000040,_0bebad_data
		jne    _088ce4_jump

	_088cdf_jump:
		jmp    _088da1_jump

	_088ce4_jump:
		movl   $0x000001,-0x000014(%ebp)
		addl   $0x004000,-0x000008(%ebp)
		lea    -0x000024(%ebp),%eax
		push   %eax
		pushl  0x00001c(%ebp)
		pushl  -0x000008(%ebp)
		call   _087f6f_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,-0x000038(%ebp)
		mov    %ecx,-0x00003c(%ebp)
		movzwl -0x000038(%ebp),%eax
		push   %eax
		pushl  -0x00003c(%ebp)
		call   _088033_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,-0x000030(%ebp)
		mov    %ecx,-0x000034(%ebp)
		pushl  -0x000008(%ebp)
		pushl  -0x000024(%ebp)
		call   _087ef5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088d48_jump
		movl   $0x000005,-0x000028(%ebp)
		jmp    _088dc8_jump

	_088d48_jump:
		lea    -0x000020(%ebp),%eax
		push   %eax
		mov    -0x000008(%ebp),%edx
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _080e50_func
		mov    -0x000030(%ebp),%eax
		lgs    -0x000044(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000034(%ebp),%eax
		lgs    -0x000044(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000038(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000008(%ebp),%al
		mov    0x000020(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    0x000024(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _088db1_jump

	_088da1_jump:
		mov    $0x000001,%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _080e86_func

	_088db1_jump:
		incl   -0x000018(%ebp)
		jmp    _088c9e_jump

	_088db9_jump:
		mov    -0x000004(%ebp),%eax
		call   _080e81_func
		movl   $0x000000,-0x000028(%ebp)

	_088dc8_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000014



_088dd2_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bdd18_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bdcb4_data(%eax)
		call   _087f32_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _088e10_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _088e63_jump

	_088e10_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bdd7c_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bdd30_data(%eax),%edx
		push   %edx
		pushl  _0bdd2c_data(%eax)
		call   _087ffd_func
		add    $0x00000c,%esp
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bdd7c_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bdd4e_data(%eax),%edx
		push   %edx
		pushl  _0bdd4a_data(%eax)
		call   _087ffd_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_088e63_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_088e94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_088ea9_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_088f20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_088f35_func:
		push   %esi
		push   %edi
		push   %ds
		push   %es
		push   %eax
		mov    %dx,%es
		mov    %cx,%ds
		mov    %ebx,%esi
		mov    %eax,%edi

	_088f44_jump:
		mov    (%esi),%al
		mov    %al,%es:(%edi)
		cmp    $0x000000,%al
		je     _088f5e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,%es:0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _088f44_jump

	_088f5e_jump:
		pop    %eax
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		ret    



_088f64_func:
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    0x00000c(%esp),%eax
		mov    %ebx,%esi
		push   %ds
		push   %es
		push   %edi
		xchg   %eax,%ecx
		mov    %eax,%ds
		mov    %edx,%es
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %eax
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		ret    $0x000004

	_088f94_jump:
		ret    



_088f95_func:
		test   %edx,%edx
		jge    _088f94_jump
		jmp    _0802de_func



_088f9e_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		call   _088fb3_func
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    



_088fb3_func:
		fldl2e 
		fmulp  %st,%st(1)
		push   %ebp
		mov    %esp,%ebp
		mov    $0x008001,%ax
		push   %eax
		filds  -0x000004(%ebp)
		fcom   %st(1)
		fnstsw %ax
		sahf   
		mov    %ebp,%esp
		fstp   %st(0)
		jbe    _088fd3_jump
		fstp   %st(0)
		fldz   
		pop    %ebp
		ret    

	_088fd3_jump:
		fld    %st(0)
		call   _089024_func
		push   %eax
		fists  -0x000004(%ebp)
		fwait
		pop    %eax
		cmp    $0x008000,%ax
		jne    _088ff3_jump
		dec    %ax
		push   %eax
		fstp   %st(0)
		fstp   %st(0)
		filds  -0x000004(%ebp)
		fld    %st(0)
		pop    %eax

	_088ff3_jump:
		fld    %st(0)
		fld1   
		fscale 
		fstp   %st(1)
		fxch   %st(1)
		fld    %st(2)
		fsubp  %st,%st(1)
		ftst   
		fnstsw %ax
		sahf   
		je     _08901e_jump
		fld1   
		fchs   
		fxch   %st(1)
		fscale 
		fstp   %st(1)
		f2xm1  
		fld1   
		faddp  %st,%st(1)
		fmul   %st(0),%st
		fmulp  %st,%st(1)
		jmp    _089020_jump

	_08901e_jump:
		fstp   %st(0)

	_089020_jump:
		fstp   %st(1)
		pop    %ebp
		ret    



_089024_func:
		push   %ebp
		mov    %esp,%ebp
		push   %eax
		fstcw  -0x000002(%ebp)
		fwait
		mov    -0x000002(%ebp),%ax
		and    $0x00f3ff,%ax
		or     $0x000400,%ax
		push   %eax
		fldcw  -0x000008(%ebp)
		frndint 
		fldcw  -0x000002(%ebp)
		fwait
		mov    %ebp,%esp
		pop    %ebp
		ret    



_089047_func:
		test   %edx,%edx
		jne    _08904e_jump
		xor    %eax,%eax
		ret    

	_08904e_jump:
		jge    _089056_jump
		mov    $0xffffffff,%eax
		ret    

	_089056_jump:
		mov    $0x000001,%eax
		ret    



_08905c_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		lea    -0x000010(%ebp),%edx
		lea    -0x000008(%ebp),%eax
		call   _08a580_func
		mov    -0x000010(%ebp),%eax
		mov    %eax,(%ebx)
		mov    -0x00000c(%ebp),%eax
		mov    %eax,0x000004(%ebx)
		mov    -0x000008(%ebp),%eax
		mov    -0x000004(%ebp),%edx
		mov    %ebp,%esp
		pop    %ebp
		ret    



_089088_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		test   %edx,%edx
		je     _08911a_jump
		mov    -0x000006(%ebp),%eax
		and    $0x007ff0,%eax
		cwtl   
		sar    $0x000004,%eax
		cmp    $0x003e80,%ebx
		jle    _0890b6_jump
		mov    $0x003e80,%ebx

	_0890b6_jump:
		cmp    $0xffffc180,%ebx
		jge    _0890c3_jump
		mov    $0xffffc180,%ebx

	_0890c3_jump:
		add    %ebx,%eax
		test   %eax,%eax
		jg     _0890cf_jump
		xor    %eax,%eax
		xor    %edx,%edx
		jmp    _089120_jump

	_0890cf_jump:
		cmp    $0x0007ff,%eax
		jl     _089102_jump
		mov    -0x000006(%ebp),%ecx
		call   _086ebf_func
		test   %cx,%cx
		jle    _0890f0_jump
		mov    _0c1a50_data,%eax
		mov    _0c1a54_data,%edx
		jmp    _089120_jump

	_0890f0_jump:
		mov    _0c1a50_data,%eax
		mov    _0c1a54_data,%edx
		call   _0802de_func
		jmp    _089120_jump

	_089102_jump:
		mov    -0x000006(%ebp),%edx
		and    $0x00800f,%edx
		shl    $0x000004,%eax
		mov    %edx,%ebx
		mov    %dx,-0x000006(%ebp)
		or     %eax,%ebx
		mov    %bx,-0x000006(%ebp)

	_08911a_jump:
		mov    -0x00000c(%ebp),%eax
		mov    -0x000008(%ebp),%edx

	_089120_jump:
		lea    -0x000004(%ebp),%esp
		pop    %ecx
		pop    %ebp
		ret    



_089126_func:
		push   %ebp
		push   %es
		push   %ebx
		push   %ds
		push   %edx
		call   _08915e_func
		push   %ds
		push   %edi
		mov    %esp,%ebp
		mov    0x000008(%ebp),%edi
		mov    0x00000c(%ebp),%ds
		mov    %eax,(%edi)
		mov    %ebx,0x000004(%edi)
		mov    %ecx,0x000008(%edi)
		mov    %edx,0x00000c(%edi)
		mov    %esi,0x000010(%edi)
		popl   0x000014(%edi)
		sbb    %eax,%eax
		mov    %eax,0x000018(%edi)
		pop    %eax
		pop    %ebx
		pop    %ebx
		pop    %ebx
		mov    %ax,0x000006(%ebx)
		data16 mov %es,(%ebx)
		pop    %es
		pop    %ebp
		ret    



_08915e_func:
		lea    (%esi,%esi,2),%esi
		lea    %cs:_089204_jump(%esi),%eax
		push   %eax
		mov    (%ebx),%es
		mov    0x000006(%ebx),%bp
		mov    (%edi),%eax
		mov    0x000004(%edi),%ebx
		mov    0x000008(%edi),%ecx
		mov    0x00000c(%edi),%edx
		mov    0x000010(%edi),%esi
		mov    0x000014(%edi),%edi
		mov    %ebp,%ds
		ret    

	_089204_jump:
		int    $0x000000
		ret    



_089504_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    $0x00002a,%ah
		int    $0x000021
		sub    $0x00076c,%cx
		mov    %al,%ch
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00000a(%esp),%al
		mov    %eax,0x000014(%ebx)
		xor    %eax,%eax
		mov    0x000009(%esp),%al
		dec    %eax
		mov    %eax,0x000010(%ebx)
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    %eax,0x00000c(%ebx)
		mov    $0x00002c,%ah
		int    $0x000021
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,(%esp)
		xor    %eax,%eax
		mov    0x000003(%esp),%al
		xor    %ecx,%ecx
		mov    %eax,0x000008(%ebx)
		xor    %eax,%eax
		mov    (%esp),%cl
		mov    0x000002(%esp),%al
		mov    %ecx,%esi
		mov    %eax,0x000004(%ebx)
		xor    %eax,%eax
		shl    $0x000002,%esi
		mov    0x000001(%esp),%al
		add    %ecx,%esi
		mov    %eax,(%ebx)
		mov    $0x00002a,%ah
		int    $0x000021
		sub    $0x00076c,%cx
		mov    %al,%ch
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,0x000004(%esp)
		mov    0x000004(%esp),%al
		mov    0x000008(%esp),%ah
		add    %esi,%esi
		cmp    %ah,%al
		je     _0895b6_jump
		cmpl   $0x000017,0x000008(%ebx)
		je     _0895b6_jump
		xor    %eax,%eax
		mov    0x000006(%esp),%al
		mov    %eax,0x000014(%ebx)
		xor    %eax,%eax
		mov    0x000005(%esp),%al
		dec    %eax
		mov    %eax,0x000010(%ebx)
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		mov    %eax,0x00000c(%ebx)

	_0895b6_jump:
		mov    %esi,%eax
		movl   $0xffffffff,0x000020(%ebx)
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0895c7_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    $0x00000c,%esi
		mov    0x000010(%ebp),%edx
		mov    0x000010(%eax),%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $_0c1abc_data,%ebx
		mov    0x000014(%ebp),%esi
		mov    %edx,%edi
		cmp    $0xf4fb7ea1,%esi
		jge    _0895fb_jump

	_0895f1_jump:
		mov    $0xffffffff,%eax
		jmp    _089714_jump

	_0895fb_jump:
		mov    0x000010(%ebp),%eax
		mov    %eax,%edx
		mov    $0x00000c,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %eax,%esi

	_08960c_jump:
		test   %edi,%edi
		jge    _089616_jump
		dec    %esi
		add    $0x00000c,%edi
		jmp    _08960c_jump

	_089616_jump:
		test   %esi,%esi
		jl     _0895f1_jump
		lea    0x00076c(%esi),%eax
		call   _08a6ac_func
		test   %eax,%eax
		je     _08962e_jump
		mov    $_0c1ad6_data,%ebx

	_08962e_jump:
		lea    0x000003(%esi),%ecx
		mov    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sar    $0x000002,%ecx
		add    %edx,%eax
		lea    (%eax,%ecx,1),%edx
		movswl (%ebx,%edi,2),%eax
		mov    0x00000c(%ebp),%edi
		add    %edx,%eax
		add    %eax,%edi
		dec    %edi
		test   %esi,%esi
		je     _08965b_jump
		dec    %edi

	_08965b_jump:
		mov    0x000008(%ebp),%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%ebp),%edx
		add    %eax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    0x000000(%ebp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi

	_08967c_jump:
		test   %esi,%esi
		jge    _089689_jump
		dec    %edi
		add    $0x015180,%esi
		jmp    _08967c_jump

	_089689_jump:
		mov    %ebp,%ecx
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _08aaf3_func
		call   _08ac9f_func
		mov    _0bfd6c_data,%edx
		mov    0x000020(%ebp),%ebx
		add    %edx,%esi
		test   %ebx,%ebx
		jge    _0896b1_jump
		mov    %ebp,%eax
		call   _08a800_func

	_0896b1_jump:
		cmpl   $0x000000,0x000020(%ebp)
		jle    _0896bd_jump
		sub    _0bfd70_data,%esi

	_0896bd_jump:
		test   %esi,%esi
		jge    _0896ca_jump
		dec    %edi
		add    $0x015180,%esi
		jmp    _0896bd_jump

	_0896ca_jump:
		cmp    $0x0063de,%edi
		jl     _0895f1_jump
		jne    _0896f4_jump
		mov    _0bfd6c_data,%eax
		sub    $0x015180,%esi
		test   %eax,%eax
		jle    _0895f1_jump
		test   %esi,%esi
		jge    _089712_jump
		jmp    _0895f1_jump

	_0896f4_jump:
		lea    -0x0063df(%edi),%eax
		mov    %eax,%edi
		shl    $0x000003,%edi
		sub    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		shl    $0x000007,%edi
		mov    %edi,%eax
		shl    $0x000002,%edi
		sub    %eax,%edi
		add    %edi,%esi

	_089712_jump:
		mov    %esi,%eax

	_089714_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08972d_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    _0bd971_data,%ah
		test   %ah,%ah
		je     _089751_jump
		mov    %edi,%eax
		call   _08b004_func
		jmp    _089895_jump

	_089751_jump:
		mov    %ah,-0x000018(%ebp)
		mov    %ah,-0x000014(%ebp)
		mov    %edi,%eax
		mov    $0x3ff00000,%ecx
		call   _089047_func
		mov    %eax,-0x00001c(%ebp)
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _088f95_func
		mov    %eax,%edi
		mov    %edx,%esi
		call   _0853a4_func
		jne    _08978b_jump
		mov    $0x54442d18,%edi
		mov    $0x3fe921fb,%esi
		jmp    _08987e_jump

	_08978b_jump:
		mov    $0x3ff00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _0853a4_func
		jle    _0897b6_jump
		mov    $0x3ff00000,%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		xor    %eax,%eax
		call   _0800d8_func
		mov    $0x000001,%bl
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bl,-0x000018(%ebp)

	_0897b6_jump:
		mov    $0x5e9ecd56,%ebx
		mov    $0x3fd12614,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _0853a4_func
		jle    _089830_jump
		mov    $0xd0b09955,%ebx
		mov    $0x3fe76cf5,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07f75f_func
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _07f5a8_func
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _07f5a8_func
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07f5a8_func
		mov    $0xe8584ca9,%ebx
		mov    $0x3ffbb67a,%ecx
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07f5a8_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _0800d8_func
		mov    $0x000001,%bh
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bh,-0x000014(%ebp)

	_089830_jump:
		mov    $0x000008,%ecx
		mov    $_0c1a58_data,%ebx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _086e78_func
		mov    -0x000014(%ebp),%cl
		mov    %eax,%edi
		mov    %edx,%esi
		test   %cl,%cl
		je     _089861_jump
		mov    $0x382d7366,%ebx
		mov    $0x3fe0c152,%ecx
		call   _07f5a8_func
		mov    %eax,%edi
		mov    %edx,%esi

	_089861_jump:
		cmpb   $0x000000,-0x000018(%ebp)
		je     _08987e_jump
		mov    $0x54442d15,%eax
		mov    $0x3ff921fb,%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07f5a2_func
		mov    %eax,%edi
		mov    %edx,%esi

	_08987e_jump:
		cmpl   $0x000000,-0x00001c(%ebp)
		jge    _089891_jump
		mov    %edi,%eax
		mov    %esi,%edx
		call   _0802de_func
		mov    %eax,%edi
		mov    %edx,%esi

	_089891_jump:
		mov    %edi,%eax
		mov    %esi,%edx

	_089895_jump:
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_08989e_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    $0x000043,%ah
		int    $0x000021
		jb     _0898bb_jump
		test   $0x000002,%bl
		je     _0898bb_jump
		test   $0x000001,%cl
		je     _0898bb_jump
		mov    $0x000000,%al
		mov    $0x000006,%ah
		stc    

	_0898bb_jump:
		sbb    %ecx,%ecx
		mov    %ax,%cx
		mov    %ecx,%eax
		mov    %eax,%ebx
		mov    %eax,%edx
		and    $0x00ffff,%ebx
		shr    $0x000010,%edx
		mov    %ebx,%eax
		call   _085ae3_func
		pop    %ecx
		pop    %ebx
		ret    



_0898d9_func:
		mov    %esp,%eax
		sub    _0bdbb0_data,%eax
		ret    



_0898e2_func:
		data16 mov %ss,_0bfcfc_data
		ret    



_08991b_func:
		mov    $_0bfcfe_data,%eax
		mov    $0x000001,%edx
		call   _08b070_func



_08992a_func:
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     _089979_jump
		add    $0x000007,%eax
		jb     _089979_jump
		and    $0x0000fc,%al
		mov    $0x00000c,%edx
		sub    %edx,%eax
		cmc    
		sbb    %ecx,%ecx
		and    %ecx,%eax
		add    %edx,%eax
		cmp    0x000014(%ebx),%eax
		ja     _089979_jump
		mov    0x00000c(%ebx),%esi
		mov    0x000010(%ebx),%edi
		cmp    %edi,%eax
		ja     _08995d_jump
		mov    0x000028(%ebx),%esi
		sub    %edi,%edi

	_08995d_jump:
		mov    (%esi),%edx
		cmp    %edx,%eax
		jbe    _08997d_jump
		sub    %edx,%edi
		cmc    
		sbb    %ecx,%ecx
		and    %ecx,%edi
		add    %edx,%edi
		lea    0x000020(%ebx),%edx
		mov    0x000008(%esi),%esi
		cmp    %edx,%esi
		jne    _08995d_jump
		mov    %edi,0x000014(%ebx)

	_089979_jump:
		sub    %eax,%eax
		jmp    _0899c8_jump

	_08997d_jump:
		sub    %eax,%edx
		mov    %edi,0x000010(%ebx)
		incl   0x000018(%ebx)
		mov    0x000008(%esi),%ecx
		cmp    $0x00000c,%edx
		jb     _0899ab_jump
		mov    %esi,%edi
		add    %eax,%edi
		mov    %edi,0x00000c(%ebx)
		mov    %edx,(%edi)
		mov    %eax,(%esi)
		mov    0x000004(%esi),%ebx
		mov    %ebx,0x000004(%edi)
		mov    %ecx,0x000008(%edi)
		mov    %edi,0x000008(%ebx)
		mov    %ecx,%ebx
		mov    %edi,0x000004(%ebx)
		jmp    _0899c0_jump

	_0899ab_jump:
		decl   0x00001c(%ebx)
		mov    %esi,%eax
		mov    %ecx,%edi
		mov    0x000004(%esi),%esi
		mov    %edi,0x000008(%esi)
		mov    %esi,0x000004(%edi)
		mov    %esi,0x00000c(%ebx)
		mov    %eax,%esi

	_0899c0_jump:
		orl    $0x000001,(%esi)
		mov    %esi,%eax
		add    $0x000004,%eax

	_0899c8_jump:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret    

	_0899cd_jump:
		jmp    _089ad8_jump



_0899d2_func:
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     _0899cd_jump
		mov    %eax,%esi
		sub    $0x000004,%esi
		mov    (%esi),%eax
		test   $0x000001,%al
		je     _0899cd_jump
		and    $0x0000fe,%al
		mov    %esi,%edi
		add    %eax,%edi
		testl  $0x000001,(%edi)
		jne    _089a14_jump
		cmp    0x00000c(%ebx),%edi
		jne    _0899fd_jump
		mov    %esi,0x00000c(%ebx)

	_0899fd_jump:
		add    (%edi),%eax
		mov    %eax,(%esi)
		push   %ebx
		mov    0x000004(%edi),%ebx
		mov    0x000008(%edi),%edi
		mov    %edi,0x000008(%ebx)
		mov    %ebx,0x000004(%edi)
		pop    %ebx
		decl   0x00001c(%ebx)
		jmp    _089a90_jump

	_089a14_jump:
		mov    %eax,(%esi)
		mov    0x00000c(%ebx),%edi
		cmp    %edi,%esi
		jae    _089a2b_jump
		cmp    0x000004(%edi),%esi
		ja     _089a90_jump
		mov    0x000028(%ebx),%edi
		cmp    %edi,%esi
		jb     _089a90_jump
		jmp    _089a3a_jump

	_089a2b_jump:
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _089a90_jump
		lea    0x000020(%ebx),%edi
		cmp    0x000024(%ebx),%esi
		ja     _089a90_jump

	_089a3a_jump:
		sub    %edx,%edx
		mov    0x000018(%ebx),%eax
		mov    0x00001c(%ebx),%ecx
		inc    %ecx
		div    %ecx
		dec    %ecx
		cmp    %ecx,%eax
		jae    _089a6f_jump
		mov    0x000018(%ebx),%edx
		sub    %ecx,%edx
		add    %eax,%eax
		cmp    %ecx,%edx
		ja     _089a57_jump
		sub    %eax,%eax

	_089a57_jump:
		mov    %esi,%edi
		add    (%esi),%edi

	_089a5b_jump:
		mov    (%edi),%edx
		test   $0x000001,%dl
		je     _089a90_jump
		cmp    $0xffffffff,%edx
		je     _089a6f_jump
		and    $0x0000fe,%dl
		add    %edx,%edi
		dec    %eax
		jne    _089a5b_jump

	_089a6f_jump:
		mov    0x00000c(%ebx),%edi
		cmp    %edi,%esi
		jae    _089a79_jump
		mov    0x000028(%ebx),%edi

	_089a79_jump:
		cmp    %edi,%esi
		jb     _089a90_jump
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _089a90_jump
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _089a90_jump
		mov    0x000008(%edi),%edi
		jmp    _089a79_jump

	_089a90_jump:
		mov    0x000004(%edi),%edx
		mov    (%esi),%ecx
		xchg   %edi,%edx
		mov    %edi,%eax
		add    (%edi),%eax
		cmp    %esi,%eax
		jne    _089aaf_jump
		add    (%edi),%ecx
		mov    %ecx,(%edi)
		cmp    0x00000c(%ebx),%esi
		jne    _089aab_jump
		mov    %edi,0x00000c(%ebx)

	_089aab_jump:
		mov    %edi,%esi
		jmp    _089ac0_jump

	_089aaf_jump:
		incl   0x00001c(%ebx)
		mov    %edx,0x000008(%esi)
		mov    %edi,0x000004(%esi)
		mov    %esi,0x000008(%edi)
		mov    %edx,%edi
		mov    %esi,0x000004(%edi)

	_089ac0_jump:
		decl   0x000018(%ebx)
		cmp    0x00000c(%ebx),%esi
		jae    _089ad0_jump
		cmp    0x000010(%ebx),%ecx
		jbe    _089ad0_jump
		mov    %ecx,0x000010(%ebx)

	_089ad0_jump:
		cmp    0x000014(%ebx),%ecx
		jbe    _089ad8_jump
		mov    %ecx,0x000014(%ebx)

	_089ad8_jump:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret    



_089add_func:
		push   %ebx
		push   %edx
		mov    _0bd968_data,%edx
		cmp    %edx,%eax
		jne    _089af2_jump
		mov    0x000008(%edx),%edx
		mov    %edx,_0bd968_data

	_089af2_jump:
		mov    _0bd964_data,%ebx
		cmp    %ebx,%eax
		jne    _089b05_jump
		mov    0x000008(%ebx),%edx
		mov    %edx,_0bd964_data

	_089b05_jump:
		mov    0x000004(%eax),%edx
		mov    0x000008(%eax),%eax
		test   %edx,%edx
		je     _089b12_jump
		mov    %eax,0x000008(%edx)

	_089b12_jump:
		test   %eax,%eax
		je     _089b19_jump
		mov    %edx,0x000004(%eax)

	_089b19_jump:
		pop    %edx
		pop    %ebx
		ret    



_089b1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0bd964_data,%edx

	_089b27_jump:
		test   %edx,%edx
		je     _089e06_jump
		mov    0x000024(%edx),%eax
		mov    (%eax),%eax
		mov    (%edx),%ebx
		add    $0x00002c,%eax
		cmp    %ebx,%eax
		jne    _089b73_jump
		lea    -0x000008(%edx),%ebx
		mov    %edx,%eax
		mov    0x000008(%edx),%ecx
		call   _089add_func
		mov    %ecx,%edx
		mov    0x000004(%ebx),%ecx
		test   %ecx,%ecx
		jne    _089b63_jump
		mov    (%ebx),%esi
		mov    (%ebx),%di
		shr    $0x000010,%esi
		mov    $0x000005,%ah
		mov    $0x000002,%al
		int    $0x000031
		jmp    _089b27_jump

	_089b63_jump:
		mov    %ecx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x000049,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		pop    %es
		jmp    _089b27_jump

	_089b73_jump:
		mov    0x000008(%edx),%edx
		jmp    _089b27_jump



_089c77_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0bd964_data,%eax
		xor    %ebx,%ebx
		jmp    _089c8d_jump

	_089c84_jump:
		cmp    %eax,%edx
		jb     _089c91_jump
		mov    %eax,%ebx
		mov    0x000008(%eax),%eax

	_089c8d_jump:
		test   %eax,%eax
		jne    _089c84_jump

	_089c91_jump:
		mov    %ebx,0x000004(%edx)
		mov    %eax,0x000008(%edx)
		test   %ebx,%ebx
		je     _089ca0_jump
		mov    %edx,0x000008(%ebx)
		jmp    _089ca6_jump

	_089ca0_jump:
		mov    %edx,_0bd964_data

	_089ca6_jump:
		test   %eax,%eax
		je     _089cad_jump
		mov    %edx,0x000004(%eax)

	_089cad_jump:
		lea    0x000020(%edx),%ebx
		mov    (%edx),%eax
		add    $0x00002c,%edx
		movl   $0x000000,-0x00000c(%edx)
		movl   $0x000000,-0x00001c(%edx)
		movl   $0x000000,-0x000014(%edx)
		movl   $0x000000,-0x000010(%edx)
		mov    %ebx,-0x000008(%edx)
		mov    %ebx,-0x000004(%edx)
		sub    $0x00002c,%eax
		mov    %ebx,-0x000020(%edx)
		mov    %eax,(%edx)
		movl   $0xffffffff,(%edx,%eax,1)
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_089ceb_func:
		push   %ebx
		push   %edx
		mov    _0bd964_data,%edx
		test   %edx,%edx
		je     _089d36_jump
		mov    0x000024(%edx),%edx
		mov    (%edx),%eax
		add    %edx,%eax
		lea    0x000004(%eax),%ebx
		xor    %eax,%eax
		mov    _0bdbce_data,%al
		cmp    $0x000002,%eax
		jl     _089d29_jump
		cmp    $0x000008,%eax
		jg     _089d29_jump
		cmpb   $0x000000,_0bdbd0_data
		jne    _089d29_jump
		xor    %eax,%eax
		mov    %ds,%ax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,_0bdba0_data

	_089d29_jump:
		cmp    _0bdba0_data,%ebx
		jne    _089d36_jump
		mov    (%edx),%eax
		pop    %edx
		pop    %ebx
		ret    

	_089d36_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret    



_089d3b_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		mov    (%esp),%ebx
		mov    (%esp),%ecx
		shr    $0x000010,%ebx
		call   _089b1c_func
		mov    $0x000005,%ah
		mov    $0x000001,%al
		int    $0x000031
		sbb    %eax,%eax
		inc    %eax
		je     _089d6a_jump
		mov    %bx,%ax
		shl    $0x000010,%eax
		mov    %cx,%ax
		mov    %di,(%eax)
		mov    %si,0x000002(%eax)

	_089d6a_jump:
		test   %eax,%eax
		je     _089d87_jump
		mov    (%esp),%ebx
		lea    0x000008(%eax),%edx
		sub    $0x000008,%ebx
		mov    %ebx,(%edx)
		movl   $0x000000,0x000004(%eax)
		mov    %edx,%eax
		jmp    _089e03_jump

	_089d87_jump:
		testw  $0x00fff0,_0e6f66_data
		je     _089d9c_jump
		movl   $0x0fffff,_0e6f64_data

	_089d9c_jump:
		cmpl   $0x010000,(%esp)
		ja     _089e01_jump
		mov    _0e6f64_data,%ebx
		shr    $0x000004,%ebx
		or     $0x000001,%bl
		mov    $0x000048,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jl     _089e01_jump
		mov    (%esp),%ebx
		shr    $0x000004,%ebx
		mov    $0x000048,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,%ebx
		mov    %edx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x000049,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		pop    %es
		test   %esi,%esi
		jl     _089e01_jump
		mov    $0x000000,%ah
		mov    $0x000006,%al
		int    $0x000031
		mov    %ecx,%eax
		shl    $0x000010,%eax
		mov    %dx,%ax
		add    $0x000008,%eax
		mov    (%esp),%edx
		mov    %esi,-0x000004(%eax)
		sub    $0x000008,%edx
		mov    %edx,(%eax)
		jmp    _089e03_jump

	_089e01_jump:
		xor    %eax,%eax

	_089e03_jump:
		add    $0x000004,%esp

	_089e06_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_089e0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		cmpl   $0x000000,_0bfdc4_data
		jne    _089e1f_jump

	_089e1b_jump:
		xor    %eax,%eax
		jmp    _089e03_jump

	_089e1f_jump:
		cmpl   $0xfffffffe,_0bdba0_data
		je     _089e1b_jump
		mov    %esp,%eax
		call   _08a008_func
		test   %eax,%eax
		je     _089e03_jump
		xor    %eax,%eax
		mov    _0bdbce_data,%al
		cmp    $0x000001,%eax
		jne    _089e54_jump
		mov    (%esp),%eax
		call   _089d3b_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _089e6f_jump
		mov    (%eax),%eax
		mov    %eax,(%esp)
		jmp    _089e6f_jump

	_089e54_jump:
		mov    (%esp),%ebx
		mov    $0x80004800,%eax
		int    $0x000021
		sbb    %ebx,%ebx
		not    %ebx
		and    %ebx,%eax
		mov    (%esp),%ecx
		sub    $0x000004,%ecx
		mov    %eax,%edx
		mov    %ecx,(%esp)

	_089e6f_jump:
		test   %edx,%edx
		je     _089e1b_jump
		mov    (%esp),%eax
		mov    (%esp),%esi
		sub    $0x000004,%eax
		cmp    %esi,%eax
		ja     _089e1b_jump
		mov    %eax,(%esp)
		cmp    $0x000038,%eax
		jb     _089e1b_jump
		mov    %eax,(%edx)
		mov    %edx,%eax
		call   _089c77_func
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)
		or     $0x000001,%al
		mov    %eax,(%ebx)
		mov    0x000018(%edx),%edi
		movl   $0xffffffff,0x000014(%edx)
		inc    %edi
		lea    0x000004(%ebx),%eax
		mov    %edi,0x000018(%edx)
		call   _08590f_func
		mov    $0x000001,%eax
		jmp    _089e03_jump



_089ebc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		push   %eax
		xor    %eax,%eax
		mov    _0bdbce_data,%al
		cmp    $0x000001,%eax
		jne    _089ed7_jump
		cmpb   $0x000000,_0bdbcf_data
		je     _089ee3_jump

	_089ed7_jump:
		xor    %eax,%eax
		mov    _0bdbce_data,%al
		cmp    $0x000009,%eax
		jne    _089ef0_jump

	_089ee3_jump:
		mov    (%esp),%eax
		call   _089e0c_func
		jmp    _089fff_jump

	_089ef0_jump:
		cmpl   $0x000000,_0bfdc4_data
		jne    _089f00_jump

	_089ef9_jump:
		xor    %eax,%eax
		jmp    _089fff_jump

	_089f00_jump:
		cmpl   $0xfffffffe,_0bdba0_data
		je     _089ef9_jump
		mov    %esp,%eax
		call   _08a008_func
		test   %eax,%eax
		je     _089fff_jump
		xor    %eax,%eax
		mov    _0bdbce_data,%al
		cmp    $0x000002,%eax
		jl     _089f40_jump
		cmp    $0x000008,%eax
		jg     _089f40_jump
		cmpb   $0x000000,_0bdbd0_data
		jne    _089f40_jump
		xor    %eax,%eax
		mov    %ds,%ax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,_0bdba0_data

	_089f40_jump:
		mov    (%esp),%edx
		mov    _0bdba0_data,%ecx
		add    %ecx,%edx
		cmp    %ecx,%edx
		jae    _089f54_jump
		mov    $0xfffffffe,%edx

	_089f54_jump:
		mov    %edx,%eax
		call   _08b165_func
		cmp    $0xffffffff,%eax
		je     _089ef9_jump
		mov    %eax,%ebx
		cmp    $0xfffffff8,%eax
		ja     _089ef9_jump
		cmp    %eax,%edx
		jbe    _089ef9_jump
		sub    %eax,%edx
		mov    %edx,(%esp)
		lea    -0x000004(%edx),%eax
		cmp    %edx,%eax
		ja     _089ef9_jump
		mov    _0bd964_data,%edx
		mov    %eax,(%esp)
		jmp    _089f94_jump

	_089f82_jump:
		mov    0x000008(%edx),%ebp
		test   %ebp,%ebp
		je     _089f98_jump
		cmp    %ebx,%edx
		ja     _089f91_jump
		cmp    %ebp,%ebx
		jb     _089f98_jump

	_089f91_jump:
		mov    0x000008(%edx),%edx

	_089f94_jump:
		test   %edx,%edx
		jne    _089f82_jump

	_089f98_jump:
		test   %edx,%edx
		je     _089fc2_jump
		mov    (%edx),%eax
		lea    -0x000004(%ebx),%ecx
		add    %edx,%eax
		cmp    %eax,%ecx
		jne    _089fc2_jump
		mov    (%esp),%esi
		add    $0x000004,%esi
		mov    %esi,(%esp)
		add    %esi,(%edx)
		mov    (%esp),%ebp
		mov    %eax,%ebx
		lea    (%eax,%ebp,1),%ecx
		movl   $0xffffffff,(%ecx)
		jmp    _089fe1_jump

	_089fc2_jump:
		cmpl   $0x000038,(%esp)
		jb     _089ef9_jump
		mov    (%esp),%eax
		mov    %eax,(%ebx)
		mov    %ebx,%eax
		mov    %ebx,%edx
		call   _089c77_func
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)

	_089fe1_jump:
		mov    (%esp),%eax
		or     $0x000001,%al
		mov    %eax,(%ebx)
		incl   0x000018(%edx)
		lea    0x000004(%ebx),%eax
		movl   $0xffffffff,0x000014(%edx)
		call   _08590f_func
		mov    $0x000001,%eax

	_089fff_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08a008_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    (%eax),%edx
		add    $0x000003,%edx
		and    $0x0000fc,%dl
		test   %edx,%edx
		jne    _08a01f_jump

	_08a019_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_08a01f_jump:
		xor    %eax,%eax
		mov    _0bdbce_data,%al
		cmp    $0x000001,%eax
		jne    _08a034_jump
		cmpb   $0x000000,_0bdbcf_data
		je     _08a040_jump

	_08a034_jump:
		xor    %eax,%eax
		mov    _0bdbce_data,%al
		cmp    $0x000009,%eax
		jne    _08a045_jump

	_08a040_jump:
		add    $0x000008,%edx
		jmp    _08a04c_jump

	_08a045_jump:
		call   _089ceb_func
		sub    %eax,%edx

	_08a04c_jump:
		mov    %edx,(%ebx)
		add    $0x00003c,%edx
		cmp    (%ebx),%edx
		jb     _08a019_jump
		mov    _0bfdc8_data,%esi
		cmp    %esi,%edx
		jae    _08a064_jump
		mov    %esi,%edx
		and    $0x0000fe,%dl

	_08a064_jump:
		mov    %edx,(%ebx)
		add    $0x000fff,%edx
		cmp    (%ebx),%edx
		jb     _08a019_jump
		xor    %dl,%dl
		and    $0x0000f0,%dh
		mov    %edx,(%ebx)
		test   %edx,%edx
		setne  %al
		and    $_0000ff_case,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_08a085_func:
		xor    %eax,%eax
		ret    



_08a088_func:
		fsave  (%eax)
		fwait
		ret    



_08a08d_func:
		frstor (%eax)
		fwait
		ret    



_08a091_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0bd971_data
		je     _08a0b2_jump
		mov    $_08a088_func,%edx
		mov    $_08a08d_func,%ebx
		mov    %edx,_0bfdcc_data
		mov    %ebx,_0bfdd0_data

	_08a0b2_jump:
		xor    %eax,%eax
		mov    _0bfdd4_data,%ax
		call   _08b232_func
		pop    %edx
		pop    %ebx
		ret    



_08a0cc_func:
		push   %edx
		mov    _0bd970_data,%ah
		test   %ah,%ah
		jne    _08a110_jump
		mov    %ah,_0bd971_data
		sub    %eax,%eax
		push   %eax
		fninit 
		fnstcw (%esp)
		pop    %eax
		mov    %ah,%al
		xor    %dl,%dl
		and    $_0000ff_case,%eax
		cmp    $0x000003,%eax
		jne    _08a0fb_jump
		call   _08a091_func
		mov    %al,%dl

	_08a0fb_jump:
		cmpb   $0x000000,_0bdbcc_data
		jne    _08a110_jump
		mov    %dl,_0bd970_data
		mov    %dl,_0bd971_data

	_08a110_jump:
		pop    %edx
		ret    



_08a112_func:
		call   *_0bdbd9_data
		ret    



_08a119_func:
		movl   $0x008000,_0bfdc8_data
		ret    



_08a124_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    %edx,%eax
		mov    %ds,%ebx
		movl   $0x000000,0x00000c(%edi)
		mov    %esi,%ecx
		mov    0x000015(%edi),%dl
		xor    %ebp,%ebp
		cmp    $0x000047,%dl
		jb     _08a163_jump
		jbe    _08a170_jump
		cmp    $0x000066,%dl
		jb     _08a159_jump
		jbe    _08a185_jump
		cmp    $0x000067,%dl
		je     _08a170_jump
		jmp    _08a221_jump

	_08a159_jump:
		cmp    $0x000065,%dl
		je     _08a180_jump
		jmp    _08a221_jump

	_08a163_jump:
		cmp    $0x000045,%dl
		jb     _08a221_jump
		jbe    _08a180_jump
		jmp    _08a185_jump

	_08a170_jump:
		cmpl   $0x000000,0x000008(%edi)
		jne    _08a17d_jump
		movl   $0x000001,0x000008(%edi)

	_08a17d_jump:
		sub    $0x000002,%dl

	_08a180_jump:
		mov    $0x000001,%ebp

	_08a185_jump:
		mov    (%eax),%ecx
		add    $0x000008,%ecx
		mov    %ecx,(%eax)
		mov    -0x000008(%ecx),%eax
		mov    %eax,(%esp)
		mov    -0x000004(%ecx),%eax
		mov    %eax,0x000004(%esp)
		cmpl   $0x000001,0x000008(%edi)
		jle    _08a1be_jump
		mov    %esp,%eax
		call   _08b259_func
		test   %eax,%eax
		je     _08a1be_jump
		xor    %eax,%eax
		mov    0x000015(%edi),%al
		cmp    $0x000067,%eax
		je     _08a1b9_jump
		cmp    $0x000047,%eax
		jne    _08a1be_jump

	_08a1b9_jump:
		decl   0x000008(%edi)
		jmp    _08a1cb_jump

	_08a1be_jump:
		cmpl   $0xffffffff,0x000008(%edi)
		jne    _08a1cb_jump
		movl   $0x000006,0x000008(%edi)

	_08a1cb_jump:
		mov    0x000015(%edi),%al
		and    $0x00005f,%al
		and    $_0000ff_case,%eax
		push   %eax
		xor    %eax,%eax
		mov    %dl,%al
		push   %eax
		push   $0x000003
		push   %ebp
		mov    0x000008(%edi),%ebx
		xor    %ecx,%ecx
		push   $0x000027
		lea    0x000014(%esp),%edx
		mov    %esi,%eax
		call   _08b413_func
		xor    %eax,%eax
		mov    (%esi),%al
		cmp    $0x00002a,%eax
		jne    _08a1fd_jump
		movb   $0x00002a,0x000016(%edi)

	_08a1fd_jump:
		movb   $0x000000,0x000027(%esi)

	_08a201_jump:
		xor    %eax,%eax
		mov    (%esi),%al
		cmp    $0x000020,%eax
		jne    _08a20d_jump
		inc    %esi
		jmp    _08a201_jump

	_08a20d_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		call   _08a22d_func
		mov    %ds,%ebx
		mov    %esi,%ecx
		movl   $0xffffffff,0x000008(%edi)

	_08a221_jump:
		mov    %ebx,%edx
		mov    %ecx,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08a22d_func:
		push   %ebx
		mov    %edx,%ebx
		mov    0x000014(%edx),%dl
		and    $0x000001,%dl
		and    $_0000ff_case,%edx
		jne    _08a28a_jump

	_08a23e_jump:
		cmpb   $0x000000,(%eax)
		je     _08a254_jump
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000065,%edx
		je     _08a254_jump
		cmp    $0x000045,%edx
		je     _08a254_jump
		inc    %eax
		jmp    _08a23e_jump

	_08a254_jump:
		mov    %eax,%edx
		mov    0x000015(%ebx),%bl
		and    $_0000ff_case,%ebx
		dec    %eax
		cmp    $0x000047,%ebx
		je     _08a26a_jump
		cmp    $0x000067,%ebx
		jne    _08a276_jump

	_08a26a_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x000030,%ebx
		jne    _08a276_jump
		dec    %eax
		jmp    _08a26a_jump

	_08a276_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x00002e,%ebx
		je     _08a280_jump
		inc    %eax

	_08a280_jump:
		mov    (%edx),%bl
		inc    %edx
		mov    %bl,(%eax)
		inc    %eax
		test   %bl,%bl
		jne    _08a280_jump

	_08a28a_jump:
		pop    %ebx
		ret    



_08a28c_func:
		push   %ebx
		mov    %edx,%ebx
		xor    %edx,%edx
		call   _08b60f_func
		mov    %eax,(%ebx)
		mov    %edx,0x000004(%ebx)
		pop    %ebx
		ret    



_08a29d_func:
		push   %edx
		mov    $0x000001,%edx
		mov    $_0c187c_data,%eax
		call   _08b070_func
		pop    %edx
		ret    



_08a2af_func:
		cmp    $0x000061,%eax
		jl     _08a2bc_jump
		cmp    $0x00007a,%eax
		jg     _08a2bc_jump
		sub    $0x000020,%eax

	_08a2bc_jump:
		ret    



_08a2c3_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $0x000002,%eax
		call   _08b821_func
		mov    %eax,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		mov    _0c1aa0_data(,%eax,4),%eax
		call   _08b840_func
		mov    $_0c1925_data,%eax
		mov    %ebx,%edx
		call   _08b840_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _08b840_func
		mov    $0x00000a,%eax
		mov    %ebx,%edx
		call   _08092a_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_08a30b_func:
		push   %ebx
		mov    %eax,%ebx
		call   *_0bfd18_data
		test   %eax,%eax
		jne    _08a333_jump
		mov    0x000004(%ebx),%edx
		mov    (%ebx),%eax
		call   _08a2c3_func
		cmpl   $0x000001,(%ebx)
		jne    _08a32e_jump
		call   _086eae_func
		jmp    _08a333_jump

	_08a32e_jump:
		call   _086ebf_func

	_08a333_jump:
		mov    0x000018(%ebx),%eax
		mov    0x00001c(%ebx),%edx
		pop    %ebx
		ret    



_08a3ed_func:
		sub    $0x000010,%esp
		movl   $0xc0000000,0x000008(%esp)
		movl   $0x4150017e,0x00000c(%esp)
		movl   $0x80000000,(%esp)
		movl   $0x4147ffff,0x000004(%esp)
		xor    %eax,%eax
		mov    _0bd971_data,%al
		cmp    $0x000003,%eax
		jl     _08a43e_jump
		fldl   0x000008(%esp)
		fld    %st(0)
		fldl   (%esp)
		fxch   %st(1)
		fdiv   %st(1),%st
		fmulp  %st,%st(1)
		fsubrp %st,%st(1)
		fcompl _0c192c_data
		fnstsw %ax
		sahf   
		jbe    _08a43e_jump
		orb    $0x000001,_0bdc3c_data

	_08a43e_jump:
		add    $0x000010,%esp
		ret    



_08a442_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0bd9b5_data,%ah
		and    $0x0000f8,%ah
		mov    %ah,%dl
		mov    %ah,_0bd9b5_data
		or     $0x000004,%dl
		mov    $_0bd974_data,%ecx
		mov    %dl,_0bd9b5_data
		jmp    _08a4a8_jump

	_08a466_jump:
		mov    $0x000008,%eax
		call   _085814_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _08a495_jump
		mov    $0x000008,%eax
		call   _085814_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _08a495_jump
		mov    $0x000001,%edx
		mov    $_0c1934_data,%eax
		call   _08b070_func

	_08a495_jump:
		mov    _0e6f30_data,%eax
		mov    %ecx,0x000004(%ebx)
		mov    %ebx,_0e6f30_data
		add    $0x00001a,%ecx
		mov    %eax,(%ebx)

	_08a4a8_jump:
		mov    0x00000c(%ecx),%edx
		test   %edx,%edx
		jne    _08a466_jump
		mov    %edx,_0e6f20_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08a4b9_func:
		xor    %eax,%eax
		call   _08a4ca_func
		jmp    _087b97_jump



_08a4ca_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    $_0bd974_data,%esi
		add    %eax,%eax
		xor    %ebx,%ebx
		add    %eax,%esi
		mov    _0e6f30_data,%eax
		jmp    _08a517_jump

	_08a4ec_jump:
		mov    (%eax),%ecx
		mov    0x000004(%eax),%eax
		mov    $0x000001,%edx
		testb  $0x000040,0x00000d(%eax)
		jne    _08a50f_jump
		testb  $0x000008,0x00000d(%eax)
		jne    _08a50f_jump
		cmp    %esi,%eax
		jb     _08a515_jump
		cmp    $_0bd9f6_data,%eax
		jae    _08a50f_jump
		xor    %edx,%edx

	_08a50f_jump:
		call   _0811bf_func
		inc    %ebx

	_08a515_jump:
		mov    %ecx,%eax

	_08a517_jump:
		test   %eax,%eax
		jne    _08a4ec_jump
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08a522_func:
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %ebx,%esi

	_08a528_jump:
		test   %esi,%esi
		jne    _08a531_jump

	_08a52c_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		ret    

	_08a531_jump:
		mov    (%ecx),%al
		xor    %ebx,%ebx
		mov    (%edx),%ah
		mov    %al,%bl
		cmp    $0x000041,%ebx
		jl     _08a545_jump
		cmp    $0x00005a,%ebx
		jg     _08a545_jump
		add    $0x000020,%al

	_08a545_jump:
		xor    %ebx,%ebx
		mov    %ah,%bl
		cmp    $0x000041,%ebx
		jl     _08a556_jump
		cmp    $0x00005a,%ebx
		jg     _08a556_jump
		add    $0x000020,%ah

	_08a556_jump:
		cmp    %ah,%al
		je     _08a56c_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ah,%al
		and    $_0000ff_case,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %esi
		pop    %ecx
		ret    

	_08a56c_jump:
		test   %ah,%ah
		je     _08a52c_jump
		inc    %ecx
		inc    %edx
		dec    %esi
		jmp    _08a528_jump



_08a580_func:
		push   %ebp
		push   %esi
		push   %edi
		push   %ecx
		push   %ebx
		mov    %edx,%esi
		mov    %eax,%ebp
		mov    0x000000(%ebp),%eax
		mov    0x000004(%ebp),%edx
		xchg   %ebp,%esi
		mov    %eax,0x000000(%ebp)
		mov    %edx,0x000004(%ebp)
		mov    %edx,%ecx
		and    $0x7ff00000,%ecx
		je     _08a5ab_jump
		cmp    $0x43300000,%ecx
		jb     _08a5b9_jump
		xchg   %esi,%ebp

	_08a5ab_jump:
		sub    %eax,%eax
		mov    %eax,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    

	_08a5b9_jump:
		mov    %ecx,%edi
		shr    $0x000014,%ecx
		sub    $0x0003ff,%cx
		jb     _08a5ab_jump
		push   %edx
		sub    %eax,%eax
		mov    $0xfff00000,%edx
		cmp    $0x000014,%cl
		jbe    _08a5de_jump
		sar    $0x000015,%edx
		rcr    %eax
		sub    $0x000015,%cl
		sar    %cl,%eax
		jmp    _08a5e0_jump

	_08a5de_jump:
		sar    %cl,%edx

	_08a5e0_jump:
		and    %edx,0x000004(%ebp)
		and    %eax,0x000000(%ebp)
		not    %edx
		not    %eax
		mov    %esi,%ebp
		and    0x000004(%ebp),%edx
		and    0x000000(%ebp),%eax
		call   _08a65b_func
		pop    %esi
		or     %edx,%edx
		je     _08a604_jump
		and    $0x80000000,%esi
		or     %esi,%edx

	_08a604_jump:
		mov    %edx,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08a610_func:
		push   %ebp
		push   %esi
		push   %edi
		push   %ecx
		push   %ebx
		push   %edx
		mov    %eax,%esi
		sub    %edx,%edx
		sub    %ecx,%ecx
		sub    %eax,%eax

	_08a61e_jump:
		mov    (%esi),%al
		cmp    $0x000000,%al
		je     _08a642_jump
		mov    %edx,%edi
		mov    %ecx,%ebx
		add    %ecx,%ecx
		adc    %edx,%edx
		add    %ecx,%ecx
		adc    %edx,%edx
		add    %ebx,%ecx
		adc    %edi,%edx
		add    %ecx,%ecx
		adc    %edx,%edx
		and    $0x00000f,%al
		add    %eax,%ecx
		adc    $0x000000,%edx
		inc    %esi
		jmp    _08a61e_jump

	_08a642_jump:
		mov    %ecx,%eax
		mov    $0x43300000,%edi
		call   _08a65b_func
		pop    %ebp
		mov    %edx,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08a65b_func:
		sub    %esi,%esi
		or     %eax,%esi
		or     %edx,%esi
		je     _08a6ab_jump
		test   $0xfff00000,%edx
		jne    _08a67f_jump

	_08a66b_jump:
		sub    $0x100000,%edi
		add    %eax,%eax
		adc    %edx,%edx
		test   $0xfff00000,%edx
		je     _08a66b_jump
		jmp    _08a6a3_jump

	_08a67f_jump:
		test   $0xffe00000,%edx
		je     _08a6a3_jump

	_08a687_jump:
		add    $0x100000,%edi
		shr    %edx
		rcr    %eax
		rcr    %esi
		test   $0xffe00000,%edx
		jne    _08a687_jump
		adc    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx

	_08a6a3_jump:
		and    $0x0fffff,%edx
		or     %edi,%edx

	_08a6ab_jump:
		ret    



_08a6ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		test   $0x000003,%bl
		jne    _08a6e1_jump
		mov    %eax,%edx
		mov    $0x000064,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     _08a6cf_jump

	_08a6c6_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_08a6cf_jump:
		mov    $0x000190,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     _08a6c6_jump

	_08a6e1_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08a6e7_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebx
		mov    0x000020(%eax),%ecx
		test   %ecx,%ecx
		jne    _08a7b4_jump
		lea    0x00076c(%edx),%eax
		call   _08a6ac_func
		test   %eax,%eax
		je     _08a71e_jump
		mov    0x000010(%ebx),%eax
		mov    _0c1ad6_data(,%eax,2),%esi
		mov    _0c1ad4_data(,%eax,2),%eax
		jmp    _08a72f_jump

	_08a71e_jump:
		mov    0x000010(%ebx),%eax
		mov    _0c1abc_data(,%eax,2),%esi
		mov    _0c1aba_data(,%eax,2),%eax

	_08a72f_jump:
		sar    $0x000010,%esi
		sar    $0x000010,%eax
		sub    %eax,%esi
		xor    %edi,%edi
		mov    $0x000001,%ecx
		mov    %edi,(%esp)
		mov    %edi,0x000004(%esp)
		mov    %edi,0x000008(%esp)
		mov    %ecx,0x00000c(%esp)
		mov    0x000010(%ebx),%eax
		mov    %eax,0x000010(%esp)
		mov    %edx,0x000014(%esp)
		mov    %esp,%eax
		mov    %edi,0x000020(%esp)
		call   _0895c7_func
		mov    0x000018(%esp),%ebp
		mov    0x000018(%ebx),%edx
		sub    %ebp,%edx
		add    $0x000007,%edx
		mov    $0x000007,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    0x00000c(%ebx),%eax
		cmp    $0x000005,%eax
		jne    _08a7a2_jump
		lea    -0x000001(%eax),%ecx
		mov    %ecx,%edi
		shl    $0x000003,%edi
		lea    0x000001(%edx),%eax
		sub    %ecx,%edi
		add    %edi,%eax
		cmp    %esi,%eax
		jle    _08a79e_jump
		mov    0x00000c(%ebx),%eax
		sub    $0x000002,%eax
		jmp    _08a7a3_jump

	_08a79e_jump:
		mov    %ecx,%eax
		jmp    _08a7a3_jump

	_08a7a2_jump:
		dec    %eax

	_08a7a3_jump:
		mov    0x00001c(%esp),%ebx
		add    %edx,%ebx
		mov    %eax,%edx
		shl    $0x000003,%eax
		sub    %edx,%eax
		add    %ebx,%eax
		jmp    _08a7c3_jump

	_08a7b4_jump:
		cmp    $0x000001,%ecx
		jne    _08a7c0_jump
		mov    0x00001c(%eax),%eax
		sub    %ecx,%eax
		jmp    _08a7c3_jump

	_08a7c0_jump:
		mov    0x00001c(%eax),%eax

	_08a7c3_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_08a7cc_func:
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		mov    0x000010(%eax),%esi
		cmp    0x000010(%edx),%esi
		jle    _08a7e0_jump

	_08a7d8_jump:
		mov    $0x000001,%eax
		pop    %esi
		pop    %ecx
		ret    

	_08a7e0_jump:
		cmp    0x000010(%ecx),%esi
		jl     _08a7fb_jump
		mov    %ebx,%edx
		call   _08a6e7_func
		mov    %eax,%esi
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _08a6e7_func
		cmp    %eax,%esi
		jg     _08a7d8_jump

	_08a7fb_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		ret    



_08a800_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%ecx
		mov    _0bfdba_data,%eax
		mov    (%eax),%dl
		xor    %edi,%edi
		test   %dl,%dl
		je     _08aab4_jump
		mov    $_0bfd48_data,%edx
		mov    $_0bfd24_data,%eax
		mov    0x000014(%ecx),%ebx
		call   _08a7cc_func
		mov    %eax,0x000014(%esp)
		test   %eax,%eax
		je     _08a842_jump
		mov    $_0bfd48_data,%esi
		mov    $_0bfd24_data,%ebx
		jmp    _08a84c_jump

	_08a842_jump:
		mov    $_0bfd24_data,%esi
		mov    $_0bfd48_data,%ebx

	_08a84c_jump:
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		mov    0x000010(%ecx),%ebp
		call   _08a6ac_func
		mov    %eax,%edx
		lea    0x000000(%ebp,%ebp,1),%eax
		test   %edx,%edx
		je     _08a874_jump
		mov    _0c1ad6_data(%eax),%edx
		mov    _0c1ad4_data(%eax),%eax
		jmp    _08a880_jump

	_08a874_jump:
		mov    _0c1abc_data(%eax),%edx
		mov    _0c1aba_data(%eax),%eax

	_08a880_jump:
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x00000c(%esp)
		xor    %edx,%edx
		mov    0x000020(%esi),%eax
		mov    %edx,0x000010(%esp)
		test   %eax,%eax
		jne    _08a950_jump
		mov    0x000010(%esi),%eax
		cmp    %eax,%ebp
		jle    _08a8ae_jump
		mov    $0x000001,%edi
		jmp    _08a989_jump

	_08a8ae_jump:
		jne    _08a989_jump
		mov    0x000018(%ecx),%edx
		mov    0x000018(%esi),%eax
		add    $0x000007,%edx
		sub    %eax,%edx
		movl   $0x000007,0x000018(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		mov    0x00000c(%ecx),%eax
		sub    %edx,%eax
		mov    0x000018(%ecx),%edx
		mov    %eax,(%esp)
		add    $0x000006,%edx
		sub    0x000018(%esi),%edx
		movl   $0x000007,0x000018(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		mov    0x00000c(%ecx),%eax
		dec    %eax
		sub    %edx,%eax
		mov    0x00000c(%esi),%edx
		mov    %eax,0x000008(%esp)
		cmp    $0x000005,%edx
		jne    _08a929_jump
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000007,%eax
		cmp    %edx,%eax
		jge    _08a989_jump
		mov    0x000008(%esp),%edx
		mov    $0x000001,%edi
		cmp    %edx,%eax
		jl     _08a989_jump
		jmp    _08a985_jump

	_08a929_jump:
		lea    -0x000001(%edx),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000018(%esp),%edx
		shl    $0x000003,%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		inc    %eax
		cmp    %edx,%eax
		jg     _08a989_jump
		mov    0x000008(%esp),%edx
		mov    $0x000001,%edi
		cmp    %edx,%eax
		jle    _08a989_jump
		jmp    _08a985_jump

	_08a950_jump:
		mov    0x00001c(%esi),%edx
		cmp    $0x000001,%eax
		jne    _08a977_jump
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		call   _08a6ac_func
		test   %eax,%eax
		je     _08a976_jump
		mov    _0c1abe_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _08a976_jump
		inc    %edx

	_08a976_jump:
		dec    %edx

	_08a977_jump:
		mov    0x00001c(%ecx),%eax
		cmp    %eax,%edx
		jg     _08a989_jump
		mov    $0x000001,%edi
		jne    _08a989_jump

	_08a985_jump:
		mov    %edi,0x000010(%esp)

	_08a989_jump:
		cmpl   $0x000000,0x000010(%esp)
		je     _08a9a6_jump
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _08aac3_func
		test   %eax,%eax
		sete   %al
		mov    %eax,%edi
		and    $_0000ff_case,%edi

	_08a9a6_jump:
		test   %edi,%edi
		jne    _08a9bd_jump
		mov    0x000014(%esp),%edx
		test   %edx,%edx
		je     _08aab4_jump
		mov    %edx,%edi
		jmp    _08aab4_jump

	_08a9bd_jump:
		mov    0x000020(%ebx),%eax
		xor    %esi,%esi
		test   %eax,%eax
		jne    _08aa60_jump
		mov    0x000010(%ebx),%eax
		cmp    %eax,%ebp
		jle    _08a9d8_jump
		xor    %edi,%edi
		jmp    _08aa99_jump

	_08a9d8_jump:
		jne    _08aa99_jump
		mov    0x000018(%ecx),%edx
		mov    0x000018(%ebx),%ebp
		add    $0x000007,%edx
		sub    %ebp,%edx
		mov    $0x000007,%ebp
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00000c(%ecx),%eax
		sub    %edx,%eax
		mov    0x000018(%ecx),%edx
		mov    %eax,0x000004(%esp)
		add    $0x000006,%edx
		mov    0x000018(%ebx),%eax
		sub    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00000c(%ecx),%eax
		dec    %eax
		xor    %edi,%edi
		sub    %edx,%eax
		mov    0x00000c(%ebx),%ebp
		mov    %eax,%edx
		cmp    $0x000005,%ebp
		jne    _08aa41_jump
		mov    0x00000c(%esp),%eax
		mov    0x000004(%esp),%ebp
		sub    $0x000007,%eax
		cmp    %ebp,%eax
		jl     _08aa3b_jump

	_08aa31_jump:
		mov    $0x000001,%edi
		jmp    _08aa99_jump

	_08aa3b_jump:
		cmp    %eax,%edx
		jg     _08aa99_jump
		jmp    _08aa94_jump

	_08aa41_jump:
		lea    -0x000001(%ebp),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000018(%esp),%ebp
		shl    $0x000003,%eax
		sub    %ebp,%eax
		mov    0x000004(%esp),%ebp
		inc    %eax
		cmp    %ebp,%eax
		jg     _08aa31_jump
		cmp    %eax,%edx
		jge    _08aa99_jump
		jmp    _08aa94_jump

	_08aa60_jump:
		mov    0x00001c(%ebx),%edx
		cmp    $0x000001,%eax
		jne    _08aa87_jump
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		call   _08a6ac_func
		test   %eax,%eax
		je     _08aa86_jump
		mov    _0c1abe_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _08aa86_jump
		inc    %edx

	_08aa86_jump:
		dec    %edx

	_08aa87_jump:
		mov    0x00001c(%ecx),%eax
		cmp    %eax,%edx
		jg     _08aa99_jump
		xor    %edi,%edi
		cmp    %eax,%edx
		jne    _08aa99_jump

	_08aa94_jump:
		mov    $0x000001,%esi

	_08aa99_jump:
		test   %esi,%esi
		je     _08aaa8_jump
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _08aac3_func
		mov    %eax,%edi

	_08aaa8_jump:
		mov    0x000014(%esp),%eax
		test   %eax,%eax
		je     _08aab4_jump
		sub    %edi,%eax
		mov    %eax,%edi

	_08aab4_jump:
		mov    %edi,%eax
		mov    %edi,0x000020(%ecx)
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08aac3_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %ebp
		mov    0x000008(%eax),%ecx
		mov    0x000008(%edx),%esi
		xor    %ebx,%ebx
		cmp    %esi,%ecx
		jl     _08aae7_jump
		jne    _08aaec_jump
		mov    0x000004(%eax),%ecx
		mov    0x000004(%edx),%ebp
		cmp    %ebp,%ecx
		jl     _08aae7_jump
		jne    _08aaec_jump
		mov    (%eax),%eax
		cmp    (%edx),%eax
		jge    _08aaec_jump

	_08aae7_jump:
		mov    $0x000001,%ebx

	_08aaec_jump:
		mov    %ebx,%eax
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_08aaf3_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%eax
		cmp    $0x00a8c0,%edx
		jae    _08ab20_jump
		test   %ebx,%ebx
		jle    _08ab20_jump
		lea    0x015180(%edx),%esi
		sub    %ebx,%esi
		xor    %edx,%edx
		mov    $0x015180,%ebx
		mov    %esi,%eax
		div    %ebx
		add    %eax,%edi
		dec    %edi
		jmp    _08ab2f_jump

	_08ab20_jump:
		mov    $0x015180,%ebx
		sub    %eax,%esi
		xor    %edx,%edx
		mov    %esi,%eax
		div    %ebx
		add    %eax,%edi

	_08ab2f_jump:
		mov    $0x015180,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %edx,%ebx
		mov    $0x000e10,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		xor    %edx,%edx
		mov    %eax,0x000008(%ecx)
		mov    %ebx,%eax
		div    %esi
		mov    %edx,%ebx
		mov    $0x00003c,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		xor    %edx,%edx
		mov    %eax,0x000004(%ecx)
		mov    %ebx,%eax
		div    %esi
		mov    $0x00016e,%ebx
		mov    %edi,%eax
		mov    %edx,(%ecx)
		xor    %edx,%edx
		div    %ebx
		mov    %eax,%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    %edi,%ebx
		sub    %eax,%ebx
		test   %edx,%edx
		jbe    _08ab96_jump
		lea    -0x000001(%edx),%eax
		shr    $0x000002,%eax
		sub    %eax,%ebx

	_08ab96_jump:
		lea    0x00076c(%edx),%eax
		call   _08a6ac_func
		add    $0x00016d,%eax

	_08aba6_jump:
		cmp    %eax,%ebx
		jb     _08abaf_jump
		inc    %edx
		sub    %eax,%ebx
		jmp    _08aba6_jump

	_08abaf_jump:
		mov    $_0c1abc_data,%esi
		mov    %edx,0x000014(%ecx)
		lea    0x00076c(%edx),%eax
		mov    %ebx,0x00001c(%ecx)
		call   _08a6ac_func
		test   %eax,%eax
		je     _08abce_jump
		mov    $_0c1ad6_data,%esi

	_08abce_jump:
		mov    $0x00001f,%ebp
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %ebp
		mov    %eax,%edx
		mov    (%esi,%edx,2),%edx
		sar    $0x000010,%edx
		cmp    %edx,%ebx
		jb     _08abe6_jump
		inc    %eax

	_08abe6_jump:
		mov    %eax,0x000010(%ecx)
		movswl (%esi,%eax,2),%eax
		sub    %eax,%ebx
		xor    %edx,%edx
		inc    %ebx
		lea    0x000001(%edi),%eax
		mov    %ebx,0x00000c(%ecx)
		mov    $0x000007,%ebx
		div    %ebx
		mov    %ecx,%eax
		mov    %edx,0x000018(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_08ac87_jump:
		mov    _0bfdbe_data,%ah
		test   $0x000001,%ah
		je     _08ac97_jump
		test   $0x000002,%ah
		jne    _08ac9e_jump

	_08ac97_jump:
		orb    $0x000002,_0bfdbe_data

	_08ac9e_jump:
		ret    



_08ac9f_func:
		mov    $_0c1964_data,%eax
		call   _088778_func
		test   %eax,%eax
		je     _08ac87_jump
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    $_0bfd6c_data,%ebx
		mov    %edx,_0bfd74_data
		mov    $_0bfd78_data,%edx
		call   _08ad08_func
		mov    %eax,%ecx
		mov    (%eax),%ah
		test   %ah,%ah
		jne    _08af35_jump
		mov    %ah,_0bfd97_data
		jmp    _08aff9_jump



_08ace4_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ecx
		xor    %ebx,%ebx

	_08acea_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000030,%edx
		jl     _08ad03_jump
		cmp    $0x000039,%edx
		jg     _08ad03_jump
		imul   $0x00000a,%ebx,%ebx
		add    %ebx,%edx
		inc    %eax
		lea    -0x000030(%edx),%ebx
		jmp    _08acea_jump

	_08ad03_jump:
		mov    %ebx,(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_08ad08_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,0x000010(%esp)
		xor    %eax,%eax
		mov    0x000000(%ebp),%al
		cmp    $0x00003a,%eax
		jne    _08ad20_jump
		inc    %ebp

	_08ad20_jump:
		mov    %ebp,%esi

	_08ad22_jump:
		mov    0x000000(%ebp),%dl
		test   %dl,%dl
		je     _08ad49_jump
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x00002c,%eax
		je     _08ad49_jump
		cmp    $0x00002d,%eax
		je     _08ad49_jump
		cmp    $0x00002b,%eax
		je     _08ad49_jump
		cmp    $0x000030,%eax
		jl     _08ad46_jump
		cmp    $0x000039,%eax
		jle    _08ad49_jump

	_08ad46_jump:
		inc    %ebp
		jmp    _08ad22_jump

	_08ad49_jump:
		mov    %ebp,%eax
		sub    %esi,%eax
		mov    %eax,0x00000c(%esp)
		cmp    $0x00001e,%eax
		jle    _08ad5e_jump
		movl   $0x00001e,0x00000c(%esp)

	_08ad5e_jump:
		mov    0x00000c(%esp),%ecx
		mov    0x000010(%esp),%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x00000c(%esp),%ecx
		lea    (%edi,%ecx,1),%eax
		movb   $0x000000,(%eax)
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    %dl,%al
		lea    0x000001(%ebp),%edx
		cmp    $0x00002d,%eax
		jne    _08ad9b_jump
		mov    $0x000001,%ecx
		jmp    _08ada0_jump

	_08ad9b_jump:
		cmp    $0x00002b,%eax
		jne    _08ada2_jump

	_08ada0_jump:
		mov    %edx,%ebp

	_08ada2_jump:
		mov    0x000000(%ebp),%al
		and    $_0000ff_case,%eax
		cmp    $0x000030,%eax
		jl     _08ae27_jump
		cmp    $0x000039,%eax
		jg     _08ae27_jump
		lea    0x000008(%esp),%edx
		xor    %esi,%esi
		mov    %ebp,%eax
		mov    %esi,(%esp)
		mov    %esi,0x000004(%esp)
		mov    %esi,0x000008(%esp)
		call   _08ace4_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebp
		cmp    $0x00003a,%edx
		jne    _08adfa_jump
		lea    0x000004(%esp),%edx
		inc    %eax
		call   _08ace4_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebp
		cmp    $0x00003a,%edx
		jne    _08adfa_jump
		mov    %esp,%edx
		inc    %eax
		call   _08ace4_func
		mov    %eax,%ebp

	_08adfa_jump:
		mov    0x000008(%esp),%esi
		mov    %esi,%eax
		shl    $0x000004,%eax
		sub    %esi,%eax
		mov    0x000004(%esp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    %esi,%eax
		shl    $0x000004,%eax
		sub    %esi,%eax
		mov    (%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %edx,(%ebx)
		test   %ecx,%ecx
		je     _08ae27_jump
		neg    %edx
		mov    %edx,(%ebx)

	_08ae27_jump:
		mov    %ebp,%eax
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08ae31_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%ebx
		mov    %edx,%ecx
		xor    %eax,%eax
		mov    (%ebx),%al
		mov    $0xffffffff,%esi
		cmp    $0x00004a,%eax
		jne    _08ae50_jump
		mov    $0x000001,%esi
		add    %esi,%ebx

	_08ae50_jump:
		xor    %eax,%eax
		mov    (%ebx),%al
		cmp    $0x00004d,%eax
		jne    _08ae5c_jump
		inc    %ebx
		xor    %esi,%esi

	_08ae5c_jump:
		lea    0x00000c(%esp),%edx
		mov    %ebx,%eax
		mov    %esi,0x000020(%ecx)
		call   _08ace4_func
		mov    %eax,%edx
		mov    %eax,%ebx
		test   %esi,%esi
		je     _08ae7b_jump
		mov    0x00000c(%esp),%eax
		mov    %eax,0x00001c(%ecx)
		jmp    _08aec8_jump

	_08ae7b_jump:
		mov    0x00000c(%esp),%eax
		dec    %eax
		mov    %eax,0x000010(%ecx)
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00002e,%eax
		jne    _08aec1_jump
		lea    0x000001(%edx),%eax
		lea    0x00000c(%esp),%edx
		call   _08ace4_func
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %eax,0x00000c(%ecx)
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00002e,%eax
		jne    _08aec1_jump
		lea    0x000001(%edx),%eax
		lea    0x00000c(%esp),%edx
		call   _08ace4_func
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %eax,0x000018(%ecx)

	_08aec1_jump:
		movl   $0x000000,0x00001c(%ecx)

	_08aec8_jump:
		mov    $0x000002,%edx
		xor    %esi,%esi
		xor    %eax,%eax
		mov    %edx,0x000008(%esp)
		mov    %esi,(%esp)
		mov    %esi,0x000004(%esp)
		mov    (%ebx),%al
		cmp    $0x00002f,%eax
		jne    _08af19_jump
		lea    0x000008(%esp),%edx
		lea    0x000001(%ebx),%eax
		call   _08ace4_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebx
		cmp    $0x00003a,%edx
		jne    _08af19_jump
		lea    0x000004(%esp),%edx
		inc    %eax
		call   _08ace4_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebx
		cmp    $0x00003a,%edx
		jne    _08af19_jump
		mov    %esp,%edx
		inc    %eax
		call   _08ace4_func
		mov    %eax,%ebx

	_08af19_jump:
		mov    (%esp),%eax
		mov    %eax,(%ecx)
		mov    0x000004(%esp),%eax
		mov    %eax,0x000004(%ecx)
		mov    0x000008(%esp),%eax
		mov    %eax,0x000008(%ecx)
		mov    %ebx,%eax
		add    $0x000010,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_08af35_jump:
		mov    $0x000001,%ebx
		mov    $_0bfd97_data,%edx
		mov    _0bfd6c_data,%eax
		mov    %ebx,_0bfd74_data
		sub    $0x000e10,%eax
		mov    %esp,%ebx
		mov    %eax,(%esp)
		mov    %ecx,%eax
		call   _08ad08_func
		mov    (%esp),%ecx
		mov    _0bfd6c_data,%ebx
		sub    %ecx,%ebx
		mov    %ebx,_0bfd70_data
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    %eax,%edx
		cmp    $0x00002c,%ebx
		jne    _08af84_jump
		mov    $_0bfd24_data,%edx
		inc    %eax
		call   _08ae31_func
		mov    %eax,%edx

	_08af84_jump:
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00002c,%eax
		jne    _08aff9_jump
		lea    0x000001(%edx),%eax
		mov    $_0bfd48_data,%edx
		call   _08ae31_func
		mov    _0bfd70_data,%eax
		mov    %eax,%edx
		mov    $0x000e10,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0bfd50_data,%esi
		sub    %eax,%esi
		mov    _0bfd70_data,%eax
		mov    %eax,%edx
		mov    $0x00003c,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0bfd4c_data,%edi
		mov    _0bfd70_data,%eax
		sub    %edx,%edi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0bfd48_data,%ebp
		mov    %esi,_0bfd50_data
		sub    %edx,%ebp
		mov    %edi,_0bfd4c_data
		mov    %ebp,_0bfd48_data

	_08aff9_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08b004_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		mov    $0x000000,%dl
		ftst   
		fnstsw %ax
		sahf   
		jae    _08b019_jump
		fchs   
		not    %dl

	_08b019_jump:
		fld1   
		fcom   %st(1)
		fnstsw %ax
		and    $0x004100,%ax
		je     _08b04a_jump
		fxch   %st(1)
		testb  $0x000001,_0bdc3c_data
		jne    _08b034_jump
		fpatan 
		jmp    _08b039_jump

	_08b034_jump:
		call   _08b990_func

	_08b039_jump:
		mov    $0x000002,%ax
		mov    %ax,-0x000002(%ebp)
		fldpi  
		fidivs -0x000002(%ebp)
		fsubp  %st,%st(1)
		jmp    _08b05c_jump

	_08b04a_jump:
		testb  $0x000001,_0bdc3c_data
		jne    _08b057_jump
		fpatan 
		jmp    _08b05c_jump

	_08b057_jump:
		call   _08b990_func

	_08b05c_jump:
		cmp    $0x000000,%dl
		je     _08b063_jump
		fchs   

	_08b063_jump:
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    



_08b070_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %ds,%edx
		call   _08b9c4_func
		test   %eax,%eax
		jne    _08b08a_jump
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   _07fc79_func

	_08b08a_jump:
		pop    %ecx
		pop    %ebx
		ret    



_08b165_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		push   %eax
		cmp    _0bdbb4_data,%eax
		jb     _08b1d0_jump
		cmpb   $0x000000,_0bdbce_data
		jne    _08b1e2_jump
		mov    (%esp),%ebp
		add    $0x00000f,%ebp
		shr    $0x000004,%ebp
		test   %ebp,%ebp
		jne    _08b190_jump
		mov    $0xfffffff,%ebp

	_08b190_jump:
		xor    %ebx,%ebx
		mov    %ds,%ax
		mov    %ax,%bx
		mov    $0x0000ed,%ah
		int    $0x000021
		shl    $0x00001f,%eax
		and    $0x00ffff,%edi
		or     %eax,%edi
		mov    %edi,%eax
		test   %edi,%edi
		jge    _08b1bd_jump
		mov    %ebp,%ebx
		mov    %edi,%es
		mov    $0x00004a,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     _08b1d0_jump

	_08b1bd_jump:
		mov    %ds,%ax
		mov    %ebp,%ebx

	_08b1c2_jump:
		mov    %eax,%es
		mov    $0x00004a,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    _08b217_jump

	_08b1d0_jump:
		call   _087968_func
		movl   $0x000005,(%eax)
		mov    $0xffffffff,%eax
		jmp    _08b225_jump

	_08b1e2_jump:
		mov    (%esp),%ebx
		add    $0x000fff,%ebx
		shr    $0x00000c,%ebx
		test   %ebx,%ebx
		jne    _08b1f7_jump
		mov    $0x0fffff,%ebx

	_08b1f7_jump:
		xor    %eax,%eax
		mov    _0bdbce_data,%al
		cmp    $0x000001,%eax
		jne    _08b212_jump
		xor    %eax,%eax
		mov    _0bdbcf_data,%al
		cmp    $0x000001,%eax
		jne    _08b212_jump
		shl    $0x000008,%ebx

	_08b212_jump:
		mov    %ds,%ax
		jmp    _08b1c2_jump

	_08b217_jump:
		mov    (%esp),%ebx
		mov    _0bdba0_data,%eax
		mov    %ebx,_0bdba0_data

	_08b225_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_08b230_jump:
		ret    



_08b232_func:
		push   %ax
		finit  
		fld1   
		fldz   
		fdivrp %st,%st(1)
		fld    %st(0)
		fchs   
		fcompp 
		fnstsw %ax
		mov    $0x000002,%al
		sahf   
		je     _08b24c_jump
		mov    $0x000003,%al

	_08b24c_jump:
		finit  
		fldcw  (%esp)
		xchg   %ax,(%esp)
		pop    %ax
		ret    



_08b259_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xbff00000,%ecx
		mov    (%eax),%edi
		mov    0x000004(%eax),%esi
		xor    %ebx,%ebx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _0853a4_func
		jle    _08b28e_jump
		mov    $0x3ff00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _0853a4_func
		jge    _08b28e_jump
		mov    $0x000001,%eax
		jmp    _08b290_jump

	_08b28e_jump:
		xor    %eax,%eax

	_08b290_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08b29c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ecx,(%esp)
		mov    %ebx,%eax
		test   %edx,%edx
		jge    _08b2b5_jump
		mov    $0x00002d,%cl
		neg    %esi
		jmp    _08b2b7_jump

	_08b2b5_jump:
		mov    $0x00002b,%cl

	_08b2b7_jump:
		mov    $0x000064,%ebx
		mov    $0x000003,%edx
		cmp    %ebx,%esi
		jge    _08b2da_jump
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		cmp    %ebx,%esi
		jge    _08b2da_jump
		mov    $0x000001,%edx
		mov    %edx,%ebx

	_08b2da_jump:
		test   %eax,%eax
		jne    _08b2ea_jump
		mov    $0x000002,%eax
		cmp    $0x000003,%edx
		jne    _08b2ea_jump
		mov    %edx,%eax

	_08b2ea_jump:
		lea    0x000001(%eax),%ebp
		cmp    (%esp),%ebp
		jg     _08b336_jump
		cmp    %eax,%edx
		jg     _08b333_jump
		mov    %cl,(%edi)

	_08b2f8_jump:
		inc    %edi
		cmp    %edx,%eax
		jle    _08b303_jump
		dec    %eax
		movb   $0x000030,(%edi)
		jmp    _08b2f8_jump

	_08b303_jump:
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esi,%edx
		add    $0x000030,%eax
		sar    $0x00001f,%edx
		mov    %al,(%edi)
		mov    %esi,%eax
		idiv   %ebx
		mov    %edx,%esi
		mov    %ebx,%eax
		mov    %ebx,%edx
		mov    $0x00000a,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		inc    %edi
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _08b303_jump
		jmp    _08b336_jump

	_08b333_jump:
		lea    0x000001(%edx),%ebp

	_08b336_jump:
		mov    %ebp,%eax
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi

	_08b33d_jump:
		pop    %esi
		ret    



_08b33f_func:
		push   %esi
		mov    %ebx,%esi
		test   %ecx,%ecx
		jne    _08b354_jump
		test   %ebx,%ebx
		jg     _08b354_jump
		movb   $0x000030,(%eax)
		inc    %eax
		movb   $0x00002e,(%eax)
		inc    %eax
		pop    %esi
		ret    

	_08b354_jump:
		test   %esi,%esi
		jle    _08b365_jump
		mov    (%edx),%bl
		test   %bl,%bl
		je     _08b365_jump
		inc    %edx
		dec    %esi
		mov    %bl,(%eax)
		inc    %eax
		jmp    _08b354_jump

	_08b365_jump:
		test   %esi,%esi
		jle    _08b372_jump

	_08b369_jump:
		dec    %esi
		movb   $0x000030,(%eax)
		inc    %eax
		test   %esi,%esi
		jg     _08b369_jump

	_08b372_jump:
		movb   $0x00002e,(%eax)
		inc    %eax
		test   %ecx,%ecx
		jle    _08b386_jump

	_08b37a_jump:
		test   %esi,%esi
		je     _08b386_jump
		inc    %esi
		movb   $0x000030,(%eax)
		inc    %eax
		dec    %ecx
		jne    _08b37a_jump

	_08b386_jump:
		test   %ecx,%ecx
		jle    _08b33d_jump

	_08b38a_jump:
		mov    (%edx),%bh
		test   %bh,%bh
		je     _08b397_jump
		inc    %edx
		mov    %bh,(%eax)
		inc    %eax
		dec    %ecx
		jne    _08b38a_jump

	_08b397_jump:
		test   %ecx,%ecx
		je     _08b33d_jump
		dec    %ecx
		movb   $0x000030,(%eax)
		inc    %eax
		jmp    _08b397_jump



_08b3a2_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		cmp    %ebx,%edx
		je     _08b40b_jump
		mov    %edi,-0x000014(%ebp)
		mov    0x000001(%eax),%al
		lea    (%ebx,%edi,1),%edx
		mov    %al,-0x000010(%ebp)
		lea    (%esi,%edi,1),%eax

	_08b3c2_jump:
		dec    %eax
		dec    %edx
		mov    (%eax),%cl
		dec    %esi
		mov    %cl,(%edx)
		mov    -0x000014(%ebp),%ecx
		dec    %ebx
		cmp    %ecx,%eax
		jne    _08b3c2_jump
		xor    %ecx,%eax
		mov    (%edi),%al
		cmp    $0x00002e,%eax
		jne    _08b3e1_jump
		dec    %ebx
		movb   $0x000030,(%edi,%ebx,1)
		jmp    _08b3ff_jump

	_08b3e1_jump:
		cmp    $0x00002b,%eax
		je     _08b3eb_jump
		cmp    $0x00002d,%eax
		jne    _08b3ff_jump

	_08b3eb_jump:
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		cmp    $0x00002e,%eax
		jne    _08b3ff_jump
		movb   $0x000030,(%edi,%ebx,1)
		dec    %ebx
		mov    (%edi),%dl
		mov    %dl,(%edi,%ebx,1)

	_08b3ff_jump:
		mov    $0x000020,%edx
		mov    %edi,%eax
		call   _07fcc0_func

	_08b40b_jump:
		lea    -0x00000c(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_08b413_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000034,%esp
		mov    0x000008(%ebp),%edi
		mov    %eax,-0x000020(%ebp)
		mov    %edx,%esi
		mov    %ebx,-0x000018(%ebp)
		mov    %cl,-0x00000c(%ebp)
		mov    0x000018(%ebp),%cl
		lea    -0x00003c(%ebp),%ebx
		mov    (%edx),%eax
		mov    0x000004(%edx),%edx
		call   _08b9ea_func
		test   %eax,%eax
		je     _08b459_jump
		mov    -0x000020(%ebp),%eax
		xor    %esi,%esi
		jmp    _08b44c_jump

	_08b444_jump:
		cmp    %edi,%esi
		jge    _08b44a_jump
		mov    %ch,(%eax)

	_08b44a_jump:
		inc    %eax
		inc    %esi

	_08b44c_jump:
		mov    -0x00003c(%esi,%ebp,1),%ch
		test   %ch,%ch
		jne    _08b444_jump
		jmp    _08b5f2_jump

	_08b459_jump:
		mov    %cl,%al
		mov    %cl,-0x000010(%ebp)
		cmp    $0x000047,%eax
		jne    _08b4b5_jump
		mov    (%esi),%eax
		mov    0x000004(%esi),%edx
		call   _088f95_func
		mov    %edx,%ebx
		test   %edx,%edx
		je     _08b4ad_jump
		call   _08ba7e_func
		mov    %edx,%ebx
		call   _08baa8_func
		call   _07fdac_func
		cmp    $0xfffffffc,%eax
		jl     _08b48e_jump
		cmp    -0x000018(%ebp),%eax
		jl     _08b494_jump

	_08b48e_jump:
		movb   $0x000045,-0x000010(%ebp)
		jmp    _08b4b5_jump

	_08b494_jump:
		test   %ebx,%ebx
		jl     _08b499_jump
		inc    %eax

	_08b499_jump:
		mov    $0x000046,%dl
		mov    -0x000018(%ebp),%ebx
		mov    %dl,-0x000010(%ebp)
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    %ebx,-0x000018(%ebp)
		mov    %eax,0x00000c(%ebp)
		jmp    _08b4b5_jump

	_08b4ad_jump:
		mov    $0x000046,%ah
		mov    %edx,0x00000c(%ebp)
		mov    %ah,-0x000010(%ebp)

	_08b4b5_jump:
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		cmp    $0x000045,%eax
		jne    _08b4e9_jump
		mov    -0x000018(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		neg    %eax
		cmp    %edx,%eax
		jge    _08b4d5_jump
		mov    -0x000018(%ebp),%eax
		add    $0x000002,%eax
		cmp    %edx,%eax
		jg     _08b4e9_jump

	_08b4d5_jump:
		mov    $0x00002a,%edx
		mov    -0x000020(%ebp),%eax
		mov    %edi,%ebx
		call   _07fcc0_func
		jmp    _08b606_jump

	_08b4e9_jump:
		mov    -0x000018(%ebp),%eax
		mov    %eax,-0x000014(%ebp)
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x000045,%eax
		jne    _08b50f_jump
		mov    0x00000c(%ebp),%ecx
		test   %ecx,%ecx
		jle    _08b505_jump
		mov    -0x000018(%ebp),%eax
		inc    %eax
		jmp    _08b50c_jump

	_08b505_jump:
		jge    _08b50f_jump
		mov    -0x000018(%ebp),%eax
		add    %ecx,%eax

	_08b50c_jump:
		mov    %eax,-0x000014(%ebp)

	_08b50f_jump:
		mov    0x000004(%esi),%edx
		mov    (%esi),%eax
		mov    %edx,-0x00001c(%ebp)
		test   %edx,%edx
		je     _08b539_jump
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		cmp    $0x000045,%edx
		je     _08b539_jump
		mov    0x00000c(%ebp),%ecx
		test   %ecx,%ecx
		je     _08b539_jump
		mov    -0x00001c(%ebp),%edx
		mov    %ecx,%ebx
		call   _08bb27_func
		mov    %edx,-0x00001c(%ebp)

	_08b539_jump:
		lea    -0x00003c(%ebp),%edx
		push   %edx
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		push   %edx
		lea    -0x000028(%ebp),%edx
		lea    -0x000024(%ebp),%ecx
		push   %edx
		mov    -0x000014(%ebp),%ebx
		mov    -0x00001c(%ebp),%edx
		call   _08bc49_func
		mov    -0x000020(%ebp),%eax
		mov    -0x000028(%ebp),%esi
		lea    0x000001(%eax),%edx
		test   %esi,%esi
		je     _08b567_jump
		movb   $0x00002d,(%eax)
		jmp    _08b570_jump

	_08b567_jump:
		cmpb   $0x000000,-0x00000c(%ebp)
		je     _08b572_jump
		movb   $0x00002b,(%eax)

	_08b570_jump:
		mov    %edx,%eax

	_08b572_jump:
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		cmp    $0x000045,%edx
		jne    _08b5c5_jump
		mov    0x00000c(%ebp),%edx
		mov    -0x000014(%ebp),%ecx
		mov    %edx,%ebx
		sub    %edx,%ecx
		lea    -0x00003c(%ebp),%edx
		call   _08b33f_func
		mov    -0x000020(%ebp),%ecx
		mov    %eax,%esi
		sub    %ecx,%esi
		mov    0x000014(%ebp),%cl
		mov    %eax,%ebx
		test   %cl,%cl
		je     _08b5a6_jump
		cmp    %edi,%esi
		jge    _08b5a6_jump
		inc    %esi
		mov    %cl,(%eax)
		inc    %eax

	_08b5a6_jump:
		cmpl   $0x000000,-0x00001c(%ebp)
		je     _08b5b2_jump
		mov    0x00000c(%ebp),%edx
		sub    %edx,-0x000024(%ebp)

	_08b5b2_jump:
		mov    0x000010(%ebp),%ebx
		mov    %edi,%ecx
		mov    -0x000024(%ebp),%edx
		sub    %esi,%ecx
		call   _08b29c_func
		add    %eax,%esi
		jmp    _08b5f2_jump

	_08b5c5_jump:
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		sub    %ebx,%edx
		mov    -0x000024(%ebp),%ebx
		mov    -0x000014(%ebp),%ecx
		inc    %ebx
		add    %ecx,%ebx
		add    %ebx,%edx
		cmp    %edx,%edi
		jge    _08b5e0_jump
		lea    0x000001(%edi),%esi
		jmp    _08b5f2_jump

	_08b5e0_jump:
		mov    -0x000024(%ebp),%ebx
		lea    -0x00003c(%ebp),%edx
		mov    -0x000020(%ebp),%esi
		call   _08b33f_func
		sub    %esi,%eax
		mov    %eax,%esi

	_08b5f2_jump:
		cmp    %edi,%esi
		jg     _08b4d5_jump
		mov    -0x000020(%ebp),%eax
		mov    %edi,%ebx
		mov    %esi,%edx
		call   _08b3a2_func

	_08b606_jump:
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    $0x000014



_08b60f_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000028,%esp
		push   %edx
		mov    %eax,-0x000018(%ebp)

	_08b61d_jump:
		mov    (%eax),%bl
		xor    %edx,%edx
		mov    %bl,%dl
		cmp    $0x000020,%edx
		je     _08b632_jump
		cmp    $0x000009,%edx
		jl     _08b635_jump
		cmp    $0x00000d,%edx
		jg     _08b635_jump

	_08b632_jump:
		inc    %eax
		jmp    _08b61d_jump

	_08b635_jump:
		xor    %cl,%cl
		and    $_0000ff_case,%ebx
		lea    0x000001(%eax),%edx
		cmp    $0x00002b,%ebx
		je     _08b64c_jump
		cmp    $0x00002d,%ebx
		jne    _08b64e_jump
		mov    $0x000001,%cl

	_08b64c_jump:
		mov    %edx,%eax

	_08b64e_jump:
		xor    %ebx,%ebx
		mov    $0x000030,%dh
		mov    %ebx,-0x000014(%ebp)

	_08b655_jump:
		mov    (%eax),%dl
		mov    %cl,%ch
		movzbl %dl,%esi
		and    $0x000008,%ch
		inc    %eax
		cmp    $0x00002e,%esi
		jne    _08b671_jump
		movzbl %ch,%esi
		test   %esi,%esi
		jne    _08b69e_jump
		or     $0x000008,%cl
		jmp    _08b655_jump

	_08b671_jump:
		cmp    $0x000030,%esi
		jl     _08b69e_jump
		cmp    $0x000039,%esi
		jg     _08b69e_jump
		movzbl %ch,%esi
		test   %esi,%esi
		je     _08b685_jump
		incl   -0x000014(%ebp)

	_08b685_jump:
		or     %dl,%dh
		movzbl %dh,%esi
		cmp    $0x000030,%esi
		je     _08b699_jump
		cmp    $0x000011,%ebx
		jge    _08b698_jump
		mov    %dl,-0x000038(%ebx,%ebp,1)

	_08b698_jump:
		inc    %ebx

	_08b699_jump:
		or     $0x000004,%cl
		jmp    _08b655_jump

	_08b69e_jump:
		mov    %cl,%dh
		and    $0x000004,%dh
		movzbl %dh,%edi
		xor    %esi,%esi
		test   %edi,%edi
		je     _08b734_jump
		and    $_0000ff_case,%edx
		cmp    $0x000065,%edx
		je     _08b6c4_jump
		cmp    $0x000045,%edx
		jne    _08b730_jump

	_08b6c4_jump:
		lea    -0x000001(%eax),%edx
		mov    %edx,-0x00001c(%ebp)
		mov    (%eax),%dl
		lea    0x000001(%eax),%edi
		and    $_0000ff_case,%edx
		cmp    $0x00002b,%edx
		je     _08b6e2_jump
		cmp    $0x00002d,%edx
		jne    _08b6e4_jump
		or     $0x000002,%cl

	_08b6e2_jump:
		mov    %edi,%eax

	_08b6e4_jump:
		and    $0x0000fb,%cl

	_08b6e7_jump:
		mov    (%eax),%dl
		and    $_0000ff_case,%edx
		cmp    $0x000030,%edx
		jl     _08b70f_jump
		cmp    $0x000039,%edx
		jg     _08b70f_jump
		cmp    $0x0003e8,%esi
		jge    _08b709_jump
		imul   $0x00000a,%esi,%esi
		add    %esi,%edx
		lea    -0x000030(%edx),%esi

	_08b709_jump:
		or     $0x000004,%cl
		inc    %eax
		jmp    _08b6e7_jump

	_08b70f_jump:
		mov    %cl,%dl
		and    $0x000002,%dl
		and    $_0000ff_case,%edx
		je     _08b71e_jump
		neg    %esi

	_08b71e_jump:
		mov    %cl,%dl
		and    $0x000004,%dl
		and    $_0000ff_case,%edx
		jne    _08b731_jump
		mov    -0x00001c(%ebp),%eax
		jmp    _08b731_jump

	_08b730_jump:
		dec    %eax

	_08b731_jump:
		mov    %eax,-0x000018(%ebp)

	_08b734_jump:
		sub    -0x000014(%ebp),%esi
		cmp    $0x000011,%ebx
		jle    _08b746_jump
		sub    $0x000011,%ebx
		add    %ebx,%esi
		mov    $0x000011,%ebx

	_08b746_jump:
		test   %ebx,%ebx
		jle    _08b759_jump
		xor    %eax,%eax
		mov    -0x000039(%ebx,%ebp,1),%al
		cmp    $0x000030,%eax
		jne    _08b759_jump
		inc    %esi
		dec    %ebx
		jmp    _08b746_jump

	_08b759_jump:
		test   %ebx,%ebx
		jne    _08b768_jump
		mov    %ebx,-0x000024(%ebp)
		mov    %ebx,-0x000020(%ebp)
		jmp    _08b801_jump

	_08b768_jump:
		xor    %ah,%ah
		lea    -0x000024(%ebp),%edx
		mov    %ah,-0x000038(%ebx,%ebp,1)
		lea    -0x000038(%ebp),%eax
		call   _08a610_func
		lea    -0x000001(%esi,%ebx,1),%eax
		cmp    $0x000134,%eax
		jle    _08b7bb_jump
		call   _086ebf_func
		mov    %cl,%al
		and    $0x000001,%al
		and    $_0000ff_case,%eax
		je     _08b7a9_jump
		mov    _0c1a50_data,%eax
		mov    _0c1a54_data,%edx
		call   _0802de_func
		mov    %eax,-0x000024(%ebp)
		jmp    _08b7fe_jump

	_08b7a9_jump:
		mov    _0c1a50_data,%eax
		mov    %eax,-0x000024(%ebp)
		mov    _0c1a54_data,%eax
		mov    %eax,-0x000020(%ebp)
		jmp    _08b801_jump

	_08b7bb_jump:
		cmp    $0xfffffecc,%eax
		jge    _08b7ce_jump
		xor    %edx,%edx
		call   _086ebf_func
		mov    %edx,-0x000024(%ebp)
		jmp    _08b7fe_jump

	_08b7ce_jump:
		test   %esi,%esi
		je     _08b7e5_jump
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %esi,%ebx
		call   _08bb27_func
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000020(%ebp)

	_08b7e5_jump:
		mov    %cl,%al
		and    $0x000001,%al
		and    $_0000ff_case,%eax
		je     _08b801_jump
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _0802de_func
		mov    %eax,-0x000024(%ebp)

	_08b7fe_jump:
		mov    %edx,-0x000020(%ebp)

	_08b801_jump:
		mov    -0x00003c(%ebp),%edi
		test   %edi,%edi
		je     _08b80d_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,(%edi)

	_08b80d_jump:
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_08b81c_func:
		jmp    _08be2a_jump



_08b821_func:
		push   %edx
		cmp    $0x000005,%eax
		jbe    _08b82b_jump
		xor    %eax,%eax
		pop    %edx
		ret    

	_08b82b_jump:
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $_0bd974_data,%eax
		pop    %edx
		ret    



_08b840_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    %edx,%ebx
		cmpl   $0x000000,0x000008(%edx)
		jne    _08b856_jump
		mov    %ebx,%eax
		call   _087774_func

	_08b856_jump:
		mov    0x00000d(%ebx),%ah
		xor    %edi,%edi
		test   $0x000004,%ah
		je     _08b872_jump
		mov    %ah,%dl
		and    $0x0000f9,%dl
		mov    %dl,%dh
		or     $0x000002,%dh
		mov    $0x000001,%edi
		mov    %dh,0x00000d(%ebx)

	_08b872_jump:
		mov    %ecx,%ebp
		xor    %esi,%esi

	_08b876_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		test   %eax,%eax
		je     _08b88d_jump
		mov    %ebx,%edx
		inc    %ecx
		call   _08092a_func
		cmp    $0xffffffff,%eax
		jne    _08b876_jump
		mov    %eax,%esi

	_08b88d_jump:
		test   %edi,%edi
		je     _08b8ab_jump
		mov    0x00000d(%ebx),%al
		and    $0x0000f9,%al
		mov    %al,%ah
		or     $0x000004,%ah
		mov    %ah,0x00000d(%ebx)
		test   %esi,%esi
		jne    _08b8ab_jump
		mov    %ebx,%eax
		call   _08780a_func
		mov    %eax,%esi

	_08b8ab_jump:
		test   %esi,%esi
		jne    _08b8b3_jump
		mov    %ecx,%esi
		sub    %ebp,%esi

	_08b8b3_jump:
		mov    %esi,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_08b8bb_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		cmpl   $0x000000,_0bfd1c_data
		jne    _08b986_jump
		mov    _0bdbd5_data,%fs
		xor    %ecx,%ecx
		xor    %dl,%dl
		mov    %fs,%eax
		mov    _0bdbd1_data,%edi
		mov    %eax,%es
		mov    %edi,%eax

	_08b8e6_jump:
		cmp    %es:(%eax),%dl
		je     _08b8fe_jump

	_08b8eb_jump:
		mov    %es:(%eax),%dh
		lea    0x000001(%eax),%ebx
		cmp    %dh,%dl
		je     _08b8f9_jump
		mov    %ebx,%eax
		jmp    _08b8eb_jump

	_08b8f9_jump:
		inc    %ecx
		mov    %ebx,%eax
		jmp    _08b8e6_jump

	_08b8fe_jump:
		sub    %edi,%eax
		jne    _08b907_jump
		mov    $0x000001,%eax

	_08b907_jump:
		call   _085814_func
		mov    %eax,%edx
		mov    %eax,%ebx
		test   %eax,%eax
		je     _08b986_jump
		mov    %ecx,%eax
		shl    $0x000002,%eax
		add    $0x000004,%eax
		add    %ecx,%eax
		call   _085814_func
		test   %eax,%eax
		je     _08b97f_jump
		mov    %eax,_0bfd1c_data
		xor    %esi,%esi
		mov    %fs,%eax
		xor    %ecx,%ecx
		mov    %eax,%es
		mov    %edi,%eax

	_08b93a_jump:
		cmpb   $0x000000,%es:(%eax)
		je     _08b95a_jump
		mov    _0bfd1c_data,%edx
		mov    %ebx,(%ecx,%edx,1)

	_08b949_jump:
		mov    %es:(%eax),%dl
		inc    %eax
		mov    %dl,(%ebx)
		inc    %ebx
		test   %dl,%dl
		jne    _08b949_jump
		add    $0x000004,%ecx
		inc    %esi
		jmp    _08b93a_jump

	_08b95a_jump:
		mov    _0bfd1c_data,%edx
		movl   $0x000000,(%ecx,%edx,1)
		add    $0x000004,%ecx
		add    %ecx,%edx
		mov    %esi,%ebx
		mov    %edx,_0bfd20_data
		mov    %edx,%eax
		xor    %edx,%edx
		call   _07fcc0_func
		jmp    _08b986_jump

	_08b97f_jump:
		mov    %edx,%eax
		call   _08590f_func

	_08b986_jump:
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08b990_func:
		push   %eax
		sub    $0x000076,%esp
		fstpt  0x00006c(%esp)
		fnsave (%esp)
		fldt   0x00001c(%esp)
		fldt   0x00006c(%esp)
		call   _08be30_func
		fnstsw %ax
		fstpt  0x00001c(%esp)
		and    $_0000ff_case,%ax
		or     0x000004(%esp),%ax
		mov    %ax,0x000004(%esp)
		frstor (%esp)
		add    $0x000076,%esp
		pop    %eax
		ret    



_08b9c4_func:
		cmpb   $0x000000,_0bfddc_data
		je     _08b9e7_jump
		and    $0x00ffff,%edx
		push   %edx
		push   %eax
		int3   
		jmp    _08b9de_jump

	_08b9de_jump:
		mov    $0x000001,%eax
		add    $0x000008,%esp
		ret    

	_08b9e7_jump:
		xor    %eax,%eax
		ret    



_08b9ea_func:
		sub    $0x000008,%esp
		mov    %edx,0x000004(%esp)
		mov    %eax,(%esp)
		mov    0x000006(%esp),%eax
		and    $0x007ff0,%eax
		and    $0x00ffff,%eax
		cmp    $0x007ff0,%eax
		jne    _08ba66_jump
		mov    0x000006(%esp),%edx
		xor    %dl,%dl
		mov    %ebx,%eax
		and    $0x000080,%dh
		and    $0x00ffff,%edx
		je     _08ba22_jump
		lea    0x000001(%ebx),%eax
		movb   $0x00002d,(%ebx)

	_08ba22_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000002(%esp),%dx
		mov    (%esp),%bx
		or     %edx,%ebx
		xor    %edx,%edx
		mov    0x000004(%esp),%dx
		or     %edx,%ebx
		mov    0x000006(%esp),%edx
		xor    %dh,%dh
		and    $0x00000f,%dl
		and    $0x00ffff,%edx
		or     %ebx,%edx
		jne    _08ba55_jump
		mov    _0c1968_data,%edx
		jmp    _08ba5b_jump

	_08ba55_jump:
		mov    _0c196c_data,%edx

	_08ba5b_jump:
		mov    %edx,(%eax)
		mov    $0x000001,%eax
		add    $0x000008,%esp
		ret    

	_08ba66_jump:
		xor    %eax,%eax
		add    $0x000008,%esp
		ret    



_08ba7e_func:
		push   %ebx
		push   %ecx
		test   %edx,%edx
		jg     _08ba91_jump
		mov    $0x00000b,%ebx
		call   _08c030_func
		pop    %ecx
		pop    %ebx
		ret    

	_08ba91_jump:
		mov    $0x1526e50e,%ebx
		mov    $0x3fdbcb7b,%ecx
		call   _08c072_func
		call   _07f75f_func
		pop    %ecx
		pop    %ebx
		ret    



_08baa8_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		sub    $0x000008,%esp
		lea    -0x000010(%ebp),%ebx
		call   _08905c_func
		test   %edx,%edx
		jge    _08bad4_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0xbff00000,%ecx
		xor    %ebx,%ebx
		call   _07f5a8_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)

	_08bad4_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		lea    -0x000008(%ebp),%esp
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_08bae1_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		sub    $0x000008,%esp
		mov    0x000008(%ebp),%esi
		mov    %ebx,-0x00000c(%ebp)
		mov    %ecx,-0x000008(%ebp)
		mov    %edx,%ecx
		cmp    %edx,%eax
		je     _08bb0c_jump
		mov    %edx,%ebx
		mov    -0x000008(%ebp),%edx
		sub    %eax,%ebx
		mov    -0x00000c(%ebp),%eax
		call   _08bb27_func
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)

	_08bb0c_jump:
		lea    -0x00000c(%ebp),%eax
		mov    %esi,%edx
		call   _08c24e_func
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _08c214_func
		lea    -0x000004(%ebp),%esp
		pop    %esi
		pop    %ebp
		ret    $0x000004



_08bb27_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)
		mov    %ebx,(%esp)
		mov    _0c1af0_data,%ebx
		mov    _0c1af4_data,%ecx
		call   _0853a4_func
		jne    _08bb57_jump
		mov    _0c1b04_data,%eax
		mov    _0c1b00_data,%ebp
		jmp    _08bb7b_jump

	_08bb57_jump:
		mov    0x000004(%esp),%edx
		mov    _0c1af8_data,%ebx
		mov    _0c1afc_data,%ecx
		mov    %ebp,%eax
		call   _0853a4_func
		jne    _08bb7f_jump
		mov    _0c1b0c_data,%eax
		mov    _0c1b08_data,%ebp

	_08bb7b_jump:
		mov    %eax,0x000004(%esp)

	_08bb7f_jump:
		mov    (%esp),%edx
		mov    $_0c1b48_data,%esi
		test   %edx,%edx
		jge    _08bbb6_jump
		mov    %edx,%edi
		neg    %edi
		cmp    $0x000134,%edi
		jle    _08bbe3_jump
		mov    0x000004(%esp),%edx
		mov    _0c1b4a_data,%ebx
		mov    _0c1b4e_data,%ecx
		mov    %ebp,%eax
		sub    $0x0000d8,%edi
		call   _0800d8_func
		jmp    _08bbdd_jump

	_08bbb6_jump:
		mov    %edx,%edi
		cmp    $0x000134,%edx
		jle    _08bbe3_jump
		mov    0x000004(%esp),%edx
		mov    _0c1b4a_data,%ebx
		mov    _0c1b4e_data,%ecx
		mov    %ebp,%eax
		sub    $0x0000d8,%edi
		call   _07f75f_func

	_08bbdd_jump:
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)

	_08bbe3_jump:
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx

	_08bbea_jump:
		movswl (%esi),%eax
		cmp    %eax,%edi
		jl     _08bc06_jump
		mov    %ecx,%edx
		sub    %eax,%edi
		mov    %ebx,%eax
		mov    0x000006(%esi),%ecx
		mov    0x000002(%esi),%ebx
		call   _07f75f_func
		mov    %eax,%ebx
		mov    %edx,%ecx

	_08bc06_jump:
		test   %edi,%edi
		je     _08bc17_jump
		movswl (%esi),%eax
		cmp    $0x000001,%eax
		je     _08bbea_jump
		add    $0x00000a,%esi
		jmp    _08bbea_jump

	_08bc17_jump:
		cmpl   $0x000000,(%esp)
		jge    _08bc2a_jump
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		call   _0800d8_func
		jmp    _08bc35_jump

	_08bc2a_jump:
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		call   _07f75f_func

	_08bc35_jump:
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08bc49_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		push   %eax
		push   %edx
		mov    %ebx,%esi
		mov    %ecx,%edi
		mov    0x000008(%ebp),%eax
		mov    0x000010(%ebp),%ebx
		movl   $0x000000,(%eax)
		mov    -0x000038(%ebp),%eax
		movl   $0x000000,(%ecx)
		call   _08b9ea_func
		test   %eax,%eax
		je     _08bc7d_jump
		mov    0x000010(%ebp),%eax
		jmp    _08be21_jump

	_08bc7d_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %dx,-0x000020(%ebp)
		mov    %bx,-0x00001e(%ebp)
		mov    %dx,-0x00001a(%ebp)
		mov    -0x00003c(%ebp),%edx
		mov    %cx,-0x00001c(%ebp)
		test   %edx,%edx
		je     _08bddc_jump
		jge    _08bcb7_jump
		mov    0x000008(%ebp),%eax
		movl   $0xffffffff,(%eax)
		mov    -0x000038(%ebp),%eax
		call   _0802de_func
		mov    %eax,-0x000038(%ebp)
		mov    %edx,-0x00003c(%ebp)

	_08bcb7_jump:
		mov    -0x000038(%ebp),%eax
		mov    -0x00003c(%ebp),%edx
		mov    %edi,%ebx
		call   _086cf6_func
		mov    (%edi),%eax
		mov    %eax,-0x000010(%ebp)
		test   %eax,%eax
		jge    _08bcd2_jump
		neg    %eax
		mov    %eax,-0x000010(%ebp)

	_08bcd2_jump:
		mov    -0x000010(%ebp),%edx
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		add    $0x000005,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    (%edi),%ecx
		mov    %eax,-0x000010(%ebp)
		test   %ecx,%ecx
		jge    _08bcfa_jump
		neg    %eax
		mov    %eax,-0x000010(%ebp)

	_08bcfa_jump:
		mov    -0x000010(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		mov    %eax,(%edi)
		cmp    $0x000046,%edx
		jne    _08bd09_jump
		add    %eax,%esi

	_08bd09_jump:
		test   %esi,%esi
		jl     _08bda2_jump
		cmp    $0x000010,%esi
		jle    _08bd1b_jump
		mov    $0x000010,%esi

	_08bd1b_jump:
		lea    -0x000018(%ebp),%ebx
		xor    %ah,%ah
		mov    -0x00003c(%ebp),%edx
		mov    %ah,-0x00000c(%ebp)
		mov    -0x000038(%ebp),%eax
		call   _08905c_func
		test   %edx,%edx
		jne    _08bd40_jump
		mov    -0x000010(%ebp),%ecx
		cmp    %ecx,%esi
		jle    _08bd40_jump
		mov    $0x000001,%dl
		mov    %ecx,%esi
		mov    %dl,-0x00000c(%ebp)

	_08bd40_jump:
		lea    -0x000020(%ebp),%eax
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%ecx
		push   %eax
		mov    %esi,%edx
		mov    (%edi),%eax
		call   _08bae1_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _08bda2_jump
		mov    (%edi),%ebx
		add    %eax,%ebx
		mov    0x00000c(%ebp),%ecx
		mov    %ebx,(%edi)
		cmp    $0x000046,%ecx
		je     _08bd6d_jump
		cmpb   $0x000000,-0x00000c(%ebp)
		je     _08bd6f_jump

	_08bd6d_jump:
		add    %edx,%esi

	_08bd6f_jump:
		cmp    $0x000001,%esi
		jge    _08bd7b_jump
		mov    $0x000001,%esi
		jmp    _08bd85_jump

	_08bd7b_jump:
		cmp    $0x000010,%esi
		jle    _08bd85_jump
		mov    $0x000010,%esi

	_08bd85_jump:
		lea    -0x000020(%ebp),%eax
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%ecx
		push   %eax
		mov    %esi,%edx
		mov    (%edi),%eax
		call   _08bae1_func
		test   %eax,%eax
		jle    _08bda2_jump
		mov    (%edi),%eax
		inc    %eax
		inc    %esi
		mov    %eax,(%edi)

	_08bda2_jump:
		mov    -0x000020(%ebp),%edx
		mov    -0x000022(%ebp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		or     %edx,%eax
		mov    -0x00001e(%ebp),%edx
		sar    $0x000010,%edx
		or     %edx,%eax
		mov    -0x00001c(%ebp),%edx
		sar    $0x000010,%edx
		or     %edx,%eax
		jne    _08bddc_jump
		mov    0x000008(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    0x00000c(%ebp),%edx
		movl   $0x000000,(%edi)
		cmp    $0x000046,%edx
		jne    _08bddc_jump
		sub    -0x000010(%ebp),%esi

	_08bddc_jump:
		cmp    $0x000001,%esi
		jge    _08bde8_jump
		mov    $0x000001,%esi
		jmp    _08bdf2_jump

	_08bde8_jump:
		cmp    $0x000011,%esi
		jle    _08bdf2_jump
		mov    $0x000011,%esi

	_08bdf2_jump:
		lea    -0x000034(%ebp),%edx
		lea    -0x000020(%ebp),%eax
		mov    0x000010(%ebp),%edi
		mov    %esi,%ebx
		lea    -0x000034(%ebp),%esi
		call   _08c2b9_func
		push   %edi

	_08be06_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _08be1e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _08be06_jump

	_08be1e_jump:
		pop    %edi
		mov    %edi,%eax

	_08be21_jump:
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    $0x00000c

	_08be2a_jump:
		xor    %eax,%eax
		ret    



_08be30_func:
		push   %eax
		push   %ecx
		push   %edx
		sub    $0x000024,%esp
		fstpt  0x00000c(%esp)
		fstpt  (%esp)
		mov    0x000004(%esp),%ecx
		add    %ecx,%ecx
		jae    _08c020_jump
		mov    0x000010(%esp),%eax
		add    %eax,%eax
		jae    _08c020_jump
		mov    0x000008(%esp),%ecx
		mov    0x000014(%esp),%eax
		and    $0x007fff,%ecx
		je     _08c020_jump
		and    $0x007fff,%eax
		je     _08c020_jump
		cmp    $0x007fff,%ecx
		je     _08c020_jump
		cmp    $0x007fff,%eax
		je     _08c020_jump
		fldt   0x00000c(%esp)
		fabs   
		fldt   (%esp)
		fabs   
		fnstcw 0x000018(%esp)
		mov    0x000018(%esp),%edx
		or     $0x00033f,%edx
		and    $0x00f3ff,%edx
		mov    %edx,0x00001c(%esp)
		fldcw  0x00001c(%esp)
		xor    %edx,%edx
		fcom   %st(1)
		push   %eax
		fnstsw %ax
		sahf   
		pop    %eax
		jb     _08bec0_jump
		fxch   %st(1)
		inc    %edx

	_08bec0_jump:
		push   %eax
		mov    $0x00000f,%eax
		call   _08716f_func
		pop    %eax
		flds   _0c1d48_data
		fmul   %st(1),%st
		fistpl 0x000020(%esp)
		mov    0x000020(%esp),%ecx
		shl    $0x000004,%ecx
		fildl  0x000020(%esp)
		fmuls  _0c1d4c_data
		fld    %st(1)
		fsub   %st(1),%st
		fxch   %st(1)
		fmulp  %st,%st(2)
		fldl   _0c1d04_data
		faddp  %st,%st(2)
		push   %eax
		mov    $0x00000f,%eax
		call   _08716f_func
		pop    %eax
		fld    %st(0)
		fmul   %st(1),%st
		fld    %st(0)
		fmul   %st(1),%st
		fld    %st(0)
		fmul   %st(1),%st
		fldt   _0c1d82_data
		fldt   _0c1d78_data
		fxch   %st(1)
		fmul   %st(2),%st
		fldt   _0c1d6e_data
		fxch   %st(2)
		fmul   %st(3),%st
		fldt   _0c1d64_data
		fxch   %st(2)
		fmul   %st(5),%st
		fxch   %st(3)
		fmulp  %st,%st(4)
		fldt   _0c1d5a_data
		fxch   %st(3)
		faddp  %st,%st(4)
		mov    0x000014(%esp),%eax
		fldt   _0c1d50_data
		fxch   %st(1)
		shl    $0x000010,%eax
		fmul   %st(6),%st
		fxch   %st(2)
		add    %eax,%eax
		fmul   %st(5),%st
		fxch   %st(3)
		adc    %edx,%edx
		fmulp  %st,%st(5)
		fxch   %st(2)
		mov    0x000008(%esp),%eax
		fmul   %st(5),%st
		fxch   %st(2)
		shl    $0x000010,%eax
		fmulp  %st,%st(5)
		fxch   %st(2)
		faddp  %st,%st(3)
		add    %eax,%eax
		faddp  %st,%st(1)
		adc    %edx,%edx
		faddp  %st,%st(2)
		faddp  %st,%st(1)
		fmul   %st(1),%st
		faddp  %st,%st(1)
		fldt   _0c1d8c_data(%ecx)
		faddp  %st,%st(1)
		jmp    *_0c1d14_data(,%edx,4)



_08bf90_func:
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08bf9b_func:
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08bfa8_func:
		fldt   _0c1d34_data
		fsubp  %st,%st(1)
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08bfbb_func:
		fldt   _0c1d34_data
		fsubp  %st,%st(1)
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08bfd0_func:
		fldt   _0c1d3e_data
		fsubp  %st,%st(1)
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08bfe3_func:
		fldt   _0c1d3e_data
		fsubp  %st,%st(1)
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08bff8_func:
		fldt   _0c1d3e_data
		faddp  %st,%st(1)
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08c00b_func:
		fldt   _0c1d3e_data
		faddp  %st,%st(1)
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    

	_08c020_jump:
		fldt   (%esp)
		fldt   0x00000c(%esp)
		fpatan 
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08c030_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		mov    %ebx,%eax
		and    $0x00001f,%eax
		cmp    $0x000008,%eax
		je     _08c050_jump
		test   %edx,%edx
		jne    _08c050_jump
		or     $0x001080,%ax
		jmp    _08c054_jump

	_08c050_jump:
		or     $0x001040,%ax

	_08c054_jump:
		lea    -0x000008(%ebp),%edx
		call   _0869d4_func
		mov    %ebp,%esp
		pop    %ebp
		ret    



_08c072_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		test   %edx,%edx
		jg     _08c093_jump
		mov    $0x00000a,%ebx
		call   _08c030_func
		jmp    _08c203_jump

	_08c093_jump:
		cmpb   $0x000000,_0bd971_data
		je     _08c0a8_jump
		mov    %edi,%eax
		call   _08c3da_func
		jmp    _08c203_jump

	_08c0a8_jump:
		lea    -0x000024(%ebp),%ebx
		mov    %edi,%eax
		mov    $0xbfe00000,%ecx
		call   _086cf6_func
		mov    %eax,%edi
		xor    %ebx,%ebx
		mov    %edx,%esi
		call   _07f5a8_func
		mov    $0x667f3bcd,%ebx
		mov    $0x3fe6a09e,%ecx
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _0853a4_func
		jle    _08c0f7_jump
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _07f5a8_func
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		jmp    _08c104_jump

	_08c0f7_jump:
		mov    -0x000024(%ebp),%edx
		mov    -0x000018(%ebp),%edi
		dec    %edx
		mov    -0x000014(%ebp),%esi
		mov    %edx,-0x000024(%ebp)

	_08c104_jump:
		mov    $0x3fe00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _07f75f_func
		mov    $0x3fe00000,%ecx
		xor    %ebx,%ebx
		call   _07f5a8_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		call   _0800d8_func
		mov    %eax,-0x000018(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edx,-0x000014(%ebp)
		call   _07f75f_func
		mov    %eax,%edi
		mov    %edx,%esi
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07f75f_func
		mov    $0x000002,%ecx
		mov    $_0c1b10_data,%ebx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _086e43_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _07f75f_func
		mov    $0x000003,%ecx
		mov    $_0c1b28_data,%ebx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _086e43_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _0800d8_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		call   _07f5a8_func
		mov    -0x000024(%ebp),%ebx
		mov    %eax,%edi
		mov    %edx,%esi
		test   %ebx,%ebx
		je     _08c207_jump
		mov    %ebx,%eax
		mov    $0xbf2bd010,%ecx
		call   _07f562_func
		mov    $0x5c610ca9,%ebx
		mov    %eax,-0x000020(%ebp)
		mov    %edx,-0x00001c(%ebp)
		call   _07f75f_func
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07f5a8_func
		mov    $0x3fe63000,%ecx
		mov    %eax,%edi
		mov    %edx,%esi
		xor    %ebx,%ebx
		mov    -0x000020(%ebp),%eax
		mov    -0x00001c(%ebp),%edx
		call   _07f75f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07f5a8_func

	_08c203_jump:
		mov    %eax,%edi
		mov    %edx,%esi

	_08c207_jump:
		mov    %edi,%eax
		mov    %esi,%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_08c214_func:
		push   %edi
		push   %ecx
		call   _08c323_data
		inc    %eax
		lea    (%edi,%eax,8),%edi
		mov    (%edx),%ecx
		mov    0x000004(%edx),%edx
		sub    %eax,%eax

	_08c226_jump:
		cmp    %cs:(%edi),%edx
		jne    _08c22f_jump
		cmp    %cs:0x000004(%edi),%ecx

	_08c22f_jump:
		jb     _08c237_jump
		add    $0x000008,%edi
		inc    %eax
		jmp    _08c226_jump

	_08c237_jump:
		sub    $0x000008,%edi

	_08c23a_jump:
		cmp    %cs:(%edi),%edx
		jne    _08c243_jump
		cmp    %cs:0x000004(%edi),%ecx

	_08c243_jump:
		jae    _08c24b_jump
		sub    $0x000008,%edi
		dec    %eax
		jmp    _08c23a_jump

	_08c24b_jump:
		pop    %ecx
		pop    %edi
		ret    



_08c24e_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		push   %esi
		push   %edx
		mov    %eax,%ebp
		mov    0x000000(%ebp),%ecx
		mov    0x000004(%ebp),%ebx
		mov    %ebx,%ebp
		and    $0xfff00000,%ebp
		xor    %ebp,%ebx
		xor    $0x100000,%ebx
		shr    $0x000014,%ebp
		sub    $0x000433,%ebp
		je     _08c2ac_jump
		jbe    _08c282_jump

	_08c279_jump:
		shl    %ecx
		rcl    %ebx
		dec    %ebp
		jne    _08c279_jump
		jmp    _08c2ac_jump

	_08c282_jump:
		sub    %eax,%eax
		sub    %esi,%esi

	_08c286_jump:
		shr    %ebx
		rcr    %ecx
		rcr    %eax
		adc    %esi,%esi
		inc    %ebp
		jne    _08c286_jump
		cmp    $0x80000000,%eax
		jb     _08c2ac_jump
		jne    _08c2a6_jump
		or     %esi,%esi
		jne    _08c2a6_jump
		test   $0x000001,%ecx
		je     _08c2ac_jump

	_08c2a6_jump:
		add    $0x000001,%ecx
		adc    $0x000000,%ebx

	_08c2ac_jump:
		pop    %ebp
		mov    %ecx,0x000000(%ebp)
		mov    %ebx,0x000004(%ebp)
		pop    %esi
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08c2b9_func:
		push   %ebp
		push   %edi
		push   %ecx
		push   %ebx
		mov    %eax,%ebp
		mov    0x000000(%ebp),%ecx
		mov    0x000004(%ebp),%eax
		mov    %edx,%ebp
		add    %ebx,%ebp
		movb   $0x000000,0x000000(%ebp)
		push   %eax

	_08c2ce_jump:
		pop    %eax
		mov    $0x002710,%edi
		sub    %edx,%edx
		or     %eax,%eax
		jne    _08c2e1_jump
		or     %ecx,%ecx
		jne    _08c2e3_jump
		push   %eax
		jmp    _08c2f9_jump

	_08c2e1_jump:
		div    %edi

	_08c2e3_jump:
		xchg   %eax,%ecx
		div    %edi
		xchg   %eax,%ecx
		push   %eax
		mov    %edx,%eax
		mov    $0x000064,%dl
		div    %dl
		mov    %ah,%dl
		mov    $0x000000,%ah
		aam    $0x00000a
		xchg   %eax,%edx
		mov    $0x000000,%ah
		aam    $0x00000a

	_08c2f9_jump:
		add    $0x003030,%ax
		add    $0x003030,%dx
		sub    $0x000004,%ebp
		mov    %al,0x000003(%ebp)
		dec    %ebx
		je     _08c31d_jump
		mov    %ah,0x000002(%ebp)
		dec    %ebx
		je     _08c31d_jump
		mov    %dl,0x000001(%ebp)
		dec    %ebx
		je     _08c31d_jump
		mov    %dh,0x000000(%ebp)
		dec    %ebx
		jne    _08c2ce_jump

	_08c31d_jump:
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %ebp
		ret    

.data

_08c323_data:
		.ascii  "\xe8\xb0"
		.fill   0xf
		.ascii  "\x01"
		.fill   0x7
		.ascii  "\x0a"
		.fill   0x7
		.ascii  "\x64"
		.fill   0x7
		.ascii  "\xe8\x03"
		.fill   0x6
		.ascii  "\x10\x27"
		.fill   0x6
		.ascii  "\xa0\x86\x01"
		.fill   0x5
		.ascii  "\x40\x42\x0f"
		.fill   0x5

_08c36c_data:
		.ascii  "\x80\x96\x98"
		.fill   0x6
		.ascii  "\xe1\xf5\x05"
		.fill   0x5
		.ascii  "\xca\x9a\x3b\x02"
		.fill   0x4
		.ascii  "\xe4\x0b\x54\x17"
		.fill   0x4
		.ascii  "\xe8\x76\x48\xe8"
		.fill   0x4
		.ascii  "\x10\xa5\xd4\x18\x09\x00\x00\x00"
		.ascii  "\xa0\x72\x4e\xf3\x5a\x00\x00\x00"
		.ascii  "\x40\x7a\x10\x7e\x8d\x03\x00\x00"
		.ascii  "\x80\xc6\xa4\xf2\x86\x23\x00\x00"
		.ascii  "\x00\xc1"
		.ascii   "oxEc"
		.ascii  "\x01\x00\x00\x8a\x5d\xb3\xb6\xe0"
		.ascii  "\x0d\x00\x00\x64\xa7\x04\x23\xc7"
		.ascii  "\x8a\x00\x00\xe8\x89\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff"

_08c3d8_data:
		.ascii  "\x5f\xc3"

.text



_08c3da_func:
		fldln2 
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		fyl2x  
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    

.data

_090000_data:
		.ascii  "\x01\x01\x01"
		.fill   0xd

_090010_data:
		.fill   0x4

_090014_data:
		.ascii  "\xff\xff\x00\x00"

_090018_data:
		.fill   0x4

_09001c_data:
		.fill   0x4

_090020_data:
		.fill   0x4

_090024_data:
		.fill   0x4

_090028_data:
		.fill   0xc
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e

_091914_data:
		.fill   0xe

_091922_data:
		.fill   0xc

_09192e_data:
		.fill   0x4

_091932_data:
		.fill   0x4

_091936_data:
		.fill   0x4

_09193a_data:
		.fill   0x4

_09193e_data:
		.fill   0x4

_091942_data:
		.fill   0x4

_091946_data:
		.fill   0x4

_09194a_data:
		.fill   0x10

_09195a_data:
		.fill   0x4
		.ascii  "\x80\x3e\x00\x00\x00\x7d\x00\x00"
		.ascii  "\x80\xbb\x00\x00"

_09196a_data:
		.ascii  "\x00"

_09196b_data:
		.ascii  "\x00"

_09196c_data:
		.ascii  "\x00"

_09196d_data:
		.ascii  "\x00"

_09196e_data:
		.ascii  "\x00"

_09196f_data:
		.fill   0x191

_091b00_data:
		.fill   0x4
		.ascii  "\x40\x01\x00\x00\x80\x02\x00\x00"
		.ascii  "\xc0\x03\x00\x00\x00\x05\x00\x00"
		.ascii  "\x40\x06\x00\x00\x80\x07\x00\x00"
		.ascii  "\xc0\x08\x00\x00\x00\x0a\x00\x00"
		.ascii  "\x40\x0b\x00\x00\x80\x0c\x00\x00"
		.ascii  "\xc0\x0d\x00\x00\x00\x0f\x00\x00"
		.ascii  "\x40\x10\x00\x00\x80\x11\x00\x00"
		.ascii  "\xc0\x12\x00\x00\x00\x14\x00\x00"
		.ascii  "\x40\x15\x00\x00\x80\x16\x00\x00"
		.ascii  "\xc0\x17\x00\x00\x00\x19\x00\x00"
		.ascii  "\x40\x1a\x00\x00\x80\x1b\x00\x00"
		.ascii  "\xc0\x1c\x00\x00\x00\x1e\x00\x00"
		.ascii  "\x40\x1f\x00\x00\x80\x20\x00\x00"
		.ascii  "\xc0\x21\x00\x00\x00\x23\x00\x00"
		.ascii  "\x40\x24\x00\x00\x80\x25\x00\x00"
		.ascii  "\xc0\x26\x00\x00\x00\x28\x00\x00"
		.ascii  "\x40\x29\x00\x00\x80\x2a\x00\x00"
		.ascii  "\xc0\x2b\x00\x00\x00\x2d\x00\x00"
		.ascii  "\x40\x2e\x00\x00\x80\x2f\x00\x00"
		.ascii  "\xc0\x30\x00\x00\x00\x32\x00\x00"
		.ascii  "\x40\x33\x00\x00\x80\x34\x00\x00"
		.ascii  "\xc0\x35\x00\x00\x00\x37\x00\x00"
		.ascii  "\x40\x38\x00\x00\x80\x39\x00\x00"
		.ascii  "\xc0\x3a\x00\x00\x00\x3c\x00\x00"
		.ascii  "\x40\x3d\x00\x00\x80\x3e\x00\x00"
		.ascii  "\xc0\x3f\x00\x00\x00\x41\x00\x00"
		.ascii  "\x40\x42\x00\x00\x80\x43\x00\x00"
		.ascii  "\xc0\x44\x00\x00\x00\x46\x00\x00"
		.ascii  "\x40\x47\x00\x00\x80\x48\x00\x00"
		.ascii  "\xc0\x49\x00\x00\x00\x4b\x00\x00"
		.ascii  "\x40\x4c\x00\x00\x80\x4d\x00\x00"
		.ascii  "\xc0\x4e\x00\x00\x00\x50\x00\x00"
		.ascii  "\x40\x51\x00\x00\x80\x52\x00\x00"
		.ascii  "\xc0\x53\x00\x00\x00\x55\x00\x00"
		.ascii  "\x40\x56\x00\x00\x80\x57\x00\x00"
		.ascii  "\xc0\x58\x00\x00\x00\x5a\x00\x00"
		.ascii  "\x40\x5b\x00\x00\x80\x5c\x00\x00"
		.ascii  "\xc0\x5d\x00\x00\x00\x5f\x00\x00"
		.ascii  "\x40\x60\x00\x00\x80\x61\x00\x00"
		.ascii  "\xc0\x62\x00\x00\x00\x64\x00\x00"
		.ascii  "\x40\x65\x00\x00\x80\x66\x00\x00"
		.ascii  "\xc0\x67\x00\x00\x00\x69\x00\x00"
		.ascii  "\x40\x6a\x00\x00\x80\x6b\x00\x00"
		.ascii  "\xc0\x6c\x00\x00\x00\x6e\x00\x00"
		.ascii  "\x40\x6f\x00\x00\x80\x70\x00\x00"
		.ascii  "\xc0\x71\x00\x00\x00\x73\x00\x00"
		.ascii  "\x40\x74\x00\x00\x80\x75\x00\x00"
		.ascii  "\xc0\x76\x00\x00\x00\x78\x00\x00"
		.ascii  "\x40\x79\x00\x00\x80\x7a\x00\x00"
		.ascii  "\xc0\x7b\x00\x00\x00\x7d\x00\x00"
		.ascii  "\x40\x7e\x00\x00\x80\x7f\x00\x00"
		.ascii  "\xc0\x80\x00\x00\x00\x82\x00\x00"
		.ascii  "\x40\x83\x00\x00\x80\x84\x00\x00"
		.ascii  "\xc0\x85\x00\x00\x00\x87\x00\x00"
		.ascii  "\x40\x88\x00\x00\x80\x89\x00\x00"
		.ascii  "\xc0\x8a\x00\x00\x00\x8c\x00\x00"
		.ascii  "\x40\x8d\x00\x00\x80\x8e\x00\x00"
		.ascii  "\xc0\x8f\x00\x00\x00\x91\x00\x00"
		.ascii  "\x40\x92\x00\x00\x80\x93\x00\x00"
		.ascii  "\xc0\x94\x00\x00\x00\x96\x00\x00"
		.ascii  "\x40\x97\x00\x00\x80\x98\x00\x00"
		.ascii  "\xc0\x99\x00\x00\x00\x9b\x00\x00"
		.ascii  "\x40\x9c\x00\x00\x80\x9d\x00\x00"
		.ascii  "\xc0\x9e\x00\x00\x00\xa0\x00\x00"
		.ascii  "\x40\xa1\x00\x00\x80\xa2\x00\x00"
		.ascii  "\xc0\xa3\x00\x00\x00\xa5\x00\x00"
		.ascii  "\x40\xa6\x00\x00\x80\xa7\x00\x00"
		.ascii  "\xc0\xa8\x00\x00\x00\xaa\x00\x00"
		.ascii  "\x40\xab\x00\x00\x80\xac\x00\x00"
		.ascii  "\xc0\xad\x00\x00\x00\xaf\x00\x00"
		.ascii  "\x40\xb0\x00\x00\x80\xb1\x00\x00"
		.ascii  "\xc0\xb2\x00\x00\x00\xb4\x00\x00"
		.ascii  "\x40\xb5\x00\x00\x80\xb6\x00\x00"
		.ascii  "\xc0\xb7\x00\x00\x00\xb9\x00\x00"
		.ascii  "\x40\xba\x00\x00\x80\xbb\x00\x00"
		.ascii  "\xc0\xbc\x00\x00\x00\xbe\x00\x00"
		.ascii  "\x40\xbf\x00\x00\x80\xc0\x00\x00"
		.ascii  "\xc0\xc1\x00\x00\x00\xc3\x00\x00"
		.ascii  "\x40\xc4\x00\x00\x80\xc5\x00\x00"
		.ascii  "\xc0\xc6\x00\x00\x00\xc8\x00\x00"
		.ascii  "\x40\xc9\x00\x00\x80\xca\x00\x00"
		.ascii  "\xc0\xcb\x00\x00\x00\xcd\x00\x00"
		.ascii  "\x40\xce\x00\x00\x80\xcf\x00\x00"
		.ascii  "\xc0\xd0\x00\x00\x00\xd2\x00\x00"
		.ascii  "\x40\xd3\x00\x00\x80\xd4\x00\x00"
		.ascii  "\xc0\xd5\x00\x00\x00\xd7\x00\x00"
		.ascii  "\x40\xd8\x00\x00\x80\xd9\x00\x00"
		.ascii  "\xc0\xda\x00\x00\x00\xdc\x00\x00"
		.ascii  "\x40\xdd\x00\x00\x80\xde\x00\x00"
		.ascii  "\xc0\xdf\x00\x00\x00\xe1\x00\x00"
		.ascii  "\x40\xe2\x00\x00\x80\xe3\x00\x00"
		.ascii  "\xc0\xe4\x00\x00\x00\xe6\x00\x00"
		.ascii  "\x40\xe7\x00\x00\x80\xe8\x00\x00"
		.ascii  "\xc0\xe9\x00\x00\x00\xeb\x00\x00"
		.ascii  "\x40\xec\x00\x00\x80\xed\x00\x00"
		.ascii  "\xc0\xee\x00\x00\x00\xf0\x00\x00"
		.ascii  "\x40\xf1\x00\x00\x80\xf2\x00\x00"
		.ascii  "\xc0\xf3\x00\x00\x00\xf5\x00\x00"
		.ascii  "\x40\xf6\x00\x00\x80\xf7\x00\x00"
		.ascii  "\xc0\xf8\x00\x00"

_091e20_data:
		.fill   0x4
		.ascii  "\x50\x00\x00\x00\xa0\x00\x00\x00"
		.ascii  "\xf0\x00\x00\x00\x40\x01\x00\x00"
		.ascii  "\x90\x01\x00\x00\xe0\x01\x00\x00"
		.ascii  "\x30\x02\x00\x00\x80\x02\x00\x00"
		.ascii  "\xd0\x02\x00\x00\x20\x03\x00\x00"
		.ascii  "\x70\x03\x00\x00\xc0\x03\x00\x00"
		.ascii  "\x10\x04\x00\x00\x60\x04\x00\x00"
		.ascii  "\xb0\x04\x00\x00\x00\x05\x00\x00"
		.ascii  "\x50\x05\x00\x00\xa0\x05\x00\x00"
		.ascii  "\xf0\x05\x00\x00\x40\x06\x00\x00"
		.ascii  "\x90\x06\x00\x00\xe0\x06\x00\x00"
		.ascii  "\x30\x07\x00\x00\x80\x07\x00\x00"
		.ascii  "\xd0\x07\x00\x00\x20\x08\x00\x00"
		.ascii  "\x70\x08\x00\x00\xc0\x08\x00\x00"
		.ascii  "\x10\x09\x00\x00\x60\x09\x00\x00"
		.ascii  "\xb0\x09\x00\x00\x00\x0a\x00\x00"
		.ascii  "\x50\x0a\x00\x00\xa0\x0a\x00\x00"
		.ascii  "\xf0\x0a\x00\x00\x40\x0b\x00\x00"
		.ascii  "\x90\x0b\x00\x00\xe0\x0b\x00\x00"
		.ascii  "\x30\x0c\x00\x00\x80\x0c\x00\x00"
		.ascii  "\xd0\x0c\x00\x00\x20\x0d\x00\x00"
		.ascii  "\x70\x0d\x00\x00\xc0\x0d\x00\x00"
		.ascii  "\x10\x0e\x00\x00\x60\x0e\x00\x00"
		.ascii  "\xb0\x0e\x00\x00\x00\x0f\x00\x00"
		.ascii  "\x50\x0f\x00\x00\xa0\x0f\x00\x00"
		.ascii  "\xf0\x0f\x00\x00\x40\x10\x00\x00"
		.ascii  "\x90\x10\x00\x00\xe0\x10\x00\x00"
		.ascii  "\x30\x11\x00\x00\x80\x11\x00\x00"
		.ascii  "\xd0\x11\x00\x00\x20\x12\x00\x00"
		.ascii  "\x70\x12\x00\x00\xc0\x12\x00\x00"
		.ascii  "\x10\x13\x00\x00\x60\x13\x00\x00"
		.ascii  "\xb0\x13\x00\x00\x00\x14\x00\x00"
		.ascii  "\x50\x14\x00\x00\xa0\x14\x00\x00"
		.ascii  "\xf0\x14\x00\x00\x40\x15\x00\x00"
		.ascii  "\x90\x15\x00\x00\xe0\x15\x00\x00"
		.ascii  "\x30\x16\x00\x00\x80\x16\x00\x00"
		.ascii  "\xd0\x16\x00\x00\x20\x17\x00\x00"
		.ascii  "\x70\x17\x00\x00\xc0\x17\x00\x00"
		.ascii  "\x10\x18\x00\x00\x60\x18\x00\x00"
		.ascii  "\xb0\x18\x00\x00\x00\x19\x00\x00"
		.ascii  "\x50\x19\x00\x00\xa0\x19\x00\x00"
		.ascii  "\xf0\x19\x00\x00\x40\x1a\x00\x00"
		.ascii  "\x90\x1a\x00\x00\xe0\x1a\x00\x00"
		.ascii  "\x30\x1b\x00\x00\x80\x1b\x00\x00"
		.ascii  "\xd0\x1b\x00\x00\x20\x1c\x00\x00"
		.ascii  "\x70\x1c\x00\x00\xc0\x1c\x00\x00"
		.ascii  "\x10\x1d\x00\x00\x60\x1d\x00\x00"
		.ascii  "\xb0\x1d\x00\x00\x00\x1e\x00\x00"
		.ascii  "\x50\x1e\x00\x00\xa0\x1e\x00\x00"
		.ascii  "\xf0\x1e\x00\x00\x40\x1f\x00\x00"
		.ascii  "\x90\x1f\x00\x00\xe0\x1f\x00\x00"
		.ascii  "\x30\x20\x00\x00\x80\x20\x00\x00"
		.ascii  "\xd0\x20\x00\x00\x20\x21\x00\x00"
		.ascii  "\x70\x21\x00\x00\xc0\x21\x00\x00"
		.ascii  "\x10\x22\x00\x00\x60\x22\x00\x00"
		.ascii  "\xb0\x22\x00\x00\x00\x23\x00\x00"
		.ascii  "\x50\x23\x00\x00\xa0\x23\x00\x00"
		.ascii  "\xf0\x23\x00\x00\x40\x24\x00\x00"
		.ascii  "\x90\x24\x00\x00\xe0\x24\x00\x00"
		.ascii  "\x30\x25\x00\x00\x80\x25\x00\x00"
		.ascii  "\xd0\x25\x00\x00\x20\x26\x00\x00"
		.ascii  "\x70\x26\x00\x00\xc0\x26\x00\x00"
		.ascii  "\x10\x27\x00\x00\x60\x27\x00\x00"
		.ascii  "\xb0\x27\x00\x00\x00\x28\x00\x00"
		.ascii  "\x50\x28\x00\x00\xa0\x28\x00\x00"
		.ascii  "\xf0\x28\x00\x00\x40\x29\x00\x00"
		.ascii  "\x90\x29\x00\x00\xe0\x29\x00\x00"
		.ascii  "\x30\x2a\x00\x00\x80\x2a\x00\x00"
		.ascii  "\xd0\x2a\x00\x00\x20\x2b\x00\x00"
		.ascii  "\x70\x2b\x00\x00\xc0\x2b\x00\x00"
		.ascii  "\x10\x2c\x00\x00\x60\x2c\x00\x00"
		.ascii  "\xb0\x2c\x00\x00\x00\x2d\x00\x00"
		.ascii  "\x50\x2d\x00\x00\xa0\x2d\x00\x00"
		.ascii  "\xf0\x2d\x00\x00\x40\x2e\x00\x00"
		.ascii  "\x90\x2e\x00\x00\xe0\x2e\x00\x00"
		.ascii  "\x30\x2f\x00\x00\x80\x2f\x00\x00"
		.ascii  "\xd0\x2f\x00\x00\x20\x30\x00\x00"
		.ascii  "\x70\x30\x00\x00\xc0\x30\x00\x00"
		.ascii  "\x10\x31\x00\x00\x60\x31\x00\x00"
		.ascii  "\xb0\x31\x00\x00\x00\x32\x00\x00"
		.ascii  "\x50\x32\x00\x00\xa0\x32\x00\x00"
		.ascii  "\xf0\x32\x00\x00\x40\x33\x00\x00"
		.ascii  "\x90\x33\x00\x00\xe0\x33\x00\x00"
		.ascii  "\x30\x34\x00\x00\x80\x34\x00\x00"
		.ascii  "\xd0\x34\x00\x00\x20\x35\x00\x00"
		.ascii  "\x70\x35\x00\x00\xc0\x35\x00\x00"
		.ascii  "\x10\x36\x00\x00\x60\x36\x00\x00"
		.ascii  "\xb0\x36\x00\x00\x00\x37\x00\x00"
		.ascii  "\x50\x37\x00\x00\xa0\x37\x00\x00"
		.ascii  "\xf0\x37\x00\x00\x40\x38\x00\x00"
		.ascii  "\x90\x38\x00\x00\xe0\x38\x00\x00"
		.ascii  "\x30\x39\x00\x00\x80\x39\x00\x00"
		.ascii  "\xd0\x39\x00\x00\x20\x3a\x00\x00"
		.ascii  "\x70\x3a\x00\x00\xc0\x3a\x00\x00"
		.ascii  "\x10\x3b\x00\x00\x60\x3b\x00\x00"
		.ascii  "\xb0\x3b\x00\x00\x00\x3c\x00\x00"
		.ascii  "\x50\x3c\x00\x00\xa0\x3c\x00\x00"
		.ascii  "\xf0\x3c\x00\x00\x40\x3d\x00\x00"
		.ascii  "\x90\x3d\x00\x00\xe0\x3d\x00\x00"
		.ascii  "\x30\x3e\x00\x00"

_092140_data:
		.fill   0x4

_092144_data:
		.fill   0x4

_092148_data:
		.fill   0x8

_092150_data:
		.fill   0x4

_092154_data:
		.fill   0x4

_092158_data:
		.fill   0x4

_09215c_data:
		.fill   0x4

_092160_data:
		.ascii  "\x0c\x58\x00\x00"

_092164_data:
		.ascii  "\x67"

_092165_data:
		.ascii  "\xbf\x00\x00\x0c\x58\x00\x00\xf1"
		.ascii  "\x5f\x00\x00\x5c\xec\x00\x00\xfd"
		.ascii  "\xb7\x00\x00\xd9\x23\x00\x00\x3a"
		.ascii  "\x4a\x00\x00\xd6\xdb\x00\x00\xea"
		.ascii  "\xd6\x00\x00\xf0\x15\x00\x00\xc0"
		.ascii  "\xb2\x01\x00\x9f\x97\x00\x00\xb4"
		.ascii  "\x64\x00\x00\x5f\x4a\x02\x00\xff"
		.ascii  "\x67\x00\x00\x03\xd3\x00\x00\x5e"
		.ascii  "\xb2\x02\x00\x1a\x1e\x01\x00\xe4"
		.ascii  "\x1c\x00\x00\x78\xd0\x03\x00\x2f"
		.ascii  "\xb9\x00\x00\xae\x8d\x00\x00\xa7"
		.ascii  "\x89\x04\x00\xe4\xd6\x00\x00\x60"
		.ascii  "\x12\x00\x00\x8b\x60\x05\x00\x5c"
		.ascii  "\xa4\x00\x00\x56\x52\x00\x00\xe7"
		.ascii  "\x04\x06\x00\xe3\x42\x00\x00\x85"
		.ascii  "\x4d\x00\x00\xca\x47\x06\x00\xea"
		.ascii  "\x92\x00\x00\x44\x8b\x00\x00\xb4"
		.ascii  "\xda\x06\x00\x03\x7d\x00\x00\x7c"
		.ascii  "\xdc\x00\x00\xb7\x57\x07\x00\xc2"
		.ascii  "\x48\x00\x00\xd4\x8f\x00\x00\x79"
		.ascii  "\xa0\x07\x00\x27\x44\x00\x00\xea"
		.ascii  "\x48\x00\x00\xa0\xe4\x07\x00\xaf"
		.ascii  "\x55\x00\x00\xdc\x52\x00\x00\x4f"
		.ascii  "\x3a\x08\x00\x23\x5e\x00\x00\x0d"
		.ascii  "\x23\x00\x00\x72\x98\x08\x00\x52"
		.ascii  "\x46\x00\x00\xad\x9b\x00\x00\xc4"
		.ascii  "\xde\x08\x00\x92\x56\x00\x00\xc1"
		.ascii  "\x16\x00\x00\x56\x35\x09\x00\x2b"
		.ascii  "\x5a\x00\x00\xaa\xd5\x00\x00\x81"
		.ascii  "\x8f\x09\x00\x6d\x8d\x00\x00\x98"
		.ascii  "\x16\x00\x00\xee\x1c\x0a\x00\xaa"
		.ascii  "\x4a\x00\x00\x68\x3a\x00\x00\x98"
		.ascii  "\x67\x0a\x00\x60\x13\x01\x00\x0a"
		.ascii  "\x9e\x00\x00\xf8\x7a\x0b\x00\x02"
		.ascii  "\x68\x00\x00\xe9\x11\x00\x00\xfa"
		.ascii  "\xe2\x0b\x00\x46\x68\x00\x00\x6f"
		.ascii  "\x00\x00\x00\x40\x4b\x0c\x00\xf2"
		.ascii  "\x46\x00\x00\x37\x03\x00\x00\x32"
		.ascii  "\x92\x0c\x00\xb8\xb0\x00\x00\x3d"
		.ascii  "\xba\x00\x00\xea\x42\x0d\x00\x9c"
		.ascii  "\x5a\x00\x00\x99\x5e\x00\x00\x86"
		.ascii  "\x9d\x0d\x00\x83\x35\x00\x00\xbe"
		.ascii  "\x48\x00\x00\x09\xd3\x0d\x00\x80"
		.ascii  "\x41\x00\x00\x16\xee\x00\x00\x89"
		.ascii  "\x14\x0e\x00\xb8\xb0\x00\x00\x3c"
		.ascii  "\x98\x00\x00\x41\xc5\x0e\x00\xd6"
		.ascii  "\x81\x00\x00\xfa\x7d\x00\x00\x17"
		.ascii  "\x47\x0f\x00\x25\x3a\x00\x00\x55"
		.ascii  "\x83\x00\x00\x3c\x81\x0f\x00\xd8"
		.ascii  "\x68\x00\x00\xa6\x54\x00\x00\x14"
		.ascii  "\xea\x0f\x00\x99\x66\x00\x00\xf7"
		.ascii  "\x81\x00\x00\xad\x50\x10\x00\xb4"
		.ascii  "\xec\x00\x00\xc6\xfd\x00\x00\x61"
		.ascii  "\x3d\x11\x00\x55\x83\x00\x00\x33"
		.ascii  "\xbc\x00\x00\xb6\xc0\x11\x00\xd3"
		.ascii  "\x69\x01\x00\xcb\x8d\x00\x00\x89"
		.ascii  "\x2a\x13\x00\x10\xc8\x00\x00\xe1"
		.ascii  "\x8f\x00\x00\x99\xf2\x13\x00\x59"
		.ascii  "\xfe\x00\x00\x32\x9c\x00\x00\xf2"
		.ascii  "\xf0\x14\x00\xdb\xbb\x00\x00\xd6"
		.ascii  "\xdc\x00\x00\xcd\xac\x15\x00\xb3"
		.ascii  "\x78\x00\x00\x07\x3d\x00\x00\x80"
		.ascii  "\x25\x16\x00\x89\x19\x02\x00\x16"
		.ascii  "\x17\x00\x00\x09\x3f\x18\x00\xc5"
		.ascii  "\xc6\x00\x00\xa3\xf8\x00\x00\xce"
		.ascii  "\x05\x19\x00\x22\xc5\x00\x00\x45"
		.ascii  "\xaf\x00\x00\xf0\xca\x19\x00\x33"
		.ascii  "\x0a\x02\x00\x94\x11\x00\x00\x23"
		.ascii  "\xd5\x1b\x00\x32\xd5\x00\x00\x49"
		.ascii  "\xb3\x00\x00\x55\xaa\x1c\x00\xb7"
		.ascii  "\xd1\x00\x00\x30\x6d\x00\x00\x0c"
		.ascii  "\x7c\x1d\x00\xed\xb3\x00\x00\xd9"
		.ascii  "\x77\x00\x00\xf9\x2f\x1e\x00\x6f"
		.ascii  "\xf5\x00\x00\x44\x61\x00\x00\x68"
		.ascii  "\x25\x1f\x00\x89\x56\x00\x00\x6f"
		.ascii  "\x0c\x00\x00\xf1\x7b\x1f\x00\x38"
		.ascii  "\x8d\x00\x00\xdc\x41\x00\x00\x29"
		.ascii  "\x09\x20\x00\xe3\xf9\x00\x00\xcf"
		.ascii  "\x38\x00\x00\x0c\x03\x21\x00\x1c"
		.ascii  "\xd3\x00\x00\x19\x5d\x00\x00\x28"
		.ascii  "\xd6\x21\x00\x8a\xf0\x00\x00\x2d"
		.ascii  "\xa1\x00\x00\xb2\xc6\x22\x00\x98"
		.ascii  "\x76\x00\x00\x90\x04\x00\x00\x4a"
		.ascii  "\x3d\x23\x00\xd6\x30\x00\x00\x8f"
		.ascii  "\x96\x00\x00\x20\x6e\x23\x00\x8d"
		.ascii  "\x19\x01\x00\xa4\x32\x00\x00\xad"
		.ascii  "\x87\x24\x00\x42\x2f\x01\x00\x02"
		.ascii  "\xaa\x00\x00\xef\xb6\x25\x00\x65"
		.ascii  "\x61\x00\x00\xda\xbc\x00\x00\x54"
		.ascii  "\x18\x26\x00\xf3\x23\x01\x00\xba"
		.ascii  "\x43\x00\x00\x47\x3c\x27\x00\xe9"
		.ascii  "\x49\x00\x00\x1e\x79\x00\x00\x30"
		.ascii  "\x86\x27\x00\x92\x70\x00\x00\x34"
		.ascii  "\x59\x00\x00\xc2\xf6\x27\x00\xac"
		.ascii  "\x3b\x00\x00\x68\xc9\x00\x00\x6e"
		.ascii  "\x32\x28\x00\xe5\x39\x01\x00\xf6"
		.ascii  "\x05\x00\x00\x53\x6c\x29\x00\x69"
		.ascii  "\x54\x00\x00\x47\x17\x00\x00\xbc"
		.ascii  "\xc0\x29\x00\x0c\x2b\x01\x00\x7c"
		.ascii  "\xea\x00\x00\xc8\xeb\x2a\x00\x23"
		.ascii  "\xa5\x00\x00\x43\xdf\x00\x00\xeb"
		.ascii  "\x90\x2b\x00\xd0\x5c\x00\x00\x79"
		.ascii  "\x0b\x00\x00\xbb\xed\x2b\x00\x6e"
		.ascii  "\x8e\x00\x00\x02\xa1\x00\x00\x29"
		.ascii  "\x7c\x2c\x00\x51\x7b\x00\x00\x70"
		.ascii  "\x41\x00\x00"

_0924b0_data:
		.fill   0x4

_0924b4_data:
		.ascii  "\x4f\x10\x00\x00"

_0924b8_data:
		.ascii  "\x9a"

_0924b9_data:
		.ascii  "\x6a\x00\x00\x4f\x10\x00\x00\x08"
		.ascii  "\x12\x00\x00\x37\xdc\x00\x00\x57"
		.ascii  "\x22\x00\x00\xbc\x12\x00\x00\x46"
		.ascii  "\xc6"

_0924d2_data:
		.ascii  "\x00\x00"

_0924d4_data:
		.ascii  "\x00\x00"

_0924d6_data:
		.ascii  "\x00\x00"

_0924d8_data:
		.ascii  "\x00\x00"

_0924da_data:
		.ascii  "\x00\x00"

_0924dc_data:
		.ascii  "\x02\x01\x03\x00\x04\x07\x06\x05"
		.ascii  "\x01\x03\x02\x00\x04\x07\x06\x05"
		.ascii  "\x04\x01\x03\x02\x00\x07\x06\x05"

_0924f4_data:
		.ascii  "\x00\x20\x42\xc2\x42\x42\xc2\xc2"
		.ascii  "\x04\x0b"
		.fill   0x4
		.ascii  "\x03\x13\x00\x00\x4a\xca\x4a\x4a"
		.ascii  "\xca\xca"
		.fill   0x6
		.ascii  "\x0b\x00"
		.ascii   "                                "

_092534_data:
		.ascii  "\x28"

_092535_data:
		.ascii  "\x80"

_092536_data:
		.ascii  "\x03"

_092537_data:
		.ascii  "\x23\x04\x00\x03\x02\x00\x00\x02"
		.ascii  "\x42\x21\x80\x21\x42\x04\x00\x02"
		.ascii  "\x42\x20\x00\x02\x02\x08\x10\x47"
		.ascii  "\x26\x08\x00\x02\x02\x00\x11\x43"
		.ascii  "\x20\x28\x80\x03\x23\x18\x80\x01"
		.ascii  "\x02\x05\x00\x00\x4a\x28\x80\x02"
		.ascii  "\x03\x0b\x80\x22\x42\x28\x80\x02"
		.ascii  "\x03\x0b\x80\x22\x42\x04\x81\x02"
		.ascii  "\x02\x04\x81\x02\x02\x04\x80\x03"
		.ascii  "\x02\x01\x00\x20\x4a\x28\x91\x03"
		.ascii  "\x03\x20\x80\x02\x02\x00\x81\x03"
		.ascii  "\x02\x40\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x00\x02\x02\x00\x40\x02"
		.ascii  "\x02\x00\xc0\x02\x02\x00\x41\x02"
		.ascii  "\x02\x00\x40\x02\x02\x00\x00\x10"
		.ascii  "\x20\x01\x00\x00\x42\x08\x80\x02"
		.ascii  "\x02\x09\xb0\x22\x42\x00\x81\x03"
		.ascii  "\x02\x28\x80\x03\x03\x09\x90\x23"
		.ascii  "\x42\x00\x00\x03\x02\x01\x80\x03"
		.ascii  "\x42\x01\x80\x23\x42\x08\x90\x03"
		.ascii  "\x03\x08\x00\x02\x02\x00\x00\x12"
		.ascii  "\x02\x28\x80\x03\x03\x09\x80\x22"
		.ascii  "\x42\x08\x81\x02\x02\x98\x80\x03"
		.ascii  "\x03\x08\x10\x03\x22\x04\x80\x02"
		.ascii  "\x02\x00\x80\x02\x02\x98\xb0\x00"
		.ascii  "\x03\x09\x90\x23\x42\x19\x90\x23"
		.ascii  "\x42\x28\x90\x03\x02\x00\x80\x02"
		.ascii  "\x02\x20\x80\x02\x02\x28\x80\x03"
		.ascii  "\x03\x28\x80\x02\x03\x04\x02\x03"
		.ascii  "\x22\x05\x00\x23\x42\x28\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x09\x90\x23"
		.ascii  "\x42\x00\xb1\x02\x02\x00\x80\x00"
		.ascii  "\x42\x28\x80\x03\x03\x09\x80\x22"
		.ascii  "\x42\x04\x01\x02\x02\x00\xc0\x02"
		.ascii  "\x02\x08\x10\x03\x23\x28\x80\x03"
		.ascii  "\x03\x09\x80\x03\x43\x28\x00\x23"
		.ascii  "\x03\x09\xb0\x03\x42\x98\x80\x03"
		.ascii  "\x03\x05\x00\x20\x48\x00\x80\x03"
		.ascii  "\x02\x28\x00\x22\x03\x09\x90\x63"
		.ascii  "\x43\x09\x80\x23\x42\x00\x00\x03"
		.ascii  "\x02\x20\x88\x13\x03\x00\x00\x12"
		.ascii  "\x22\x09\x00\x20\x42\x00\x00\x02"
		.ascii  "\x02\x00\x00\x02\x03\x00\x81\x02"
		.ascii  "\x02\x00\x01\x02\x42\x00\x01\x02"
		.ascii  "\x42\x20\x80\x03\x02\x09\x80\x23"
		.ascii  "\x42\x09\x80\x23\x42\x09\x80\x23"
		.ascii  "\x42\x01\x80\x23\x42\x11\x00\x00"
		.ascii  "\x42\x00\x00\x02\x42\x00\x80\x02"
		.ascii  "\x03\x19\x80\x27\x43\x98\xb0\x03"
		.ascii  "\x03\x04\x00\x00\x42\x28\x80\x13"
		.ascii  "\x03\x08\x00\x02\x02\x09\x80\x23"
		.ascii  "\x42\x00\x80\x02\x02\x00\x80\x02"
		.ascii  "\x02\x08\x80\x02\x02\x08\x81\x03"
		.ascii  "\x02\x08\x00\x02\x02\x01\xb0\x12"
		.ascii  "\x42\x00\x00\x06\x32\x01\x00\x22"
		.ascii  "\x42\x00\x80\x02\x02\x09\x10\x23"
		.ascii  "\x43\x08\x80\x02\x02\x00\x80\x03"
		.ascii  "\x02\x01\xc0\x02\x42\x28\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x28\x80\x03"
		.ascii  "\x03\x09\x80\x23\x42\x38\x90\x03"
		.ascii  "\x03\x09\x80\x23\x42\x09\x90\x23"
		.ascii  "\x43\x28\x90\x0b\x23\x00\x00\x12"
		.ascii  "\x42\x00\x88\x03\x02\x08\x80\x03"
		.ascii  "\x02\x08\x80\x03\x02\x08\x80\x03"
		.ascii  "\x02\x08\x80\x07\x02\x05\x10\x63"
		.ascii  "\x42\x00\x80\x03\x02\x28\x80\x02"
		.ascii  "\x03\x00\x00\x03\x02\x00\x11\x43"
		.ascii  "\x20\x09\x80\x22\x42\x01\x00\x02"
		.ascii  "\x42\x00\x00\x12\x22\x00\x89\x03"
		.ascii  "\x02\x05\x00\x22\x42\x00\x81\x03"
		.ascii  "\x02\x00\x00\x13\x42\x00\x02\x12"
		.ascii  "\x22\x11\x00\x00\x4a\x00\x82\x01"
		.ascii  "\x42\x08\x80\x02\x02\x09\x00\x23"
		.ascii  "\x42\x28\x80\x03\x03\x00\x80\x03"
		.ascii  "\x42\x04\x00\x03\x02\xb8\x84\x02"
		.ascii  "\x03\x08\x80\x03\x22\x20\xc0\x03"
		.ascii  "\x03\x30\x80\x03\x03\x00\x89\x03"
		.ascii  "\x02\x00\x89\x03\x02\x08\x80\x03"
		.ascii  "\x03\x10\x00\x00\x02\x00\x00\x03"
		.ascii  "\x42\x00\x08\x03\x02\x00\x08\x03"
		.ascii  "\x02\x00\x00\x12\x42\x00\x01\x02"
		.ascii  "\x42\x00\x00\x02\x02\x00\x00\x12"
		.ascii  "\x02\x28\x80\x03\x23\x00\x00\x02"
		.ascii  "\x02\x00\x10\x43\x20\x00\xb0\x03"
		.ascii  "\x03\x00\xb8\x13\x03\x09\x80\x22"
		.ascii  "\x4a\x05\x00\x03\x42\x28\x80\x1b"
		.ascii  "\x03\x00\xb0\x23\x02\x28\x90\x02"
		.ascii  "\x03\x08\x00\x02\x02\x08\x00\x06"
		.ascii  "\x12\x00\x11\x47\x26\x08\x00\x06"
		.ascii  "\x12\x08\x00\x06\x12\x98\x80\x13"
		.ascii  "\x03\x20\x80\x03\x43\x08\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x28\x90\x02"
		.ascii  "\x03\x08\x80\x03\x03\x01\x00\x22"
		.ascii  "\x42\x98\x84\x03\x03\x08\x00\x02"
		.ascii  "\x02\x08\x81\x03\x02\x19\xf0\x03"
		.ascii  "\x42\x08\x00\x02\x02\x19\x90\x22"
		.ascii  "\x43\x09\xb0\x02\x43\x09\xb0\x22"
		.ascii  "\x43\x28\x10\x03\x03\x09\xb0\x22"
		.ascii  "\x42\x05\x00\x02\x42\x98\x84\x13"
		.ascii  "\x03\x20\x80\x03\x03\x08\x84\x13"
		.ascii  "\x03\x08\x80\x13\x03\x05\x00\x03"
		.ascii  "\x42\x09\x00\x03\x42\x19\x80\x02"
		.ascii  "\x42\x19\x80\x02\x42\x01\x00\x02"
		.ascii  "\x42\x00\x80\x01\x00\x01\x00\x02"
		.ascii  "\x4a\x09\x90\x13\x42\x09\x90\x13"
		.ascii  "\x42\x01\x00\x43\x42\x28\x80\x02"
		.ascii  "\x03\x98\xb0\x03\x03\x00\x10\x83"
		.ascii  "\x42\x11\x80\x22\x4a\x00\x80\x02"
		.ascii  "\x02\x08\x80\x03\x03\x08\x90\x03"
		.ascii  "\x03\x10\x80\x02\x02\x10\xa0\x02"
		.ascii  "\x02\x01\x00\x02\x42\x01\x00\x22"
		.ascii  "\x42\x08\x80\x02\x03\x09\x90\x02"
		.ascii  "\x43\x28\x90\x02\x03\x28\x90\x02"
		.ascii  "\x03\x98\xb0\x00\x02\x00\x80\x03"
		.ascii  "\x02\x08\x00\x02\x02\x08\x00\x02"
		.ascii  "\x02\x08\xa0\x02\x43\x08\xa0\x02"
		.ascii  "\x43\x09\x80\x22\x42\x08\x00\x02"
		.ascii  "\x42\x08\x00\x03\x02\x00\x00\x02"
		.ascii  "\x02\x00\xc0\x03\x02\x05\x00\x00"
		.ascii  "\x42\x28\x00\x23\x02\x08\x00\x06"
		.ascii  "\x12\x08\x00\x06\x12\x08\x00\x06"
		.ascii  "\x12\x08\xc0\x06\x02\x19\x90\x22"
		.ascii  "\x42\x00\x80\x02\x02\x00\x80\x03"
		.ascii  "\x42\x00\x80\x03\x02\x09\x90\x02"
		.ascii  "\x42\x04\xa0\x02\x42\x08\x00\x02"
		.ascii  "\x02\x04\x00\x02\x42\x04\x00\x02"
		.ascii  "\x42\x04\x00\x02\x42\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x01\xb0\x03"
		.ascii  "\x42\x00\xb0\x03\x02\x00\x88\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02"

_09294c_data:
		.ascii  "\x00\x00"

_09294e_data:
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x4
		.ascii  "\xb0\xff"
		.fill   0x6
		.ascii  "\xfa\x00\x00\x00\xfa\x00\x00\x00"
		.ascii  "\xc4\xff\xc4\xff"
		.fill   0x4
		.ascii  "\x3c"
		.fill   0xb
		.ascii  "\xc4\xff"
		.fill   0x8
		.ascii  "\xce\xff"
		.fill   0xc
		.ascii  "\xce\xff"
		.fill   0x6
		.ascii  "\xce\xff"
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x12
		.ascii  "\xce\xff"
		.fill   0x1c
		.ascii  "\x3c\x00\x00\x00\x96"
		.fill   0xd
		.ascii  "\xce\xff"
		.fill   0xc
		.ascii  "\xce\xff"
		.fill   0x8
		.ascii  "\xc2\x01\xce\xff\x00\x00\x64\x00"
		.ascii  "\x00\x00\xce\xff\xc8"
		.fill   0xf
		.ascii  "\x64"
		.fill   0x1d
		.ascii  "\x96\x00\xce\xff"
		.fill   0x12
		.ascii  "\xb0\xff"
		.fill   0xc
		.ascii  "\xce\xff\xce\xff"
		.fill   0x8
		.ascii  "\xc8"
		.fill   0x1d
		.ascii  "\xce\xff\xce\xff\xce\xff"
		.fill   0x4
		.ascii  "\xb0\xff"
		.fill   0x8
		.ascii  "\xc8\x00\x28\x00\xc8"
		.fill   0x7
		.ascii  "\xce\xff\xce\xff"
		.fill   0x8
		.ascii  "\xc8"
		.fill   0xf
		.ascii  "\x64"
		.fill   0xf
		.ascii  "\x28"
		.fill   0xb
		.ascii  "\xc2\x01"
		.fill   0xa
		.ascii  "\x28"
		.fill   0x19
		.ascii  "\xc8\x00\xc8\x00\x00\x00\xce\xff"
		.fill   0x16
		.ascii  "\xce\xff\xce\xff\xce\xff\x00\x00"
		.ascii  "\x64"
		.fill   0x23

_092b5a_data:
		.fill   0x4c
		.ascii  "\xce\xff"
		.fill   0x6
		.ascii  "\xce\xff"
		.fill   0x12
		.ascii  "\x2c\x01"
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x2c
		.ascii  "\x78\x00\xce\xff\x00\x00\x96"
		.fill   0x5
		.ascii  "\xc8\x00\xc8"
		.fill   0xb
		.ascii  "\x5e\x01\xce\xff\x00\x00\x2c\x01"
		.fill   0x4
		.ascii  "\xc8\x00\x8c"
		.fill   0x29
		.ascii  "\x32\x00\x00\x00\xce\xff"
		.fill   0x1e
		.ascii  "\x78\x00\xce\xff\xce\xff"
		.fill   0x6
		.ascii  "\x64\x00\x2c\x01\x00\x00\xc8"
		.fill   0x5
		.ascii  "\x78"
		.fill   0xd
		.ascii  "\x96\x00\x96\x00\x00\x00\xce\xff"
		.ascii  "\xce\xff"
		.fill   0x8
		.ascii  "\x78\x00\x78"
		.fill   0x5
		.ascii  "\x78\x00\xc8\x00\xc8"
		.fill   0x7
		.ascii  "\x14\x00\x14"
		.fill   0x9
		.ascii  "\xc8"
		.fill   0x1b
		.ascii  "\x96\x00\x00\x00\x32"
		.fill   0xb
		.ascii  "\x5e\x01"
		.fill   0xa
		.ascii  "\x96"
		.fill   0xb
		.ascii  "\x32\x00\x64\x00\x96"
		.fill   0x9
		.ascii  "\xc8\x00\xc8"
		.fill   0x1d
		.ascii  "\x14\x00\x14"
		.fill   0xd
		.ascii  "\x32"
		.fill   0x19

_092d66_data:
		.ascii  "\x54\x00\x2c\x00\x0d\x11\x04\xff"
		.ascii  "\x03\x00\x04\x00\x03\x0d\x03\x00"
		.ascii  "\x0c\x00\x0b\x00\x10\x10\x03\x04"
		.ascii  "\x07\x00\x06\x00\x1a\x19\x01\xff"
		.ascii  "\x02\x00\x01\x00\x08\x0d\x03\x02"
		.ascii  "\x4c\x00\x3f\x00\x0a\x16\x01\xff"
		.ascii  "\x05\x00\x08\x00\x0c\x08\x03\x00"
		.ascii  "\x06\x00\xf6\xff\x0c\x23\x03\x02"
		.ascii  "\x01\x00\x07\x00\x15\x05\x03\x04"
		.ascii  "\x47\x00\x31\x00\x12\x06\x01\xff"
		.ascii  "\x06\x00\xf6\xff\x0c\x23\x03\x02"
		.ascii  "\x01\x00\x07\x00\x15\x05\x03\x04"
		.ascii  "\x47\x00\x31\x00\x12\x06\x01\xff"
		.ascii  "\xeb\xff\xed\xff\x40\x40\x03\x00"
		.ascii  "\x69\x00\xa8\x00\x30\x3c\x01\xff"
		.ascii  "\x61\x00\x81\x00\x02\x02\x01\xff"
		.ascii  "\x08\x00\x06\x00\x14\x14\x03\x00"
		.ascii  "\x06\x00\x05\x00\x0a\x0b\x03\x00"
		.ascii  "\x4a\x00\x49\x00\x0d\x0e\x01\xff"
		.ascii  "\x09\x00\x0a\x00\x10\x10\x03\x00"
		.ascii  "\x0e\x00\x01\x00\x0e\x2c\x03\x00"
		.ascii  "\x09\x00\x0a\x00\x10\x10\x03\x00"
		.ascii  "\x08\x00\x06\x00\x14\x14\x03\x00"
		.ascii  "\x40\x00\x30\x00\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x0b\x00\x0a\x00"
		.ascii  "\x10\x10\x03\x00\x10\x00\x1a\x00"
		.ascii  "\x30\x26\x03\x00\x0b\x00\x0b\x00"
		.ascii  "\x10\x10\x03\x00\x01\x00\xf9\xff"
		.ascii  "\x0c\x22\x03\x02\x08\x00\x06\x00"
		.ascii  "\x14\x14\x03\x00\x01\x00\xf8\xff"
		.ascii  "\x0d\x1e\x03\x00\x06\x00\x03\x00"
		.ascii  "\x0b\x02\x03\x00\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\x3f\x00\x4d\x00"
		.ascii  "\x15\x0a\x04\xff\x08\x00\x05\x00"
		.ascii  "\x12\x17\x03\x03\x07\x00\x0e\x00"
		.ascii  "\x06\x07\x03\x00\x00\x00\x02\x00"
		.ascii  "\xd0\x06\x03\x03\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x47\x00\x38\x00"
		.ascii  "\x13\x12\x01\xff\x47\x00\x38\x00"
		.ascii  "\x13\x12\x01\xff\x4b\x00\x3a\x00"
		.ascii  "\x0c\x0c\x01\xff\x06\x00\x04\x00"
		.ascii  "\x18\x19\x06\x04\x02\x00\x04\x00"
		.ascii  "\x12\x0e\x03\x05\x08\x00\x08\x00"
		.ascii  "\x31\x33\x03\x06\x12\x00\x09\x00"
		.ascii  "\x10\x10\x03\x01\x13\x00\x02\x00"
		.ascii  "\x0e\x44\x03\x03\xfd\xff\xfe\xff"
		.ascii  "\x0b\x07\x03\x0a\x0a\x00\x06\x00"
		.ascii  "\x10\x13\x03\x00\x0b\x00\x07\x00"
		.ascii  "\x0e\x11\x03\x01\x0a\x00\x08\x00"
		.ascii  "\x11\x10\x03\x02\x18\x00\x18\x00"
		.ascii  "\x36\x35\x03\x04\x4c\x00\x3c\x00"
		.ascii  "\x08\x09\x01\xff\x15\x00\x14\x00"
		.ascii  "\x38\x38\x03\x00\x3f\x00\x28\x00"
		.ascii  "\x2b\x2d\x01\xff\x7b\x00\x82\x00"
		.ascii  "\x2b\x2d\x01\xff\xa8\x00\x8c\x00"
		.ascii  "\x20\x30\x01\xff\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x0a\x00\x06\x00"
		.ascii  "\x13\x0b\x03\x00\x0a\x00\x06\x00"
		.ascii  "\x13\x0b\x03\x01\x02\x00\x14\x00"
		.ascii  "\x20\x25\x03\x02\x0b\x00\x0d\x00"
		.ascii  "\x3b\x0c\x03\x03\x12\x00\x0e\x00"
		.ascii  "\x29\x29\x03\x0e\x12\x00\x0e\x00"
		.ascii  "\x29\x29\x03\x0f"
		.fill   0x4
		.ascii  "\x13\x20\x06\x0a\x04\x00\x00\x00"
		.ascii  "\x13\x20\x06\x0b\x4a\x00\x49\x00"
		.ascii  "\x0d\x0e\x01\xff\x46\x00\x44\x00"
		.ascii  "\x0e\x0c\x01\xff\x0f\x00\x03\x00"
		.ascii  "\x0c\x2a\x03\x00\x6d\x00\x33\x00"
		.ascii  "\x36\x38\x01\xff\x6f\x00\x98\x00"
		.ascii  "\x33\x17\x01\xff\x4f\x00\x53\x00"
		.ascii  "\x74\x26\x01\xff\x32\x00\x72\x00"
		.ascii  "\x34\x0f\x01\xff\x47\x00\x8c\x00"
		.ascii  "\x36\x15\x01\xff\x47\x00\x8c\x00"
		.ascii  "\x36\x15\x01\x00\x07\x00\x06\x00"
		.ascii  "\x1a\x19\x01\xff\x44\x00\x35\x00"
		.ascii  "\x21\x22\x01\xff\x04\x00\x01\x00"
		.ascii  "\x10\x1c\x03\x02\x09\x00\x09\x00"
		.ascii  "\x24\x09\x03\x00\x40\x00\x30\x00"
		.ascii  "\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x03\x00\x03\x00"
		.ascii  "\x0c\x0c\x03\x04\x07\x00\x04\x00"
		.ascii  "\x0d\x0b\x03\x06\x04\x00\x03\x00"
		.ascii  "\x11\x11\x03\x07\x0c\x00\x0b\x00"
		.ascii  "\x1f\x1c\x03\x0b\x0f\x00\x14\x00"
		.ascii  "\x16\x2f\x03\x0c\x0d\x00\xfa\xff"
		.ascii  "\x35\x21\x03\x10\x06\x00\x07\x00"
		.ascii  "\x1e\x0e\x03\x11\x47\x00\x31\x00"
		.ascii  "\x12\x06\x01\xff"
		.fill   0x4
		.ascii  "\x4b\x50\x03\x02\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x07\x00\x05\x00"
		.ascii  "\x13\x13\x01\xff\x02\x00\x01\x00"
		.ascii  "\x08\x0d\x03\x02\x4c\x00\x3f\x00"
		.ascii  "\x0a\x16\x01\xff\x07\x00\x06\x00"
		.ascii  "\x1a\x19\x01\xff\x00\x00\x02\x00"
		.ascii  "\xd0\x06\x03\x03\x04\x00\x04\x00"
		.ascii  "\x10\x10\x03\x00\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x02\x00\xff\xff"
		.ascii  "\x02\x1b\x03\x01\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x12\x00\x07\x00"
		.ascii  "\x20\x1d\x03\x02\x07\x00\x00\x00"
		.ascii  "\x1a\x17\x03\x05\x09\x00\x0b\x00"
		.ascii  "\x21\x0d\x01\xff\x09\x00\x0b\x00"
		.ascii  "\x21\x0d\x01\xff\xfa\xff\x7f\xff"
		.ascii  "\x16\x8b\x03\x03\x10\x00\x04\x00"
		.ascii  "\x08\x08\x03\x00\xf8\xff\x04\x00"
		.ascii  "\x08\x08\x03\x01\x00\x00\x04\x00"
		.ascii  "\x08\x08\x03\x02\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x04\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x05\x04\x00\x0c\x00"
		.ascii  "\x17\x06\x03\x00\x07\x00\x0c\x00"
		.ascii  "\x18\x08\x03\x01\x04\x00\x0c\x00"
		.ascii  "\x17\x06\x03\x00\x07\x00\x0c\x00"
		.ascii  "\x18\x08\x03\x01\x0e\x00\x05\x00"
		.ascii  "\x5d\x0c\x03\x08\x03\x00\x02\x00"
		.ascii  "\x16\x05\x03\x01\x0c\x00\xd8\xff"
		.ascii  "\x3c\x99\x01\xff\x48\x00\xd8\xff"
		.ascii  "\x3c\x99\x01\xff\x69\x00\xa8\x00"
		.ascii  "\x30\x3c\x01\xff\xa8\x00\x8c\x00"
		.ascii  "\x20\x30\x01\xff\x0a\x00\x06\x00"
		.ascii  "\x15\x10\x03\x00\x05\x00\x04\x00"
		.ascii  "\x0c\x0c\x03\x03\x06\x00\x04\x00"
		.ascii  "\x0c\x0c\x03\x06\x0b\x00\x07\x00"
		.ascii  "\x17\x12\x03\x08\x07\x00\x02\x00"
		.ascii  "\x10\x09\x03\x02\x0c\x00\x07\x00"
		.ascii  "\x2f\x0f\x03\x04\x0f\x00\x07\x00"
		.ascii  "\x38\x11\x03\x05\x04\x00\x02\x00"
		.ascii  "\x06\x32\x03\x07\x0a\x00\x16\x00"
		.ascii  "\x38\x07\x03\x08\x16\x00\x12\x00"
		.ascii  "\x16\x32\x03\x06\x10\x00\x02\x00"
		.ascii  "\x2b\x1e\x03\x01\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x40\x00\x30\x00"
		.ascii  "\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x02\x00\x02\x00"
		.ascii  "\x02\x28\x03\x01\x01\x00\x01\x00"
		.ascii  "\x1f\x02\x03\x01\xf3\xff\xf3\xff"
		.ascii  "\x30\x2b\x03\x03\x05\x00\x02\x00"
		.ascii  "\x1e\x11\x03\x07\xf3\xff\xf3\xff"
		.ascii  "\x30\x2b\x03\x03\x05\x00\x02\x00"
		.ascii  "\x1e\x11\x03\x07\x0d\x00\x04\x00"
		.ascii  "\x07\x08\x03\x08\x00\x00\x50\x00"
		.ascii  "\x80\x01\x01\xff\x40\x00\x00\x00"
		.ascii  "\x20\x80\x01\xff\x06\x00\x05\x00"
		.ascii  "\x07\x11\x03\x01\x07\x00\xf8\xff"
		.ascii  "\x09\x22\x03\x03\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x54\x00\x2a\x00"
		.ascii  "\x0d\x62\x04\xff\x05\x00\x01\x00"
		.ascii  "\x02\x13\x03\x00\x10\x00\x04\x00"
		.ascii  "\x08\x08\x03\x00\xf8\xff\x04\x00"
		.ascii  "\x08\x08\x03\x01\x00\x00\x04\x00"
		.ascii  "\x08\x08\x03\x02\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x04\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x05\x0b\x00\xba\x00"
		.ascii  "\x38\x22\x01\xff\x10\x00\xe8\xff"
		.ascii  "\x02\x51\x03"
		.fill   0x79

_0933a6_data:
		.fill   0xd
		.ascii  "\x10\x02\x08\x03\x08\x04\x10\x06"
		.ascii  "\x08\x00\x00\x07\x10\x09\x08\x0a"
		.ascii  "\x10\x0c\x08"
		.fill   0x1c
		.ascii  "\x0d\x08\x00\x00\x0e\x08\x0f\x08"
		.fill   0x4
		.ascii  "\x10\x08\x11\x08"
		.fill   0x4
		.ascii  "\x12\x08\x13\x08\x14\x08"
		.fill   0x4
		.ascii  "\x15\x08\x00\x00\x16\x08"
		.fill   0x4
		.ascii  "\x17\x20\x1b\x08\x1c\x08\x1d\x08"
		.fill   0xe
		.ascii  "\x1e\x08"
		.fill   0xe
		.ascii  "\x1f\x08"
		.fill   0x4
		.ascii  "\x20\x08\x21\x08\x22\x10"
		.fill   0x4
		.ascii  "\x24\x10\x26\x08"
		.fill   0x4
		.ascii  "\x27\x08"
		.fill   0x10
		.ascii  "\x28\x08\x29\x08\x2a\x08"
		.fill   0x4
		.ascii  "\x2b\x08\x2c\x18\x00\x00\x2f\x18"
		.fill   0x4
		.ascii  "\x32\x20\x36\x08"
		.fill   0x8
		.ascii  "\x37\x08\x00\x00\x38\x08\x00\x00"
		.ascii  "\x39\x08\x3a\x08"
		.fill   0x6
		.ascii  "\x3b\x08\x3c\x08\x3d\x08\x00\x00"
		.ascii  "\x3e\x40\x00\x00\x46\x08\x47\x08"
		.ascii  "\x48\x08\x00\x00\x49\x08\x4a\x18"
		.ascii  "\x4d\x10"
		.fill   0xa
		.ascii  "\x4f\x08"
		.fill   0x4
		.ascii  "\x50\x08"
		.fill   0x4
		.ascii  "\x51\x08"
		.fill   0x8
		.ascii  "\x52\x08\x00\x00\x53\x20"
		.fill   0x4
		.ascii  "\x57\x38\x5e\x08\x5f\x08"
		.fill   0x6
		.ascii  "\x60\x08"
		.fill   0x8
		.ascii  "\x61\x08"
		.fill   0x6
		.ascii  "\x62\x10\x00\x00\x64\x08\x65\x08"
		.ascii  "\x00\x00\x66\x08"
		.fill   0x6
		.ascii  "\x67\x10\x69\x08\x6a\x10\x00\x00"
		.ascii  "\x6c\x10\x6e\x10\x70\x10\x00\x00"
		.ascii  "\x72\x08\x73\x10\x75\x10\x77\x08"
		.ascii  "\x00\x00\x78\x10\x7a\x08\x7b\x08"
		.ascii  "\x00\x00\x7c\x08\x7d\x28\x82\x10"
		.ascii  "\x84\x10"
		.fill   0x10
		.ascii  "\x86\x08"
		.fill   0x4
		.ascii  "\x87\x08"
		.fill   0x4
		.ascii  "\x88\x08\x89\x08\x00\x00\x8a\x08"
		.ascii  "\x8b\x08"
		.fill   0x8
		.ascii  "\x8c\x20"
		.fill   0x8
		.ascii  "\x90\x30\x96\x08\x97\x10\x99\x10"
		.ascii  "\x9b\x20\x00\x00\x9f\x08\xa0\x08"
		.ascii  "\xa1\x10\xa3\x10\xa5\x08\xa6\x08"
		.ascii  "\x00\x00\xa7\x08"
		.fill   0x4
		.ascii  "\xa8\x10\xaa\x10\xac\x10\xae\x10"
		.ascii  "\xb0\x10\xb2\x28"
		.fill   0x6
		.ascii  "\xb7\x08\x00\x00\xb8\x08"
		.fill   0x18

_0935b4_data:
		.long   _02f788_func

_0935b8_data:
		.long   _061d94_func

_0935bc_data:
		.long   _02eea4_func

_0935c0_data:
		.long   _061e80_func
		.long   _060530_func
		.long   _02f788_func
		.long   _0635bc_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _0610e0_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _029334_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _0294fc_func
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _06078c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _0317a0_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _031714_func
		.long   _0317a0_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _061c18_func
		.long   _02eea4_func
		.long   _061d14_func
		.long   _060530_func
		.long   _0666b8_func
		.long   _0668dc_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _061b00_func
		.long   _02eea4_func
		.long   _061b68_func
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _061b00_func
		.long   _02eea4_func
		.long   _061b68_func
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _061898_func
		.long   _061a94_func
		.long   _02eea4_func
		.long   _061af8_func
		.long   _060530_func
		.long   _0622a0_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f42c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _062440_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0403d0_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _040d78_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f42c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _07d13c_func
		.long   _07da90_func
		.long   _02eea4_func
		.long   _07dbfc_func
		.long   _060530_func
		.long   _07c654_func
		.long   _07cd3c_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _060ad4_func
		.long   _060ba8_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _061160_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _07c448_func
		.long   _07c5f0_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _061380_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _07d208_func
		.long   _07da90_func
		.long   _02eea4_func
		.long   _07dbfc_func
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f42c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0212d8_func
		.long   _021dc0_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _07c654_func
		.long   _07cd3c_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f42c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0541e8_func
		.long   _054510_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _054818_func
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _061828_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _061884_func
		.long   _060530_func
		.long   _07c970_func
		.long   _07db58_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _062050_func
		.long   _060530_func
		.long   _028cd0_func
		.long   _028d24_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _028cc0_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02b2bc_func
		.long   _02eea4_func
		.long   _02b3a4_func
		.long   _060530_func
		.long   _02f788_func
		.long   _02b2bc_func
		.long   _02eea4_func
		.long   _02b3a4_func
		.long   _060530_func
		.long   _031524_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f42c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _01c864_func
		.long   _01c9f0_func
		.long   _02eea4_func
		.long   _01cab0_func
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _07c654_func
		.long   _07cd3c_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _07dd20_func
		.long   _07dfbc_func
		.long   _02eea4_func
		.long   _07e02c_func
		.long   _060530_func
		.long   _07543c_func
		.long   _0759fc_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _05cbd4_func
		.long   _05cf00_func
		.long   _02eea4_func
		.long   _05cba4_func
		.long   _060530_func
		.long   _05cfc8_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _075f44_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _03dad8_func
		.long   _03e2b8_func
		.long   _02eea4_func
		.long   _03e3d4_func
		.long   _060530_func
		.long   _03e470_func
		.long   _02d988_jump
		.long   _07ac90_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _07c9f0_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _032030_func
		.long   _02d988_jump
		.long   _032868_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _061264_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f844_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _03010c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _062110_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _0621d0_func
		.long   _060530_func
		.long   _02f788_func
		.long   _0759fc_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _0759fc_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _07543c_func
		.long   _0759fc_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _07543c_func
		.long   _0759fc_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _065f94_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _060ff0_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _01fefc_func
		.long   _01fe60_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _020a68_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _051c40_func
		.long   _051ec4_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _03188c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0527fc_func
		.long   _052c08_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _060f50_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0662f0_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f42c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _041570_func
		.long   _02d988_jump
		.long   _041904_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _07da20_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _07d900_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02fd24_func
		.long   _02d988_jump
		.long   _02fd94_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _022d7c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02aa70_func
		.long   _02b32c_func
		.long   _02eea4_func
		.long   _02b3d0_func
		.long   _060530_func
		.long   _02ac5c_func
		.long   _02b32c_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02acf8_func
		.long   _02b32c_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _07ac90_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _01f9bc_func
		.long   _01fd8c_func
		.long   _02eea4_func
		.long   _01fd5c_func
		.long   _060530_func
		.long   _022c1c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _07c448_func
		.long   _07c5f0_func
		.long   _02eea4_func
		.long   _07dc3c_func
		.long   _060530_func
		.long   _02323c_func
		.long   _02326c_func
		.long   _02eea4_func
		.long   _023310_func
		.long   _022f2c_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _06176c_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _060e74_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _060e48_func
		.long   _060e60_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _031840_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0663e8_func
		.long   _066570_func
		.long   _02eea4_func
		.long   _06692c_func
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _061124_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _031714_func
		.long   _0317a0_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _061324_func
		.long   _02d988_jump
		.long   _061344_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f42c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f42c_func
		.long   _02f4a8_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _05b79c_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _060e8c_func
		.long   _060ec4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0312d0_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _029334_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f844_func
		.long   _02faa8_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0302d4_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0545fc_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _0547ac_func
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _060f94_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _079884_func
		.long   _079b84_func
		.long   _02eea4_func
		.long   _079afc_func
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _061f14_func
		.long   _061fa8_func
		.long   _02eea4_func
		.long   _062004_func
		.long   _060530_func
		.long   _039d00_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _03a040_func
		.long   _060530_func
		.long   _02f42c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f42c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _030390_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0305c0_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _061190_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _07e138_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _07e484_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _061304_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _060cd0_func
		.long   _061c18_func
		.long   _02eea4_func
		.long   _061d14_func
		.long   _060530_func
		.long   _02f788_func
		.long   _07e4b8_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _031714_func
		.long   _0317a0_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0323b0_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0323b0_func
		.long   _02d988_jump
		.long   _032868_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _07c704_func
		.long   _07db58_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _031348_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _062540_func
		.long   _062810_func
		.long   _02eea4_func
		.long   _06294c_func
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _0317a0_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0309cc_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0309cc_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _076ae8_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _077024_func
		.long   _060530_func
		.long   _07543c_func
		.long   _0759fc_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _077034_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _0771d4_func
		.long   _060530_func
		.long   _062540_func
		.long   _062810_func
		.long   _02eea4_func
		.long   _06294c_func
		.long   _060530_func
		.long   _030390_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _064f90_func
		.long   _065430_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f42c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _064d10_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _052024_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0520e0_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _01bda0_func
		.long   _01c1c8_func
		.long   _02eea4_func
		.long   _01c2e0_func
		.long   _060530_func
		.long   _01c39c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _028dac_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _021e04_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _0227ec_func
		.long   _060530_func
		.long   _02291c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _022b40_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _030a48_func
		.long   _02d988_jump
		.long   _030d24_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _030d24_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _070454_unknown
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _030d38_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _041248_func
		.long   _02d988_jump
		.long   _041274_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _041248_func
		.long   _02d988_jump
		.long   _041274_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _03332c_func
		.long   _033760_func
		.long   _02eea4_func
		.long   _0337a0_func
		.long   _060530_func
		.long   _051c40_func
		.long   _051ec4_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _062234_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0337f8_func
		.long   _02d988_jump
		.long   _033ab0_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _06206c_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _052c4c_func
		.long   _052dd4_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _03f260_func
		.long   _03f3c4_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _030fe8_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0311a0_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _031238_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _03f4b8_func
		.long   _03f70c_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _062540_func
		.long   _062810_func
		.long   _02eea4_func
		.long   _06294c_func
		.long   _060530_func
		.long   _062540_func
		.long   _062810_func
		.long   _02eea4_func
		.long   _06294c_func
		.long   _060530_func
		.long   _0541e8_func
		.long   _054510_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _060df0_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _03f7cc_func
		.long   _03fc98_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _03f7cc_func
		.long   _03fc98_func
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _03fe7c_func
		.long   _02d988_jump
		.long   _040088_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _033c7c_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _03dad8_func
		.long   _03e2b8_func
		.long   _02eea4_func
		.long   _03e3d4_func
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0309cc_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0309cc_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _052024_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _034154_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _062448_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _0289a8_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _028910_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func
		.long   _02f788_func
		.long   _02d988_jump
		.long   _02eea4_func
		.long   _05766c_unknown
		.long   _060530_func

_094a2c_data:
		.ascii  "\x00\x16\x12\x0d\x0d\x0c"

_094a32_data:
		.ascii  "\x04\x00\x00\x00\x03\x00\x07\x00"
		.ascii  "\x0a\x00\x0d\x00\x10\x00\x13\x00"
		.ascii  "\x16\x00\x19\x00\x1c\x00\x1f\x00"
		.ascii  "\x22\x00\x25\x00\x28\x00\x2a\x00"
		.ascii  "\x2d\x00"

_094a54_data:
		.ascii  "\x08\x08\x08\x08\x08\x08\x08\x08"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x06\x06\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"

_094b54_data:
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xc4\xff\xe6\xff"
		.ascii  "\x08\x00\x20\x00\x4b\x00\x20\x00"
		.ascii  "\x08\x00\xe6\xff\xc4\xff"

_094b7a_data:
		.ascii  "\xff\xff"
		.fill   0x14
		.ascii  "\x20\x00\x20\x00\x30\x00\x30\x00"
		.ascii  "\x30\x00\x30\x00\x30\x00\x20\x00"
		.ascii  "\x20\x00"

_094ba2_data:
		.ascii  "\x00\x00"

_094ba4_data:
		.fill   0x14
		.ascii  "\x20\x00\x20\x00\x30\x00\x30\x00"
		.ascii  "\x3c\x00\x30\x00\x30\x00\x20\x00"
		.ascii  "\x20\x00\x00\x00"

_094bcc_data:
		.ascii  "\x00\x00\x57\x03\x39\x03\x00\x00"
		.ascii  "\xff\xfc\x1a\xfd\xff\xff\xb2\x02"
		.ascii  "\x9a\x02\x00\x00\x93\xfd\xa9\xfd"
		.ascii  "\xff\xff\x2d\x02\x19\x02\x00\x00"
		.ascii  "\x0b\xfe\x1c\xfe\xff\xff\xc1\x01"
		.ascii  "\xb2\x01\x00\x00\x6b\xfe\x79\xfe"
		.ascii  "\xff\xff\x6b\x01\x5e\x01\x00\x00"
		.ascii  "\xb9\xfe\xc5\xfe\xff\xff\x24\x01"
		.ascii  "\x1a\x01\x00\x00\xf8\xfe\x01\xff"
		.ascii  "\xff\xff\xec\x00\xe4\x00\x00\x00"
		.ascii  "\x2b\xff\x32\xff\xff\xff\xbe\x00"
		.ascii  "\xb8\x00\x00\x00\x54\xff\x5a\xff"
		.ascii  "\xff\xff\x99\x00\x94\x00\x00\x00"
		.ascii  "\x75\xff\x7a\xff\xff\xff\x7c\x00"
		.ascii  "\x78\x00\x00\x00\x90\xff\x94\xff"
		.ascii  "\xff\xff\x50\x00\x80\x7f"

_094c4a_data:
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"

_094caa_data:
		.ascii  "\xff\x00\x00\x00\xfd\xff\xfa\xff"
		.ascii  "\xf8\xff\xf7\xff\xf6\xff\xf7\xff"
		.ascii  "\xf9\xff\xfb\xff\xfe\xff\x02\x00"
		.ascii  "\x06\x00\x07\x00"

_094cc6_data:
		.ascii  "\x04\x00\x09\x00\x00\x00\x07\x00"
		.ascii  "\x05\x00"

_094cd0_data:
		.ascii  "\x80"
		.string "~}|zyxwutsrponmljihgfecba`_^]\\[ZYXWVUTSRQPONNMLKJIIHGFFEDDCBAA@@"

_094d12_data:
		.ascii  "\x00\x00"

_094d14_data:
		.ascii  "\x1d\x00"

_094d16_data:
		.ascii  "\x08\x01"

_094d18_data:
		.ascii  "\x12"

_094d19_data:
		.ascii  "\x00"

_094d1a_data:
		.ascii  "\x00"

_094d1b_data:
		.ascii  "\x01"

_094d1c_data:
		.ascii  "\x01"

_094d1d_data:
		.ascii  "\x00"

_094d1e_data:
		.ascii  "\x01"

_094d1f_data:
		.ascii  "\x01"

_094d20_data:
		.ascii  "\x02\x00\x00\x00"

_094d24_data:
		.long   _0bfde0_data
		.ascii  "\x64\x00\xfe\x00\x02\x01\x00\x04"

_094d30_data:
		.ascii  "\x00\x00\x01\x05"
		.fill   0x4
		.long   _0bfde0_data
		.ascii  "\x5a\x00\xd4\x00\x02\x01\x03\x02"

_094d44_data:
		.ascii  "\x00\x00\x01\x09\x02\x00\x00\x00"
		.long   _0bfde0_data
		.ascii  "\x2f\x00\xc8\x00\x03\x03\x03\x02"

_094d58_data:
		.ascii  "\x00\x00\x01\x0c\x01\x00\x00\x00"
		.long   _0bfde0_data
		.ascii  "\xb4\x00\xd7\x00\x05\x13\x01\x04"

_094d6c_data:
		.ascii  "\x00\x00\x02\x01\x02\x00\x00\x00"
		.long   _0bfde0_data
		.ascii  "\xb9\x00\xaf\x00\x08\x04\x06\x08"

_094d80_data:
		.ascii  "\x00\x00\x02\x07"
		.fill   0x4
		.long   _0bfde0_data
		.ascii  "\x87\x00\xa0\x00\x14\x06\x07\x05"

_094d94_data:
		.ascii  "\x00\x00\x02\x0c\x02\x00\x00\x00"
		.long   _0bfde0_data
		.ascii  "\x5b\x00\x8f\x00\x07\x07\x07\x06"

_094da8_data:
		.ascii  "\x00\x00\x02\x0e\x03\x00\x00\x00"
		.long   _0bfde0_data
		.ascii  "\xd4\x00\x85\x00\x09\x05\x05\x08"

_094dbc_data:
		.ascii  "\x00\x00\x03\x01\x01\x00\x00\x00"
		.long   _0bfde0_data
		.ascii  "\xd1\x00\x5c\x00\x15\x08\x09\x0a"

_094dd0_data:
		.ascii  "\x00\x00\x03\x03"
		.fill   0x4
		.long   _0bfde0_data
		.ascii  "\x01\x01\x50\x00\x0a\x0b\x09\x0a"

_094de4_data:
		.ascii  "\x00\x00\x03\x06\x01\x00\x00\x00"
		.long   _0bfde0_data
		.ascii  "\xea\x00\xeb\x00\x0a\x0b\x0b\x0c"

_094df8_data:
		.ascii  "\x00\x00\x04\x01\x01\x00\x00\x00"
		.long   _0bfde0_data
		.ascii  "\x16\x01\xbe\x00\x0d\x0b\x0b\x0c"

_094e0c_data:
		.ascii  "\x00\x00\x04\x05\x05\x00\x00\x00"
		.long   _0bfde0_data
		.ascii  "\x22\x01\x91\x00\x16\x0c\x0d\x0e"

_094e20_data:
		.ascii  "\x00\x00\x04\x08\x01\x00\x00\x00"
		.long   _0bfde0_data
		.ascii  "\x4f\x01\xb4\x00\x0d\x0f\x0d\x0e"

_094e34_data:
		.ascii  "\x00\x00\x05\x01"
		.fill   0x4
		.long   _0bfde0_data
		.ascii  "\x38\x01\xe4\x00\x0e\x17\x0f\x10"

_094e48_data:
		.ascii  "\x00\x00\x05\x03\x05\x00\x00\x00"
		.long   _0bfde0_data
		.ascii  "\x68\x01\xdc\x00\x11\x10\x0f\x10"

_094e5c_data:
		.ascii  "\x00\x00\x05\x09\x02\x00\x00\x00"
		.long   _0bfde0_data
		.ascii  "\x65\x01\x50\x00\x11\x10\x11\x11"

_094e70_data:
		.ascii  "\x00\x00\x06\x01\x02\x00\x00\x00"
		.long   _0bfde0_data
		.ascii  "\x0a\x00\xd4\x00\x12\x00\x12\x12"

_094e84_data:
		.ascii  "\x00\x00\x07\x14\x05\x00\x00\x00"

_094e8c_data:
		.long   _0bfde0_data
		.ascii  "\xb6\x00\x0a\x01\x04\x13\x13\x13"

_094e98_data:
		.ascii  "\x00\x00\x07\x14\x03\x00\x00\x00"

_094ea0_data:
		.long   _0bfde0_data
		.ascii  "\x91\x00\x61\x00\x14\x06\x14\x14"

_094eac_data:
		.ascii  "\x00\x00\x07\x14"
		.fill   0x4

_094eb4_data:
		.long   _0bfde0_data
		.ascii  "\xbe\x00\x2d\x00\x15\x09\x15\x15"

_094ec0_data:
		.ascii  "\x00\x00\x07\x14\x02\x00\x00\x00"

_094ec8_data:
		.long   _0bfde0_data
		.ascii  "\x14\x01\x73\x00\x16\x0d\x16\x16"

_094ed4_data:
		.ascii  "\x00\x00\x07\x14\x01\x00\x00\x00"

_094edc_data:
		.long   _0bfde0_data
		.ascii  "\x32\x01\x0b\x01\x0f\x17\x17\x17"

_094ee8_data:
		.ascii  "\x00\x00\x07\x14\x01\x00\x00\x00"

_094ef0_data:
		.ascii  "\xe0\xfd\x0b"

_094ef3_data:
		.ascii  "\x00\x0e\x0e\x09\x0e\x0e\x05\x0e"
		.ascii  "\x09\x0e\x0e\x0e\x0e\x0e\x0e\x0e"
		.ascii  "\x05\x09\x0f\x0f\x0f\x0f\x0f\x11"
		.ascii  "\x11\x11\x11\x11\x11\x11\x11\x11"
		.ascii  "\x11\x09\x11\x11\x11\x07\x07\x0f"
		.ascii  "\x0f"
		.fill   0x4
		.ascii  "\x10\x10\x10\x10\x10\x10\x10\x10"
		.ascii  "\x10\x06\x09\x0f\x0f"
		.fill   0x9
		.ascii  "\x0d\x0d\x0d\x04"
		.ascii   "\r\r\r\r\r\r"
		.ascii  "\x04\x0f\x0f"
		.fill   0x9
		.ascii  "\x08\x08\x08\x08\x08\x08\x08\x08"
		.ascii  "\x08\x03\x03\x0f"
		.fill   0xa
		.ascii  "\x0b\x0b\x0b\x02"
		.fill   0xe

_094f74_data:
		.fill   0x4
		.ascii  "\x25\x01\x00\x00\x25\x01\x00\x00"
		.ascii  "\x51\x00\x00\x00\x25\x01\x00\x00"
		.ascii  "\x25\x01\x00\x00\x97\x00\x00\x00"
		.ascii  "\x25\x01\x00\x00\x51\x00\x00\x00"
		.ascii  "\x25\x01\x00\x00\x25\x01\x00\x00"
		.ascii  "\x25\x01\x00\x00\x25\x01\x00\x00"
		.ascii  "\x25\x01\x00\x00\x25\x01\x00\x00"
		.ascii  "\x25\x01\x00\x00\x97\x00\x00\x00"
		.ascii  "\x51\x00\x00\x00\x46\x00\x00\x00"
		.ascii  "\x46\x00\x00\x00\x46\x00\x00\x00"
		.ascii  "\x46\x00\x00\x00\x46\x00\x00\x00"
		.ascii  "\x3b\x01\x00\x00\x3b\x01\x00\x00"
		.ascii  "\x3b\x01\x00\x00\x3b\x01\x00\x00"
		.ascii  "\x3b\x01\x00\x00\x3b\x01\x00\x00"
		.ascii  "\x3b\x01\x00\x00\x3b\x01\x00\x00"
		.ascii  "\x3b\x01\x00\x00\x3b\x01\x00\x00"
		.ascii  "\x51\x00\x00\x00\x3b\x01\x00\x00"
		.ascii  "\x3b\x01\x00\x00\x3b\x01\x00\x00"
		.ascii  "\x95\x00\x00\x00\x95\x00\x00\x00"
		.ascii  "\x46\x00\x00\x00\x46"
		.fill   0x13
		.ascii  "\xce\x00\x00\x00\xce\x00\x00\x00"
		.ascii  "\xce\x00\x00\x00\xce\x00\x00\x00"
		.ascii  "\xce\x00\x00\x00\xce\x00\x00\x00"
		.ascii  "\xce\x00\x00\x00\xce\x00\x00\x00"
		.ascii  "\xce\x00\x00\x00\x94\x00\x00\x00"
		.ascii  "\x51\x00\x00\x00\x46\x00\x00\x00"
		.ascii  "\x46"
		.fill   0x27
		.ascii  "\x02\x01\x00\x00\x02\x01\x00\x00"
		.ascii  "\x02\x01\x00\x00\x97\x00\x00\x00"
		.ascii  "\x02\x01\x00\x00\x02\x01\x00\x00"
		.ascii  "\x02\x01\x00\x00\x02\x01\x00\x00"
		.ascii  "\x02\x01\x00\x00\x02\x01\x00\x00"
		.ascii  "\x97\x00\x00\x00\x46\x00\x00\x00"
		.ascii  "\x46"
		.fill   0x27
		.ascii  "\x1a\x01\x00\x00\x1a\x01\x00\x00"
		.ascii  "\x1a\x01\x00\x00\x1a\x01\x00\x00"
		.ascii  "\x1a\x01\x00\x00\x1a\x01\x00\x00"
		.ascii  "\x1a\x01\x00\x00\x1a\x01\x00\x00"
		.ascii  "\x1a\x01\x00\x00\x92\x00\x00\x00"
		.ascii  "\x92\x00\x00\x00\x46"
		.fill   0x2b
		.ascii  "\xd8\x00\x00\x00\xd8\x00\x00\x00"
		.ascii  "\xd8\x00\x00\x00\x94"
		.fill   0x4b

_095188_data:
		.fill   0x4

_09518c_data:
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x6e\x00\x01\x04\x02\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x70\x00\x02\x66\x01\x00"
		.long   _0bfde4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfdf4_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x71\x00\x02\x66\x02\x00"
		.long   _0bfe08_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x02\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x73\x00\x02\x66\x05\x00"
		.long   _0bfde4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfe1c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x05\x00"
		.long   _0bfe2c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfe3c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfe50_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfe64_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfe74_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x05\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x74\x00\x02\x66\x00\x00"
		.long   _0bfe08_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x00\x00"
		.long   _0bfe8c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfea0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfeb0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfec4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfed8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfee8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bff00_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bff14_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bff28_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x75\x00\x02\x66\x01\x00"
		.long   _0bff40_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff50_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x72\x00\x02\x66\x00\x00"
		.long   _0bff64_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bff84_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bff94_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bffa8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bffc0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bffd4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bffe8_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x76\x00\x02\x66\x05\x00"
		.long   _0bfffc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0010_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0024_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x05\x00"
		.long   _0c0034_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0048_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c005c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0070_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0084_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0098_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c00ac_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfdf4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c00c0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c00d4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c00ec_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0100_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0110_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0124_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0138_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0148_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x05\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x77\x00\x02\x66\x00\x00"
		.long   _0c0160_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c0178_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x00\x00"
		.long   _0c0188_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c019c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c01b0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c01c4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c01d8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c01e8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c01f8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c020c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c0224_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c0238_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c024c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c0260_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c0274_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c0288_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x78\x00\x02\x66\x01\x00"
		.long   _0c0298_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x01\x00"
		.long   _0c02ac_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c02c0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c02d0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c02e4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c02f4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c0308_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x79\x00\x02\x66\x01\x00"
		.long   _0bfe1c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x01\x00"
		.long   _0c031c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c032c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bffa8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe2c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c0340_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe3c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe50_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c0358_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe64_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c0368_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c0378_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c0388_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe74_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c03a0_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x7a\x00\x02\x66\x02\x00"
		.long   _0c03b4_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x02\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x7b\x00\x02\x66\x05\x00"
		.long   _0c03c4_data
		.ascii  "\xa0\x00\x00\x00\x02\x02\x05\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x7c\x00\x02\x66\x05\x00"
		.long   _0c03e4_data
		.ascii  "\xa0\x00\x00\x00\x02\x02\x05\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x7d\x00\x02\x66\x05\x00"
		.long   _0c0408_data
		.ascii  "\xa0\x00\x00\x00\x02\x04\x05\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x7e\x00\x02\x00\x01\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x7f\x00\x02\x06\x01\x00"
		.long   _0bfde0_data
		.ascii  "\xa0\x00\x80\x00\x01\x00\x01\x00"
		.long   _0c0428_data
		.ascii  "\xc8\x00\x00\x00\x02\xff\x02"
		.fill   0xf1

_0957e0_data:
		.ascii  "\x00\x29\x20\x08\x00\x13\x20\x1b"
		.ascii  "\x00\x1e\x04\x02\x00\x3c\x20\x0b"
		.ascii  "\x00\x10\x04\x0c\x00\x45\x04\x07"
		.ascii  "\x24\x14\x20\x1b\x00\x4a\x80\x2a"
		.ascii  "\xa0\x04\x20\x08\x24\x0b\x20\x7c"
		.ascii  "\x24\x13\x20\x3a\x00\x1c\x10\x2e"
		.ascii  "\x00\x0d\x80\x17\x90\x01\x10\x17"
		.ascii  "\x90\x01\x80\x1f\x90\x02\x10\x34"
		.ascii  "\x00\x21\x80\x03\x90\x01\x10\x17"
		.ascii  "\x90\x01\x80\x1b\x90\x03\x10\x4a"
		.ascii  "\x00\x44\x80\x1f\x90\x01\x10\x04"
		.ascii  "\x14\x0c\x10\x0e\x00\x08\xa0\x1d"
		.ascii  "\x80\x02\x90\x01\x80\xca\x90\x0d"
		.ascii  "\x10\x23\x00\x11\x20\x24\x00\x13"
		.ascii  "\x20\x0d\xa0\x01\x80\x16\xa0\x19"
		.ascii  "\x20\x26\x24\x0e\x20\x1d\x00\x10"
		.ascii  "\x80\x19\x90\x11\x80\x01\x90\x01"
		.ascii  "\x80\x0c\xa0"
		.ascii   "0 #$"
		.ascii  "\x04"
		.ascii   " u$\t "
		.ascii  "\x0f\x00\x55\x10\x02"
		.fill   0x61
		.ascii  "\x29\x20\x0c\x24\x13\x04\x02\x14"
		.ascii  "\x01\x10\x09\x14\x01\x04\x0c\x00"
		.ascii  "\x1a\x04\x05\x00\x2b\x10\x07\x00"
		.ascii  "\x07\x20\x07\x00\x02\x04\x03\x00"
		.ascii  "\x02\x10\x01\x50\x01\x10\x06\x00"
		.ascii  "\x07\x20\x08\x00\x4b\x04\x05\x00"
		.ascii  "\x3f\x10\x06\x00\x0e\x20\x09\x00"
		.ascii  "\x09\x04\x06\x00\x0c\x20\x37\x00"
		.ascii  "\x05\x10\x02\x50\x1c\x10\x01\x04"
		.ascii  "\x05\x00\x14\x10\x07\x00\x08\x20"
		.ascii  "\x05\x00\x38\x04\x04\x00\x0e\x10"
		.ascii  "\x08\x00\x22\x20\x06\x00\x19\x54"
		.ascii  "\x04\x50\x17\x10\x15\x00\x08\x20"
		.ascii  "\x16\x00\x0f\x20\x0b\x00\x01\x04"
		.ascii  "\x06\x00\x0d\x10\x06\x00\x52\x04"
		.ascii  "\x04\x00\x58\x20\x04\x24\x04\x20"
		.ascii  "\x2c\x00\x0a\x10\x02\x50\x17\x10"
		.ascii  "\x02\x00\x0d\x04\x04\x00\x0a\x10"
		.ascii  "\x03\x00\x0a\x20\x04\x00\x10\x10"
		.ascii  "\x05\x00\x34\x04\x04\x00\x33\x10"
		.ascii  "\x04\x00\x0d\x20\x03\x00\x1b\x04"
		.ascii  "\x05\x00\x47\x04\x04\x00\x51\x04"
		.ascii  "\x04\x00\x21\x10\x0c\x00\x13\x20"
		.ascii  "\x06\x00\x05\x04\x07\x00\x42"
		.fill   0x3b
		.ascii  "\x1d\x20\x32\x24\x08\x20\x0d\x21"
		.ascii  "\x05\x20\x08\x00\x0c\x20\x01\x24"
		.ascii  "\x08\x20\x07\x00\x09\x20\x06\x24"
		.ascii  "\x05\x20\x36\x24\x02\x04\x0a\x00"
		.ascii  "\x07\x20\x03\x00\x11\x20\x03\x22"
		.ascii  "\x03\x26\x01\x66\x06\x62\x01\x22"
		.ascii  "\x20\x02\x14\x22\x04\x26\x08\x22"
		.ascii  "\x0f\x26\x0a\x22\x16\x00\x18\x20"
		.ascii  "\x08\x00\x47\x20\x05\x24\x05\x20"
		.ascii  "\x1b\x00\x05\x04\x06\x00\x04\x04"
		.ascii  "\x07\x00\x0d\x22\x89\x26\x0d\x22"
		.ascii  "\x15\x02\x02\x00\x1c\x20\x08\x24"
		.ascii  "\x07\x20\x19\x00\x0c\x20\x03\x24"
		.ascii  "\x03\x20\x02\x00\x0c\x20\x17\x24"
		.ascii  "\x08\x20\x07\x24\x01\x04\x06\x00"
		.ascii  "\x16\x20\x09\x24\x0b\x20\x22\x24"
		.ascii  "\x03\x20\x15\x24\x0a\x20\x10\x00"
		.ascii  "\x1b\x20\x08\x24\x08\x20\x0c"
		.string "$\r K"
		.ascii  "\x46\x02\x27\x22\x05\x26\x06\x22"
		.ascii  "\x12\x26\x0e\x22\x2b\x02\x01\x00"
		.ascii  "\x10\x20\x06\x00\x2d\x04\x12\x00"
		.ascii  "\x09\x04\x12\x00\x15\x01\x57\x00"
		.ascii  "\x16\x04\x0b\x00\x0e\x04\x23\x00"
		.ascii  "\x2b\x01\x22\x00\x1b\x04\x0d\x00"
		.ascii  "\x1a\x04\x13"
		.fill   0x33
		.ascii  "\x28\x20\x4a\x00\x03\x20\x25\x24"
		.ascii  "\x0c\x20\x07\x00\x15\x01\x09\x00"
		.ascii  "\x0e\x80\x1d\x00\x1e\x20\x0a\x24"
		.ascii  "\x1a\x20\x0b\x00\x22\x20\x10\x24"
		.ascii  "\x09\x20\x13\x00\x10\x20\x10\x00"
		.ascii  "\x04\x01\x3d\x00\x1c\x80\x35\x00"
		.ascii  "\x0c\x01\x20\x81\x03\x80\x2f\x00"
		.ascii  "\x03\x01\x1b\x81\x04\x80\x34\x00"
		.ascii  "\x0f\x20\x09\x24\x08\x20\x17\x00"
		.ascii  "\x20\x20\x07\x00\x09\x04\x14\x00"
		.ascii  "\x11\x01\x07\x00\x11\x80\x24\x00"
		.ascii  "\x1d\x20\x01\x24\x0e\x20\x15\x00"
		.ascii  "\x1f\x20\x02\x24\x1e\x20\x09\x00"
		.ascii  "\x0f\x10\x08\x00\x04\x01\x29\x00"
		.ascii  "\x2c\x10\x0e\x14\x07\x10\x2c\x00"
		.ascii  "\x12\x04\x1f\x24\x07\x20\x22\x00"
		.ascii  "\x06\x20\x02\x24\x05\x20\x0f\x00"
		.ascii  "\x2e\x10\x18\x00\x0c\x20\x06\x00"
		.ascii  "\x21\x20\x05\x24\x05\x20\x14\x24"
		.ascii  "\x0e\x20\x10\x00\x34\x20\x10\x00"
		.ascii  "\x0e\x80\x0f\xa0\x13\xa4\xff\xa4"
		.ascii  "\x22\xa0\x28"
		.fill   0x4f
		.ascii  "\xbc\x20\x10\x00\xb0\x02\x0e\x00"
		.ascii  "\x2a\x04\x17\x00\x15\x04\x02\x24"
		.ascii  "\x11\x20\x02\x00\x1d\x04\x01\x24"
		.ascii  "\x08\x20\x02\x00\x25\x20\x0d\x00"
		.ascii  "\x0a\x02\x0b\x00\x76\x04\x0f\x00"
		.ascii  "\x2b\x04\x0a\x24\x04\x20\x02\x00"
		.ascii  "\x2b\x10\x14\x14\x13\x10\x27\x14"
		.ascii  "\x07\x10\x1f\x00\x15\x02\x0e\x00"
		.ascii  "\x29\x04\x18\x00\x13\x20\x05\x00"
		.ascii  "\x58\x04\x12\x24\x0c\x20\x01\x00"
		.ascii  "\x66\x04\x05\x24\x07\x20\x0b\x00"
		.ascii  "\x06\x20\x01\x00\x1a\x02\x0a\x00"
		.ascii  "\x34\x04\x0c\x00\x19\x10\x04\x00"
		.ascii  "\x17\x04\x02\x14\x02\x04\x06\x00"
		.ascii  "\x61\x04\x02\x14\x02\x54\x0a\x14"
		.ascii  "\x01\x10\x16\x00\x08\x01\x05\x00"
		.ascii  "\x1b\x10\x45\x00\x07\x20\x34\x00"
		.ascii  "\x0a\x02\x0a\x00\x2e\x04\x10\x00"
		.ascii  "\x10\x20\x09\x00\x0a\x04\x06\x24"
		.ascii  "\x0e\x20\x05\x00\x04\x10\x08\x00"
		.ascii  "\x02\x01\x06\x00\xa5\x20\x21\x00"
		.ascii  "\x05\x20\x14\x00\x0c\x02\x08\x00"
		.ascii  "\x26\x04\x11\x00\x19\x10\x04\x14"
		.ascii  "\x05\x04\x02\x00\x20\x14\x09\x10"
		.ascii  "\x08\x00\x1e\x10\x4a\x00\x80"
		.fill   0x33
		.ascii  "\x54\x10\x25\x00\x1a\x10\x03\x00"
		.ascii  "\x0a\x20\x06\x00\x3a\x10\x0d\x00"
		.ascii  "\x09\x20\x03\x00\xff\x00\x0b\x20"
		.ascii  "\x03\x24\x11\x20\x13\x00\x17\x10"
		.ascii  "\x07\x50\x02\x54\x1f\x50\x11\x10"
		.ascii  "\x01\x00\x11\x20\x03\x00\x8b\x20"
		.ascii  "\x04\x24\x0f\x20\x13\x00\x2d\x10"
		.ascii  "\x03\x50\x03"
		.ascii   "T P\t"
		.ascii  "\x10\x04\x00\x31\x20\x02\x00\x73"
		.ascii  "\x04\x18\x00\x35\x04\x18\x00\x4a"
		.ascii  "\x20\x08\x24\x1e\x20\x0b\x24\x12"
		.ascii  "\x20\x03\x00\x19\x20\x27\x00\x44"
		.ascii  "\x04\x0e\x00\x07\x20\x05\x00\x50"
		.ascii  "\x04\x13\x14\x09\x04\x01\x00\x20"
		.ascii  "\x10\x04\x00\x11\x20\x04\x00\x22"
		.fill   0x80

_095dba_data:
		.ascii  "\x00\x00\x9a\x00\xc0\x00\xc8\x00"
		.ascii  "\xac\x00\xc8\x00\x78\x00"

_095dc8_data:
		.ascii  "\x02\x00\x03\x00\x04\x00\x05\x00"
		.ascii  "\x01\x00\x05\x00"

_095dd4_data:
		.ascii  "\x07\x00\x07\x00\x01\x00\x04\x00"
		.ascii  "\x09\x00\x0a\x00"

_095de0_data:
		.ascii  "\x00\x00\x0a\x00"

_095de4_data:
		.ascii  "\xff"

_095de5_data:
		.ascii  "\xff\x00\x00"

_095de8_data:
		.fill   0x4

_095dec_data:
		.fill   0x4

_095df0_data:
		.ascii  "\x4d"

_095df1_data:
		.ascii  "\x48"

_095df2_data:
		.ascii  "\x4b"

_095df3_data:
		.ascii  "\x50"

_095df4_data:
		.ascii  "\x39"

_095df5_data:
		.ascii  "\x38"

_095df6_data:
		.ascii  "\x1d\x00"

_095df8_data:
		.long   _095df2_data

_095dfc_data:
		.long   _095df1_data

_095e00_data:
		.long   _095df0_data

_095e04_data:
		.long   _095df3_data

_095e08_data:
		.long   _095df5_data

_095e0c_data:
		.long   _095df4_data

_095e10_data:
		.long   _095df6_data

_095e14_data:
		.ascii   "KHMP89"
		.ascii  "\x1d"

_095e1b_data:
		.ascii  "\x00"

_095e1c_data:
		.ascii  "\x00\x00"

_095e1e_data:
		.ascii  "\x01\x00"

_095e20_data:
		.ascii  "\x00\x00"

_095e22_data:
		.ascii  "\x00\x00"

_095e24_data:
		.ascii  "\x00"

_095e25_data:
		.ascii  "\x01"

_095e26_data:
		.ascii  "\x01\x00"

_095e28_data:
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"

_095e38_data:
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"

_095e48_data:
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"

_095e58_data:
		.ascii  "\xff\x00\xff\x00"

_095e5c_data:
		.ascii  "\xff\x00\xff\x00"

_095e60_data:
		.ascii  "\xff\x00"

_095e62_data:
		.ascii  "\xff\x00"

_095e64_data:
		.ascii  "\xff\x00\xff\x00"

_095e68_data:
		.ascii  "\x00"

_095e69_data:
		.ascii  "\x00"

_095e6a_data:
		.ascii  "\x00\x00"

_095e6c_data:
		.ascii  "\x01\x00"

_095e6e_data:
		.ascii  "\x01"

_095e6f_data:
		.ascii  "\x00"

_095e70_data:
		.fill   0x8

_095e78_data:
		.ascii  "\x01"

_095e79_data:
		.ascii  "\x01\x00\x00"

_095e7c_data:
		.ascii  "\x00\x00"

_095e7e_data:
		.ascii  "\x00\x00"

_095e80_data:
		.ascii  "\x02\x00\xff"
		.fill   0x19
		.ascii  "\x02\x00\x01\x00\x03\x00\xff"
		.fill   0x13
		.ascii  "\x06\x00\x02\x00\x02\x00\x02\x00"
		.ascii  "\x00\x00\x01\x00\x01\x00\x01"
		.fill   0x5
		.ascii  "\xff"
		.fill   0x7
		.ascii  "\x03"
		.fill   0x5
		.ascii  "\x01\x00\x01\x00\x01\x00\xff"
		.fill   0xf
		.ascii  "\x05\x00\x01\x00\x02\x00\x03"
		.fill   0x5
		.ascii  "\x03\x00\x01\x00\x04\x00\x00\x00"
		.ascii  "\xff"
		.fill   0x7
		.ascii  "\x07\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x06\x00\x00\x00\x03"
		.fill   0x5
		.ascii  "\x01\x00\x04\x00\x00\x00\xff"
		.fill   0x5

_095f28_data:
		.ascii  "\x20"

_095f29_data:
		.ascii  "\x07"

_095f2a_data:
		.ascii  "\x3f\x1f\x07\x3d\x20\x07\x3a\x21"
		.ascii  "\x07"
		.ascii   "8$\n5%"
		.ascii  "\x0c\x33\x2d\x0f\x30\x34\x11\x2e"
		.ascii  "\x2d\x0f\x30\x28\x0f\x33\x23\x0c"
		.ascii   "5#\n8 "
		.ascii  "\x07\x3a\x1e\x05\x3d\x1b\x05\x3d"
		.ascii  "\x20"

_095f56_data:
		.ascii  "\x07\x3f"

_095f58_data:
		.ascii  "\x00\x00"

_095f5a_data:
		.ascii  "\x00\x00"

_095f5c_data:
		.ascii  "\x00\x00"

_095f5e_data:
		.ascii  "\x00\x00"

_095f60_data:
		.ascii  "\x00\x00"

_095f62_data:
		.ascii  "\x00\x00"

_095f64_data:
		.ascii  "\x00\x00"

_095f66_data:
		.ascii  "\x00\x00"

_095f68_data:
		.ascii  "\x00\x00"

_095f6a_data:
		.ascii  "\x00"

_095f6b_data:
		.ascii  "\x00"

_095f6c_data:
		.ascii  "\x09\x0f\x05\x13\x14\x0a\x15\x19"
		.ascii  "\x0a\x22\x1e"
		.ascii   "\n$#\n'(\n)-\n)2\n.7\n1<\n3<\n6<\n8<\n;<\n=<\n?"

_095f9a_data:
		.ascii  "\x00\x00"

_095f9c_data:
		.ascii  "\x00\x00"

_095f9e_data:
		.ascii  "\x00"

_095f9f_data:
		.ascii  "\x00"

_095fa0_data:
		.ascii  "\x14"

_095fa1_data:
		.ascii  "\x00"

_095fa2_data:
		.ascii  "\x00"

_095fa3_data:
		.ascii  "\x00"

_095fa4_data:
		.fill   0x4
		.ascii  "\x06\x00\x02\x00\x05\x00\x04\x00"
		.ascii  "\x08\x00"

_095fb2_data:
		.ascii  "\x10\x00\x10\x00\x08\x00\x08\x00"
		.ascii  "\x10\x00\x10\x00\x08\x00"

_095fc0_data:
		.ascii  "\x14\x00"

_095fc2_data:
		.ascii  "\x00\x00"

_095fc4_data:
		.ascii  "\x00\x00"

_095fc6_data:
		.ascii  "\xf4\x01"

_095fc8_data:
		.ascii  "\x00\x00"

_095fca_data:
		.ascii  "\x00\x00"

_095fcc_data:
		.ascii  "\x00\x00"

_095fce_data:
		.fill   0x4

_095fd2_data:
		.ascii  "\x40\x02"

_095fd4_data:
		.ascii  "\x00\x00\x90\x02\x00\x00\xe0\x02"
		.ascii  "\x00\x00\x30\x03\x00\x00\x80\x03"
		.ascii  "\x00\x00\xd0\x03\x00\x00\x20\x04"
		.ascii  "\x00\x00\x70\x04\x00\x00\xd4\xff"
		.ascii  "\x3d\x02\xce\xff\x8d\x02\xc7\xff"
		.ascii  "\xdd\x02\xc0\xff\x2c\x03\xb9\xff"
		.ascii  "\x7c\x03\xb2\xff\xcc\x03\xab\xff"
		.ascii  "\x1b\x04\xa4\xff\x6b\x04\x9d\xff"
		.ascii  "\xa6\xff\x37\x02\x9c\xff\x86\x02"
		.ascii  "\x8f\xff\xd4\x02\x81\xff\x23\x03"
		.ascii  "\x73\xff\x72\x03\x65\xff\xc1\x03"
		.ascii  "\x57\xff\x0f\x04\x49\xff\x5e\x04"
		.ascii  "\x3b\xff\x77\xff\x2c\x02\x6b\xff"
		.ascii  "\x79\x02\x57\xff\xc6\x02\x42\xff"
		.ascii  "\x14\x03\x2d\xff\x61\x03\x19\xff"
		.ascii  "\xae\x03\x04\xff\xfc\x03\xef\xfe"
		.ascii  "\x49\x04\xda\xfe\x46\xff\x1d\x02"
		.ascii  "\x3b\xff\x68\x02\x20\xff\xb3\x02"
		.ascii  "\x05\xff\xfe\x02\xe9\xfe\x49\x03"
		.ascii  "\xce\xfe\x95\x03\xb3\xfe\xe0\x03"
		.ascii  "\x97\xfe\x2b\x04\x7c\xfe\x12\xff"
		.ascii  "\x0a\x02\x0d\xff\x52\x02\xeb\xfe"
		.ascii  "\x9b\x02\xc9\xfe\xe3\x02\xa8\xfe"
		.ascii  "\x2c\x03\x86\xfe\x74\x03\x64\xfe"
		.ascii  "\xbd\x03\x42\xfe\x05\x04\x20\xfe"
		.ascii  "\xd9\xfe\xf2\x01\xe1\xfe\x38\x02"
		.ascii  "\xb9\xfe\x7d\x02\x91\xfe\xc2\x02"
		.ascii  "\x69\xfe\x07\x03\x41\xfe\x4d\x03"
		.ascii  "\x19\xfe\x92\x03\xf1\xfd\xd7\x03"
		.ascii  "\xc9\xfd\x9a\xfe\xd7\x01\xb6\xfe"
		.ascii  "\x19\x02\x88\xfe\x5a\x02\x5a\xfe"
		.ascii  "\x9c\x02\x2c\xfe\xdd\x02\xff\xfd"
		.ascii  "\x1f\x03\xd1\xfd\x61\x03\xa3\xfd"
		.ascii  "\xa2\x03\x75\xfd\x53\xfe\xb9\x01"
		.ascii  "\x8e\xfe\xf6\x01\x5b\xfe\x33\x02"
		.ascii  "\x27\xfe\x71\x02\xf4\xfd\xae\x02"
		.ascii  "\xc1\xfd\xeb\x02\x8d\xfd\x28\x03"
		.ascii  "\x5a\xfd\x66\x03\x26\xfd\x01\xfe"
		.ascii  "\x97\x01\x69\xfe\xcf\x01\x31\xfe"
		.ascii  "\x08\x02\xf8\xfd\x40\x02\xc0\xfd"
		.ascii  "\x79\x02\x87\xfd\xb2\x02\x4e\xfd"
		.ascii  "\xea\x02\x16\xfd\x23\x03\xdd\xfc"
		.ascii  "\x9e\xfd\x72\x01\x47\xfe\xa5\x01"
		.ascii  "\x0a\xfe\xd9\x01\xcd\xfd\x0c\x02"
		.ascii  "\x8f\xfd\x3f\x02\x52\xfd\x73\x02"
		.ascii  "\x15\xfd\xa6\x02\xd8\xfc\xda\x02"
		.ascii  "\x9a\xfc\x25\xfd\x4a\x01\x29\xfe"
		.ascii  "\x78\x01\xe7\xfd\xa6\x01\xa6\xfd"
		.ascii  "\xd4\x01\x64\xfd\x01\x02\x23\xfd"
		.ascii  "\x2f\x02\xe1\xfc\x5d\x02\x9f\xfc"
		.ascii  "\x8b\x02\x5e\xfc\x8a\xfc\x20\x01"
		.ascii  "\x0e\xfe\x48\x01\xc8\xfd\x70\x01"
		.ascii  "\x83\xfd\x98\x01\x3e\xfd\xc0\x01"
		.ascii  "\xf9\xfc\xe8\x01\xb3\xfc\x10\x02"
		.ascii  "\x6e\xfc\x38\x02\x29\xfc\xb7\xfb"
		.ascii  "\xf3\x00\xf6\xfd\x15\x01\xae\xfd"
		.ascii  "\x37\x01\x65\xfd\x58\x01\x1d\xfd"
		.ascii  "\x7a\x01\xd4\xfc\x9c\x01\x8c\xfc"
		.ascii  "\xbe\x01\x43\xfc\xe0\x01\xfb\xfb"
		.ascii  "\x82\xfa\xc5\x00\xe3\xfd\xe0\x00"
		.ascii  "\x98\xfd\xfb\x00\x4d\xfd\x17\x01"
		.ascii  "\x02\xfd\x32\x01\xb7\xfc\x4d\x01"
		.ascii  "\x6b\xfc\x69\x01\x20\xfc\x84\x01"
		.ascii  "\xd5\xfb\x8a\xf8\x95\x00\xd4\xfd"
		.ascii  "\xa9\x00\x87\xfd\xbe\x00\x3a\xfd"
		.ascii  "\xd3\x00\xec\xfc\xe7\x00\x9f\xfc"
		.ascii  "\xfc\x00\x52\xfc\x11\x01\x04\xfc"
		.ascii  "\x26\x01\xb7\xfb\xa9\xf4\x64\x00"
		.ascii  "\xc9\xfd\x71\x00\x7a\xfd\x7f\x00"
		.ascii  "\x2c\xfd\x8d\x00\xdd\xfc\x9b\x00"
		.ascii  "\x8e\xfc\xa9\x00\x3f\xfc\xb7\x00"
		.ascii  "\xf1\xfb\xc5\x00\xa2\xfb\x24\xe9"
		.ascii  "\x32\x00\xc3\xfd\x39\x00\x73\xfd"
		.ascii  "\x40\x00\x23\xfd\x47\x00\xd4\xfc"
		.ascii  "\x4e\x00\x84\xfc\x55\x00\x34\xfc"
		.ascii  "\x5c\x00\xe5\xfb\x63\x00\x95\xfb"
		.fill   0x4
		.ascii  "\xc0\xfd\x00\x00\x70\xfd\x00\x00"
		.ascii  "\x20\xfd\x00\x00\xd0\xfc\x00\x00"
		.ascii  "\x80\xfc\x00\x00\x30\xfc\x00\x00"
		.ascii  "\xe0\xfb\x00\x00\x90\xfb"

_096256_data:
		.ascii  "\x12\x00"

_096258_data:
		.ascii  "\x00\x00"

_09625a_data:
		.ascii  "\x00\x00"

_09625c_data:
		.fill   0x4

_096260_data:
		.fill   0x4

_096264_data:
		.fill   0x4

_096268_data:
		.ascii  "\xb9\x01\x00\x00"

_09626c_data:
		.ascii  "\x00"

_09626d_data:
		.ascii  "\x00"

_09626e_data:
		.ascii  "\x00"

_09626f_data:
		.ascii  "\x00"

_096270_data:
		.ascii  "\x00"

_096271_data:
		.ascii  "\x00\x00\x00"

_096274_data:
		.ascii  "\xfd\xff\xfe\xff\xff\xff\x00\x00"
		.ascii  "\x01\x00\x01\x00\x03\x00"

_096282_data:
		.ascii  "\xfd\xff\xfb\xff\xfc\xff\xfa\xff"
		.ascii  "\xfb\xff\xfd\xff\xfd\xff"
		.long   _0c0888_data
		.long   _0c08a0_data
		.long   _0c08b0_data
		.long   _0c08c0_data
		.long   _0c08d0_data
		.long   _0c08dc_data
		.long   _0c0900_data
		.long   _0c090c_data
		.long   _0c091c_data
		.long   _0c0930_data
		.long   _0c0948_data
		.long   _0c0954_data
		.long   _0c0960_data
		.long   _0c0970_data
		.long   _0c0970_data
		.long   _0c097c_data

_0962d0_data:
		.fill   0x4
		.long   _0c09d0_data

_0962d8_data:
		.ascii  "\x00"

_0962d9_data:
		.ascii  "\x53\x00\x00"

_0962dc_data:
		.fill   0x4

_0962e0_data:
		.ascii  "\x00\x00"

_0962e2_data:
		.fill   0x4
		.ascii  "\x04\x00\x07\x00\x09\x00\x0a\x00"
		.ascii  "\x09\x00\x07\x00\x04\x00\x00\x00"
		.ascii  "\xfe\xff\xfc\xff\xfb\xff\xfa\xff"
		.ascii  "\xfb\xff\xfc\xff\xfe\xff\x00\x00"
		.ascii  "\x01\x00\x02\x00\x03\x00\x02\x00"
		.ascii  "\x01\x00\x00\x00\xff\xff\xfe\xff"
		.ascii  "\xff\xff\x00\x00\x01\x00\x00\x00"

_09631e_data:
		.ascii  "\x00\x01\x02"

_096321_data:
		.ascii  "\x00\x00\x02\x00\x02"

_096326_data:
		.ascii  "\x02\x00\x00\x02\x00"

_09632b_data:
		.ascii  "\x02\x02\x00\x00\x00"

_096330_data:
		.fill   0x5

_096335_data:
		.ascii  "\x00"

_096336_data:
		.ascii  "\x00\x00"

_096338_data:
		.fill   0x4

_09633c_data:
		.ascii  "\x83\x86\x85\xa6\xb8"

_096341_data:
		.ascii  "\x83\x88\x85\xa6\xb8"

_096346_data:
		.ascii  "\xb0\x86\x83\x86\x85\xa6\xb8\x98"

_09634e_data:
		.ascii  "\xb0\x88\x83\x88\x85\xa6\xb8\x98"

_096356_data:
		.ascii  "\xb6\xb0\x85\x8e\xba\xb0\x86"

_09635d_data:
		.ascii  "\xb6\xb0\x85\x8e\x87\xb0\x88"

_096364_data:
		.ascii  "\x89\xa7\x84\xb0"

_096368_data:
		.ascii  "\x89\xa7\x84\xb0"

_09636c_data:
		.ascii  "\x9d\x94\x88\x84\x85\xb7"

_096372_data:
		.ascii  "\x9d\x94\x86\x84\x85\xb7"

_096378_data:
		.ascii  "\x9d\x9f\x88\x84\x85\xb7"

_09637e_data:
		.ascii  "\x9d\x9f\x86\x84\x85\xb7"

_096384_data:
		.ascii  "\x89\x84\xb9\x81\xb0\x83\x86\x85"

_09638c_data:
		.ascii  "\x89\x84\xb9\x81\xb0\x83\x88\x85"

_096394_data:
		.ascii  "\x85\x84\xba\x8e\x8f"

_096399_data:
		.ascii  "\x85\x84\x87\x8e\x8f"

_09639e_data:
		.ascii  "\x82\xa7\x81\x8e\x8f\x83\x86\x85"

_0963a6_data:
		.ascii  "\x82\xa7\x81\x8e\x8f\x83\x88\x85"

_0963ae_data:
		.ascii  "\x82\x89\x81\xb7\xb6\xb0\x8e\xb4"

_0963b6_data:
		.ascii  "\x82\x89\x81\xb7\xb6\xb0\x8e\xb4"

_0963be_data:
		.ascii  "\x87\x81\xba\x83\x86\x85"

_0963c4_data:
		.ascii  "\xba\x81\x87\x83\x88\x85"

_0963ca_data:
		.ascii  "\x83\x86\x85\x84\xb9\x8e\xb1\x98"

_0963d2_data:
		.ascii  "\x83\x88\x85\x84\xb9\x8e\xa4\x98"

_0963da_data:
		.ascii  "\x8f\x86\xb1\xa7\x81\xba"

_0963e0_data:
		.ascii  "\x8f\x88\xa4\xa7\x81\x87\x00"

_0963e7_data:
		.ascii  "\x00"

_0963e8_data:
		.ascii  "\x00"

_0963e9_data:
		.ascii  "\x00"

_0963ea_data:
		.ascii  "\x01\x00"

_0963ec_data:
		.ascii  "\x00\x00"

_0963ee_data:
		.ascii  "\x00\x00"

_0963f0_data:
		.ascii  "\x00\x00"

_0963f2_data:
		.ascii  "\x00\x00"

_0963f4_data:
		.fill   0x4

_0963f8_data:
		.ascii  "\x3c"

_0963f9_data:
		.ascii  "\x00"

_0963fa_data:
		.ascii  "\x00"

_0963fb_data:
		.ascii  "\x02"

_0963fc_data:
		.ascii  "\x00"

_0963fd_data:
		.ascii  "\x00\x00\x00"

_096400_data:
		.ascii  "\x00\x0f\x00\x00"

_096404_data:
		.ascii  "\x01\x00\x00\x00"

_096408_data:
		.ascii  "\xd7\x00\x00\x00"

_09640c_data:
		.ascii  "\xdf"
		.fill   0x4
		.ascii  "\x1f\x00\x00\xdf\x00\x00\x00\x9c"
		.ascii  "\x01\x00\x00\xd4\x01\x00\x00\x28"
		.ascii  "\x01\x01\x00\xd4\x01\x00\x00\x7a"
		.ascii  "\x03\x00\x00\x98\x03\x00\x00\x00"
		.ascii  "\x14\x01\x00\x98\x03\x00\x00\x92"
		.ascii  "\x04\x00\x00\xab\x04\x00\x00\xff"
		.ascii  "\xff\xff\x00\xab\x04\x00\x00\x08"
		.ascii  "\x07\x00\x00\x0d\x07\x00\x00"

_096450_data:
		.ascii  "\x3c"

_096451_data:
		.ascii  "\x00"

_096452_data:
		.ascii  "\x00\x00"

_096454_data:
		.fill   0x4

_096458_data:
		.ascii  "\x00\x01\x00\x00"

_09645c_data:
		.fill   0x8

_096464_data:
		.fill   0x8

_09646c_data:
		.fill   0x4

_096470_data:
		.fill   0x5
		.ascii  "\x08\x00\x00"

_096478_data:
		.ascii  "\x13"

_096479_data:
		.ascii  "\x4b\x00\x00\x00\x08\x00\x00\x00"
		.ascii  "\x08\x00\x00\xec\x6b\x00\x00\x00"
		.ascii  "\x10\x00\x00\x00\x08\x00\x00\xb8"
		.ascii  "\x4e\x00\x00\x00\x18\x00\x00\x00"
		.ascii  "\x08\x00\x00\x41\x8a\x00\x00\x00"
		.ascii  "\x20\x00\x00\x00\x08\x00\x00\xdd"
		.ascii  "\xe1\x00\x00\x00\x28\x00\x00\x00"
		.ascii  "\x08\x00\x00\xdc\x29\x00\x00\x00"
		.ascii  "\x30\x00\x00\x00\x08\x00\x00\x81"
		.ascii  "\x3f\x00\x00"

_0964c4_data:
		.fill   0x4

_0964c8_data:
		.ascii  "\x40\xd1\x01\x00"

_0964cc_data:
		.ascii  "\xe1"

_0964cd_data:
		.ascii  "\x74\x00\x00\x40\xd1\x01\x00\x4c"
		.ascii  "\x22\x02\x00\xd7\x94\x00\x00\x8c"
		.ascii  "\xf3\x03\x00\xe8\x6d\x04\x00\xca"
		.ascii  "\x63\x00\x00\x74\x61\x08\x00\x1c"
		.ascii  "\x18\x03\x00\x0d\x17\x00\x00\x90"
		.ascii  "\x79\x0b\x00\x98\x0e\x03\x00\xd3"
		.ascii  "\x14\x00\x00\x28\x88\x0e\x00\xf0"
		.ascii  "\xf2\x02\x00\xf9\x9f\x00\x00\x18"
		.ascii  "\x7b\x11\x00\x58\xf0\x02\x00\xd6"
		.ascii  "\x8d\x00\x00"

_096518_data:
		.fill   0x4

_09651c_data:
		.ascii  "\xf4\x46\x01\x00"

_096520_data:
		.ascii  "\xa0"

_096521_data:
		.ascii  "\x7c\x00\x00\xf4\x46\x01\x00\xb0"
		.ascii  "\x0d\x02\x00\x31\xd6\x00\x00\xa4"
		.ascii  "\x54\x03\x00\x12\xce\x01\x00\xb3"
		.ascii  "\xab\x00\x00\xb6\x22\x05\x00\x40"
		.ascii  "\x8a\x00\x00\x4e\xdb\x00\x00\xf6"
		.ascii  "\xac\x05\x00\xd0\xea\x01\x00\x20"
		.ascii  "\xc4\x00\x00\xc6\x97\x07\x00\x80"
		.ascii  "\x63\x00\x00\x95\xe4\x00\x00\x46"
		.ascii  "\xfb\x07\x00\xfe\x0a\x01\x00\xec"
		.ascii  "\x2b\x00\x00\x44\x06\x09\x00\x4a"
		.ascii  "\xd0\x00\x00\x2d\xde\x00\x00\x8e"
		.ascii  "\xd6\x09\x00\xa0\x44\x01\x00\xba"
		.ascii  "\x7a\x00\x00"

_096584_data:
		.ascii  "\x00\x20"
		.fill   0xa
		.ascii  "\x01\x00\x00\x00"

_096594_data:
		.fill   0xc

_0965a0_data:
		.fill   0x4

_0965a4_data:
		.fill   0x2c

_0965d0_data:
		.fill   0x4

_0965d4_data:
		.ascii  "\x00\x00"

_0965d6_data:
		.ascii  "\x00\x00\x0b\x00\x0c\x00\x0d\x00"
		.ascii  "\x0e\x00\x0f\x00\x10\x00\x10\x00"
		.ascii  "\x11\x00\x13\x00\x14\x00\x15\x00"
		.ascii  "\x16\x00\x17\x00\x19\x00\x1a\x00"
		.ascii  "\x1c\x00\x1e\x00\x20\x00\x21\x00"
		.ascii  "\x23\x00\x26\x00\x28\x00\x2a\x00"
		.ascii  "\x2d\x00\x2f\x00\x32\x00\x35\x00"
		.ascii  "\x39\x00\x3c\x00\x40\x00\x43\x00"
		.ascii  "\x47\x00\x4c\x00\x50\x00\x55\x00"
		.ascii  "\x5a\x00\x60\x00\x65\x00\x6b\x00"
		.ascii  "\x72\x00\x78\x00\x80\x00\x87\x00"
		.ascii  "\x8f\x00\x98\x00\xa1\x00\xaa\x00"
		.ascii  "\xb5\x00\xbf\x00\xcb\x00\xd7\x00"
		.ascii  "\xe4\x00\xf1\x00\x00\x01\x0f\x01"
		.ascii  "\x1f\x01\x30\x01\x42\x01\x55\x01"
		.ascii  "\x6a\x01\x7f\x01\x96\x01\xae\x01"
		.ascii  "\xc8\x01\xe3\x01\x00\x02\x1e\x02"
		.ascii  "\x3e\x02\x60\x02\x85\x02\xab\x02"
		.ascii  "\xd4\x02\xff\x02\x2c\x03\x5d\x03"
		.ascii  "\x90\x03\xc6\x03\x00\x04\x3c\x04"
		.ascii  "\x7d\x04\xc1\x04\x0a\x05\x56\x05"
		.ascii  "\xa8\x05\xfe\x05\x59\x06\xba\x06"
		.ascii  "\x20\x07\x8d\x07\x00\x08\x79\x08"
		.ascii  "\xfa\x08\x83\x09\x15\x0a\xad\x0a"
		.ascii  "\x50\x0b\xfc\x0b\xb2\x0c\x74\x0d"
		.ascii  "\x41\x0e\x1a\x0f\x00\x10\xf3\x10"
		.ascii  "\xf5\x11\x06\x13\x28\x14\x5b\x15"
		.ascii  "\xa0\x16\xf9\x17\x65\x19\xe8\x1a"
		.ascii  "\x82\x1c\x34\x1e\x00\x20\xe7\x21"
		.ascii  "\xeb"
		.ascii   "#\r&Q("
		.ascii  "\xb7\x2a\x41\x2d\xf2\x2f\xcb\x32"
		.ascii  "\xd1\x35\x04\x39\x68\x3c\x00\x40"
		.ascii  "\xce\x43\xd6\x47"

_0966d8_data:
		.fill   0x4

_0966dc_data:
		.long   _041c5c_switch

_0966e0_data:
		.long   _041c70_switch

_0966e4_data:
		.long   _041c84_switch

_0966e8_data:
		.long   _041c84_switch

_0966ec_data:
		.fill   0x4

_0966f0_data:
		.fill   0x4

_0966f4_data:
		.fill   0x4

_0966f8_data:
		.ascii  "\x2f"

_0966f9_data:
		.fill   0x63
		.long   _0c0ed4_data
		.long   _0c0edc_data
		.long   _0c0ee4_data
		.ascii  "\xec\x0e"

_09676a_data:
		.ascii  "\x0c\x00\x04\x00\x0c\x00\x14\x00"

_096772_data:
		.ascii  "\x18\x00\x40\x01\x38\x01\x30\x01"

_09677a_data:
		.ascii  "\x2c\x01\x00\x00\x08\x00\x10\x00"

_096782_data:
		.ascii  "\x14\x00\xc8\x00\xc0\x00\xb8\x00"
		.ascii  "\xb4\x00"
		.long   _0c0ef4_data
		.long   _0c0ef8_data
		.long   _0c0efc_data
		.long   _0c0f00_data
		.long   _0c0f04_data

_0967a0_data:
		.ascii  "\x00"

_0967a1_data:
		.ascii  "\x00"

_0967a2_data:
		.ascii  "\x00"

_0967a3_data:
		.ascii  "\x00"

_0967a4_data:
		.fill   0x8
		.long   _0c0f10_data
		.long   _0c0f14_data
		.long   _0c0f18_data
		.long   _0c0f1c_data
		.long   _0c0f20_data
		.long   _0c0f24_data
		.long   _0c0f28_data
		.long   _0c0f2c_data
		.long   _0c0f30_data
		.long   _0c0f34_data
		.fill   0x10
		.long   _0c0f38_data
		.long   _0c0f3c_data
		.long   _0c0f40_data
		.long   _0c0f44_data
		.long   _0c0f48_data
		.long   _0c0f4c_data
		.long   _0c0f50_data
		.long   _0c0f54_data
		.long   _0c0f58_data
		.long   _0c0f5c_data
		.fill   0x10
		.long   _0c0f60_data
		.long   _0c0f64_data
		.long   _0c0f68_data
		.long   _0c0f6c_data
		.long   _0c0f70_data
		.long   _0c0f74_data
		.long   _0c0f78_data
		.long   _0c0f7c_data
		.long   _0c0f80_data
		.long   _0c0f84_data
		.fill   0x10
		.long   _0c0f88_data
		.long   _0c0f8c_data
		.long   _0c0f90_data
		.long   _0c0f94_data
		.long   _0c0f98_data
		.long   _0c0f9c_data
		.long   _0c0fa0_data
		.long   _0c0fa4_data
		.long   _0c0fa8_data
		.fill   0x5c
		.long   _0c0f20_data
		.fill   0xcc

_0969a4_data:
		.fill   0x8
		.long   _0c0f10_data
		.long   _0c0f14_data
		.long   _0c0f18_data
		.long   _0c0f1c_data
		.long   _0c0f20_data
		.long   _0c0f24_data
		.long   _0c0f28_data
		.long   _0c0f2c_data
		.long   _0c0f30_data
		.long   _0c0f34_data
		.fill   0x10
		.long   _0c0f60_data
		.long   _0c0f88_data
		.long   _0c0f40_data
		.long   _0c0f44_data
		.long   _0c0f48_data
		.long   _0c0f4c_data
		.long   _0c0f50_data
		.long   _0c0f54_data
		.long   _0c0f58_data
		.long   _0c0f5c_data
		.fill   0x10
		.long   _0c0f38_data
		.long   _0c0f64_data
		.long   _0c0f68_data
		.long   _0c0f6c_data
		.long   _0c0f70_data
		.long   _0c0f74_data
		.long   _0c0f78_data
		.long   _0c0f7c_data
		.long   _0c0f80_data
		.long   _0c0fa8_data
		.fill   0x10
		.long   _0c0f3c_data
		.long   _0c0f8c_data
		.long   _0c0f90_data
		.long   _0c0f94_data
		.long   _0c0f98_data
		.long   _0c0f9c_data
		.long   _0c0f84_data
		.fill   0x4
		.long   _0c0fa4_data
		.long   _0c0fa0_data
		.fill   0x5c
		.long   _0c0f20_data
		.fill   0xc8

_096ba4_data:
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_096bb4_data:
		.ascii  "\x02\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x06\x00"

_096bc4_data:
		.fill   0x8
		.ascii  "\x08"
		.fill   0x7

_096bd4_data:
		.ascii  "\x07\x00\x08\x00\x08"
		.fill   0x5
		.ascii  "\x08\x00\x08\x00\x01\x00"

_096be4_data:
		.ascii  "\x08\x00\x08\x00\x01\x00\x08\x00"
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"

_096bf4_data:
		.fill   0xe
		.ascii  "\x08\x00"

_096c04_data:
		.fill   0xa
		.ascii  "\x08"
		.fill   0x5
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x01\x00\x08\x00"
		.ascii  "\x07\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x01\x00"

_096c34_data:
		.ascii  "\x07\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_096c44_data:
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_096c54_data:
		.ascii  "\x08\x00\x08\x00\x07\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_096c64_data:
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096bb4_data

_096c84_data:
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096c04_data

_096ca4_data:
		.long   _096ba4_data
		.long   _096c54_data
		.long   _096ba4_data
		.long   _096c44_data
		.long   _096ba4_data
		.long   _096c34_data
		.long   _096ba4_data
		.long   _096ba4_data

_096cc4_data:
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096bd4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data

_096ce4_data:
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096be4_data
		.long   _096ba4_data
		.long   _096bb4_data
		.long   _096ba4_data

_096d04_data:
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096bf4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data

_096d24_data:
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096ba4_data
		.long   _096bc4_data
		.long   _096ba4_data

_096d44_data:
		.long   _096c64_data
		.long   _096c84_data
		.long   _096ca4_data
		.long   _096cc4_data
		.long   _096ce4_data
		.long   _096d04_data
		.long   _096d24_data

_096d60_data:
		.ascii  "\x2a\x2e\x05"

_096d63_data:
		.ascii  "\x2c\x02"

_096d65_data:
		.ascii  "\x28\x02"

_096d67_data:
		.ascii  "\x07\x08\x0c\x26\x0d\x0e\x00"

_096d6e_data:
		.ascii  "\x29\x0f\x10\x29\x1a\x12\x13\x01"

_096d76_data:
		.ascii  "\x15\x16\x2d\x18\x29\x1a\x12\x13"
		.ascii  "\x01"

_096d7f_data:
		.ascii  "\x1b\x1c\x00\x00\x1d\x1c\x20\xfe"
		.ascii  "\x1d\x1c\x00\x01\x1d\x1c\x20\xfe"
		.ascii  "\x1d\x1c\x10\x02\x1d\x1c\x10\x02"
		.ascii  "\x1d\x1c\x30\x03\x1d\x1c\x00\x04"
		.ascii  "\x1d\x1c\x5c\x05\x1d\x1c\x36\x05"
		.ascii  "\x1d\x1c\x10\x05\x1d\x1c\x00\x06"
		.ascii  "\x1d\x1e\x18\x29\x1a\x12\x13\x00"

_096db7_data:
		.ascii  "\x15\x16\x19\x1f\x00"

_096dbc_data:
		.ascii  "\x24\x23\x2b\x01"
		.ascii   "\"$\"!"
		.ascii  "\x01"
		.ascii   "#$#+"
		.ascii  "\x01\x22\x22\x21\x01\x23\x23\x2b"
		.ascii  "\x02\x22\x22\x21\x01\x23\x23\x2b"
		.ascii  "\x02\x22\x20\x01\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x01\x22\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x01\x22\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x03\x22\x01"

_096df6_data:
		.ascii  "\x25\x27\x00"

_096df9_data:
		.ascii  "\x2d\x18\x29\x1a\x12\x13\x1b\x1c"
		.ascii  "\x10\xff\x1d\x2d\x18\x29\x1a\x12"
		.ascii  "\x12\x13\x15\x16\x1c\x20\xfe\x1d"
		.ascii  "\x01\x00\x00"

_096e14_data:
		.long   _096d67_data
		.long   _096d6e_data
		.long   _096d76_data
		.long   _096d7f_data
		.long   _096db7_data
		.long   _096dbc_data
		.long   _096df6_data
		.long   _096df9_data
		.long   _096d65_data
		.long   _096d63_data
		.long   _096d60_data

_096e40_data:
		.ascii  "\x10\x17\x18\x16\x19"

_096e45_data:
		.ascii  "\x10\x11\x0f\x1a\x0b\x05"

_096e4b_data:
		.ascii  "\x0d\x1a\x0e\x03"

_096e4f_data:
		.ascii  "\x0d\x1a\x0e\x04\x13\x15\x04\x14"
		.ascii  "\x12\x15\x04\x14\x13\x15\x04\x14"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x04"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x04"
		.ascii  "\x13\x15\x04\x14\x0a\x1a\x0e\x02"

_096e77_data:
		.ascii  "\x0d\x1a\x0e\x04\x07\x00\x07\x00"
		.ascii  "\x0a\x1a\x0e\x04\x03"

_096e84_data:
		.ascii  "\x07\x04\x07\x08\x0a\x1a\x0e\x0d"
		.ascii  "\x1a\x0e\x04\x02"

_096e90_data:
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x04"
		.ascii  "\x12\x15\x04\x14\x13\x15\x04\x14"
		.ascii  "\x0a\x1a\x0e\x04\x02"

_096ea5_data:
		.ascii  "\x09\x00\x12\x15\x04\x14\x09\x04"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x0d"
		.ascii  "\x0e\x04\x02"

_096eb8_data:
		.ascii  "\x07\x08\x08\x08\x09\x00\x13\x15"
		.ascii  "\x04\x14\x09\x08\x12\x15\x04\x14"
		.ascii  "\x0a\x1a\x0e\x04\x02\x00\x00\x00"

_096ed0_data:
		.long   _096e4b_data

_096ed4_data:
		.long   _096e4f_data
		.long   _096e4b_data
		.long   _096e77_data
		.long   _096e84_data
		.long   _096e90_data
		.long   _096ea5_data
		.long   _096eb8_data
		.long   _096e45_data
		.long   _096e40_data

_096ef8_data:
		.fill   0x4

_096efc_data:
		.ascii  "\x00\x02\x00\x02\x00\x02\x00\x02"
		.ascii  "\x00\x02\x00\x02\xff\x01\xff\x01"
		.ascii  "\xfe\x01\xfd\x01\xfd\x01\xfc\x01"
		.ascii  "\xfb\x01\xfa\x01\xf9\x01\xf8\x01"
		.ascii  "\xf7\x01\xf5\x01\xf4\x01\xf3\x01"
		.ascii  "\xf1\x01\xf0\x01\xee\x01\xec\x01"
		.ascii  "\xea\x01\xe9\x01\xe7\x01\xe5\x01"
		.ascii  "\xe3\x01\xe0\x01\xde\x01\xdc\x01"
		.ascii  "\xda\x01\xd7\x01\xd5\x01\xd2\x01"
		.ascii  "\xcf\x01\xcd\x01\xca\x01\xc7\x01"
		.ascii  "\xc4\x01\xc1\x01\xbe\x01\xbb\x01"
		.ascii  "\xb8\x01\xb4\x01\xb1\x01\xae\x01"
		.ascii  "\xaa\x01\xa7\x01\xa3\x01\x9f\x01"
		.ascii  "\x9c\x01\x98\x01\x94\x01\x90\x01"
		.ascii  "\x8c\x01\x88\x01\x84\x01\x80\x01"
		.ascii  "\x7c\x01\x78\x01\x73\x01\x6f\x01"
		.ascii  "\x6b\x01\x66\x01\x62\x01\x5d\x01"
		.ascii  "\x58\x01\x54\x01\x4f\x01\x4a\x01"
		.ascii  "\x45\x01\x40\x01\x3c\x01\x37\x01"
		.ascii  "\x32\x01\x2c\x01\x27\x01\x22\x01"
		.ascii  "\x1d\x01\x18\x01\x12\x01\x0d\x01"
		.ascii  "\x08\x01\x02\x01\xfd\x00\xf7\x00"
		.ascii  "\xf2\x00\xec\x00\xe7\x00\xe1\x00"
		.ascii  "\xdb\x00\xd6\x00\xd0\x00\xca\x00"
		.ascii  "\xc4\x00\xbf\x00\xb9\x00\xb3\x00"
		.ascii  "\xad\x00\xa7\x00\xa1\x00\x9b\x00"
		.ascii  "\x95\x00\x8f\x00\x89\x00\x83\x00"
		.ascii  "\x7d\x00\x77\x00\x71\x00\x6b\x00"
		.ascii  "\x64\x00\x5e\x00\x58\x00\x52\x00"
		.ascii  "\x4c\x00\x45\x00\x3f\x00\x39\x00"
		.ascii  "\x33\x00\x2c\x00\x26\x00\x20\x00"
		.ascii  "\x1a\x00\x13\x00\x0d\x00\x07\x00"
		.ascii  "\x01\x00\x00\x00"

_097000_data:
		.long   _05fd40_func

_097004_data:
		.long   _05fe64_jump

_097008_data:
		.long   _05fe9c_jump
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _05fe9c_jump
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _05fe9c_jump
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _05fe9c_jump
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _05fe9c_jump
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _06004c_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _06006c_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _05fe9c_jump
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _06002c_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _060090_func
		.long   _05fd3c_jump
		.long   _05fd3c_jump
		.long   _0600d0_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _05feac_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _060014_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _0600a0_func
		.long   _05fd3c_jump
		.long   _05fd3c_jump
		.long   _0600c8_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _060110_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _060134_func
		.long   _05fd60_func
		.long   _05fe6c_func
		.long   _0601d8_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _0601b0_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _05feb0_func
		.long   _05fde8_func
		.long   _05fe94_func
		.long   _05fe9c_jump
		.long   _05fd9c_func
		.long   _05fe8c_jump
		.long   _05ffbc_func
		.long   _05fd9c_func
		.long   _05fe8c_jump
		.long   _05ffe8_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _05fefc_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _05fefc_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _05fed0_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _05ff1c_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _05ff44_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _05ff6c_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _05ff94_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _05fe9c_jump
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _060158_func
		.long   _05fd40_func
		.long   _05fe64_jump
		.long   _060184_func
		.long   _05fe54_func
		.long   _05fea0_func
		.long   _060104_func

_097198_data:
		.ascii  "\x03\x05\x05\x03\x03\x04"

_09719e_data:
		.ascii  "\x00\x03\x05\x00\x05\x01\x04\x02"

_0971a6_data:
		.ascii  "\x03\x04\x02\x03\x02\x00"

_0971ac_data:
		.ascii  "\x01\x00\x15\x00\x9c\xff\x08\x00"
		.ascii  "\x01\x00\x00\x00\x12\x00\xa0\x00"
		.ascii  "\x08\x00\x03\x00\x2a\x00\x13\x00"
		.ascii  "\x0e\x00"

_0971c6_data:
		.ascii  "\x01\x00\x15\x00\x9c\xff\x08\x00"
		.ascii  "\x06\x00\x0f\x00\x12\x00\x4a\x01"
		.ascii  "\x0e\x00"

_0971d8_data:
		.ascii  "\x00\x00\x15\x00\x4a\x01\x08\x00"
		.ascii  "\x06\x00\x10\x00\x12\x00\x88\xff"
		.ascii  "\x0e\x00"

_0971ea_data:
		.ascii  "\x00\x00\x15\x00\x40\x01\x08\x00"
		.ascii  "\x01\x00\x00\x00\x12\x00\xf8\xff"
		.ascii  "\x08\x00\x03\x00\x29\x00\x13\x00"
		.ascii  "\x0e\x00"

_097204_data:
		.ascii  "\x00\x00\x15\x00\x64\x00\x08\x00"
		.ascii  "\x03\x00\x2b\x00\x13\x00\x08\x00"
		.ascii  "\x03\x00\x2c\x00\x13\x00\x0e\x00"

_09721c_data:
		.ascii  "\x00\x00\x15\x00\xc8\x00\x08\x00"
		.ascii  "\x03\x00\x2f\x00\x13\x00\x08\x00"
		.ascii  "\x03\x00\x30\x00\x13\x00\x11\x00"
		.ascii  "\x12\x00\x14\x00\xf8\xff\x11\x00"
		.ascii  "\x1e\x00\x14\x00\xf0\xff\x11\x00"
		.ascii  "\x2d\x00\x14\x00\xe0\xff\x11\x00"
		.ascii  "\x3c\x00\x14\x00\xc0\xff\x11\x00"
		.ascii  "\x41\x00\x14\x00\x00\x00\x13\x00"
		.ascii  "\x0e\x00\x00\x00"

_097260_data:
		.long   _06b610_func

_097264_data:
		.ascii  "\x6e\x00\x00\x00"

_097268_data:
		.ascii  "\x64\x00\x00\x00"
		.long   _06b73c_func
		.ascii  "\x1e\x00\x00\x00\x44\x00\x00\x00"
		.long   _06b770_func
		.ascii  "\x2e\x00\x00\x00\x56\x00\x00\x00"
		.long   _036970_func
		.ascii  "\x1f\x00\x00\x00\x60\x00\x00\x00"
		.long   _036ae4_func
		.ascii  "\x1f\x00\x00\x00\x4a\x00\x00\x00"
		.long   _036fdc_func
		.ascii  "\x21\x00\x00\x00\x4a\x00\x00\x00"
		.long   _073cb0_func
		.ascii  "\x23\x00\x00\x00\x72\x00\x00\x00"
		.long   _073d00_func
		.ascii  "\x23\x00\x00\x00\x5c\x00\x00\x00"
		.long   _0366ec_func
		.ascii  "\x24\x00\x00\x00\x8e\x00\x00\x00"
		.long   _06adfc_func
		.ascii  "\x0f"
		.fill   0x7
		.long   _06b2e0_func
		.ascii  "\x16\x00\x00\x00\xee\x00\x00\x00"
		.long   _01820c_func
		.ascii  "\x4a\x00\x00\x00\x2e\x00"

_0972ee_data:
		.ascii  "\x00\x00\x04\x00\x57\x01\x22\x00"
		.ascii  "\x6c\x01\xde\x00\x25\x02\xc8\x00"
		.ascii  "\xcd\x02\xcc\x03\x19\x01\xc6\x01"
		.ascii  "\x6f\x00\xca\x02\x41\x02\x2a\x00"
		.ascii  "\xa9\x00\x43\x03\xbd\x02\x0e\x03"
		.ascii  "\x4f\x03\xd6\x03\xe0\x00\xb5\x01"
		.ascii  "\xcf\x03\x5b\x03\xb1\x03\x3e\x03"
		.ascii  "\xcd\x01\x6b\x02\xa5\x02\x66\x02"
		.ascii  "\x32\x02\xe1\x02\x74\x00\x9f\x01"
		.ascii  "\x7c\x00\xaf\x02\xe6\x01\xf6\x01"
		.ascii  "\x41\x02\x60\x01\x79\x03\x0e\x01"
		.ascii  "\xb8\x00\xb1\x01\xc7\x02\xa7\x00"
		.ascii  "\x27\x02\x94\x02\x7e\x02\x03\x00"
		.ascii  "\x26\x03\x13\x01\xd8\x01\x8b\x01"
		.ascii  "\x81\x01\x53\x02\x69\x02\x1e\x01"
		.ascii  "\xae\x00\x38\x03\x2e\x01\x55\x01"
		.ascii  "\xa2\x01\xf6\x00\xa7\x01\x37\x00"
		.ascii  "\xf9\x01\xef\x03\x01\x00\xa3\x01"
		.ascii  "\x47\x00\x4b\x00\x04\x01\xe6\x03"
		.ascii  "\x6b\x01\x9e\x01\xc9\x00\xc9\x00"
		.ascii  "\xd8\x00\xff\x00\x08\x03\x8e\x03"
		.ascii  "\x9f\x03\xf1\x02\xd8\x01\x20\x02"
		.ascii  "\x24\x00\x85\x00\xd5\x01\xef\x01"
		.ascii  "\x63\x02\x03\x01\x75\x00\xce\x02"
		.ascii  "\x98\x02\x8b\x03\x80\x03\x2b\x00"
		.ascii  "\x36\x02\x0a\x02\x7b\x02\x15\x03"
		.ascii  "\x03\x01\xde\x00\xf1\x00\x57\x01"
		.ascii  "\x43\x02\x88\x00\x74\x02\x1f\x00"
		.ascii  "\xcb\x03\xd9\x00\x3b\x03\x84\x02"
		.ascii  "\xdc\x02\xed\x02\x35\x02\x49\x02"
		.ascii  "\xac\x00\x54\x01\x7a\x03\x4c\x03"
		.ascii  "\x75\x02\xd0\x03\xf7\x03\xed\x03"
		.ascii  "\xf3\x02\x0a\x02\x2e\x01\xdf\x02"
		.ascii  "\x24\x01\x8f\x02\xf8\x01\xb3\x00"
		.ascii  "\x3c\x02\x89\x01\x19\x03\x8e\x01"
		.ascii  "\x9a\x02\x82\x00\x94\x00\x58\x01"
		.ascii  "\xad\x03\x9e\x02\x98\x02\xd6\x02"
		.ascii  "\x9f\x02\xa5\x02\xe2\x02\xfd\x03"
		.ascii  "\xaf\x01\x3f\x02\x81\x01\xef\x03"
		.ascii  "\x0f\x00\xc4\x03\xcf\x01\xf3\x00"
		.ascii  "\x2f\x02\xfa\x01\x81\x02\xd4\x02"
		.ascii  "\x55\x02\x28\x03\xba\x01\x03\x00"
		.ascii  "\x57\x03\xdd\x02\xf2\x03\xd4\x01"
		.ascii  "\x69\x01\xc1\x03\x93\x02\x42\x02"
		.ascii  "\xcb\x02\xe4\x00\x3d\x01\x97\x03"
		.ascii  "\x49\x00\xd4\x03\x73\x02\x53\x00"
		.ascii  "\x63\x03\xe8\x02\xb2\x02\xb3\x03"
		.ascii  "\xf9\x01\x24\x01\xb9\x02\x3d\x01"
		.ascii  "\x6b\x01\x05\x03\xe8\x03\xaf\x03"
		.ascii  "\xfa\x00\xa4\x01\xa7\x03\xad\x01"
		.ascii  "\x5a\x01\x8b\x03\x95\x00\x94\x00"
		.ascii  "\x4a\x01\x9b\x00\x7f\x02\xcc\x03"
		.ascii  "\x13\x01\x66\x00\xeb\x03\xfb\x00"
		.ascii  "\xdd\x00\x57\x00\x1c\x02\x82\x03"
		.ascii  "\x9e\x03\x0f\x01\x75\x02\x93\x03"
		.ascii  "\x9f\x02\x55\x00\x10\x02\x4a\x03"
		.ascii  "\x64\x03\xf4\x02\x74\x02\x30\x02"
		.ascii  "\xe5\x03\xee\x03\x41\x00\x77\x01"
		.ascii  "\xeb\x02\x63\x00\xb9\x02\x5a\x01"
		.ascii  "\x76\x00\x84\x01\x02\x01\x04\x02"
		.ascii  "\x14\x00\xfc\x03\x01\x00\x54\x00"
		.ascii  "\xfd\x00\x2b\x02\xb0\x01\xe1\x00"
		.ascii  "\xd6\x01\x95\x00\xd1\x00\xa9\x01"
		.ascii  "\x09\x00\xdb\x01\xd2\x01\xba\x00"
		.ascii  "\x0a\x00"

_0974f0_data:
		.ascii  "\x07\x03\x1b\x07\x07\x03\x1b\x03"
		.ascii  "\x03\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x03\x07\x03\x03\x03\x0f"
		.ascii  "\x07\x07\x07\x03\x03\x03\x03\x0f"
		.ascii  "\x0b\x07\x03\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x03\x07\x03\x07\x07"
		.ascii  "\x1b\x07\x07\x03\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x07\x07\x0b\x0b"
		.ascii  "\x03\x07\x03\x03\x0b\x07\x03\x03"
		.ascii  "\x07\x07\x07\x07\x00\x07\x07\x07"
		.ascii  "\x0f\x07\x1f\x07\x07\x03\x03\x03"
		.ascii  "\x03\x03\x03\x1b\x03\x07\x03\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x1b\x03\x03\x03\x07\x0f"
		.ascii  "\x07\x07\x07\x07\x07\x1b\x03\x07"
		.ascii  "\x1b\x07\x07\x07\x07\x07\x07\x0b"
		.ascii  "\x03\x0b\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x07\x07\x07\x07\x07\x0f"
		.ascii  "\x07\x1b\x07\x07\x03\x03\x03\x03"
		.ascii  "\x07\x03\x03\x03\x03\x03\x03\x07"
		.ascii  "\x03\x07\x03\x07\x03\x03\x03\x03"
		.ascii  "\x04\x04\x07\x03\x07\x07\x03\x07"
		.ascii  "\x07\x1b\x07\x03\x00\x1f\x07\x07"
		.ascii  "\x03\x07\x07\x07\x03\x07\x07\x03"
		.ascii  "\x07\x07\x07\x03\x07\x1b\x1f\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x07\x03\x03\x03\x07\x07\x07\x0f"
		.ascii  "\x03\x03\x07\x07\x04\x1b\x04\x07"
		.ascii  "\x07\x07\x03\x03\x03\x03\x07\x07"

_0975f0_data:
		.ascii  "\x00\x00\x00\x02"
		.fill   0xb
		.ascii  "\x14\x1c\x00\x01\x02\x00\x00\x00"
		.ascii  "\x22"
		.fill   0x12
		.ascii  "\x01\x07\x02"
		.fill   0x5
		.ascii  "\x1e\x0f\x00\x02\x00\x00\x01"
		.fill   0xd
		.ascii  "\x28"
		.fill   0xb
		.ascii  "\x0a"
		.fill   0x5
		.ascii  "\x1e\x36"
		.fill   0xa
		.ascii  "\x28"
		.fill   0x4
		.ascii  "\x1e\x3c\x00\x3c\x28"
		.fill   0x7
		.ascii  "\x14\x00\x3c\x01"
		.fill   0x4
		.ascii  "\x09"
		.fill   0x9
		.ascii  "\x0a\x00\x0b"
		.fill   0x4
		.ascii  "\x1f\x19\x1e"
		.fill   0x6
		.ascii  "\x28\x00\x4b\x00\x00\x00\x32"
		.fill   0x9
		.ascii  "\x50"
		.fill   0x6
		.ascii  "\x3c"
		.fill   0x18
		.ascii  "\x01\x00\x00\x0c"
		.fill   0xf
		.ascii  "\x1e"
		.fill   0x7
		.ascii  "\x2d"
		.fill   0xb
		.ascii  "\x0f\x46"
		.fill   0xa
		.ascii  "\x07\x14"
		.fill   0x4

_0976f0_data:
		.fill   0x2a
		.ascii  "\x41"
		.fill   0xd
		.ascii  "\x28"
		.fill   0x3f
		.ascii  "\x23"
		.fill   0x10
		.ascii  "\x15"
		.fill   0x3d
		.ascii  "\x28"
		.fill   0x26
		.ascii  "\x1d\x0f"
		.fill   0xb
		.ascii  "\x14"
		.fill   0x4

_0977f0_data:
		.fill   0x54
		.ascii  "\x2a"
		.fill   0x1b
		.ascii  "\x38"
		.fill   0x7f
		.ascii  "\x78"
		.fill   0x21
		.ascii  "\x89"
		.fill   0x7b
		.ascii  "\xc7"
		.fill   0x4d
		.ascii  "\xee\x00\x17"
		.fill   0x17
		.ascii  "\x46"
		.fill   0x9

_0979f0_data:
		.ascii  "\x00"

_0979f1_data:
		.ascii  "\xff"

_0979f2_data:
		.ascii  "\x00"

_0979f3_data:
		.ascii  "\x7f\x35\x0f\x00\x50\x35\x00\x00"
		.ascii  "\x5a\x35\xff\x00\x5a\x3c\xff\x00"
		.ascii  "\x7f\x35\x05\x00\x73\x37\x03\x00"
		.ascii  "\x32\x35\xff\x00\x50\x35\x08\x00"
		.ascii  "\x37\x35\x0c\x00\x32\x35\xff\x00"
		.ascii  "\x50\x48\x06\x00\x5a\x35\x08\x00"
		.ascii  "\x3c\x41\x01\x00\x3c"

_097a28_data:
		.ascii  "\x35"

_097a29_data:
		.ascii  "\x07"

_097a2a_data:
		.ascii  "\x00\x50"

_097a2c_data:
		.ascii  "\x3a"

_097a2d_data:
		.ascii  "\x0d"

_097a2e_data:
		.ascii  "\x00\x50\x36\x04\x00\x50\x35\x1f"
		.ascii  "\x00\x50\x37\x1e\x00\x50"

_097a3c_data:
		.ascii  "\x3e"

_097a3d_data:
		.ascii  "\x10"

_097a3e_data:
		.ascii  "\x00\x50\x37\x15\x00\x41\x35\x16"
		.ascii  "\x00\x50\x31\x17\x00\x50\x3c\x19"
		.ascii  "\x00\x3c\x37\x18\x00\x4b\x35\x4c"
		.ascii  "\x00\x50\x35\xff\x00\x50\x38\xff"
		.ascii  "\x00\x50\x35\x47\x00\x3c\x35\x48"
		.ascii  "\x00\x41\x35\x49\x00\x50\x35\x4a"
		.ascii  "\x00\x50\x3c\x4b\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x35\x68\x00\x2d\x37\x4f"
		.ascii  "\x00\x3c\x36\x50\x00\x3c\x39\x51"
		.ascii  "\x00\x3c\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\x1a\x00\x50\x35\x55"
		.ascii  "\x00\x3c\x35\x5d\x00\x28\x35\x57"
		.ascii  "\x00\x50\x35\x58\x00\x50\x35\x59"
		.ascii  "\x00\x64\x35\x5a\x00\x50"

_097aac_data:
		.ascii  "\x35"

_097aad_data:
		.ascii  "\x5b"

_097aae_data:
		.ascii  "\x00\x3c\x35\x5c\x00\x50\x35\x46"
		.ascii  "\x00\x46\x38\x1b\x00\x50\x33\x05"
		.ascii  "\x00\x50\x39\x60\x00\x50"

_097ac4_data:
		.ascii  "\x35"

_097ac5_data:
		.ascii  "\x01"

_097ac6_data:
		.ascii  "\x00\x5a\x38\x56\x00\x50\x3c\x27"
		.ascii  "\x00\x50\x41\x27\x00\x50\x46\x27"
		.ascii  "\x00\x50\x35\x15\x00\x32\x35\x16"
		.ascii  "\x00\x3c\x35\x20\x00\x1e\x35\x21"
		.ascii  "\x00\x3c\x35\x6a\x00\x50\x35\x63"
		.ascii  "\x00\x50\x35\x6b\x00\x50\x35\x6b"
		.ascii  "\x00\x50\x35\x49\x00\x50\x35\x54"
		.ascii  "\x00\x46\x35\x0c\x00\x28\x35\x0b"
		.ascii  "\x00\x46\x3a\x5e\x00\x50\x33\x5f"
		.ascii  "\x00\x7f\x35\x60\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x35\xff\x00\x50\x35\x69"
		.ascii  "\x00\x2d\x35\x61\x00\x50\x35\x5f"
		.ascii  "\x00\x5f\x35\x15\x00\x50\x35\x16"
		.ascii  "\x00\x50"

_097b30_data:
		.ascii  "\x35"

_097b31_data:
		.ascii  "\x52"

_097b32_data:
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x54"
		.ascii  "\x00\x50\x35\x33\x00\x5f\x36\x34"
		.ascii  "\x00\x46\x35\x46\x00\x50\x35\x47"
		.ascii  "\x00\x28\x35\x48\x00\x3c\x38\x49"
		.ascii  "\x00\x7f\x35\x4a\x00\x50\x35\x4b"
		.ascii  "\x00\x50\x35\x3d\x00\x50\x35\x3e"
		.ascii  "\x00\x3c\x35\x36\x00\x50\x35\x37"
		.ascii  "\x00\x32\x30\x38\x00\x7f\x35\x4d"
		.ascii  "\x00\x50\x35\x4e\x00\x73\x35\x4f"
		.ascii  "\x00\x64\x35\x32\x00\x2d\x35\x50"
		.ascii  "\x00\x73\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x61"
		.ascii  "\x00\x7f\x35\x62\x00\x50\x35\x63"
		.ascii  "\x00\x50\x37\x64\x00\x50\x35\x65"
		.ascii  "\x00\x50\x35\x66\x00\x50\x35\x47"
		.ascii  "\x00\x46\x37\x46\x00\x46\x31\x47"
		.ascii  "\x00\x46\x35\x67\x00\x50\x35\x4b"
		.ascii  "\x00\x73\x32\x5e\x00\x7f\x33\x48"
		.ascii  "\x00\x50\x35\x49\x00\x50\x39\xff"
		.ascii  "\x00\x50\x35\x4b\x00\x78\x37\x4c"
		.ascii  "\x00\x7f\x35\x4d\x00\x6e\x35\x4e"
		.ascii  "\x00\x50\x35\x50\x00\x50\x38\x4f"
		.ascii  "\x00\x37\x37\x51\x00\x50\x3f\x52"
		.ascii  "\x00\x37\x35\xff\x00\x50\x3e\x54"
		.ascii  "\x00\x2d\x39\x55\x00\x50\x3c\x56"
		.ascii  "\x00\x50\x35\x57\x00\x5a\x35\x58"
		.ascii  "\x00\x7f\x35\xff\x00\x50\x35\x13"
		.ascii  "\x00\x25\x35\x0f\x00\x41\x35\x24"
		.ascii  "\x00\x5a\x35\x22\x00\x50\x35\x23"
		.ascii  "\x00\x50\x35\x62\x00\x2d\x37\x62"
		.ascii  "\x00\x2d\x35\xff\x00\x50\x35\x49"
		.ascii  "\x00\x50\x32\x4a\x00\x50\x41\x4b"
		.ascii  "\x00\x50\x35\x67\x00\x64\x37\x4c"
		.ascii  "\x00\x1e\x3b\x4d\x00\x28\x35\xff"
		.ascii  "\x00\x50\x35\x4f\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\x51\x00\x50\x35\xff"
		.ascii  "\x00\x50\x3d\x53\x00\x78\x35\x54"
		.ascii  "\x00\x2d\x35\x55\x00\x50\x35\x56"
		.ascii  "\x00\x50\x35\x33\x00\x5f\x35\x57"
		.ascii  "\x00\x50\x35\x58\x00\x50\x35\x59"
		.ascii  "\x00\x55\x35\x5a\x00\x37\x3c\x48"
		.ascii  "\x00\x46\x3c\x48\x00\x46\x35\x49"
		.ascii  "\x00\x50\x3c\x33\x00\x46\x35\xff"
		.ascii  "\x00\x50\x35\x3f\x00\x6e\x35\x4c"
		.ascii  "\x00\x50\x35\x4d\x00\x37"

_097c98_data:
		.ascii  "\x35"

_097c99_data:
		.ascii  "\x4e"

_097c9a_data:
		.ascii  "\x00\x50\x35\x4f\x00\x50\x35\x50"
		.ascii  "\x00\x50\x32\xff\x00\x50\x35\x52"
		.ascii  "\x00\x50\x37\x53\x00\x50\x30\x54"
		.ascii  "\x00\x5a\x2e\x55\x00\x50\x32\xff"
		.ascii  "\x00\x50\x35\x56\x00\x50\x35\x46"
		.ascii  "\x00\x28\x35\x47\x00\x28\x35\x48"
		.ascii  "\x00\x50\x35\x49\x00\x50\x35\x4a"
		.ascii  "\x00\x37\x35\x4b\x00\x50\x35\x4c"
		.ascii  "\x00\x50\x35\x4d\x00\x50\x35\x4e"
		.ascii  "\x00\x64\x35\x4f\x00\x7f\x35\x50"
		.ascii  "\x00\x50\x35\x51\x00\x50\x32\x25"
		.ascii  "\x00\x41\x35\x26\x00\x3c\x35\x0b"
		.ascii  "\x00\x50\x25\x68\x00\x1e\x3c\xff"
		.ascii  "\x00\x7f\x35\x08\x00\x50\x35\x64"
		.ascii  "\x00\x50\x38\x01\x00\x50\x35\x35"
		.ascii  "\x00\x32\x35\x3c\x00\x2d\x35\x4c"
		.ascii  "\x00\x50\x35\x62\x00\x64\x35\x29"
		.ascii  "\x00\x28\x35\x39\x00\x50\x35\x28"
		.ascii  "\x00\x64\x3c\x27\x00\x69\x35\x62"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x4c"
		.ascii  "\x00\x7f\x3c\x60\x00\x50\x35\x2a"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x2b"
		.ascii  "\x00\x50\x35\xff\x00\x50\x2e\x5a"
		.ascii  "\x00\x5a\x35\x5c\x00\x50\x35\x5f"
		.ascii  "\x00\x28\x35\x5e\x00\x32\x35\x5e"
		.ascii  "\x00\x50\x35\x52\x00\x50\x35\x53"
		.ascii  "\x00\x50\x32\x54\x00\x46\x34\x4d"
		.ascii  "\x00\x50\x38\x4a\x00\x50\x32\x4a"
		.ascii  "\x00\x50\x35\x5a\x00\x50\x35\x59"
		.ascii  "\x00\x50\x35\x55\x00\x50\x30\x56"
		.ascii  "\x00\x50\x35\x57\x00\x50\x39\x58"
		.ascii  "\x00\x50\x32\x4c\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x3c\xff\x00\x7f\x35\x33"
		.ascii  "\x00\x7f\x3c\x19\x00\x3c\x41\x15"
		.ascii  "\x00\x32\x41\x16\x00\x3c\x35\x5d"
		.ascii  "\x00\x37\x35\x5e\x00\x7f\x35\x5e"
		.ascii  "\x00\x7f"

_097dc4_data:
		.ascii  "\x35"

_097dc5_data:
		.ascii  "\x5c"

_097dc6_data:
		.ascii  "\x00\x28\x37\x5f\x00\x7f\x35\x37"
		.ascii  "\x00\x50\x46\x61\x00\x37\x3c\x61"
		.ascii  "\x00\x32\x3c\x67\x00\x50\x3a\x65"
		.ascii  "\x00\x50\x35\x66\x00\x50\x35\x13"
		.ascii  "\x00\x50\x3c\xff\x00\x7f\x3c\xff"
		.ascii  "\x00\x7f"

_097df0_data:
		.fill   0x4
		.ascii  "\x01"
		.fill   0x14
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x00"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x00\x00\x01\x00\x01"
		.fill   0x7
		.ascii  "\x01\x01\x01\x01\x01\x01\x00\x00"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x00"
		.ascii  "\x00\x00\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01"
		.fill   0x6
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01"
		.fill   0x6
		.ascii  "\x01\x01\x01\x01\x01\x01\x00\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01"
		.fill   0x4
		.ascii  "\x01\x00\x01\x00\x01\x01\x01\x01"
		.ascii  "\x00\x01\x00\x00\x01\x01\x01\x01"
		.ascii  "\x01\x00\x00\x01\x00\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01"
		.fill   0x4
		.ascii  "\x01\x01\x00\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x00\x01\x01"

_097ef0_data:
		.fill   0x12

_097f02_data:
		.fill   0xc

_097f0e_data:
		.ascii  "\x00\x00"

_097f10_data:
		.ascii  "\x7f"
		.fill   0x5
		.ascii  "\x01"
		.fill   0x4
		.ascii  "\x02\x04\x05\x07\x09\x0b\x0c"

_097f22_data:
		.ascii  "\x00\x00"

_097f24_data:
		.ascii  "\x00"

_097f25_data:
		.ascii  "\x00\x00\x00"

_097f28_data:
		.ascii  "\x00\x00"

_097f2a_data:
		.ascii  "\x01\x00"

_097f2c_data:
		.ascii  "\xff\xff"

_097f2e_data:
		.fill   0x4
		.ascii  "\x01\x00\x01\x00\xfd\xff\x3c\x00"
		.ascii  "\x00\x00\x02\x00\x02\x00\xfe\xff"
		.fill   0x4
		.ascii  "\x01\x00\x03\x00\xfc\xff\x1e\x00"
		.ascii  "\x00\x00\x01\x00\x02\x00\xfc\xff"
		.ascii  "\x1e\x00\x00\x00\x01\x00\x02\x00"
		.ascii  "\xfd\xff\x2a\x00\x00\x00\x01\x00"
		.ascii  "\x01\x00\xfc\xff\x50\x00\x00\x00"

_097f6e_data:
		.ascii  "\x01\x01\x00\x00\x03\xff\x00\x00"
		.ascii  "\x01\x01"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x1d
		.ascii  "\x09\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x03\xff\x00\x00\x05"
		.fill   0x5
		.ascii  "\x01"
		.fill   0x19
		.ascii  "\x02\x01\x00\x00\x07\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x08\x00\x00\x00"
		.ascii  "\x01\xff"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x15
		.ascii  "\x03\xff\x00\x00\x04\xff\x00\x00"
		.ascii  "\x06\x01\x00\x00\x09\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x09"
		.fill   0x7
		.ascii  "\x09\x00\x01"
		.fill   0xb
		.ascii  "\x01\x00\x02\x00\x03\x00\x04\x00"
		.ascii  "\x00\x00\x06\x00\x06\x00\x00\x00"

_098030_data:
		.ascii  "\x00\x00\x01\x02\x02\x00\x01\x02"
		.ascii  "\x02\x02\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x02\x02\x02\x00\x00\x01\x00"
		.ascii  "\x00\x01\x02\x00\x02\x02\x00\x00"
		.ascii  "\x02\x02"
		.fill   0x4
		.ascii  "\x02\x02"
		.fill   0x4
		.ascii  "\x02\x00\x02\x02\x02\x02\x00\x00"
		.ascii  "\x02\x00\x00\x02\x02\x02\x02\x02"

_09806c_data:
		.ascii  "\x01\x01\x01\x01\x01\x04\x04\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x04"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x02\x0a\x01\x02\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x02\x04\x05\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x03\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x02\x03\x01"
		.ascii  "\x01\x01\x01\x01"

_0980a8_data:
		.ascii  "\x20\x01"

_0980aa_data:
		.ascii  "\x02\x00"

_0980ac_data:
		.ascii  "\x00\x00"

_0980ae_data:
		.fill   0x95a
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x40\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x58\x00\x04\x00\x04\x00\x04\x00"
		.ascii  "\x6e\x00\x04"
		.fill   0x5
		.ascii  "\x0f\x00\x03"
		.fill   0x5
		.ascii  "\x4b\x00\x02"
		.fill   0x94d
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\xc0\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x945
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xa8\x00\x04\x00\x04\x00\x05\x00"
		.ascii  "\x46\x00\x04"
		.fill   0x5
		.ascii  "\x32\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x40\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x01"
		.fill   0x95d
		.ascii  "\x9f\x00\x04"
		.fill   0x5
		.ascii  "\x81\x00\x02"
		.fill   0x955
		.ascii  "\x0c\x00\x06"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x38\x00\x06"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x1c\x00\x06"
		.fill   0x5
		.ascii  "\x10\x00\x08"
		.fill   0x915
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x54\x00\x04"
		.fill   0x5
		.ascii  "\xcc\x00\x02"
		.fill   0x955
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xb1\x00\x04"
		.fill   0x5
		.ascii  "\x6f\x00\x02"
		.fill   0x955
		.ascii  "\xb3"
		.fill   0x5
		.ascii  "\x03\x00\x14\x00\x00\x00\x10\x00"
		.ascii  "\x01\x00\x01\x00\x00\x00\x20\x00"
		.ascii  "\x01\x00\x28"
		.fill   0x5
		.ascii  "\x03"
		.fill   0x941
		.ascii  "\xb7\x00\x04\x00\x04\x00\x04\x00"
		.ascii  "\x05\x00\x08"
		.fill   0x5
		.ascii  "\x15\x00\x06"
		.fill   0x5
		.ascii  "\x4e\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x93d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x6d\x00\x06"
		.fill   0x5
		.ascii  "\xb2\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xd5\x00\x04"
		.fill   0x5
		.ascii  "\x4b\x00\x02"
		.fill   0x955
		.ascii  "\xc8\x00\x06"
		.fill   0x5
		.ascii  "\x57\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d

_0bb328_data:
		.fill   0x5
		.ascii  "\x0e\x09"
		.fill   0x8
		.ascii  "\x0f"
		.fill   0x8
		.ascii  "\x04\x00\x00\x02"
		.fill   0x7
		.ascii  "\x03\x0a\x0c"
		.fill   0x7
		.ascii  "\x0b"
		.fill   0x7
		.ascii  "\x06\x0d"
		.fill   0x5

_0bb364_data:
		.ascii  "\x00\x00"

_0bb366_data:
		.ascii  "\x00\x00"

_0bb368_data:
		.fill   0x31e
		.ascii  "\x46\x00\x01\x00\x00\x00\x35\x00"
		.ascii  "\x40\x00\x01\x00\x00\x00\x59\x00"
		.ascii  "\x24\x00\x01\x00\x00\x00\x79\x00"
		.ascii  "\x31\x00\x01\x00\x00\x00\x95\x00"
		.ascii  "\x47\x00\x01\x00\x00\x00\xc3\x00"
		.ascii  "\x3b\x00\x01\x00\x00\x00\xef\x00"
		.ascii  "\x18\x00\x01\x00\x00\x00\x17\x01"
		.ascii  "\x00\x00\x01\x00\x00\x00\x48\x01"
		.ascii  "\x47\x00\x01\x00\x00\x00\x2b\x01"
		.ascii  "\xaf\x00\x02\x00\x00\x00\xaf\x00"
		.ascii  "\xaa\x00\x02\x00\x00\x00\x26\x00"
		.ascii  "\xae\x00\x02\x00\x00\x00\x06\x01"
		.ascii  "\xb9\x00\x03\x00\x00\x00\x6c\x01"
		.ascii  "\x94\x00\x03"
		.fill   0x33
		.ascii  "\x40\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x40\x00\x78\x00\x01\x00\x00\x00"
		.ascii  "\xc0\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\xc0\x00\x78\x00\x03"
		.fill   0xd
		.ascii  "\x99"
		.fill   0x5
		.ascii  "\x28\x01"
		.fill   0x6
		.ascii  "\x28\x01\x35"
		.fill   0x5
		.ascii  "\x28\x01\x8d"
		.fill   0x55d
		.ascii  "\xaa\x00\x61\x00\x01\x00\x00\x00"
		.ascii  "\xea\x00\x4b\x00\x01\x00\x00\x00"
		.ascii  "\x2a\x01\x88\x00\x01\x00\x00\x00"
		.ascii  "\x6a\x01\x88\x00\x01\x00\x00\x00"
		.ascii  "\x2a\x00\x79\x00\x01\x00\x00\x00"
		.ascii  "\x6a\x00\x75\x00\x01\x00\x00\x00"
		.ascii  "\xaa\x00\xe3\x00\x02\x00\x00\x00"
		.ascii  "\xd8\x00\xe5\x00\x02\x00\x00\x00"
		.ascii  "\x32\x01\xe1\x00\x02\x00\x00\x00"
		.ascii  "\x72\x01\x6b\x00\x02\x00\x00\x00"
		.ascii  "\x32\x00\x7f\x00\x02\x00\x00\x00"
		.ascii  "\x52\x00\xcd\x00\x02\x00\x00\x00"
		.ascii  "\x8a\x00\xdd\x00\x02\x00\x00\x00"
		.ascii  "\x68\x01\xe1\x00\x03\x00\x00\x00"
		.ascii  "\x28\x00\x0f\x01\x03"
		.fill   0x52b
		.ascii  "\x3f\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\x70\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\xff\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\x30\x01\x8f\x00\x01"
		.fill   0x1c3
		.ascii  "\x06\x00\x42\x00\x01\x00\x00\x00"
		.ascii  "\x08\x01\x39\x00\x01"
		.fill   0x4f3
		.ascii  "\x8a\x00\x8d\x00\x01\x00\x00\x00"
		.ascii  "\xca\x00\x93\x00\x01\x00\x00\x00"
		.ascii  "\x0a\x01\x97\x00\x01"
		.fill   0x8d
		.ascii  "\x7b\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\x89\x00\x01\x00\x00\x00\x80\x00"
		.ascii  "\x83\x00\x01\x00\x00\x00\xc0\x00"
		.ascii  "\x8d\x00\x01"
		.fill   0x4
		.ascii  "\x01\xa1\x00\x01"
		.fill   0x5
		.ascii  "\xb9\x00\x02\x00\x00\x00\x40\x00"
		.ascii  "\xa6\x00\x02\x00\x00\x00\x80\x00"
		.ascii  "\xa4\x00\x02\x00\x00\x00\xc0\x00"
		.ascii  "\xa4\x00\x02"
		.fill   0x4
		.ascii  "\x01\xb0\x00\x02"
		.fill   0x55
		.ascii  "\x93\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\xad\x00\x01\x00\x00\x00\x80\x00"
		.ascii  "\x84\x00\x01\x00\x00\x00\xc0\x00"
		.ascii  "\x70\x00\x01"
		.fill   0x4
		.ascii  "\x01\x72\x00\x01\x00\x00\x00\x40"
		.ascii  "\x01\x7f\x00\x01"
		.fill   0x5
		.ascii  "\xde\x00\x04\x00\x00\x00\x40\x00"
		.ascii  "\xec\x00\x04\x00\x00\x00\x80\x00"
		.ascii  "\xdb\x00\x04\x00\x00\x00\xc0\x00"
		.ascii  "\xe3\x00\x04"
		.fill   0x4
		.ascii  "\x01\xe9\x00\x04\x00\x00\x00\x40"
		.ascii  "\x01\xe7\x00\x04"
		.fill   0x4a5
		.ascii  "\x55\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\x52\x00\x01\x00\x00\x00\x93\x00"
		.ascii  "\x2c\x00\x01\x00\x00\x00\xd3\x00"
		.ascii  "\x2c\x00\x01\x00\x00\x00\x4c\x01"
		.ascii  "\x60\x00\x01"
		.fill   0x5
		.ascii  "\xd8\x00\x02\x00\x00\x00\x40\x00"
		.ascii  "\xd0\x00\x02\x00\x00\x00\x80\x00"
		.ascii  "\xd7\x00\x02\x00\x00\x00\xc0\x00"
		.ascii  "\xec\x00\x02"
		.fill   0x4
		.ascii  "\x01\xe3\x00\x02\x00\x00\x00\x40"
		.ascii  "\x01\xe1\x00\x02"
		.fill   0x4ab
		.ascii  "\x43\x00\xb9\x00\x01\x00\x00\x00"
		.ascii  "\x73\x00\xa2\x00\x01\x00\x00\x00"
		.ascii  "\xd3\x00\xa6\x00\x01\x00\x00\x00"
		.ascii  "\x03\x01\x75\x00\x01\x00\x00\x00"
		.ascii  "\x43\x01\x6f\x00\x01\x00\x00\x00"
		.ascii  "\x59\x01\xab\x00\x01"
		.fill   0x73
		.ascii  "\x19\x00\x69\x00\x01\x00\x00\x00"
		.ascii  "\xa2\x00\xb6\x00\x01\x00\x00\x00"
		.ascii  "\xd6\x00\xa8\x00\x01\x00\x00\x00"
		.ascii  "\x4a\x01\xad\x00\x01"
		.fill   0x5
		.ascii  "\x0a\x01\x02\x00\x00\x00\x20\x00"
		.ascii  "\xe3\x00\x02\x00\x00\x00\x41\x00"
		.ascii  "\x83\x00\x02\x00\x00\x00\x54\x00"
		.ascii  "\xfb\x00\x02\x00\x00\x00\xa4\x00"
		.ascii  "\xea\x00\x02\x00\x00\x00\xd8\x00"
		.ascii  "\x00\x01\x02\x00\x00\x00\xef\x00"
		.ascii  "\xad\x00\x02\x00\x00\x00\x1c\x01"
		.ascii  "\x10\x01\x02\x00\x00\x00\x58\x01"
		.ascii  "\xfe\x00\x02"
		.fill   0x35b

_0bd8e4_data:
		.ascii  "\x00\x00\x00\x01\x03\x05\x07"
		.ascii   "\t\n\n\n\t"
		.ascii  "\x07\x05\x03\x01"

_0bd8f4_data:
		.fill   0x4

_0bd8f8_data:
		.ascii  "\x04\x00\x02\x00\x00\x00\xfe\xff"
		.ascii  "\xfc\xff\x02\x00\x00\x00\xfe\xff"

_0bd908_data:
		.ascii  "\x00\x00\x02\x00\x04\x00\x02\x00"
		.ascii  "\x00\x00\xfe\xff\xfc\xff\xfe\xff"

_0bd918_data:
		.fill   0x4

_0bd91c_data:
		.fill   0x4

_0bd920_data:
		.fill   0x4

_0bd924_data:
		.ascii  "\x00\x00"

_0bd926_data:
		.ascii  "\x00\x00"

_0bd928_data:
		.fill   0x4

_0bd92c_data:
		.ascii  "\x00\x00"

_0bd92e_data:
		.ascii  "\x00\x00"

_0bd930_data:
		.fill   0x4

_0bd934_data:
		.ascii  "\x00\x00"

_0bd936_data:
		.ascii  "\x00\x00"

_0bd938_data:
		.fill   0x4

_0bd93c_data:
		.ascii  "\x00\x00"

_0bd93e_data:
		.ascii  "\x00\x00"

_0bd940_data:
		.fill   0x4

_0bd944_data:
		.long   _07f91e_jump

_0bd948_data:
		.long   _07f91e_jump

_0bd94c_data:
		.long   _07f91e_jump

_0bd950_data:
		.fill   0x4

_0bd954_data:
		.ascii  "\x20\x00\x00\x00"

_0bd958_data:
		.fill   0x4

_0bd95c_data:
		.fill   0x4

_0bd960_data:
		.ascii  "\x01\x00\x00\x00"

_0bd964_data:
		.fill   0x4

_0bd968_data:
		.fill   0x4

_0bd96c_data:
		.fill   0x4

_0bd970_data:
		.ascii  "\x00"

_0bd971_data:
		.ascii  "\x00\x00\x00"

_0bd974_data:
		.fill   0xc
		.ascii  "\x01"
		.fill   0xd

_0bd98e_data:
		.fill   0xc
		.ascii  "\x02\x00\x00\x00\x01"
		.fill   0x15
		.ascii  "\x02"

_0bd9b5_data:
		.ascii  "\x00\x00\x00\x02"
		.fill   0x15
		.ascii  "\x03\x00\x00\x00\x03"
		.fill   0x15
		.ascii  "\x02\x00\x00\x00\x04"
		.fill   0x9

_0bd9f6_data:
		.fill   0x186

_0bdb7c_data:
		.ascii  "\x61"

_0bdb7d_data:
		.ascii  "\x00\x01\x00\x00"
		.long   _0e6f30_data

_0bdb85_data:
		.fill   0x4
		.ascii  "\x09\x01\x01\x0b\x06\x04\x05\x05"
		.ascii  "\x05\x02\x03\xff\xff\x07\x08\x06"
		.ascii  "\x08\x01\xff"

_0bdb9c_data:
		.fill   0x4

_0bdba0_data:
		.fill   0x4

_0bdba4_data:
		.fill   0x4

_0bdba8_data:
		.fill   0x4

_0bdbac_data:
		.fill   0x4

_0bdbb0_data:
		.fill   0x4

_0bdbb4_data:
		.fill   0x4

_0bdbb8_data:
		.fill   0x4

_0bdbbc_data:
		.fill   0x4

_0bdbc0_data:
		.fill   0xc

_0bdbcc_data:
		.ascii  "\x00\x00"

_0bdbce_data:
		.ascii  "\x00"

_0bdbcf_data:
		.ascii  "\x00"

_0bdbd0_data:
		.ascii  "\x00"

_0bdbd1_data:
		.fill   0x4

_0bdbd5_data:
		.ascii  "\x00\x00"

_0bdbd7_data:
		.ascii  "\x00"

_0bdbd8_data:
		.ascii  "\x00"

_0bdbd9_data:
		.ascii  "\x48\x5c\x08"

_0bdbdc_data:
		.fill   0x4
		.long   _0c161c_data
		.long   _0c1621_data
		.long   _0c1626_data
		.long   _0c162b_data
		.long   _0c162f_data
		.long   _0c1634_data
		.long   _0c1639_data
		.long   _0c163d_data
		.long   _0c1643_data
		.long   _0c1648_data
		.long   _0c164c_data
		.long   _0c1652_data
		.long   _0c1658_data
		.long   _0c165e_data
		.long   _0c1663_data
		.long   _0c1669_data
		.long   _0c166d_data
		.long   _0c1671_data
		.long   _0c1675_data
		.long   _0c1678_data
		.long   _0c167b_data
		.long   _0c167e_data
		.long   _0c1682_data

_0bdc3c_data:
		.fill   0x4

_0bdc40_data:
		.fill   0x4

_0bdc44_data:
		.ascii  "\x14\x00\x00\x00"

_0bdc48_data:
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x02"
		.fill   0x3f

_0bdc98_data:
		.long   _0bdc48_data

_0bdc9c_data:
		.fill   0x4

_0bdca0_data:
		.fill   0x14

_0bdcb4_data:
		.fill   0x14

_0bdcc8_data:
		.fill   0x4

_0bdccc_data:
		.fill   0x1a

_0bdce6_data:
		.fill   0x4

_0bdcea_data:
		.fill   0x1a

_0bdd04_data:
		.fill   0x14

_0bdd18_data:
		.fill   0x14

_0bdd2c_data:
		.fill   0x4

_0bdd30_data:
		.fill   0x1a

_0bdd4a_data:
		.fill   0x4

_0bdd4e_data:
		.fill   0x1a

_0bdd68_data:
		.fill   0x14

_0bdd7c_data:
		.fill   0x14

_0bdd90_data:
		.fill   0x14

_0bdda4_data:
		.fill   0x14

_0bddb8_data:
		.fill   0x14

_0bddcc_data:
		.ascii  "\xf8\x2a\x00\x00\xf8\x2a\x00\x00"
		.ascii  "\xf8\x2a\x00\x00\xf8\x2a\x00\x00"
		.ascii  "\xe8\x03\x00\x00"

_0bdde0_data:
		.fill   0x14

_0bddf4_data:
		.fill   0x4

_0bddf8_data:
		.fill   0x1a

_0bde12_data:
		.fill   0x14

_0bde26_data:
		.fill   0x14

_0bde3a_data:
		.fill   0x14

_0bde4e_data:
		.fill   0x4

_0bde52_data:
		.fill   0x1a

_0bde6c_data:
		.fill   0x4

_0bde70_data:
		.fill   0x3bc

_0be22c_data:
		.fill   0x4

_0be230_data:
		.fill   0x1e

_0be24e_data:
		.fill   0x18

_0be266_data:
		.fill   0x24

_0be28a_data:
		.fill   0x19

_0be2a3_data:
		.fill   0x2b

_0be2ce_data:
		.fill   0x220

_0be4ee_data:
		.ascii  "\x01\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x05\x00\x00\x00\x07\x00\x00\x00"
		.ascii  "\xc2\x00\x00\x00\xc6\x00\x00\x00"
		.ascii  "\xca\x00\x00\x00\xce\x00\x00\x00"

_0be50e_data:
		.fill   0x5

_0be513_data:
		.fill   0x4

_0be517_data:
		.fill   0x4

_0be51b_data:
		.fill   0x4

_0be51f_data:
		.fill   0x4

_0be523_data:
		.fill   0x4

_0be527_data:
		.fill   0x4

_0be52b_data:
		.fill   0x4

_0be52f_data:
		.fill   0x4

_0be533_data:
		.fill   0x4

_0be537_data:
		.fill   0x4

_0be53b_data:
		.fill   0x4

_0be53f_data:
		.fill   0x4

_0be543_data:
		.fill   0x4

_0be547_data:
		.fill   0x4

_0be54b_data:
		.fill   0x4

_0be54f_data:
		.fill   0x4

_0be553_data:
		.fill   0x4

_0be557_data:
		.fill   0x13c

_0be693_data:
		.ascii  "\xff\xff\xff\xff"

_0be697_data:
		.fill   0x4

_0be69b_data:
		.fill   0x56

_0be6f1_data:
		.fill   0x4

_0be6f5_data:
		.ascii  "\x00\x00"

_0be6f7_data:
		.fill   0x3c

_0be733_data:
		.fill   0x4

_0be737_data:
		.fill   0x3c

_0be773_data:
		.fill   0x4

_0be777_data:
		.ascii  "\x00\x00"

_0be779_data:
		.fill   0x3e

_0be7b7_data:
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"

_0be7c7_data:
		.ascii  "\x00"

_0be7c8_data:
		.fill   0xff

_0be8c7_data:
		.fill   0xff

_0be9c6_data:
		.fill   0x4

_0be9ca_data:
		.fill   0x20

_0be9ea_data:
		.fill   0x8

_0be9f2_data:
		.fill   0x4

_0be9f6_data:
		.fill   0x24

_0bea1a_data:
		.fill   0x4

_0bea1e_data:
		.fill   0x5

_0bea23_data:
		.ascii  "\x00\x00\x00"

_0bea26_data:
		.fill   0x4

_0bea2a_data:
		.fill   0x4

_0bea2e_data:
		.ascii  "\x00\x00"

_0bea30_data:
		.fill   0x4

_0bea34_data:
		.ascii  "\x00\x00"

_0bea36_data:
		.fill   0x4

_0bea3a_data:
		.fill   0x4

_0bea3e_data:
		.fill   0x4

_0bea42_data:
		.fill   0x4

_0bea46_data:
		.fill   0x4

_0bea4a_data:
		.fill   0x4

_0bea4e_data:
		.ascii  "\x00\x00"

_0bea50_data:
		.fill   0x3c

_0bea8c_data:
		.ascii  "\x00"

_0bea8d_data:
		.fill   0x2f

_0beabc_data:
		.long   _0c1688_data
		.long   _0c16ae_data
		.long   _0c16cd_data
		.long   _0c16e7_data
		.long   _0c170f_data
		.long   _0c1721_data
		.long   _0c173b_data
		.long   _0c174d_data
		.long   _0c175e_data
		.long   _0c1787_data
		.long   _0c17b4_data
		.long   _0c17c3_data
		.long   _0c17d8_data
		.long   _0c17f0_data
		.long   _0c1804_data
		.long   _0c1816_data
		.long   _0c1831_data
		.long   _0c1840_data
		.long   _0c184e_data
		.long   _0c185c_data

_0beb0c_data:
		.fill   0x14

_0beb20_data:
		.fill   0x4

_0beb24_data:
		.fill   0xc

_0beb30_data:
		.fill   0x4

_0beb34_data:
		.fill   0x4

_0beb38_data:
		.fill   0x4

_0beb3c_data:
		.fill   0x4

_0beb40_data:
		.fill   0x4

_0beb44_data:
		.fill   0x4

_0beb48_data:
		.fill   0xc

_0beb54_data:
		.fill   0x20

_0beb74_data:
		.fill   0xc

_0beb80_data:
		.fill   0x24

_0beba4_data:
		.fill   0x4

_0beba8_data:
		.fill   0x5

_0bebad_data:
		.ascii  "\x00\x00\x00"

_0bebb0_data:
		.fill   0x4

_0bebb4_data:
		.fill   0x4

_0bebb8_data:
		.fill   0x4

_0bebbc_data:
		.fill   0x4

_0bebc0_data:
		.fill   0x8

_0bebc8_data:
		.fill   0x4

_0bebcc_data:
		.fill   0x4

_0bebd0_data:
		.ascii  "\x00\x00"

_0bebd2_data:
		.long   _0bfbe2_data

_0bebd6_data:
		.fill   0x4

_0bebda_data:
		.fill   0x4

_0bebde_data:
		.fill   0x1004

_0bfbe2_data:
		.fill   0x4

_0bfbe6_data:
		.fill   0x4

_0bfbea_data:
		.ascii  "\x00\x00"

_0bfbec_data:
		.fill   0x4

_0bfbf0_data:
		.fill   0x4

_0bfbf4_data:
		.fill   0x4

_0bfbf8_data:
		.fill   0x4

_0bfbfc_data:
		.fill   0x50

_0bfc4c_data:
		.fill   0x4

_0bfc50_data:
		.fill   0x4

_0bfc54_data:
		.fill   0x4

_0bfc58_data:
		.fill   0x4

_0bfc5c_data:
		.fill   0x3c

_0bfc98_data:
		.fill   0x50

_0bfce8_data:
		.fill   0x4

_0bfcec_data:
		.fill   0x4

_0bfcf0_data:
		.fill   0x4

_0bfcf4_data:
		.fill   0x4

_0bfcf8_data:
		.fill   0x4

_0bfcfc_data:
		.ascii  "\x00\x00"

_0bfcfe_data:
		.string "Stack Overflow!\r\n"

_0bfd10_data:
		.long   _08a29d_func

_0bfd14_data:
		.long   _08a29d_func

_0bfd18_data:
		.long   _08b81c_func

_0bfd1c_data:
		.fill   0x4

_0bfd20_data:
		.fill   0x4

_0bfd24_data:
		.fill   0x8
		.ascii  "\x02\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x03"
		.fill   0x13

_0bfd48_data:
		.fill   0x4

_0bfd4c_data:
		.fill   0x4

_0bfd50_data:
		.ascii  "\x01\x00\x00\x00\x05\x00\x00\x00"
		.ascii  "\x09"
		.fill   0x13

_0bfd6c_data:
		.ascii  "\x50\x46\x00\x00"

_0bfd70_data:
		.ascii  "\x10\x0e\x00\x00"

_0bfd74_data:
		.ascii  "\x01\x00\x00\x00"

_0bfd78_data:
		.ascii  "\x45\x53\x54"
		.fill   0x1c

_0bfd97_data:
		.ascii  "\x45\x44\x54"
		.fill   0x1c
		.long   _0bfd78_data

_0bfdba_data:
		.long   _0bfd97_data

_0bfdbe_data:
		.ascii  "\x01"
		.fill   0x5

_0bfdc4_data:
		.ascii  "\x01\x00\x00\x00"

_0bfdc8_data:
		.ascii  "\x10\x00\x00\x00"

_0bfdcc_data:
		.long   _08b230_jump

_0bfdd0_data:
		.long   _08b230_jump

_0bfdd4_data:
		.ascii  "\x7f\x12\x00\x00"

_0bfdd8_data:
		.ascii  "\x11\x00\x00\x00"

_0bfddc_data:
		.fill   0x4

_0bfde0_data:
		.fill   0x4

_0bfde4_data:
		.string "/michel ancel/"
		.ascii  "\x00"

_0bfdf4_data:
		.string "/frederic houde/"
		.ascii  "\x00\x00\x00"

_0bfe08_data:
		.string "/alexandra steible/"

_0bfe1c_data:
		.string "/serge hascoet/"

_0bfe2c_data:
		.string "/bruno bouvret/"

_0bfe3c_data:
		.string "/gunther galipot/"
		.ascii  "\x00\x00"

_0bfe50_data:
		.string "/sacha gentilhomme/"

_0bfe64_data:
		.string "/michael guez/"
		.ascii  "\x00"

_0bfe74_data:
		.string "/christophe thibaut/"
		.ascii  "\x00\x00\x00"

_0bfe8c_data:
		.string "/kamal aitmihoub/"
		.ascii  "\x00\x00"

_0bfea0_data:
		.string "/david gilson/"
		.ascii  "\x00"

_0bfeb0_data:
		.string "/sophie esturgie/"
		.ascii  "\x00\x00"

_0bfec4_data:
		.string "/jacques exertie/"
		.ascii  "\x00\x00"

_0bfed8_data:
		.string "/gregoire pons/"

_0bfee8_data:
		.string "/veronique rondello/"
		.ascii  "\x00\x00\x00"

_0bff00_data:
		.string "/beatrice sauterau/"

_0bff14_data:
		.string "/philippe vindolet"
		.ascii  "\x00"

_0bff28_data:
		.string "/christian volckman/"
		.ascii  "\x00\x00\x00"

_0bff40_data:
		.string "/eric pelatan/"
		.ascii  "\x00"

_0bff50_data:
		.string "/sylvaine jenny/"
		.ascii  "\x00\x00\x00"

_0bff64_data:
		.string "/jean christophe alessandri/"
		.ascii  "\x00\x00\x00"

_0bff84_data:
		.string "/sophie ancel/"
		.ascii  "\x00"

_0bff94_data:
		.string "/olivier bechard/"
		.ascii  "\x00\x00"

_0bffa8_data:
		.string "/nicolas bocquillon/"
		.ascii  "\x00\x00\x00"

_0bffc0_data:
		.string "/jean marc geffroy/"

_0bffd4_data:
		.string "/laurent rettig/"
		.ascii  "\x00\x00\x00"

_0bffe8_data:
		.string "/olivier soleil/"
		.ascii  "\x00\x00\x00"

_0bfffc_data:
		.string "/bertrand helias/"
		.ascii  "\x00\x00"

_0c0010_data:
		.string "/yann le tensorer/"
		.ascii  "\x00"

_0c0024_data:
		.string "/daniel palix/"
		.ascii  "\x00"

_0c0034_data:
		.string "/cyril cauchois/"
		.ascii  "\x00\x00\x00"

_0c0048_data:
		.string "/olivier couvreur/"
		.ascii  "\x00"

_0c005c_data:
		.string "/antoine dodens/"
		.ascii  "\x00\x00\x00"

_0c0070_data:
		.string "/antonio ferreira/"
		.ascii  "\x00"

_0c0084_data:
		.string "/philippe fuentes/"
		.ascii  "\x00"

_0c0098_data:
		.string "/benoit germain/"
		.ascii  "\x00\x00\x00"

_0c00ac_data:
		.string "/christophe giraud/"

_0c00c0_data:
		.string "/francois mahieu/"
		.ascii  "\x00\x00"

_0c00d4_data:
		.string "/christian mihalache/"
		.ascii  "\x00\x00"

_0c00ec_data:
		.string "/sebastien morin/"
		.ascii  "\x00\x00"

_0c0100_data:
		.string "/bogdan radusi/"

_0c0110_data:
		.string "/daniel raviart/"
		.ascii  "\x00\x00\x00"

_0c0124_data:
		.string "/olivier rozier/"
		.ascii  "\x00\x00\x00"

_0c0138_data:
		.string "/jozef skrabo/"
		.ascii  "\x00"

_0c0148_data:
		.string "/gilles vanwalleghem/"
		.ascii  "\x00\x00"

_0c0160_data:
		.string "/stephane bellanger/"
		.ascii  "\x00\x00\x00"

_0c0178_data:
		.string "/didier lord/"
		.ascii  "\x00\x00"

_0c0188_data:
		.string "/olivier amiaud/"
		.ascii  "\x00\x00\x00"

_0c019c_data:
		.string "/sylvain brunet/"
		.ascii  "\x00\x00\x00"

_0c01b0_data:
		.string "/nathalie drouet/"
		.ascii  "\x00\x00"

_0c01c4_data:
		.string "/dominique dumont/"
		.ascii  "\x00"

_0c01d8_data:
		.string "/kamel feunas/"
		.ascii  "\x00"

_0c01e8_data:
		.string "/remy gazel/"
		.ascii  "\x00\x00\x00"

_0c01f8_data:
		.string "/didier leglise/"
		.ascii  "\x00\x00\x00"

_0c020c_data:
		.string "/jean marc litchmann/"
		.ascii  "\x00\x00"

_0c0224_data:
		.string "/frederic louvre/"
		.ascii  "\x00\x00"

_0c0238_data:
		.string "/guillaume michel/"
		.ascii  "\x00"

_0c024c_data:
		.string "/olivier mortier/"
		.ascii  "\x00\x00"

_0c0260_data:
		.string "/frederic prados/"
		.ascii  "\x00\x00"

_0c0274_data:
		.string "/stephane ronse/"
		.ascii  "\x00\x00\x00"

_0c0288_data:
		.string "/rene de wael/"
		.ascii  "\x00"

_0c0298_data:
		.string "/emmanuelle cosso/"
		.ascii  "\x00"

_0c02ac_data:
		.string "/mitsuyuki bando/"
		.ascii  "\x00\x00"

_0c02c0_data:
		.string "/chris benard/"
		.ascii  "\x00"

_0c02d0_data:
		.string "/patrice dozier/"
		.ascii  "\x00\x00\x00"

_0c02e4_data:
		.string "/douglas rand/"
		.ascii  "\x00"

_0c02f4_data:
		.string "/steven perkinson/"
		.ascii  "\x00"

_0c0308_data:
		.string "/christian stonner/"

_0c031c_data:
		.string "/bruno barone/"
		.ascii  "\x00"

_0c032c_data:
		.string "/thomas belmont/"
		.ascii  "\x00\x00\x00"

_0c0340_data:
		.string "/christophe cavelan/"
		.ascii  "\x00\x00\x00"

_0c0358_data:
		.string "/marc gioan/"
		.ascii  "\x00\x00\x00"

_0c0368_data:
		.string "/benoit macon/"
		.ascii  "\x00"

_0c0378_data:
		.string "/lionel rico/"
		.ascii  "\x00\x00"

_0c0388_data:
		.string "/emmanuel texandier/"
		.ascii  "\x00\x00\x00"

_0c03a0_data:
		.string "/dorian thibaut/"
		.ascii  "\x00\x00\x00"

_0c03b4_data:
		.string "/agnes haegel/"
		.ascii  "\x00"

_0c03c4_data:
		.string "/ludimedia : gerard guillemot/"
		.ascii  "\x00"

_0c03e4_data:
		.string "/ubi studios : michel guillemot/"
		.ascii  "\x00\x00\x00"

_0c0408_data:
		.string "/ubi soft :  yves guillemot/"
		.ascii  "\x00\x00\x00"

_0c0428_data:
		.string "rayman"
		.ascii  "\x00"

_0c0430_data:
		.ascii  "\x2e\x5c\x00\x00"

_0c0434_data:
		.string "SAVE"
		.ascii  "\x00\x00\x00"

_0c043c_data:
		.string "Missing = in rayman's argument (save=pathname).\n"
		.ascii  "\x00\x00\x00"

_0c0470_data:
		.ascii  "\x5c\x00\x00\x00"

_0c0474_data:
		.string "FREQ70"
		.ascii  "\x00"

_0c047c_data:
		.string "\nLeft memory available = %.3f Mo.\n\n"

_0c04a0_data:
		.string "386 processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c04bc_data:
		.string "Rayman requires a 486 or more.\n"

_0c04dc_data:
		.string "486 processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c04f8_data:
		.string "Pentium processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c0518_data:
		.string "Pentium %1d processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c053c_data:
		.string "Unknown processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c055c_data:
		.string "No windows detected.\n"
		.ascii  "\x00\x00"

_0c0574_data:
		.string "Windows real mode detected.\n"
		.ascii  "\x00\x00\x00"

_0c0594_data:
		.string "Windows standard mode detected.\n"
		.ascii  "\x00\x00\x00"

_0c05b8_data:
		.string "Windows/386 V 2.x detected.\n"
		.ascii  "\x00\x00\x00"

_0c05d8_data:
		.string "Windows 95 detected.\n"
		.ascii  "\x00\x00"

_0c05f0_data:
		.string "Windows V %d.%d detected.\n"
		.ascii  "\x00"

_0c060c_data:
		.string "Not enough memory."
		.ascii  "\x00"

_0c0620_data:
		.ascii  "\x0a\x00\x00\x00"

_0c0624_data:
		.string "Normal and X mode available.\n"
		.ascii  "\x00\x00"

_0c0644_data:
		.string "Only X mode available.\n"

_0c065c_data:
		.string "Zoom effect available.\n"

_0c0674_data:
		.string "No zoom effect.\n"
		.ascii  "\x00\x00\x00"

_0c0688_data:
		.string "Sound and CD music.\n"
		.ascii  "\x00\x00\x00"

_0c06a0_data:
		.string "Only sound, no CD music.\n"
		.ascii  "\x00\x00"

_0c06bc_data:
		.string "Only CD music, no sound.\n"
		.ascii  "\x00\x00"

_0c06d8_data:
		.string "no CD music, no sound.\n"

_0c06f0_data:
		.string "Background available.\n"
		.ascii  "\x00"

_0c0708_data:
		.string "No background.\n"

_0c0718_data:
		.string "save path : %s\n"

_0c0728_data:
		.string "Allocation error in variables.\n"

_0c0748_data:
		.string "Allocation error in variables.\n"

_0c0768_data:
		.string "RAYMAN v1.00"
		.ascii  "\x00\x00\x00"

_0c0778_data:
		.string "(C)racked by REPLICATOR of HYBRID"
		.ascii  "\x00\x00"

_0c079c_data:
		.ascii  "\x0a\x0a\x00\x00"

_0c07a0_data:
		.string "c:\\raytmp.tmp"
		.ascii  "\x00\x00"

_0c07b0_data:
		.string "CD ROM's Initialization.\n"
		.ascii  "\x00\x00"

_0c07cc_data:
		.string "intro.dat"
		.ascii  "\x00\x00"

_0c07d8_data:
		.string "/limited version/"
		.ascii  "\x00\x00"

_0c07ec_data:
		.string "/install rayman with cdrom/"

_0c0808_data:
		.ascii  "\x25\x00\x00\x00"

_0c080c_data:
		.string "/go !/"
		.ascii  "\x00"

_0c0814_data:
		.string "''game over''"
		.ascii  "\x00\x00"

_0c0824_data:
		.string "game over"
		.ascii  "\x00\x00"

_0c0830_data:
		.ascii  "\x3a\x00\x00\x00"

_0c0834_data:
		.fill   0x4

_0c0838_data:
		.string "Rayman says fatal error :\n%s\n"
		.ascii  "\x00\x00"

_0c0858_data:
		.string "\nPress a key to exit.\n"
		.ascii  "\x00"

_0c0870_data:
		.string "/%2d : %02d/"
		.ascii  "\x00\x00\x00"

_0c0880_data:
		.string "/%s/"
		.ascii  "\x00\x00\x00"

_0c0888_data:
		.string "Write Protect Violation"

_0c08a0_data:
		.string "Unknown unit"
		.ascii  "\x00\x00\x00"

_0c08b0_data:
		.string "Drive not ready"

_0c08c0_data:
		.string "Unknown command"

_0c08d0_data:
		.string "CRC error"
		.ascii  "\x00\x00"

_0c08dc_data:
		.string "Bad drive request structure length"
		.ascii  "\x00"

_0c0900_data:
		.string "Seek error"
		.ascii  "\x00"

_0c090c_data:
		.string "Unknown media"
		.ascii  "\x00\x00"

_0c091c_data:
		.string "Sector not found"
		.ascii  "\x00\x00\x00"

_0c0930_data:
		.string "Printer out of paper"
		.ascii  "\x00\x00\x00"

_0c0948_data:
		.string "Write fault"

_0c0954_data:
		.string "Read fault"
		.ascii  "\x00"

_0c0960_data:
		.string "General failure"

_0c0970_data:
		.string "Reserved"
		.ascii  "\x00\x00\x00"

_0c097c_data:
		.string "Invalid disk change"

_0c0990_data:
		.string "Corrupted CD-ROM driver (MSCDEX)."
		.ascii  "\x00\x00"

_0c09b4_data:
		.string "CD ROM drive found on %c:\n"
		.ascii  "\x00"

_0c09d0_data:
		.string "Differential method"

_0c09e4_data:
		.string "Source file checksum error\n"

_0c0a00_data:
		.string "Corrupted source file\n"
		.ascii  "\x00"

_0c0a18_data:
		.string "Fatal error: "
		.ascii  "\x00\x00"

_0c0a28_data:
		.fill   0x4

_0c0a2c_data:
		.ascii  "\x7e\x00\x00\x00\x7a"

_0c0a31_data:
		.ascii  "\x00\x00\x00"

_0c0a34_data:
		.string "level "
		.ascii  "\x00"

_0c0a3c_data:
		.string "conclu.dat"
		.ascii  "\x00"

_0c0a48_data:
		.string "Memory error in draw_buffer.\n"
		.ascii  "\x00\x00"

_0c0a68_data:
		.ascii  "\x52\x41\x59\x00"

_0c0a6c_data:
		.string ".LEV"
		.ascii  "\x00\x00\x00"

_0c0a74_data:
		.string ".WLD"
		.ascii  "\x00\x00\x00"

_0c0a7c_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c0a80_data:
		.string "RAYMAN"
		.ascii  "\x00"

_0c0a88_data:
		.string ".SAV"
		.ascii  "\x00\x00\x00"

_0c0a90_data:
		.string "\n%s\n"
		.ascii  "\x00\x00\x00"

_0c0a98_data:
		.string "intro.dat"
		.ascii  "\x00\x00"

_0c0aa4_data:
		.ascii  "\x2e\x5c\x00\x00"

_0c0aa8_data:
		.ascii  "\x72\x62\x00\x00"

_0c0aac_data:
		.string "Rayman sound says fatal error :\n%s\n"

_0c0ad0_data:
		.ascii  "\x72\x62\x00\x00"

_0c0ad4_data:
		.string "SNDH8B.DAT"
		.ascii  "\x00"

_0c0ae0_data:
		.string "Fichier header introuvable (SNDH8B.DAT).\n"
		.ascii  "\x00\x00"

_0c0b0c_data:
		.string "Load error in sndh8b.dat.\n"
		.ascii  "\x00"

_0c0b28_data:
		.string "SNDD8B.DAT"
		.ascii  "\x00"

_0c0b34_data:
		.string "Fichier data introuvable.\n"
		.ascii  "\x00"

_0c0b50_data:
		.ascii  "\x4d\x82"
		.string "moire insuffisante pour charger les samples.\n"

_0c0b80_data:
		.string "Load error in sndd8b.dat.\n"
		.ascii  "\x00"

_0c0b9c_data:
		.string "sndvig.dat"
		.ascii  "\x00"

_0c0ba8_data:
		.string "Fichier Tchach introuvable.\n"
		.ascii  "\x00\x00\x00"

_0c0bc8_data:
		.string "Load error in sndvig.dat.\n"
		.ascii  "\x00"

_0c0be4_data:
		.string "FILE NOT FOUND: %s\n"

_0c0bf8_data:
		.string "DANY"
		.ascii  "\x00\x00\x00"

_0c0c00_data:
		.string " tu veux voir comment y joue Monsieur Daniel ?\n"

_0c0c30_data:
		.string " NaMe oF fILe ? (DEfAuLT:%s) \n"
		.ascii  "\x00"

_0c0c50_data:
		.string ".REC"
		.ascii  "\x00\x00\x00"

_0c0c58_data:
		.string "Pas de Jumelle"
		.ascii  "\x00"

_0c0c68_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c0c6c_data:
		.string "PCMAP"
		.ascii  "\x00\x00"

_0c0c74_data:
		.ascii  "\x5c\x00\x00\x00"

_0c0c78_data:
		.ascii  "\x72\x62\x00\x00"

_0c0c7c_data:
		.string "Can not open file %s (load_world).\n"

_0c0ca0_data:
		.string "%s : File integrity fault.\n"

_0c0cbc_data:
		.string "Can not open file %s (load_level).\n"

_0c0ce0_data:
		.string "%s : File integrity fault (Block Normal).\n"
		.ascii  "\x00"

_0c0d0c_data:
		.string "bray.dat"
		.ascii  "\x00\x00\x00"

_0c0d18_data:
		.string "Can not open file %s (load_big_ray).\n"
		.ascii  "\x00\x00"

_0c0d40_data:
		.string "ALLFIX.DAT"
		.ascii  "\x00"

_0c0d4c_data:
		.string "Can not open file %s (load_all_fix).\n"
		.ascii  "\x00\x00"

_0c0d74_data:
		.string "VIGNET.DAT"
		.ascii  "\x00"

_0c0d80_data:
		.string "%s : Can not open.\n"

_0c0d94_data:
		.string "%s : File integrity fault (%d).\n"
		.ascii  "\x00\x00\x00"

_0c0db8_data:
		.string "No memory allocated for it (load_pcx) !!"
		.ascii  "\x00\x00\x00"

_0c0de4_data:
		.string "%s : File integrity fault (%d).\n"
		.ascii  "\x00\x00\x00"

_0c0e08_data:
		.string "No memory allocated (load_plan0)."
		.ascii  "\x00\x00"

_0c0e2c_data:
		.string "No memory allocated (PLAN0FND_to_bits_planes)."
		.ascii  "\x00"

_0c0e5c_data:
		.string "RAY.LNG"

_0c0e64_data:
		.string "Memory error in LoadLanguageTxt"

_0c0e84_data:
		.string "%s : File integrity fault (%d).\n"
		.ascii  "\x00\x00\x00"

_0c0ea8_data:
		.string "No memory allocated for it (load_pcx) !!"
		.ascii  "\x00\x00\x00"

_0c0ed4_data:
		.string "320x200"

_0c0edc_data:
		.string "312x196"

_0c0ee4_data:
		.string "304x192"

_0c0eec_data:
		.string "300x188"

_0c0ef4_data:
		.ascii  "\x36\x30\x00\x00"

_0c0ef8_data:
		.ascii  "\x35\x30\x00\x00"

_0c0efc_data:
		.ascii  "\x33\x30\x00\x00"

_0c0f00_data:
		.ascii  "\x32\x35\x00\x00"

_0c0f04_data:
		.string "mode dieu"
		.ascii  "\x00\x00"

_0c0f10_data:
		.ascii  "\x31\x00\x00\x00"

_0c0f14_data:
		.ascii  "\x32\x00\x00\x00"

_0c0f18_data:
		.ascii  "\x33\x00\x00\x00"

_0c0f1c_data:
		.ascii  "\x34\x00\x00\x00"

_0c0f20_data:
		.ascii  "\x35\x00\x00\x00"

_0c0f24_data:
		.ascii  "\x36\x00\x00\x00"

_0c0f28_data:
		.ascii  "\x37\x00\x00\x00"

_0c0f2c_data:
		.ascii  "\x38\x00\x00\x00"

_0c0f30_data:
		.ascii  "\x39\x00\x00\x00"

_0c0f34_data:
		.ascii  "\x30\x00\x00\x00"

_0c0f38_data:
		.ascii  "\x61\x00\x00\x00"

_0c0f3c_data:
		.ascii  "\x7a\x00\x00\x00"

_0c0f40_data:
		.ascii  "\x65\x00\x00\x00"

_0c0f44_data:
		.ascii  "\x72\x00\x00\x00"

_0c0f48_data:
		.ascii  "\x74\x00\x00\x00"

_0c0f4c_data:
		.ascii  "\x79\x00\x00\x00"

_0c0f50_data:
		.ascii  "\x75\x00\x00\x00"

_0c0f54_data:
		.ascii  "\x69\x00\x00\x00"

_0c0f58_data:
		.ascii  "\x6f\x00\x00\x00"

_0c0f5c_data:
		.ascii  "\x70\x00\x00\x00"

_0c0f60_data:
		.ascii  "\x71\x00\x00\x00"

_0c0f64_data:
		.ascii  "\x73\x00\x00\x00"

_0c0f68_data:
		.ascii  "\x64\x00\x00\x00"

_0c0f6c_data:
		.ascii  "\x66\x00\x00\x00"

_0c0f70_data:
		.ascii  "\x67\x00\x00\x00"

_0c0f74_data:
		.ascii  "\x68\x00\x00\x00"

_0c0f78_data:
		.ascii  "\x6a\x00\x00\x00"

_0c0f7c_data:
		.ascii  "\x6b\x00\x00\x00"

_0c0f80_data:
		.ascii  "\x6c\x00\x00\x00"

_0c0f84_data:
		.ascii  "\x6d\x00\x00\x00"

_0c0f88_data:
		.ascii  "\x77\x00\x00\x00"

_0c0f8c_data:
		.ascii  "\x78\x00\x00\x00"

_0c0f90_data:
		.ascii  "\x63\x00\x00\x00"

_0c0f94_data:
		.ascii  "\x76\x00\x00\x00"

_0c0f98_data:
		.ascii  "\x62\x00\x00\x00"

_0c0f9c_data:
		.ascii  "\x6e\x00\x00\x00"

_0c0fa0_data:
		.ascii  "\x3f\x00\x00\x00"

_0c0fa4_data:
		.ascii  "\x2e\x00\x00\x00"

_0c0fa8_data:
		.ascii  "\x3a\x00\x00\x00"

_0c0fac_data:
		.ascii  "\x61\x2f\x00\x00"

_0c0fb0_data:
		.ascii  "\x62\x2f\x00\x00"

_0c0fb4_data:
		.ascii  "\x63\x2f\x00\x00"

_0c0fb8_data:
		.ascii  "\x64\x2f\x00\x00"

_0c0fbc_data:
		.string "pci1"
		.ascii  "\x00\x00\x00"

_0c0fc4_data:
		.string "pci2"
		.ascii  "\x00\x00\x00"

_0c0fcc_data:
		.string "vesa"
		.ascii  "\x00\x00\x00"

_0c0fd4_data:
		.ascii  "\x7c\x00\x00\x00"

_0c0fd8_data:
		.ascii  "\x6f\x6b\x00\x00"

_0c0fdc_data:
		.string "/......./"
		.ascii  "\x00\x00"

_0c0fe8_data:
		.string "Error On MAX_ACTOBJ."
		.ascii  "\x00\x00\x00"

_0c1000_data:
		.string "Augmenter MAX_NB_SCROLL_PER_MAP"

_0c1020_data:
		.ascii  "\x2f\x00\x00\x00"

_0c1024_data:
		.ascii  "\x61\x61\x61\x00"

_0c1028_data:
		.fill   0x4

_0c102c_data:
		.ascii  "\x61\x00\x00\x00"

_0c1030_data:
		.ascii  "\x62\x00\x00\x00"

_0c1034_data:
		.ascii  "\x64\x00\x00\x00"

_0c1038_data:
		.ascii  "\x63\x00\x00\x00"

_0c103c_data:
		.string "/you have done it !/"
		.ascii  "\x00\x00\x00"

_0c1054_data:
		.string "/you have saved the world !/"
		.ascii  "\x00\x00\x00"

_0c1074_data:
		.string "%c:\\"
		.ascii  "\x00\x00\x00"

_0c107c_data:
		.string "%c:\\????????.???"
		.ascii  "\x00\x00\x00"

_0c1090_data:
		.ascii  "\x77\x62\x00\x00"

_0c1094_data:
		.string "Please insert Rayman's cdrom.\n"
		.ascii  "\x00"

_0c10b4_data:
		.string "Please insert Rayman's cdrom.\n- If rayman can not find disk, press ESC,\n  and rerun Rayman.\n- If you want try Rayman in limited mode, press ESPACE.\n"
		.ascii  "\x00\x00\x00"

_0c114c_data:
		.string "Please install MSCDEX v 2.1 or above.\n- press ESC to quit,\n- press ESPACE to try Rayman in limited mode.\n"
		.ascii  "\x00\x00"

_0c11b8_data:
		.string "RAYMAN"
		.ascii  "\x00"

_0c11c0_data:
		.string "%c:\\rayman\\rayman.exe"
		.ascii  "\x00\x00"

_0c11d8_data:
		.string "%c:\\config.exe"
		.ascii  "\x00"

_0c11e8_data:
		.ascii  "\x72\x62\x00\x00"

_0c11ec_data:
		.string "intro.dat"
		.ascii  "\x00\x00"

_0c11f8_data:
		.string "%c:\\rayman\\%s"
		.ascii  "\x00\x00"

_0c1208_data:
		.string "conclu.dat"
		.ascii  "\x00"

_0c1214_data:
		.string "rayman.exe"
		.ascii  "\x00"

_0c1220_data:
		.string "RAYMAN.EXE"
		.ascii  "\x00"

_0c122c_data:
		.string "RAYMAN"
		.ascii  "\x00"

_0c1234_data:
		.ascii  "\x72\x00\x00\x00"

_0c1238_data:
		.string "RAYMAN"
		.ascii  "\x00"

_0c1240_data:
		.string ".SAV"
		.ascii  "\x00\x00\x00"

_0c1248_data:
		.ascii  "\x72\x62\x00\x00"

_0c124c_data:
		.ascii  "\x77\x62\x00\x00"

_0c1250_data:
		.string "RAYMAN.CFG"
		.ascii  "\x00"

_0c125c_data:
		.string "Information sur le bloc_malloc.\n"
		.ascii  "\x00\x00\x00"

_0c1280_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e fixes                           : %u\n"
		.ascii  "\x00\x00"

_0c12bc_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e fixes   (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0c1304_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e mondes                          : %u\n"
		.ascii  "\x00\x00"

_0c1340_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e mondes  (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0c1388_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e maps                            : %u\n"
		.ascii  "\x00\x00"

_0c13c4_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e maps    (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0c140c_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e sprites                         : %u\n"
		.ascii  "\x00\x00"

_0c1448_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e sprites (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0c1490_data:
		.ascii  "\x0a\x00\x00\x00"

_0c1494_data:
		.string "Information sur le temp_malloc.\n"
		.ascii  "\x00\x00\x00"

_0c14b8_data:
		.ascii   "   - Taille de la m"
		.ascii  "\x82"
		.ascii   "moire allou"
		.ascii  "\x82"
		.string "e            : %u\n"
		.ascii  "\x00"

_0c14ec_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e                 : %u (%u*1024L)\n"
		.ascii  "\x00\x00"

_0c152c_data:
		.string "Left memory = %d\n"
		.ascii  "\x00\x00"

_0c1540_data:
		.ascii  "\x66\x69\x78\x00"

_0c1544_data:
		.string "world"
		.ascii  "\x00\x00"

_0c154c_data:
		.string "level"
		.ascii  "\x00\x00"

_0c1554_data:
		.string "sprite"
		.ascii  "\x00"

_0c155c_data:
		.string "unknown mem"

_0c1568_data:
		.string "Memory error in block_malloc : %s = %p, size = %ul.\n"
		.ascii  "\x00\x00\x00"

_0c15a0_data:
		.string "Can not allocate %d bytes in memory.\n"
		.ascii  "\x00\x00"

_0c15c8_data:
		.string "not enough memory in pool.\nMemory error in tmp_malloc : size = %ul.\n"
		.ascii  "\x00\x00\x00"

_0c1610_data:
		.string "hmidet.386"
		.ascii  "\x00"

_0c161c_data:
		.string "acos"

_0c1621_data:
		.string "asin"

_0c1626_data:
		.string "sqrt"

_0c162b_data:
		.ascii  "\x65\x78\x70\x00"

_0c162f_data:
		.string "cosh"

_0c1634_data:
		.string "sinh"

_0c1639_data:
		.ascii  "\x70\x6f\x77\x00"

_0c163d_data:
		.string "acosh"

_0c1643_data:
		.string "log2"

_0c1648_data:
		.ascii  "\x6c\x6f\x67\x00"

_0c164c_data:
		.string "log10"

_0c1652_data:
		.string "atanh"

_0c1658_data:
		.string "atan2"

_0c165e_data:
		.string "ipow"

_0c1663_data:
		.string "dpowi"

_0c1669_data:
		.ascii  "\x63\x6f\x73\x00"

_0c166d_data:
		.ascii  "\x73\x69\x6e\x00"

_0c1671_data:
		.ascii  "\x74\x61\x6e\x00"

_0c1675_data:
		.ascii  "\x79\x30\x00"

_0c1678_data:
		.ascii  "\x79\x31\x00"

_0c167b_data:
		.ascii  "\x79\x6e\x00"

_0c167e_data:
		.ascii  "\x6d\x6f\x64\x00"

_0c1682_data:
		.string "cotan"

_0c1688_data:
		.string "Error Code Does Not Indicate An Error"

_0c16ae_data:
		.string "Specified Driver Is Not Loaded"

_0c16cd_data:
		.string "Specified Pointer Is NULL"

_0c16e7_data:
		.string "Detection System Is Already Initialized"

_0c170f_data:
		.string "File Open Failure"

_0c1721_data:
		.string "Memory Allocation Failure"

_0c173b_data:
		.string "Invalid Driver ID"

_0c174d_data:
		.string "Driver Not Found"

_0c175e_data:
		.string "Detection System Failed To Find Hardware"

_0c1787_data:
		.string "Driver Already Loaded Using Specified Handle"

_0c17b4_data:
		.string "Invalid Handle"

_0c17c3_data:
		.string "No Handles Available"

_0c17d8_data:
		.string "Hardware Already Paused"

_0c17f0_data:
		.string "Hardware Not Paused"

_0c1804_data:
		.string "Data Is Not Valid"

_0c1816_data:
		.string "HMI*.386 File Open Failure"

_0c1831_data:
		.string "Incorrect Port"

_0c1840_data:
		.string "Incorrect IRQ"

_0c184e_data:
		.string "Incorrect DMA"

_0c185c_data:
		.string "Incorrect DMA/IRQ"
		.ascii  "\x00\x00"

_0c1870_data:
		.string "hmidrv.386"
		.ascii  "\x00"

_0c187c_data:
		.string "Floating-point support not loaded\r\n"

_0c18a0_data:
		.string "Domain error"

_0c18ad_data:
		.string "Argument singularity"

_0c18c2_data:
		.string "Overflow range error"

_0c18d7_data:
		.string "Underflow range error"

_0c18ed_data:
		.string "Total loss of significance"

_0c1908_data:
		.string "Partial loss of significance"

_0c1925_data:
		.string " in "
		.ascii  "\x00\x00"

_0c192c_data:
		.ascii  "\x3a\x8c\x30\xe2\x8e\x79\x45\x3e"

_0c1934_data:
		.string "Not enough memory to allocate file structures\r\n"

_0c1964_data:
		.ascii  "\x54\x5a\x00\x00"

_0c1968_data:
		.ascii  "\x69\x6e\x66\x00"

_0c196c_data:
		.ascii  "\x6e\x61\x6e\x00"

_0c1970_data:
		.ascii  "\x49\xad\x30\x70\xc7\x52\xe9\x3c"
		.ascii  "\x1f\xb8\x33\xe7\xf3\xe7\x6a\xbd"
		.ascii  "\x08\x6d\xa8\x13\x46\x12\xe6\x3d"
		.ascii  "\xe5\x44\xf5\x67\x45\xe6\x5a\xbe"
		.ascii  "\x36\xc7\x56\xa5\xe3\x1d\xc7\x3e"
		.ascii  "\x1a\xa0\x01\x1a\xa0\x01\x2a\xbf"
		.ascii  "\x11\x11\x11\x11\x11\x11\x81"
		.ascii   "?SUUUUU"
		.ascii  "\xc5\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c19b8_data:
		.ascii  "\x1f\xb8\x33\xe7\xf3\xe7\x2a\x3d"
		.ascii  "\x9a\x7c\xc0\xa8\x74\x39\xa9\xbd"
		.ascii  "\x98\xd8\xf8\xef\xd8\xee\x21\x3e"
		.ascii  "\x5c\x9f\x78\xb7\x4f\x7e\x92\xbe"
		.ascii  "\x1a\xa0\x01\x1a\xa0\x01\xfa\x3e"
		.ascii  "\x17\x6c\xc1\x16\x6c\xc1\x56\xbf"
		.ascii   "TUUUUU"
		.ascii  "\xa5\x3f"
		.fill   0x6
		.ascii  "\xe0\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c1a00_data:
		.fill   0x4
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x03\x00\x00\x00\x04\x00\x00\x00"
		.ascii  "\x04\x00\x00\x00\x05\x00\x00\x00"
		.ascii  "\x05\x00\x00\x00\x06\x00\x00\x00"

_0c1a24_data:
		.ascii  "\x11\x00\x00\x00\x12\x00\x00\x00"
		.ascii  "\x10\x00\x00\x00"

_0c1a30_data:
		.ascii  "\x10\x89\xf9\x6c\x58\xb5\xf0"
		.ascii   "?|Q}<"
		.ascii  "\xb8\x72\xf1\x3f\x15\xb7\x31\x0a"
		.ascii  "\xfe\x06\xf3\x3f\xcc\x3b\x7f\x66"
		.ascii  "\x9e\xa0\xf6\x3f"

_0c1a50_data:
		.fill   0x4

_0c1a54_data:
		.ascii  "\x00\x00\xf0\x7f"

_0c1a58_data:
		.ascii  "\xc3\x1c\x98\xfc\x38\xba\xa6\x3f"
		.ascii  "\x21\x00\x01\x61\xd3\x98\xb0\xbf"
		.ascii  "\xa5\x98\xcd\x45\xc0\xa8\xb3\x3f"
		.ascii  "\x73\x4d\xa1\x33\x77\x45\xb7\xbf"
		.ascii  "\x62\xa5\xf2\xe4\xc4\x71\xbc\x3f"
		.ascii  "\x8b\xb3\x5b\x8e\x24\x49\xc2\xbf"
		.ascii  "\x76\x9d\x92\x99\x99\x99\xc9\x3f"
		.ascii  "\xf0"
		.ascii   "RUUUU"
		.ascii  "\xd5\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c1aa0_data:
		.fill   0x4
		.long   _0c18a0_data
		.long   _0c18ad_data
		.long   _0c18c2_data
		.long   _0c18d7_data
		.long   _0c18ed_data
		.ascii  "\x08\x19"

_0c1aba_data:
		.ascii  "\x0c\x00"

_0c1abc_data:
		.ascii  "\x00\x00"

_0c1abe_data:
		.ascii  "\x1f\x00\x3b\x00\x5a\x00\x78\x00"
		.ascii  "\x97\x00\xb5\x00\xd4\x00\xf3\x00"
		.ascii  "\x11\x01\x30\x01\x4e\x01"

_0c1ad4_data:
		.ascii  "\x6d\x01"

_0c1ad6_data:
		.ascii  "\x00\x00\x1f\x00\x3c\x00\x5b\x00"
		.ascii  "\x79\x00\x98\x00\xb6\x00\xd5\x00"
		.ascii  "\xf4\x00\x12\x01\x31\x01\x4f\x01"
		.ascii  "\x6e\x01"

_0c1af0_data:
		.fill   0x4

_0c1af4_data:
		.ascii  "\x00\x00\xf0\x7f"

_0c1af8_data:
		.fill   0x4

_0c1afc_data:
		.ascii  "\x00\x00\xf0\xff"

_0c1b00_data:
		.ascii  "\xff\xff\xff\xff"

_0c1b04_data:
		.ascii  "\xff\xff\xef\x7f"

_0c1b08_data:
		.ascii  "\xff\xff\xff\xff"

_0c1b0c_data:
		.ascii  "\xff\xff\xef\xff"

_0c1b10_data:
		.ascii  "\x29\xbd\x56\xb3\x15\x44\xe9\xbf"
		.ascii  "\xee\xaf\x16"
		.ascii   " Jb0@"
		.ascii  "\x9a\xb5\xb3\x12\xff\x07\x50\xc0"

_0c1b28_data:
		.fill   0x6
		.ascii  "\xf0\x3f\x0e\xce\x67\x4b\x80\xd5"
		.ascii  "\x41\xc0\x7f\x26\x15\xfa\x83\x80"
		.ascii  "\x73\x40\x77\x90\x0d\x9c\xfe\x0b"
		.ascii  "\x88\xc0"

_0c1b48_data:
		.ascii  "\xd8\x00"

_0c1b4a_data:
		.ascii  "\xc6\xf9\xc6\x40"

_0c1b4e_data:
		.ascii  "\xe9\x34\xc7\x6c\x6c\x00\x12\x4e"
		.ascii  "\x83\xcc"
		.string "=@[V6"
		.ascii  "\xce\xc9\x14\x88\x87\xe1\x24\x4b"
		.ascii  "\x1b\x00\x02\x84\xfe\xe4\x71\xd9"
		.ascii  "\x89\x45\x0e\x00\x00\x00\x90\x1e"
		.ascii  "\xc4\xbc\xd6\x42\x08"
		.fill   0x5
		.ascii  "\x84\xd7\x97\x41\x04"
		.fill   0x6
		.ascii  "\x88\xc3\x40\x01"
		.fill   0x7
		.ascii  "\x24\x40"

_0c1b98_data:
		.ascii  "\x00\x20"
		.long   _085a7b_func
		.ascii  "\x00\x20"
		.long   _085c49_func
		.ascii  "\x00\x20"
		.long   _085c64_func
		.ascii  "\x00\x02"
		.long   _08a0cc_func
		.ascii  "\x00\x20"
		.long   _08a442_func
		.ascii  "\x00\x20"
		.long   _0898e2_func
		.ascii  "\x00\x03"
		.long   _08a3ed_func
		.ascii  "\x00\x20"
		.long   _08b8bb_func

_0c1bc8_data:
		.ascii  "\x00\x20"
		.long   _08a4b9_func

_0c1bce_data:
		.ascii  "\x00\x00"

_0c1bd0_data:
		.ascii  "\x00\x01\x00\x00\x04\x00\x00\x07"
		.ascii  "\x00\x00\x0a\x00\x00\x0d\x00\x00"

_0c1be0_data:
		.ascii  "\x00\x00\x70\x3f"

_0c1be4_data:
		.ascii  "\x00\x00\x88\x3f"

_0c1be8_data:
		.ascii  "\x00\x00\x00\x5f"

_0c1bec_data:
		.long   _087179_func
		.long   _08717f_func
		.long   _087184_jump
		.long   _08718a_func
		.long   _08718f_jump
		.long   _087195_func
		.long   _08719b_func
		.long   _0871a1_func
		.long   _0871a7_func
		.long   _0871c3_func
		.long   _0871c8_jump
		.long   _0871de_func
		.long   _0871e3_jump
		.long   _0871ff_func
		.long   _08720f_func
		.long   _087223_func
		.long   _087233_func
		.long   _087253_func
		.long   _087258_jump
		.long   _087272_func
		.long   _087277_jump
		.long   _087297_func
		.long   _0872ab_func
		.long   _0872c3_func
		.long   _0872d7_func
		.long   _0872f7_func
		.long   _0872fc_jump
		.long   _087316_func
		.long   _08731b_jump
		.long   _08733b_func
		.long   _08734f_func
		.long   _087367_func
		.long   _08737b_func
		.long   _08739b_func
		.long   _0873a0_jump
		.long   _0873ba_func
		.long   _0873bf_jump
		.long   _0873df_func
		.long   _0873f3_func
		.long   _08740b_func
		.long   _08741f_func
		.long   _08743f_func
		.long   _087444_jump
		.long   _08745e_func
		.long   _087463_jump
		.long   _087483_func
		.long   _087497_func
		.long   _0874af_func
		.long   _0874c3_func
		.long   _0874e3_func
		.long   _0874e8_jump
		.long   _087502_func
		.long   _087507_jump
		.long   _087527_func
		.long   _08753b_func
		.long   _087553_func
		.long   _087567_func
		.long   _087587_func
		.long   _08758c_jump
		.long   _0875a6_func
		.long   _0875ab_jump
		.long   _0875cb_func
		.long   _0875df_func
		.long   _0875f7_func

_0c1cec_data:
		.ascii  "\x00\x01\x00\x00\x04\x00\x00\x07"
		.ascii  "\x00\x00\x0a\x00\x00\x0d\x00\x00"

_0c1cfc_data:
		.ascii  "\x00\x00\x70\x3f"

_0c1d00_data:
		.ascii  "\x00\x00\x00\x5f"

_0c1d04_data:
		.fill   0x6
		.ascii  "\xf0\x3f"
		.fill   0x6
		.ascii  "\xf0\xbf"

_0c1d14_data:
		.long   _08bf90_func
		.long   _08bf9b_func
		.long   _08bfa8_func
		.long   _08bfbb_func
		.long   _08bfd0_func
		.long   _08bfe3_func
		.long   _08bff8_func
		.long   _08c00b_func

_0c1d34_data:
		.ascii  "\x35\xc2\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\x00\x40"

_0c1d3e_data:
		.ascii  "\x35\xc2\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xff\x3f"

_0c1d48_data:
		.ascii  "\x00\x00\x80\x41"

_0c1d4c_data:
		.ascii  "\x00\x00\x80\x3d"

_0c1d50_data:
		.ascii  "\xa8\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
		.ascii  "\xfd\xbf"

_0c1d5a_data:
		.ascii  "\x6e\x2d\xcc\xcc\xcc\xcc\xcc\xcc"
		.ascii  "\xfc\x3f"

_0c1d64_data:
		.ascii  "\x92\x48\xf9\x41\x92\x24\x49\x92"
		.ascii  "\xfc\xbf"

_0c1d6e_data:
		.ascii  "\x92\xc5\xec\xcd\x97\x38\x8e\xe3"
		.ascii  "\xfb\x3f"

_0c1d78_data:
		.ascii  "\xdd\x5d\x62\xc1\x7b\xc1\x2d\xba"
		.ascii  "\xfb\xbf"

_0c1d82_data:
		.ascii  "\x54\x48\x8e\xc7\xc7\x77\x80\x9c"
		.ascii  "\xfb\x3f"

_0c1d8c_data:
		.fill   0x10
		.ascii  "\x37\x4e\xef\x67\xb9\xdd\xaa\xff"
		.ascii  "\xfa\x3f"
		.fill   0x6
		.ascii   "3n{a"
		.ascii  "\xd5\xd4\xad\xfe\xfb\x3f"
		.fill   0x6
		.ascii  "\x35\x11\xd8\x72\x5e\xda\xcb\xbd"
		.ascii  "\xfc\x3f"
		.fill   0x6
		.ascii  "\x15\xeb\x06\x64\xc9\xaf\xdb\xfa"
		.ascii  "\xfc\x3f"
		.fill   0x6
		.ascii   "j^^?"
		.ascii  "\xb8\xb9\x13\x9b\xfd\x3f"
		.fill   0x6
		.ascii  "\x74\x84\xf7\x26\x0f\xca\xb0\xb7"
		.ascii  "\xfd\x3f"
		.fill   0x6
		.ascii  "\xb6\xe5\x1f\x61\x1e\x76\x27\xd3"
		.ascii  "\xfd\x3f"
		.fill   0x6
		.ascii  "\x45\x7b\xda"
		.ascii   "\r+8c"
		.ascii  "\xed\xfd\x3f"
		.fill   0x6
		.ascii  "\x2a\x7e\x86\xd9\xa6\xf4\x2b\x83"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x9b\x9f\xf5\xf7\x5e\x5d\x00\x8f"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x20\xda\xbd\x71\xe6\x80\x2f\x9a"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x24\x09\xf7\x34\x19\x7d\xbc\xa4"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x80\xc0\xd8\xb4\x38\x4c\xac\xae"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x74\x9e\x31\xc2\x2b\x3e\x05\xb8"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x41\x66\x52\xac\xb8\x85\xce\xc0"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x35\xc2\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f"
		.fill   0xa

_0c1ea0_data:
		.fill   0x2e

_0c1ece_data:
		.ascii  "\x00\x00"

_0c1ed0_data:
		.ascii  "\x00\x00"

_0c1ed2_data:
		.ascii  "\x00\x00"

_0c1ed4_data:
		.fill   0x4

_0c1ed8_data:
		.fill   0x4

_0c1edc_data:
		.fill   0x4

_0c1ee0_data:
		.fill   0x4

_0c1ee4_data:
		.fill   0x4

_0c1ee8_data:
		.fill   0x4

_0c1eec_data:
		.fill   0x4c

_0c1f38_data:
		.fill   0x78

_0c1fb0_data:
		.fill   0x20

_0c1fd0_data:
		.fill   0x78

_0c2048_data:
		.fill   0x78

_0c20c0_data:
		.fill   0xc8

_0c2188_data:
		.fill   0x78

_0c2200_data:
		.fill   0xc8

_0c22c8_data:
		.fill   0xc8

_0c2390_data:
		.fill   0xc8

_0c2458_data:
		.fill   0x100

_0c2558_data:
		.fill   0x100

_0c2658_data:
		.fill   0x100

_0c2758_data:
		.fill   0x100

_0c2858_data:
		.fill   0x60

_0c28b8_data:
		.fill   0x4

_0c28bc_data:
		.fill   0x4

_0c28c0_data:
		.fill   0x4

_0c28c4_data:
		.fill   0x4

_0c28c8_data:
		.fill   0x4

_0c28cc_data:
		.fill   0x4

_0c28d0_data:
		.fill   0x4

_0c28d4_data:
		.fill   0x4

_0c28d8_data:
		.fill   0x4

_0c28dc_data:
		.fill   0x4

_0c28e0_data:
		.fill   0x4

_0c28e4_data:
		.fill   0x4

_0c28e8_data:
		.fill   0x4

_0c28ec_data:
		.fill   0x4

_0c28f0_data:
		.fill   0x4

_0c28f4_data:
		.fill   0x4

_0c28f8_data:
		.fill   0x4

_0c28fc_data:
		.fill   0x4

_0c2900_data:
		.fill   0x4

_0c2904_data:
		.fill   0x4

_0c2908_data:
		.fill   0x4

_0c290c_data:
		.fill   0x4

_0c2910_data:
		.fill   0x4

_0c2914_data:
		.fill   0x4

_0c2918_data:
		.fill   0x4

_0c291c_data:
		.fill   0x4

_0c2920_data:
		.fill   0x4

_0c2924_data:
		.fill   0x4

_0c2928_data:
		.fill   0x4

_0c292c_data:
		.fill   0x4

_0c2930_data:
		.fill   0x4

_0c2934_data:
		.fill   0x4

_0c2938_data:
		.fill   0x4

_0c293c_data:
		.fill   0x4

_0c2940_data:
		.fill   0x4

_0c2944_data:
		.fill   0x4

_0c2948_data:
		.fill   0x4

_0c294c_data:
		.fill   0x4

_0c2950_data:
		.fill   0x4

_0c2954_data:
		.fill   0x4

_0c2958_data:
		.fill   0x4

_0c295c_data:
		.fill   0x4

_0c2960_data:
		.fill   0x4

_0c2964_data:
		.fill   0x4

_0c2968_data:
		.fill   0x4

_0c296c_data:
		.fill   0x4

_0c2970_data:
		.fill   0x4

_0c2974_data:
		.fill   0x4

_0c2978_data:
		.fill   0x4

_0c297c_data:
		.fill   0x4

_0c2980_data:
		.fill   0x4

_0c2984_data:
		.fill   0x4

_0c2988_data:
		.fill   0x4

_0c298c_data:
		.fill   0x4

_0c2990_data:
		.fill   0x4

_0c2994_data:
		.fill   0x4

_0c2998_data:
		.fill   0x4

_0c299c_data:
		.fill   0x4

_0c29a0_data:
		.fill   0x4

_0c29a4_data:
		.fill   0x4

_0c29a8_data:
		.fill   0x4

_0c29ac_data:
		.fill   0x4

_0c29b0_data:
		.fill   0x4

_0c29b4_data:
		.fill   0x4

_0c29b8_data:
		.fill   0x4

_0c29bc_data:
		.fill   0x4

_0c29c0_data:
		.fill   0x4

_0c29c4_data:
		.fill   0x4

_0c29c8_data:
		.fill   0x4

_0c29cc_data:
		.fill   0x8

_0c29d4_data:
		.fill   0x4

_0c29d8_data:
		.fill   0x4

_0c29dc_data:
		.fill   0x4

_0c29e0_data:
		.fill   0x4

_0c29e4_data:
		.fill   0x28

_0c2a0c_data:
		.fill   0x4

_0c2a10_data:
		.fill   0x48

_0c2a58_data:
		.fill   0x4

_0c2a5c_data:
		.fill   0x4

_0c2a60_data:
		.fill   0x4

_0c2a64_data:
		.fill   0x4

_0c2a68_data:
		.fill   0x4

_0c2a6c_data:
		.fill   0x4

_0c2a70_data:
		.fill   0x4

_0c2a74_data:
		.fill   0x4

_0c2a78_data:
		.fill   0x2c

_0c2aa4_data:
		.fill   0x4

_0c2aa8_data:
		.fill   0x4

_0c2aac_data:
		.fill   0x4

_0c2ab0_data:
		.fill   0x4

_0c2ab4_data:
		.fill   0x4

_0c2ab8_data:
		.fill   0x8

_0c2ac0_data:
		.fill   0x4

_0c2ac4_data:
		.fill   0x4

_0c2ac8_data:
		.fill   0x4

_0c2acc_data:
		.fill   0x4

_0c2ad0_data:
		.fill   0x4

_0c2ad4_data:
		.fill   0x4

_0c2ad8_data:
		.fill   0x4

_0c2adc_data:
		.fill   0x4c

_0c2b28_data:
		.fill   0x4

_0c2b2c_data:
		.fill   0x4

_0c2b30_data:
		.fill   0xc

_0c2b3c_data:
		.fill   0xc

_0c2b48_data:
		.fill   0x8

_0c2b50_data:
		.fill   0x8

_0c2b58_data:
		.fill   0x4

_0c2b5c_data:
		.fill   0x4

_0c2b60_data:
		.fill   0x8

_0c2b68_data:
		.fill   0x1c

_0c2b84_data:
		.fill   0x4

_0c2b88_data:
		.fill   0x4

_0c2b8c_data:
		.fill   0x4

_0c2b90_data:
		.fill   0x4

_0c2b94_data:
		.fill   0x4

_0c2b98_data:
		.fill   0x4

_0c2b9c_data:
		.fill   0x4

_0c2ba0_data:
		.fill   0x4

_0c2ba4_data:
		.fill   0x4

_0c2ba8_data:
		.fill   0x4

_0c2bac_data:
		.fill   0x4

_0c2bb0_data:
		.fill   0x4

_0c2bb4_data:
		.fill   0x4

_0c2bb8_data:
		.fill   0x4

_0c2bbc_data:
		.fill   0x4

_0c2bc0_data:
		.fill   0x4

_0c2bc4_data:
		.fill   0x4

_0c2bc8_data:
		.fill   0x4

_0c2bcc_data:
		.fill   0x4

_0c2bd0_data:
		.fill   0x4

_0c2bd4_data:
		.fill   0xc

_0c2be0_data:
		.fill   0x10

_0c2bf0_data:
		.fill   0x4

_0c2bf4_data:
		.fill   0x74

_0c2c68_data:
		.fill   0x8

_0c2c70_data:
		.fill   0x4

_0c2c74_data:
		.fill   0x4

_0c2c78_data:
		.fill   0x12c0

_0c3f38_data:
		.fill   0x20

_0c3f58_data:
		.fill   0x4

_0c3f5c_data:
		.fill   0x4

_0c3f60_data:
		.fill   0x4

_0c3f64_data:
		.ascii  "\x00\x00"

_0c3f66_data:
		.ascii  "\x00\x00"

_0c3f68_data:
		.ascii  "\x00\x00"

_0c3f6a_data:
		.ascii  "\x00\x00"

_0c3f6c_data:
		.ascii  "\x00\x00"

_0c3f6e_data:
		.ascii  "\x00\x00"

_0c3f70_data:
		.ascii  "\x00\x00"

_0c3f72_data:
		.ascii  "\x00\x00"

_0c3f74_data:
		.fill   0x4

_0c3f78_data:
		.fill   0x12c0

_0c5238_data:
		.fill   0x1500

_0c6738_data:
		.fill   0x300

_0c6a38_data:
		.fill   0x300

_0c6d38_data:
		.fill   0x5ff

_0c7337_data:
		.ascii  "\x00"

_0c7338_data:
		.ascii  "\x00"

_0c7339_data:
		.fill   0x2ff

_0c7638_data:
		.ascii  "\x00"

_0c7639_data:
		.ascii  "\x00"

_0c763a_data:
		.fill   0x2fb

_0c7935_data:
		.ascii  "\x00"

_0c7936_data:
		.ascii  "\x00"

_0c7937_data:
		.ascii  "\x00"

_0c7938_data:
		.ascii  "\x00"

_0c7939_data:
		.ascii  "\x00"

_0c793a_data:
		.fill   0x8fe

_0c8238_data:
		.fill   0x700

_0c8938_data:
		.fill   0x80

_0c89b8_data:
		.fill   0x680

_0c9038_data:
		.fill   0x4

_0c903c_data:
		.fill   0x4

_0c9040_data:
		.fill   0x160

_0c91a0_data:
		.ascii  "\x00\x00"

_0c91a2_data:
		.ascii  "\x00\x00"

_0c91a4_data:
		.ascii  "\x00\x00"

_0c91a6_data:
		.ascii  "\x00\x00"

_0c91a8_data:
		.ascii  "\x00\x00"

_0c91aa_data:
		.fill   0x1fe

_0c93a8_data:
		.fill   0x78

_0c9420_data:
		.fill   0x280

_0c96a0_data:
		.fill   0x1190

_0ca830_data:
		.fill   0x80

_0ca8b0_data:
		.fill   0x4

_0ca8b4_data:
		.fill   0x4

_0ca8b8_data:
		.fill   0x4

_0ca8bc_data:
		.fill   0x4

_0ca8c0_data:
		.fill   0x4

_0ca8c4_data:
		.ascii  "\x00"

_0ca8c5_data:
		.ascii  "\x00"

_0ca8c6_data:
		.ascii  "\x00\x00"

_0ca8c8_data:
		.fill   0x10

_0ca8d8_data:
		.fill   0x10

_0ca8e8_data:
		.fill   0x10

_0ca8f8_data:
		.fill   0x10

_0ca908_data:
		.ascii  "\x00\x00"

_0ca90a_data:
		.ascii  "\x00\x00"

_0ca90c_data:
		.ascii  "\x00\x00"

_0ca90e_data:
		.ascii  "\x00\x00"

_0ca910_data:
		.ascii  "\x00\x00"

_0ca912_data:
		.ascii  "\x00\x00"

_0ca914_data:
		.ascii  "\x00\x00"

_0ca916_data:
		.ascii  "\x00\x00"

_0ca918_data:
		.fill   0x10

_0ca928_data:
		.ascii  "\x00\x00"

_0ca92a_data:
		.ascii  "\x00\x00"

_0ca92c_data:
		.ascii  "\x00\x00"

_0ca92e_data:
		.ascii  "\x00\x00"

_0ca930_data:
		.ascii  "\x00\x00"

_0ca932_data:
		.ascii  "\x00\x00"

_0ca934_data:
		.ascii  "\x00\x00"

_0ca936_data:
		.ascii  "\x00\x00"

_0ca938_data:
		.fill   0x180

_0caab8_data:
		.fill   0x17

_0caacf_data:
		.ascii  "\x00"

_0caad0_data:
		.fill   0x18

_0caae8_data:
		.fill   0xd0

_0cabb8_data:
		.ascii  "\x00\x00"

_0cabba_data:
		.ascii  "\x00\x00"

_0cabbc_data:
		.ascii  "\x00"

_0cabbd_data:
		.ascii  "\x00"

_0cabbe_data:
		.ascii  "\x00\x00"

_0cabc0_data:
		.fill   0xd0

_0cac90_data:
		.ascii  "\x00\x00"

_0cac92_data:
		.ascii  "\x00\x00"

_0cac94_data:
		.ascii  "\x00"

_0cac95_data:
		.ascii  "\x00"

_0cac96_data:
		.ascii  "\x00\x00"

_0cac98_data:
		.fill   0xc8

_0cad60_data:
		.fill   0x6

_0cad66_data:
		.ascii  "\x00\x00"

_0cad68_data:
		.ascii  "\x00\x00"

_0cad6a_data:
		.ascii  "\x00\x00"

_0cad6c_data:
		.ascii  "\x00"

_0cad6d_data:
		.ascii  "\x00"

_0cad6e_data:
		.ascii  "\x00"

_0cad6f_data:
		.fill   0x6bb

_0cb42a_data:
		.fill   0x6

_0cb430_data:
		.fill   0xd0

_0cb500_data:
		.ascii  "\x00\x00"

_0cb502_data:
		.ascii  "\x00\x00"

_0cb504_data:
		.ascii  "\x00"

_0cb505_data:
		.ascii  "\x00"

_0cb506_data:
		.ascii  "\x00"

_0cb507_data:
		.ascii  "\x00"

_0cb508_data:
		.fill   0x948

_0cbe50_data:
		.fill   0xd5

_0cbf25_data:
		.ascii  "\x00"

_0cbf26_data:
		.ascii  "\x00\x00"

_0cbf28_data:
		.fill   0xc6

_0cbfee_data:
		.ascii  "\x00\x00"

_0cbff0_data:
		.ascii  "\x00\x00"

_0cbff2_data:
		.ascii  "\x00\x00"

_0cbff4_data:
		.ascii  "\x00\x00"

_0cbff6_data:
		.ascii  "\x00\x00"

_0cbff8_data:
		.ascii  "\x00\x00"

_0cbffa_data:
		.ascii  "\x00\x00"

_0cbffc_data:
		.ascii  "\x00"

_0cbffd_data:
		.ascii  "\x00"

_0cbffe_data:
		.ascii  "\x00"

_0cbfff_data:
		.ascii  "\x00"

_0cc000_data:
		.fill   0xc6

_0cc0c6_data:
		.fill   0x4

_0cc0ca_data:
		.fill   0x4

_0cc0ce_data:
		.ascii  "\x00\x00"

_0cc0d0_data:
		.ascii  "\x00\x00"

_0cc0d2_data:
		.ascii  "\x00\x00"

_0cc0d4_data:
		.ascii  "\x00"

_0cc0d5_data:
		.ascii  "\x00"

_0cc0d6_data:
		.ascii  "\x00"

_0cc0d7_data:
		.ascii  "\x00"

_0cc0d8_data:
		.fill   0xc6

_0cc19e_data:
		.ascii  "\x00\x00"

_0cc1a0_data:
		.ascii  "\x00\x00"

_0cc1a2_data:
		.ascii  "\x00\x00"

_0cc1a4_data:
		.ascii  "\x00\x00"

_0cc1a6_data:
		.ascii  "\x00\x00"

_0cc1a8_data:
		.ascii  "\x00\x00"

_0cc1aa_data:
		.ascii  "\x00\x00"

_0cc1ac_data:
		.ascii  "\x00"

_0cc1ad_data:
		.ascii  "\x00"

_0cc1ae_data:
		.ascii  "\x00"

_0cc1af_data:
		.ascii  "\x00"

_0cc1b0_data:
		.fill   0xc6

_0cc276_data:
		.fill   0x4

_0cc27a_data:
		.fill   0x4

_0cc27e_data:
		.ascii  "\x00\x00"

_0cc280_data:
		.ascii  "\x00\x00"

_0cc282_data:
		.ascii  "\x00\x00"

_0cc284_data:
		.ascii  "\x00"

_0cc285_data:
		.ascii  "\x00"

_0cc286_data:
		.ascii  "\x00"

_0cc287_data:
		.ascii  "\x00"

_0cc288_data:
		.fill   0xd8

_0cc360_data:
		.fill   0xd8

_0cc438_data:
		.fill   0xd8

_0cc510_data:
		.fill   0xd8

_0cc5e8_data:
		.fill   0xd8

_0cc6c0_data:
		.fill   0xd0

_0cc790_data:
		.ascii  "\x00\x00"

_0cc792_data:
		.ascii  "\x00\x00"

_0cc794_data:
		.ascii  "\x00"

_0cc795_data:
		.ascii  "\x00"

_0cc796_data:
		.ascii  "\x00"

_0cc797_data:
		.ascii  "\x00"

_0cc798_data:
		.fill   0x4

_0cc79c_data:
		.fill   0x4

_0cc7a0_data:
		.ascii  "\x00\x00"

_0cc7a2_data:
		.ascii  "\x00\x00"

_0cc7a4_data:
		.fill   0x4

_0cc7a8_data:
		.ascii  "\x00\x00"

_0cc7aa_data:
		.ascii  "\x00\x00"

_0cc7ac_data:
		.ascii  "\x00\x00\x00"

_0cc7af_data:
		.ascii  "\x00"

_0cc7b0_data:
		.ascii  "\x00"

_0cc7b1_data:
		.fill   0x7

_0cc7b8_data:
		.fill   0x190

_0cc948_data:
		.fill   0x40

_0cc988_data:
		.fill   0x4

_0cc98c_data:
		.fill   0x64

_0cc9f0_data:
		.fill   0x4

_0cc9f4_data:
		.fill   0x4

_0cc9f8_data:
		.fill   0x4

_0cc9fc_data:
		.fill   0x4

_0cca00_data:
		.fill   0x4

_0cca04_data:
		.fill   0x4

_0cca08_data:
		.fill   0x4

_0cca0c_data:
		.fill   0x4

_0cca10_data:
		.fill   0x4

_0cca14_data:
		.fill   0x4

_0cca18_data:
		.fill   0x4

_0cca1c_data:
		.fill   0x4

_0cca20_data:
		.fill   0x4

_0cca24_data:
		.fill   0x4

_0cca28_data:
		.fill   0x4

_0cca2c_data:
		.fill   0x4

_0cca30_data:
		.fill   0x4

_0cca34_data:
		.fill   0x4

_0cca38_data:
		.fill   0x4

_0cca3c_data:
		.fill   0x4

_0cca40_data:
		.fill   0x4

_0cca44_data:
		.ascii  "\x00\x00"

_0cca46_data:
		.ascii  "\x00\x00"

_0cca48_data:
		.ascii  "\x00\x00"

_0cca4a_data:
		.ascii  "\x00\x00"

_0cca4c_data:
		.ascii  "\x00\x00"

_0cca4e_data:
		.ascii  "\x00\x00"

_0cca50_data:
		.ascii  "\x00\x00"

_0cca52_data:
		.ascii  "\x00\x00"

_0cca54_data:
		.fill   0x4

_0cca58_data:
		.fill   0x4

_0cca5c_data:
		.fill   0x4

_0cca60_data:
		.fill   0x4

_0cca64_data:
		.fill   0x4

_0cca68_data:
		.fill   0x4

_0cca6c_data:
		.fill   0x4

_0cca70_data:
		.fill   0x4

_0cca74_data:
		.fill   0x4

_0cca78_data:
		.fill   0x4

_0cca7c_data:
		.fill   0x4

_0cca80_data:
		.fill   0x4

_0cca84_data:
		.fill   0x4

_0cca88_data:
		.fill   0x4

_0cca8c_data:
		.fill   0x4

_0cca90_data:
		.fill   0x4

_0cca94_data:
		.fill   0x4

_0cca98_data:
		.fill   0x4

_0cca9c_data:
		.fill   0x4

_0ccaa0_data:
		.fill   0x4

_0ccaa4_data:
		.fill   0x4

_0ccaa8_data:
		.fill   0x4

_0ccaac_data:
		.fill   0x4

_0ccab0_data:
		.fill   0x4

_0ccab4_data:
		.fill   0x4

_0ccab8_data:
		.fill   0x4

_0ccabc_data:
		.fill   0x4

_0ccac0_data:
		.fill   0x4

_0ccac4_data:
		.fill   0x4

_0ccac8_data:
		.fill   0x4

_0ccacc_data:
		.fill   0x4

_0ccad0_data:
		.fill   0x4

_0ccad4_data:
		.fill   0x4

_0ccad8_data:
		.fill   0x4

_0ccadc_data:
		.fill   0x4

_0ccae0_data:
		.fill   0x4

_0ccae4_data:
		.fill   0x4

_0ccae8_data:
		.ascii  "\x00\x00"

_0ccaea_data:
		.ascii  "\x00\x00"

_0ccaec_data:
		.ascii  "\x00\x00"

_0ccaee_data:
		.ascii  "\x00\x00"

_0ccaf0_data:
		.ascii  "\x00\x00"

_0ccaf2_data:
		.ascii  "\x00\x00"

_0ccaf4_data:
		.ascii  "\x00\x00"

_0ccaf6_data:
		.ascii  "\x00\x00"

_0ccaf8_data:
		.ascii  "\x00"

_0ccaf9_data:
		.fill   0x64a

_0cd143_data:
		.ascii  "\x00"

_0cd144_data:
		.fill   0x4

_0cd148_data:
		.fill   0x4

_0cd14c_data:
		.fill   0x4

_0cd150_data:
		.fill   0x4

_0cd154_data:
		.fill   0x4

_0cd158_data:
		.ascii  "\x00\x00"

_0cd15a_data:
		.ascii  "\x00\x00"

_0cd15c_data:
		.ascii  "\x00\x00"

_0cd15e_data:
		.ascii  "\x00\x00"

_0cd160_data:
		.ascii  "\x00\x00"

_0cd162_data:
		.ascii  "\x00\x00"

_0cd164_data:
		.ascii  "\x00\x00"

_0cd166_data:
		.ascii  "\x00\x00"

_0cd168_data:
		.fill   0x8

_0cd170_data:
		.fill   0x1c

_0cd18c_data:
		.fill   0x1c

_0cd1a8_data:
		.fill   0x4

_0cd1ac_data:
		.fill   0x4

_0cd1b0_data:
		.fill   0x4

_0cd1b4_data:
		.fill   0x4

_0cd1b8_data:
		.fill   0x4

_0cd1bc_data:
		.fill   0x4

_0cd1c0_data:
		.fill   0x4

_0cd1c4_data:
		.fill   0x4

_0cd1c8_data:
		.fill   0x4

_0cd1cc_data:
		.fill   0x4

_0cd1d0_data:
		.fill   0x4

_0cd1d4_data:
		.fill   0x4

_0cd1d8_data:
		.fill   0x4

_0cd1dc_data:
		.fill   0x4

_0cd1e0_data:
		.fill   0x4

_0cd1e4_data:
		.fill   0x4

_0cd1e8_data:
		.fill   0x4

_0cd1ec_data:
		.fill   0x1c

_0cd208_data:
		.fill   0x4

_0cd20c_data:
		.fill   0x4

_0cd210_data:
		.fill   0x14

_0cd224_data:
		.fill   0x4

_0cd228_data:
		.fill   0x4

_0cd22c_data:
		.fill   0x4

_0cd230_data:
		.fill   0x14

_0cd244_data:
		.fill   0x4

_0cd248_data:
		.fill   0x4

_0cd24c_data:
		.fill   0x4

_0cd250_data:
		.fill   0x4

_0cd254_data:
		.fill   0x8

_0cd25c_data:
		.fill   0x4

_0cd260_data:
		.fill   0x4

_0cd264_data:
		.fill   0x4

_0cd268_data:
		.fill   0x8

_0cd270_data:
		.fill   0x4

_0cd274_data:
		.fill   0x4

_0cd278_data:
		.fill   0x4

_0cd27c_data:
		.fill   0x4

_0cd280_data:
		.fill   0x4

_0cd284_data:
		.fill   0x4

_0cd288_data:
		.fill   0x4

_0cd28c_data:
		.fill   0x4

_0cd290_data:
		.fill   0x4

_0cd294_data:
		.fill   0x4

_0cd298_data:
		.fill   0x4

_0cd29c_data:
		.fill   0xc

_0cd2a8_data:
		.fill   0x4

_0cd2ac_data:
		.fill   0x4

_0cd2b0_data:
		.fill   0x4

_0cd2b4_data:
		.ascii  "\x00"

_0cd2b5_data:
		.ascii  "\x00"

_0cd2b6_data:
		.ascii  "\x00"

_0cd2b7_data:
		.ascii  "\x00"

_0cd2b8_data:
		.ascii  "\x00\x00"

_0cd2ba_data:
		.ascii  "\x00"

_0cd2bb_data:
		.fill   0x9

_0cd2c4_data:
		.fill   0x4

_0cd2c8_data:
		.fill   0x4

_0cd2cc_data:
		.fill   0x36

_0cd302_data:
		.ascii  "\x00\x00"

_0cd304_data:
		.fill   0x30

_0cd334_data:
		.ascii  "\x00"

_0cd335_data:
		.fill   0x16

_0cd34b_data:
		.ascii  "\x00\x00"

_0cd34d_data:
		.fill   0xc63

_0cdfb0_data:
		.fill   0x4

_0cdfb4_data:
		.fill   0x4

_0cdfb8_data:
		.ascii  "\x00\x00"

_0cdfba_data:
		.ascii  "\x00\x00"

_0cdfbc_data:
		.ascii  "\x00\x00"

_0cdfbe_data:
		.fill   0x10

_0cdfce_data:
		.ascii  "\x00\x00"

_0cdfd0_data:
		.ascii  "\x00\x00"

_0cdfd2_data:
		.ascii  "\x00\x00"

_0cdfd4_data:
		.fill   0x62

_0ce036_data:
		.ascii  "\x00\x00"

_0ce038_data:
		.ascii  "\x00\x00"

_0ce03a_data:
		.ascii  "\x00\x00"

_0ce03c_data:
		.fill   0x4

_0ce040_data:
		.fill   0x4

_0ce044_data:
		.fill   0x4

_0ce048_data:
		.fill   0x4

_0ce04c_data:
		.fill   0x4

_0ce050_data:
		.fill   0x18

_0ce068_data:
		.fill   0x4

_0ce06c_data:
		.fill   0x4

_0ce070_data:
		.fill   0x8

_0ce078_data:
		.ascii  "\x00\x00"

_0ce07a_data:
		.ascii  "\x00\x00"

_0ce07c_data:
		.fill   0x6

_0ce082_data:
		.ascii  "\x00\x00"

_0ce084_data:
		.ascii  "\x00\x00"

_0ce086_data:
		.ascii  "\x00\x00"

_0ce088_data:
		.fill   0x4

_0ce08c_data:
		.ascii  "\x00\x00"

_0ce08e_data:
		.fill   0x4

_0ce092_data:
		.ascii  "\x00\x00"

_0ce094_data:
		.ascii  "\x00\x00"

_0ce096_data:
		.ascii  "\x00\x00"

_0ce098_data:
		.ascii  "\x00\x00"

_0ce09a_data:
		.ascii  "\x00\x00"

_0ce09c_data:
		.ascii  "\x00\x00"

_0ce09e_data:
		.fill   0x6

_0ce0a4_data:
		.ascii  "\x00"

_0ce0a5_data:
		.ascii  "\x00"

_0ce0a6_data:
		.ascii  "\x00"

_0ce0a7_data:
		.ascii  "\x00"

_0ce0a8_data:
		.ascii  "\x00"

_0ce0a9_data:
		.ascii  "\x00"

_0ce0aa_data:
		.ascii  "\x00\x00"

_0ce0ac_data:
		.ascii  "\x00"

_0ce0ad_data:
		.ascii  "\x00"

_0ce0ae_data:
		.ascii  "\x00"

_0ce0af_data:
		.ascii  "\x00"

_0ce0b0_data:
		.ascii  "\x00"

_0ce0b1_data:
		.ascii  "\x00\x00\x00"

_0ce0b4_data:
		.ascii  "\x00"

_0ce0b5_data:
		.ascii  "\x00"

_0ce0b6_data:
		.ascii  "\x00\x00"

_0ce0b8_data:
		.ascii  "\x00\x00"

_0ce0ba_data:
		.ascii  "\x00"

_0ce0bb_data:
		.ascii  "\x00\x00"

_0ce0bd_data:
		.fill   0x4

_0ce0c1_data:
		.ascii  "\x00\x00"

_0ce0c3_data:
		.ascii  "\x00\x00"

_0ce0c5_data:
		.ascii  "\x00\x00\x00"

_0ce0c8_data:
		.fill   0x4

_0ce0cc_data:
		.fill   0x4

_0ce0d0_data:
		.fill   0x4

_0ce0d4_data:
		.fill   0x4

_0ce0d8_data:
		.fill   0x4

_0ce0dc_data:
		.fill   0x4

_0ce0e0_data:
		.fill   0x84

_0ce164_data:
		.fill   0x4

_0ce168_data:
		.ascii  "\x00\x00"

_0ce16a_data:
		.ascii  "\x00\x00"

_0ce16c_data:
		.ascii  "\x00\x00"

_0ce16e_data:
		.ascii  "\x00\x00"

_0ce170_data:
		.ascii  "\x00"

_0ce171_data:
		.ascii  "\x00"

_0ce172_data:
		.ascii  "\x00"

_0ce173_data:
		.ascii  "\x00"

_0ce174_data:
		.ascii  "\x00"

_0ce175_data:
		.ascii  "\x00\x00\x00"

_0ce178_data:
		.fill   0xc

_0ce184_data:
		.fill   0x28

_0ce1ac_data:
		.ascii  "\x00\x00"

_0ce1ae_data:
		.ascii  "\x00\x00"

_0ce1b0_data:
		.fill   0x8

_0ce1b8_data:
		.fill   0x28

_0ce1e0_data:
		.ascii  "\x00"

_0ce1e1_data:
		.ascii  "\x00\x00"

_0ce1e3_data:
		.ascii  "\x00"

_0ce1e4_data:
		.ascii  "\x00"

_0ce1e5_data:
		.ascii  "\x00\x00\x00"

_0ce1e8_data:
		.fill   0xf

_0ce1f7_data:
		.ascii  "\x00\x00"

_0ce1f9_data:
		.ascii  "\x00\x00\x00"

_0ce1fc_data:
		.fill   0x8

_0ce204_data:
		.fill   0x3c

_0ce240_data:
		.fill   0x40

_0ce280_data:
		.fill   0x44

_0ce2c4_data:
		.ascii  "\x00\x00"

_0ce2c6_data:
		.ascii  "\x00\x00"

_0ce2c8_data:
		.fill   0x20b

_0ce4d3_data:
		.ascii  "\x00"

_0ce4d4_data:
		.fill   0x5

_0ce4d9_data:
		.ascii  "\x00\x00\x00"

_0ce4dc_data:
		.fill   0x25c

_0ce738_data:
		.fill   0x4

_0ce73c_data:
		.fill   0x28

_0ce764_data:
		.fill   0x4

_0ce768_data:
		.fill   0x58

_0ce7c0_data:
		.fill   0x4

_0ce7c4_data:
		.fill   0x4

_0ce7c8_data:
		.fill   0x4

_0ce7cc_data:
		.fill   0x4

_0ce7d0_data:
		.fill   0x4

_0ce7d4_data:
		.fill   0x20

_0ce7f4_data:
		.fill   0x4

_0ce7f8_data:
		.fill   0xa

_0ce802_data:
		.ascii  "\x00\x00"

_0ce804_data:
		.fill   0x8

_0ce80c_data:
		.ascii  "\x00\x00"

_0ce80e_data:
		.fill   0x8

_0ce816_data:
		.fill   0x6

_0ce81c_data:
		.ascii  "\x00\x00"

_0ce81e_data:
		.fill   0x4

_0ce822_data:
		.fill   0x12

_0ce834_data:
		.ascii  "\x00"

_0ce835_data:
		.ascii  "\x00"

_0ce836_data:
		.ascii  "\x00"

_0ce837_data:
		.ascii  "\x00"

_0ce838_data:
		.ascii  "\x00"

_0ce839_data:
		.fill   0x7

_0ce840_data:
		.ascii  "\x00\x00"

_0ce842_data:
		.ascii  "\x00"

_0ce843_data:
		.ascii  "\x00\x00"

_0ce845_data:
		.fill   0x4

_0ce849_data:
		.ascii  "\x00\x00"

_0ce84b_data:
		.ascii  "\x00\x00"

_0ce84d_data:
		.ascii  "\x00\x00\x00"

_0ce850_data:
		.fill   0x8

_0ce858_data:
		.fill   0x3c

_0ce894_data:
		.fill   0x32

_0ce8c6_data:
		.ascii  "\x00"

_0ce8c7_data:
		.ascii  "\x00\x00"

_0ce8c9_data:
		.fill   0xb

_0ce8d4_data:
		.fill   0x4

_0ce8d8_data:
		.fill   0x14

_0ce8ec_data:
		.fill   0x4

_0ce8f0_data:
		.fill   0x1e

_0ce90e_data:
		.fill   0x2f

_0ce93d_data:
		.ascii  "\x00\x00"

_0ce93f_data:
		.fill   0x9

_0ce948_data:
		.ascii  "\x00\x00"

_0ce94a_data:
		.ascii  "\x00\x00"

_0ce94c_data:
		.ascii  "\x00"

_0ce94d_data:
		.ascii  "\x00"

_0ce94e_data:
		.ascii  "\x00"

_0ce94f_data:
		.ascii  "\x00"

_0ce950_data:
		.ascii  "\x00"

_0ce951_data:
		.ascii  "\x00"

_0ce952_data:
		.ascii  "\x00"

_0ce953_data:
		.ascii  "\x00"

_0ce954_data:
		.ascii  "\x00\x00"

_0ce956_data:
		.fill   0xc4

_0cea1a_data:
		.ascii  "\x00\x00"

_0cea1c_data:
		.ascii  "\x00\x00"

_0cea1e_data:
		.fill   0x718

_0cf136_data:
		.ascii  "\x00\x00"

_0cf138_data:
		.ascii  "\x00\x00"

_0cf13a_data:
		.ascii  "\x00\x00"

_0cf13c_data:
		.ascii  "\x00\x00"

_0cf13e_data:
		.ascii  "\x00\x00"

_0cf140_data:
		.ascii  "\x00\x00"

_0cf142_data:
		.ascii  "\x00\x00"

_0cf144_data:
		.ascii  "\x00\x00"

_0cf146_data:
		.ascii  "\x00\x00"

_0cf148_data:
		.ascii  "\x00\x00"

_0cf14a_data:
		.ascii  "\x00\x00"

_0cf14c_data:
		.ascii  "\x00\x00"

_0cf14e_data:
		.ascii  "\x00\x00"

_0cf150_data:
		.ascii  "\x00\x00"

_0cf152_data:
		.ascii  "\x00\x00"

_0cf154_data:
		.ascii  "\x00\x00"

_0cf156_data:
		.ascii  "\x00\x00"

_0cf158_data:
		.ascii  "\x00\x00"

_0cf15a_data:
		.ascii  "\x00\x00"

_0cf15c_data:
		.ascii  "\x00\x00"

_0cf15e_data:
		.ascii  "\x00\x00"

_0cf160_data:
		.ascii  "\x00\x00"

_0cf162_data:
		.ascii  "\x00\x00"

_0cf164_data:
		.fill   0x4

_0cf168_data:
		.ascii  "\x00\x00"

_0cf16a_data:
		.ascii  "\x00\x00"

_0cf16c_data:
		.ascii  "\x00\x00"

_0cf16e_data:
		.ascii  "\x00\x00"

_0cf170_data:
		.ascii  "\x00\x00"

_0cf172_data:
		.ascii  "\x00\x00"

_0cf174_data:
		.ascii  "\x00\x00"

_0cf176_data:
		.ascii  "\x00\x00"

_0cf178_data:
		.ascii  "\x00\x00"

_0cf17a_data:
		.ascii  "\x00\x00"

_0cf17c_data:
		.ascii  "\x00\x00"

_0cf17e_data:
		.ascii  "\x00\x00"

_0cf180_data:
		.ascii  "\x00\x00"

_0cf182_data:
		.ascii  "\x00\x00"

_0cf184_data:
		.ascii  "\x00\x00"

_0cf186_data:
		.ascii  "\x00\x00"

_0cf188_data:
		.fill   0x4

_0cf18c_data:
		.ascii  "\x00\x00"

_0cf18e_data:
		.ascii  "\x00\x00"

_0cf190_data:
		.ascii  "\x00\x00"

_0cf192_data:
		.ascii  "\x00\x00"

_0cf194_data:
		.ascii  "\x00\x00"

_0cf196_data:
		.ascii  "\x00\x00"

_0cf198_data:
		.ascii  "\x00\x00"

_0cf19a_data:
		.ascii  "\x00\x00"

_0cf19c_data:
		.ascii  "\x00\x00"

_0cf19e_data:
		.ascii  "\x00\x00"

_0cf1a0_data:
		.ascii  "\x00\x00"

_0cf1a2_data:
		.ascii  "\x00\x00"

_0cf1a4_data:
		.ascii  "\x00\x00"

_0cf1a6_data:
		.ascii  "\x00\x00"

_0cf1a8_data:
		.ascii  "\x00\x00"

_0cf1aa_data:
		.ascii  "\x00\x00"

_0cf1ac_data:
		.ascii  "\x00\x00"

_0cf1ae_data:
		.ascii  "\x00\x00"

_0cf1b0_data:
		.ascii  "\x00\x00"

_0cf1b2_data:
		.ascii  "\x00\x00"

_0cf1b4_data:
		.ascii  "\x00\x00"

_0cf1b6_data:
		.ascii  "\x00\x00"

_0cf1b8_data:
		.ascii  "\x00\x00"

_0cf1ba_data:
		.ascii  "\x00\x00"

_0cf1bc_data:
		.ascii  "\x00\x00"

_0cf1be_data:
		.ascii  "\x00\x00"

_0cf1c0_data:
		.ascii  "\x00\x00"

_0cf1c2_data:
		.ascii  "\x00\x00"

_0cf1c4_data:
		.ascii  "\x00\x00"

_0cf1c6_data:
		.ascii  "\x00\x00"

_0cf1c8_data:
		.ascii  "\x00\x00"

_0cf1ca_data:
		.ascii  "\x00\x00"

_0cf1cc_data:
		.ascii  "\x00\x00"

_0cf1ce_data:
		.ascii  "\x00\x00"

_0cf1d0_data:
		.ascii  "\x00\x00"

_0cf1d2_data:
		.ascii  "\x00\x00"

_0cf1d4_data:
		.ascii  "\x00\x00"

_0cf1d6_data:
		.ascii  "\x00\x00"

_0cf1d8_data:
		.ascii  "\x00\x00"

_0cf1da_data:
		.ascii  "\x00\x00"

_0cf1dc_data:
		.ascii  "\x00\x00"

_0cf1de_data:
		.ascii  "\x00\x00"

_0cf1e0_data:
		.fill   0x4

_0cf1e4_data:
		.ascii  "\x00\x00"

_0cf1e6_data:
		.ascii  "\x00\x00"

_0cf1e8_data:
		.ascii  "\x00\x00"

_0cf1ea_data:
		.ascii  "\x00\x00"

_0cf1ec_data:
		.ascii  "\x00\x00"

_0cf1ee_data:
		.ascii  "\x00\x00"

_0cf1f0_data:
		.ascii  "\x00\x00"

_0cf1f2_data:
		.ascii  "\x00\x00"

_0cf1f4_data:
		.ascii  "\x00\x00"

_0cf1f6_data:
		.ascii  "\x00\x00"

_0cf1f8_data:
		.ascii  "\x00\x00"

_0cf1fa_data:
		.ascii  "\x00\x00"

_0cf1fc_data:
		.ascii  "\x00\x00"

_0cf1fe_data:
		.ascii  "\x00\x00"

_0cf200_data:
		.ascii  "\x00\x00"

_0cf202_data:
		.ascii  "\x00\x00"

_0cf204_data:
		.ascii  "\x00\x00"

_0cf206_data:
		.ascii  "\x00\x00"

_0cf208_data:
		.ascii  "\x00\x00"

_0cf20a_data:
		.ascii  "\x00\x00"

_0cf20c_data:
		.ascii  "\x00\x00"

_0cf20e_data:
		.ascii  "\x00\x00"

_0cf210_data:
		.ascii  "\x00\x00"

_0cf212_data:
		.ascii  "\x00\x00"

_0cf214_data:
		.ascii  "\x00\x00"

_0cf216_data:
		.ascii  "\x00\x00"

_0cf218_data:
		.ascii  "\x00\x00"

_0cf21a_data:
		.ascii  "\x00\x00"

_0cf21c_data:
		.ascii  "\x00\x00"

_0cf21e_data:
		.ascii  "\x00\x00"

_0cf220_data:
		.ascii  "\x00"

_0cf221_data:
		.ascii  "\x00"

_0cf222_data:
		.ascii  "\x00\x00"

_0cf224_data:
		.ascii  "\x00\x00"

_0cf226_data:
		.ascii  "\x00\x00"

_0cf228_data:
		.ascii  "\x00"

_0cf229_data:
		.ascii  "\x00"

_0cf22a_data:
		.ascii  "\x00\x00"

_0cf22c_data:
		.ascii  "\x00\x00"

_0cf22e_data:
		.ascii  "\x00\x00"

_0cf230_data:
		.ascii  "\x00\x00"

_0cf232_data:
		.ascii  "\x00\x00"

_0cf234_data:
		.ascii  "\x00\x00"

_0cf236_data:
		.ascii  "\x00\x00"

_0cf238_data:
		.ascii  "\x00\x00"

_0cf23a_data:
		.ascii  "\x00\x00"

_0cf23c_data:
		.ascii  "\x00\x00"

_0cf23e_data:
		.ascii  "\x00\x00"

_0cf240_data:
		.ascii  "\x00\x00"

_0cf242_data:
		.ascii  "\x00\x00"

_0cf244_data:
		.ascii  "\x00\x00"

_0cf246_data:
		.ascii  "\x00\x00"

_0cf248_data:
		.ascii  "\x00\x00"

_0cf24a_data:
		.ascii  "\x00\x00"

_0cf24c_data:
		.ascii  "\x00\x00"

_0cf24e_data:
		.ascii  "\x00\x00"

_0cf250_data:
		.ascii  "\x00\x00"

_0cf252_data:
		.ascii  "\x00\x00"

_0cf254_data:
		.ascii  "\x00\x00"

_0cf256_data:
		.ascii  "\x00\x00"

_0cf258_data:
		.ascii  "\x00\x00"

_0cf25a_data:
		.ascii  "\x00\x00"

_0cf25c_data:
		.ascii  "\x00\x00"

_0cf25e_data:
		.ascii  "\x00\x00"

_0cf260_data:
		.ascii  "\x00\x00"

_0cf262_data:
		.ascii  "\x00\x00"

_0cf264_data:
		.ascii  "\x00\x00"

_0cf266_data:
		.ascii  "\x00\x00"

_0cf268_data:
		.ascii  "\x00\x00"

_0cf26a_data:
		.ascii  "\x00\x00"

_0cf26c_data:
		.ascii  "\x00\x00"

_0cf26e_data:
		.ascii  "\x00\x00"

_0cf270_data:
		.ascii  "\x00\x00"

_0cf272_data:
		.ascii  "\x00\x00"

_0cf274_data:
		.ascii  "\x00\x00"

_0cf276_data:
		.ascii  "\x00\x00"

_0cf278_data:
		.ascii  "\x00\x00"

_0cf27a_data:
		.ascii  "\x00\x00"

_0cf27c_data:
		.ascii  "\x00\x00"

_0cf27e_data:
		.ascii  "\x00\x00"

_0cf280_data:
		.ascii  "\x00\x00"

_0cf282_data:
		.ascii  "\x00\x00"

_0cf284_data:
		.ascii  "\x00\x00"

_0cf286_data:
		.ascii  "\x00\x00"

_0cf288_data:
		.ascii  "\x00\x00"

_0cf28a_data:
		.ascii  "\x00\x00"

_0cf28c_data:
		.ascii  "\x00\x00"

_0cf28e_data:
		.ascii  "\x00\x00"

_0cf290_data:
		.ascii  "\x00\x00"

_0cf292_data:
		.ascii  "\x00\x00"

_0cf294_data:
		.ascii  "\x00\x00"

_0cf296_data:
		.ascii  "\x00\x00"

_0cf298_data:
		.ascii  "\x00\x00"

_0cf29a_data:
		.ascii  "\x00\x00"

_0cf29c_data:
		.ascii  "\x00\x00"

_0cf29e_data:
		.ascii  "\x00\x00"

_0cf2a0_data:
		.ascii  "\x00\x00"

_0cf2a2_data:
		.ascii  "\x00\x00"

_0cf2a4_data:
		.ascii  "\x00\x00"

_0cf2a6_data:
		.ascii  "\x00\x00"

_0cf2a8_data:
		.ascii  "\x00\x00"

_0cf2aa_data:
		.ascii  "\x00\x00"

_0cf2ac_data:
		.ascii  "\x00\x00"

_0cf2ae_data:
		.ascii  "\x00\x00"

_0cf2b0_data:
		.ascii  "\x00\x00"

_0cf2b2_data:
		.ascii  "\x00\x00"

_0cf2b4_data:
		.ascii  "\x00\x00"

_0cf2b6_data:
		.ascii  "\x00\x00"

_0cf2b8_data:
		.ascii  "\x00\x00"

_0cf2ba_data:
		.ascii  "\x00\x00"

_0cf2bc_data:
		.ascii  "\x00\x00"

_0cf2be_data:
		.ascii  "\x00\x00"

_0cf2c0_data:
		.ascii  "\x00\x00"

_0cf2c2_data:
		.ascii  "\x00\x00"

_0cf2c4_data:
		.ascii  "\x00\x00"

_0cf2c6_data:
		.ascii  "\x00\x00"

_0cf2c8_data:
		.ascii  "\x00\x00"

_0cf2ca_data:
		.ascii  "\x00\x00"

_0cf2cc_data:
		.ascii  "\x00\x00"

_0cf2ce_data:
		.ascii  "\x00\x00"

_0cf2d0_data:
		.ascii  "\x00\x00"

_0cf2d2_data:
		.ascii  "\x00\x00"

_0cf2d4_data:
		.ascii  "\x00\x00"

_0cf2d6_data:
		.ascii  "\x00\x00"

_0cf2d8_data:
		.ascii  "\x00\x00"

_0cf2da_data:
		.ascii  "\x00\x00"

_0cf2dc_data:
		.ascii  "\x00\x00"

_0cf2de_data:
		.ascii  "\x00\x00"

_0cf2e0_data:
		.ascii  "\x00\x00"

_0cf2e2_data:
		.ascii  "\x00\x00"

_0cf2e4_data:
		.ascii  "\x00\x00"

_0cf2e6_data:
		.ascii  "\x00\x00"

_0cf2e8_data:
		.ascii  "\x00\x00"

_0cf2ea_data:
		.ascii  "\x00\x00"

_0cf2ec_data:
		.ascii  "\x00\x00"

_0cf2ee_data:
		.fill   0xff

_0cf3ed_data:
		.ascii  "\x00"

_0cf3ee_data:
		.ascii  "\x00"

_0cf3ef_data:
		.ascii  "\x00"

_0cf3f0_data:
		.ascii  "\x00"

_0cf3f1_data:
		.ascii  "\x00"

_0cf3f2_data:
		.ascii  "\x00"

_0cf3f3_data:
		.ascii  "\x00\x00"

_0cf3f5_data:
		.ascii  "\x00\x00"

_0cf3f7_data:
		.fill   0xa

_0cf401_data:
		.fill   0x5

_0cf406_data:
		.ascii  "\x00"

_0cf407_data:
		.ascii  "\x00"

_0cf408_data:
		.ascii  "\x00"

_0cf409_data:
		.ascii  "\x00"

_0cf40a_data:
		.ascii  "\x00"

_0cf40b_data:
		.ascii  "\x00"

_0cf40c_data:
		.ascii  "\x00"

_0cf40d_data:
		.ascii  "\x00"

_0cf40e_data:
		.ascii  "\x00"

_0cf40f_data:
		.ascii  "\x00"

_0cf410_data:
		.ascii  "\x00"

_0cf411_data:
		.ascii  "\x00"

_0cf412_data:
		.ascii  "\x00"

_0cf413_data:
		.ascii  "\x00"

_0cf414_data:
		.ascii  "\x00"

_0cf415_data:
		.ascii  "\x00"

_0cf416_data:
		.ascii  "\x00"

_0cf417_data:
		.ascii  "\x00"

_0cf418_data:
		.ascii  "\x00"

_0cf419_data:
		.ascii  "\x00"

_0cf41a_data:
		.ascii  "\x00"

_0cf41b_data:
		.ascii  "\x00"

_0cf41c_data:
		.ascii  "\x00"

_0cf41d_data:
		.ascii  "\x00"

_0cf41e_data:
		.ascii  "\x00"

_0cf41f_data:
		.ascii  "\x00"

_0cf420_data:
		.ascii  "\x00"

_0cf421_data:
		.ascii  "\x00"

_0cf422_data:
		.ascii  "\x00"

_0cf423_data:
		.ascii  "\x00"

_0cf424_data:
		.ascii  "\x00"

_0cf425_data:
		.ascii  "\x00"

_0cf426_data:
		.ascii  "\x00"

_0cf427_data:
		.ascii  "\x00"

_0cf428_data:
		.ascii  "\x00"

_0cf429_data:
		.ascii  "\x00"

_0cf42a_data:
		.ascii  "\x00"

_0cf42b_data:
		.ascii  "\x00"

_0cf42c_data:
		.ascii  "\x00"

_0cf42d_data:
		.ascii  "\x00"

_0cf42e_data:
		.ascii  "\x00"

_0cf42f_data:
		.ascii  "\x00"

_0cf430_data:
		.ascii  "\x00"

_0cf431_data:
		.ascii  "\x00"

_0cf432_data:
		.ascii  "\x00"

_0cf433_data:
		.ascii  "\x00"

_0cf434_data:
		.ascii  "\x00"

_0cf435_data:
		.ascii  "\x00"

_0cf436_data:
		.ascii  "\x00"

_0cf437_data:
		.ascii  "\x00"

_0cf438_data:
		.ascii  "\x00"

_0cf439_data:
		.ascii  "\x00"

_0cf43a_data:
		.ascii  "\x00"

_0cf43b_data:
		.ascii  "\x00"

_0cf43c_data:
		.ascii  "\x00"

_0cf43d_data:
		.ascii  "\x00"

_0cf43e_data:
		.ascii  "\x00"

_0cf43f_data:
		.ascii  "\x00"

_0cf440_data:
		.ascii  "\x00"

_0cf441_data:
		.ascii  "\x00"

_0cf442_data:
		.ascii  "\x00"

_0cf443_data:
		.ascii  "\x00"

_0cf444_data:
		.ascii  "\x00"

_0cf445_data:
		.ascii  "\x00"

_0cf446_data:
		.ascii  "\x00"

_0cf447_data:
		.ascii  "\x00"

_0cf448_data:
		.ascii  "\x00"

_0cf449_data:
		.ascii  "\x00"

_0cf44a_data:
		.ascii  "\x00"

_0cf44b_data:
		.ascii  "\x00"

_0cf44c_data:
		.ascii  "\x00"

_0cf44d_data:
		.ascii  "\x00"

_0cf44e_data:
		.ascii  "\x00"

_0cf44f_data:
		.ascii  "\x00"

_0cf450_data:
		.ascii  "\x00"

_0cf451_data:
		.ascii  "\x00"

_0cf452_data:
		.ascii  "\x00"

_0cf453_data:
		.ascii  "\x00"

_0cf454_data:
		.ascii  "\x00"

_0cf455_data:
		.ascii  "\x00"

_0cf456_data:
		.ascii  "\x00"

_0cf457_data:
		.ascii  "\x00"

_0cf458_data:
		.ascii  "\x00"

_0cf459_data:
		.ascii  "\x00"

_0cf45a_data:
		.ascii  "\x00"

_0cf45b_data:
		.ascii  "\x00"

_0cf45c_data:
		.ascii  "\x00"

_0cf45d_data:
		.ascii  "\x00"

_0cf45e_data:
		.ascii  "\x00"

_0cf45f_data:
		.ascii  "\x00"

_0cf460_data:
		.ascii  "\x00"

_0cf461_data:
		.ascii  "\x00"

_0cf462_data:
		.ascii  "\x00"

_0cf463_data:
		.ascii  "\x00"

_0cf464_data:
		.ascii  "\x00"

_0cf465_data:
		.ascii  "\x00"

_0cf466_data:
		.ascii  "\x00"

_0cf467_data:
		.ascii  "\x00"

_0cf468_data:
		.ascii  "\x00"

_0cf469_data:
		.ascii  "\x00"

_0cf46a_data:
		.ascii  "\x00"

_0cf46b_data:
		.ascii  "\x00"

_0cf46c_data:
		.ascii  "\x00"

_0cf46d_data:
		.ascii  "\x00"

_0cf46e_data:
		.ascii  "\x00"

_0cf46f_data:
		.ascii  "\x00"

_0cf470_data:
		.ascii  "\x00"

_0cf471_data:
		.ascii  "\x00"

_0cf472_data:
		.ascii  "\x00"

_0cf473_data:
		.ascii  "\x00"

_0cf474_data:
		.ascii  "\x00"

_0cf475_data:
		.ascii  "\x00"

_0cf476_data:
		.ascii  "\x00"

_0cf477_data:
		.ascii  "\x00"

_0cf478_data:
		.ascii  "\x00"

_0cf479_data:
		.ascii  "\x00"

_0cf47a_data:
		.ascii  "\x00"

_0cf47b_data:
		.ascii  "\x00"

_0cf47c_data:
		.ascii  "\x00"

_0cf47d_data:
		.ascii  "\x00"

_0cf47e_data:
		.ascii  "\x00"

_0cf47f_data:
		.ascii  "\x00"

_0cf480_data:
		.ascii  "\x00"

_0cf481_data:
		.ascii  "\x00"

_0cf482_data:
		.ascii  "\x00"

_0cf483_data:
		.ascii  "\x00"

_0cf484_data:
		.ascii  "\x00"

_0cf485_data:
		.ascii  "\x00"

_0cf486_data:
		.ascii  "\x00"

_0cf487_data:
		.ascii  "\x00"

_0cf488_data:
		.ascii  "\x00"

_0cf489_data:
		.ascii  "\x00"

_0cf48a_data:
		.ascii  "\x00"

_0cf48b_data:
		.ascii  "\x00"

_0cf48c_data:
		.ascii  "\x00"

_0cf48d_data:
		.ascii  "\x00\x00\x00"

_0cf490_data:
		.fill   0x4

_0cf494_data:
		.ascii  "\x00\x00"

_0cf496_data:
		.ascii  "\x00\x00"

_0cf498_data:
		.ascii  "\x00\x00"

_0cf49a_data:
		.ascii  "\x00\x00"

_0cf49c_data:
		.ascii  "\x00"

_0cf49d_data:
		.ascii  "\x00"

_0cf49e_data:
		.ascii  "\x00\x00"

_0cf4a0_data:
		.ascii  "\x00\x00"

_0cf4a2_data:
		.ascii  "\x00\x00"

_0cf4a4_data:
		.ascii  "\x00\x00"

_0cf4a6_data:
		.ascii  "\x00\x00"

_0cf4a8_data:
		.ascii  "\x00\x00"

_0cf4aa_data:
		.ascii  "\x00\x00"

_0cf4ac_data:
		.ascii  "\x00\x00"

_0cf4ae_data:
		.ascii  "\x00\x00"

_0cf4b0_data:
		.ascii  "\x00\x00"

_0cf4b2_data:
		.ascii  "\x00\x00"

_0cf4b4_data:
		.ascii  "\x00\x00"

_0cf4b6_data:
		.ascii  "\x00\x00"

_0cf4b8_data:
		.fill   0x28

_0cf4e0_data:
		.fill   0x24

_0cf504_data:
		.fill   0x4

_0cf508_data:
		.fill   0x4

_0cf50c_data:
		.fill   0x4fc

_0cfa08_data:
		.fill   0x14

_0cfa1c_data:
		.ascii  "\x00\x00"

_0cfa1e_data:
		.ascii  "\x00\x00"

_0cfa20_data:
		.fill   0xa410

_0d9e30_data:
		.fill   0x4000

_0dde30_data:
		.ascii  "\x00"

_0dde31_data:
		.ascii  "\x00"

_0dde32_data:
		.fill   0x5e

_0dde90_data:
		.ascii  "\x00"

_0dde91_data:
		.ascii  "\x00"

_0dde92_data:
		.fill   0x10

_0ddea2_data:
		.ascii  "\x00"

_0ddea3_data:
		.ascii  "\x00"

_0ddea4_data:
		.fill   0x28c

_0de130_data:
		.ascii  "\x00\x00"

_0de132_data:
		.ascii  "\x00\x00"

_0de134_data:
		.ascii  "\x00\x00"

_0de136_data:
		.ascii  "\x00\x00"

_0de138_data:
		.ascii  "\x00\x00"

_0de13a_data:
		.ascii  "\x00\x00"

_0de13c_data:
		.ascii  "\x00\x00"

_0de13e_data:
		.ascii  "\x00\x00"

_0de140_data:
		.fill   0x10

_0de150_data:
		.ascii  "\x00\x00"

_0de152_data:
		.ascii  "\x00\x00"

_0de154_data:
		.ascii  "\x00\x00"

_0de156_data:
		.ascii  "\x00\x00"

_0de158_data:
		.ascii  "\x00\x00"

_0de15a_data:
		.ascii  "\x00\x00"

_0de15c_data:
		.ascii  "\x00\x00"

_0de15e_data:
		.ascii  "\x00\x00"

_0de160_data:
		.ascii  "\x00"

_0de161_data:
		.ascii  "\x00"

_0de162_data:
		.ascii  "\x00\x00"

_0de164_data:
		.ascii  "\x00\x00"

_0de166_data:
		.ascii  "\x00\x00"

_0de168_data:
		.ascii  "\x00\x00"

_0de16a_data:
		.fill   0x9a

_0de204_data:
		.ascii  "\x00\x00"

_0de206_data:
		.ascii  "\x00\x00"

_0de208_data:
		.ascii  "\x00\x00"

_0de20a_data:
		.ascii  "\x00\x00"

_0de20c_data:
		.ascii  "\x00\x00"

_0de20e_data:
		.ascii  "\x00\x00"

_0de210_data:
		.ascii  "\x00\x00"

_0de212_data:
		.ascii  "\x00\x00"

_0de214_data:
		.ascii  "\x00\x00"

_0de216_data:
		.ascii  "\x00\x00"

_0de218_data:
		.ascii  "\x00\x00"

_0de21a_data:
		.ascii  "\x00\x00"

_0de21c_data:
		.ascii  "\x00\x00"

_0de21e_data:
		.ascii  "\x00\x00"

_0de220_data:
		.ascii  "\x00\x00"

_0de222_data:
		.ascii  "\x00\x00"

_0de224_data:
		.fill   0xc

_0de230_data:
		.fill   0x4

_0de234_data:
		.fill   0x4

_0de238_data:
		.fill   0x4

_0de23c_data:
		.fill   0x4

_0de240_data:
		.fill   0x4

_0de244_data:
		.fill   0x4

_0de248_data:
		.fill   0x4

_0de24c_data:
		.fill   0x4

_0de250_data:
		.fill   0x4

_0de254_data:
		.fill   0x4

_0de258_data:
		.fill   0x8

_0de260_data:
		.fill   0x4

_0de264_data:
		.ascii  "\x00\x00"

_0de266_data:
		.fill   0x4

_0de26a_data:
		.ascii  "\x00\x00"

_0de26c_data:
		.fill   0x4

_0de270_data:
		.ascii  "\x00\x00"

_0de272_data:
		.fill   0x4

_0de276_data:
		.ascii  "\x00\x00"

_0de278_data:
		.fill   0x4

_0de27c_data:
		.ascii  "\x00\x00"

_0de27e_data:
		.fill   0x4

_0de282_data:
		.ascii  "\x00\x00"

_0de284_data:
		.fill   0x4

_0de288_data:
		.ascii  "\x00\x00"

_0de28a_data:
		.fill   0x4

_0de28e_data:
		.ascii  "\x00\x00"

_0de290_data:
		.fill   0x4

_0de294_data:
		.ascii  "\x00\x00"

_0de296_data:
		.fill   0x4

_0de29a_data:
		.ascii  "\x00\x00"

_0de29c_data:
		.fill   0x4

_0de2a0_data:
		.ascii  "\x00\x00"

_0de2a2_data:
		.ascii  "\x00\x00"

_0de2a4_data:
		.ascii  "\x00\x00"

_0de2a6_data:
		.fill   0xe

_0de2b4_data:
		.fill   0x4

_0de2b8_data:
		.ascii  "\x00\x00"

_0de2ba_data:
		.ascii  "\x00\x00"

_0de2bc_data:
		.fill   0x104

_0de3c0_data:
		.ascii  "\x00"

_0de3c1_data:
		.ascii  "\x00"

_0de3c2_data:
		.ascii  "\x00"

_0de3c3_data:
		.fill   0x4

_0de3c7_data:
		.fill   0x4

_0de3cb_data:
		.fill   0x18c

_0de557_data:
		.fill   0x4

_0de55b_data:
		.fill   0x190

_0de6eb_data:
		.fill   0x190

_0de87b_data:
		.fill   0x64

_0de8df_data:
		.ascii  "\x00"

_0de8e0_data:
		.fill   0x1a

_0de8fa_data:
		.ascii  "\x00"

_0de8fb_data:
		.ascii  "\x00"

_0de8fc_data:
		.ascii  "\x00"

_0de8fd_data:
		.ascii  "\x00"

_0de8fe_data:
		.ascii  "\x00"

_0de8ff_data:
		.ascii  "\x00"

_0de900_data:
		.ascii  "\x00"

_0de901_data:
		.ascii  "\x00\x00"

_0de903_data:
		.ascii  "\x00"

_0de904_data:
		.fill   0x7ff

_0df103_data:
		.ascii  "\x00"

_0df104_data:
		.fill   0x8

_0df10c_data:
		.fill   0x4

_0df110_data:
		.ascii  "\x00\x00"

_0df112_data:
		.ascii  "\x00\x00"

_0df114_data:
		.ascii  "\x00"

_0df115_data:
		.ascii  "\x00"

_0df116_data:
		.ascii  "\x00"

_0df117_data:
		.ascii  "\x00"

_0df118_data:
		.fill   0x28

_0df140_data:
		.ascii  "\x00\x00"

_0df142_data:
		.ascii  "\x00\x00"

_0df144_data:
		.ascii  "\x00\x00"

_0df146_data:
		.ascii  "\x00\x00"

_0df148_data:
		.ascii  "\x00\x00"

_0df14a_data:
		.ascii  "\x00\x00"

_0df14c_data:
		.ascii  "\x00\x00"

_0df14e_data:
		.ascii  "\x00\x00"

_0df150_data:
		.fill   0x6

_0df156_data:
		.ascii  "\x00"

_0df157_data:
		.fill   0x9

_0df160_data:
		.fill   0x4

_0df164_data:
		.fill   0x4

_0df168_data:
		.fill   0x4

_0df16c_data:
		.fill   0x4

_0df170_data:
		.fill   0x4

_0df174_data:
		.fill   0x4

_0df178_data:
		.fill   0x4

_0df17c_data:
		.fill   0x4

_0df180_data:
		.fill   0x4

_0df184_data:
		.fill   0x4

_0df188_data:
		.fill   0x4

_0df18c_data:
		.fill   0x4

_0df190_data:
		.fill   0x4

_0df194_data:
		.fill   0x4

_0df198_data:
		.fill   0x4

_0df19c_data:
		.fill   0x4

_0df1a0_data:
		.fill   0x8

_0df1a8_data:
		.fill   0x4

_0df1ac_data:
		.fill   0x4

_0df1b0_data:
		.fill   0x4

_0df1b4_data:
		.fill   0x4

_0df1b8_data:
		.fill   0x7

_0df1bf_data:
		.ascii  "\x00"

_0df1c0_data:
		.ascii  "\x00"

_0df1c1_data:
		.ascii  "\x00"

_0df1c2_data:
		.fill   0x2fe

_0df4c0_data:
		.fill   0x4

_0df4c4_data:
		.fill   0x4

_0df4c8_data:
		.fill   0x4

_0df4cc_data:
		.fill   0x4

_0df4d0_data:
		.fill   0x4

_0df4d4_data:
		.fill   0x4

_0df4d8_data:
		.fill   0x4

_0df4dc_data:
		.fill   0x4

_0df4e0_data:
		.fill   0x4

_0df4e4_data:
		.fill   0xc

_0df4f0_data:
		.ascii  "\x00"

_0df4f1_data:
		.ascii  "\x00"

_0df4f2_data:
		.ascii  "\x00"

_0df4f3_data:
		.ascii  "\x00"

_0df4f4_data:
		.ascii  "\x00"

_0df4f5_data:
		.fill   0xb

_0df500_data:
		.fill   0x4

_0df504_data:
		.fill   0x4

_0df508_data:
		.fill   0x4

_0df50c_data:
		.fill   0x7f4

_0dfd00_data:
		.fill   0x4

_0dfd04_data:
		.fill   0x4

_0dfd08_data:
		.fill   0x4

_0dfd0c_data:
		.fill   0x4

_0dfd10_data:
		.fill   0x4

_0dfd14_data:
		.fill   0x4

_0dfd18_data:
		.fill   0x4

_0dfd1c_data:
		.fill   0x7f4

_0e0510_data:
		.fill   0x4

_0e0514_data:
		.fill   0x6

_0e051a_data:
		.fill   0x64

_0e057e_data:
		.fill   0xa

_0e0588_data:
		.fill   0x4

_0e058c_data:
		.ascii  "\x00\x00"

_0e058e_data:
		.ascii  "\x00\x00"

_0e0590_data:
		.fill   0x4

_0e0594_data:
		.fill   0x4

_0e0598_data:
		.fill   0x64

_0e05fc_data:
		.fill   0x4

_0e0600_data:
		.fill   0x4

_0e0604_data:
		.ascii  "\x00\x00"

_0e0606_data:
		.ascii  "\x00\x00"

_0e0608_data:
		.ascii  "\x00\x00"

_0e060a_data:
		.ascii  "\x00\x00"

_0e060c_data:
		.ascii  "\x00\x00"

_0e060e_data:
		.ascii  "\x00\x00"

_0e0610_data:
		.ascii  "\x00\x00"

_0e0612_data:
		.ascii  "\x00\x00"

_0e0614_data:
		.ascii  "\x00\x00"

_0e0616_data:
		.ascii  "\x00\x00"

_0e0618_data:
		.ascii  "\x00\x00"

_0e061a_data:
		.ascii  "\x00\x00"

_0e061c_data:
		.ascii  "\x00\x00"

_0e061e_data:
		.ascii  "\x00\x00"

_0e0620_data:
		.ascii  "\x00\x00"

_0e0622_data:
		.ascii  "\x00\x00"

_0e0624_data:
		.ascii  "\x00\x00"

_0e0626_data:
		.ascii  "\x00\x00"

_0e0628_data:
		.ascii  "\x00\x00"

_0e062a_data:
		.ascii  "\x00\x00"

_0e062c_data:
		.ascii  "\x00\x00"

_0e062e_data:
		.ascii  "\x00\x00"

_0e0630_data:
		.ascii  "\x00\x00"

_0e0632_data:
		.ascii  "\x00"

_0e0633_data:
		.ascii  "\x00"

_0e0634_data:
		.ascii  "\x00"

_0e0635_data:
		.ascii  "\x00"

_0e0636_data:
		.ascii  "\x00"

_0e0637_data:
		.ascii  "\x00"

_0e0638_data:
		.ascii  "\x00"

_0e0639_data:
		.fill   0x7

_0e0640_data:
		.fill   0x80

_0e06c0_data:
		.fill   0x4

_0e06c4_data:
		.fill   0x4

_0e06c8_data:
		.ascii  "\x00\x00"

_0e06ca_data:
		.ascii  "\x00\x00"

_0e06cc_data:
		.ascii  "\x00\x00"

_0e06ce_data:
		.ascii  "\x00\x00"

_0e06d0_data:
		.ascii  "\x00\x00"

_0e06d2_data:
		.ascii  "\x00\x00"

_0e06d4_data:
		.ascii  "\x00\x00"

_0e06d6_data:
		.ascii  "\x00\x00"

_0e06d8_data:
		.ascii  "\x00\x00"

_0e06da_data:
		.ascii  "\x00\x00"

_0e06dc_data:
		.ascii  "\x00\x00"

_0e06de_data:
		.ascii  "\x00\x00"

_0e06e0_data:
		.ascii  "\x00\x00"

_0e06e2_data:
		.ascii  "\x00\x00"

_0e06e4_data:
		.ascii  "\x00\x00"

_0e06e6_data:
		.ascii  "\x00\x00"

_0e06e8_data:
		.fill   0x4

_0e06ec_data:
		.fill   0x4

_0e06f0_data:
		.fill   0x4

_0e06f4_data:
		.fill   0x4

_0e06f8_data:
		.fill   0x4

_0e06fc_data:
		.fill   0x4

_0e0700_data:
		.fill   0x4

_0e0704_data:
		.fill   0x4

_0e0708_data:
		.fill   0x4

_0e070c_data:
		.fill   0x4

_0e0710_data:
		.fill   0x4

_0e0714_data:
		.fill   0x4

_0e0718_data:
		.fill   0x4

_0e071c_data:
		.fill   0x4

_0e0720_data:
		.fill   0x4

_0e0724_data:
		.fill   0x4

_0e0728_data:
		.fill   0x4

_0e072c_data:
		.fill   0x4

_0e0730_data:
		.fill   0x4

_0e0734_data:
		.fill   0x1c

_0e0750_data:
		.fill   0x1c

_0e076c_data:
		.fill   0x3c

_0e07a8_data:
		.fill   0x3311

_0e3ab9_data:
		.ascii  "\x00\x00\x00"

_0e3abc_data:
		.ascii  "\x00"

_0e3abd_data:
		.ascii  "\x00"

_0e3abe_data:
		.fill   0x2fe

_0e3dbc_data:
		.fill   0x300

_0e40bc_data:
		.ascii  "\x00"

_0e40bd_data:
		.ascii  "\x00"

_0e40be_data:
		.fill   0x2fe

_0e43bc_data:
		.fill   0x300

_0e46bc_data:
		.fill   0x4

_0e46c0_data:
		.fill   0x4

_0e46c4_data:
		.fill   0x4

_0e46c8_data:
		.fill   0x4

_0e46cc_data:
		.fill   0x4

_0e46d0_data:
		.fill   0x4

_0e46d4_data:
		.fill   0x4

_0e46d8_data:
		.fill   0x4

_0e46dc_data:
		.fill   0x4

_0e46e0_data:
		.fill   0x4

_0e46e4_data:
		.fill   0x4

_0e46e8_data:
		.ascii  "\x00"

_0e46e9_data:
		.fill   0x7

_0e46f0_data:
		.ascii  "\x00\x00"

_0e46f2_data:
		.ascii  "\x00\x00"

_0e46f4_data:
		.ascii  "\x00\x00"

_0e46f6_data:
		.ascii  "\x00\x00"

_0e46f8_data:
		.ascii  "\x00\x00"

_0e46fa_data:
		.ascii  "\x00\x00"

_0e46fc_data:
		.ascii  "\x00\x00"

_0e46fe_data:
		.ascii  "\x00\x00"

_0e4700_data:
		.ascii  "\x00\x00"

_0e4702_data:
		.ascii  "\x00\x00"

_0e4704_data:
		.ascii  "\x00\x00"

_0e4706_data:
		.ascii  "\x00"

_0e4707_data:
		.ascii  "\x00"

_0e4708_data:
		.ascii  "\x00"

_0e4709_data:
		.ascii  "\x00\x00"

_0e470b_data:
		.ascii  "\x00"

_0e470c_data:
		.ascii  "\x00"

_0e470d_data:
		.ascii  "\x00"

_0e470e_data:
		.ascii  "\x00"

_0e470f_data:
		.ascii  "\x00"

_0e4710_data:
		.fill   0x80

_0e4790_data:
		.fill   0x8

_0e4798_data:
		.ascii  "\x00\x00"

_0e479a_data:
		.ascii  "\x00\x00"

_0e479c_data:
		.ascii  "\x00\x00"

_0e479e_data:
		.ascii  "\x00\x00"

_0e47a0_data:
		.ascii  "\x00\x00"

_0e47a2_data:
		.ascii  "\x00\x00"

_0e47a4_data:
		.ascii  "\x00\x00"

_0e47a6_data:
		.ascii  "\x00\x00"

_0e47a8_data:
		.ascii  "\x00"

_0e47a9_data:
		.ascii  "\x00"

_0e47aa_data:
		.ascii  "\x00"

_0e47ab_data:
		.ascii  "\x00"

_0e47ac_data:
		.fill   0x4

_0e47b0_data:
		.ascii  "\x00"

_0e47b1_data:
		.ascii  "\x00"

_0e47b2_data:
		.ascii  "\x00\x00"

_0e47b4_data:
		.ascii  "\x00\x00"

_0e47b6_data:
		.ascii  "\x00\x00"

_0e47b8_data:
		.ascii  "\x00\x00"

_0e47ba_data:
		.ascii  "\x00\x00"

_0e47bc_data:
		.ascii  "\x00\x00"

_0e47be_data:
		.ascii  "\x00\x00"

_0e47c0_data:
		.ascii  "\x00\x00"

_0e47c2_data:
		.ascii  "\x00\x00"

_0e47c4_data:
		.ascii  "\x00\x00"

_0e47c6_data:
		.ascii  "\x00\x00"

_0e47c8_data:
		.ascii  "\x00\x00"

_0e47ca_data:
		.ascii  "\x00\x00"

_0e47cc_data:
		.ascii  "\x00"

_0e47cd_data:
		.ascii  "\x00"

_0e47ce_data:
		.fill   0x52

_0e4820_data:
		.ascii  "\x00\x00"

_0e4822_data:
		.ascii  "\x00\x00"

_0e4824_data:
		.ascii  "\x00"

_0e4825_data:
		.ascii  "\x00"

_0e4826_data:
		.ascii  "\x00"

_0e4827_data:
		.ascii  "\x00"

_0e4828_data:
		.ascii  "\x00"

_0e4829_data:
		.ascii  "\x00"

_0e482a_data:
		.ascii  "\x00\x00"

_0e482c_data:
		.fill   0x4

_0e4830_data:
		.ascii  "\x00"

_0e4831_data:
		.ascii  "\x00\x00\x00"

_0e4834_data:
		.fill   0x4

_0e4838_data:
		.fill   0x8

_0e4840_data:
		.fill   0x4

_0e4844_data:
		.fill   0x4

_0e4848_data:
		.fill   0x4

_0e484c_data:
		.fill   0xc

_0e4858_data:
		.fill   0x4

_0e485c_data:
		.fill   0x4

_0e4860_data:
		.fill   0x4

_0e4864_data:
		.fill   0x4

_0e4868_data:
		.ascii  "\x00\x00"

_0e486a_data:
		.ascii  "\x00\x00"

_0e486c_data:
		.fill   0x8

_0e4874_data:
		.fill   0x4

_0e4878_data:
		.fill   0x4

_0e487c_data:
		.fill   0xc

_0e4888_data:
		.ascii  "\x00\x00"

_0e488a_data:
		.fill   0x4

_0e488e_data:
		.ascii  "\x00\x00"

_0e4890_data:
		.fill   0x4

_0e4894_data:
		.ascii  "\x00\x00"

_0e4896_data:
		.fill   0x4

_0e489a_data:
		.fill   0x8

_0e48a2_data:
		.fill   0x4

_0e48a6_data:
		.fill   0x5f6

_0e4e9c_data:
		.ascii  "\x00\x00"

_0e4e9e_data:
		.ascii  "\x00\x00"

_0e4ea0_data:
		.fill   0x26

_0e4ec6_data:
		.ascii  "\x00\x00"

_0e4ec8_data:
		.ascii  "\x00\x00"

_0e4eca_data:
		.ascii  "\x00\x00"

_0e4ecc_data:
		.ascii  "\x00\x00"

_0e4ece_data:
		.ascii  "\x00\x00"

_0e4ed0_data:
		.ascii  "\x00\x00"

_0e4ed2_data:
		.ascii  "\x00\x00"

_0e4ed4_data:
		.ascii  "\x00\x00"

_0e4ed6_data:
		.ascii  "\x00\x00"

_0e4ed8_data:
		.fill   0x4

_0e4edc_data:
		.fill   0xda

_0e4fb6_data:
		.ascii  "\x00\x00"

_0e4fb8_data:
		.fill   0x1c

_0e4fd4_data:
		.fill   0xc

_0e4fe0_data:
		.ascii  "\x00\x00"

_0e4fe2_data:
		.ascii  "\x00\x00"

_0e4fe4_data:
		.ascii  "\x00\x00"

_0e4fe6_data:
		.fill   0x17a

_0e5160_data:
		.fill   0x4

_0e5164_data:
		.ascii  "\x00\x00"

_0e5166_data:
		.fill   0x4

_0e516a_data:
		.fill   0x6

_0e5170_data:
		.fill   0x4

_0e5174_data:
		.ascii  "\x00"

_0e5175_data:
		.ascii  "\x00"

_0e5176_data:
		.ascii  "\x00\x00"

_0e5178_data:
		.ascii  "\x00\x00"

_0e517a_data:
		.ascii  "\x00\x00"

_0e517c_data:
		.ascii  "\x00\x00"

_0e517e_data:
		.ascii  "\x00\x00"

_0e5180_data:
		.ascii  "\x00\x00"

_0e5182_data:
		.ascii  "\x00\x00"

_0e5184_data:
		.ascii  "\x00"

_0e5185_data:
		.ascii  "\x00"

_0e5186_data:
		.ascii  "\x00"

_0e5187_data:
		.ascii  "\x00"

_0e5188_data:
		.ascii  "\x00\x00"

_0e518a_data:
		.ascii  "\x00\x00"

_0e518c_data:
		.ascii  "\x00\x00"

_0e518e_data:
		.ascii  "\x00\x00"

_0e5190_data:
		.fill   0x4

_0e5194_data:
		.ascii  "\x00\x00"

_0e5196_data:
		.ascii  "\x00\x00"

_0e5198_data:
		.ascii  "\x00\x00"

_0e519a_data:
		.ascii  "\x00\x00"

_0e519c_data:
		.ascii  "\x00"

_0e519d_data:
		.ascii  "\x00\x00\x00"

_0e51a0_data:
		.fill   0x4

_0e51a4_data:
		.fill   0x4

_0e51a8_data:
		.fill   0x1c0a

_0e6db2_data:
		.ascii  "\x00\x00"

_0e6db4_data:
		.ascii  "\x00\x00"

_0e6db6_data:
		.ascii  "\x00\x00"

_0e6db8_data:
		.fill   0x9c

_0e6e54_data:
		.ascii  "\x00\x00"

_0e6e56_data:
		.ascii  "\x00\x00"

_0e6e58_data:
		.ascii  "\x00\x00"

_0e6e5a_data:
		.ascii  "\x00\x00"

_0e6e5c_data:
		.fill   0x4

_0e6e60_data:
		.fill   0x4

_0e6e64_data:
		.fill   0xc

_0e6e70_data:
		.fill   0x4

_0e6e74_data:
		.fill   0xc

_0e6e80_data:
		.fill   0x4

_0e6e84_data:
		.fill   0x4

_0e6e88_data:
		.fill   0x80

_0e6f08_data:
		.ascii  "\x00\x00\x00"

_0e6f0b_data:
		.ascii  "\x00"

_0e6f0c_data:
		.fill   0x10

_0e6f1c_data:
		.fill   0x4

_0e6f20_data:
		.fill   0x4

_0e6f24_data:
		.fill   0x4

_0e6f28_data:
		.fill   0x4

_0e6f2c_data:
		.fill   0x4

_0e6f30_data:
		.fill   0x4

_0e6f34_data:
		.fill   0x4

_0e6f38_data:
		.fill   0x4

_0e6f3c_data:
		.fill   0x4

_0e6f40_data:
		.fill   0x24

_0e6f64_data:
		.ascii  "\x00\x00"

_0e6f66_data:
		.ascii  "\x00\x00"

_0e6f68_data:
		.fill   0x2008
