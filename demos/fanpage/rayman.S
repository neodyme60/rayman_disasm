.code32
.text
.globl main
main:
		jmp	_07bdd8_func

.data

_010003_data:
		.ascii  "\x90\x90\x90\x90\x90\x90\x90\x90"
		.ascii  "\x90\x90\x90\x90\x90"

.text



_010010_func:
		pusha  
		mov    $_0107bb_func,%edi
		add    $0x00005a,%edi
		mov    $0xfffffec0,%eax

	_01001e_jump:
		mov    %eax,(%edi)
		add    $0x000060,%edi
		add    $0x000004,%eax
		jne    _01001e_jump
		mov    $_090014_data,%edi
		mov    $0x0000c8,%cl

	_01002f_jump:
		movl   $0x00ffff,(%edi)
		movl   $0x000000,0x000004(%edi)
		add    $0x000020,%edi
		dec    %cl
		jne    _01002f_jump
		popa   
		ret    



_010045_func:
		pusha  
		mov    %eax,_09193e_data
		mov    %esi,%eax
		add    $0x000004,%eax
		mov    %eax,_091914_data
		mov    (%esi),%eax
		mov    %eax,_091922_data
		xor    %eax,%eax
		mov    0x00002a(%esi),%al
		sub    0x000024(%esi),%al
		mov    %eax,_09192e_data
		neg    %eax
		mov    %eax,_091932_data
		xor    %eax,%eax
		mov    0x000027(%esi),%al
		sub    0x000025(%esi),%al
		mov    %eax,_091936_data
		neg    %eax
		mov    %eax,_09193a_data
		mov    %esi,%ebx
		mov    $0x000003,%cl
		add    $0x000004,%ebx
		add    $0x000010,%esi
		mov    0x000004(%ebx),%eax
		mov    %eax,%edx

	_010093_jump:
		mov    (%esi),%edi
		cmp    %eax,%edi
		jge    _01009b_jump
		mov    %edi,%eax

	_01009b_jump:
		cmp    %edx,%edi
		jle    _0100a1_jump
		mov    %edi,%edx

	_0100a1_jump:
		add    $0x000008,%esi
		dec    %cl
		jne    _010093_jump
		cmp    $0x0000c8,%eax
		jge    _01263e_jump
		or     %edx,%edx
		js     _01263e_jump
		or     %eax,%eax
		jns    _0100c1_jump
		xor    %eax,%eax

	_0100c1_jump:
		mov    %eax,_090010_data
		cmp    $0x0000c8,%edx
		jb     _0100d3_jump
		mov    $0x0000c7,%edx

	_0100d3_jump:
		sub    %eax,%edx
		inc    %edx
		mov    %edx,_09194a_data
		mov    (%ebx),%esi
		mov    0x000004(%ebx),%ecx
		mov    0x000018(%ebx),%ebp
		mov    0x00001c(%ebx),%edi
		or     %ecx,%ecx
		jns    _0100f3_jump
		or     %edi,%edi
		js     _01022e_jump

	_0100f3_jump:
		cmp    $0x0000c8,%ecx
		jl     _010107_jump
		cmp    $0x0000c8,%edi
		jge    _01022e_jump

	_010107_jump:
		mov    0x000026(%ebx),%ah
		sub    %ebp,%esi
		mov    0x000027(%ebx),%al
		mov    _091932_data,%edx
		sub    %edi,%ecx
		jns    _010129_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000020(%ebx),%ah
		neg    %esi
		mov    0x000021(%ebx),%al
		neg    %edx

	_010129_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0101f9_func
		mov    %al,_010216_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_010223_jump
		mov    %ax,_010198_data
		or     %edx,%edx
		jns    _010162_jump
		sub    $0x000002,%edx

	_010162_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_01021a_jump
		mov    %ax,_0101b0_func
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _0101c6_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
		data16 		.byte 0x0000b8

.data

_010198_data:
		.ascii  "\xff\xff\xf7\xe7\x66\x89\xc2\xc1"
		.ascii  "\xe2\x10\xc1\xe8\x10\x00\xc7\x52"
		.ascii  "\x66\x89\xf0\xc1\xe0\x10\x66\xb8"

_0101b0_data:
		.ascii  "\xff\xff\xf7\xe7\x5a\x66\x89\xc2"
		.ascii  "\xc1\xe8\x10\x66\x01\xc5\x29\xf9"
		.ascii  "\x58\xbf\xac\x26\x00\x00"

_0101c6_data:
		.ascii  "\x57\x01\xcf\x81\xff\x74\x27\x00"
		.ascii  "\x00\x72\x08\x81\xef\x74\x27\x00"
		.ascii  "\x00\x29\xf9\x5f\xc1\xe7\x05"

_0101dd_data:
		.ascii  "\x66\x39\xaf"
		.long   _042a94_jump
		.ascii  "\x76\x14\x66\x89\xaf"
		.long   _042a94_jump
		.ascii  "\x88\xbf"
		.long   _042a9c_jump
		.ascii  "\xc6\x87"
		.long   _042aa4_jump

.text



_0101f9_func:
		add    %ah,0x000039(%esi)
		scas   %es:(%edi),%eax
		cwtl   
		sub    (%eax,%eax,1),%al
		jae    _010217_jump
		mov    %bp,_042a98_jump(%edi)
		mov    %bh,_042aa0_jump(%edi)
		movb   $0x000000,_042aa8_jump(%edi)

	_010217_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _0101dd_jump

	_01022e_jump:
		mov    _091914_data,%ebx
		mov    0x000018(%ebx),%esi
		mov    0x00001c(%ebx),%ecx
		mov    0x000010(%ebx),%ebp
		mov    0x000014(%ebx),%edi
		or     %ecx,%ecx
		jns    _01024c_jump
		or     %edi,%edi
		js     _010387_jump

	_01024c_jump:
		cmp    $0x0000c8,%ecx
		jl     _010260_jump
		cmp    $0x0000c8,%edi
		jge    _010387_jump

	_010260_jump:
		mov    0x000024(%ebx),%al
		sub    %ebp,%esi
		mov    0x000025(%ebx),%ah
		mov    _09193a_data,%edx
		sub    %edi,%ecx
		jns    _010282_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000026(%ebx),%al
		neg    %esi
		mov    0x000027(%ebx),%ah
		neg    %edx

	_010282_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_01034c_jump
		mov    %al,_010369_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_01037c_jump
		mov    %ax,_0102f1_jump
		or     %edx,%edx
		jns    _0102bb_jump
		sub    $0x000002,%edx

	_0102bb_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_010373_jump
		mov    %ax,_010309_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _01031f_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_0102f1_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_010309_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_01031f_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _010332_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_010332_jump:
		pop    %edi
		shl    $0x000005,%edi

	_010336_jump:
		cmp    %bp,_042a94_jump(%edi)
		jbe    _010353_jump
		mov    %bp,_042a94_jump(%edi)
		movb   $0x0000ff,_042a9c_jump(%edi)
		mov    %bh,_042aa4_jump(%edi)

	_010353_jump:
		cmp    %bp,_042a98_jump(%edi)
		jae    _010370_jump
		mov    %bp,_042a98_jump(%edi)
		movb   $0x0000ff,_042aa0_jump(%edi)
		mov    %bh,_042aa8_jump(%edi)

	_010370_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _010336_jump

	_010387_jump:
		mov    _091914_data,%ebx
		mov    0x000010(%ebx),%esi
		mov    0x000014(%ebx),%ecx
		mov    0x000008(%ebx),%ebp
		mov    0x00000c(%ebx),%edi
		or     %ecx,%ecx
		jns    _0103a5_jump
		or     %edi,%edi
		js     _0104e0_jump

	_0103a5_jump:
		cmp    $0x0000c8,%ecx
		jl     _0103b9_jump
		cmp    $0x0000c8,%edi
		jge    _0104e0_jump

	_0103b9_jump:
		mov    0x000023(%ebx),%al
		sub    %ebp,%esi
		mov    0x000022(%ebx),%ah
		mov    _09192e_data,%edx
		sub    %edi,%ecx
		jns    _0103db_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000025(%ebx),%al
		neg    %esi
		mov    0x000024(%ebx),%ah
		neg    %edx

	_0103db_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0104ab_jump
		mov    %al,_0104c8_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_0104d5_jump
		mov    %ax,_01044a_jump
		or     %edx,%edx
		jns    _010414_jump
		sub    $0x000002,%edx

	_010414_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_0104cc_jump
		mov    %ax,_010462_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _010478_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_01044a_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_010462_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_010478_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _01048b_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_01048b_jump:
		pop    %edi
		shl    $0x000005,%edi

	_01048f_jump:
		cmp    %bp,_042a94_jump(%edi)
		jbe    _0104ac_jump
		mov    %bp,_042a94_jump(%edi)
		mov    %bh,_042a9c_jump(%edi)
		movb   $0x0000ff,_042aa4_jump(%edi)

	_0104ac_jump:
		cmp    %bp,_042a98_jump(%edi)
		jae    _0104c9_jump
		mov    %bp,_042a98_jump(%edi)
		mov    %bh,_042aa0_jump(%edi)
		movb   $0x0000ff,_042aa8_jump(%edi)

	_0104c9_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _01048f_jump

	_0104e0_jump:
		mov    _091914_data,%ebx
		mov    (%ebx),%ebp
		mov    0x000004(%ebx),%edi
		mov    0x000008(%ebx),%esi
		mov    0x00000c(%ebx),%ecx
		or     %ecx,%ecx
		jns    _0104fd_jump
		or     %edi,%edi
		js     _010638_jump

	_0104fd_jump:
		cmp    $0x0000c8,%ecx
		jl     _010511_jump
		cmp    $0x0000c8,%edi
		jge    _010638_jump

	_010511_jump:
		mov    0x000020(%ebx),%al
		sub    %ebp,%esi
		mov    0x000021(%ebx),%ah
		mov    _091936_data,%edx
		sub    %edi,%ecx
		jns    _010533_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000022(%ebx),%al
		neg    %esi
		mov    0x000023(%ebx),%ah
		neg    %edx

	_010533_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0105fd_jump
		mov    %al,_01061a_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_01062d_jump
		mov    %ax,_0105a2_jump
		or     %edx,%edx
		jns    _01056c_jump
		sub    $0x000002,%edx

	_01056c_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_010624_jump
		mov    %ax,_0105ba_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _0105d0_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_0105a2_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_0105ba_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_0105d0_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _0105e3_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_0105e3_jump:
		pop    %edi
		shl    $0x000005,%edi

	_0105e7_jump:
		cmp    %bp,_042a94_jump(%edi)
		jbe    _010604_jump
		mov    %bp,_042a94_jump(%edi)
		movb   $0x000000,_042a9c_jump(%edi)
		mov    %bh,_042aa4_jump(%edi)

	_010604_jump:
		cmp    %bp,_042a98_jump(%edi)
		jae    _010621_jump
		mov    %bp,_042a98_jump(%edi)
		movb   $0x000000,_042aa0_jump(%edi)
		mov    %bh,_042aa8_jump(%edi)

	_010621_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _0105e7_jump

	_010638_jump:
		mov    _090010_data,%ebp
		mov    %ebp,%esi
		shl    $0x000002,%esi
		add    %ebp,%esi
		shl    $0x000006,%esi
		shl    $0x000005,%ebp
		add    _09193e_data,%esi
		mov    %esi,_091942_data
		mov    %ebp,_091946_data

	_01065d_jump:
		mov    _091946_data,%ebp
		mov    _090014_data(%ebp),%edi
		movw   $0x00ffff,_090014_data(%ebp)
		mov    _090018_data(%ebp),%ecx
		movw   $0x000000,_090018_data(%ebp)
		cmp    $0x007e40,%edi
		jae    _012621_jump
		cmp    $0x007d00,%ecx
		jb     _012621_jump
		sub    %edi,%ecx
		inc    %ecx
		mov    _090028_data(%ebp),%edx
		mov    _090024_data(%ebp),%esi
		shl    $0x000010,%ecx
		sub    %esi,%edx
		xor    %eax,%eax
		inc    %edx
		shl    $0x000008,%esi
		idiv   %ecx
		mov    %eax,%ebx
		mov    _090020_data(%ebp),%edx
		mov    _09001c_data(%ebp),%eax
		sub    %eax,%edx
		add    %eax,%esi
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,%dx
		shl    $0x000010,%edx
		mov    %bx,%ax
		rol    $0x000010,%eax
		shr    $0x000010,%ebx
		mov    %bl,%dl
		mov    %si,%bx
		xor    %esi,%esi
		shr    $0x000010,%ecx
		sub    $0x007d00,%edi
		jns    _01070b_jump
		mov    %eax,%ebp
		mov    %edx,%esi
		neg    %edi
		sub    %edi,%ecx
		mul    %edi
		add    %eax,%ebx
		adc    %dl,%bh
		mov    %esi,%eax
		mul    %edi
		add    %dl,%bl
		add    %al,%bh
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ebp,%eax
		xor    %edi,%edi

	_01070b_jump:
		mov    %edi,%ebp
		add    %ecx,%edi
		cmp    $0x000140,%edi
		jb     _01071f_jump
		sub    $0x000140,%edi
		sub    %edi,%ecx

	_01071f_jump:
		mov    %ebp,%edi
		add    _091942_data,%edi
		mov    %edi,%ebp
		and    $0x000003,%ebp
		sub    %bp,%cx
		jns    _010738_jump
		add    %bp,%cx
		mov    %ecx,%ebp
		xor    %ecx,%ecx

	_010738_jump:
		add    %ebp,%edi
		push   %ecx
		mov    %bp,%cx
		shl    $0x000005,%cx
		shl    $0x000003,%bp
		sub    %bp,%cx
		sub    $_01079b_func,%ecx
		neg    %ecx
		jmp    *%ecx



_01079b_func:
		pop    %ecx
		push   %ecx
		shr    $0x000002,%ecx
		lea    (%edi,%ecx,4),%edi
		mov    %cx,%bp
		shl    $0x000005,%bp
		shl    $0x000007,%cx
		sub    %bp,%cx
		sub    $_0125bb_jump,%ecx
		neg    %ecx
		jmp    *%ecx



_0107bb_func:
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh

	_0125bb_jump:
		pop    %ecx
		and    $0x000003,%ecx
		add    %ecx,%edi
		mov    %cx,%bp
		shl    $0x000005,%cx
		shl    $0x000003,%bp
		sub    %bp,%cx
		sub    $_012621_jump,%ecx
		neg    %ecx
		jmp    *%ecx

	_012621_jump:
		addl   $0x000140,_091942_data
		addl   $0x000020,_091946_data
		decl   _09194a_data
		jne    _01065d_jump

	_01263e_jump:
		popa   
		ret    



_01268a_func:
		pushaw 
		cld    
		sub    $0x000050,%ebx
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000001,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126a9_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126a9_jump
		pop    %esi
		add    %edx,%esi
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000002,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126d3_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126d3_jump
		pop    %esi
		add    %edx,%esi
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000004,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126fd_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126fd_jump
		pop    %esi
		add    %edx,%esi
		mov    $0x0ab000,%edi
		mov    $0x000008,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_012726_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _012726_jump
		popaw  
		ret    



_012748_func:
		pusha  
		mov    $0x000000,%ah
		int    $0x00001a
		shl    $0x000010,%ecx
		and    $0x00ffff,%edx
		add    %ecx,%edx
		mov    %edx,(%esi)
		popa   
		ret    



_012783_func:
		mov    $0x0003c4,%edx
		mov    $0x000f02,%eax
		out    %ax,(%dx)
		mov    $0x000fa0,%ecx
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		ret    

_012799_switch:
		.long   0

_01279d_switch:
		.long   0


	_0127a1_jump:
		add    %dl,-0x000077(%ebp)
		or     $_01279d_switch,%eax
		mov    %eax,%ebp
		mov    %edx,%ecx
		and    $0x0000ff,%ecx
		mov    %ecx,_012799_switch
		and    $0x00ff00,%edx
		mov    %dh,_0127a1_jump
		mov    $0x000001,%ah
		mov    %edi,%ecx
		and    $0x000003,%ecx
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000001,%ch
		sub    _01279d_switch,%esi
		mov    $0x000002,%al
		out    %ax,(%dx)

	_0127de_jump:
		push   %ecx
		push   %edi
		add    _01279d_switch,%esi
		push   %esi
		push   %ebp

	_0127e8_jump:
		push   %edi
		push   %esi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %esi
		pop    %edi
		add    $0x000050,%edi
		add    _012799_switch,%esi
		dec    %ebp
		jne    _0127e8_jump
		pop    %ebp
		pop    %esi
		pop    %edi
		call   _012b30_func
		mov    _0127a1_jump,%ch
		shl    %ch
		cmp    $0x000010,%ch
		jne    _01282c_jump
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		inc    %esi
		mov    $0x000001,%ch

	_01282c_jump:
		mov    %ch,_0127a1_jump
		pop    %ecx
		shl    %ch
		cmp    $0x000010,%ch
		jne    _0127de_jump
		pop    %ebp
		ret    



_01283c_func:
		push   %dx
		mov    $0x0003c4,%dx
		and    $0x00ffff,%eax
		mov    %al,%ah
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %dx
		ret    



_012850_func:
		push   %ebp
		push   %ebp
		movl   $0x000000,(%esp)
		push   %ecx
		push   %ebx
		mov    %ecx,%ebx
		add    $0x004600,%ebx
		sub    $0x000080,%edx
		mov    $0x000000,%cl
		jmp    _01288b_jump

	_01286d_jump:
		addl   $0x000500,(%esp)
		cmp    %ebx,(%esp)
		jb     _012880_jump
		subl   $0x004600,(%esp)

	_012880_jump:
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _0129ce_jump

	_01288b_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000001,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		jmp    _0128a9_jump

	_0128a7_jump:
		inc    %cl

	_0128a9_jump:
		cmp    $0x000014,%cl
		jge    _0129be_jump
		mov    0x000004(%eax),%di
		and    $0x0000ff,%di
		cmp    $0x000000,%di
		jne    _0129b0_jump
		cmp    $0x000000,%bx
		jne    _012933_jump
		push   %edi
		push   %ecx
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    0x000014(%esp),%ecx
		push   %edx
		mov    0x00001c(%esp),%edx
		push   %eax
		push   %ebx
		push   %edx
		mov    %edi,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		mov    %al,%bl
		mov    %ecx,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		cmp    %bl,%al
		je     _0128ff_jump
		stc    
		jmp    _012900_jump

	_0128ff_jump:
		clc    

	_012900_jump:
		pop    %edx
		pop    %ebx
		pop    %eax
		pop    %edx
		pop    %ecx
		pop    %edi
		jae    _012919_jump
		cmpl   $0x000050,0x000014(%esp)
		je     _01292a_jump
		movl   $0x000050,0x000014(%esp)
		jmp    _012980_jump

	_012919_jump:
		cmpl   $0x000000,0x000014(%esp)
		je     _01292a_jump
		movl   $0x000000,0x000014(%esp)
		jmp    _012980_jump

	_01292a_jump:
		incl   0x00000c(%edx,%ebp,1)
		jmp    _0129b0_jump

	_012933_jump:
		movl   $0x000000,0x000014(%esp)
		push   %edi
		push   %ecx
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    0x000014(%esp),%ecx
		push   %edx
		mov    0x00001c(%esp),%edx
		push   %eax
		push   %ebx
		push   %edx
		mov    %edi,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		mov    %al,%bl
		mov    %ecx,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		cmp    %bl,%al
		je     _01296f_jump
		stc    
		jmp    _012970_jump

	_01296f_jump:
		clc    

	_012970_jump:
		pop    %edx
		pop    %ebx
		pop    %eax
		pop    %edx
		pop    %ecx
		pop    %edi
		jae    _012980_jump
		movl   $0x000050,0x000014(%esp)

	_012980_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		sub    0x00001c(%esp),%edi
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		incl   0x00000c(%edx,%ebp,1)
		jmp    _0129b0_jump

	_0129b0_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _0128a7_jump

	_0129be_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		pop    %ebx
		pop    %ecx
		jmp    _01286d_jump

	_0129ce_jump:
		pop    %ebx
		pop    %ecx
		pop    %ebp
		pop    %ebp
		ret    



_0129d3_func:
		push   %ebp
		push   %ebx
		mov    %ecx,%ebx
		sub    $0x000080,%edx
		mov    $0x000000,%cl
		jmp    _0129ef_jump

	_0129e1_jump:
		add    %ebx,(%esp)
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _012a70_jump

	_0129ef_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000000,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		jmp    _012a0d_jump

	_012a0b_jump:
		inc    %cl

	_012a0d_jump:
		cmp    $0x000014,%cl
		jge    _012a60_jump
		mov    0x000004(%eax),%di
		and    $0x0000ff,%di
		cmp    $0x000000,%di
		je     _012a55_jump
		cmp    $0x000000,%bx
		je     _012a2d_jump

	_012a27_jump:
		incl   0x00000c(%edx,%ebp,1)
		jmp    _012a55_jump

	_012a2d_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		jmp    _012a27_jump

	_012a55_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _012a0b_jump

	_012a60_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		pop    %ebx
		pop    %ecx
		jmp    _0129e1_jump

	_012a70_jump:
		pop    %ebx
		pop    %ebp
		ret    



_012a73_func:
		push   %ebp
		push   %ebx
		mov    %ecx,%ebx
		sub    $0x000080,%edx
		add    $0x000078,%eax
		add    %edi,%eax
		mov    $0x00000e,%cl
		jmp    _012a8e_jump

	_012a86_jump:
		dec    %cl
		je     _012b2d_jump

	_012a8e_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000000,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		add    $0x000006,%eax
		add    $0x000004,%esi
		addl   $0x000004,0x00000c(%esp)
		jmp    _012ab7_jump

	_012ab5_jump:
		inc    %cl

	_012ab7_jump:
		cmp    $0x000013,%cl
		jge    _012b15_jump
		mov    0x000004(%eax),%di
		and    $0x0000ff,%di
		je     _012ad0_jump
		or     %bx,%bx
		je     _012ae0_jump
		incl   0x00000c(%edx,%ebp,1)

	_012ad0_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		addl   $0x000004,0x00000c(%esp)
		jmp    _012ab5_jump

	_012ae0_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		addl   $0x000004,0x000014(%esp)
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		incl   0x00000c(%edx,%ebp,1)
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _012ab5_jump

	_012b15_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		addl   $0x0004b0,0x000008(%esp)
		pop    %ebx
		pop    %ecx
		jmp    _012a86_jump

	_012b2d_jump:
		pop    %ebx
		pop    %ebp
		ret    



_012b30_func:
		shl    %ah
		cmp    $0x000010,%ah
		jne    _012b3a_jump
		inc    %edi
		mov    $0x000001,%ah

	_012b3a_jump:
		out    %ax,(%dx)
		ret    



_012b3d_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012b6d_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		mov    %esi,%edx
		mov    %dl,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012b9e_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000007,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012bce_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000008,(%edi)
		movb   $0x000007,0x000050(%edi)
		call   _012b30_func
		movb   $0x000007,(%edi)
		movb   $0x000006,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012c0e_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x000050(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000006,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012c5b_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000003,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012c8b_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000005,(%edi)
		movb   $0x000007,0x000050(%edi)
		movb   $0x000007,0x0000a0(%edi)
		movb   $0x000005,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000005,(%edi)
		movb   $0x000007,0x000050(%edi)
		movb   $0x000007,0x0000a0(%edi)
		movb   $0x000005,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000005,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012d07_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,0x000050(%edi)
		call   _012b30_func
		movb   $0x000004,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012d40_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000006,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012dbc_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000003,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000002,(%edi)
		movb   $0x000005,0x000050(%edi)
		movb   $0x000003,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000004,(%edi)
		movb   $0x000002,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012e13_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000007,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000007,0x000140(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000008,0x000140(%edi)
		movb   $0x000006,0x000190(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000008,0x000140(%edi)
		movb   $0x000006,0x000190(%edi)
		call   _012b30_func
		movb   $0x000007,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000007,0x000140(%edi)
		call   _012b30_func
		movb   $0x000006,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012eed_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000004,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000003,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		movb   $0x000004,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000002,(%edi)
		movb   $0x000004,0x000050(%edi)
		movb   $0x000003,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000003,(%edi)
		movb   $0x000002,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012fde_func:
		femms  
		or     $0x000008,%al

	_012fe2_jump:
		sgdtl  (%ebx)
		pop    %es



_012fe6_func:
		pusha  
		cmp    $0x000000,%ebx
		jle    _0130ac_jump
		cmp    $0x000000,%ecx
		jle    _0130ac_jump
		shl    $0x000004,%edx
		add    %edx,%edi
		shl    $0x000002,%edx
		add    %edx,%edi
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %edx
		add    %esi,%ecx
		mov    %esi,%eax
		shr    $0x000002,%esi
		and    $0x000003,%eax
		je     _013047_jump
		push   %edi
		push   %ebx
		mov    _012fde_func(%eax),%al
		mov    %ecx,%ebx
		shr    $0x000002,%ebx
		cmp    %esi,%ebx
		jne    _013036_jump
		mov    %ecx,%ebx
		and    $0x000003,%ebx
		mov    _012fe2_jump(%ebx),%ah
		and    %ah,%al

	_013036_jump:
		pop    %ebx
		out    %al,(%dx)
		add    %esi,%edi
		mov    %ebx,%eax

	_01303c_jump:
		movb   $0x000000,(%edi)
		add    $0x000050,%edi
		dec    %eax
		jne    _01303c_jump
		pop    %edi
		inc    %esi

	_013047_jump:
		mov    %ecx,%eax
		shr    $0x000002,%eax
		sub    %esi,%eax
		jl     _0130ac_jump
		je     _01308e_jump
		push   %edi
		push   %ecx
		push   %ebx
		add    %esi,%edi
		mov    %eax,%ecx
		mov    $0x000050,%esi
		mov    $0x00000f,%al
		sub    %ecx,%esi
		out    %al,(%dx)
		xor    %eax,%eax
		push   %edx
		mov    %ecx,%edx
		shr    $0x000002,%ecx
		and    $0x000003,%edx
		jne    _01307d_jump
		mov    %ecx,%edx

	_013072_jump:
		rep stos %eax,%es:(%edi)
		mov    %edx,%ecx
		add    %esi,%edi
		dec    %ebx
		jne    _013072_jump
		jmp    _01308a_jump

	_01307d_jump:
		push   %ecx
		rep stos %eax,%es:(%edi)
		mov    %edx,%ecx
		rep stos %al,%es:(%edi)
		pop    %ecx
		add    %esi,%edi
		dec    %ebx
		jne    _01307d_jump

	_01308a_jump:
		pop    %edx
		pop    %ebx
		pop    %ecx
		pop    %edi

	_01308e_jump:
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		and    $0x000003,%eax
		je     _0130ac_jump
		mov    _012fe2_jump(%eax),%al
		add    %ecx,%edi
		out    %al,(%dx)
		mov    %ebx,%eax

	_0130a3_jump:
		movb   $0x000000,(%edi)
		add    $0x000050,%edi
		dec    %eax
		jne    _0130a3_jump

	_0130ac_jump:
		popa   
		ret    



_0130ae_func:
		push   %ebp
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		pop    %ebp
		pop    %ecx
		push   %edi
		mov    %ecx,%ebx
		inc    %ebx

	_0130de_jump:
		movb   $0x0000ff,(%edi)
		add    $0x000050,%edi
		dec    %ebx
		jne    _0130de_jump
		pop    %edi
		call   _012b30_func
		mov    %ecx,%ebx
		dec    %ebp
		push   %ecx
		mov    %ecx,%ebx
		shl    $0x000006,%ecx
		shl    $0x000004,%ebx
		add    %ecx,%ebx

	_0130fb_jump:
		movb   $0x0000ff,(%edi)
		movb   $0x0000ff,(%edi,%ebx,1)
		call   _012b30_func
		dec    %ebp
		jne    _0130fb_jump
		pop    %ecx
		inc    %ecx

	_01310c_jump:
		movb   $0x0000ff,(%edi)
		add    $0x000050,%edi
		dec    %ecx
		jne    _01310c_jump
		pop    %edi
		pop    %ebp
		ret    



_0131a9_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		jmp    _0131d7_jump

	_0131c6_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _01372f_jump

	_0131d7_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_0131df_jump:
		cmp    $0x000000,%ecx
		je     _013728_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _0131f9_jump
		sub    0x000018(%esp),%esi

	_0131f9_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _0134dd_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _013405_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _013684_jump

	_013405_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _013684_jump

	_0134dd_jump:
		test   $0x000002,%edi
		je     _013684_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_013684_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _013718_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_013718_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _0131df_jump

	_013728_jump:
		pop    %ebp
		pop    %ecx
		jmp    _0131c6_jump

	_01372f_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_013736_func:
		push   %ebp
		mov    %esi,%ebp
		push   %edx
		push   %eax
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		and    $0x0000fc,%al
		or     $0x000001,%al
		out    %al,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		mov    $0x00000f,%ah
		out    %ax,(%dx)
		mov    %ecx,%edi
		mov    $0x0ab000,%esi
		add    $0x000502,%edi
		add    $0x000502,%esi
		mov    $0x0000b8,%ecx

	_01376e_jump:
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		add    $0x00004c,%edi
		add    $0x00004c,%esi
		dec    %ecx
		jne    _01376e_jump
		cli    
		xor    %ecx,%ecx
		jmp    _013791_jump

	_013780_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000c,%cl
		jge    _013850_jump

	_013791_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_013799_jump:
		cmp    $0x000000,%ecx
		je     _013849_jump
		push   %ecx
		mov    0x000000(%ebp),%esi
		mov    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		or     %ecx,%ecx
		je     _01383f_jump
		shl    $0x000002,%ecx
		add    $0x000001,%ecx
		mov    %ecx,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		mov    %eax,%edx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)

	_01383f_jump:
		pop    %ecx
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _013799_jump

	_013849_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013780_jump

	_013850_jump:
		push   %edx
		push   %eax
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		and    $0x0000fc,%al
		out    %al,(%dx)
		pop    %eax
		pop    %edx
		pop    %ebp
		sti    
		ret    



_013864_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		mov    $0x000000,%cl
		jmp    _013894_jump

	_013883_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _013dec_jump

	_013894_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_01389c_jump:
		cmp    $0x000000,%ecx
		je     _013de5_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _0138b6_jump
		sub    0x000018(%esp),%esi

	_0138b6_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _013b9a_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _013ac2_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _013d41_jump

	_013ac2_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _013d41_jump

	_013b9a_jump:
		test   $0x000002,%edi
		je     _013d41_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_013d41_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _013dd5_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_013dd5_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _01389c_jump

	_013de5_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013883_jump

	_013dec_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_013df3_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		mov    $0x000000,%cl
		jmp    _013e23_jump

	_013e12_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000c,%cl
		jge    _01437b_jump

	_013e23_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_013e2b_jump:
		cmp    $0x000000,%ecx
		je     _014374_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _013e45_jump
		sub    0x000018(%esp),%esi

	_013e45_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _014129_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _014051_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _0142d0_jump

	_014051_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _0142d0_jump

	_014129_jump:
		test   $0x000002,%edi
		je     _0142d0_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_0142d0_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _014364_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_014364_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _013e2b_jump

	_014374_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013e12_jump

	_01437b_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_014382_func:
		push   %ebp
		push   %ecx
		push   %ecx
		mov    %ecx,%ebp
		mov    %edx,%esi
		mov    $0x0000f0,%ecx
		movl   $0x00000e,0x000004(%esp)
		jmp    _0143a9_jump

	_014398_jump:
		decl   0x000004(%esp)
		je     _0143e1_jump
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _0143e1_jump
		add    0x000008(%ebx),%edi

	_0143a9_jump:
		push   %ebx
		push   %esi
		xor    %ebx,%ebx
		movl   $0x000014,0x000008(%esp)
		jmp    _0143c3_jump

	_0143b7_jump:
		add    $0x000006,%esi
		add    $0x000004,%edi
		decl   0x000008(%esp)
		je     _0143dd_jump

	_0143c3_jump:
		mov    0x000004(%esi),%bl
		cmp    $0x000002,%bl
		jne    _0143b7_jump
		mov    (%esi),%bx
		mov    0x000000(%ebp,%ebx,4),%edx
		cmp    $0x000000,%edx
		je     _0143b7_jump
		push   %edi
		call   *%edx
		pop    %edi
		jmp    _0143b7_jump

	_0143dd_jump:
		pop    %esi
		pop    %ebx
		jmp    _014398_jump

	_0143e1_jump:
		pop    %ecx
		pop    %ecx
		pop    %ebp
		ret    



_0143e5_func:
		push   %ebp
		push   %ecx
		push   %ecx
		mov    %ecx,%ebp
		mov    %edx,%esi
		mov    $0x0000f0,%ecx
		add    0x000008(%ebx),%edi
		add    $0x000050,%edi
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _014452_jump
		movl   $0x00000c,0x000004(%esp)
		jmp    _01441a_jump

	_014409_jump:
		decl   0x000004(%esp)
		je     _014452_jump
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _014452_jump
		add    0x000008(%ebx),%edi

	_01441a_jump:
		push   %ebx
		push   %esi
		xor    %ebx,%ebx
		movl   $0x000014,0x000008(%esp)
		jmp    _014434_jump

	_014428_jump:
		add    $0x000006,%esi
		add    $0x000004,%edi
		decl   0x000008(%esp)
		je     _01444e_jump

	_014434_jump:
		mov    0x000004(%esi),%bl
		cmp    $0x000002,%bl
		jne    _014428_jump
		mov    (%esi),%bx
		mov    0x000000(%ebp,%ebx,4),%edx
		cmp    $0x000000,%edx
		je     _014428_jump
		push   %edi
		call   *%edx
		pop    %edi
		jmp    _014428_jump

	_01444e_jump:
		pop    %esi
		pop    %ebx
		jmp    _014409_jump

	_014452_jump:
		pop    %ecx
		pop    %ecx
		pop    %ebp
		ret    



_014456_func:
		pusha  
		mov    $0x000f02,%eax
		mov    $0x0003c4,%edx
		sub    $0x000002,%edi
		out    %ax,(%dx)
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %edi,%esi
		mov    $0x000011,%ecx
		add    $0x000050,%esi

	_014477_jump:
		mov    %eax,(%edi)
		mov    %eax,(%esi)
		mov    %eax,0x0000a0(%edi)
		mov    %eax,0x0000a0(%esi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%esi,%ebx,1)
		mov    %eax,0x0000a0(%edi,%ebx,1)
		mov    %eax,0x0000a0(%esi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,(%esi,%ebx,2)
		mov    %eax,0x0000a0(%edi,%ebx,2)
		mov    %eax,0x0000a0(%esi,%ebx,2)
		add    $0x0003c0,%edi
		add    $0x0003c0,%esi
		dec    %ecx
		jne    _014477_jump
		popa   
		ret    



_0144c0_func:
		pusha  
		push   %edi
		mov    $0x000f02,%eax
		mov    $0x0003c4,%edx
		sub    $0x000002,%edi
		out    %ax,(%dx)
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %edi,%esi
		mov    $0x000011,%ecx
		add    $0x000050,%esi

	_0144e2_jump:
		mov    %eax,(%edi)
		mov    %eax,(%esi)
		mov    %eax,0x0000a0(%edi)
		mov    %eax,0x0000a0(%esi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%esi,%ebx,1)
		mov    %eax,0x0000a0(%edi,%ebx,1)
		mov    %eax,0x0000a0(%esi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,(%esi,%ebx,2)
		mov    %eax,0x0000a0(%edi,%ebx,2)
		mov    %eax,0x0000a0(%esi,%ebx,2)
		add    $0x0003c0,%edi
		add    $0x0003c0,%esi
		dec    %ecx
		jne    _0144e2_jump
		pop    %edi
		cld    
		xor    %eax,%eax
		mov    $0x000140,%ecx
		rep stos %eax,%es:(%edi)
		add    $0x003700,%edi
		mov    $0x0000a0,%ecx
		rep stos %eax,%es:(%edi)
		popa   
		ret    



_014543_func:
		push   %edx
		mov    $0x0003d4,%dx
		mov    $0x00000c,%al
		out    %ax,(%dx)
		pop    %edx
		ret    



_01455b_func:
		pusha  
		mov    $0x000013,%ax
		int    $0x000010
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196a_data
		mov    $0x0003ce,%dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196b_data
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196c_data
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196d_data
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196e_data
		mov    $0x0003d4,%dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196f_data
		popa   
		ret    



_0145be_func:
		pusha  
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196a_data,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196b_data,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196c_data,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196d_data,%al
		out    %al,(%dx)
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196e_data,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196f_data,%al
		out    %al,(%dx)
		popa   
		ret    



_014617_func:
		pusha  
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196a_data,%al
		and    $0x0000ef,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196b_data,%al
		and    $0x0000fd,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196c_data,%al
		and    $0x0000f7,%al
		or     $0x000004,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196d_data,%al
		out    %al,(%dx)
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196e_data,%al
		and    $0x0000bf,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196f_data,%al
		or     $0x000040,%al
		out    %al,(%dx)
		popa   
		ret    



_01467c_func:
		pusha  
		mov    $0x000000,%eax
		mov    $0x000050,%ebx
		mov    $0x000140,%ecx
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		popa   
		ret    



_0146c4_func:
		pusha  
		mov    $0x000050,%ebp
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		popa   
		ret    



_014746_func:
		pusha  
		mov    $0x000003,%ax
		int    $0x000010
		popa   
		ret    

_01474f_switch:
		.long   0

_014753_switch:
		.long   0

_014757_switch:
		.long   0

_01475b_switch:
		.long   0

_01475f_switch:
		.long   0

_014763_switch:
		.long   0

_014767_switch:
		.long   0

_01476b_switch:
		.long   0

_01476f_switch:
		.long   0

_014773_switch:
		.long   0

_014777_switch:
		.long   0

_01477b_switch:
		.long   0

_01477f_switch:
		.long   0

_014783_switch:
		.long   0




_014787_func:
		pusha  
		dec    %esi
		mov    %esi,_01476f_switch
		push   %ecx
		push   %edi
		mov    0x000020(%ecx),%ebx
		mov    0x000024(%ecx),%edx
		sar    $0x000002,%ebx
		mov    $0xa1a1a1a1,%eax
		inc    %ebx

	_0147a0_jump:
		mov    %ebx,%ecx
		rep stos %eax,%es:(%edi)
		dec    %edx
		jne    _0147a0_jump
		pop    %edi
		pop    %ecx
		mov    (%ecx),%eax
		mov    0x000004(%ecx),%ebx
		mov    %eax,_01474f_switch
		mov    %ebx,_014753_switch
		mov    0x000008(%ecx),%eax
		mov    0x00000c(%ecx),%ebx
		mov    %eax,_014757_switch
		mov    %ebx,_01475b_switch
		mov    0x000010(%ecx),%eax
		mov    0x000014(%ecx),%ebx
		mov    %eax,_01475f_switch
		mov    %ebx,_014763_switch
		mov    0x000018(%ecx),%eax
		mov    0x00001c(%ecx),%ebx
		mov    %eax,_014767_switch
		mov    %ebx,_01476b_switch
		mov    %ebx,%edx
		add    %eax,%edx
		mov    %edx,_014783_switch
		mov    0x00002c(%ecx),%ebx
		mov    0x000030(%ecx),%eax
		mov    %ebx,_01477f_switch
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _014783_switch
		mov    %eax,_01477b_switch
		mov    _01476f_switch,%esi
		add    0x000028(%ecx),%edi
		mov    _014757_switch,%eax
		mov    _01475b_switch,%ebx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %edx,%edx
		cmp    %ebx,%eax
		jbe    _01490b_jump
		mov    _01476b_switch,%ebx
		push   %eax
		mov    _01477f_switch,%eax
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _014757_switch
		mov    %eax,_014777_switch
		mov    %eax,_014773_switch
		pop    %eax
		xor    %edx,%edx

	_01485a_jump:
		push   %ecx
		push   %edi
		push   %ebp
		push   %ebx
		push   %edx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %ebx,%ebx

	_014865_jump:
		push   %ebx
		shr    $0x000010,%ebx
		mov    (%esi,%ebx,1),%edx
		inc    %ebp
		pop    %ebx
		cmpb   $0x0000a1,(%edi)
		jne    _014875_jump
		mov    %dh,(%edi)

	_014875_jump:
		add    _014777_switch,%ebx
		add    _01475b_switch,%ecx
		cmp    %eax,%ebp
		jge    _0148a1_jump
		add    _01474f_switch,%edi
		cmp    _014757_switch,%ecx
		jbe    _014865_jump
		add    _014753_switch,%edi
		sub    _014757_switch,%ecx
		jmp    _014865_jump

	_0148a1_jump:
		pop    %edx
		pop    %ebx
		pop    %ebp
		pop    %edi
		pop    %ecx
		inc    %ebp
		mov    _01476f_switch,%esi
		add    _014767_switch,%ecx
		add    _014763_switch,%edi
		add    _01477b_switch,%edx
		push   %edx
		shr    $0x000010,%edx

	_0148c3_jump:
		je     _0148ce_jump
		add    _01477f_switch,%esi
		dec    %edx
		jmp    _0148c3_jump

	_0148ce_jump:
		mov    _014773_switch,%edx
		mov    %edx,_014777_switch
		pop    %edx
		cmp    %ebx,%ebp
		jge    _0149e0_jump
		cmp    $0x000000,%ecx
		jle    _01485a_jump
		add    _01475f_switch,%edi
		dec    %ebp
		sub    _014783_switch,%ecx
		sub    _014763_switch,%edi
		subl   $0x000040,_014777_switch
		jmp    _01485a_jump

	_01490b_jump:
		mov    _01477f_switch,%eax
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _01475b_switch
		mov    %eax,_014777_switch
		mov    %eax,_014773_switch
		xor    %edx,%edx
		mov    _014767_switch,%ebx
		mov    _01475b_switch,%eax

	_014933_jump:
		push   %ecx
		push   %edi
		push   %ebp
		push   %ebx
		push   %edx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %ebx,%ebx

	_01493e_jump:
		push   %ebx
		shr    $0x000010,%ebx
		mov    (%esi,%ebx,1),%edx
		inc    %ebp
		pop    %ebx
		cmpb   $0x000081,(%edi)
		jne    _01494e_jump
		mov    %dh,(%edi)

	_01494e_jump:
		add    _014777_switch,%ebx
		add    _014757_switch,%ecx
		cmp    %eax,%ebp
		jge    _014977_jump
		add    _014753_switch,%edi
		cmp    $0x000000,%ecx
		jle    _01493e_jump
		add    _01474f_switch,%edi
		sub    _01475b_switch,%ecx
		jmp    _01493e_jump

	_014977_jump:
		pop    %edx
		pop    %ebx
		pop    %ebp
		pop    %edi
		pop    %ecx
		inc    %ebp
		mov    _01476f_switch,%esi
		add    _01476b_switch,%ecx
		add    _01475f_switch,%edi
		add    _01477b_switch,%edx
		push   %edx
		shr    $0x000010,%edx

	_014999_jump:
		je     _0149a4_jump
		add    _01477f_switch,%esi
		dec    %edx
		jmp    _014999_jump

	_0149a4_jump:
		mov    _014773_switch,%edx
		mov    %edx,_014777_switch
		pop    %edx
		cmp    %ebx,%ebp
		jge    _0149e0_jump
		cmp    _014767_switch,%ecx
		jle    _014933_jump
		add    _014763_switch,%edi
		dec    %ebp
		sub    _014783_switch,%ecx
		sub    _01475f_switch,%edi
		subl   $0x000040,_014777_switch
		jmp    _014933_jump

	_0149e0_jump:
		popa   
		ret    



_014a16_func:
		push   %ecx
		mov    $0x003e80,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %ecx
		ret    



_014a20_func:
		imul   $0x000180,%ebx,%ebx
		add    %ebx,%edi
		add    %eax,%edi
		movw   $0x000c00,0x000001(%edi)
		movl   $0xc0e0a00,0x000180(%edi)
		movl   $0x0a0900,0x000300(%edi)
		movw   $0x000000,0x000481(%edi)
		ret    



_014a4e_func:
		pusha  
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %eax,%edi
		mov    $0x000000,%eax
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_014a65_jump:
		push   %ecx
		mov    %edx,%ecx
		test   $0x000001,%ecx
		je     _014a72_jump
		stos   %al,%es:(%edi)
		dec    %ecx

	_014a72_jump:
		test   $0x000002,%ecx
		je     _014a7f_jump
		stos   %ax,%es:(%edi)
		sub    $0x000002,%ecx

	_014a7f_jump:
		sar    $0x000002,%ecx
		rep stos %eax,%es:(%edi)
		add    %ebx,%edi
		pop    %ecx
		loop   _014a65_jump
		popa   
		ret    



_014a8b_func:
		cmp    $0x000002,%eax
		je     _014ad0_jump
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %esi,%edi
		mov    %edi,%esi
		add    $0x000141,%esi
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_014aa9_jump:
		push   %ecx
		mov    %edx,%ecx

	_014aac_jump:
		mov    (%esi),%al
		mov    %al,%ah
		and    $0x0000e0,%ah
		sub    $0x000005,%al
		xor    %al,%ah
		and    $0x0000e0,%ah
		je     _014ac0_jump
		mov    %ah,%al
		and    $0x0000e0,%al

	_014ac0_jump:
		mov    %al,(%edi)
		inc    %edi
		inc    %esi
		dec    %ecx
		jne    _014aac_jump
		add    %ebx,%edi
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _014aa9_jump
		ret    

	_014ad0_jump:
		add    %ecx,%ebx
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %edx,%edi
		add    %esi,%edi
		sub    $0x000141,%edi
		mov    %edi,%esi
		sub    $0x000141,%esi
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_014af3_jump:
		push   %ecx
		mov    %edx,%ecx

	_014af6_jump:
		mov    (%esi),%al
		mov    %al,%ah
		and    $0x0000e0,%ah
		add    $0x000005,%al
		xor    %al,%ah
		and    $0x0000e0,%ah
		je     _014b0a_jump
		mov    %ah,%al
		or     $0x00001f,%al

	_014b0a_jump:
		mov    %al,(%edi)
		dec    %edi
		dec    %esi
		dec    %ecx
		jne    _014af6_jump
		sub    %ebx,%edi
		sub    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _014af3_jump
		ret    



_014b1a_func:
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %esi,%edi
		dec    %edx
		mov    %ecx,%ebx
		push   %edi

	_014b28_jump:
		mov    %al,(%edi)
		add    $0x000140,%edi
		dec    %ecx
		jne    _014b28_jump
		mov    %edx,%ecx
		sub    $0x000140,%edi
		inc    %edi
		xchg   %al,%ah
		rep stos %al,%es:(%edi)
		add    $0x00013f,%edi
		sub    %edx,%edi
		mov    %edx,%ecx
		inc    %ecx
		rep stos %al,%es:(%edi)
		pop    %edi
		xchg   %al,%ah
		mov    %edx,%ecx
		inc    %ecx
		rep stos %al,%es:(%edi)
		mov    %ebx,%ecx
		dec    %ecx
		mov    %ah,%al
		add    $0x00013f,%edi

	_014b60_jump:
		mov    %al,(%edi)
		mov    %al,-0x00013f(%edi)
		add    $0x000140,%edi
		dec    %ecx
		jne    _014b60_jump
		mov    %al,-0x00013f(%edi)
		ret    



_014b78_func:
		imul   0x000004(%esp),%ebx
		add    %ebx,%esi
		add    %eax,%esi
		imul   $0x000140,%edx,%edx
		add    %edx,%edi
		add    %ecx,%edi
		mov    $0x000140,%ebx
		sub    0x000008(%esp),%ebx
		mov    0x000004(%esp),%edx
		sub    0x000008(%esp),%edx
		mov    0x00000c(%esp),%eax

	_014ba0_jump:
		mov    0x000008(%esp),%ecx
		test   $0x000001,%ecx
		je     _014bae_jump
		movsb  %ds:(%esi),%es:(%edi)
		dec    %ecx

	_014bae_jump:
		test   $0x000002,%ecx
		je     _014bbb_jump
		movsw  %ds:(%esi),%es:(%edi)
		sub    $0x000002,%ecx

	_014bbb_jump:
		sar    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %ebx,%edi
		add    %edx,%esi
		dec    %eax
		jne    _014ba0_jump
		ret    $0x00000c



_014bca_func:
		push   %ecx
		push   %eax
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    %esi,%edi
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		pop    %eax
		pop    %ecx
		ret    

	_014be5_jump:
		inc    %eax
		add    %eax,(%eax)
	_014be9_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %al,0x000001(%eax)
		add    %al,(%eax)



_014bed_func:
		push   %ecx
		push   %eax
		mov    $0x003e80,%ecx
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		pop    %eax
		pop    %ecx
		ret    



_014bfb_func:
		pusha  
		sub    $0x000004,%esp
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_014c09_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _014be5_jump,%ebx
		add    _014be9_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _014c09_jump
		add    $0x000004,%esp
		popa   
		ret    



_014c26_func:
		pusha  
		mov    $0x000140,%ebx
		lea    0x000140(%edx),%eax
		shr    %ecx

	_014c34_jump:
		movl   $0x000000,(%edi)
		movl   $0x000000,(%edi,%edx,1)
		mov    %edi,%esi
		movl   $0x000000,(%edi,%ebx,1)
		movl   $0x000000,(%edi,%eax,1)
		dec    %ecx
		lea    (%esi,%ebx,2),%edi
		jne    _014c34_jump
		popa   
		ret    



_014c59_func:
		pusha  
		cmp    $0x000000,%ecx
		jle    _014cb2_jump
		cmp    $0x000000,%ebx
		jle    _014cb2_jump
		sub    $0x000008,%esp
		mov    %ebx,0x000004(%esp)
		mov    %edx,%eax
		mov    %ecx,(%esp)
		mov    %esi,%ebp
		shrl   $0x000003,(%esp)
		and    $0x000007,%ecx
		je     _014c7e_jump
		incl   (%esp)

	_014c7e_jump:
		mov    %edi,%ebx
		mov    (%esp),%ecx
		push   %ebx
		push   %edx

	_014c85_jump:
		mov    (%esi),%edx
		mov    0x000004(%esi),%ebx
		mov    %edx,(%edi)
		mov    %ebx,0x000004(%edi)
		add    $0x000008,%esi
		add    $0x000008,%edi
		sub    $0x000001,%ecx
		jne    _014c85_jump
		pop    %edx
		pop    %ebx
		lea    0x000000(%ebp,%edx,1),%esi
		lea    (%edx,%eax,1),%edx
		lea    0x000140(%ebx),%edi
		decl   0x000004(%esp)
		jne    _014c7e_jump
		add    $0x000008,%esp

	_014cb2_jump:
		popa   
		ret    



_014dc3_func:
		pusha  
		mov    0x000200(%esi),%eax
		sub    $0x000004,%esp
		movl   $0x000004,(%esp)

	_014dd4_jump:
		test   $0x40000000,%eax
		jne    _014e1f_jump
		test   $0x80000000,%eax
		jne    _014f32_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_014e1f_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		test   $0x10000000,%eax
		jne    _014e73_jump
		test   $0x20000000,%eax
		jne    _014f4d_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_014e73_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		test   $0x4000000,%eax
		jne    _014ec7_jump
		test   $0x8000000,%eax
		jne    _014f68_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_014ec7_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		test   $0x1000000,%eax
		jne    _014f1b_jump
		test   $0x2000000,%eax
		jne    _014f83_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_014f1b_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		shl    $0x000008,%eax
		decl   (%esp)
		jne    _014dd4_jump
		jmp    _014f9b_jump

	_014f32_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _014e1f_jump

	_014f4d_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _014e73_jump

	_014f68_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _014ec7_jump

	_014f83_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _014f1b_jump

	_014f9b_jump:
		add    $0x000004,%esp
		popa   
		ret    



_014fa0_func:
		pusha  
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		mov    0x000010(%esi),%ebx
		mov    0x000014(%esi),%ecx
		mov    0x000018(%esi),%edx
		mov    0x00001c(%esi),%ebp
		mov    %ebx,0x000140(%edi)
		mov    %ecx,0x000144(%edi)
		mov    %edx,0x000148(%edi)
		mov    %ebp,0x00014c(%edi)
		mov    0x000020(%esi),%ebx
		mov    0x000024(%esi),%ecx
		mov    0x000028(%esi),%edx
		mov    0x00002c(%esi),%ebp
		mov    %ebx,0x000280(%edi)
		mov    %ecx,0x000284(%edi)
		mov    %edx,0x000288(%edi)
		mov    %ebp,0x00028c(%edi)
		mov    0x000030(%esi),%ebx
		mov    0x000034(%esi),%ecx
		mov    0x000038(%esi),%edx
		mov    0x00003c(%esi),%ebp
		mov    %ebx,0x0003c0(%edi)
		mov    %ecx,0x0003c4(%edi)
		mov    %edx,0x0003c8(%edi)
		mov    %ebp,0x0003cc(%edi)
		mov    0x000040(%esi),%ebx
		mov    0x000044(%esi),%ecx
		mov    0x000048(%esi),%edx
		mov    0x00004c(%esi),%ebp
		mov    %ebx,0x000500(%edi)
		mov    %ecx,0x000504(%edi)
		mov    %edx,0x000508(%edi)
		mov    %ebp,0x00050c(%edi)
		mov    0x000050(%esi),%ebx
		mov    0x000054(%esi),%ecx
		mov    0x000058(%esi),%edx
		mov    0x00005c(%esi),%ebp
		mov    %ebx,0x000640(%edi)
		mov    %ecx,0x000644(%edi)
		mov    %edx,0x000648(%edi)
		mov    %ebp,0x00064c(%edi)
		mov    0x000060(%esi),%ebx
		mov    0x000064(%esi),%ecx
		mov    0x000068(%esi),%edx
		mov    0x00006c(%esi),%ebp
		mov    %ebx,0x000780(%edi)
		mov    %ecx,0x000784(%edi)
		mov    %edx,0x000788(%edi)
		mov    %ebp,0x00078c(%edi)
		mov    0x000070(%esi),%ebx
		mov    0x000074(%esi),%ecx
		mov    0x000078(%esi),%edx
		mov    0x00007c(%esi),%ebp
		mov    %ebx,0x0008c0(%edi)
		mov    %ecx,0x0008c4(%edi)
		mov    %edx,0x0008c8(%edi)
		mov    %ebp,0x0008cc(%edi)
		mov    0x000080(%esi),%ebx
		mov    0x000084(%esi),%ecx
		mov    0x000088(%esi),%edx
		mov    0x00008c(%esi),%ebp
		mov    %ebx,0x000a00(%edi)
		mov    %ecx,0x000a04(%edi)
		mov    %edx,0x000a08(%edi)
		mov    %ebp,0x000a0c(%edi)
		mov    0x000090(%esi),%ebx
		mov    0x000094(%esi),%ecx
		mov    0x000098(%esi),%edx
		mov    0x00009c(%esi),%ebp
		mov    %ebx,0x000b40(%edi)
		mov    %ecx,0x000b44(%edi)
		mov    %edx,0x000b48(%edi)
		mov    %ebp,0x000b4c(%edi)
		mov    0x0000a0(%esi),%ebx
		mov    0x0000a4(%esi),%ecx
		mov    0x0000a8(%esi),%edx
		mov    0x0000ac(%esi),%ebp
		mov    %ebx,0x000c80(%edi)
		mov    %ecx,0x000c84(%edi)
		mov    %edx,0x000c88(%edi)
		mov    %ebp,0x000c8c(%edi)
		mov    0x0000b0(%esi),%ebx
		mov    0x0000b4(%esi),%ecx
		mov    0x0000b8(%esi),%edx
		mov    0x0000bc(%esi),%ebp
		mov    %ebx,0x000dc0(%edi)
		mov    %ecx,0x000dc4(%edi)
		mov    %edx,0x000dc8(%edi)
		mov    %ebp,0x000dcc(%edi)
		mov    0x0000c0(%esi),%ebx
		mov    0x0000c4(%esi),%ecx
		mov    0x0000c8(%esi),%edx
		mov    0x0000cc(%esi),%ebp
		mov    %ebx,0x000f00(%edi)
		mov    %ecx,0x000f04(%edi)
		mov    %edx,0x000f08(%edi)
		mov    %ebp,0x000f0c(%edi)
		mov    0x0000d0(%esi),%ebx
		mov    0x0000d4(%esi),%ecx
		mov    0x0000d8(%esi),%edx
		mov    0x0000dc(%esi),%ebp
		mov    %ebx,0x001040(%edi)
		mov    %ecx,0x001044(%edi)
		mov    %edx,0x001048(%edi)
		mov    %ebp,0x00104c(%edi)
		mov    0x0000e0(%esi),%ebx
		mov    0x0000e4(%esi),%ecx
		mov    0x0000e8(%esi),%edx
		mov    0x0000ec(%esi),%ebp
		mov    %ebx,0x001180(%edi)
		mov    %ecx,0x001184(%edi)
		mov    %edx,0x001188(%edi)
		mov    %ebp,0x00118c(%edi)
		mov    0x0000f0(%esi),%ebx
		mov    0x0000f4(%esi),%ecx
		mov    0x0000f8(%esi),%edx
		mov    0x0000fc(%esi),%ebp
		mov    %ebx,0x0012c0(%edi)
		mov    %ecx,0x0012c4(%edi)
		mov    %edx,0x0012c8(%edi)
		mov    %ebp,0x0012cc(%edi)
		popa   
		ret    

_015235_switch:
		.long   0




_015239_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_015235_switch
		cmp    _0cc5ac_data,%eax
		jl     _015288_jump
		add    %eax,%edx
		cmp    _0cc5a8_data,%edx
		ja     _015271_jump
		mov    $0x000004,%cl

	_015257_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0cc5b4_data,%ebx
		jl     _0152c1_jump

	_015263_jump:
		add    %ebx,%edx
		cmp    _0cc5b0_data,%edx
		ja     _0152ad_jump

	_01526d_jump:
		clc    
		ret    

	_01526f_jump:
		stc    
		ret    

	_015271_jump:
		cmp    _0cc5a8_data,%eax
		jae    _01526f_jump
		mov    _0cc5a8_data,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _01530e_jump

	_015288_jump:
		sub    _0cc5ac_data,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _01526f_jump
		and    $0x00fffc,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		lea    (%esi,%eax,1),%esi
		lea    (%edi,%eax,1),%edi
		mov    _0cc5ac_data,%eax
		shr    $0x000002,%cl
		jmp    _015257_jump

	_0152ad_jump:
		cmp    _0cc5b0_data,%ebx
		jae    _01526f_jump
		mov    _0cc5b0_data,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _01526d_jump

	_0152c1_jump:
		add    %ebx,%edx
		cmp    _0cc5b4_data,%edx
		jle    _01526f_jump
		xor    %edx,%edx
		sub    _0cc5b4_data,%ebx
		mov    %ch,%dl
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _015235_switch,%eax
		mul    %bx
		add    %eax,%esi
		mov    _014be5_jump,%eax
		mul    %bx
		add    %eax,%edi

	_0152f6_jump:
		shll   $0x000002,0x000008(%esp)
		dec    %ebx
		jne    _0152f6_jump
		pop    %eax
		mov    _0cc5b4_data,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _015263_jump

	_01530e_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		shr    $0x000002,%cl
		and    $0x000003,%edx
		je     _015257_jump
		inc    %cl
		jmp    _015257_jump



_015325_func:
		pusha  
		mov    $0x001010,%ecx
		sub    $0x000005,%esp
		mov    0x000200(%esi),%ebp
		mov    %ebp,(%esp)
		call   _015239_func
		jb     _0154b8_jump
		mov    (%esp),%eax
		mov    %ch,0x000004(%esp)
		cmp    $0x000003,%cl
		je     _0153da_jump
		cmp    $0x000002,%cl
		je     _01543b_jump
		cmp    $0x000001,%cl
		je     _015484_jump

	_015364_jump:
		test   $0x40000000,%eax
		jne    _015388_jump
		test   $0x80000000,%eax
		je     _01539f_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)

	_015388_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _015364_jump
		jmp    _0154b8_jump

	_01539f_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)
		jmp    _015388_jump

	_0153da_jump:
		test   $0x40000000,%eax
		jne    _0153f8_jump
		test   $0x80000000,%eax
		je     _01540f_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)

	_0153f8_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _0153da_jump
		jmp    _0154b8_jump

	_01540f_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x000008(%esi),%ebx
		and    %ecx,0x000008(%edi)
		or     %ebx,0x000008(%edi)
		jmp    _0153f8_jump

	_01543b_jump:
		test   $0x40000000,%eax
		jne    _015453_jump
		test   $0x80000000,%eax
		je     _015467_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)

	_015453_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _01543b_jump
		jmp    _0154b8_jump

	_015467_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		jmp    _015453_jump

	_015484_jump:
		test   $0x40000000,%eax
		jne    _015496_jump
		test   $0x80000000,%eax
		je     _0154aa_jump
		mov    (%esi),%ebx
		mov    %ebx,(%edi)

	_015496_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _015484_jump
		jmp    _0154b8_jump

	_0154aa_jump:
		mov    0x000100(%esi),%ecx
		mov    (%esi),%ebx
		and    %ecx,(%edi)
		or     %ebx,(%edi)
		jmp    _015496_jump

	_0154b8_jump:
		add    $0x000005,%esp
		popa   
		ret    



_0154bd_func:
		pusha  
		mov    $0x001010,%ecx
		sub    $0x000005,%esp
		movl   $0x000000,(%esp)
		call   _015239_func
		jb     _015563_jump
		mov    %ch,0x000004(%esp)
		cmp    $0x000003,%cl
		je     _015512_jump
		cmp    $0x000002,%cl
		je     _015533_jump
		cmp    $0x000001,%cl
		je     _01554e_jump

	_0154eb_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _0154eb_jump
		jmp    _015563_jump

	_015512_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _015512_jump
		jmp    _015563_jump

	_015533_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _015533_jump
		jmp    _015563_jump

	_01554e_jump:
		mov    (%esi),%ebx
		mov    %ebx,(%edi)
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _01554e_jump
		jmp    _015563_jump

	_015563_jump:
		add    $0x000005,%esp
		popa   
		ret    



_015568_func:
		pusha  
		add    _091b00_data(,%ebx,4),%eax
		mov    %esi,%edx
		mov    %dl,(%edi,%eax,1)
		popa   
		ret    

_015577_switch:
		.long   0

_01557b_switch:
		.long   0

_01557f_switch:
		.long   0

_015583_switch:
		.long   0




_015587_func:
		mov    %eax,_015577_switch
		mov    %ebx,_01557b_switch
		mov    %ecx,_01557f_switch
		mov    %edx,_015583_switch
		ret    



_01559f_func:
		push   %eax
		push   %edi
		cmp    _01557f_switch,%eax
		jl     _0155cc_jump
		cmp    _015583_switch,%eax
		ja     _0155cc_jump
		cmp    _015577_switch,%ebx
		jl     _0155cc_jump
		cmp    _01557b_switch,%ebx
		ja     _0155cc_jump
		add    _091b00_data(,%ebx,4),%eax
		movb   $0x000005,(%edi,%eax,1)

	_0155cc_jump:
		pop    %edi
		pop    %eax
		ret    



_0155cf_func:
		push   %eax
		push   %edi
		cmp    _01557f_switch,%eax
		jl     _0155fc_jump
		cmp    _015583_switch,%eax
		ja     _0155fc_jump
		cmp    _015577_switch,%ebx
		jl     _0155fc_jump
		cmp    _01557b_switch,%ebx
		ja     _0155fc_jump
		add    _091b00_data(,%ebx,4),%eax
		movb   $0x000007,(%edi,%eax,1)

	_0155fc_jump:
		pop    %edi
		pop    %eax
		ret    



_0155ff_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _015638_jump
		cmp    _015583_switch,%eax
		ja     _015638_jump
		cmp    _015577_switch,%ebx
		jl     _015638_jump
		cmp    _01557b_switch,%ebx
		ja     _015638_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000807,(%edi)
		movw   $0x000706,0x000140(%edi)

	_015638_jump:
		pop    %eax
		pop    %edi
		ret    



_01563b_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _015681_jump
		cmp    _015583_switch,%eax
		ja     _015681_jump
		cmp    _015577_switch,%ebx
		jl     _015681_jump
		cmp    _01557b_switch,%ebx
		ja     _015681_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000608,0x000140(%edi)
		movb   $0x000006,0x000142(%edi)
		movb   $0x000006,0x000001(%edi)
		movb   $0x000006,0x000281(%edi)

	_015681_jump:
		pop    %eax
		pop    %edi
		ret    



_015684_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _0156b1_jump
		cmp    _015583_switch,%eax
		ja     _0156b1_jump
		cmp    _015577_switch,%ebx
		jl     _0156b1_jump
		cmp    _01557b_switch,%ebx
		ja     _0156b1_jump
		add    _091b00_data(,%ebx,4),%eax
		movb   $0x000003,(%edi,%eax,1)

	_0156b1_jump:
		pop    %eax
		pop    %edi
		ret    



_0156b4_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _015702_jump
		cmp    _015583_switch,%eax
		ja     _015702_jump
		cmp    _015577_switch,%ebx
		jl     _015702_jump
		cmp    _01557b_switch,%ebx
		ja     _015702_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000505,0x000001(%edi)
		movl   $0x5070705,0x000140(%edi)
		movl   $0x5070705,0x000280(%edi)
		movw   $0x000505,0x0003c1(%edi)

	_015702_jump:
		pop    %eax
		pop    %edi
		ret    



_015705_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _01573b_jump
		cmp    _015583_switch,%eax
		ja     _01573b_jump
		cmp    _015577_switch,%ebx
		jl     _01573b_jump
		cmp    _01557b_switch,%ebx
		ja     _01573b_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movb   $0x000005,0x000140(%edi)
		movb   $0x000004,0x000001(%edi)

	_01573b_jump:
		pop    %eax
		pop    %edi
		ret    



_01573e_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _01578c_jump
		cmp    _015583_switch,%eax
		ja     _01578c_jump
		cmp    _015577_switch,%ebx
		jl     _01578c_jump
		cmp    _01557b_switch,%ebx
		ja     _01578c_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000606,0x000001(%edi)
		movl   $0x6080806,0x000140(%edi)
		movl   $0x6080806,0x000280(%edi)
		movw   $0x000606,0x0003c1(%edi)

	_01578c_jump:
		pop    %eax
		pop    %edi
		ret    



_01578f_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _0157d9_jump
		cmp    _015583_switch,%eax
		ja     _0157d9_jump
		cmp    _015577_switch,%ebx
		jl     _0157d9_jump
		cmp    _01557b_switch,%ebx
		ja     _0157d9_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000204,0x000001(%edi)
		movw   $0x000305,0x000140(%edi)
		movb   $0x000002,0x000142(%edi)
		movw   $0x000603,0x000280(%edi)

	_0157d9_jump:
		pop    %eax
		pop    %edi
		ret    



_0157dc_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _015850_jump
		cmp    _015583_switch,%eax
		ja     _015850_jump
		cmp    _015577_switch,%ebx
		jl     _015850_jump
		cmp    _01557b_switch,%ebx
		ja     _015850_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000606,0x000002(%edi)
		movl   $0x7080807,0x000141(%edi)
		movl   $0x8080806,0x000280(%edi)
		movl   $0x8080806,0x0003c0(%edi)
		movl   $0x7080807,0x000501(%edi)
		movw   $0x000606,0x000642(%edi)
		movw   $0x000608,0x000284(%edi)
		movw   $0x000608,0x0003c4(%edi)

	_015850_jump:
		pop    %eax
		pop    %edi
		ret    



_015853_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _0158ad_jump
		cmp    _015583_switch,%eax
		ja     _0158ad_jump
		cmp    _015577_switch,%ebx
		jl     _0158ad_jump
		cmp    _01557b_switch,%ebx
		ja     _0158ad_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000203,0x000002(%edi)
		movb   $0x000003,0x000141(%edi)
		movw   $0x000402,0x000142(%edi)
		movw   $0x000405,0x000280(%edi)
		movb   $0x000003,0x000282(%edi)
		movw   $0x000604,0x0003c0(%edi)

	_0158ad_jump:
		pop    %eax
		pop    %edi
		ret    

	_0158b0_jump:
		inc    %eax
		add    %eax,(%eax)
	_0158b4_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %al,0x000001(%eax)
		add    %al,(%eax)

_0158b8_switch:
		.long   0




_0158bc_func:
		pusha  
		cli    
		cld    
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0ced4a_data
		sbbw   $0x000000,_0ced4a_data
		shr    %al
		movw   $0x000001,_0ced4c_data
		sbbw   $0x000000,_0ced4c_data
		shr    %al
		movw   $0x000001,_0ced44_data
		sbbw   $0x000000,_0ced44_data
		shr    %al
		movw   $0x000001,_0ced46_data
		sbbw   $0x000000,_0ced46_data
		mov    _095b9c_data,%ax
		cmp    $0x000001,%ax
		je     _01598d_jump
		and    $0x000003,%ebx
		jne    _015971_jump
		movw   $0x000000,_0cec9e_data
		movw   $0x000000,_0cec9c_data
		mov    $0x0007d0,%ebx
		call   _016e51_func
		mov    %eax,_0158b8_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_01594a_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0cec9e_data,%ax
		je     _015990_jump

	_015959_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0cec9c_data,%ax
		je     _0159a3_jump

	_015967_jump:
		dec    %ebx
		je     _015971_jump
		and    $0x000003,%ebp
		jne    _01594a_jump
		jmp    _01598d_jump

	_015971_jump:
		mov    _0ceca6_data,%bx
		mov    %bx,_0cec9e_data
		mov    _0ceca4_data,%bx
		mov    %bx,_0cec9c_data

	_01598d_jump:
		sti    
		popa   
		ret    

	_015990_jump:
		call   _016e51_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cec9e_data
		jmp    _015959_jump

	_0159a3_jump:
		call   _016e51_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cec9c_data
		jmp    _015967_jump



_0159b6_func:
		pusha  
		cli    
		cld    
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0ced44_data
		sbbw   $0x000000,_0ced44_data
		shr    %al
		movw   $0x000001,_0ced46_data
		sbbw   $0x000000,_0ced46_data
		shr    %al
		movw   $0x000001,_0ced4a_data
		sbbw   $0x000000,_0ced4a_data
		shr    %al
		movw   $0x000001,_0ced4c_data
		sbbw   $0x000000,_0ced4c_data
		mov    _095b9c_data,%ax
		cmp    $0x000001,%ax
		je     _01598d_jump
		and    $0x00000c,%ebx
		jne    _015a6f_jump
		movw   $0x000000,_0cec9e_data
		movw   $0x000000,_0cec9c_data
		mov    $0x0007d0,%ebx
		call   _016e51_func
		mov    %eax,_0158b8_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_015a48_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0cec9e_data,%ax
		je     _015a8e_jump

	_015a57_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0cec9c_data,%ax
		je     _015aa1_jump

	_015a65_jump:
		dec    %ebx
		je     _015a6f_jump
		and    $0x00000c,%ebp
		jne    _015a48_jump
		jmp    _015a8b_jump

	_015a6f_jump:
		mov    _0ceca6_data,%bx
		mov    %bx,_0cec9e_data
		mov    _0ceca4_data,%bx
		mov    %bx,_0cec9c_data

	_015a8b_jump:
		sti    
		popa   
		ret    

	_015a8e_jump:
		call   _016e51_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cec9e_data
		jmp    _015a57_jump

	_015aa1_jump:
		call   _016e51_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cec9c_data
		jmp    _015a65_jump



_015ab4_func:
		pusha  
		cli    
		cld    
		movw   $0x000000,_0cec9e_data
		movw   $0x000000,_0cec9c_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0ced4a_data
		sbbw   $0x000000,_0ced4a_data
		shr    %al
		movw   $0x000001,_0ced4c_data
		sbbw   $0x000000,_0ced4c_data
		shr    %al
		movw   $0x000001,_0ced44_data
		sbbw   $0x000000,_0ced44_data
		shr    %al
		movw   $0x000001,_0ced46_data
		sbbw   $0x000000,_0ced46_data
		and    $0x000003,%ebx
		jne    _015b53_jump
		mov    $0x0007d0,%ebx
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_015b2c_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		je     _015b3b_jump
		incw   _0cec9e_data

	_015b3b_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		je     _015b49_jump
		incw   _0cec9c_data

	_015b49_jump:
		dec    %ebx
		je     _015b53_jump
		and    $0x000003,%ebp
		jne    _015b2c_jump
		jmp    _015b6f_jump

	_015b53_jump:
		mov    _0ceca6_data,%bx
		mov    %bx,_0cec9e_data
		mov    _0ceca4_data,%bx
		mov    %bx,_0cec9c_data

	_015b6f_jump:
		sti    
		popa   
		ret    



_015b72_func:
		pusha  
		cli    
		cld    
		movw   $0x000000,_0cec9e_data
		movw   $0x000000,_0cec9c_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0ced44_data
		sbbw   $0x000000,_0ced44_data
		shr    %al
		movw   $0x000001,_0ced46_data
		sbbw   $0x000000,_0ced46_data
		shr    %al
		movw   $0x000001,_0ced4a_data
		sbbw   $0x000000,_0ced4a_data
		shr    %al
		movw   $0x000001,_0ced4c_data
		sbbw   $0x000000,_0ced4c_data
		and    $0x00000c,%ebx
		jne    _015c1f_jump
		mov    $0x0007d0,%ebx
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_015bea_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0cec9e_data,%ax
		je     _015c00_jump
		incw   _0cec9e_data

	_015c00_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0cec9c_data,%ax
		je     _015c15_jump
		incw   _0cec9c_data

	_015c15_jump:
		dec    %ebx
		je     _015c1f_jump
		and    $0x00000c,%ebp
		jne    _015bea_jump
		jmp    _015c3b_jump

	_015c1f_jump:
		mov    _0ceca6_data,%bx
		mov    %bx,_0cec9e_data
		mov    _0ceca4_data,%bx
		mov    %bx,_0cec9c_data

	_015c3b_jump:
		sti    
		popa   
		ret    



_015c3e_func:
		pusha  
		cli    
		cld    
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_015c4d_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%ebp
		je     _015c67_jump
		mov    %eax,%ebp
		and    $0x000002,%ebp
		je     _015c67_jump
		dec    %ebx
		jne    _015c4d_jump
		popa   
		mov    $0x000000,%eax
		jmp    _015c6d_jump

	_015c67_jump:
		popa   
		mov    $0x000001,%eax

	_015c6d_jump:
		sti    
		ret    



_015c6f_func:
		pusha  
		cli    
		cld    
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_015c7e_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%ebp
		je     _015c98_jump
		mov    %eax,%ebp
		and    $0x000008,%ebp
		je     _015c98_jump
		dec    %ebx
		jne    _015c7e_jump
		popa   
		mov    $0x000000,%eax
		jmp    _015c9e_jump

	_015c98_jump:
		popa   
		mov    $0x000001,%eax

	_015c9e_jump:
		sti    
		ret    



_015ca0_func:
		pusha  
		cli    
		cld    
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		movw   $0x000000,_0cec9e_data
		movw   $0x000000,_0cec9c_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		shr    $0x000005,%al
		movw   $0x000001,_0ced4a_data
		sbbw   $0x000000,_0ced4a_data
		shr    %al
		movw   $0x000001,_0ced4c_data
		sbbw   $0x000000,_0ced4c_data
		shr    %al
		movw   $0x000001,_0ced44_data
		sbbw   $0x000000,_0ced44_data
		shr    %al
		movw   $0x000001,_0ced46_data
		sbbw   $0x000000,_0ced46_data
		mov    0x000004(%esp),%eax
		and    $0x000003,%ebp
		jne    _015dee_jump
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %eax,0x000004(%esp)
		call   _016e51_func
		mov    %eax,_0158b8_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)
		mov    0x000004(%esp),%eax
		mov    %esi,%ebx
		mov    %edi,%edx

	_015d3e_jump:
		mov    %edx,0x000008(%esp)
		mov    %eax,0x000004(%esp)
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0cec9e_data,%ax
		je     _015e32_jump

	_015d5d_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0cec9c_data,%ax
		je     _015e48_jump

	_015d6f_jump:
		mov    0x000008(%esp),%edx
		mov    0x000004(%esp),%eax
		and    $0x000003,%ebp
		je     _015e14_jump
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _0158b0_jump,%ebx
		add    _0158b4_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _015d3e_jump
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx

	_015da1_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0cec9e_data,%ax
		je     _015e5e_jump

	_015db4_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0cec9c_data,%ax
		je     _015e74_jump

	_015dc6_jump:
		dec    %ebx
		je     _015dd0_jump
		and    $0x000003,%ebp
		jne    _015da1_jump
		jmp    _015dec_jump

	_015dd0_jump:
		mov    _0ceca6_data,%bx
		mov    %bx,_0cec9e_data
		mov    _0ceca4_data,%bx
		mov    %bx,_0cec9c_data

	_015dec_jump:
		jmp    _015e2c_jump

	_015dee_jump:
		mov    _0ceca6_data,%bx
		mov    %bx,_0cec9e_data
		mov    _0ceca4_data,%bx
		mov    %bx,_0cec9c_data
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_015e14_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _0158b0_jump,%ebx
		add    _0158b4_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _015e14_jump

	_015e2c_jump:
		add    $0x00000c,%esp
		sti    
		popa   
		ret    

	_015e32_jump:
		call   _016e51_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cec9e_data
		jmp    _015d5d_jump

	_015e48_jump:
		call   _016e51_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cec9c_data
		jmp    _015d6f_jump

	_015e5e_jump:
		call   _016e51_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cec9e_data
		jmp    _015db4_jump

	_015e74_jump:
		call   _016e51_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cec9c_data
		jmp    _015dc6_jump



_015e8a_func:
		pusha  
		cli    
		cld    
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		movw   $0x000000,_0cec9e_data
		movw   $0x000000,_0cec9c_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		shr    $0x000005,%al
		movw   $0x000001,_0ced4a_data
		sbbw   $0x000000,_0ced4a_data
		shr    %al
		movw   $0x000001,_0ced4c_data
		sbbw   $0x000000,_0ced4c_data
		shr    %al
		movw   $0x000001,_0ced44_data
		sbbw   $0x000000,_0ced44_data
		shr    %al
		movw   $0x000001,_0ced46_data
		sbbw   $0x000000,_0ced46_data
		mov    0x000004(%esp),%eax
		and    $0x00000c,%ebp
		jne    _015fd8_jump
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %eax,0x000004(%esp)
		call   _016e51_func
		mov    %eax,_0158b8_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)
		mov    0x000004(%esp),%eax
		mov    %esi,%ebx
		mov    %edi,%edx

	_015f28_jump:
		mov    %edx,0x000008(%esp)
		mov    %eax,0x000004(%esp)
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0cec9e_data,%ax
		je     _01601c_jump

	_015f47_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0cec9c_data,%ax
		je     _016032_jump

	_015f59_jump:
		mov    0x000008(%esp),%edx
		mov    0x000004(%esp),%eax
		and    $0x00000c,%ebp
		je     _015ffe_jump
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _0158b0_jump,%ebx
		add    _0158b4_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _015f28_jump
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx

	_015f8b_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0cec9e_data,%ax
		je     _016048_jump

	_015f9e_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0cec9c_data,%ax
		je     _01605e_jump

	_015fb0_jump:
		dec    %ebx
		je     _015fba_jump
		and    $0x00000c,%ebp
		jne    _015f8b_jump
		jmp    _015fd6_jump

	_015fba_jump:
		mov    _0ceca6_data,%bx
		mov    %bx,_0cec9e_data
		mov    _0ceca4_data,%bx
		mov    %bx,_0cec9c_data

	_015fd6_jump:
		jmp    _016016_jump

	_015fd8_jump:
		mov    _0ceca6_data,%bx
		mov    %bx,_0cec9e_data
		mov    _0ceca4_data,%bx
		mov    %bx,_0cec9c_data
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_015ffe_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _0158b0_jump,%ebx
		add    _0158b4_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _015ffe_jump

	_016016_jump:
		add    $0x00000c,%esp
		sti    
		popa   
		ret    

	_01601c_jump:
		call   _016e51_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cec9e_data
		jmp    _015f47_jump

	_016032_jump:
		call   _016e51_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cec9c_data
		jmp    _015f59_jump

	_016048_jump:
		call   _016e51_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cec9e_data
		jmp    _015f9e_jump

	_01605e_jump:
		call   _016e51_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0cec9c_data
		jmp    _015fb0_jump



_016074_func:
		push   %bx
		pushfw 
		mov    %sp,%ax
		and    $0x00fffc,%sp
		pushf  
		pushf  
		pop    %ebx
		or     $0x040000,%ebx
		push   %ebx
		popf   
		pushf  
		pop    %ebx
		popf   
		mov    %ax,%sp
		test   $0x040000,%ebx
		je     _0160ce_jump
		pushf  
		pop    %eax
		mov    %eax,%ebx
		xor    $0x200000,%eax
		push   %eax
		popf   
		pushf  
		pop    %eax
		push   %ebx
		popf   
		and    $0x200000,%eax
		and    $0x200000,%ebx
		cmp    %ebx,%eax
		je     _0160c7_jump
		mov    $0x000001,%eax
		cpuid  
		shr    $0x000008,%ax
		and    $0x00000f,%eax
		jmp    _0160d3_jump

	_0160c7_jump:
		mov    $0x000004,%eax
		jmp    _0160d3_jump

	_0160ce_jump:
		mov    $0x000003,%eax

	_0160d3_jump:
		popfw  
		pop    %bx
		ret    

	_0160d8_jump:
		or     %al,(%eax)
		add    %al,(%eax)

	_0160dc_jump:
		cmp    %al,(%ecx)
		add    %al,(%eax)

_0160e0_switch:
		.long   0


	_0160e4_jump:
		enter  $0x000000,$0x000000



_0160e8_func:
		movl   $0x000008,_0160d8_jump
		movl   $0x000138,_0160dc_jump
		movl   $0x000000,_0160e0_switch
		movl   $0x0000c8,_0160e4_jump
		ret    



_016111_func:
		push   %ebp
		push   %edi
		mov    _0160d8_jump,%ebp
		mov    %ebp,(%eax)
		mov    _0160dc_jump,%edi
		mov    %edi,(%ebx)
		mov    _0160e0_switch,%ebp
		mov    %ebp,(%ecx)
		mov    _0160e4_jump,%edi
		mov    %edi,(%edx)
		pop    %edi
		pop    %ebp
		ret    



_01614e_func:
		cmp    $0x000000,%eax
		jge    _016158_jump
		mov    $0x000000,%eax

	_016158_jump:
		cmp    $0x000140,%eax
		jle    _016164_jump
		mov    $0x000140,%eax

	_016164_jump:
		mov    %eax,_0160d8_jump
		cmp    $0x000000,%ebx
		jge    _016173_jump
		mov    $0x000000,%ebx

	_016173_jump:
		cmp    $0x000140,%ebx
		jle    _016180_jump
		mov    $0x000140,%ebx

	_016180_jump:
		mov    %ebx,_0160dc_jump
		cmp    $0x000000,%ecx
		jge    _016190_jump
		mov    $0x000000,%ecx

	_016190_jump:
		cmp    $0x0000c8,%ecx
		jle    _01619d_jump
		mov    $0x0000c8,%ecx

	_01619d_jump:
		mov    %ecx,_0160e0_switch
		cmp    $0x000000,%edx
		jge    _0161ad_jump
		mov    $0x000000,%edx

	_0161ad_jump:
		cmp    $0x0000c8,%edx
		jle    _0161ba_jump
		mov    $0x0000c8,%edx

	_0161ba_jump:
		mov    %edx,_0160e4_jump
		ret    



_0161c1_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		cmp    _0160d8_jump,%eax
		jl     _01620b_jump

	_0161d3_jump:
		add    %eax,%edx
		cmp    _0160dc_jump,%edx
		ja     _0161f7_jump

	_0161dd_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0160e0_switch,%ebx
		jl     _01623d_jump

	_0161e9_jump:
		add    %ebx,%edx
		cmp    _0160e4_jump,%edx
		ja     _016229_jump

	_0161f3_jump:
		clc    
		ret    

	_0161f5_jump:
		stc    
		ret    

	_0161f7_jump:
		cmp    _0160dc_jump,%eax
		jae    _0161f5_jump
		mov    _0160dc_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _0161dd_jump

	_01620b_jump:
		sub    _0160d8_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _0161f5_jump
		and    $0x00ffff,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		add    %eax,%esi
		mov    _0160d8_jump,%eax
		jmp    _0161d3_jump

	_016229_jump:
		cmp    _0160e4_jump,%ebx
		jae    _0161f5_jump
		mov    _0160e4_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _0161f3_jump

	_01623d_jump:
		add    %ebx,%edx
		cmp    _0160e0_switch,%edx
		jle    _0161f5_jump
		sub    _0160e0_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _092144_data,%eax
		mul    %bx
		add    %eax,%esi
		pop    %eax
		mov    _0160e0_switch,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _0161e9_jump



_016277_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		cmp    _0160d8_jump,%eax
		jl     _0162c8_jump

	_016289_jump:
		add    %eax,%edx
		cmp    _0160dc_jump,%edx
		ja     _0162ac_jump

	_016293_jump:
		movzbl %ch,%edx
		cmp    _0160e0_switch,%ebx
		jl     _0162f8_jump

	_01629e_jump:
		add    %ebx,%edx
		cmp    _0160e4_jump,%edx
		ja     _0162e4_jump

	_0162a8_jump:
		clc    
		ret    

	_0162aa_jump:
		stc    
		ret    

	_0162ac_jump:
		cmp    _0160dc_jump,%eax
		jae    _0162aa_jump
		mov    _0160dc_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		add    _092144_data,%esi
		sub    %edx,%esi
		jmp    _016293_jump

	_0162c8_jump:
		sub    _0160d8_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _0162aa_jump
		and    $0x00ffff,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		mov    _0160d8_jump,%eax
		jmp    _016289_jump

	_0162e4_jump:
		cmp    _0160e4_jump,%ebx
		jae    _0162aa_jump
		mov    _0160e4_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _0162a8_jump

	_0162f8_jump:
		add    %ebx,%edx
		cmp    _0160e0_switch,%edx
		jle    _0162aa_jump
		sub    _0160e0_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _092144_data,%eax
		mul    %bx
		add    %eax,%esi
		pop    %eax
		mov    _0160e0_switch,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _01629e_jump

_016332_switch:
		.long   0

_016336_switch:
		.long   0




_01633a_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		jmp    _016351_jump



_016346_func:
		call   _0161c1_func
		jb     _0164ac_jump

	_016351_jump:
		push   %ebp
		mov    _092144_data,%edx
		mov    %edx,_016332_switch
		add    _091e20_data(,%ebx,4),%edi
		movzbl %ch,%edx
		mov    _091e20_data(,%edx,4),%ebx
		add    %edi,%ebx
		and    $0x0000ff,%ecx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0163d2_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016336_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi

	_0163ae_jump:
		xor    %ebp,%ebp

	_0163b0_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0163ba_jump
		mov    %ah,(%edi)

	_0163ba_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0163b0_jump
		add    _016336_switch,%edi
		add    _016332_switch,%esi
		cmp    %ebx,%edi
		jb     _0163ae_jump
		pop    %edi
		pop    %esi

	_0163d2_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01641d_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016336_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0163f6_jump
		inc    %edi
		mov    $0x000001,%al

	_0163f6_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_0163f9_jump:
		xor    %ebp,%ebp

	_0163fb_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016405_jump
		mov    %ah,(%edi)

	_016405_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0163fb_jump
		add    _016336_switch,%edi
		add    _016332_switch,%esi
		cmp    %ebx,%edi
		jb     _0163f9_jump
		pop    %edi
		pop    %esi

	_01641d_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016468_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016336_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016441_jump
		inc    %edi
		mov    $0x000001,%al

	_016441_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_016444_jump:
		xor    %ebp,%ebp

	_016446_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016450_jump
		mov    %ah,(%edi)

	_016450_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016446_jump
		add    _016336_switch,%edi
		add    _016332_switch,%esi
		cmp    %ebx,%edi
		jb     _016444_jump
		pop    %edi
		pop    %esi

	_016468_jump:
		pop    %ecx
		inc    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0164ab_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016336_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016488_jump
		inc    %edi
		mov    $0x000001,%al

	_016488_jump:
		out    %al,(%dx)

	_016489_jump:
		xor    %ebp,%ebp

	_01648b_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016495_jump
		mov    %ah,(%edi)

	_016495_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _01648b_jump
		add    _016336_switch,%edi
		add    _016332_switch,%esi
		cmp    %ebx,%edi
		jb     _016489_jump

	_0164ab_jump:
		pop    %ebp

	_0164ac_jump:
		ret    



_0164ad_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		jmp    _0164c4_jump



_0164b9_func:
		call   _016277_func
		jb     _01662a_jump

	_0164c4_jump:
		push   %ebp
		mov    _092144_data,%edx
		mov    %edx,_016332_switch
		add    _091e20_data(,%ebx,4),%edi
		movzbl %ch,%edx
		mov    _091e20_data(,%edx,4),%ebx
		add    %edi,%ebx
		and    $0x0000ff,%ecx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		add    %ecx,%esi
		dec    %esi
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01654a_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016336_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi

	_016526_jump:
		xor    %ebp,%ebp

	_016528_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016532_jump
		mov    %ah,(%edi)

	_016532_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016528_jump
		add    _016336_switch,%edi
		add    _016332_switch,%esi
		cmp    %ebx,%edi
		jb     _016526_jump
		pop    %edi
		pop    %esi

	_01654a_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016597_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016336_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016570_jump
		inc    %edi
		mov    $0x000001,%al

	_016570_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_016573_jump:
		xor    %ebp,%ebp

	_016575_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01657f_jump
		mov    %ah,(%edi)

	_01657f_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016575_jump
		add    _016336_switch,%edi
		add    _016332_switch,%esi
		cmp    %ebx,%edi
		jb     _016573_jump
		pop    %edi
		pop    %esi

	_016597_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0165e4_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016336_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0165bd_jump
		inc    %edi
		mov    $0x000001,%al

	_0165bd_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_0165c0_jump:
		xor    %ebp,%ebp

	_0165c2_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0165cc_jump
		mov    %ah,(%edi)

	_0165cc_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0165c2_jump
		add    _016336_switch,%edi
		add    _016332_switch,%esi
		cmp    %ebx,%edi
		jb     _0165c0_jump
		pop    %edi
		pop    %esi

	_0165e4_jump:
		pop    %ecx
		dec    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016629_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016336_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016606_jump
		inc    %edi
		mov    $0x000001,%al

	_016606_jump:
		out    %al,(%dx)

	_016607_jump:
		xor    %ebp,%ebp

	_016609_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016613_jump
		mov    %ah,(%edi)

	_016613_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016609_jump
		add    _016336_switch,%edi
		add    _016332_switch,%esi
		cmp    %ebx,%edi
		jb     _016607_jump

	_016629_jump:
		pop    %ebp

	_01662a_jump:
		ret    

_01662b_switch:
		.long   0

_01662f_switch:
		.long   0




_016633_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092140_data
		call   _0161c1_func
		jb     _0167c9_jump
		push   %ebp
		mov    _092144_data,%edx
		mov    %edx,_01662b_switch
		xor    %edx,%edx
		add    _091e20_data(,%ebx,4),%edi
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		and    $0x0000ff,%ecx
		add    %edi,%ebx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0166d6_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_01662f_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_0166af_jump:
		xor    %ebp,%ebp

	_0166b1_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0166bd_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0166bd_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0166b1_jump
		add    _01662f_switch,%edi
		add    _01662b_switch,%esi
		cmp    %ebx,%edi
		jb     _0166af_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_0166d6_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01672a_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_01662f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0166fa_jump
		inc    %edi
		mov    $0x000001,%al

	_0166fa_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_016703_jump:
		xor    %ebp,%ebp

	_016705_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016711_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016711_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016705_jump
		add    _01662f_switch,%edi
		add    _01662b_switch,%esi
		cmp    %ebx,%edi
		jb     _016703_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_01672a_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01677e_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_01662f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _01674e_jump
		inc    %edi
		mov    $0x000001,%al

	_01674e_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_016757_jump:
		xor    %ebp,%ebp

	_016759_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016765_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016765_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016759_jump
		add    _01662f_switch,%edi
		add    _01662b_switch,%esi
		cmp    %ebx,%edi
		jb     _016757_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_01677e_jump:
		pop    %ecx
		inc    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0167c8_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_01662f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _01679e_jump
		inc    %edi
		mov    $0x000001,%al

	_01679e_jump:
		out    %al,(%dx)

	_01679f_jump:
		xor    %ebp,%ebp
		mov    _092140_data,%eax

	_0167a6_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0167b2_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0167b2_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0167a6_jump
		add    _01662f_switch,%edi
		add    _01662b_switch,%esi
		cmp    %ebx,%edi
		jb     _01679f_jump

	_0167c8_jump:
		pop    %ebp

	_0167c9_jump:
		ret    



_0167ca_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092140_data
		call   _016277_func
		jb     _01696b_jump
		push   %ebp
		mov    _092144_data,%edx
		mov    %edx,_01662b_switch
		xor    %edx,%edx
		add    _091e20_data(,%ebx,4),%edi
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		and    $0x0000ff,%ecx
		add    %edi,%ebx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		add    %ecx,%esi
		dec    %esi
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016872_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_01662f_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_01684b_jump:
		xor    %ebp,%ebp

	_01684d_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016859_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016859_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _01684d_jump
		add    _01662f_switch,%edi
		add    _01662b_switch,%esi
		cmp    %ebx,%edi
		jb     _01684b_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016872_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0168c8_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_01662f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016898_jump
		inc    %edi
		mov    $0x000001,%al

	_016898_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_0168a1_jump:
		xor    %ebp,%ebp

	_0168a3_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0168af_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0168af_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0168a3_jump
		add    _01662f_switch,%edi
		add    _01662b_switch,%esi
		cmp    %ebx,%edi
		jb     _0168a1_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_0168c8_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01691e_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_01662f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0168ee_jump
		inc    %edi
		mov    $0x000001,%al

	_0168ee_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_0168f7_jump:
		xor    %ebp,%ebp

	_0168f9_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016905_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016905_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0168f9_jump
		add    _01662f_switch,%edi
		add    _01662b_switch,%esi
		cmp    %ebx,%edi
		jb     _0168f7_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_01691e_jump:
		pop    %ecx
		dec    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01696a_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_01662f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016940_jump
		inc    %edi
		mov    $0x000001,%al

	_016940_jump:
		out    %al,(%dx)
		mov    _092140_data,%eax

	_016946_jump:
		xor    %ebp,%ebp

	_016948_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016954_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016954_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016948_jump
		add    _01662f_switch,%edi
		add    _01662b_switch,%esi
		cmp    %ebx,%edi
		jb     _016946_jump

	_01696a_jump:
		pop    %ebp

	_01696b_jump:
		ret    



_01696c_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		jmp    _016984_jump

	_016978_jump:
		call   _0161c1_func
		jb     _0169f0_jump
		cmp    $0x000000,%cl
		jbe    _0169f0_jump

	_016984_jump:
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx
		xor    %eax,%eax

	_0169b9_jump:
		xor    %ebp,%ebp

	_0169bb_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _0169d8_jump
		mov    %al,(%edi,%ebp,1)
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _0169bb_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _0169b9_jump
		pop    %ebp
		ret    

	_0169d8_jump:
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		cmp    %ecx,%ebp
		jl     _0169bb_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _0169b9_jump
		pop    %ebp

	_0169f0_jump:
		ret    



_0169f1_func:
		call   _0161c1_func
		jb     _016a4e_jump
		cmp    $0x000000,%cl
		jbe    _016a4e_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx

	_016a30_jump:
		xor    %ebp,%ebp

	_016a32_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x000000,%al
		je     _016a3c_jump
		mov    %al,(%edi,%ebp,1)

	_016a3c_jump:
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016a32_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016a30_jump
		pop    %ebp

	_016a4e_jump:
		ret    



_016a50_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		jmp    _016a68_jump

	_016a5c_jump:
		call   _016277_func
		jb     _016adb_jump
		cmp    $0x000000,%cl
		jbe    _016adb_jump

	_016a68_jump:
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx
		xor    %eax,%eax

	_016a9d_jump:
		xor    %ebp,%ebp
		push   %edi

	_016aa0_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016ac0_jump
		mov    %al,-0x000001(%edi,%ecx,1)
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _016aa0_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016a9d_jump
		pop    %ebp
		ret    

	_016ac0_jump:
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		sub    %eax,%edi
		cmp    %ecx,%ebp
		jl     _016aa0_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016a9d_jump
		pop    %ebp

	_016adb_jump:
		ret    



_016adc_func:
		call   _016277_func
		jb     _016b3d_jump
		cmp    $0x000000,%cl
		jbe    _016b3d_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx

	_016b1b_jump:
		xor    %ebp,%ebp
		push   %edi

	_016b1e_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x000000,%al
		je     _016b29_jump
		mov    %al,-0x000001(%edi,%ecx,1)

	_016b29_jump:
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _016b1e_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016b1b_jump
		pop    %ebp

	_016b3d_jump:
		ret    



_016b3e_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092140_data
		call   _0161c1_func
		jb     _016bdc_jump
		cmp    $0x000000,%cl
		jbe    _016bdc_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx
		mov    _092140_data,%ah

	_016b98_jump:
		xor    %ebp,%ebp

	_016b9a_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016bb9_jump
		or     %ah,%al
		mov    %al,(%edi,%ebp,1)
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016b9a_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016b98_jump
		pop    %ebp
		ret    

	_016bb9_jump:
		and    $0x0000ff,%eax
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		mov    _092140_data,%ah
		cmp    %ecx,%ebp
		jl     _016b9a_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016b98_jump
		pop    %ebp

	_016bdc_jump:
		ret    



_016bdd_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092140_data
		call   _016277_func
		jb     _016c82_jump
		cmp    $0x000000,%cl
		jbe    _016c82_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx
		mov    _092140_data,%ah

	_016c37_jump:
		xor    %ebp,%ebp
		push   %edi

	_016c3a_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016c5c_jump
		or     %ah,%al
		mov    %al,-0x000001(%edi,%ecx,1)
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _016c3a_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016c37_jump
		pop    %ebp
		ret    

	_016c5c_jump:
		and    $0x0000ff,%eax
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		sub    %eax,%edi
		mov    _092140_data,%ah
		cmp    %ecx,%ebp
		jl     _016c3a_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016c37_jump
		pop    %ebp

	_016c82_jump:
		ret    

_016c83_switch:
		.long   0




_016c87_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_016c83_switch
		cmp    _0160d8_jump,%eax
		jl     _016cd5_jump
		add    %eax,%edx
		cmp    _0160dc_jump,%edx
		ja     _016cc1_jump
		shr    $0x000002,%cl

	_016ca6_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0160e0_switch,%ebx
		jl     _016d0f_jump

	_016cb2_jump:
		add    %ebx,%edx
		cmp    _0160e4_jump,%edx
		ja     _016cfb_jump

	_016cbc_jump:
		clc    
		ret    

	_016cbe_jump:
		pop    %eax

	_016cbf_jump:
		stc    
		ret    

	_016cc1_jump:
		cmp    _0160dc_jump,%eax
		jae    _016cbf_jump
		mov    _0160dc_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _016d49_jump

	_016cd5_jump:
		push   %eax
		sub    _0160d8_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _016cbe_jump
		and    $0x00fffc,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		mov    %eax,%edx
		pop    %eax
		add    %edx,%eax
		add    %edx,0x000004(%esp)
		add    %edx,%esi
		shr    $0x000002,%cl
		jmp    _016ca6_jump

	_016cfb_jump:
		cmp    _0160e4_jump,%ebx
		jae    _016cbf_jump
		mov    _0160e4_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _016cbc_jump

	_016d0f_jump:
		add    %ebx,%edx
		cmp    _0160e0_switch,%edx
		jle    _016cbf_jump
		sub    _0160e0_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _016c83_switch,%eax
		mul    %bx
		add    %eax,%esi
		add    %eax,0x000008(%esp)
		pop    %eax
		mov    _0160e0_switch,%ebx
		jmp    _016cb2_jump

	_016d49_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		shr    $0x000002,%cl
		and    $0x000003,%edx
		je     _016ca6_jump
		inc    %cl
		jmp    _016ca6_jump



_016d61_func:
		sub    $0x00000c,%esp
		mov    %edx,(%esp)
		call   _016c87_func
		jb     _016dda_jump
		cmp    $0x000000,%cl
		jbe    _016dda_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		mov    %ebx,0x000004(%esp)
		add    %eax,%edi
		mov    (%esp),%edx
		and    $0x0000ff,%ecx
		push   %ebp
		xor    %ebx,%ebx

	_016da9_jump:
		xor    %ebp,%ebp

	_016dab_jump:
		mov    (%esi,%ebp,4),%eax
		cmp    $0x000000,%eax
		je     _016dbc_jump
		mov    (%edx,%ebp,4),%ebx
		and    %ebx,(%edi,%ebp,4)
		or     %eax,(%edi,%ebp,4)

	_016dbc_jump:
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016dab_jump
		add    $0x000140,%edi
		add    _016c83_switch,%esi
		add    _016c83_switch,%edx
		cmp    0x000008(%esp),%edi
		jb     _016da9_jump
		pop    %ebp

	_016dda_jump:
		add    $0x00000c,%esp
		ret    



_016dde_func:
		push   %edx
		push   %eax
		mov    $0x0003da,%dx

	_016de4_jump:
		in     (%dx),%al
		test   $0x000008,%ax
		je     _016de4_jump
		pop    %eax
		pop    %edx
		ret    



_016dee_func:
		push   %edx
		push   %eax
		mov    $0x0003da,%dx

	_016df4_jump:
		in     (%dx),%al
		test   $0x000008,%ax
		jne    _016df4_jump
		pop    %eax
		pop    %edx
		ret    



_016dfe_func:
		movl   $0x000000,_092158_data
		movl   $0x000000,_092154_data
		movl   $0x000000,_092150_data
		push   %eax
		in     $0x000061,%al
		or     $0x000003,%al
		out    %al,$0x000061
		movl   $0x00ffff,_092148_data
		mov    $0x0000b4,%al
		out    %al,$0x000043
		mov    _092148_data,%eax
		out    %al,$0x000042
		mov    %ah,%al
		out    %al,$0x000042
		pop    %eax
		ret    



_016e3e_func:
		push   %eax
		in     $0x000061,%al
		and    $0x0000fc,%al
		out    %al,$0x000061
		mov    $0x0000b4,%al
		out    %al,$0x000043
		mov    $0x000000,%al
		out    %al,$0x000042
		out    %al,$0x000042
		pop    %eax
		ret    



_016e51_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000080,%eax
		out    %al,$0x000043
		nop
		in     $0x000042,%al
		mov    %al,%ah
		in     $0x000042,%al
		xchg   %al,%ah
		mov    _092148_data,%ebx
		sub    %eax,%ebx
		mov    %ebx,%eax
		cmp    _092150_data,%eax
		jg     _016e9d_jump
		jne    _016e91_jump
		mov    _092158_data,%edx
		inc    %edx
		cmp    $0x000014,%edx
		jle    _016e91_jump
		movl   $0x000000,_092148_data
		xor    %edx,%edx

	_016e91_jump:
		mov    _092148_data,%ebx
		add    %ebx,_092154_data

	_016e9d_jump:
		mov    %eax,_092150_data
		add    _092154_data,%eax
		mov    %edx,_092158_data
		pop    %edx
		pop    %ebx
		ret    



_016eb1_func:
		mov    $0x000001,%ecx
		cmpl   $0x000000,_092148_data
		je     _016ecb_jump
		dec    %ecx
		dec    %ecx

	_016ec1_jump:
		call   _016e51_func
		inc    %ecx
		cmp    %ebx,%eax
		jle    _016ec1_jump

	_016ecb_jump:
		ret    



_016ecc_func:
		call   _016dfe_func
		ret    



_016ee0_func:
		push   %esi
		push   %edi
		mov    %ebx,%esi
		xor    %ah,%ah
		xor    %dh,%dh
		and    $0x00000f,%al
		and    $0x00000f,%dl
		mov    %ax,_0c1a30_data
		mov    %dx,_0c1a32_data
		mov    $0x000010,%eax
		mov    _0c1a30_data,%edx
		mov    _0c1a2e_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sub    %edx,%eax
		mov    %ebx,%edx
		lea    0x000000(,%eax,4),%edi
		sar    $0x00001f,%edx
		add    %eax,%edi
		mov    %ebx,%eax
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0cccb4_data,%edx
		shl    $0x000004,%edi
		sub    %eax,%edx
		lea    -0x0004ff(%edx,%edi,1),%eax
		mov    %eax,_0c1a34_data
		cmpb   $0x000000,_0cef71_data
		je     _016f55_jump
		xor    %edx,%edx
		mov    %edx,_0c1a38_data
		jmp    _016f62_jump

	_016f55_jump:
		movswl %si,%eax
		add    $0x000010,%eax
		sub    %ebx,%eax
		mov    %eax,_0c1a38_data

	_016f62_jump:
		mov    _0c1a30_data,%edx
		movswl %cx,%eax
		sar    $0x000010,%edx
		add    $0x000010,%eax
		sub    %edx,%eax
		mov    %eax,_0c1a3c_data
		mov    _0c1a38_data,%eax
		mov    %eax,%edx
		mov    $0x000004,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0ccd34_data,%ebx
		shr    $0x000002,%ebx
		imul   %edx,%ebx
		mov    _0c1a38_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		add    _0ccd40_data,%eax
		mov    _0ccd1c_data,%esi
		add    %eax,%ebx
		mov    _0c1a3c_data,%eax
		imul   %esi,%eax
		add    %eax,%ebx
		mov    _0c1a30_data,%ax
		xor    %ah,%ah
		and    $0x000003,%al
		movswl %ax,%ecx
		mov    $0x000003,%eax
		sub    %ecx,%eax
		mov    %eax,%ecx
		mov    $0x000001,%eax
		shl    %cl,%eax
		mov    %ebx,_0c1a40_data
		mov    %eax,_0c1a44_data
		pop    %edi
		pop    %esi
		ret    



_016fec_func:
		push   %edx
		mov    %al,%dl
		cmpb   $0x000000,_0cef72_data
		je     _017006_jump
		cmpb   $0x000001,_0cefb6_data
		je     _017006_jump
		call   _070068_func

	_017006_jump:
		mov    $_0ca410_data,%eax
		call   _040f50_func
		cmpb   $0x000000,_0cefb6_data
		jne    _01702e_jump
		call   _0588e8_func
		cmpb   $0x000000,_0cefb6_data
		jne    _017033_jump
		call   _058ac8_func
		jmp    _017033_jump

	_01702e_jump:
		call   _0594c0_func

	_017033_jump:
		call   _046650_func
		test   %dl,%dl
		jne    _017046_jump
		mov    $_0c1b10_data,%eax
		call   _05a774_func

	_017046_jump:
		pop    %edx
		ret    



_017048_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%ah
		xor    %dl,%dl
		mov    %ah,_0cefed_data
		call   _059600_func
		mov    %dl,_0cefaf_data
		xor    %edx,%edx
		mov    %edx,_0cc4e8_data
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		mov    %dx,_0cec9a_data
		mov    _0cefa7_data,%dh
		mov    %bx,_0cec98_data
		test   %dh,%dh
		je     _017095_jump
		call   _070338_func

	_017095_jump:
		cmpb   $0x000000,_0cefd4_data
		je     _0175db_jump
		cmpw   $0x000000,_0cedd4_data
		jne    _0175db_jump
		cmpw   $0x000000,_0cedea_data
		jne    _0175db_jump
		cmpb   $0x000002,_0cef89_data
		je     _0175db_jump
		call   _016ecc_func
		cmpb   $0x000000,_0cefa2_data
		je     _0170de_jump
		call   _016dde_func

	_0170de_jump:
		cmpb   $0x000000,_0cefa3_data
		je     _0170f0_jump
		call   _016e51_func
		mov    %eax,0x000004(%esp)

	_0170f0_jump:
		cmpb   $0x000000,_0cefa3_data
		je     _017106_jump
		mov    0x000004(%esp),%ebx
		movzwl _0ced48_data,%ebp
		add    %ebx,%ebp

	_017106_jump:
		call   _0538c8_func
		cmpb   $0x000020,_0cefd4_data
		jb     _017122_jump
		cmpb   $0x000000,_0cefb6_data
		jne    _017122_jump
		call   _03c598_func

	_017122_jump:
		call   _03b75c_func
		cmpw   $0x000000,_095b4e_data
		jne    _0171e1_jump
		cmpw   $0x000000,_095b50_data
		jne    _0171e1_jump
		mov    _0cc5b4_data,%eax
		mov    _0cc5b4_data,%edx
		shl    $0x000008,%eax
		shl    $0x000006,%edx
		mov    _0cc5ac_data,%ecx
		add    %edx,%eax
		mov    _0cef79_data,%bh
		add    %ecx,%eax
		cmp    $0x000001,%bh
		jne    _0171af_jump
		cmpb   $0x000000,_095b9a_data
		je     _0171af_jump
		mov    _0cc5b0_data,%edx
		mov    _0cc5b4_data,%ebx
		mov    _0cc5ac_data,%ecx
		mov    _095b10_data,%edi
		mov    _0cc644_data,%esi
		sub    %ebx,%edx
		add    %eax,%edi
		mov    %edx,%ebx
		mov    _0cc5a8_data,%edx
		add    %eax,%esi
		sub    %ecx,%edx
		mov    %ebx,%eax
		mov    %edx,%ecx
		call   *_0cc620_data
		jmp    _01722c_jump

	_0171af_jump:
		mov    _0cc5b0_data,%ecx
		mov    _0cc5b4_data,%esi
		mov    _0cc5a8_data,%edx
		mov    _0cc5ac_data,%edi
		sub    %esi,%ecx
		sub    %edi,%edx
		mov    _095b10_data,%edi
		mov    _0cc644_data,%esi
		add    %eax,%edi
		add    %eax,%esi
		mov    %ecx,%eax
		mov    %edx,%ecx
		jmp    _017227_jump

	_0171e1_jump:
		cmpb   $0x000001,_0cef79_data
		jne    _017211_jump
		cmpb   $0x000000,_095b9a_data
		je     _017211_jump
		mov    $0x000140,%ecx
		mov    _0cc5b0_data,%eax
		mov    _095b10_data,%edi
		mov    _0cc644_data,%esi
		call   *_0cc620_data
		jmp    _01722c_jump

	_017211_jump:
		mov    $0x000140,%ecx
		mov    _0cc5b0_data,%eax
		mov    _095b10_data,%edi
		mov    _0cc644_data,%esi

	_017227_jump:
		call   _014bfb_func

	_01722c_jump:
		cmpb   $0x000000,_0cefa3_data
		je     _01723a_jump
		call   _016e51_func

	_01723a_jump:
		cmpb   $0x000000,_0cefa7_data
		je     _017248_jump
		call   _070338_func

	_017248_jump:
		cmpb   $0x000000,_0cef79_data
		jne    _017256_jump
		call   _040c04_func

	_017256_jump:
		mov    _0ced3c_data,%dl
		xor    %ebx,%ebx

	_01725e_jump:
		mov    %ebx,%eax
		call   _016fec_func
		mov    _0cedd4_data,%cx
		cmp    %cx,%bx
		jne    _017286_jump
		cmp    _0cedea_data,%cx
		jne    _017286_jump
		cmp    _0cefd1_data,%cl
		jne    _017286_jump
		mov    $0x000001,%al
		jmp    _017288_jump

	_017286_jump:
		mov    %bl,%al

	_017288_jump:
		mov    %al,0x000008(%esp)
		test   %al,%al
		je     _017297_jump
		dec    %dl
		cmp    $0x0000ff,%dl
		jne    _01725e_jump

	_017297_jump:
		cmpb   $0x000000,_0cefa3_data
		je     _0172a5_jump
		call   _016e51_func

	_0172a5_jump:
		call   _0466c8_func
		cmpb   $0x000000,_095b56_data
		je     _017317_jump
		cmpb   $0x000001,_0cef74_data
		jne    _017317_jump
		mov    _0cee0e_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0ced3a_data,%bx
		mov    _0ced36_data,%dx
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		call   _0744f8_func
		xor    %eax,%eax
		mov    _0cc5b4_data,%cx
		mov    _0cc5b0_data,%ax
		xor    %ebx,%ebx
		push   %eax
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cc5a8_data,%ax
		mov    _0cc5ac_data,%bx
		push   %eax
		xor    %eax,%eax
		mov    _0ced3a_data,%dx
		mov    _0ced36_data,%ax
		call   _0738b0_func
		jmp    _017329_jump

	_017317_jump:
		mov    _0cccb4_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e88,%ecx
		rep stos %eax,%es:(%edi)

	_017329_jump:
		cmpw   $0x000000,_0ced5a_data
		je     _01735a_jump
		mov    _0cc5a8_data,%edx
		mov    _0cc5ac_data,%ecx
		mov    _0cc5b0_data,%ebx
		mov    _0cc5b4_data,%eax
		sub    $0x000004,%edx
		sub    $0x000006,%ebx
		call   _015587_func
		call   _019ab4_func

	_01735a_jump:
		mov    $_0c1b10_data,%edx
		mov    _0cc644_data,%eax
		call   _05b070_func
		call   _01aaa0_func
		cmpb   $0x000000,_0cefa3_data
		je     _01737c_jump
		call   _016e51_func

	_01737c_jump:
		call   _0197b4_func
		cmpb   $0x000000,_0cefa3_data
		je     _01738f_jump
		call   _016e51_func

	_01738f_jump:
		call   _019e98_func
		xor    %eax,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    _0cc5b0_data,%ax
		xor    %edx,%edx
		push   %eax
		xor    %eax,%eax
		mov    _0cc5b4_data,%cx
		mov    _0cc5a8_data,%ax
		mov    _0cc5ac_data,%bx
		push   %eax
		xor    %eax,%eax
		mov    _0ced3a_data,%dx
		mov    _0ced36_data,%ax
		call   _0741b8_func
		cmpw   $0x000000,_0ced5a_data
		je     _0173dd_jump
		call   _019c90_func

	_0173dd_jump:
		mov    _0cc644_data,%eax
		call   _046aa4_func
		mov    _0cc5a8_data,%eax
		mov    _0cc5ac_data,%esi
		sub    %esi,%eax
		lea    0x000004(%eax),%edx
		mov    _0cc5b0_data,%ecx
		mov    _0cc644_data,%eax
		mov    _0cc5b4_data,%edi
		lea    (%esi,%eax,1),%ebx
		mov    %edi,%eax
		sub    %edi,%ecx
		shl    $0x000008,%eax
		shl    $0x000006,%edi
		add    %ebx,%eax
		add    %eax,%edi
		sub    $0x000004,%edi
		call   _014c26_func
		cmpb   $0x000000,_0cefac_data
		je     _017431_jump
		call   _01ab6c_func
		jmp    _01743b_jump

	_017431_jump:
		mov    _0cce28_data,%eax
		call   _019220_func

	_01743b_jump:
		cmpb   $0x000000,_0cef68_data
		je     _017449_jump
		call   _0191e4_func

	_017449_jump:
		mov    _0cce28_data,%eax
		call   _01b1bc_func
		cmpb   $0x000000,_0cef95_data
		je     _017461_jump
		call   _034de0_func

	_017461_jump:
		mov    $0x000001,%eax
		call   _040780_func
		test   %al,%al
		je     _0174ad_jump
		cmpw   $0x000000,_0cee32_data
		jne    _0174ad_jump
		cmpb   $0x000000,_095b4c_data
		jne    _0174ad_jump
		call   _0264c0_func
		test   %al,%al
		jne    _0174ad_jump
		cmpb   $0x000000,_0cef89_data
		jne    _0174ad_jump
		cmpb   $0x000000,_0cefb6_data
		jne    _0174ad_jump
		cmpb   $0x000040,_0cefd4_data
		jne    _0174ad_jump
		movb   $0x000001,_095b4c_data

	_0174ad_jump:
		call   _040824_func
		test   %ax,%ax
		jne    _0174fd_jump
		call   _0407b4_func
		test   %ax,%ax
		jne    _0174fd_jump
		call   _040894_func
		test   %ax,%ax
		jne    _0174fd_jump
		call   _040904_func
		test   %ax,%ax
		jne    _0174fd_jump
		call   _040974_func
		test   %ax,%ax
		jne    _0174fd_jump
		call   _040a00_func
		test   %ax,%ax
		jne    _0174fd_jump
		call   _040a8c_func
		test   %ax,%ax
		jne    _0174fd_jump
		call   _040b18_func
		test   %ax,%ax
		je     _017505_jump

	_0174fd_jump:
		xor    %ecx,%ecx
		mov    %ecx,_0cc4e8_data

	_017505_jump:
		mov    _0cc4e8_data,%esi
		inc    %esi
		mov    %esi,_0cc4e8_data
		cmp    $0x000708,%esi
		jl     _017521_jump
		movb   $0x000002,_0cef8a_data

	_017521_jump:
		cmpl   $0x005460,_0cc4e8_data
		jl     _017534_jump
		movb   $0x000001,_0cefa5_data

	_017534_jump:
		cmpb   $0x000000,_0cefa5_data
		je     _017565_jump
		mov    _095b4c_data,%bl
		test   %bl,%bl
		jne    _017565_jump
		cmpb   $0x000041,_0cefdb_data
		jne    _01755f_jump
		xor    %edx,%edx
		call   _0377bc_func
		mov    %edx,_0cc4e8_data
		jmp    _017565_jump

	_01755f_jump:
		mov    %bl,_0cefa5_data

	_017565_jump:
		mov    (%esp),%eax
		call   _0363b0_func
		cmpb   $0x000000,_0cefa3_data
		je     _017095_jump
		cmpb   $0x000000,_0cefa2_data
		je     _017095_jump
		cmpb   $0x000000,0x000008(%esp)
		je     _017095_jump
		mov    %ebp,%ebx
		call   _016eb1_func
		test   %ecx,%ecx
		jne    _017095_jump
		mov    $0x000001,%eax
		call   _016fec_func
		mov    _0cdbf8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0175bf_jump
		incw   _0cdbfa_data

	_0175bf_jump:
		call   _046b68_func
		cmpb   $0x000000,_0cefa2_data
		je     _017095_jump
		call   _016dee_func
		jmp    _017095_jump

	_0175db_jump:
		xor    %dh,%dh
		mov    %dh,_0cefed_data
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0175f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cef72_data
		je     _01760b_jump
		cmpb   $0x000001,_0cefb6_data
		je     _01760b_jump
		call   _070068_func

	_01760b_jump:
		mov    $_0ca410_data,%eax
		call   _040f50_func
		cmpb   $0x000000,_0cefb6_data
		jne    _017633_jump
		call   _0588e8_func
		cmpb   $0x000000,_0cefb6_data
		jne    _017638_jump
		call   _058ac8_func
		jmp    _017638_jump

	_017633_jump:
		call   _0594c0_func

	_017638_jump:
		cmpb   $0x000000,_0cefb6_data
		jne    _017669_jump
		mov    _0cedfe_data,%ecx
		mov    _0cee02_data,%ebx
		mov    _0cedf8_data,%edx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03a9f4_func

	_017669_jump:
		cmpb   $0x000001,_0cef74_data
		jne    _017696_jump
		call   _047394_func
		mov    _0ced3e_data,%bx
		test   %bx,%bx
		jge    _01769f_jump
		mov    _0ced3a_data,%ax
		mov    %ebx,%ecx
		add    %eax,%ecx
		mov    %cx,_0ced3e_data
		jmp    _01769f_jump

	_017696_jump:
		xor    %edx,%edx
		mov    %dx,_0ced3e_data

	_01769f_jump:
		cmpb   $0x000000,_095b56_data
		je     _0176f1_jump
		cmpb   $0x000001,_0cef74_data
		jne    _0176f1_jump
		mov    _0cee0e_data,%esi
		sar    $0x000010,%esi
		mov    $0x000003,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %eax,%edx
		mov    _0ced36_data,%bx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0ced3c_data,%ecx
		sar    $0x000010,%ecx
		movswl %dx,%ebx
		mov    _0cedf8_data,%edx
		mov    %esi,%eax
		sar    $0x000010,%edx
		jmp    _017706_jump

	_0176f1_jump:
		mov    _0cedf8_data,%edx
		mov    _0cee0e_data,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax

	_017706_jump:
		call   _016ee0_func
		mov    _0cedf8_data,%edx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03b250_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_017728_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%dl
		xor    %ah,%ah
		xor    %ebx,%ebx
		mov    %ah,0x000008(%esp)
		mov    %dl,_0cefed_data
		xor    %dh,%dh
		call   _059600_func
		mov    %dh,_0cefaf_data
		xor    %edx,%edx
		mov    %bx,_0cec98_data
		mov    %edx,_0cc4e8_data
		mov    $0x000001,%edx
		mov    _0cefa7_data,%bl
		mov    %dx,_0cec9a_data
		test   %bl,%bl
		je     _01777b_jump
		call   _070338_func

	_01777b_jump:
		cmpb   $0x000000,_0cefd4_data
		je     _017b8a_jump
		cmpw   $0x000000,_0cedd4_data
		jne    _017b8a_jump
		cmpw   $0x000000,_0cedea_data
		jne    _017b8a_jump
		cmpb   $0x000002,_0cef89_data
		je     _017b8a_jump
		call   _016ecc_func
		call   _03a3f0_func
		cmpb   $0x000000,_0cefa3_data
		je     _0177cd_jump
		call   _016e51_func
		mov    %eax,0x000004(%esp)

	_0177cd_jump:
		cmpb   $0x000000,_0cefa3_data
		je     _0177e3_jump
		mov    0x000004(%esp),%ebx
		movzwl _0ced48_data,%ebp
		add    %ebx,%ebp

	_0177e3_jump:
		call   _0538c8_func
		cmpb   $0x000020,_0cefd4_data
		jb     _0177ff_jump
		cmpb   $0x000000,_0cefb6_data
		jne    _0177ff_jump
		call   _03c598_func

	_0177ff_jump:
		call   _03b75c_func
		cmpb   $0x000000,_0cefa7_data
		je     _017812_jump
		call   _070338_func

	_017812_jump:
		cmpl   $0x000001,_0cce24_data
		jne    _017831_jump
		mov    _0cedf8_data,%edx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03a6b4_func

	_017831_jump:
		call   _040c04_func
		mov    _0ced3c_data,%dl
		xor    %ebx,%ebx

	_01783e_jump:
		call   _0175f0_func
		mov    _0cedd4_data,%di
		cmp    %di,%bx
		jne    _017864_jump
		cmp    _0cedea_data,%di
		jne    _017864_jump
		cmp    _0cefd1_data,%bl
		jne    _017864_jump
		mov    $0x000001,%al
		jmp    _017866_jump

	_017864_jump:
		mov    %bl,%al

	_017866_jump:
		mov    %al,0x00000c(%esp)
		test   %al,%al
		je     _017875_jump
		dec    %dl
		cmp    $0x0000ff,%dl
		jne    _01783e_jump

	_017875_jump:
		cmpb   $0x000000,_0cefa3_data
		je     _017883_jump
		call   _016e51_func

	_017883_jump:
		cmpb   $0x000000,_095b56_data
		je     _0178ad_jump
		cmpb   $0x000001,_0cef74_data
		jne    _0178ad_jump
		mov    _0cedf8_data,%edx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03ac90_func
		jmp    _0178f4_jump

	_0178ad_jump:
		cmpb   $0x000000,_095b56_data
		je     _0178d7_jump
		cmpb   $0x000002,_0cef74_data
		jne    _0178d7_jump
		mov    _0cedf8_data,%edx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03ac90_func
		jmp    _0178f4_jump

	_0178d7_jump:
		mov    _0cccb4_data,%edi
		mov    $0x0003ce,%edx
		mov    $0x000a04,%ax
		out    %ax,(%dx)
		mov    $0x000000,%eax
		mov    $0x000fa0,%ecx
		rep stos %eax,%es:(%edi)

	_0178f4_jump:
		cmpw   $0x000000,_0ced5a_data
		je     _017903_jump
		call   _019ab4_func

	_017903_jump:
		mov    _0cedf8_data,%edx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03ad58_func
		call   _01aaa0_func
		cmpb   $0x000000,_0cefa3_data
		je     _01792c_jump
		call   _016e51_func

	_01792c_jump:
		call   _0197b4_func
		cmpb   $0x000000,_0cefa3_data
		je     _01793f_jump
		call   _016e51_func

	_01793f_jump:
		call   _019e98_func
		cmpw   $0x000000,_0ced5a_data
		je     _017953_jump
		call   _019c90_func

	_017953_jump:
		cmpb   $0x000000,_0cefac_data
		je     _017963_jump
		call   _01ab6c_func
		jmp    _01796d_jump

	_017963_jump:
		mov    _0cce28_data,%eax
		call   _019220_func

	_01796d_jump:
		cmpb   $0x000000,_0cef68_data
		je     _01797b_jump
		call   _0191e4_func

	_01797b_jump:
		mov    _0cce28_data,%eax
		call   _01b1bc_func
		cmpb   $0x000000,_0cef6d_data
		je     _01799b_jump
		mov    _0cccb4_data,%edi
		call   _0144c0_func
		jmp    _0179a6_jump

	_01799b_jump:
		mov    _0cccb4_data,%edi
		call   _014456_func

	_0179a6_jump:
		cmpb   $0x000000,_0cef95_data
		je     _0179f9_jump
		call   _034de0_func
		cmpb   $0x000000,_095b56_data
		je     _0179cd_jump
		cmpb   $0x000002,_0cef74_data
		jne    _0179cd_jump
		movb   $0x000001,0x000008(%esp)
		jmp    _0179f9_jump

	_0179cd_jump:
		cmpb   $0x000000,_095b56_data
		je     _0179f9_jump
		cmpb   $0x000001,_0cef6d_data
		jne    _0179f9_jump
		mov    _0ccd34_data,%edx
		mov    _0ccd1c_data,%ebx
		mov    _0ccd40_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func

	_0179f9_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _017a69_jump
		mov    _0cef6d_data,%eax
		sar    $0x000018,%eax
		mov    _0ce49d_data(%eax),%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		je     _017a63_jump
		call   _01cb80_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _045f18_func
		mov    %eax,_0ccd2c_data
		mov    _0cef6d_data,%eax
		sar    $0x000018,%eax
		mov    _0ce49d_data(%eax),%eax
		sar    $0x000018,%eax
		call   _045934_func
		mov    _0ccd34_data,%edx
		mov    _0ccd1c_data,%ebx
		mov    _0ccd40_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func
		xor    %esi,%esi
		mov    %esi,_0cce0c_data

	_017a63_jump:
		xor    %al,%al
		mov    %al,0x000008(%esp)

	_017a69_jump:
		call   _040824_func
		test   %ax,%ax
		jne    _017ab9_jump
		call   _0407b4_func
		test   %ax,%ax
		jne    _017ab9_jump
		call   _040894_func
		test   %ax,%ax
		jne    _017ab9_jump
		call   _040904_func
		test   %ax,%ax
		jne    _017ab9_jump
		call   _040974_func
		test   %ax,%ax
		jne    _017ab9_jump
		call   _040a00_func
		test   %ax,%ax
		jne    _017ab9_jump
		call   _040a8c_func
		test   %ax,%ax
		jne    _017ab9_jump
		call   _040b18_func
		test   %ax,%ax
		je     _017ac1_jump

	_017ab9_jump:
		xor    %edi,%edi
		mov    %edi,_0cc4e8_data

	_017ac1_jump:
		mov    _0cc4e8_data,%eax
		inc    %eax
		mov    %eax,_0cc4e8_data
		cmp    $0x000708,%eax
		jl     _017ada_jump
		movb   $0x000002,_0cef8a_data

	_017ada_jump:
		cmpl   $0x005460,_0cc4e8_data
		jl     _017aed_jump
		movb   $0x000001,_0cefa5_data

	_017aed_jump:
		cmpb   $0x000000,_0cefa5_data
		je     _017b1e_jump
		mov    _095b4c_data,%bl
		test   %bl,%bl
		jne    _017b1e_jump
		cmpb   $0x000041,_0cefdb_data
		jne    _017b18_jump
		xor    %ecx,%ecx
		call   _0377bc_func
		mov    %ecx,_0cc4e8_data
		jmp    _017b1e_jump

	_017b18_jump:
		mov    %bl,_0cefa5_data

	_017b1e_jump:
		mov    (%esp),%eax
		call   _0363b0_func
		cmpb   $0x000000,_0cefa3_data
		je     _01777b_jump
		cmpb   $0x000000,_0cefa2_data
		je     _01777b_jump
		cmpb   $0x000000,0x00000c(%esp)
		je     _01777b_jump
		mov    %ebp,%ebx
		call   _016eb1_func
		test   %ecx,%ecx
		jne    _01777b_jump
		call   _0175f0_func
		mov    _0cdbf8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _017b73_jump
		incw   _0cdbfa_data

	_017b73_jump:
		cmpb   $0x000000,_0cefa2_data
		je     _01777b_jump
		call   _016dee_func
		jmp    _01777b_jump

	_017b8a_jump:
		xor    %dh,%dh
		mov    %dh,_0cefed_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_017cbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		call   _07b020_func
		mov    $0x3eb00000,%ecx
		mov    %eax,%esi
		xor    %ebx,%ebx
		call   _07b95f_func
		call   _07bb4f_func
		push   %edx
		push   %eax
		push   $_0c00b0_data
		call   _07bcec_func
		mov    _0cef7a_data,%al
		add    $0x00000c,%esp
		cmp    $0x000003,%al
		jb     _017d27_jump
		jbe    _017cfa_jump
		cmp    $0x000004,%al
		je     _017d20_jump
		jmp    _017d27_jump

	_017cfa_jump:
		push   $_0c00d4_data
		call   _07bcec_func
		add    $0x000004,%esp
		push   $_0c00f0_data
		call   _07bcec_func
		add    $0x000004,%esp
		mov    $0xffffffff,%eax
		call   _07bd0f_func
		jmp    _017d5f_jump

	_017d20_jump:
		push   $_0c0110_data
		jmp    _017d57_jump

	_017d27_jump:
		mov    _0cef7a_data,%ah
		cmp    $0x000005,%ah
		jne    _017d39_jump
		push   $_0c012c_data
		jmp    _017d57_jump

	_017d39_jump:
		jbe    _017d52_jump
		xor    %eax,%eax
		mov    _0cef7a_data,%al
		push   %eax
		push   $_0c014c_data
		call   _07bcec_func
		add    $0x000008,%esp
		jmp    _017d5f_jump

	_017d52_jump:
		push   $_0c0170_data

	_017d57_jump:
		call   _07bcec_func
		add    $0x000004,%esp

	_017d5f_jump:
		mov    _0cef6c_data,%al
		cmp    $0x000081,%al
		jb     _017d77_jump
		jbe    _017d93_jump
		cmp    $0x000082,%al
		jbe    _017da2_jump
		cmp    $0x000083,%al
		je     _017dc0_jump
		jmp    _017df9_jump

	_017d77_jump:
		test   %al,%al
		jbe    _017d84_jump
		cmp    $0x000001,%al
		je     _017db1_jump
		jmp    _017df9_jump

	_017d84_jump:
		push   $_0c0190_data
		call   _07bcec_func
		add    $0x000004,%esp
		jmp    _017df9_jump

	_017d93_jump:
		push   $_0c01a8_data
		call   _07bcec_func
		add    $0x000004,%esp
		jmp    _017df9_jump

	_017da2_jump:
		push   $_0c01c8_data
		call   _07bcec_func
		add    $0x000004,%esp
		jmp    _017df9_jump

	_017db1_jump:
		push   $_0c01ec_data
		call   _07bcec_func
		add    $0x000004,%esp
		jmp    _017df9_jump

	_017dc0_jump:
		mov    _0cef67_data,%dh
		cmp    $0x000004,%dh
		jne    _017ddf_jump
		xor    %eax,%eax
		mov    _0cef66_data,%al
		push   %eax
		xor    %eax,%eax
		mov    %dh,%al
		push   %eax
		push   $_0c020c_data
		jmp    _017df1_jump

	_017ddf_jump:
		xor    %eax,%eax
		mov    _0cef66_data,%al
		push   %eax
		xor    %eax,%eax
		mov    %dh,%al
		push   %eax
		push   $_0c0224_data

	_017df1_jump:
		call   _07bcec_func
		add    $0x00000c,%esp

	_017df9_jump:
		xor    %bl,%bl
		mov    %bl,_0cef6d_data
		cmp    $0x200000,%esi
		jae    _017e18_jump
		mov    $_0c0240_data,%eax
		call   _01f3a4_func
		jmp    _017ef6_jump

	_017e18_jump:
		cmp    $0x400000,%esi
		jb     _017e29_jump
		cmpb   $0x000004,_0cef7a_data
		ja     _017e93_jump

	_017e29_jump:
		mov    $0x000001,%al
		mov    $0x000002,%bh
		mov    $0x007000,%ebp
		xor    %cl,%cl
		mov    $0x062c00,%edx
		mov    %cl,_0cef87_data
		mov    %cl,_0cef86_data
		mov    %al,_0cef72_data
		mov    %al,_0cef6e_data
		mov    %cl,_0cef73_data
		mov    %al,_095b15_data
		mov    %al,_0cef6d_data
		mov    %bh,_0cef74_data
		mov    %ebp,_0ccdc4_data
		mov    %edx,_0ccdfc_data
		mov    $0x04ec00,%eax
		mov    $0x03b800,%ebx
		mov    $0x0d0c00,%ecx
		mov    %eax,_0ccdf8_data
		mov    %ebx,_0ccdf0_data
		mov    %ecx,_0ccdf4_data
		jmp    _017ef6_jump

	_017e93_jump:
		mov    $0x000001,%cl
		mov    $0x022000,%edx
		mov    $0x058400,%esi
		mov    $0x0d0c00,%edi
		mov    %bl,_0cef86_data
		mov    %bl,_0cef73_data
		mov    %bl,_095b15_data
		mov    $0x04d800,%ebx
		mov    %cl,_0cef87_data
		mov    %cl,_0cef72_data
		mov    %cl,_0cef6e_data
		mov    %cl,_0cef74_data
		mov    %edx,_0ccdc4_data
		mov    %esi,_0ccdf0_data
		mov    %edi,_0ccdf4_data
		mov    $0x0f4c00,%ecx
		mov    %ebx,_0ccdf8_data
		mov    %ecx,_0ccdfc_data

	_017ef6_jump:
		cmpb   $0x000000,_0cef72_data
		je     _017fb1_jump
		push   $_0c0254_data
		call   _07bcec_func
		add    $0x000004,%esp
		call   _03d590_func
		test   %eax,%eax
		je     _017f27_jump
		xor    %ch,%ch
		mov    %ch,_0cef6e_data
		mov    %ch,_0cef72_data

	_017f27_jump:
		cmpb   $0x000000,_0cef72_data
		je     _017f47_jump
		call   _03d600_func
		test   %eax,%eax
		je     _017f47_jump
		xor    %dl,%dl
		mov    %dl,_0cef6e_data
		mov    %dl,_0cef72_data

	_017f47_jump:
		cmpb   $0x000000,_0cef72_data
		je     _017fa4_jump
		call   _03dacc_func
		push   %eax
		push   $_0c0270_data
		call   _07bcec_func
		add    $0x000008,%esp
		call   _03dad4_func
		mov    (%eax),%esi
		push   %esi
		push   $_0c0288_data
		call   _07bcec_func
		add    $0x000008,%esp
		call   _03dadc_func
		mov    (%eax),%edi
		push   %edi
		push   $_0c0298_data
		call   _07bcec_func
		add    $0x000008,%esp
		call   _03dae4_func
		mov    (%eax),%ebp
		push   %ebp
		push   $_0c02a8_data
		call   _07bcec_func
		add    $0x000008,%esp
		jmp    _017fb1_jump

	_017fa4_jump:
		push   $_0c02b8_data
		call   _07bcec_func
		add    $0x000004,%esp

	_017fb1_jump:
		push   $_0c02d8_data
		call   _07bcec_func
		mov    _0cef87_data,%bh
		add    $0x000004,%esp
		test   %bh,%bh
		je     _017fcf_jump
		push   $_0c02dc_data
		jmp    _017fd4_jump

	_017fcf_jump:
		push   $_0c02fc_data

	_017fd4_jump:
		call   _07bcec_func
		add    $0x000004,%esp
		cmpb   $0x000000,_0cef72_data
		je     _017ffc_jump
		cmpb   $0x000000,_0cefa7_data
		je     _017ff5_jump
		push   $_0c0314_data
		jmp    _018011_jump

	_017ff5_jump:
		push   $_0c032c_data
		jmp    _018011_jump

	_017ffc_jump:
		cmpb   $0x000000,_0cefa7_data
		je     _01800c_jump
		push   $_0c0348_data
		jmp    _018011_jump

	_01800c_jump:
		push   $_0c0364_data

	_018011_jump:
		call   _07bcec_func
		add    $0x000004,%esp
		cmpb   $0x000000,_0cef74_data
		je     _018031_jump
		push   $_0c037c_data
		call   _07bcec_func
		add    $0x000004,%esp
		jmp    _01803e_jump

	_018031_jump:
		push   $_0c0394_data
		call   _07bcec_func
		add    $0x000004,%esp

	_01803e_jump:
		push   $_0c02d8_data
		call   _07bcec_func
		xor    %edx,%edx
		add    $0x000004,%esp
		mov    $0x000064,%esi

	_018052_jump:
		mov    $0x000001,%eax
		call   _040780_func
		test   %al,%al
		je     _01807e_jump

	_018060_jump:
		call   _0411b8_func
		push   $_0c02d8_data
		call   _07bcec_func
		add    $0x000004,%esp
		call   _018090_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01807e_jump:
		mov    %esi,%eax
		inc    %edx
		call   _07bd3e_func
		cmp    $0x000028,%edx
		jl     _018052_jump
		jmp    _018060_jump



_018090_func:
		push   %edx
		xor    %ah,%ah
		mov    $0x000300,%edx
		mov    %ah,_0cef68_data
		mov    $0x000010,%eax
		call   _07b82c_func
		mov    %eax,_0ccd88_data
		test   %eax,%eax
		jne    _0180bb_jump
		mov    $_0c03a4_data,%eax
		call   _01f3a4_func

	_0180bb_jump:
		mov    $0x000008,%edx
		mov    $0x000200,%eax
		call   _07b82c_func
		mov    %eax,_0cce14_data
		test   %eax,%eax
		jne    _0180dd_jump
		mov    $_0c03c4_data,%eax
		call   _01f3a4_func

	_0180dd_jump:
		cmpb   $0x000000,_0cef87_data
		sete   %al
		xor    %dh,%dh
		mov    %al,_095b15_data
		mov    %dh,_0cef6a_data
		pop    %edx
		ret    



_0180f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		call   _03c85c_func
		mov    $0x0b8000,%edx
		push   $_0c041c_data
		mov    $_0c03e4_data,%ebx
		mov    $_0c03f8_data,%ebp
		call   _07bcec_func
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)
		add    $0x000004,%esp

	_01812a_jump:
		add    $0x000002,%edx
		movb   $0x00001e,-0x000001(%edx)
		cmp    $0x0b80a0,%edx
		jne    _01812a_jump
		mov    (%esp),%esi
		mov    0x000004(%esp),%ebx
		xor    %edx,%edx
		jmp    _01814e_jump

	_018144_jump:
		add    $0x000002,%esi
		mov    (%ebx),%cl
		inc    %ebx
		inc    %edx
		mov    %cl,-0x000002(%esi)

	_01814e_jump:
		mov    0x000004(%esp),%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmp    %ecx,%edx
		jb     _018144_jump
		mov    (%esp),%edx
		mov    %ebp,%esi
		xor    %ebx,%ebx
		jmp    _01817c_jump

	_018169_jump:
		mov    (%esi),%cl
		mov    0x00005f(%edx),%ah
		add    $0x000002,%edx
		inc    %esi
		or     $0x000080,%ah
		mov    %cl,0x00005c(%edx)
		inc    %ebx
		mov    %ah,0x00005d(%edx)

	_01817c_jump:
		mov    %ebp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmp    %ecx,%ebx
		jb     _018169_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018198_func:
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    $_0c0420_data,%eax
		call   _07bd43_jump
		mov    $_0c042c_data,%eax
		mov    $_0cef66_data,%edx
		call   _07bd43_jump
		call   _0180f8_func
		mov    $_0cef67_data,%eax
		mov    $_0cee4e_data,%edi
		call   _07aef0_func
		mov    %al,_0cef6c_data
		mov    $0x000001,%ah
		mov    (%esi),%esi
		mov    %ah,_095b9e_data
		mov    %ah,_0cefa7_data
		push   %edi

	_0181df_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0181f7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0181df_jump

	_0181f7_jump:
		pop    %edi
		call   _018200_func
		pop    %edi
		pop    %esi
		ret    



_018200_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %ah,%ah
		mov    %ah,(%esp)
		call   _016074_func
		mov    %al,_0cef7a_data
		mov    $0x000001,%eax
		call   _069178_func
		mov    _095b9e_data,%al
		mov    %al,_0cefa7_data
		test   %al,%al
		je     _01824c_jump
		push   $_0c043c_data
		call   _07bcec_func
		add    $0x000004,%esp
		call   _0704b8_func
		mov    _0cefa7_data,%al
		mov    %al,_095b9e_data

	_01824c_jump:
		mov    $0x000001,%dh
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		mov    %dh,_0cefa4_data
		call   _0411d0_func
		mov    $_03697c_func,%eax
		mov    $0x0000c8,%edx
		call   _07bd9b_func
		call   _069040_func
		call   _017cbc_func
		xor    %eax,%eax
		call   _01614e_func
		call   _0583b4_func
		call   _035b4c_func
		call   _06ec64_func
		mov    $0x000001,%bl
		call   _035680_func
		mov    %bl,_0cef8a_data
		xor    %bh,%bh
		mov    $0x000003,%ch
		mov    %bh,_0cef89_data
		call   _0474c8_func
		mov    %bl,_0cef89_data
		call   _035a70_func
		mov    _0cefa7_data,%al
		mov    %ch,_0cef99_data
		test   %al,%al
		je     _0182ca_jump
		call   _01cb80_func

	_0182ca_jump:
		mov    $0x0000c8,%ebp

	_0182cf_jump:
		cmpb   $0x000000,_0cefcf_data
		jne    _018669_jump
		call   _036424_jump
		call   _066650_func
		call   _05a850_func
		call   _03524c_func
		cmpb   $0x000000,_0cefd1_data
		jne    _018610_jump
		cmpw   $0x000000,_0ce4aa_data
		jl     _018610_jump
		cmpw   $0x000000,_0cedea_data
		je     _018610_jump
		mov    $0x000001,%eax
		mov    $0x000140,%ebx
		call   _069178_func
		call   _068adc_func
		call   _0160e8_func
		call   _034b10_func
		mov    %ebp,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _01614e_func
		cmpb   $0x000000,_0cef8a_data
		je     _0183c1_jump
		mov    $0x000001,%ecx
		mov    $0x000004,%ebx
		xor    %edi,%edi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %cx,_0cedea_data
		mov    %cx,_0cedd4_data
		mov    %di,_0cede4_data
		mov    %di,_0cedd0_data
		mov    %cx,_0ced92_data
		mov    %bx,_0ced84_data
		mov    _0ced80_data,%bh
		mov    _0ced81_data,%cl
		mov    _0ced84_data,%dl
		mov    _0ced92_data,%al
		and    $0x000000,%bh
		and    $0x0000fc,%cl
		mov    %bh,_0ced80_data
		mov    %cl,_0ced81_data
		xor    %ch,%ch
		call   _0356f8_func
		mov    %ch,_0ca425_data
		mov    %ch,_0cef89_data

	_0183c1_jump:
		call   _035fe8_func
		cmpb   $0x000000,_0cef72_data
		je     _0183e5_jump
		cmpb   $0x000000,_0cef6e_data
		jne    _0183e5_jump
		mov    _0ced90_data,%eax
		sar    $0x000010,%eax
		call   _03d860_func

	_0183e5_jump:
		mov    $0x000001,%edi

	_0183ea_jump:
		cmpb   $0x000000,_0cefd1_data
		jne    _0185f5_jump
		cmpw   $0x000000,_0cedea_data
		jne    _0185f5_jump
		cmpw   $0x000000,_0cedd4_data
		je     _0185f5_jump
		mov    $0x000005,%eax
		call   _03c9a4_func
		call   _016ecc_func
		call   _036100_func
		mov    %esp,%eax
		call   _035c04_func
		cmpb   $0x000000,_095b15_data
		jne    _01844b_jump
		cmpw   $0x000006,_0cede4_data
		jne    _01844b_jump
		cmpw   $0x000004,_0cedd0_data
		je     _018454_jump

	_01844b_jump:
		call   _0264c0_func
		test   %al,%al
		je     _018459_jump

	_018454_jump:
		call   _047754_func

	_018459_jump:
		mov    _0cedd2_data,%eax
		sar    $0x000010,%eax
		call   _0584f4_func
		call   _0381bc_func
		call   _077cbc_func
		call   _03be04_func
		cmpb   $0x000000,_0cef7e_data
		je     _01848d_jump
		mov    $_0c7198_data,%edx
		mov    $0x000002,%eax
		call   _03b550_func

	_01848d_jump:
		cmpb   $0x000000,_0cefd1_data
		jne    _0185df_jump
		cmpw   $0x000000,_0cedd4_data
		jne    _0185df_jump
		cmpw   $0x000000,_0cedea_data
		jne    _0185df_jump
		mov    $0x00000f,%eax
		call   _03c9a4_func
		call   _0587d8_func
		call   _058820_func
		call   _0356b8_func
		cmpb   $0x000000,_0cef8a_data
		jne    _0184df_jump
		movb   $0x000001,_0cef89_data

	_0184df_jump:
		call   _047840_func
		mov    _095b15_data,%dh
		mov    %al,_095b56_data
		test   %dh,%dh
		jne    _018538_jump
		call   _047754_func
		xor    %eax,%eax
		mov    _0cef9f_data,%al
		call   _03c86c_func
		xor    %eax,%eax
		mov    $0x000001,%ebx
		mov    _095b54_data,%al
		xor    %dl,%dl
		call   _04766c_func
		call   _05b3f0_func
		mov    %esp,%eax
		mov    %dx,_095b9c_data
		call   _017048_func
		mov    %bx,_095b9c_data
		call   _05b460_func
		jmp    _01859e_jump

	_018538_jump:
		call   _0160e8_func
		xor    %eax,%eax
		mov    _0cef9f_data,%al
		call   _03c740_func
		xor    %eax,%eax
		mov    _095b54_data,%al
		call   _04766c_func
		mov    _0cedf8_data,%edx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03a6b4_func
		mov    _0ccd34_data,%edx
		mov    _0ccd1c_data,%ebx
		mov    _0ccd40_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func
		xor    %esi,%esi
		mov    %esp,%eax
		mov    %si,_095b9c_data
		call   _017728_func
		movw   $0x000001,_095b9c_data

	_01859e_jump:
		cmpb   $0x000000,_0cef72_data
		je     _0185ac_jump
		call   _06ed40_func

	_0185ac_jump:
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %ebp,%edx
		mov    _0cef9f_data,%al
		xor    %ecx,%ecx
		call   _03c86c_func
		xor    %eax,%eax
		call   _01614e_func
		call   _0356b8_func
		xor    %bh,%bh
		call   _067968_func
		mov    %bh,_095b98_data
		jmp    _01848d_jump

	_0185df_jump:
		call   _0586e4_func
		call   _036424_jump
		mov    %di,_0cedea_data
		jmp    _0183ea_jump

	_0185f5_jump:
		cmpb   $0x000000,_0cefa7_data
		je     _018603_jump
		call   _01cb80_func

	_018603_jump:
		mov    $0x000001,%bh
		call   _03644c_func
		mov    %bh,_0cefd1_data

	_018610_jump:
		call   _036428_func
		mov    $0x000001,%ecx
		xor    %edi,%edi
		mov    %cx,_0cedea_data
		mov    %cx,_0cedd4_data
		mov    %di,_0cede4_data
		mov    _0cef8a_data,%cl
		mov    %di,_0cedd0_data
		test   %cl,%cl
		je     _018652_jump
		mov    _0cef89_data,%ch
		test   %ch,%ch
		jne    _018652_jump
		mov    %ch,_0cef8a_data

	_018652_jump:
		cmpb   $0x000000,_0cef89_data
		je     _0182cf_jump
		call   _0354bc_func
		jmp    _0182cf_jump

	_018669_jump:
		cmpb   $0x000000,_0cef72_data
		je     _01867c_jump
		call   _06ed40_func
		call   _03da20_func

	_01867c_jump:
		call   _03645c_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018690_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%esi
		mov    %dl,0x000018(%esp)
		mov    %bl,0x000014(%esp)
		mov    %cl,0x000010(%esp)
		mov    _0ceda2_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _01884f_jump
		mov    _0ced9c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _01884f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    _0cdb18_data,%ebx
		movsbl (%eax,%edx,8),%edx
		mov    _0cdb10_data,%eax
		add    %ebx,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x00000e,%edx
		sbb    %edx,%eax
		sar    $0x00000e,%eax
		mov    _0ceda4_data,%di
		sub    0x000028(%esi),%di
		shl    $0x000004,%edi
		mov    0x00002c(%esi),%cx
		mov    %di,0x000008(%esp)
		mov    _0ced9e_data,%di
		sub    %ecx,%edi
		mov    %eax,%edx
		mov    0x000008(%esp),%eax
		shl    $0x000004,%edi
		test   %ax,%ax
		jne    _018736_jump
		test   %di,%di
		je     _01884f_jump

	_018736_jump:
		test   %edx,%edx
		je     _01884f_jump
		movswl %di,%ebp
		mov    %ebp,%eax
		test   %eax,%eax
		jge    _018749_jump
		neg    %eax

	_018749_jump:
		mov    %eax,%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _018758_jump
		neg    %eax

	_018758_jump:
		cmp    %ebx,%eax
		jge    _01875e_jump
		mov    %ebx,%eax

	_01875e_jump:
		mov    %eax,(%esp)
		mov    -0x000002(%esp),%eax
		mov    %edx,%ebx
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		cmp    %ebx,%eax
		jle    _018772_jump
		mov    %ebx,%eax

	_018772_jump:
		mov    %eax,0x000004(%esp)
		mov    (%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		mov    0x000004(%esp),%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    0x000008(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000004,%cl
		mov    %ax,0x00000c(%esp)
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _01885b_jump
		xor    %eax,%eax
		mov    $0x0000ff,%ebx
		mov    0x000014(%esp),%al
		mov    0x00003e(%esi),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax
		imul   %eax,%edx
		xor    %ebx,%ebx
		mov    0x00000a(%esp),%eax
		mov    0x000014(%esp),%bl
		sar    $0x000010,%eax
		imul   %ebx,%eax
		add    %eax,%edx
		mov    $0x0000ff,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x00006d(%esi),%dh
		mov    %ax,0x000040(%esi)
		cmp    $0x000002,%dh
		jne    _01880f_jump
		cmp    0x000004(%esp),%ebp
		jg     _01880f_jump
		movb   $0x0000ff,0x000010(%esp)

	_01880f_jump:
		xor    %eax,%eax
		mov    $0x0000ff,%ebx
		mov    0x000010(%esp),%al
		mov    0x000040(%esi),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax
		mov    %edx,%ebx
		imul   %eax,%ebx
		xor    %eax,%eax
		movswl %di,%edx
		mov    0x000010(%esp),%al
		imul   %eax,%edx
		add    %ebx,%edx
		mov    $0x0000ff,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_01884f_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_01885b_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_018864_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0ceda2_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		cmp    $0xffff8300,%ebx
		jne    _018897_jump
		mov    _0ced9c_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffff8300,%ebx
		jne    _018897_jump
		cmpw   $0x000000,0x000048(%edx)
		jne    _0188bc_jump
		jmp    _0188b7_jump

	_018897_jump:
		mov    _0ceda2_data,%ebx
		mov    0x000028(%edx),%ecx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jne    _0188bc_jump
		mov    _0ced9c_data,%ebx
		mov    0x00002c(%edx),%esi
		sar    $0x000010,%ebx
		cmp    %esi,%ebx
		jne    _0188bc_jump

	_0188b7_jump:
		mov    $0x000001,%eax

	_0188bc_jump:
		test   %ax,%ax
		je     _0188c8_jump
		movb   $0x000001,_0cefc1_data

	_0188c8_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0188d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ebx,%ebx
		mov    0x00002c(%eax),%cx
		mov    0x000069(%eax),%bl
		movzbw 0x000068(%eax),%si
		add    %ecx,%ebx
		mov    0x000028(%eax),%dx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%esi

	_0188f0_jump:
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_092224_data(%edx)
		jne    _01892d_jump
		mov    _0cedd8_data,%edx
		sar    $0x000010,%edx
		movswl %bx,%ecx
		add    $0x0000c8,%edx
		cmp    %edx,%ecx
		jg     _01892d_jump
		add    $0x000010,%ebx
		movswl %bx,%eax
		sar    $0x000004,%eax
		jmp    _0188f0_jump

	_01892d_jump:
		and    $0x0000f0,%bl
		and    $0x00000f,%esi
		mov    %ebx,%ecx
		movswl %si,%edx
		and    $0x0000ff,%eax
		xor    %ebx,%ebx
		call   _02494c_func
		add    %ecx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01894c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cede8_data,%dx
		mov    _0cedc2_data,%bx
		mov    _0cedc0_data,%cx
		mov    _0cedda_data,%di
		cmpb   $0x000000,_095b15_data
		jne    _0189d6_jump
		mov    _0cc5ac_data,%eax
		neg    %eax
		movswl %cx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jge    _018993_jump
		mov    _0cc5ac_data,%cx
		neg    %ecx
		add    $0x000008,%ecx

	_018993_jump:
		movswl %dx,%eax
		movswl %cx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jle    _0189a5_jump
		mov    %edx,%ecx
		add    $0x000008,%ecx

	_0189a5_jump:
		mov    _0cc5ac_data,%eax
		neg    %eax
		movswl %bx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jge    _0189c2_jump
		mov    _0cc5ac_data,%bx
		neg    %ebx
		add    $0x000008,%ebx

	_0189c2_jump:
		movswl %dx,%eax
		movswl %bx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jle    _0189f2_jump
		mov    %edx,%ebx
		add    $0x000008,%ebx
		jmp    _0189f2_jump

	_0189d6_jump:
		test   %cx,%cx
		jge    _0189dd_jump
		xor    %ecx,%ecx

	_0189dd_jump:
		cmp    %dx,%cx
		jle    _0189e4_jump
		mov    %edx,%ecx

	_0189e4_jump:
		test   %bx,%bx
		jge    _0189eb_jump
		xor    %ebx,%ebx

	_0189eb_jump:
		cmp    %dx,%bx
		jle    _0189f2_jump
		mov    %edx,%ebx

	_0189f2_jump:
		mov    _0cedbc_data,%eax
		mov    _0cc5b4_data,%esi
		sar    $0x000010,%eax
		neg    %esi
		cmp    %esi,%eax
		jge    _018a1d_jump
		mov    _0cc5b4_data,%ax
		mov    %eax,%esi
		mov    %ax,_0cedbe_data
		neg    %esi
		mov    %si,_0cedbe_data

	_018a1d_jump:
		mov    _0cedbe_data,%ax
		cmp    %di,%ax
		jle    _018a2f_jump
		mov    %di,_0cedbe_data

	_018a2f_jump:
		mov    _0cedc2_data,%esi
		mov    _0cc5b4_data,%eax
		sar    $0x000010,%esi
		neg    %eax
		cmp    %eax,%esi
		jge    _018a57_jump
		mov    _0cc5b4_data,%ax
		mov    %ax,_0cedc4_data
		neg    %eax
		mov    %ax,_0cedc4_data

	_018a57_jump:
		mov    _0cedc4_data,%ax
		cmp    %di,%ax
		jle    _018a69_jump
		mov    %di,_0cedc4_data

	_018a69_jump:
		mov    %di,_0cedda_data
		mov    %cx,_0cedc0_data
		mov    %bx,_0cedc2_data
		mov    %dx,_0cede8_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018a8c_func:
		push   %edx
		mov    _0cedba_data,%dx
		mov    %dx,_0cedc0_data
		mov    _0cedc8_data,%dx
		mov    %dx,_0cedc2_data
		call   _0188d0_func
		mov    _0cc5b0_data,%dx
		sub    _0cc5b4_data,%dx
		mov    %ax,_0ced72_data
		sub    %edx,%eax
		sub    $0x000010,%eax
		mov    %ax,_0cedbe_data
		mov    _0cedda_data,%ax
		mov    %ax,_0cedc4_data
		call   _01894c_func
		pop    %edx
		ret    



_018ae0_func:
		adc    $0x15181716,%eax
		sbb    %edx,(%esi)
		adc    $0x56525153,%eax
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ebp
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ebp),%eax
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		and    $0x00003f,%dh
		mov    %dx,0x000010(%esp)
		mov    0x00000e(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x00006b(%ebp),%dl
		imul   %ebx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    %eax,(%esp)
		xor    %edx,%edx
		mov    _0cccb4_data,%eax
		mov    %edx,0x000014(%esp)
		mov    %eax,0x00000c(%esp)
		jmp    _018c8f_jump

	_018b46_jump:
		mov    (%esp),%edx
		xor    %eax,%eax
		mov    0x000038(%ebp),%bx
		mov    0x000002(%edx),%al
		add    %ebx,%eax
		movswl %ax,%edx
		mov    0x000058(%ebp),%eax
		sar    $0x000010,%eax
		call   _01d170_func
		mov    (%esp),%edx
		mov    %eax,%esi
		xor    %ah,%ah
		mov    0x000003(%edx),%al
		test   %ax,%ax
		je     _018c7d_jump
		and    $0x00ffff,%eax
		imul   $0x00000c,%eax,%eax
		mov    0x000000(%ebp),%ebx
		add    %eax,%ebx
		cmpb   $0x000000,0x000004(%ebx)
		je     _018c7d_jump
		testb  $0x000008,0x000081(%ebp)
		jne    _018ba5_jump
		mov    (%esp),%edx
		xor    %eax,%eax
		mov    0x000036(%ebp),%cx
		mov    0x000001(%edx),%al
		add    %ecx,%eax
		jmp    _018bed_jump

	_018ba5_jump:
		cmpw   $0x000100,0x00005a(%ebp)
		jne    _018bc9_jump
		cmpw   $0x000005,0x000014(%esp)
		jne    _018bc9_jump
		mov    0x00006a(%ebp),%dh
		cmp    $0x000010,%dh
		ja     _018bc9_jump
		cmp    $0x00000e,%dh
		jb     _018bc9_jump
		mov    $0xfffffff0,%eax
		jmp    _018bcb_jump

	_018bc9_jump:
		xor    %eax,%eax

	_018bcb_jump:
		mov    (%esp),%edi
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x000068(%ebp),%dl
		mov    0x000001(%edi),%cl
		add    %edx,%edx
		sub    %ecx,%edx
		mov    %edx,%ecx
		xor    %edx,%edx
		mov    0x000005(%ebx),%dl
		sub    %edx,%ecx
		mov    0x000036(%ebp),%dx
		add    %ecx,%eax
		add    %edx,%eax

	_018bed_jump:
		mov    0x000081(%ebp),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    (%esp),%edi
		xor    %ecx,%ecx
		and    $0x0000ff,%edx
		mov    (%edi),%cl
		xor    %ecx,%edx
		jne    _018c12_jump
		mov    _0cc604_data,%edx
		jmp    _018c18_jump

	_018c12_jump:
		mov    _0cc618_data,%edx

	_018c18_jump:
		mov    %edx,0x000004(%esp)
		movswl %ax,%edx
		mov    0x000058(%ebp),%eax
		sar    $0x000010,%eax
		call   _01d134_func
		cwtl   
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000058(%ebp),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		movswl %si,%edi
		call   _01d0cc_func
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		shl    $0x000008,%ecx
		call   _01d0cc_func
		mov    0x000008(%ebp),%esi
		mov    (%ebx),%edx
		add    %ecx,%eax
		xor    %ecx,%ecx
		add    %edx,%esi
		mov    %ax,%cx
		mov    0x00000a(%ebx),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %edi,%ebx
		mov    0x00000c(%esp),%edi
		mov    %al,%dl
		mov    0x000008(%esp),%eax
		call   *0x000004(%esp)

	_018c7d_jump:
		mov    0x000014(%esp),%esi
		mov    (%esp),%ebx
		inc    %esi
		add    $0x000004,%ebx
		mov    %esi,0x000014(%esp)
		mov    %ebx,(%esp)

	_018c8f_jump:
		xor    %edx,%edx
		mov    0x00000e(%esp),%eax
		mov    0x000014(%esp),%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _018b46_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_018cae_jump:
		ret    



_018cb0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x00000b(%ebx),%al
		shl    $0x000005,%al
		shr    $0x000007,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x00001c(%esp),%dl
		xor    %edx,%eax
		je     _018cef_jump
		mov    _0cc604_data,%eax
		jmp    _018cf4_jump

	_018cef_jump:
		mov    _0cc618_data,%eax

	_018cf4_jump:
		mov    %eax,(%esp)
		mov    0x000058(%esi),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d170_func
		movswl %ax,%ecx
		mov    0x000058(%esi),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		call   _01d134_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%esi),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d0cc_func
		shl    $0x000008,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000058(%esi),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d0cc_func
		add    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    _0cccb4_data,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000008(%esi),%eax
		mov    (%ebx),%esi
		add    %eax,%esi
		mov    0x00000a(%ebx),%al
		shr    $0x000004,%al
		mov    %ecx,%ebx
		movzbl %al,%ebp
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %ebp,%edx
		mov    0x000004(%esp),%edi
		call   *(%esp)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_018d7c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x00000b(%ebx),%al
		shl    $0x000005,%al
		shr    $0x000007,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x00001c(%esp),%dl
		xor    %edx,%eax
		je     _018dbb_jump
		mov    _0cc5f0_data,%eax
		jmp    _018dc0_jump

	_018dbb_jump:
		mov    _0cc60c_data,%eax

	_018dc0_jump:
		mov    %eax,(%esp)
		mov    0x000058(%esi),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d170_func
		movswl %ax,%ecx
		mov    0x000058(%esi),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		call   _01d134_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%esi),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d0cc_func
		shl    $0x000008,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000058(%esi),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d0cc_func
		add    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    _0cccb4_data,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000008(%esi),%eax
		mov    (%ebx),%esi
		add    %eax,%esi
		mov    0x00000a(%ebx),%al
		shr    $0x000004,%al
		mov    %ecx,%ebx
		movzbl %al,%ebp
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %ebp,%edx
		mov    0x000004(%esp),%edi
		call   *(%esp)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_018e48_func:
		cmpb   $0x000000,_0cdcd2_data
		je     _018cae_jump
		mov    _0cdc30_data,%eax
		jmp    _018ae8_func



_018e60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    _095b15_data,%ah
		cmp    $0x000001,%ah
		jne    _018e82_jump
		cmp    _0cef6d_data,%ah
		jne    _018e82_jump
		mov    $0x000010,%eax
		jmp    _018e84_jump

	_018e82_jump:
		xor    %eax,%eax

	_018e84_jump:
		mov    %eax,%edi
		mov    _0ced80_data,%eax
		mov    $0x000001,%edx
		sar    $0x000010,%eax
		mov    %dx,_0ced86_data
		cmp    $0xffffffff,%eax
		je     _018f18_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0cc300_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		cmpb   $0x000000,0x00007f(%esi)
		jne    _018f18_jump
		xor    %eax,%eax
		mov    $0x00003d,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000036(%esi)
		mov    $0x000005,%edx
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		lea    0x000004(%esp),%ecx
		mov    %edx,%eax
		lea    0x000008(%esp),%ebx
		add    %edi,%eax
		mov    %esp,%edx
		mov    %ax,0x000038(%esi)
		lea    0x00000c(%esp),%eax
		call   _016111_func
		mov    $0x000064,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %edx,%ebx
		call   _01614e_func
		mov    %esi,%eax
		call   _018ae8_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _01614e_func

	_018f18_jump:
		mov    _0ced98_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _018f9e_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0cc300_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		cmpb   $0x000000,0x00007f(%esi)
		jne    _018f9e_jump
		xor    %eax,%eax
		mov    $0x000042,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000036(%esi)
		mov    $0x00000e,%edx
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		lea    0x000004(%esp),%ecx
		mov    %edx,%eax
		lea    0x000008(%esp),%ebx
		add    %edi,%eax
		mov    %esp,%edx
		mov    %ax,0x000038(%esi)
		lea    0x00000c(%esp),%eax
		call   _016111_func
		mov    $0x000064,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %edx,%ebx
		call   _01614e_func
		mov    %esi,%eax
		call   _018ae8_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _01614e_func

	_018f9e_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018fa8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		cmpb   $0x000000,_095b15_data
		jne    _018fc8_jump
		mov    $0x000004,%ebx
		xor    %esi,%esi
		mov    %ebx,0x000004(%esp)
		jmp    _018fe2_jump

	_018fc8_jump:
		movl   $0x000008,0x000004(%esp)
		cmpb   $0x000001,_0cef6d_data
		jne    _018fe0_jump
		mov    $0x000008,%esi
		jmp    _018fe2_jump

	_018fe0_jump:
		xor    %esi,%esi

	_018fe2_jump:
		cmpb   $0x000000,_0cefbd_data
		je     _01919c_jump
		mov    0x000076(%edi),%bl
		test   %bl,%bl
		je     _01919c_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000077(%edi),%al
		mov    %bl,%dl
		mov    %eax,%ebx
		sub    %edx,%ebx
		imul   $0x000006,%ebx,%edx
		mov    $0x00001d,%ebx
		sub    %eax,%ebx
		imul   $0x000006,%ebx,%eax
		mov    %eax,(%esp)
		mov    _0cc5b0_data,%ax
		sub    $0x000013,%eax
		sub    %esi,%eax
		movswl %ax,%ecx
		mov    _0cc5ac_data,%ax
		mov    0x000004(%esp),%ebx
		sub    $0x000004,%eax
		add    %ebx,%eax
		add    $0x000014,%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		push   $0x000001
		sub    %edx,%eax
		mov    $0x00003d,%edx
		movswl %ax,%ebx
		mov    _0cdc30_data,%eax
		call   _018cb0_func
		mov    _0cc5b0_data,%ax
		sub    $0x000014,%eax
		sub    %esi,%eax
		movswl %ax,%ecx
		mov    _0cc5ac_data,%ax
		mov    0x000004(%esp),%ebx
		sub    $0x000004,%eax
		add    %ebx,%eax
		mov    (%esp),%edx
		add    $0x000015,%eax
		push   $0x000001
		sub    %edx,%eax
		mov    $0x00003c,%edx
		movswl %ax,%ebx
		mov    _0cdc30_data,%eax
		call   _018cb0_func
		mov    0x000060(%edi),%ax
		cmp    $0x0000bb,%ax
		jb     _0190fb_jump
		jbe    _019142_jump
		cmp    $0x0000da,%ax
		jb     _0190d5_jump
		jbe    _019150_jump
		cmp    $0x0000e3,%ax
		jb     _0190c6_jump
		jbe    _01912d_jump
		cmp    $0x0000e7,%ax
		je     _019150_jump
		jmp    _01915c_jump

	_0190c6_jump:
		cmp    $0x0000df,%ax
		je     _019150_jump
		jmp    _01915c_jump

	_0190d5_jump:
		cmp    $0x0000d4,%ax
		jb     _0190f0_jump
		jbe    _019150_jump
		cmp    $0x0000d5,%ax
		je     _01913b_jump
		jmp    _01915c_jump

	_0190f0_jump:
		cmp    $0x0000c6,%ax
		je     _019134_jump
		jmp    _01915c_jump

	_0190fb_jump:
		cmp    $0x00004a,%ax
		jb     _01911f_jump
		jbe    _019157_jump
		cmp    $0x000096,%ax
		jb     _019117_jump
		jbe    _019149_jump
		cmp    $0x0000b4,%ax
		je     _019157_jump
		jmp    _01915c_jump

	_019117_jump:
		cmp    $0x000062,%ax
		je     _01913b_jump
		jmp    _01915c_jump

	_01911f_jump:
		cmp    $0x00002e,%ax
		jb     _01915c_jump
		jbe    _019134_jump
		cmp    $0x000032,%ax
		jne    _01915c_jump

	_01912d_jump:
		movb   $0x00002c,0x000008(%esp)
		jmp    _01915c_jump

	_019134_jump:
		movb   $0x00006c,0x000008(%esp)
		jmp    _01915c_jump

	_01913b_jump:
		movb   $0x00006e,0x000008(%esp)
		jmp    _01915c_jump

	_019142_jump:
		movb   $0x000071,0x000008(%esp)
		jmp    _01915c_jump

	_019149_jump:
		movb   $0x00006d,0x000008(%esp)
		jmp    _01915c_jump

	_019150_jump:
		movb   $0x000070,0x000008(%esp)
		jmp    _01915c_jump

	_019157_jump:
		movb   $0x00006f,0x000008(%esp)

	_01915c_jump:
		mov    _0cc5b0_data,%ax
		sub    $0x00001e,%eax
		sub    %esi,%eax
		mov    0x000004(%esp),%ebx
		movswl %ax,%ecx
		mov    _0cc5ac_data,%ax
		push   $0x000001
		add    %ebx,%eax
		xor    %edx,%edx
		sub    $0x000004,%eax
		mov    0x00000c(%esp),%dl
		movswl %ax,%ebx
		mov    _0cdc30_data,%eax
		call   _01f3e4_func
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0cdc30_data,%eax
		call   _018cb0_func

	_01919c_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0191e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    $_0c0488_data,%eax
		xor    %ecx,%ecx
		call   _01a178_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    $_0c0494_data,%eax
		call   _01a178_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019220_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edi
		cmpw   $0x000005,_0cedb4_data
		jne    _019260_jump
		mov    _0ced6a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0195e3_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0cc300_data,%eax
		shl    $0x000002,%esi
		add    %esi,%eax
		call   _028014_func
		jmp    _0195e3_jump

	_019260_jump:
		call   _03ee34_func
		cmpb   $0x000040,_0cefd4_data
		je     _019281_jump
		cmpw   $0x000000,_095b50_data
		jne    _019281_jump
		movw   $0x00012c,_095b50_data

	_019281_jump:
		mov    _095b50_data,%si
		test   %si,%si
		jle    _019296_jump
		mov    %esi,%eax
		dec    %eax
		mov    %ax,_095b50_data

	_019296_jump:
		cmpw   $0x000000,_095b4e_data
		jne    _0192b2_jump
		cmpw   $0x000000,_095b50_data
		jne    _0192b2_jump
		test   %edi,%edi
		jne    _0195e3_jump

	_0192b2_jump:
		mov    $0x000023,%esi
		mov    _095b15_data,%dl
		mov    $0x00004d,%eax
		test   %dl,%dl
		jne    _0193ff_jump
		cmpl   $0x000010,_0cc5ac_data
		jg     _0192e0_jump
		cmpl   $0x000005,_0cc5b4_data
		jle    _0193ff_jump

	_0192e0_jump:
		cmpw   $0x000000,_0ced86_data
		je     _0192fd_jump
		mov    $0x000055,%eax
		xor    %edx,%edx
		mov    $0x00002d,%esi
		mov    %dx,_0ced86_data

	_0192fd_jump:
		mov    _0cc5b4_data,%edx
		movswl %si,%ecx
		sub    $0x000005,%edx
		cmp    %ecx,%edx
		jge    _019359_jump
		push   $0x000000
		mov    _0cc5b2_data,%ecx
		movswl %ax,%ebx
		xor    %edx,%edx
		push   $0x0000ff
		mov    $0x00000d,%eax
		sar    $0x000010,%ecx
		add    $0x000005,%esi
		call   _019f4c_func
		push   $0x000000
		mov    _0cc5b4_data,%bx
		mov    _0cc5ac_data,%ax
		mov    _0cc5b2_data,%edx
		push   $0x0000ff
		sub    $0x00000f,%eax
		sub    %ebx,%esi
		sar    $0x000010,%edx
		movswl %si,%ecx
		movswl %ax,%ebx
		jmp    _019365_jump

	_019359_jump:
		push   $0x000000
		movswl %ax,%ebx
		push   $0x0000ff
		xor    %edx,%edx

	_019365_jump:
		mov    $0x00000d,%eax
		call   _019f4c_func
		mov    _0cc5b4_data,%eax
		sub    $0x000005,%eax
		cmp    $0x000017,%eax
		jge    _0193df_jump
		push   $0x000000
		mov    $0x000044,%ebx
		mov    _0cc5b4_data,%ax
		mov    $0x000004,%edx
		sub    $0x000004,%eax
		push   $0x0000ff
		movswl %ax,%ecx
		mov    $0x0000f1,%eax
		call   _019f4c_func
		mov    $0x00001c,%eax
		mov    _0cc5b4_data,%cx
		push   $0x000000
		sub    %ecx,%eax
		mov    _0cc5a8_data,%si
		movswl %ax,%ecx
		mov    $0x000138,%eax
		mov    _0cc5b2_data,%edx
		sub    %esi,%eax
		push   $0x0000ff
		movswl %ax,%ebx
		mov    _0cc5a6_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		jmp    _0193fa_jump

	_0193df_jump:
		push   $0x000000
		mov    $0x000017,%ecx
		mov    $0x000044,%ebx
		push   $0x0000ff
		mov    $0x000004,%edx
		mov    $0x0000f1,%eax

	_0193fa_jump:
		call   _019f4c_func

	_0193ff_jump:
		mov    _0cedd0_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %esi,%eax
		mov    _0cc300_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmp    $0xfffffffe,%edi
		jne    _019540_jump
		mov    _095b15_data,%dh
		cmp    $0x000001,%dh
		jne    _01943c_jump
		cmp    _0cef6d_data,%dh
		jne    _01943c_jump
		mov    $0x000010,%eax
		jmp    _01943e_jump

	_01943c_jump:
		xor    %eax,%eax

	_01943e_jump:
		push   $0x000001
		mov    %eax,0x000004(%esp)
		add    $0x000005,%eax
		mov    $0x000010,%ebx
		movswl %ax,%edi
		mov    $0x00001b,%edx
		mov    %edi,%ecx
		mov    %esi,%eax
		call   _018d7c_func
		push   $0x000001
		mov    $0x0000f4,%ebx
		mov    $0x000038,%edx
		mov    %edi,%ecx
		mov    %esi,%eax
		call   _018d7c_func
		push   $0x000001
		mov    $0x000037,%ebx
		mov    _0ce4ac_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d7c_func
		push   $0x000001
		mov    $0x000046,%ebx
		mov    _0ce4ad_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d7c_func
		cmpb   $0x0000ff,_0cdc1a_data
		je     _019506_jump
		cmpb   $0x000000,_0cefd1_data
		jne    _019506_jump
		mov    (%esp),%eax
		push   $0x000001
		add    $0x00001b,%eax
		mov    $0x000023,%ebx
		movswl %ax,%edi
		mov    _0ce4af_data,%al
		xor    %edx,%edx
		add    $0x000011,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d7c_func
		cmpb   $0x000004,_0ce4b3_data
		jne    _019506_jump
		push   $0x000001
		mov    $0x00003b,%ebx
		mov    _0ce4ae_data,%al
		xor    %edx,%edx
		add    $0x000014,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d7c_func

	_019506_jump:
		mov    (%esp),%eax
		push   $0x000001
		add    $0x000005,%eax
		mov    $0x000114,%ebx
		movswl %ax,%edi
		mov    _0ce4b1_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d7c_func
		push   $0x000001
		mov    $0x000122,%ebx
		mov    _0ce4b2_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		jmp    _0195bb_jump

	_019540_jump:
		mov    _0cc5b0_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0cc5ac_data,%ax
		push   $0x000001
		add    $0x00000e,%eax
		mov    $0x000038,%edx
		movswl %ax,%ebx
		mov    %esi,%eax
		call   _018d7c_func
		mov    _0cc5b0_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0cc5ac_data,%ax
		add    $0x00002e,%eax
		movswl %ax,%ebx
		mov    _0ce4b1_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d7c_func
		mov    _0cc5b0_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0cc5ac_data,%ax
		add    $0x00003c,%eax
		movswl %ax,%ebx
		mov    _0ce4b2_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001

	_0195bb_jump:
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d7c_func
		mov    _0ced80_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0195de_jump
		mov    _0ced98_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0195e3_jump

	_0195de_jump:
		call   _018e60_func

	_0195e3_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0195ec_func:
		push   %ebx
		push   %edi
		mov    _0ccd44_data,%edi
		movswl %dx,%ebx
		cwtl   
		sub    $0x000002,%ebx
		call   _014a20_func
		pop    %edi
		pop    %ebx
		ret    



_01964c_func:
		push   %esi
		mov    0x000006(%esp),%esi
		sar    $0x000010,%esi
		push   %esi
		movswl %cx,%ecx
		push   $0x000007
		add    $0x000008,%ebx
		add    $0x000008,%eax
		push   %ecx
		movswl %bx,%ecx
		movswl %dx,%ebx
		movswl %ax,%edx
		mov    $_0195ec_func,%eax
		call   _01ef3c_func
		pop    %esi
		ret    $0x000004



_01967c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%ebp),%edx
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		xor    %ecx,%ecx
		and    $0x00003f,%dh
		mov    %dx,%cx
		xor    %edx,%edx
		mov    0x00006b(%ebp),%dl
		imul   %ecx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    %eax,0x000004(%esp)
		test   %bl,%bl
		jne    _0196d1_jump
		mov    $0x000005,%ebx
		mov    $0x000003,%eax
		mov    %ebx,0x000010(%esp)
		jmp    _0196dc_jump

	_0196d1_jump:
		mov    $0x000002,%edx
		xor    %eax,%eax
		mov    %edx,0x000010(%esp)

	_0196dc_jump:
		mov    0x000010(%esp),%ecx
		mov    %eax,0x00000c(%esp)
		cmp    %cx,%ax
		ja     _0197ac_jump

	_0196ed_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%ax
		mov    0x000004(%esp),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %ecx,%ecx
		mov    0x000002(%eax),%cl
		add    0x000038(%ebp),%cx
		xor    %edx,%edx
		mov    0x000003(%eax),%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000000(%ebp),%ebx
		add    %edx,%ebx
		cmpb   $0x000000,0x000004(%ebx)
		je     _019796_jump
		mov    0x000001(%eax),%al
		mov    0x000036(%ebp),%si
		xor    %ah,%ah
		add    %eax,%esi
		mov    0x000058(%ebp),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d170_func
		movswl %ax,%ecx
		mov    0x000058(%ebp),%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		call   _01d134_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d0cc_func
		mov    %eax,%esi
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		shl    $0x000008,%esi
		call   _01d0cc_func
		add    %esi,%eax
		and    $0x00ffff,%eax
		mov    (%ebx),%esi
		mov    %eax,0x000008(%esp)
		add    0x000008(%ebp),%esi
		mov    0x00000a(%ebx),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %ecx,%ebx
		mov    0x000008(%esp),%ecx
		mov    %al,%dl
		mov    %edi,%eax
		mov    (%esp),%edi
		call   *_0cc604_data

	_019796_jump:
		mov    0x00000c(%esp),%esi
		inc    %esi
		mov    0x000010(%esp),%edi
		mov    %esi,0x00000c(%esp)
		cmp    %di,%si
		jbe    _0196ed_jump

	_0197ac_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0197b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		movl   $0x000007,0x000010(%esp)
		mov    $0x001000,%ebp

	_0197ca_jump:
		mov    _0ce4b2_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%esi
		add    %eax,%esi
		mov    _0ce57c_data,%ax
		xor    %edi,%edi
		test   %ax,%ax
		jle    _019957_jump

	_0197f1_jump:
		cmpw   $0x000001,0x000010(%esp)
		jne    _019810_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000080,_092264_data(,%eax,4)
		je     _019810_jump
		mov    %esi,%eax
		call   _018fa8_func

	_019810_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%ebx
		mov    0x00007e(%esi),%al
		cmp    %bx,%ax
		jne    _01992c_jump
		cmpw   $0x00009d,0x000060(%esi)
		jne    _019850_jump
		cmpw   $0x000005,_0cede4_data
		jne    _019850_jump
		cmpw   $0x000008,_0cedd0_data
		jne    _019850_jump
		cmpl   $0x00012c,0x000028(%esi)
		jl     _01992c_jump
		jmp    _019925_jump

	_019850_jump:
		mov    0x000060(%esi),%bx
		cmp    $0x000051,%bx
		jne    _019871_jump
		mov    $0x000001,%ebx
		mov    _0cccb4_data,%edx
		mov    %esi,%eax
		call   _01967c_func
		jmp    _01992c_jump

	_019871_jump:
		cmp    $0x0000fe,%bx
		jne    _0198c6_jump
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _019884_jump
		neg    %eax

	_019884_jump:
		mov    _094762_data(,%eax,2),%edx
		mov    0x000073(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		shl    $0x000009,%edx
		cmp    $0x000000,%eax
		je     _0198a5_jump
		mov    $0x000001,%eax
		jg     _0198a5_jump
		neg    %eax

	_0198a5_jump:
		neg    %eax
		imul   %eax,%edx
		mov    $0x000168,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ebp,%ecx
		movswl %ax,%edx
		mov    %ebp,%ebx
		mov    %esi,%eax
		call   _01b814_func
		jmp    _01992c_jump

	_0198c6_jump:
		cmp    $0x0000fc,%bx
		je     _0198db_jump
		cmp    $0x0000fb,%bx
		je     _0198db_jump
		cmp    $0x0000ad,%bx
		jne    _019925_jump

	_0198db_jump:
		mov    %esp,%edx
		lea    0x00000c(%esp),%ecx
		lea    0x000004(%esp),%ebx
		lea    0x000008(%esp),%eax
		call   _016111_func
		mov    0x00000c(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    _0cc5b0_data,%edx
		mov    0x000008(%esp),%eax
		sub    $0x000028,%edx
		call   _01614e_func
		mov    %esi,%eax
		call   _018ae8_func
		mov    (%esp),%edx
		mov    0x00000c(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%eax
		call   _01614e_func
		jmp    _01992c_jump

	_019925_jump:
		mov    %esi,%eax
		call   _018ae8_func

	_01992c_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0ce4b2_data(,%eax,2),%esi
		sar    $0x000010,%esi
		imul   $0x000084,%esi,%esi
		mov    _0cc300_data,%eax
		mov    _0ce57c_data,%cx
		add    %eax,%esi
		cmp    %cx,%di
		jl     _0197f1_jump

	_019957_jump:
		mov    0x000010(%esp),%esi
		cmp    $0x000003,%si
		jne    _0199d7_jump
		cmpb   $0x000000,_0cefb6_data
		jne    _0199b0_jump
		mov    _0ced3a_data,%ebx
		mov    _0cdbf8_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		lea    0x000000(,%ebx,2),%ecx
		mov    %edx,%eax
		add    $0x000002,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		cmp    %ebx,%edx
		jle    _0199b0_jump
		cmpw   $0x00005a,_0cdbfa_data
		jle    _019a25_jump
		testb  $0x000080,_0ced81_data
		jne    _019a25_jump

	_0199b0_jump:
		testb  $0x000004,_0cdc25_data
		je     _019a25_jump
		cmpl   $0x000000,_0cdbc8_data
		je     _019a25_jump
		mov    $_0cdba4_data,%eax
		call   _018ae8_func
		call   _018e48_func
		jmp    _019a25_jump

	_0199d7_jump:
		cmp    $0x000002,%si
		jne    _019a25_jump
		cmpb   $0x000000,_0cefd0_data
		je     _019a25_jump
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    _019a19_jump

	_0199ec_jump:
		movswl %cx,%eax
		mov    _0cdb2e_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%edx
		mov    _0cc300_data,%eax
		add    %edx,%eax
		cmp    0x000024(%eax),%esi
		je     _019a18_jump
		mov    _0cccb4_data,%edx
		mov    %esi,%ebx
		call   _01967c_func

	_019a18_jump:
		inc    %ecx

	_019a19_jump:
		xor    %eax,%eax
		mov    _0cefd0_data,%al
		cmp    %ax,%cx
		jl     _0199ec_jump

	_019a25_jump:
		mov    0x000010(%esp),%ebx
		dec    %ebx
		mov    %ebx,0x000010(%esp)
		cmp    $0x000001,%bx
		jge    _0197ca_jump
		mov    _0ce4b2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0ce57c_data,%si
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		xor    %edi,%edi
		add    %edx,%eax
		test   %si,%si
		jle    _019a9a_jump

	_019a60_jump:
		cmpb   $0x000000,0x00007e(%eax)
		jne    _019a75_jump
		cmpw   $0x0000f5,0x000060(%eax)
		jne    _019a75_jump
		call   _018ae8_func
		jmp    _019a9a_jump

	_019a75_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0ce4b2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%edx
		add    %edx,%eax
		cmp    _0ce57c_data,%di
		jl     _019a60_jump

	_019a9a_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_019aa4_switch:
		.long   _019bcf_case
		.long   _019bc7_case
		.long   _019bbf_case
		.long   _019bb7_case




_019ab4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000028,%esp
		mov    $0x0000aa,%edx
		mov    $0x000003,%ebx
		mov    $0x000020,%ecx
		mov    _0ced90_data,%ax
		mov    $0x000004,%esi
		mov    %eax,0x00000c(%esp)
		mov    _0ced8e_data,%ax
		mov    %bx,0x000014(%esp)
		mov    %eax,0x000010(%esp)
		mov    $0x0000a0,%eax
		mov    %cx,0x000004(%esp)
		call   _01d0bc_func
		mov    $0x000006,%edx
		mov    %esi,0x000008(%esp)
		mov    %edx,0x000018(%esp)

	_019b05_jump:
		mov    0x000002(%esp),%ebx
		mov    $0x010000,%eax
		sar    $0x000010,%ebx
		mov    %eax,%edx
		add    $0x000100,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000024(%esp)
		mov    0x000022(%esp),%eax
		mov    _0ced8e_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    %eax,%ebx
		imul   %edx,%ebx
		sar    $0x000008,%ebx
		sub    %ebx,%edx
		mov    %dx,0x000020(%esp)
		mov    _0ced8c_data,%edx
		sar    $0x000010,%edx
		imul   %edx,%eax
		mov    0x000008(%esp),%ecx
		mov    0x000018(%esp),%esi
		mov    _0cede4_data,%di
		dec    %ecx
		dec    %esi
		sar    $0x000008,%eax
		mov    0x000012(%esp),%ebx
		sub    %eax,%edx
		sar    $0x000010,%ebx
		mov    %dx,0x00001c(%esp)
		mov    _0ca426_data(,%ebx,2),%edx
		mov    %esi,0x000018(%esp)
		sar    $0x000010,%edx
		mov    _0cce14_data,%eax
		shl    $0x000003,%edx
		mov    _0ca468_data(,%ebx,2),%si
		add    %eax,%edx
		mov    _0ca428_data(,%ebx,2),%ax
		mov    %ecx,0x000008(%esp)
		add    %eax,%esi
		cmp    $0x000001,%di
		je     _019bdf_jump
		cmp    $0x000003,%cx
		ja     _019bd7_jump
		xor    %ebx,%ebx
		mov    %cx,%bx
		jmp    *%cs:_019aa4_switch(,%ebx,4)

	_019bb7_case:
		mov    _0cc62c_data,%ebx
		jmp    _019c05_jump

	_019bbf_case:
		mov    _0cc630_data,%ebx
		jmp    _019c05_jump

	_019bc7_case:
		mov    _0cc600_data,%ebx
		jmp    _019c05_jump

	_019bcf_case:
		mov    _0cc608_data,%ebx
		jmp    _019c05_jump

	_019bd7_jump:
		mov    _0cc5fc_data,%ebx
		jmp    _019c05_jump

	_019bdf_jump:
		mov    0x000018(%esp),%ebx
		cmp    $0x000005,%bx
		jne    _019bf1_jump
		mov    _0cc634_data,%ebx
		jmp    _019c05_jump

	_019bf1_jump:
		cmp    $0x000002,%bx
		jle    _019bff_jump
		mov    _0cc5e4_data,%ebx
		jmp    _019c05_jump

	_019bff_jump:
		mov    _0cc5dc_data,%ebx

	_019c05_jump:
		mov    %ebx,(%esp)
		mov    %eax,%ecx
		cmp    %si,%ax
		jge    _019c4e_jump

	_019c0f_jump:
		mov    (%edx),%ebx
		mov    0x000022(%esp),%edi
		sar    $0x000010,%ebx
		sar    $0x000010,%edi
		imul   %edi,%ebx
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000008,%ebx
		add    %eax,%ebx
		movswl (%edx),%eax
		imul   %eax,%edi
		mov    0x00001e(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    $0x000008,%edx
		add    %edi,%eax
		mov    _0cccb4_data,%edi
		inc    %ecx
		call   *(%esp)
		cmp    %si,%cx
		jl     _019c0f_jump

	_019c4e_jump:
		mov    0x000014(%esp),%edi
		mov    0x000004(%esp),%eax
		inc    %edi
		add    $0x000020,%eax
		mov    %di,0x000014(%esp)
		mov    %ax,0x000004(%esp)
		cmp    $0x0000c0,%ax
		jl     _019b05_jump
		mov    0x00000c(%esp),%eax
		mov    %ax,_0ced90_data
		mov    0x000010(%esp),%eax
		mov    %ax,_0ced8e_data
		add    $0x000028,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019c90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    _0ced90_data,%ax
		mov    %eax,0x00001c(%esp)
		mov    _0ced8e_data,%ax
		mov    $0x0000aa,%edx
		mov    %eax,0x000020(%esp)
		mov    $0x0000a0,%eax
		mov    $0xffffffc0,%ebx
		call   _01d0bc_func
		xor    %edx,%edx
		mov    %bx,0x000008(%esp)
		mov    %dx,(%esp)
		mov    $0x010000,%ebp

	_019cd1_jump:
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		mov    _0ca426_data(,%ebx,2),%eax
		sar    $0x000010,%eax
		mov    _0cce14_data,%ecx
		shl    $0x000003,%eax
		add    %eax,%ecx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    %ebp,%edx
		lea    0x000100(%eax),%edi
		sar    $0x00001f,%edx
		mov    %ebp,%eax
		idiv   %edi
		mov    %eax,%esi
		movswl %ax,%edi
		mov    _0ced8e_data,%eax
		mov    %edi,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		sar    $0x000008,%edx
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    _0ced8c_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%edi
		sar    $0x000008,%edi
		sub    %edi,%eax
		mov    _0ca468_data(,%ebx,2),%dx
		mov    %ax,0x000010(%esp)
		mov    _0ca428_data(,%ebx,2),%ax
		mov    _0cede4_data,%bx
		add    %eax,%edx
		cmp    $0x000001,%bx
		je     _019e0c_jump
		cmpw   $0x000000,(%esp)
		jne    _019db7_jump
		mov    %eax,0x000018(%esp)
		cmp    %dx,%ax
		jge    _019e5b_jump

	_019d6b_jump:
		mov    (%ecx),%ebx
		movswl %si,%eax
		sar    $0x000010,%ebx
		imul   %eax,%ebx
		mov    0x00000e(%esp),%edi
		sar    $0x000010,%edi
		sar    $0x000008,%ebx
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %eax,%edi
		mov    0x00000a(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0cccb4_data,%edi
		call   *_0cc610_data
		mov    0x000018(%esp),%ebx
		inc    %ebx
		add    $0x000008,%ecx
		mov    %ebx,0x000018(%esp)
		cmp    %bx,%dx
		jle    _019e5b_jump
		jmp    _019d6b_jump

	_019db7_jump:
		mov    %eax,0x000014(%esp)
		cmp    %dx,%ax
		jge    _019e5b_jump

	_019dc4_jump:
		mov    (%ecx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %edi,%eax
		mov    0x00000a(%esp),%edi
		sar    $0x000008,%eax
		sar    $0x000010,%edi
		add    %edi,%eax
		mov    _0cccb4_data,%edi
		call   *_0cc614_data
		mov    0x000014(%esp),%edi
		inc    %edi
		add    $0x000008,%ecx
		mov    %edi,0x000014(%esp)
		cmp    %di,%dx
		jle    _019e5b_jump
		jmp    _019dc4_jump

	_019e0c_jump:
		mov    %eax,0x000004(%esp)
		cmp    %dx,%ax
		jge    _019e5b_jump

	_019e15_jump:
		mov    (%ecx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %eax,%edi
		mov    0x00000a(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0cccb4_data,%edi
		call   *_0cc628_data
		mov    0x000004(%esp),%eax
		inc    %eax
		add    $0x000008,%ecx
		mov    %eax,0x000004(%esp)
		cmp    %ax,%dx
		jg     _019e15_jump

	_019e5b_jump:
		mov    (%esp),%ecx
		mov    0x000008(%esp),%esi
		inc    %ecx
		add    $0x000020,%esi
		mov    %cx,(%esp)
		mov    %si,0x000008(%esp)
		cmp    $0x000020,%si
		jl     _019cd1_jump
		mov    0x00001c(%esp),%eax
		mov    %ax,_0ced90_data
		mov    0x000020(%esp),%eax
		mov    %ax,_0ced8e_data
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019e98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    %dx,(%esp)

	_019ea6_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000282,%edx,%edx
		cmpw   $0x000000,_0c9200_data(%edx)
		je     _019f30_jump
		add    $_0c8f80_data,%edx
		xor    %ecx,%ecx

	_019ec9_jump:
		mov    0x000009(%edx),%bl
		cmp    $0x000080,%bl
		jb     _019f26_jump
		mov    (%edx),%esi
		mov    _0cc590_data,%eax
		sar    $0x000010,%esi
		shl    $0x000006,%eax
		cmp    %eax,%esi
		jle    _019f26_jump
		xor    %eax,%eax
		mov    0x000006(%edx),%al
		test   %eax,%eax
		jge    _019eed_jump
		neg    %eax

	_019eed_jump:
		cmp    $0x000080,%ax
		jl     _019ef7_jump
		mov    $0x000058,%al
		jmp    _019f09_jump

	_019ef7_jump:
		and    $0x00007f,%bl
		cwtl   
		and    $0x0000ff,%ebx
		sar    $0x000005,%eax
		add    $0x000004,%ebx
		add    %ebx,%eax

	_019f09_jump:
		mov    _0cccb4_data,%edi
		mov    (%edx),%ebx
		movzbl %al,%esi
		sar    $0x000010,%ebx
		movswl (%edx),%eax
		sar    $0x000006,%ebx
		sar    $0x000006,%eax
		call   *_0cc5f8_data

	_019f26_jump:
		inc    %ecx
		add    $0x00000a,%edx
		cmp    $0x000040,%cx
		jl     _019ec9_jump

	_019f30_jump:
		mov    (%esp),%ebx
		inc    %ebx
		mov    %bx,(%esp)
		cmp    $0x000008,%bx
		jl     _019ea6_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019f4c_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %ax,0x00000c(%esp)
		mov    %dx,(%esp)
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000008(%esp)
		test   %ax,%ax
		jge    _019f7b_jump
		mov    %ebx,%esi
		xor    %edi,%edi
		add    %eax,%esi
		mov    %di,0x00000c(%esp)
		mov    %si,0x000004(%esp)
		jmp    _019f88_jump

	_019f7b_jump:
		cmp    $0x000140,%ax
		jle    _019f88_jump
		movw   $0x000140,0x00000c(%esp)

	_019f88_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0x000140,%eax
		jle    _019faf_jump
		mov    $0x000140,%eax
		mov    0x00000c(%esp),%edx
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)

	_019faf_jump:
		mov    (%esp),%ebx
		test   %bx,%bx
		jge    _019fcc_jump
		mov    0x000008(%esp),%edi
		mov    %ebx,%eax
		add    %ebx,%edi
		xor    %ebx,%eax
		mov    %di,0x000008(%esp)
		mov    %ax,(%esp)
		jmp    _019fd9_jump

	_019fcc_jump:
		cmp    $0x0000c8,%bx
		jle    _019fd9_jump
		movw   $0x0000c8,(%esp)

	_019fd9_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0x0000c8,%eax
		jle    _019fff_jump
		mov    $0x0000c8,%eax
		mov    (%esp),%edx
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)

	_019fff_jump:
		cmpw   $0x000000,0x000004(%esp)
		jle    _01a16d_jump
		cmpw   $0x000000,0x000008(%esp)
		jle    _01a16d_jump
		cmpb   $0x0000ff,0x00001c(%esp)
		jne    _01a0b0_jump
		cmpb   $0x000001,_095b14_data
		jne    _01a054_jump
		mov    0x000002(%esp),%ecx
		mov    0x000006(%esp),%ebx
		mov    -0x000002(%esp),%edx
		mov    0x00000a(%esp),%esi
		mov    _0cccb4_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%esi
		call   _012fe6_func
		jmp    _01a0b0_jump

	_01a054_jump:
		mov    0x000020(%esp),%dh
		test   %dh,%dh
		je     _01a089_jump
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%esi
		xor    %eax,%eax
		mov    _0cccb4_data,%edi
		mov    %dh,%al
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		call   _014a8b_func
		jmp    _01a0b0_jump

	_01a089_jump:
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    _0cccb4_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _014a4e_func

	_01a0b0_jump:
		mov    0x000020(%esp),%bl
		cmp    $0x000001,%bl
		jne    _01a104_jump
		cmp    _095b14_data,%bl
		jne    _01a0ed_jump
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    _0cccb4_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _0130ae_func
		jmp    _01a16d_jump

	_01a0ed_jump:
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%esi
		mov    $0x002026,%eax
		jmp    _01a156_jump

	_01a104_jump:
		cmp    $0x000002,%bl
		jne    _01a16d_jump
		cmpb   $0x000001,_095b14_data
		jne    _01a141_jump
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    _0cccb4_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _0130ae_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_01a141_jump:
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%esi
		mov    $0x002620,%eax

	_01a156_jump:
		mov    _0cccb4_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		call   _014b1a_func

	_01a16d_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01a178_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,(%esp)
		mov    %dx,0x00001c(%esp)
		mov    %cl,0x000024(%esp)
		cmp    $0x000002,%cl
		jne    _01a1ae_jump
		mov    $0x00000f,%ecx
		mov    $0x000001,%esi
		mov    $0x000008,%edi
		mov    %ecx,0x000014(%esp)
		mov    %si,0x000010(%esp)
		mov    %di,0x000008(%esp)
		jmp    _01a1ef_jump

	_01a1ae_jump:
		cmp    $0x000001,%cl
		jne    _01a1d2_jump
		mov    $0x000017,%edi
		mov    $0x000003,%eax
		mov    $0x00000a,%edx
		mov    %edi,0x000014(%esp)
		mov    %ax,0x000010(%esp)
		mov    %dx,0x000008(%esp)
		jmp    _01a1ef_jump

	_01a1d2_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%ecx
		mov    $0x00000c,%esi
		mov    %edx,0x000014(%esp)
		mov    %cx,0x000010(%esp)
		mov    %si,0x000008(%esp)

	_01a1ef_jump:
		mov    0x00001c(%esp),%eax
		mov    %ax,0x000018(%esp)
		mov    (%esp),%eax
		mov    (%eax),%dh
		mov    %ebx,0x00000c(%esp)
		test   %dh,%dh
		je     _01a3a4_jump
		xor    %eax,%eax
		mov    %ax,0x000020(%esp)
		jmp    _01a38e_jump

	_01a215_jump:
		cmp    $0x00002f,%bl
		jne    _01a25f_jump
		mov    0x00000e(%esp),%ecx
		xor    %eax,%eax
		mov    0x000006(%esp),%ebx
		mov    0x000024(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    0x000004(%esp),%eax
		call   _01ebec_func
		cwtl   
		mov    0x00001a(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000020(%esp),%ebx
		mov    %dx,0x000018(%esp)
		cmp    $0x000001,%bx
		jle    _01a25b_jump
		mov    0x000014(%esp),%eax
		add    %eax,0x00000c(%esp)

	_01a25b_jump:
		xor    %bl,%bl
		jmp    _01a285_jump

	_01a25f_jump:
		cmp    $0x000020,%bl
		jne    _01a277_jump
		mov    0x000008(%esp),%eax
		mov    0x000018(%esp),%edx
		add    %eax,%edx
		xor    %bl,%bl
		mov    %dx,0x000018(%esp)
		jmp    _01a285_jump

	_01a277_jump:
		mov    %bl,%al
		and    $0x0000ff,%eax
		call   _01eadc_func
		mov    %al,%bl

	_01a285_jump:
		test   %bl,%bl
		je     _01a389_jump
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %bl,%cl
		mov    0x000024(%esp),%al
		mov    %ecx,%edx
		call   _01ea14_func
		mov    %eax,%edx
		mov    0x000024(%esp),%bh
		cmp    $0x000001,%bh
		jbe    _01a2b3_jump
		cmp    $0x000002,%bh
		je     _01a30b_jump
		jmp    _01a35f_jump

	_01a2b3_jump:
		jne    _01a2b8_jump
		add    $0x000029,%bl

	_01a2b8_jump:
		xor    %eax,%eax
		mov    %bl,%al
		imul   $0x00000c,%eax,%eax
		mov    _0ce320_data,%ebp
		add    %eax,%ebp
		xor    %eax,%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000006(%ebp),%al
		sub    %eax,%ebx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000004(%esp)
		xor    %ah,%ah
		mov    _0cccb4_data,%edi
		mov    0x000006(%ebp),%al
		xor    %ecx,%ecx
		shl    $0x000008,%eax
		mov    0x000000(%ebp),%esi
		add    %edx,%eax
		movswl %bx,%ebx
		mov    %ax,%cx
		xor    %edx,%edx
		mov    _0ce324_data,%eax
		mov    0x000038(%esp),%dl
		add    %eax,%esi
		mov    0x000004(%esp),%eax
		jmp    _01a359_jump

	_01a30b_jump:
		imul   $0x00000c,%ecx,%ecx
		mov    _0cdc34_data,%ebp
		add    %ecx,%ebp
		xor    %eax,%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		mov    0x000016(%esp),%edx
		sar    $0x000010,%edx
		mov    _0cccb4_data,%edi
		mov    %edx,0x000004(%esp)
		xor    %dh,%dh
		mov    _0cdc38_data,%esi
		mov    0x000006(%ebp),%dl
		xor    %ecx,%ecx
		shl    $0x000008,%edx
		movswl %bx,%ebx
		add    %edx,%eax
		mov    0x000000(%ebp),%edx
		mov    %ax,%cx
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x000004(%esp),%eax
		mov    0x000038(%esp),%dl

	_01a359_jump:
		call   *_0cc5f4_data

	_01a35f_jump:
		mov    0x000009(%ebp),%al
		and    $0x00000f,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x000007(%ebp),%dl
		add    %edx,%eax
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000018(%esp)

	_01a389_jump:
		incw   0x000020(%esp)

	_01a38e_jump:
		mov    0x00001e(%esp),%edx
		mov    (%esp),%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    (%eax),%bl
		test   %bl,%bl
		jne    _01a215_jump

	_01a3a4_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01a3b0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%ebp
		mov    %dx,0x000014(%esp)
		mov    %cl,0x00001c(%esp)
		xor    %ah,%ah
		mov    %ah,0x000018(%esp)
		cmp    $0x000002,%cl
		jne    _01a3ea_jump
		mov    $0x00000f,%edi
		mov    $0x000001,%eax
		mov    $0x000008,%edx
		mov    %edi,0x000004(%esp)
		mov    %ax,(%esp)
		mov    %dx,0x00000c(%esp)
		jmp    _01a429_jump

	_01a3ea_jump:
		cmp    $0x000001,%cl
		jne    _01a40d_jump
		mov    $0x000017,%eax
		mov    $0x000003,%edx
		mov    $0x00000a,%ecx
		mov    %eax,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %cx,0x00000c(%esp)
		jmp    _01a429_jump

	_01a40d_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%ecx
		mov    $0x00000c,%edi
		mov    %edx,0x000004(%esp)
		mov    %cx,(%esp)
		mov    %di,0x00000c(%esp)

	_01a429_jump:
		mov    %ebx,0x000010(%esp)
		mov    0x000000(%ebp),%bl
		mov    0x000014(%esp),%edi
		test   %bl,%bl
		je     _01a5ac_jump
		xor    %ebx,%ebx
		mov    %bx,0x000008(%esp)
		jmp    _01a598_jump

	_01a448_jump:
		cmp    $0x00002f,%bh
		jne    _01a491_jump
		mov    -0x000002(%esp),%ecx
		xor    %eax,%eax
		mov    0x00000a(%esp),%ebx
		mov    0x00001c(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    %ebp,%eax
		call   _01ebec_func
		cwtl   
		mov    0x000012(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000008(%esp),%eax
		mov    %edx,%edi
		cmp    $0x000001,%ax
		jle    _01a489_jump
		mov    0x000004(%esp),%eax
		add    %eax,0x000010(%esp)

	_01a489_jump:
		xor    %ah,%ah
		mov    %ah,0x000018(%esp)
		jmp    _01a4b4_jump

	_01a491_jump:
		cmp    $0x000020,%bh
		jne    _01a4a4_jump
		xor    %al,%al
		mov    0x00000c(%esp),%ecx
		mov    %al,0x000018(%esp)
		add    %ecx,%edi
		jmp    _01a4b4_jump

	_01a4a4_jump:
		mov    %bh,%al
		and    $0x0000ff,%eax
		call   _01eadc_func
		mov    %al,0x000018(%esp)

	_01a4b4_jump:
		cmpb   $0x000000,0x000018(%esp)
		je     _01a593_jump
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00001c(%esp),%bl
		mov    0x000018(%esp),%dl
		mov    %ebx,%eax
		call   _01ea14_func
		lea    0x000018(%esp),%edx
		mov    %ebx,%eax
		call   _01ebe4_func
		cmp    $0x000001,%bl
		jbe    _01a4ec_jump
		cmp    $0x000002,%bl
		je     _01a52e_jump
		jmp    _01a575_jump

	_01a4ec_jump:
		movzbl 0x000018(%esp),%esi
		imul   $0x00000c,%esi,%esi
		mov    _0ce320_data,%eax
		add    %eax,%esi
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00001c(%esp),%edx
		mov    0x000006(%esi),%al
		sub    %eax,%edx
		movswl %di,%ebx
		movswl %dx,%ecx
		mov    %esi,%eax
		mov    _0ce324_data,%edx
		jmp    _01a570_jump

	_01a52e_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    _0cdc34_data,%esi
		add    %eax,%esi
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00001c(%esp),%edx
		mov    0x000006(%esi),%al
		sub    %eax,%edx
		movswl %di,%ebx
		movswl %dx,%ecx
		mov    %esi,%eax
		mov    _0cdc38_data,%edx

	_01a570_jump:
		call   _01baf8_func

	_01a575_jump:
		mov    0x000009(%esi),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		add    %edx,%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		movswl %di,%edi
		sub    %edx,%eax
		add    %eax,%edi

	_01a593_jump:
		incw   0x000008(%esp)

	_01a598_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		lea    (%edx,%ebp,1),%eax
		mov    (%eax),%bh
		test   %bh,%bh
		jne    _01a448_jump

	_01a5ac_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000010



_01a5b8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,0x000004(%esp)
		mov    %dx,0x00000c(%esp)
		xor    %ah,%ah
		mov    0x00003c(%esp),%dl
		mov    %ah,0x000028(%esp)
		cmp    $0x000002,%dl
		jne    _01a5f5_jump
		mov    $0x00000f,%edi
		mov    $0x000001,%eax
		mov    $0x000008,%edx
		mov    %edi,0x000020(%esp)
		mov    %ax,0x000010(%esp)
		mov    %dx,0x000014(%esp)
		jmp    _01a636_jump

	_01a5f5_jump:
		cmp    $0x000001,%dl
		jne    _01a619_jump
		mov    $0x000017,%eax
		mov    $0x000003,%edx
		mov    $0x00000a,%esi
		mov    %eax,0x000020(%esp)
		mov    %dx,0x000010(%esp)
		mov    %si,0x000014(%esp)
		jmp    _01a636_jump

	_01a619_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%esi
		mov    $0x00000c,%edi
		mov    %edx,0x000020(%esp)
		mov    %si,0x000010(%esp)
		mov    %di,0x000014(%esp)

	_01a636_jump:
		mov    0x00000c(%esp),%eax
		mov    %ax,0x000008(%esp)
		mov    0x000004(%esp),%eax
		mov    %ebx,0x000024(%esp)
		cmpb   $0x000000,(%eax)
		je     _01a825_jump
		xor    %ebx,%ebx
		mov    %cx,0x000018(%esp)
		mov    %bx,0x00001c(%esp)
		jmp    _01a80e_jump

	_01a661_jump:
		cmp    $0x00002f,%cl
		jne    _01a6af_jump
		mov    0x00000e(%esp),%ecx
		xor    %eax,%eax
		mov    0x000012(%esp),%ebx
		mov    0x00003c(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    0x000008(%esp),%eax
		call   _01ebec_func
		cwtl   
		mov    0x00000a(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x00001c(%esp),%esi
		mov    %dx,0x000008(%esp)
		cmp    $0x000001,%si
		jle    _01a6a7_jump
		mov    0x000020(%esp),%eax
		add    %eax,0x000024(%esp)

	_01a6a7_jump:
		xor    %dl,%dl
		mov    %dl,0x000028(%esp)
		jmp    _01a6d8_jump

	_01a6af_jump:
		cmp    $0x000020,%cl
		jne    _01a6cb_jump
		mov    0x000014(%esp),%eax
		mov    0x000008(%esp),%ecx
		add    %eax,%ecx
		xor    %ah,%ah
		mov    %cx,0x000008(%esp)
		mov    %ah,0x000028(%esp)
		jmp    _01a6d8_jump

	_01a6cb_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _01eadc_func
		mov    %al,0x000028(%esp)

	_01a6d8_jump:
		cmpb   $0x000000,0x000028(%esp)
		je     _01a7f6_jump
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00003c(%esp),%bl
		mov    0x000028(%esp),%dl
		mov    %ebx,%eax
		call   _01ea14_func
		lea    0x000028(%esp),%edx
		mov    %eax,%esi
		mov    %ebx,%eax
		call   _01ebe4_func
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000005,%cl
		call   _05be00_func
		test   %ax,%ax
		js     _01a71b_jump
		sar    %cl,%ax
		jmp    _01a724_jump

	_01a71b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01a724_jump:
		cmp    $0x000001,%bl
		jbe    _01a733_jump
		cmp    $0x000002,%bl
		je     _01a774_jump
		jmp    _01a7cd_jump

	_01a733_jump:
		movzbl 0x000028(%esp),%ebp
		imul   $0x00000c,%ebp,%ebp
		mov    _0ce320_data,%edx
		add    %edx,%ebp
		xor    %edx,%edx
		mov    0x000024(%esp),%ebx
		mov    0x000006(%ebp),%dl
		mov    _0cccb4_data,%edi
		sub    %edx,%ebx
		xor    %dh,%dh
		xor    %ecx,%ecx
		shl    $0x000008,%edx
		add    %ebx,%eax
		add    %esi,%edx
		movswl %ax,%ebx
		mov    %dx,%cx
		mov    0x000000(%ebp),%esi
		mov    _0ce324_data,%edx
		mov    0x000006(%esp),%eax
		jmp    _01a7bc_jump

	_01a774_jump:
		movzbl 0x000028(%esp),%ebp
		imul   $0x00000c,%ebp,%ebp
		mov    _0cdc34_data,%edx
		add    %edx,%ebp
		xor    %edx,%edx
		mov    0x000024(%esp),%ebx
		mov    0x000006(%ebp),%dl
		mov    _0cccb4_data,%edi
		sub    %edx,%ebx
		xor    %ecx,%ecx
		mov    %ebx,%edx
		add    %ebx,%eax
		xor    %bh,%dh
		cwtl   
		mov    0x000006(%ebp),%dl
		mov    %eax,(%esp)
		shl    $0x000008,%edx
		mov    0x000006(%esp),%eax
		add    %esi,%edx
		mov    _0cdc38_data,%esi
		mov    %dx,%cx
		mov    0x000000(%ebp),%edx
		mov    (%esp),%ebx

	_01a7bc_jump:
		add    %edx,%esi
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000040(%esp),%dl
		call   *_0cc5f4_data

	_01a7cd_jump:
		mov    0x000009(%ebp),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%ebp),%al
		add    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %dx,0x000008(%esp)

	_01a7f6_jump:
		mov    0x000018(%esp),%eax
		mov    0x00001c(%esp),%edx
		add    $0x000020,%eax
		inc    %edx
		mov    %ax,0x000018(%esp)
		mov    %dx,0x00001c(%esp)

	_01a80e_jump:
		mov    0x00001a(%esp),%edx
		mov    0x000004(%esp),%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		mov    (%ebx),%cl
		test   %cl,%cl
		jne    _01a661_jump

	_01a825_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01a830_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    0x0000c8(%eax),%ax
		mov    0x0000ca(%esi),%dx
		mov    0x0000cc(%esi),%bx
		mov    0x0000ce(%esi),%cx
		sub    $0x000003,%eax
		sub    $0x000003,%edx
		add    $0x000006,%ebx
		add    $0x000006,%ecx
		cmpb   $0x000000,0x0000d5(%esi)
		je     _01a8f8_jump
		movzbl 0x0000d6(%esi),%edi
		movswl %cx,%ecx
		push   %edi
		movswl %bx,%ebx
		push   $0x0000ff
		movswl %dx,%edx
		cwtl   
		call   _019f4c_func
		mov    0x0000d6(%esi),%ah
		cmp    $0x000001,%ah
		jne    _01a8bf_jump
		xor    %eax,%eax
		mov    0x0000d7(%esi),%al
		push   %eax
		mov    0x0000d2(%esi),%ax
		dec    %eax
		movswl %ax,%ebx
		mov    0x0000d0(%esi),%ax
		xor    %ecx,%ecx
		dec    %eax
		mov    0x0000d4(%esi),%cl
		movswl %ax,%edx
		jmp    _01a940_jump

	_01a8bf_jump:
		cmp    $0x000002,%ah
		jne    _01a91d_jump
		xor    %eax,%eax
		mov    0x0000d7(%esi),%al
		push   %eax
		mov    0x0000d2(%esi),%ax
		inc    %eax
		movswl %ax,%ebx
		mov    0x0000d0(%esi),%ax
		xor    %ecx,%ecx
		inc    %eax
		mov    0x0000d4(%esi),%cl
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01a178_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01a8f8_jump:
		cmpb   $0x000000,0x0000d6(%esi)
		je     _01a91d_jump
		movzbl 0x0000d6(%esi),%edi
		movswl %cx,%ecx
		push   %edi
		movswl %bx,%ebx
		push   $0x0000fe
		movswl %dx,%edx
		cwtl   
		call   _019f4c_func

	_01a91d_jump:
		mov    0x0000d0(%esi),%ebx
		mov    0x0000ce(%esi),%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x0000d7(%esi),%al
		sar    $0x000010,%edx
		push   %eax
		mov    0x0000d4(%esi),%cl

	_01a940_jump:
		mov    %esi,%eax
		call   _01a178_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01a950_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpb   $0x000001,_095b14_data
		jne    _01a972_jump
		mov    $0x003e80,%ecx
		mov    _0cccb4_data,%edi
		call   _012783_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01a972_jump:
		mov    $0x00fa00,%ebx
		mov    _0cc644_data,%eax
		xor    %edx,%edx
		call   _07c0b0_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01a988_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,0x000008(%esp)
		mov    %edx,%ecx
		mov    _0ced52_data,%eax
		mov    %esp,%edi
		sar    $0x000010,%eax
		mov    $_0c8f08_data,%edx
		shl    $0x000002,%eax
		mov    $_018ae0_func,%esi
		add    %eax,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    (%edx),%ah
		mov    %edx,%esi
		inc    %ah
		mov    0x000001(%edx),%bl
		mov    %ah,(%edx)
		cmp    %bl,%ah
		jbe    _01a9e2_jump
		mov    $0x000007,%eax
		call   _069140_func
		mov    %eax,%ebx
		mov    $0x000005,%eax
		movb   $0x000000,(%edx)
		call   _069140_func
		mov    %al,0x000001(%edx)
		mov    %bl,0x000002(%edx)
		mov    %bl,0x000003(%edx)

	_01a9e2_jump:
		mov    0x000008(%esp),%edx
		mov    _0cee10_data,%bx
		mov    0x000002(%esi),%al
		sub    %ebx,%edx
		mov    _0cedfa_data,%di
		xor    %ah,%ah
		sub    %edi,%ecx
		add    %eax,%edx
		add    %ecx,%eax
		test   %dx,%dx
		jle    _01aa80_jump
		movswl %dx,%ecx
		mov    $0x000140,%edx
		sub    %ecx,%edx
		test   %edx,%edx
		jle    _01aa80_jump
		test   %ax,%ax
		jle    _01aa80_jump
		movswl %ax,%ebx
		mov    $0x0000c8,%eax
		sub    %ebx,%eax
		test   %eax,%eax
		jle    _01aa80_jump
		xor    %eax,%eax
		mov    0x000003(%esi),%al
		mov    (%esp,%eax,1),%al
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		mov    _0cdc30_data,%eax
		shl    $0x000002,%esi
		mov    (%eax),%edx
		add    %esi,%edx
		movzbw 0x000006(%edx),%si
		movzbw 0x000005(%edx),%di
		shl    $0x000008,%esi
		add    %edi,%esi
		mov    0x000008(%eax),%eax
		movzwl %si,%ebp
		mov    (%edx),%esi
		add    %eax,%esi
		mov    0x00000a(%edx),%al
		shr    $0x000004,%al
		xor    %edx,%edx
		mov    _0cccb4_data,%edi
		mov    %al,%dl
		mov    %ecx,%eax
		mov    %ebp,%ecx
		call   *_0cc604_data

	_01aa80_jump:
		mov    _0ced54_data,%ax
		cmp    $0x00001e,%ax
		jge    _01aa96_jump
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0ced54_data

	_01aa96_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01aaa0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		cmpb   $0x000007,_0cdc11_data
		jne    _01ab62_jump
		testb  $0x000004,_0cdc25_data
		je     _01ab62_jump
		mov    _0ced94_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    %esp,%ecx
		add    %ebx,%eax
		mov    _0cc300_data,%esi
		shl    $0x000002,%eax
		xor    %edx,%edx
		add    %eax,%esi
		lea    0x000004(%esp),%eax
		mov    %dx,_0ced54_data
		push   %eax
		lea    0x00000c(%esp),%eax
		mov    $0x000001,%edx
		push   %eax
		lea    0x000014(%esp),%ebx
		mov    $_0cdba4_data,%eax
		call   _01d710_func
		mov    0x000006(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    0x000028(%esi),%cx
		mov    %eax,%edi
		mov    0x000002(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		xor    %ebx,%ebx
		add    %edx,%eax
		mov    0x000068(%esi),%bl
		sub    $0x000006,%eax
		add    %ecx,%ebx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000074(%esi),%al
		push   $0x000080
		add    %ecx,%eax
		push   $0x000005
		cwtl   
		movswl %bx,%ecx
		push   %eax
		movswl %dx,%ebx
		mov    $_01a988_func,%eax
		movswl %di,%edx
		call   _01ef3c_func

	_01ab62_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ab6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000d8,%esp
		push   $0x000000
		mov    $0x000010,%ecx
		mov    $0x000140,%ebx
		push   $0x0000ff
		xor    %edx,%edx
		xor    %eax,%eax
		call   _019f4c_func
		push   $0x000000
		mov    $0x000028,%ecx
		mov    $0x000140,%ebx
		push   $0x0000ff
		mov    $0x0000a0,%edx
		xor    %eax,%eax
		call   _019f4c_func
		cmpb   $0x0000ff,_0cefb4_data
		je     _01acd6_jump
		mov    _0ced72_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cc300_data,%ebp
		add    %edx,%eax
		xor    %edx,%edx
		shl    $0x000002,%eax
		mov    _0cefb4_data,%dl
		add    %eax,%ebp
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    $_0cba88_data,%esi
		sub    %edx,%eax
		mov    $0x0000d8,%ecx
		shl    $0x000003,%eax
		mov    %esp,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01acd6_jump
		testb  $0x000004,0x000081(%ebp)
		je     _01accf_jump
		xor    %eax,%eax
		mov    $0x0000be,%edx
		mov    0x000069(%ebp),%al
		sub    %eax,%edx
		xor    %ebx,%ebx
		mov    %dx,0x000038(%ebp)
		mov    0x000068(%ebp),%bl
		add    0x000036(%ebp),%bx
		mov    0x0000c6(%esp),%eax
		movswl %bx,%esi
		sar    $0x000010,%eax
		lea    -0x000008(%esi),%edx
		cmp    %eax,%edx
		jle    _01ac78_jump
		mov    0x0000ca(%esp),%edi
		sar    $0x000010,%edi
		add    %eax,%edi
		cmp    %edi,%esi
		jge    _01ac78_jump
		sub    %eax,%edx
		mov    $0x000007,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cwtl   
		xor    %cl,%cl
		mov    %cl,(%esp,%eax,1)
		jmp    _01ac95_jump

	_01ac78_jump:
		mov    0x0000c6(%esp),%eax
		mov    0x0000ca(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		movswl %bx,%eax
		cmp    %edx,%eax
		jl     _01ac9c_jump

	_01ac95_jump:
		mov    %esp,%eax
		call   _01a830_func

	_01ac9c_jump:
		xor    %eax,%eax
		mov    0x000038(%ebp),%cx
		mov    0x000069(%ebp),%al
		push   $0x000000
		add    %ecx,%eax
		push   $0x0000ff
		sub    $0x000014,%eax
		mov    $0x000012,%ecx
		movswl %ax,%edx
		movswl %bx,%eax
		mov    $0x00001e,%ebx
		call   _019f4c_func
		mov    %ebp,%eax
		call   _018ae8_func
		jmp    _01acd6_jump

	_01accf_jump:
		mov    %esp,%eax
		call   _01a830_func

	_01acd6_jump:
		mov    _0cefae_data,%ch
		cmp    $0x0000ff,%ch
		je     _01ad21_jump
		xor    %edx,%edx
		mov    %ch,%dl
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    $_0cba88_data,%esi
		sub    %edx,%eax
		mov    %esp,%edi
		shl    $0x000003,%eax
		mov    $0x0000d8,%ecx
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01ad21_jump
		mov    %esp,%eax
		call   _01a830_func

	_01ad21_jump:
		add    $0x0000d8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ad30_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		movswl %dx,%ebp
		shl    $0x000002,%ebp
		xor    %ebx,%ebx
		mov    _0cce18_data(%ebp),%bl
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%eax
		mov    %ebx,%edx
		mov    %ax,(%esp)
		sar    $0x00001f,%edx
		mov    %ebx,%eax
		idiv   %ecx
		mov    _0cecfa_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		add    $0x00001c,%edx
		mov    %dx,0x000004(%esp)
		mov    _0ced14_data,%dx
		push   $0x000001
		add    %edx,%eax
		movswl %si,%ebx
		sub    $0x000017,%eax
		mov    $0x00001b,%edx
		movswl %ax,%ecx
		mov    $_0cdc40_data,%eax
		call   _018cb0_func
		mov    _0cdc40_data,%eax
		mov    0x000149(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cecfa_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0ced14_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000004(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0cdc40_data,%eax
		call   _018cb0_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0cdc40_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cecfa_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0ced14_data,%cx
		xor    %edx,%edx
		add    %ecx,%eax
		mov    0x000008(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0cdc40_data,%eax
		call   _018cb0_func
		xor    %edx,%edx
		mov    _0cce1b_data(%ebp),%dl
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x00001c,%edx
		mov    %dx,0x000004(%esp)
		mov    _0cdc40_data,%eax
		mov    0x000155(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cecfa_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0ced14_data,%dx
		add    $0x00000a,%esi
		add    %edx,%eax
		movswl %si,%ebx
		sub    $0x000017,%eax
		mov    $0x000039,%edx
		movswl %ax,%ecx
		mov    $_0cce2c_data,%eax
		call   _018cb0_func
		mov    _0cce2c_data,%edx
		xor    %eax,%eax
		mov    0x0002b1(%edx),%al
		add    %eax,%esi
		mov    _0cecfa_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0ced14_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000008(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0cdc40_data,%eax
		call   _018cb0_func
		xor    %edx,%edx
		mov    _0cce1a_data(%ebp),%dl
		lea    0x000000(,%edx,4),%ebx
		sub    %edx,%ebx
		shl    $0x000003,%ebx
		add    %ebx,%edx
		shl    $0x000002,%edx
		mov    $0x000066,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %ax,%ebx
		mov    $0x000064,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x00000a,%ecx
		add    $0x00001c,%eax
		mov    %ebx,%edx
		mov    %ax,0x000008(%esp)
		sar    $0x00001f,%edx
		mov    %ebx,%eax
		idiv   %ecx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%edx
		mov    %dx,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%edx
		mov    _0cdc40_data,%eax
		mov    %dx,0x000004(%esp)
		mov    0x0001c1(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cecfa_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		xor    %edx,%edx
		mov    _0ced14_data,%cx
		mov    0x00000c(%esp),%dl
		add    %ecx,%eax
		add    $0x00000a,%esi
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0cdc40_data,%eax
		call   _018cb0_func
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdc40_data,%edx
		mov    0x000005(%edx,%eax,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cecfa_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0ced14_data,%dx
		movswl %si,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    $0x000017,%eax
		mov    0x000004(%esp),%dl
		movswl %ax,%ecx
		mov    $_0cdc40_data,%eax
		call   _018cb0_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0cdc40_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cecfa_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0ced14_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000008(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0cdc40_data,%eax
		call   _018cb0_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0cdc40_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cecfa_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000002
		mov    _0ced14_data,%cx
		movswl %si,%edx
		add    %ecx,%eax
		mov    $0x000001,%ecx
		movswl %ax,%ebx
		mov    $_0c04a8_data,%eax
		call   _01a178_func
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01b074_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ced0e_data,%cx
		mov    _0cecfa_data,%ax
		dec    %ecx
		add    $0x000017,%eax
		imul   %ecx,%eax
		mov    _0ced14_data,%dx
		push   $0x000000
		add    %edx,%eax
		mov    $0x00000a,%ebx
		sub    $0x000017,%eax
		mov    $0x000002,%edx
		movswl %ax,%ecx
		mov    $_0cce2c_data,%eax
		call   _018cb0_func
		mov    _0ced12_data,%bx
		test   %bx,%bx
		je     _01b0f5_jump
		mov    %ebx,%ecx
		mov    _0cecfa_data,%ax
		dec    %ecx
		add    $0x000017,%eax
		imul   %eax,%ecx
		push   $0x000000
		mov    _0ced14_data,%si
		mov    $0x000001,%edx
		add    %esi,%ecx
		mov    $0x00000a,%ebx
		sub    $0x000017,%ecx
		mov    $_0cce2c_data,%eax
		movswl %cx,%ecx
		call   _018cb0_func

	_01b0f5_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b1bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000024,%esp
		mov    %eax,%ebx
		mov    _0cedd0_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmp    $0xfffffffe,%ebx
		je     _01b3e0_jump
		mov    $0x00003c,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x00000a,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000258,%ecx
		mov    %dl,0x000018(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x00000a,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x001770,%ecx
		mov    %dl,0x000014(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x00000a,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ah,%ah
		mov    %ah,0x00001c(%esp)
		mov    _0cc5b0_data,%ax
		sub    $0x000020,%eax
		push   $0x000005
		movswl %ax,%ebx
		mov    _0cc5a8_data,%ax
		mov    $0x000002,%ecx
		sub    $0x000034,%eax
		mov    %dl,0x000024(%esp)
		movswl %ax,%edx
		mov    _0c2634_data,%eax
		call   _01a178_func
		mov    0x000020(%esp),%dl
		test   %dl,%dl
		je     _01b2a9_jump
		mov    _0cc5b0_data,%ax
		sub    $0x00001e,%eax
		movswl %ax,%ecx
		mov    _0cc5a8_data,%ax
		sub    $0x000032,%eax
		movswl %ax,%ebx
		mov    %dl,%al
		add    $0x00001c,%al
		xor    %edx,%edx
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018cb0_func
		movb   $0x00000f,0x00001c(%esp)

	_01b2a9_jump:
		mov    _0cc5b0_data,%ax
		sub    $0x00001e,%eax
		movswl %ax,%ecx
		mov    _0cc5a8_data,%ax
		movzbw 0x00001c(%esp),%di
		sub    $0x000032,%eax
		add    %edi,%eax
		movswl %ax,%ebx
		mov    0x000014(%esp),%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018cb0_func
		mov    _0cc5b0_data,%ax
		sub    $0x00001e,%eax
		movswl %ax,%ecx
		mov    _0cc5a8_data,%ax
		sub    $0x000023,%eax
		add    %edi,%eax
		movswl %ax,%ebx
		mov    0x000018(%esp),%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018cb0_func
		mov    _0cce24_data,%edx
		cmp    $0x000064,%edx
		jg     _01b3b1_jump
		xor    %eax,%eax
		mov    _0cefab_data,%al
		push   %eax
		mov    _0c2628_data,%edi
		push   %edi
		lea    0x000008(%esp),%eax
		xor    %esi,%esi
		push   %eax
		mov    %esi,_0cdbc8_data
		call   _07c0db_func
		mov    _0cef55_data,%bl
		add    $0x00000c,%esp
		cmp    $0x000004,%bl
		jae    _01b3e0_jump
		mov    _095ba9_data,%al
		mov    _095ba8_data,%bh
		add    %al,%bh
		mov    %bh,_095ba8_data
		cmp    $0x000005,%bh
		jbe    _01b376_jump
		mov    %al,%dl
		neg    %dl
		mov    %dl,_095ba9_data
		movb   $0x000005,_095ba8_data
		jmp    _01b388_jump

	_01b376_jump:
		test   %bh,%bh
		jne    _01b388_jump
		neg    %al
		mov    %al,_095ba9_data
		movb   $0x000001,_095ba8_data

	_01b388_jump:
		xor    %eax,%eax
		mov    $0x000002,%ecx
		mov    _095ba8_data,%al
		mov    $0x000064,%ebx
		push   %eax
		mov    $0x0000a0,%edx
		lea    0x000004(%esp),%eax
		call   _01a178_func
		add    $0x000024,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01b3b1_jump:
		cmp    $0x0000a0,%edx
		jg     _01b3e0_jump
		cmp    $0x000078,%edx
		jle    _01b3e0_jump
		mov    %esp,%edi
		push   $0x000005
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    $_0c04ac_data,%esi
		lea    0x000004(%esp),%eax
		xor    %ecx,%ecx
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   _01a178_func

	_01b3e0_jump:
		add    $0x000024,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b3ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000008,%esp
		cmpw   $0x0000ff,_0ced78_data
		jne    _01b43c_jump
		cmpb   $0x000000,_0cef88_data
		je     _01b421_jump
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b6,%ebx
		mov    $0x0000b5,%edx
		mov    $_0c04b4_data,%eax
		jmp    _01b560_jump

	_01b421_jump:
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b6,%ebx
		mov    $0x0000b5,%edx
		mov    $_0c04c4_data,%eax
		jmp    _01b560_jump

	_01b43c_jump:
		push   $0x000001
		mov    $0x0000a2,%ecx
		mov    $0x000092,%ebx
		mov    $0x00001b,%edx
		mov    $_0cdc40_data,%eax
		call   _018cb0_func
		push   $0x000000
		mov    $0x000022,%ecx
		mov    $0x000016,%ebx
		push   $0x0000ff
		mov    $0x0000a2,%edx
		mov    $0x000092,%eax
		call   _019f4c_func
		xor    %ebx,%ebx
		mov    _0cef98_data,%bl
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ax,0x000004(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		mov    $0x0000bc,%ebx
		mov    0x000008(%esp),%al
		mov    %dx,0x000004(%esp)
		add    $0x00001c,%al
		xor    %edx,%edx
		mov    $0x0000a2,%ecx
		mov    %al,%dl
		mov    $_0cdc40_data,%eax
		call   _018cb0_func
		push   $0x000001
		mov    0x000004(%esp),%al
		mov    $0x0000a2,%ecx
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x0000cb,%ebx
		mov    %al,%dl
		mov    $_0cdc40_data,%eax
		call   _018cb0_func
		mov    _0ced76_data,%ebx
		sar    $0x000010,%ebx
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ax,0x000004(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		mov    $0x000034,%ebx
		mov    0x000008(%esp),%al
		mov    %dx,0x000004(%esp)
		add    $0x00001c,%al
		xor    %edx,%edx
		mov    $0x0000a2,%ecx
		mov    %al,%dl
		mov    $_0cdc40_data,%eax
		call   _018cb0_func
		push   $0x000001
		mov    0x000004(%esp),%al
		mov    $0x0000a2,%ecx
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x000043,%ebx
		mov    %al,%dl
		mov    $_0cdc40_data,%eax
		call   _018cb0_func
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b8,%ebx
		mov    $0x000058,%edx
		mov    $_0c04d0_data,%eax

	_01b560_jump:
		call   _01a178_func
		mov    $_0cdba4_data,%eax
		call   _018ae8_func
		mov    $_0ce29c_data,%eax
		call   _018ae8_func
		testb  $0x000004,_0ccead_data
		je     _01b58c_jump
		mov    $_0cce2c_data,%eax
		call   _018ae8_func

	_01b58c_jump:
		add    $0x000008,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b594_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    0x000078(%esp),%esi
		mov    %eax,0x000054(%esp)
		mov    %edx,0x00003c(%esp)
		mov    0x00007c(%esp),%eax
		mov    0x000088(%esp),%edi
		mov    %ebx,%edx
		mov    %di,0x000060(%esp)
		cmp    %bx,%si
		jge    _01b5cb_jump
		mov    0x000080(%esp),%edi
		mov    %esi,%edx
		mov    %di,0x000060(%esp)

	_01b5cb_jump:
		mov    0x000080(%esp),%edi
		cmp    %di,%dx
		jle    _01b5de_jump
		mov    %edi,%edx
		mov    %si,0x000060(%esp)

	_01b5de_jump:
		mov    0x000088(%esp),%edi
		cmp    %di,%dx
		jle    _01b5f1_jump
		mov    %edi,%edx
		mov    %bx,0x000060(%esp)

	_01b5f1_jump:
		mov    0x00008c(%esp),%edi
		mov    %cx,0x00005c(%esp)
		mov    %di,0x000064(%esp)
		cmp    %cx,%ax
		jge    _01b618_jump
		mov    0x000084(%esp),%edi
		mov    %ax,0x00005c(%esp)
		mov    %di,0x000064(%esp)

	_01b618_jump:
		mov    0x000084(%esp),%edi
		cmp    0x00005c(%esp),%di
		jge    _01b630_jump
		mov    %di,0x00005c(%esp)
		mov    %ax,0x000064(%esp)

	_01b630_jump:
		mov    0x00008c(%esp),%edi
		cmp    0x00005c(%esp),%di
		jge    _01b648_jump
		mov    %di,0x00005c(%esp)
		mov    %cx,0x000064(%esp)

	_01b648_jump:
		mov    0x00005e(%esp),%edi
		sar    $0x000010,%edi
		cwtl   
		mov    %edi,0x000034(%esp)
		movswl %si,%esi
		mov    0x000034(%esp),%ebp
		movswl %dx,%edi
		mov    %eax,0x000034(%esp)
		sub    %edi,%ebp
		movswl %cx,%eax
		mov    %ebp,%edi
		mov    0x000034(%esp),%ebp
		mov    %esi,0x000034(%esp)
		sub    %eax,%ebp
		movswl %bx,%esi
		mov    %ebp,%eax
		mov    0x000034(%esp),%ebp
		sub    %esi,%ebp
		mov    %ebp,0x000058(%esp)
		test   %eax,%eax
		jge    _01b696_jump
		mov    %edi,%esi
		mov    %edi,0x000048(%esp)
		neg    %esi
		neg    %eax
		mov    %esi,0x000048(%esp)
		jmp    _01b69a_jump

	_01b696_jump:
		mov    %edi,0x000048(%esp)

	_01b69a_jump:
		cmpl   $0x000000,0x000058(%esp)
		jge    _01b6b6_jump
		mov    0x000058(%esp),%esi
		mov    $0xffffffff,%ebp
		neg    %esi
		mov    %ebp,0x000040(%esp)
		mov    %esi,0x000058(%esp)
		jmp    _01b6be_jump

	_01b6b6_jump:
		movl   $0x000001,0x000040(%esp)

	_01b6be_jump:
		mov    0x000082(%esp),%esi
		sar    $0x000010,%esi
		mov    %esi,0x000034(%esp)
		mov    0x000034(%esp),%ebp
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi
		mov    0x00007e(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,0x000034(%esp)
		movswl %bx,%ebp
		mov    %ebp,0x000038(%esp)
		mov    0x000034(%esp),%ebp
		sub    0x000038(%esp),%ebp
		mov    %ebp,0x000050(%esp)
		test   %esi,%esi
		jge    _01b709_jump
		mov    %edi,%ebp
		mov    %edi,0x000044(%esp)
		neg    %ebp
		neg    %esi
		mov    %ebp,0x000044(%esp)
		jmp    _01b70d_jump

	_01b709_jump:
		mov    %edi,0x000044(%esp)

	_01b70d_jump:
		cmpl   $0x000000,0x000050(%esp)
		jge    _01b722_jump
		movl   $0xffffffff,0x00004c(%esp)
		negl   0x000050(%esp)
		jmp    _01b72a_jump

	_01b722_jump:
		movl   $0x000001,0x00004c(%esp)

	_01b72a_jump:
		test   %eax,%eax
		jne    _01b72f_jump
		inc    %eax

	_01b72f_jump:
		test   %esi,%esi
		jne    _01b734_jump
		inc    %esi

	_01b734_jump:
		mov    0x000040(%esp),%ebp
		mov    %eax,0x00000c(%esp)
		mov    0x00004c(%esp),%eax
		mov    %ebp,(%esp)
		mov    0x000048(%esp),%ebp
		mov    %eax,0x000010(%esp)
		mov    0x000044(%esp),%eax
		mov    %ebp,0x000004(%esp)
		mov    0x000058(%esp),%ebp
		mov    %eax,0x000014(%esp)
		mov    0x000050(%esp),%eax
		mov    %ebp,0x000008(%esp)
		mov    0x00005a(%esp),%ebp
		mov    %eax,0x000018(%esp)
		mov    0x000062(%esp),%eax
		sar    $0x000010,%ebp
		sar    $0x000010,%eax
		sub    %ebp,%eax
		mov    %eax,0x000024(%esp)
		movswl %cx,%eax
		sub    %ebp,%eax
		mov    %edi,0x000020(%esp)
		imul   %eax,%edi
		movswl %dx,%ecx
		movswl %bx,%eax
		mov    %esi,0x00001c(%esp)
		sub    %ecx,%eax
		mov    %ecx,0x000038(%esp)
		add    %edi,%eax
		mov    0x000054(%esp),%ecx
		mov    %eax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000005(%ecx),%al
		mov    %eax,0x00002c(%esp)
		xor    %eax,%eax
		mov    0x000006(%ecx),%al
		mov    %eax,0x000030(%esp)
		mov    0x00003c(%esp),%esi
		mov    (%ecx),%ecx
		mov    _0ccd08_data,%edi
		add    %ecx,%esi
		mov    %esp,%ecx
		mov    0x00005c(%esp),%ebx
		call   _014787_func
		mov    0x000064(%esp),%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000060(%esp),%eax
		shl    $0x000008,%ebx
		sub    %edx,%eax
		xor    %ecx,%ecx
		add    %ebx,%eax
		mov    %ax,%cx
		mov    0x000054(%esp),%eax
		mov    _0cccb4_data,%edi
		mov    _0ccd08_data,%esi
		mov    0x00000a(%eax),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %ebp,%ebx
		mov    %al,%dl
		mov    0x000038(%esp),%eax
		call   *_0cc604_data
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000018



_01b814_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000060,%esp
		mov    %eax,0x000008(%esp)
		mov    %dx,0x00005c(%esp)
		mov    %bx,0x000028(%esp)
		mov    %cx,0x000054(%esp)
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000008(%esp),%edx
		shl    $0x000002,%eax
		mov    0x000004(%edx),%edx
		add    %eax,%edx
		mov    0x000008(%edx),%ax
		mov    %edx,0x00000c(%esp)
		and    $0x00003f,%ah
		xor    %edx,%edx
		mov    0x000008(%esp),%ebx
		mov    %ax,%dx
		xor    %eax,%eax
		mov    0x00006b(%ebx),%al
		imul   %edx,%eax
		mov    0x00000c(%esp),%edx
		shl    $0x000002,%eax
		mov    (%edx),%edx
		add    %eax,%edx
		mov    %edx,(%esp)
		testb  $0x000020,0x000081(%ebx)
		je     _01b8db_jump
		lea    0x000010(%esp),%eax
		lea    0x00001c(%esp),%ecx
		xor    %edx,%edx
		push   %eax
		lea    0x000018(%esp),%eax
		mov    0x000075(%ebx),%dl
		push   %eax
		mov    %ebx,%eax
		lea    0x000028(%esp),%ebx
		call   _01d710_func
		mov    0x00001e(%esp),%edx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000012(%esp),%edx
		mov    0x000008(%esp),%ebx
		sar    $0x000010,%edx
		add    $0x000008,%eax
		sar    %edx
		mov    _0cedfa_data,%cx
		add    %edx,%eax
		mov    0x00001c(%esp),%edx
		mov    %eax,0x000030(%esp)
		xor    %eax,%eax
		sub    %ecx,%edx
		mov    0x000074(%ebx),%al
		add    %eax,%edx
		mov    %edx,0x000018(%esp)
		jmp    _01b947_jump

	_01b8db_jump:
		lea    0x000034(%esp),%eax
		lea    0x000038(%esp),%ecx
		lea    0x00003c(%esp),%ebx
		push   %eax
		lea    0x000044(%esp),%edx
		mov    0x00000c(%esp),%eax
		call   _01d294_func
		mov    0x000040(%esp),%eax
		sub    _0cee10_data,%ax
		mov    0x00003c(%esp),%ebx
		add    $0x000008,%eax
		mov    0x000036(%esp),%edx
		mov    %ax,0x000040(%esp)
		mov    _0cedfa_data,%ax
		sar    $0x000010,%edx
		sub    %eax,%ebx
		mov    0x00003e(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %bx,0x00003c(%esp)
		mov    %eax,0x000030(%esp)
		mov    0x000032(%esp),%eax
		mov    0x00003a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    %eax,0x000018(%esp)

	_01b947_jump:
		xor    %esi,%esi
		mov    %si,0x000024(%esp)
		jmp    _01bad0_jump

	_01b953_jump:
		mov    (%esp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x000003(%esi),%al
		test   %ax,%ax
		je     _01bacb_jump
		cwtl   
		imul   $0x00000c,%eax,%eax
		mov    0x000008(%esp),%ebp
		mov    0x000008(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    0x000000(%ebp),%ebp
		mov    0x000036(%edx),%di
		xor    %edx,%edx
		mov    0x000038(%ebx),%cx
		mov    0x000002(%esi),%dl
		xor    %ebx,%ebx
		add    %ecx,%edx
		add    %eax,%ebp
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    0x000001(%esi),%al
		mov    0x000005(%ebp),%bl
		add    %edi,%eax
		mov    0x000030(%esp),%edi
		mov    %eax,%esi
		mov    0x000006(%ebp),%cl
		sub    %edi,%esi
		add    %ebx,%eax
		mov    %si,0x00002c(%esp)
		mov    %si,0x000048(%esp)
		sub    %edi,%eax
		mov    0x000018(%esp),%esi
		mov    0x000026(%esp),%edi
		mov    %ax,0x000058(%esp)
		mov    %edx,%eax
		sar    $0x000010,%edi
		sub    %esi,%eax
		add    %ecx,%edx
		mov    %ax,0x000050(%esp)
		mov    %ax,0x00004c(%esp)
		mov    %edi,%ecx
		sub    %esi,%edx
		mov    0x000052(%esp),%eax
		mov    0x00005a(%esp),%esi
		mov    %dx,0x000044(%esp)
		lea    0x000050(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		mov    %eax,0x000004(%esp)
		push   %eax
		mov    %esi,%ebx
		lea    0x000030(%esp),%eax
		call   _01bc80_func
		mov    0x000004(%esp),%ebx
		lea    0x00004c(%esp),%edx
		lea    0x000058(%esp),%eax
		push   %ebx
		mov    %edi,%ecx
		mov    %esi,%ebx
		call   _01bc80_func
		mov    0x000004(%esp),%ecx
		lea    0x000044(%esp),%edx
		lea    0x000048(%esp),%eax
		push   %ecx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _01bc80_func
		mov    0x000030(%esp),%eax
		mov    0x00002c(%esp),%edx
		mov    0x000058(%esp),%ebx
		mov    0x000048(%esp),%ecx
		mov    0x000050(%esp),%esi
		mov    0x00004c(%esp),%edi
		add    %eax,%edx
		add    %eax,%ebx
		add    %eax,%ecx
		mov    0x000018(%esp),%eax
		mov    %dx,0x00002c(%esp)
		mov    %bx,0x000058(%esp)
		mov    0x000044(%esp),%edx
		add    %eax,%esi
		add    %eax,%edi
		add    %eax,%edx
		mov    %di,0x00004c(%esp)
		mov    %dx,0x000044(%esp)
		mov    %ebx,%eax
		mov    %edi,%edx
		mov    0x000044(%esp),%edi
		sub    %esi,%edx
		mov    0x00002c(%esp),%ebx
		add    %edi,%edx
		sub    %ebx,%eax
		movswl %dx,%edx
		add    %ecx,%eax
		push   %edx
		cwtl   
		push   %eax
		mov    0x00004a(%esp),%eax
		sar    $0x000010,%eax
		mov    %cx,0x000050(%esp)
		push   %eax
		mov    0x000052(%esp),%eax
		mov    %si,0x00005c(%esp)
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ebx
		push   %eax
		mov    0x00005a(%esp),%eax
		mov    0x00005e(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00006a(%esp),%eax
		mov    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x000008(%edx),%edx
		mov    %ebp,%eax
		call   _01b594_func

	_01bacb_jump:
		incw   0x000024(%esp)

	_01bad0_jump:
		mov    0x00000c(%esp),%eax
		mov    0x000008(%eax),%ax
		xor    %edx,%edx
		and    $0x00003f,%ah
		mov    %ax,%dx
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _01b953_jump
		add    $0x000060,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_01baf8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    0x000009(%eax),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		movswl %bx,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		sar    %eax
		add    %edx,%eax
		mov    %eax,0x000024(%esp)
		mov    0x000009(%esi),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %al,%dl
		movswl %cx,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000008(%esi),%dl
		inc    %eax
		sar    %edx
		add    %edx,%eax
		mov    0x000024(%esp),%edx
		mov    %eax,0x000020(%esp)
		mov    %ebx,%eax
		sub    %edx,%eax
		mov    %ax,0x00001c(%esp)
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		add    %ebx,%eax
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)
		mov    0x00001c(%esp),%eax
		mov    0x000020(%esp),%edi
		mov    %ax,0x000018(%esp)
		mov    %ecx,%eax
		mov    0x000036(%esp),%ebp
		sub    %edi,%eax
		sar    $0x000010,%ebp
		mov    %ax,0x000010(%esp)
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    %ebp,%ebx
		mov    0x000006(%esi),%al
		lea    0x000010(%esp),%edx
		add    %eax,%ecx
		mov    0x00003e(%esp),%eax
		sub    %edi,%ecx
		mov    0x00003a(%esp),%edi
		sar    $0x000010,%eax
		mov    %cx,0x000014(%esp)
		mov    %eax,0x000004(%esp)
		push   %eax
		sar    $0x000010,%edi
		lea    0x000020(%esp),%eax
		mov    %edi,%ecx
		call   _01bc80_func
		mov    0x000004(%esp),%ebx
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%eax
		push   %ebx
		mov    %edi,%ecx
		mov    %ebp,%ebx
		call   _01bc80_func
		mov    0x000004(%esp),%ecx
		lea    0x000014(%esp),%edx
		lea    0x000018(%esp),%eax
		push   %ecx
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _01bc80_func
		mov    0x000024(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    0x000018(%esp),%ecx
		mov    0x000010(%esp),%edi
		add    %eax,%edx
		add    %eax,%ebx
		add    %eax,%ecx
		mov    0x000020(%esp),%eax
		mov    %dx,0x00001c(%esp)
		mov    %bx,0x000008(%esp)
		mov    %cx,0x000018(%esp)
		mov    0x00000c(%esp),%edx
		mov    0x000014(%esp),%ebx
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %eax,%edx
		add    %eax,%ebx
		mov    0x000008(%esp),%eax
		mov    %dx,0x00000c(%esp)
		mov    0x000018(%esp),%edx
		sub    %ecx,%eax
		add    %eax,%edx
		mov    0x00000c(%esp),%eax
		sub    %edi,%eax
		add    %ebx,%eax
		cwtl   
		push   %eax
		movswl %dx,%eax
		mov    %bx,0x000018(%esp)
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		mov    %di,0x00001c(%esp)
		push   %eax
		mov    0x00001a(%esp),%eax
		mov    0x00001e(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x00001a(%esp),%eax
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01b594_func
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_01bc80_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		movswl %cx,%edx
		movswl (%eax),%eax
		imul   %edx,%eax
		sar    $0x00000c,%eax
		mov    0x000016(%esp),%edx
		mov    %eax,%ecx
		sar    $0x000010,%edx
		movswl (%esi),%eax
		imul   %edx,%eax
		sar    $0x00000c,%eax
		lea    0x000008(%esp),%edx
		mov    %ax,(%esp)
		movswl %bx,%eax
		lea    0x000004(%esp),%ebx
		call   _05be7c_func
		mov    0x000002(%esp),%ebx
		movswl %cx,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		imul   %eax,%ecx
		sub    %ecx,%ebx
		sar    $0x000009,%ebx
		mov    %bx,(%edi)
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   %edx,%eax
		add    %ebx,%eax
		sar    $0x000009,%eax
		mov    %ax,(%esi)
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01bd10_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    0x000010(%esp),%ebp
		movzbl 0x00006d(%eax),%esi
		lea    0x000000(,%esi,4),%edi
		mov    0x00000c(%eax),%esi
		add    %esi,%edi
		movzbl 0x00006c(%eax),%esi
		mov    (%edi),%edi
		shl    $0x000003,%esi
		add    %edi,%esi
		testb  $0x000040,0x000007(%esi)
		je     _01bd5b_jump
		mov    0x000028(%eax),%si
		add    $0x000045,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000026,%eax
		mov    %ax,(%ebx)
		movw   $0x000015,(%ecx)
		movw   $0x00001e,0x000000(%ebp)
		jmp    _01bda9_jump

	_01bd5b_jump:
		testb  $0x000080,0x000007(%esi)
		je     _01bd88_jump
		mov    0x000028(%eax),%si
		add    $0x000045,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000056,%eax
		mov    %ax,(%ebx)
		movw   $0x000022,(%ecx)
		movw   $0x00000a,0x000000(%ebp)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_01bd88_jump:
		mov    0x000028(%eax),%si
		add    $0x000047,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000047,%eax
		mov    %ax,(%ebx)
		movw   $0x00001d,(%ecx)
		movw   $0x000013,0x000000(%ebp)

	_01bda9_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01bdb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%edi
		call   _01d380_func
		mov    %ax,0x000018(%esp)
		mov    %edi,%eax
		call   _01d4b0_func
		mov    %ax,0x00001c(%esp)
		cmpb   $0x000000,0x00006d(%edi)
		jne    _01bded_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x00001b,%dl
		je     _01be01_jump
		cmp    $0x000018,%dl
		je     _01be01_jump
		cmp    $0x00001e,%dl
		je     _01be01_jump
		cmp    $0x00000b,%dl
		je     _01be01_jump

	_01bded_jump:
		cmpb   $0x000001,0x00006d(%edi)
		jne    _01beb4_jump
		cmpb   $0x000002,0x00006c(%edi)
		jne    _01beb4_jump

	_01be01_jump:
		cmpb   $0x000000,_0cdcd2_data
		je     _01bed5_jump
		mov    _0cdc30_data,%esi
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%bx
		mov    0x00002c(%esi),%dx
		add    %eax,%ebx
		mov    %edx,%ecx
		mov    %bx,0x000010(%esp)
		xor    %eax,%eax
		xor    %edx,%ecx
		mov    0x000069(%esi),%al
		xor    %ebx,%ebx
		mov    0x000068(%edi),%cl
		mov    0x000074(%esi),%bl
		mov    0x000028(%edi),%si
		add    %edx,%eax
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    %si,0x000014(%esp)
		mov    0x000069(%edi),%cl
		mov    0x00002c(%edi),%si
		add    %edx,%ebx
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    0x00002c(%edi),%dx
		mov    0x000074(%edi),%cl
		add    %edx,%ecx
		add    $0x000005,%esi
		sub    $0x000005,%ecx
		cmp    %si,%ax
		jle    _01be72_jump
		cmp    %si,%bx
		jg     _01bed5_jump

	_01be72_jump:
		cmp    %cx,%ax
		jge    _01be7c_jump
		cmp    %cx,%bx
		jl     _01bed5_jump

	_01be7c_jump:
		mov    0x000012(%esp),%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		lea    0x00003c(%ecx),%esi
		cmp    %esi,%ebx
		jg     _01bed5_jump
		sub    $0x00003c,%ecx
		cmp    %ecx,%ebx
		jl     _01bed5_jump
		mov    $0x000019,%ebx
		mov    %edi,%eax
		movw   $0x000000,0x000040(%edi)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%edi)
		call   _01d374_func
		jmp    _01bed5_jump

	_01beb4_jump:
		cmpb   $0x000000,0x00006d(%edi)
		jne    _01bed5_jump
		cmpb   $0x00001a,0x00006c(%edi)
		jne    _01bed5_jump
		cmpb   $0x000000,_0cdcd2_data
		jne    _01bed5_jump
		mov    $0x00001b,%edx
		mov    %edi,%eax
		call   _01d364_func

	_01bed5_jump:
		cmpb   $0x000001,0x00006d(%edi)
		jne    _01bf55_jump
		cmpb   $0x000002,0x00006c(%edi)
		jne    _01bf55_jump
		mov    %edi,%eax
		call   _053ce4_func
		xor    %edx,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _024c98_func
		mov    %al,%bl
		testb  $0x000001,_092224_data(%ebx)
		je     _01bf4e_jump
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		xor    %ebx,%ebx
		shr    $0x000007,%al
		mov    $0x000001,%ecx
		mov    %al,%bl
		sub    %ebx,%ecx
		mov    %cl,%al
		mov    0x000081(%edi),%ch
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		xor    %edx,%edx
		mov    %ch,%ah
		mov    %ch,0x000081(%edi)
		or     %al,%ah
		mov    $0x000018,%ebx
		mov    %ah,0x000081(%edi)
		mov    %edi,%eax
		call   _01d374_func
		mov    %edi,%eax
		call   _053ce4_func

	_01bf4e_jump:
		mov    %edi,%eax
		call   _0252c0_func

	_01bf55_jump:
		mov    0x00001a(%esp),%esi
		mov    0x000016(%esp),%ecx
		mov    %edi,%eax
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		mov    %esi,%ebx
		mov    %ecx,%edx
		call   _01d624_func
		test   %ax,%ax
		je     _01c02d_jump
		mov    %esi,%ebx
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _01c02d_jump
		cmpb   $0x000001,0x00006d(%edi)
		jne    _01bfed_jump
		cmpb   $0x000002,0x00006c(%edi)
		jne    _01bfed_jump
		mov    $0x000015,%ebx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		xor    %ebx,%ebx
		shr    $0x000007,%al
		mov    $0x000001,%ecx
		mov    %al,%bl
		sub    %ebx,%ecx
		movw   $0x000000,0x000040(%edi)
		mov    %cl,%al
		mov    0x000081(%edi),%cl
		and    $0x000001,%al
		and    $0x0000f7,%cl
		shl    $0x000003,%al
		mov    %cl,0x000081(%edi)
		mov    %cl,%ch
		movw   $0x000000,0x000042(%edi)
		or     %al,%ch
		mov    %ch,0x000081(%edi)
		jmp    _01c18e_jump

	_01bfed_jump:
		mov    0x00006d(%edi),%dl
		cmp    $0x000002,%dl
		jne    _01c18e_jump
		mov    0x00006c(%edi),%dh
		cmp    $0x000003,%dh
		je     _01c00e_jump
		cmp    $0x000001,%dh
		je     _01c00e_jump
		cmp    %dl,%dh
		jne    _01c18e_jump

	_01c00e_jump:
		mov    $0x00000c,%ebx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%edi)
		movw   $0x000000,0x000042(%edi)
		jmp    _01c18e_jump

	_01c02d_jump:
		cmpb   $0x000002,0x00006d(%edi)
		jne    _01c050_jump
		cmpb   $0x000001,0x00006c(%edi)
		jne    _01c050_jump
		cmpb   $0x000000,0x00006b(%edi)
		jne    _01c050_jump
		movw   $0x000000,0x000040(%edi)
		movw   $0x00fff6,0x000042(%edi)
		jmp    _01c18e_jump

	_01c050_jump:
		cmpb   $0x000000,0x00006d(%edi)
		jne    _01c18e_jump
		cmpb   $0x000014,0x00006c(%edi)
		jne    _01c18e_jump
		cmpb   $0x00001b,0x00006b(%edi)
		jne    _01c18e_jump
		mov    _0cc300_data,%esi
		mov    _0cc304_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _01c18e_jump

	_01c086_jump:
		cmpw   $0x0000c4,0x000060(%esi)
		jne    _01c17e_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _01c17e_jump
		lea    0x000004(%esp),%ebx
		lea    0x000008(%esp),%ecx
		push   %ebx
		lea    0x000004(%esp),%ebx
		mov    $0x000002,%edx
		push   %ebx
		mov    %edi,%eax
		lea    0x000014(%esp),%ebx
		call   _01d710_func
		andb   $0x0000f7,0x000081(%esi)
		xor    %ebx,%ebx
		mov    0x00000a(%esp),%ecx
		mov    0x000068(%esi),%bl
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		sar    %ebx
		add    %ebx,%ecx
		mov    %ecx,0x000028(%esi)
		mov    %ecx,%ebx
		mov    %cx,0x00003c(%esi)
		xor    %ecx,%ebx
		mov    0x000006(%esp),%ecx
		mov    0x000069(%esi),%bl
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x000081(%esi),%ah
		mov    %ecx,%ebx
		mov    0x000002(%esp),%ecx
		movw   $0x000000,0x000040(%esi)
		or     $0x000004,%ah
		movw   $0x000020,0x000042(%esi)
		sar    $0x000010,%ecx
		movl   $0x000001,0x000024(%esi)
		sar    %ecx
		mov    %ah,0x000081(%esi)
		add    %ecx,%ebx
		mov    %ebx,0x00002c(%esi)
		mov    %esi,%eax
		mov    %bx,0x00003e(%esi)
		call   _01f304_func
		mov    _0cdbb0_data,%ecx
		mov    0x000081(%esi),%dl
		xor    %ebx,%ebx
		movw   $0x00ffff,0x000046(%esi)
		mov    _0cdc11_data,%bl
		movw   $0x000000,0x000048(%esi)
		shl    $0x000002,%ebx
		or     $0x000010,%dl
		add    %ecx,%ebx
		mov    %dl,0x000081(%esi)
		xor    %ecx,%ecx
		mov    (%ebx),%ebx
		mov    _0cdc10_data,%cl
		mov    0x000007(%ebx,%ecx,8),%dh
		test   $0x000040,%dh
		setne  %al
		mov    %al,_0ceff4_data
		mov    %esi,%eax
		call   _01c3ac_func
		jmp    _01c18e_jump

	_01c17e_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jl     _01c086_jump

	_01c18e_jump:
		cmpb   $0x000000,0x00006d(%edi)
		jne    _01c1cc_jump
		mov    0x00006c(%edi),%bh
		cmp    $0x000014,%bh
		je     _01c1a6_jump
		cmp    $0x00000d,%bh
		je     _01c1a6_jump
		cmp    $0x000017,%bh
		jne    _01c1cc_jump

	_01c1a6_jump:
		mov    _0cdbcc_data,%ebx
		mov    0x000028(%edi),%esi
		lea    0x000081(%edi),%ecx
		cmp    %esi,%ebx
		setg   %al
		and    $0x000001,%al
		mov    (%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,(%ecx)
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,(%ecx)

	_01c1cc_jump:
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c1d8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    0x000076(%eax),%ah
		dec    %ah
		mov    %ah,0x000076(%ecx)
		jne    _01c257_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01c207_jump
		mov    0x00006c(%ecx),%dh
		cmp    $0x00000c,%dh
		je     _01c225_jump
		cmp    $0x00000d,%dh
		je     _01c225_jump
		cmp    $0x000017,%dh
		je     _01c225_jump
		cmp    $0x000014,%dh
		je     _01c225_jump

	_01c207_jump:
		mov    0x00006d(%ecx),%ah
		cmp    $0x000002,%ah
		jne    _01c22c_jump
		mov    0x00006c(%ecx),%dl
		cmp    %ah,%dl
		je     _01c225_jump
		cmp    $0x000003,%dl
		je     _01c225_jump
		cmp    $0x00001c,%dl
		je     _01c225_jump
		cmp    $0x000007,%dl
		jne    _01c22c_jump

	_01c225_jump:
		mov    $0x000013,%ebx
		jmp    _01c231_jump

	_01c22c_jump:
		mov    $0x000012,%ebx

	_01c231_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%al
		mov    %al,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01c257_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _01c263_jump
		cmpb   $0x000002,0x00006c(%ecx)
		je     _01c288_jump

	_01c263_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01c2a7_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000b,%al
		je     _01c288_jump
		cmp    $0x00001d,%al
		je     _01c288_jump
		cmp    $0x00001a,%al
		je     _01c288_jump
		cmp    $0x000019,%al
		je     _01c288_jump
		cmp    $0x00001b,%al
		je     _01c288_jump
		cmp    $0x000018,%al
		je     _01c288_jump
		cmp    $0x00001e,%al
		jne    _01c2a7_jump

	_01c288_jump:
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000042(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01c2a7_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01c2ed_jump
		mov    0x00006c(%ecx),%dl
		cmp    $0x00000c,%dl
		je     _01c2c4_jump
		cmp    $0x00000d,%dl
		je     _01c2c4_jump
		cmp    $0x000017,%dl
		je     _01c2c4_jump
		cmp    $0x000014,%dl
		jne    _01c2ed_jump

	_01c2c4_jump:
		mov    _0cdbcc_data,%edx
		cmp    0x000028(%ecx),%edx
		jle    _01c2d8_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _01c2df_jump

	_01c2d8_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_01c2df_jump:
		mov    $0x000011,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func

	_01c2ed_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01c2f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _01c314_jump
		mov    0x00006c(%eax),%dh
		cmp    $0x00000d,%dh
		je     _01c306_jump
		cmp    $0x00000c,%dh
		jne    _01c314_jump

	_01c306_jump:
		mov    $0x000014,%edx
		call   _01d364_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c314_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _01c320_jump
		cmpb   $0x00000b,0x00006c(%eax)
		je     _01c338_jump

	_01c320_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _01c32c_jump
		cmpb   $0x00001e,0x00006c(%eax)
		je     _01c338_jump

	_01c32c_jump:
		cmpb   $0x000001,0x00006d(%eax)
		jne    _01c3a6_jump
		cmpb   $0x000002,0x00006c(%eax)
		jne    _01c3a6_jump

	_01c338_jump:
		mov    _0cdbcc_data,%edx
		mov    0x000028(%eax),%ebx
		cmp    %ebx,%edx
		setg   %dl
		mov    %dl,%dh
		mov    0x000081(%eax),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		cmp    %dh,%dl
		setne  %dl
		and    $0x0000ff,%edx
		je     _01c3a6_jump
		mov    _0cdbcc_data,%ebx
		mov    0x000028(%eax),%ecx
		lea    0x000081(%eax),%edx
		cmp    %ecx,%ebx
		setg   %bl
		and    $0x0000ff,%ebx
		and    $0x000001,%bl
		mov    (%edx),%bh
		and    $0x0000f7,%bh
		mov    %bh,(%edx)
		shl    $0x000003,%bl
		mov    %bh,%cl
		or     %bl,%cl
		mov    %cl,(%edx)
		mov    $0x000018,%ebx
		movw   $0x000000,0x000040(%eax)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%eax)
		call   _01d374_func

	_01c3a6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c3ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000001,0x000070(%eax)
		je     _01c618_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%di
		mov    0x000068(%esi),%al
		add    %eax,%edi
		xor    %eax,%eax
		mov    _0cdbcc_data,%dx
		mov    _0cdc0c_data,%al
		add    %edx,%eax
		sub    %edi,%eax
		mov    _0ceff4_data,%bl
		mov    %eax,%edi
		test   %bl,%bl
		je     _01c40a_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0cdbd0_data,%cx
		mov    _0cdc0d_data,%bl
		add    %ecx,%ebx
		sub    %eax,%ebx
		jmp    _01c429_jump

	_01c40a_jump:
		xor    %eax,%eax
		mov    _0cdc0d_data,%al
		mov    _0cdbd0_data,%edx
		sar    %eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%al
		add    %ebp,%eax
		sub    %eax,%edx
		mov    %edx,%ebx

	_01c429_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _01c432_jump
		neg    %eax

	_01c432_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _01c43d_jump
		neg    %eax

	_01c43d_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    0x000069(%esi),%dl
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x00002c(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0cdbd0_data,%ecx
		mov    _0cdc0d_data,%al
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01c5dd_jump
		mov    _0cdbcc_data,%ecx
		mov    0x000028(%esi),%ebp
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%dl
		mov    _0cdc0c_data,%al
		add    %ebp,%edx
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01c493_jump
		testb  $0x000008,0x000081(%esi)
		je     _01c4c2_jump

	_01c493_jump:
		mov    _0cdbcc_data,%ecx
		mov    0x000028(%esi),%ebp
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000068(%esi),%al
		mov    _0cdc0c_data,%dl
		add    %ebp,%eax
		add    %ecx,%edx
		cmp    %eax,%edx
		jge    _01c5dd_jump
		testb  $0x000008,0x000081(%esi)
		je     _01c5dd_jump

	_01c4c2_jump:
		cmpw   $0x000000,(%esp)
		jle    _01c4f0_jump
		mov    $0x000005,%cl
		mov    %edi,%eax
		mov    -0x000002(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000005,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_01c4f0_jump:
		mov    0x000040(%esi),%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    $0x000020,%ebx
		cmp    $0x000000,%eax
		je     _01c50e_jump
		mov    $0x000001,%eax
		jg     _01c50e_jump
		neg    %eax

	_01c50e_jump:
		add    %edx,%eax
		cmp    %ebx,%eax
		jle    _01c516_jump
		mov    %ebx,%eax

	_01c516_jump:
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jge    _01c51e_jump
		mov    %ebx,%eax

	_01c51e_jump:
		mov    %ax,0x000042(%esi)
		test   %ax,%ax
		je     _01c561_jump
		mov    0x00003e(%esi),%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    $0x000020,%ebx
		cmp    $0x000000,%eax
		je     _01c545_jump
		mov    $0x000001,%eax
		jg     _01c545_jump
		neg    %eax

	_01c545_jump:
		add    %edx,%eax
		cmp    %ebx,%eax
		jle    _01c54d_jump
		mov    %ebx,%eax

	_01c54d_jump:
		mov    $0xffffffe0,%ebx
		cmp    %ebx,%eax
		jge    _01c558_jump
		mov    %ebx,%eax

	_01c558_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c647_jump

	_01c561_jump:
		testb  $0x000008,0x000081(%esi)
		je     _01c5a5_jump
		mov    $0xffffffe0,%edx
		mov    0x000040(%esi),%cx
		mov    $0x000020,%ebx
		cmp    %cx,%di
		setg   %al
		mov    %eax,%ecx
		mov    0x00003e(%esi),%eax
		and    $0x0000ff,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		cmp    %ebx,%eax
		jle    _01c594_jump
		mov    %ebx,%eax

	_01c594_jump:
		mov    %edx,%ebx
		cmp    %ebx,%eax
		jge    _01c59c_jump
		mov    %ebx,%eax

	_01c59c_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c647_jump

	_01c5a5_jump:
		mov    $0xffffffe0,%edx
		mov    0x000040(%esi),%cx
		mov    $0x000020,%ebx
		cmp    %cx,%di
		setl   %al
		mov    %eax,%ecx
		mov    0x00003e(%esi),%eax
		and    $0x0000ff,%ecx
		sar    $0x000010,%eax
		add    %ecx,%eax
		cmp    %ebx,%eax
		jle    _01c5cf_jump
		mov    %ebx,%eax

	_01c5cf_jump:
		mov    %edx,%ebx
		cmp    %ebx,%eax
		jge    _01c5d7_jump
		mov    %ebx,%eax

	_01c5d7_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c647_jump

	_01c5dd_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		mov    $0x000020,%ebx
		add    %eax,%eax
		cmp    %ebx,%eax
		jle    _01c5f0_jump
		mov    %ebx,%eax

	_01c5f0_jump:
		mov    $0xffffffe0,%ebx
		cmp    %ebx,%eax
		jge    _01c5fb_jump
		mov    %ebx,%eax

	_01c5fb_jump:
		mov    %ax,0x000040(%esi)
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		mov    $0x000020,%ebx
		add    %eax,%eax
		cmp    %ebx,%eax
		jle    _01c612_jump
		mov    %ebx,%eax

	_01c612_jump:
		mov    %ax,0x000042(%esi)
		jmp    _01c647_jump

	_01c618_jump:
		mov    _0cdbcc_data,%ecx
		mov    0x000028(%esi),%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%dl
		mov    _0cdc0c_data,%al
		add    %ebx,%edx
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01c63e_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _01c647_jump

	_01c63e_jump:
		jge    _01c647_jump
		orb    $0x000008,0x000081(%esi)

	_01c647_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _01c66e_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _01c66e_jump
		testb  $0x000008,0x000081(%esi)
		je     _01c665_jump
		mov    $0xffffffff,%eax
		jmp    _01c66a_jump

	_01c665_jump:
		mov    $0x000001,%eax

	_01c66a_jump:
		mov    %ax,0x000040(%esi)

	_01c66e_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01c67a_jump
		neg    %eax

	_01c67a_jump:
		movswl %ax,%edx
		mov    0x000040(%esi),%ebx
		lea    0x000000(,%edx,4),%edi
		sar    $0x000010,%ebx
		sub    %edx,%edi
		cmp    %ebx,%edi
		jge    _01c696_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _01c6cb_jump

	_01c696_jump:
		lea    0x000000(,%ebx,4),%eax
		lea    0x000000(,%edx,4),%ecx
		sub    %ebx,%eax
		cmp    %eax,%ecx
		jge    _01c6b0_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _01c6cb_jump

	_01c6b0_jump:
		shl    $0x000002,%ebx
		cmp    %ebx,%edi
		jge    _01c6bd_jump
		movb   $0x00000b,0x00006b(%esi)
		jmp    _01c6cb_jump

	_01c6bd_jump:
		cmp    %eax,%edx
		jge    _01c6c7_jump
		movb   $0x00000a,0x00006b(%esi)
		jmp    _01c6cb_jump

	_01c6c7_jump:
		movb   $0x000009,0x00006b(%esi)

	_01c6cb_jump:
		cmpw   $0x000000,0x000040(%esi)
		jle    _01c6ea_jump
		mov    0x000081(%esi),%dl
		test   $0x000008,%dl
		je     _01c6ea_jump
		mov    %dl,%bh
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%esi)
		jmp    _01c707_jump

	_01c6ea_jump:
		cmpw   $0x000000,0x000040(%esi)
		jge    _01c707_jump
		mov    0x000081(%esi),%dh
		test   $0x000008,%dh
		jne    _01c707_jump
		mov    %dh,%bl
		or     $0x000008,%bl
		mov    %bl,0x000081(%esi)

	_01c707_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c714_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000007,0x00006c(%eax)
		jne    _01c73e_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c73e_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01c750_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _01c750_jump
		movw   $0x000000,0x000052(%ecx)

	_01c750_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000001,%al
		jbe    _01c763_jump
		cmp    $0x000002,%al
		je     _01c80d_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c763_jump:
		test   %al,%al
		jne    _01c770_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _01c777_jump

	_01c770_jump:
		orb    $0x000008,0x000081(%ecx)

	_01c777_jump:
		mov    %ecx,%eax
		call   _053ce4_func
		mov    0x00006d(%ecx),%dh
		movw   $0x000001,0x000050(%ecx)
		test   %dh,%dh
		jne    _01c799_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func

	_01c799_jump:
		mov    0x00006d(%ecx),%bl
		cmp    $0x000001,%bl
		jne    _01c86f_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		test   %bl,_092224_data(%eax)
		je     _01c7fb_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _01c7de_jump
		mov    0x000081(%ecx),%dl
		mov    $0x000001,%ebx
		or     $0x000008,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    $0x000002,%edx
		jmp    _01c7f6_jump

	_01c7de_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		and    $0x0000f7,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax

	_01c7f6_jump:
		call   _05f030_func

	_01c7fb_jump:
		mov    %ecx,%eax
		call   _053ce4_func
		mov    %ecx,%eax
		call   _0252c0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c80d_jump:
		mov    0x00006d(%ecx),%al
		test   %al,%al
		jbe    _01c81c_jump
		cmp    $0x000001,%al
		je     _01c839_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c81c_jump:
		cmpb   $0x000004,0x00006c(%ecx)
		jne    _01c828_jump
		movw   $0x000000,0x000052(%ecx)

	_01c828_jump:
		cmpb   $0x000008,0x00006c(%ecx)
		jne    _01c86f_jump
		mov    %ecx,%eax
		call   _024e28_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c839_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		jne    _01c862_jump
		mov    %ecx,%eax
		call   _053ce4_func
		mov    %ecx,%eax
		call   _0252c0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c862_jump:
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		call   _0252c0_func

	_01c86f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c874_func:
		push   %edx
		mov    %eax,%edx
		call   _01c714_func
		cmpb   $0x000000,0x00006d(%edx)
		jne    _01c89c_jump
		cmpb   $0x000003,0x00006c(%edx)
		jne    _01c89c_jump
		cmpw   $0x000000,0x000052(%edx)
		jne    _01c89c_jump
		mov    %edx,%eax
		call   _01c8a0_func
		movw   $0x000001,0x000052(%edx)

	_01c89c_jump:
		pop    %edx
		ret    



_01c8a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0cc300_data,%esi
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _01c9f5_jump

	_01c8c2_jump:
		cmpw   $0x000042,0x000060(%esi)
		jne    _01c9e5_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _01c9e5_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		mov    0x000081(%esi),%dh
		movw   $0x000000,0x000042(%esi)
		test   $0x000008,%dh
		je     _01c910_jump
		mov    $0xfffffffd,%eax
		jmp    _01c915_jump

	_01c910_jump:
		mov    $0x000003,%eax

	_01c915_jump:
		mov    %ax,0x000040(%esi)
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %edi,%eax
		call   _01d710_func
		mov    0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    $0x000001,%ebx
		mov    0x000081(%esi),%al
		movb   $0x000004,0x00007e(%esi)
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		movb   $0x000000,0x00006d(%esi)
		mov    %al,%dl
		mov    %esi,%eax
		movb   $0x000009,0x00006c(%esi)
		call   _05f030_func
		mov    %esi,%eax
		call   _01db8c_func
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f304_func
		mov    0x000081(%esi),%bh
		movb   $0x000009,0x00006b(%esi)
		and    $0x0000bf,%bh
		mov    %bh,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c9e5_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _01c8c2_jump

	_01c9f5_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ca00_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _01ca33_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%ecx),%dh
		movb   $0x000000,0x00006b(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01ca33_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01ca54_jump
		mov    0x00006c(%ecx),%dh
		cmp    $0x000002,%dh
		je     _01ca50_jump
		cmp    $0x000003,%dh
		je     _01ca50_jump
		cmp    $0x000004,%dh
		je     _01ca50_jump
		cmp    $0x000005,%dh
		jne    _01ca54_jump

	_01ca50_jump:
		movb   $0x0000ff,0x00007c(%ecx)

	_01ca54_jump:
		mov    _0cdc30_data,%eax
		movw   $0x000000,0x000050(%ecx)
		cmpw   $0x000000,0x000040(%eax)
		jle    _01ca80_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05f030_func
		orb    $0x000008,0x000081(%ecx)
		jmp    _01ca95_jump

	_01ca80_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _05f030_func
		andb   $0x0000f7,0x000081(%ecx)

	_01ca95_jump:
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _05f0d0_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		movb   $0x000000,0x00006b(%ecx)
		call   _05f0d0_func
		pop    %ecx
		pop    %ebx
		ret    



_01cac0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000001,0x00006d(%eax)
		jne    _01cb2a_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _01cb2a_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _01cb2a_jump
		mov    0x000081(%ecx),%dh
		movb   $0x000000,0x00006b(%ecx)
		test   $0x000008,%dh
		jne    _01cb00_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		or     $0x000008,%bh
		mov    $0x000003,%edx
		mov    %bh,0x000081(%ecx)
		mov    $0x000001,%ebx
		jmp    _01cb14_jump

	_01cb00_jump:
		mov    %dh,%bl
		and    $0x0000f7,%bl
		mov    %bl,0x000081(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_01cb14_jump:
		call   _05f030_func
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _05f0d0_func

	_01cb2a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cb30_func:
		push   %edx
		xor    %edx,%edx
		mov    %edx,_0ceff8_data
		pop    %edx
		mov    %eax,%eax



_01cb3c_func:
		ret    



_01cb40_func:
		push   %edx
		cmpb   $0x000000,_0cef80_data
		je     _01cb52_jump
		xor    %dl,%dl
		mov    %dl,_0cefa7_data

	_01cb52_jump:
		cmpb   $0x000000,_0cefa7_data
		je     _01cb65_jump
		mov    $0x000002,%eax
		call   _02a164_func

	_01cb65_jump:
		pop    %edx
		mov    %eax,%eax



_01cb68_func:
		ret    



_01cb6c_func:
		cmpb   $0x000000,_0cef72_data
		je     _01cb68_func
		mov    $0x000008,%eax
		jmp    _0702cc_jump



_01cb80_func:
		push   %edx
		cmpb   $0x000000,_0cefa7_data
		je     _01cb99_jump
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _02a00c_func

	_01cb99_jump:
		xor    %edx,%edx
		mov    %edx,_0cce0c_data
		call   _01cb30_func
		pop    %edx
		ret    



_01cbd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		mov    (%ebx),%ecx
		shl    $0x000003,%edx
		add    %edx,%ecx
		testb  $0x000010,0x000007(%ecx)
		je     _01cbf8_jump
		cmpb   $0x000000,0x00006b(%eax)
		jmp    _01cc1f_jump

	_01cbf8_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x00000a(%ebx,%edx,4),%dx
		and    $0x00ffff,%edx
		mov    0x00006b(%eax),%al
		and    $0x0000ff,%eax
		dec    %edx
		cmp    %edx,%eax

	_01cc1f_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _01cc42_jump
		mov    0x000005(%ecx),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _01cc42_jump
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01cc42_jump:
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ccb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0cc302_data,%ebp
		mov    _0cc300_data,%esi
		sar    $0x000010,%ebp
		xor    %edi,%edi
		test   %ebp,%ebp
		jle    _01cd33_jump

	_01ccd6_jump:
		cmpw   $0x00003a,0x000060(%esi)
		je     _01cd28_jump
		mov    %edi,%eax
		mov    %edi,%edx
		sar    $0x000004,%eax
		and    $0x00000f,%edx
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		shl    $0x000002,%eax
		and    $0x0000ff,%edx
		add    $_0cc4a8_data,%eax
		call   _05bd64_func
		mov    0x000004(%esp),%eax
		mov    %eax,0x000024(%esi)
		mov    (%esp),%al
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%esi)
		shl    $0x000002,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)

	_01cd28_jump:
		inc    %edi
		add    $0x000084,%esi
		cmp    %ebp,%edi
		jl     _01ccd6_jump

	_01cd33_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01cd40_switch:
		.long   _01cf7b_case
		.long   _01cf8c_case
		.long   _01cf95_case
		.long   _01cf81_case

_01cd50_switch:
		.long   _01cfe6_case
		.long   _01cff7_case
		.long   _01d000_case
		.long   _01cfec_case




_01cd60_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %bl,0x000024(%esp)
		mov    %ecx,0x000018(%esp)
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		shl    $0x000002,%eax
		mov    0x00000c(%edx),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%edi),%al
		mov    (%edx),%ebp
		shl    $0x000003,%eax
		add    %eax,%ebp
		xor    %edx,%edx
		mov    0x000002(%ebp),%dl
		mov    0x000005(%ebp),%al
		mov    %dx,0x000008(%esp)
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x00006b(%edi),%dl
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _01ce44_jump
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%edi),%ebx
		mov    0x00000a(%ebx,%eax,4),%bl
		testb  $0x000010,0x000007(%ebp)
		je     _01cdd5_jump
		mov    $0xffffffff,%eax
		jmp    _01cdda_jump

	_01cdd5_jump:
		mov    $0x000001,%eax

	_01cdda_jump:
		xor    %ecx,%ecx
		movswl %dx,%edx
		mov    %bl,%cl
		add    %eax,%edx
		dec    %ecx
		movswl %dx,%eax
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jl     _01cdf8_jump
		cmp    %ecx,%eax
		jg     _01cdf8_jump
		mov    $0x000001,%eax
		jmp    _01cdfa_jump

	_01cdf8_jump:
		xor    %eax,%eax

	_01cdfa_jump:
		test   %eax,%eax
		jne    _01ce44_jump
		mov    0x000003(%ebp),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000004(%ebp),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000002(%edx),%al
		mov    %al,%bl
		mov    %ax,0x000008(%esp)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%edi),%ebx
		mov    0x000007(%edx),%cl
		mov    0x00000a(%ebx,%eax,4),%al
		test   $0x000010,%cl
		je     _01ce42_jump
		xor    %edx,%edx
		mov    %al,%dl
		dec    %edx
		jmp    _01ce44_jump

	_01ce42_jump:
		xor    %edx,%edx

	_01ce44_jump:
		xor    %eax,%eax
		mov    0x00006b(%edi),%al
		mov    %ax,0x000010(%esp)
		xor    %eax,%eax
		mov    0x00006a(%edi),%al
		lea    0x000014(%esp),%ecx
		mov    %ax,0x000020(%esp)
		mov    0x000008(%esp),%al
		lea    0x00000c(%esp),%ebx
		mov    %al,0x00006a(%edi)
		lea    0x000004(%esp),%eax
		mov    %dl,0x00006b(%edi)
		push   %eax
		lea    0x000020(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x00002c(%esp),%dl
		mov    %edi,%eax
		call   _01d710_func
		mov    0x000020(%esp),%al
		mov    %al,0x00006a(%edi)
		mov    0x000010(%esp),%al
		mov    %al,0x00006b(%edi)
		mov    0x000018(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000028(%esi),%cx
		add    %edx,%ebx
		sub    %ecx,%ebx

	_01ce9f_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _01ceaa_jump
		neg    %eax

	_01ceaa_jump:
		cmp    $0x000010,%eax
		jl     _01cee1_jump
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _01cebf_jump
		mov    $0x000001,%eax
		jg     _01cebf_jump
		neg    %eax

	_01cebf_jump:
		shl    $0x000004,%eax
		mov    0x000028(%esi),%ecx
		add    %eax,%ecx
		mov    %edx,%eax
		mov    %ecx,0x000028(%esi)
		cmp    $0x000000,%eax
		je     _01ceda_jump
		mov    $0x000001,%eax
		jg     _01ceda_jump
		neg    %eax

	_01ceda_jump:
		shl    $0x000004,%eax
		sub    %eax,%ebx
		jmp    _01ce9f_jump

	_01cee1_jump:
		mov    0x000014(%esp),%ecx
		mov    0x000038(%esp),%eax
		mov    0x00002c(%esi),%dx
		add    %eax,%ecx
		sub    %edx,%ecx

	_01cef1_jump:
		movswl %cx,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _01cefc_jump
		neg    %eax

	_01cefc_jump:
		cmp    $0x000010,%eax
		jl     _01cf33_jump
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _01cf11_jump
		mov    $0x000001,%eax
		jg     _01cf11_jump
		neg    %eax

	_01cf11_jump:
		shl    $0x000004,%eax
		mov    0x00002c(%esi),%ebp
		add    %eax,%ebp
		mov    %edx,%eax
		mov    %ebp,0x00002c(%esi)
		cmp    $0x000000,%eax
		je     _01cf2c_jump
		mov    $0x000001,%eax
		jg     _01cf2c_jump
		neg    %eax

	_01cf2c_jump:
		shl    $0x000004,%eax
		sub    %eax,%ecx
		jmp    _01cef1_jump

	_01cf33_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		mov    _092265_data(,%eax,4),%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		mov    _092265_data(,%eax,4),%al
		shl    $0x000003,%dl
		shl    $0x000003,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %eax,%eax
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp
		mov    %dl,%al
		add    %ebp,%eax
		cmp    $0x000003,%eax
		ja     _01cfa2_jump
		jmp    *%cs:_01cd40_switch(,%eax,4)

	_01cf7b_case:
		add    0x000040(%edi),%bx
		jmp    _01cfa2_jump

	_01cf81_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%ebx
		jmp    _01cf9b_jump

	_01cf8c_case:
		add    0x000040(%edi),%bx
		shl    $0x000004,%ebx
		jmp    _01cfa2_jump

	_01cf95_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax

	_01cf9b_jump:
		call   _053c60_func
		add    %eax,%ebx

	_01cfa2_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		mov    _092265_data(,%eax,4),%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		mov    _092265_data(,%eax,4),%al
		shl    $0x000002,%dl
		shl    $0x000002,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %eax,%eax
		and    $0x0000ff,%edx
		add    %edx,%eax
		cmp    $0x000003,%eax
		ja     _01d00d_jump
		jmp    *%cs:_01cd50_switch(,%eax,4)

	_01cfe6_case:
		add    0x000042(%edi),%cx
		jmp    _01d00d_jump

	_01cfec_case:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%ecx
		jmp    _01d006_jump

	_01cff7_case:
		add    0x000042(%edi),%cx
		shl    $0x000004,%ecx
		jmp    _01d00d_jump

	_01d000_case:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax

	_01d006_jump:
		call   _053c60_func
		add    %eax,%ecx

	_01d00d_jump:
		mov    %bx,0x000040(%esi)
		mov    %cx,0x000042(%esi)
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01d020_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cc300_data,%eax
		mov    _0cc304_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _01d049_jump

	_01d038_jump:
		cmp    0x000060(%eax),%cx
		je     _01d049_jump
		inc    %edx
		add    $0x000084,%eax
		cmp    %bx,%dx
		jl     _01d038_jump

	_01d049_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01d084_func:
		push   %esi
		push   %edi
		mov    %eax,%esi
		add    (%ecx),%dx
		mov    0x00002c(%eax),%ax
		and    $0x00000f,%dh
		mov    0x00003e(%esi),%di
		mov    %eax,%esi
		movswl %dx,%eax
		sar    $0x000003,%eax
		cwtl   
		sub    %edi,%esi
		call   _05be40_func
		movswl %ax,%edi
		movswl %bx,%eax
		imul   %edi,%eax
		sar    $0x000009,%eax
		mov    %dx,(%ecx)
		sub    %esi,%eax
		pop    %edi
		pop    %esi
		ret    



_01d0bc_func:
		mov    %ax,_0ced90_data
		mov    %dx,_0ced8e_data
		ret    



_01d0cc_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cmpb   $0x000000,_0cefb7_data
		jne    _01d0de_jump
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_01d0de_jump:
		movswl %ax,%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		add    $0x000100,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d10c_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		movswl %ax,%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		add    $0x000100,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%ecx
		imul   %ecx,%eax
		sar    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d134_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0ced8e_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d170_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0ced8c_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d1ac_func:
		mov    %al,_0cefb7_data
		ret    



_01d1b4_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0ced8e_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		shl    $0x000008,%edx
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d1ec_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0ced8c_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		shl    $0x000008,%edx
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d224_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%ecx
		shl    $0x000002,%eax
		lea    (%ecx,%eax,1),%esi
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		lea    0x000000(,%eax,8),%ecx
		mov    (%esi),%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    0x000004(%ebx),%ebx
		mov    0x000002(%eax),%cl
		mov    0x000005(%eax),%dh
		lea    0x000000(,%ecx,4),%eax
		and    $0x00000f,%dh
		sub    %ecx,%eax
		movzbw %dh,%si
		imul   0x00000a(%ebx,%eax,4),%si
		xor    %ebx,%ebx
		mov    %dl,%bl
		imul   %esi,%ebx
		xor    %eax,%eax
		mov    %dh,%al
		mov    _0cef4d_data(%eax),%al
		xor    %ah,%ah
		sub    %eax,%ebx
		mov    %ebx,%eax
		inc    %eax
		test   %ax,%ax
		jle    _01d28a_jump
		cwtl   
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_01d28a_jump:
		mov    $0x000001,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01d294_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %edx,%esi
		mov    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x000004(%ebx,%edx,4),%edx
		xor    %ebx,%ebx
		mov    0x00006b(%eax),%bl
		shl    $0x000002,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000002(%edx),%bl
		mov    %bx,(%ecx)
		xor    %ebx,%ebx
		mov    0x000018(%esp),%ebp
		mov    0x000003(%edx),%bl
		mov    %bx,0x000000(%ebp)
		testb  $0x000008,0x000081(%eax)
		jne    _01d2e7_jump
		xor    %ebx,%ebx
		mov    0x000028(%eax),%cx
		mov    (%edx),%bl
		add    %ebx,%ecx
		jmp    _01d317_jump

	_01d2e7_jump:
		xor    %ebx,%ebx
		mov    0x000068(%eax),%bl
		add    %ebx,%ebx
		mov    %ebx,(%esp)
		mov    0x000028(%eax),%bx
		add    (%esp),%ebx
		mov    %ebx,(%esp)
		xor    %ebx,%ebx
		mov    (%edx),%bl
		mov    %ebx,0x000004(%esp)
		mov    (%esp),%ebx
		sub    0x000004(%esp),%ebx
		mov    %ebx,0x000004(%esp)
		mov    (%ecx),%bx
		mov    0x000004(%esp),%ecx
		sub    %ebx,%ecx

	_01d317_jump:
		mov    %cx,(%esi)
		mov    0x000001(%edx),%dl
		mov    0x00002c(%eax),%ax
		xor    %dh,%dh
		add    %edx,%eax
		mov    %ax,(%edi)
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01d364_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006c(%eax)
		ret    



_01d36c_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006d(%eax)
		ret    



_01d374_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006d(%eax)
		mov    %bl,0x00006c(%eax)
		ret    



_01d380_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x00008a,%ax
		jb     _01d3fc_jump
		jbe    _01d49a_jump
		cmp    $0x0000ae,%ax
		jb     _01d3d3_jump
		jbe    _01d493_jump
		cmp    $0x0000bd,%ax
		jb     _01d3c4_jump
		jbe    _01d473_jump
		cmp    $0x0000e1,%ax
		jb     _01d4a8_jump
		cmp    $0x0000e2,%ax
		jbe    _01d493_jump
		jmp    _01d4a8_jump

	_01d3c4_jump:
		cmp    $0x0000b8,%ax
		je     _01d493_jump
		jmp    _01d4a8_jump

	_01d3d3_jump:
		cmp    $0x00008c,%ax
		jb     _01d4a8_jump
		jbe    _01d4a1_jump
		cmp    $0x00009a,%ax
		jb     _01d4a8_jump
		cmp    $0x00009b,%ax
		jbe    _01d49a_jump
		jmp    _01d4a8_jump

	_01d3fc_jump:
		cmp    $0x000031,%ax
		jb     _01d429_jump
		jbe    _01d481_jump
		cmp    $0x00006a,%ax
		jb     _01d4a8_jump
		jbe    _01d47a_jump
		cmp    $0x00007b,%ax
		je     _01d488_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d429_jump:
		cmp    $0x000016,%ax
		jb     _01d4a8_jump
		jbe    _01d442_jump
		cmp    $0x00002d,%ax
		je     _01d461_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d442_jump:
		mov    _0cede4_data,%ax
		cmp    $0x000001,%ax
		jb     _01d4a8_jump
		jbe    _01d4a8_jump
		cmp    $0x000002,%ax
		jne    _01d4a8_jump
		mov    $0x000040,%eax
		pop    %edx
		ret    

	_01d461_jump:
		mov    _0cede4_data,%ax
		cmp    $0x000001,%ax
		jb     _01d473_jump
		jbe    _01d473_jump
		cmp    $0x000002,%ax

	_01d473_jump:
		mov    $0x000012,%eax
		pop    %edx
		ret    

	_01d47a_jump:
		mov    $0x000046,%eax
		pop    %edx
		ret    

	_01d481_jump:
		mov    $0x000080,%eax
		pop    %edx
		ret    

	_01d488_jump:
		mov    0x000075(%edx),%al
		cmp    $0x000005,%al
		jb     _01d4a8_jump
		cmp    $0x000007,%al
		ja     _01d4a8_jump

	_01d493_jump:
		mov    $0x000050,%eax
		pop    %edx
		ret    

	_01d49a_jump:
		mov    $0x000068,%eax
		pop    %edx
		ret    

	_01d4a1_jump:
		mov    $0x000024,%eax
		pop    %edx
		ret    

	_01d4a8_jump:
		mov    $0x000028,%eax
		pop    %edx
		ret    



_01d4b0_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000060(%eax),%ax
		cmp    $0x00008c,%ax
		jb     _01d527_jump
		jbe    _01d5f9_jump
		cmp    $0x0000b8,%ax
		jb     _01d504_jump
		jbe    _01d603_jump
		cmp    $0x0000c3,%ax
		jb     _01d4f5_jump
		jbe    _01d60d_jump
		cmp    $0x0000e1,%ax
		jb     _01d617_jump
		cmp    $0x0000e2,%ax
		jbe    _01d603_jump
		jmp    _01d617_jump

	_01d4f5_jump:
		cmp    $0x0000bd,%ax
		je     _01d5b3_jump
		jmp    _01d617_jump

	_01d504_jump:
		cmp    $0x00009a,%ax
		jb     _01d617_jump
		cmp    $0x00009b,%ax
		jbe    _01d5ef_jump
		cmp    $0x0000ae,%ax
		je     _01d603_jump
		jmp    _01d617_jump

	_01d527_jump:
		cmp    $0x000031,%ax
		jb     _01d561_jump
		jbe    _01d5d1_jump
		cmp    $0x00007b,%ax
		jb     _01d553_jump
		jbe    _01d5bd_jump
		cmp    $0x00008a,%ax
		je     _01d5ef_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d553_jump:
		cmp    $0x00006a,%ax
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d561_jump:
		cmp    $0x000016,%ax
		jb     _01d617_jump
		jbe    _01d57d_jump
		cmp    $0x00002d,%ax
		je     _01d5a1_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d57d_jump:
		mov    _0cede4_data,%ax
		cmp    $0x000001,%ax
		jb     _01d617_jump
		jbe    _01d617_jump
		cmp    $0x000002,%ax
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d5a1_jump:
		mov    _0cede4_data,%ax
		cmp    $0x000001,%ax
		jb     _01d5b3_jump
		jbe    _01d5b3_jump
		cmp    $0x000002,%ax

	_01d5b3_jump:
		mov    $0x000012,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d5bd_jump:
		mov    0x000075(%ebx),%al
		cmp    $0x000005,%al
		jb     _01d61c_jump
		jbe    _01d5e5_jump
		cmp    $0x000007,%al
		ja     _01d61c_jump
		cmpw   $0x000000,0x000042(%ebx)
		jle    _01d5db_jump

	_01d5d1_jump:
		mov    $0x000040,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d5db_jump:
		mov    $0x00004e,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d5e5_jump:
		mov    $0x000048,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d5ef_jump:
		mov    $0x000068,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d5f9_jump:
		mov    $0x000020,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d603_jump:
		mov    $0x000060,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d60d_jump:
		mov    $0x00005a,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d617_jump:
		mov    $0x000028,%edx

	_01d61c_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_01d624_func:
		push   %ecx
		push   %esi
		movswl %bx,%ebx
		movswl %dx,%edx
		mov    0x00002c(%eax),%ecx
		mov    0x000028(%eax),%esi
		add    %ecx,%ebx
		add    %esi,%edx
		sar    $0x000004,%ebx
		sar    $0x000004,%edx
		movswl %bx,%ebx
		movswl %dx,%eax
		mov    %ebx,%edx
		call   _01e0e4_func
		and    $0x0000ff,%eax
		mov    _092224_data(%eax),%al
		shl    $0x000002,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		pop    %esi
		pop    %ecx
		ret    



_01d660_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %ebx,%edx
		mov    0x000008(%esi),%bx
		and    $0x00003f,%bh
		xor    %ecx,%ecx
		and    $0x00ffff,%ebx
		mov    0x00006b(%eax),%cl
		imul   %ecx,%ebx
		lea    0x000000(,%ebx,4),%ecx
		mov    (%esi),%ebx
		mov    0x000008(%edx),%si
		and    $0x003fff,%esi
		movzwl %si,%ebp
		movswl %di,%esi
		imul   %ebp,%esi
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    0x000075(%eax),%cl
		mov    (%edx),%edx
		shl    $0x000002,%ecx
		shl    $0x000002,%esi
		add    %ecx,%ebx
		add    %esi,%edx
		movzbl 0x000003(%ebx),%esi
		add    %edx,%ecx
		lea    0x000000(,%esi,4),%edx
		sub    %esi,%edx
		mov    (%eax),%esi
		movzbw 0x000005(%esi,%edx,4),%si
		testb  $0x000008,0x000081(%eax)
		je     _01d6ea_jump
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		add    %edx,%edx
		sub    %esi,%edx
		mov    %edx,%edi
		movzbw 0x000001(%ecx),%si
		sub    %esi,%edi
		mov    %edi,%esi
		movzbw 0x000001(%ebx),%di
		sub    %edi,%edx
		jmp    _01d6f4_jump

	_01d6ea_jump:
		xor    %edx,%edx
		movzbw 0x000001(%ecx),%si
		mov    0x000001(%ebx),%dl

	_01d6f4_jump:
		mov    0x000002(%ebx),%bl
		mov    0x000002(%ecx),%cl
		xor    %bh,%bh
		xor    %ch,%ch
		sub    %esi,%edx
		sub    %ecx,%ebx
		mov    %dx,0x00004e(%eax)
		mov    %bx,0x00004c(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_01d710_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %dx,0x000004(%esp)
		mov    %ebx,%esi
		mov    %ecx,%edi
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		shl    $0x000002,%edx
		mov    0x000004(%eax),%ebx
		add    %ebx,%edx
		mov    0x000008(%edx),%bx
		xor    %ecx,%ecx
		and    $0x00003f,%bh
		mov    %bx,%cx
		xor    %ebx,%ebx
		mov    0x00006b(%eax),%bl
		imul   %ecx,%ebx
		mov    (%edx),%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %ecx,%ecx
		mov    0x000003(%ebx),%dl
		mov    %dl,%cl
		mov    %dl,0x000008(%esp)
		lea    0x000000(,%ecx,4),%edx
		sub    %ecx,%edx
		shl    $0x000002,%edx
		mov    (%eax),%ecx
		add    %ecx,%edx
		cmpb   $0x000000,0x000008(%esp)
		je     _01d84b_jump
		cmpb   $0x000000,0x000004(%edx)
		je     _01d84b_jump
		xor    %ecx,%ecx
		mov    0x000007(%edx),%cl
		mov    0x000020(%esp),%ebp
		mov    %cx,0x000000(%ebp)
		xor    %ecx,%ecx
		mov    0x000024(%esp),%ebp
		mov    0x000008(%edx),%cl
		mov    %cx,0x000000(%ebp)
		mov    0x000081(%eax),%cl
		shl    $0x000004,%cl
		shr    $0x000007,%cl
		movzbl %cl,%ebp
		mov    0x00000b(%edx),%cl
		shl    $0x000005,%cl
		shr    $0x000007,%cl
		mov    %cl,0x00000c(%esp)
		xor    %ecx,%ecx
		mov    0x00000c(%esp),%cl
		xor    %ebp,%ecx
		je     _01d802_jump
		xor    %ecx,%ecx
		mov    0x000001(%ebx),%cl
		mov    %ecx,(%esp)
		mov    0x000009(%edx),%cl
		and    $0x00000f,%cl
		mov    (%esp),%ebp
		and    $0x0000ff,%ecx
		add    %ecx,%ebp
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		add    %ecx,%ecx
		sub    %ebp,%ecx
		mov    %ecx,(%esp)
		xor    %ecx,%ecx
		mov    (%esp),%ebp
		mov    0x000005(%edx),%cl
		sub    %ecx,%ebp
		mov    %ebp,%ecx
		mov    0x000028(%eax),%ebp
		jmp    _01d816_jump

	_01d802_jump:
		mov    0x000001(%ebx),%cl
		mov    0x000028(%eax),%ebp
		add    %ecx,%ebp
		mov    0x000009(%edx),%cl
		and    $0x00000f,%cl
		and    $0x0000ff,%ecx

	_01d816_jump:
		add    %ecx,%ebp
		mov    %ebp,(%esp)
		mov    (%esp),%ecx
		mov    %cx,(%esi)
		mov    0x000002(%ebx),%bl
		mov    0x000009(%edx),%dl
		and    $0x0000ff,%ebx
		shr    $0x000004,%dl
		and    $0x0000ff,%edx
		add    %ebx,%edx
		add    0x00002c(%eax),%edx
		mov    $0x000001,%al
		mov    %dx,(%edi)
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_01d84b_jump:
		xor    %al,%al
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01d858_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    0x000018(%esp),%ebp
		mov    %eax,%esi
		mov    %edx,%edi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		shl    $0x000002,%eax
		mov    %eax,(%esp)
		mov    (%esp),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%edx),%eax
		add    (%esp),%eax
		testb  $0x000040,0x000007(%eax)
		je     _01d8b7_jump
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000040,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x00000e,0x000000(%ebp)
		jmp    _01d973_jump

	_01d8b7_jump:
		mov    0x00006d(%esi),%dh
		cmp    $0x000005,%dh
		jne    _01d8e7_jump
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x00002e,0x000000(%ebp)
		jmp    _01d973_jump

	_01d8e7_jump:
		cmp    $0x000007,%dh
		jne    _01d950_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000020,%ax
		jle    _01d8fa_jump
		sub    $0x000020,%eax

	_01d8fa_jump:
		cmp    $0x000009,%ax
		jle    _01d92b_jump
		cmp    $0x000017,%ax
		jge    _01d92b_jump
		mov    0x000028(%esi),%ax
		add    $0x000040,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000036,%eax
		mov    %ax,(%ebx)
		movw   $0x000024,(%ecx)
		movw   $0x000014,0x000000(%ebp)
		jmp    _01d973_jump

	_01d92b_jump:
		mov    0x000028(%esi),%ax
		add    $0x000046,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%ebx)
		movw   $0x000014,(%ecx)
		movw   $0x000028,0x000000(%ebp)
		jmp    _01d973_jump

	_01d950_jump:
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000018,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x000036,0x000000(%ebp)

	_01d973_jump:
		cmpw   $0x000000,0x00005a(%esi)
		je     _01da13_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    %eax,0x000004(%esp)
		mov    0x000028(%esi),%ax
		add    0x000004(%esp),%eax
		mov    %ax,0x000004(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		call   _01d0bc_func
		mov    0x000058(%esi),%eax
		movswl (%edi),%edx
		sar    $0x000010,%eax
		call   _01d134_func
		mov    %ax,(%edi)
		mov    0x000058(%esi),%eax
		movswl (%ebx),%edx
		sar    $0x000010,%eax
		call   _01d170_func
		mov    %ax,(%ebx)
		mov    0x000058(%esi),%eax
		movswl (%ecx),%edx
		sar    $0x000010,%eax
		call   _01d10c_func
		mov    %ax,(%ecx)
		mov    0x000058(%esi),%eax
		movswl 0x000000(%ebp),%edx
		sar    $0x000010,%eax
		call   _01d10c_func
		mov    %ax,0x000000(%ebp)
		xor    %eax,%eax
		mov    0x000038(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000036(%esi),%cx
		mov    0x000068(%esi),%al
		add    %ecx,%eax
		cwtl   
		call   _01d0bc_func

	_01da13_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01da1c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,(%esp)
		movw   $0x000006,0x000008(%esp)
		lea    0x000004(%esp),%edx
		push   %edx
		mov    %edi,%edx
		call   _01d294_func
		cmpb   $0x000002,0x00006d(%esi)
		jne    _01da57_jump
		mov    0x00006c(%esi),%dl
		test   %dl,%dl
		je     _01da50_jump
		cmp    $0x000004,%dl
		jne    _01da57_jump

	_01da50_jump:
		movw   $0x000003,0x000008(%esp)

	_01da57_jump:
		mov    0x00001c(%esp),%edx
		mov    (%esp),%ebx
		mov    %ebp,%ecx
		push   %edx
		mov    %esi,%eax
		mov    0x00000a(%esp),%edx
		push   %ebx
		sar    $0x000010,%edx
		mov    %edi,%ebx
		call   _01d710_func
		mov    (%edi),%ax
		mov    0x000020(%esp),%edx
		sub    $0x000007,%eax
		mov    %ax,(%edx)
		mov    0x00001c(%esp),%edx
		mov    0x000000(%ebp),%ax
		mov    (%edx),%cx
		mov    0x000024(%esp),%edx
		add    %ecx,%eax
		mov    %ax,(%edx)
		mov    (%esp),%eax
		mov    (%eax),%ax
		mov    0x000028(%esp),%edx
		add    $0x00000e,%eax
		mov    %ax,(%edx)
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    0x00002c(%esp),%eax
		sar    %edx
		mov    %dx,(%eax)
		mov    (%edi),%ax
		add    $0x000004,%eax
		mov    (%esp),%edx
		mov    %ax,(%edi)
		subw   $0x000008,(%edx)
		mov    0x000000(%ebp),%cx
		add    $0x000004,%ecx
		mov    0x00001c(%esp),%edx
		mov    %cx,0x000000(%ebp)
		subw   $0x000008,(%edx)
		cmpb   $0x000000,0x00006d(%esi)
		jne    _01dae6_jump
		cmpb   $0x000010,0x00006c(%esi)
		je     _01daf2_jump

	_01dae6_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _01db08_jump
		cmpb   $0x000013,0x00006c(%esi)
		jne    _01db08_jump

	_01daf2_jump:
		mov    0x00001c(%esp),%ecx
		mov    (%esp),%eax
		push   %ecx
		mov    %edi,%ebx
		xor    %edx,%edx
		push   %eax
		mov    %ebp,%ecx
		mov    %esi,%eax
		call   _01d710_func

	_01db08_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000014



_01db14_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0cdbcc_data,%ebx
		mov    _0cdc0c_data,%dl
		mov    0x000028(%eax),%ecx
		add    %ebx,%edx
		xor    %ebx,%ebx
		sub    %ecx,%edx
		mov    0x000068(%eax),%bl
		sub    %ebx,%edx
		test   %edx,%edx
		jle    _01db42_jump
		orb    $0x000008,0x000081(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01db42_jump:
		andb   $0x0000f7,0x000081(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01db50_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x000009,%ax
		jb     _01db6f_jump
		jbe    _01db75_jump
		cmp    $0x000090,%ax
		jb     _01db80_jump
		jbe    _01db75_jump
		cmp    $0x0000a5,%ax
		je     _01db75_jump
		jmp    _01db80_jump

	_01db6f_jump:
		cmp    $0x000003,%ax
		jne    _01db80_jump

	_01db75_jump:
		cmpb   $0x000001,0x00007b(%edx)
		sete   %al
		xor    %ah,%ah
		pop    %edx
		ret    

	_01db80_jump:
		cmpb   $0x000001,0x00007b(%edx)
		setae  %al
		xor    %ah,%ah
		pop    %edx
		ret    



_01db8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cedfa_data,%bx
		mov    0x00002c(%eax),%dx
		sub    %ebx,%edx
		mov    %dx,0x000038(%eax)
		mov    _0cee10_data,%cx
		mov    0x000028(%eax),%dx
		sub    %ecx,%edx
		add    $0x000008,%edx
		mov    %dx,0x000036(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01dbb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		movb   $0x0000ff,(%esp)
		mov    0x000060(%ecx),%ax
		cmp    $0x000046,%ax
		jb     _01dc34_jump
		jbe    _01de8b_jump
		cmp    $0x00009c,%ax
		jb     _01dc0a_jump
		jbe    _01dfe2_jump
		cmp    $0x0000c3,%ax
		jb     _01dbfb_jump
		jbe    _01e019_jump
		cmp    $0x0000d9,%ax
		je     _01df4c_jump
		jmp    _01e091_jump

	_01dbfb_jump:
		cmp    $0x0000a5,%ax
		je     _01dd66_jump
		jmp    _01e091_jump

	_01dc0a_jump:
		cmp    $0x00007b,%ax
		jb     _01dc25_jump
		jbe    _01dc93_jump
		cmp    $0x000098,%ax
		je     _01df8f_jump
		jmp    _01e091_jump

	_01dc25_jump:
		cmp    $0x000064,%ax
		je     _01df6f_jump
		jmp    _01e091_jump

	_01dc34_jump:
		cmp    $0x000023,%ax
		jb     _01dc6e_jump
		jbe    _01de4a_jump
		cmp    $0x00003c,%ax
		jb     _01dc5f_jump
		cmp    $0x00003d,%ax
		jbe    _01dee0_jump
		cmp    $0x000041,%ax
		je     _01df25_jump
		jmp    _01e091_jump

	_01dc5f_jump:
		cmp    $0x00002b,%ax
		je     _01de4a_jump
		jmp    _01e091_jump

	_01dc6e_jump:
		cmp    $0x000009,%ax
		jb     _01dc89_jump
		jbe    _01dd66_jump
		cmp    $0x000014,%ax
		je     _01ddf9_jump
		jmp    _01e091_jump

	_01dc89_jump:
		test   %ax,%ax
		je     _01dcef_jump
		jmp    _01e091_jump

	_01dc93_jump:
		mov    0x000075(%ecx),%dh
		cmp    $0x000001,%dh
		je     _01dcae_jump
		cmp    $0x000002,%dh
		je     _01dcae_jump
		cmp    $0x000004,%dh
		je     _01dcae_jump
		cmp    $0x000007,%dh
		jne    _01e091_jump

	_01dcae_jump:
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01dccd_jump
		mov    0x000081(%ecx),%al
		mov    $0x000003,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e091_jump

	_01dccd_jump:
		cmp    $0x000001,%ah
		jne    _01e091_jump
		mov    0x000081(%ecx),%bl
		mov    $0x000002,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e091_jump

	_01dcef_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01dd25_jump
		mov    0x00006c(%ecx),%dl
		cmp    $0x000003,%dl
		je     _01e091_jump
		cmp    $0x000001,%dl
		je     _01e091_jump
		cmp    $0x000005,%dl
		je     _01e091_jump
		cmp    $0x000004,%dl
		je     _01e091_jump
		cmp    $0x000006,%dl
		je     _01e091_jump

	_01dd25_jump:
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01dd44_jump
		mov    0x000081(%ecx),%al
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e091_jump

	_01dd44_jump:
		cmp    $0x000001,%ah
		jne    _01e091_jump
		mov    0x000081(%ecx),%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e091_jump

	_01dd66_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01dd81_jump
		mov    0x00006c(%ecx),%bl
		cmp    $0x000003,%bl
		je     _01e091_jump
		cmp    $0x000001,%bl
		je     _01e091_jump

	_01dd81_jump:
		mov    0x000081(%ecx),%al
		test   $0x000010,%al
		je     _01ddc2_jump
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01dda4_jump
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e091_jump

	_01dda4_jump:
		cmp    $0x000001,%ah
		jne    _01e091_jump
		mov    %al,%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e091_jump

	_01ddc2_jump:
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01dddb_jump
		mov    $0x000006,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e091_jump

	_01dddb_jump:
		cmp    $0x000001,%ah
		jne    _01e091_jump
		mov    %al,%bl
		mov    $0x000005,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e091_jump

	_01ddf9_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01de09_jump
		cmpb   $0x000003,0x00006c(%ecx)
		je     _01e091_jump

	_01de09_jump:
		mov    0x000070(%ecx),%dh
		test   %dh,%dh
		jne    _01de29_jump
		mov    0x000081(%ecx),%dl
		mov    $0x000001,%ah
		or     $0x000008,%dl
		mov    %ah,(%esp)
		mov    %dl,0x000081(%ecx)
		jmp    _01e091_jump

	_01de29_jump:
		cmp    $0x000001,%dh
		jne    _01e091_jump
		mov    0x000081(%ecx),%al
		xor    %bh,%bh
		and    $0x0000f7,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e091_jump

	_01de4a_jump:
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01de69_jump
		mov    0x000081(%ecx),%al
		mov    $0x000005,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e091_jump

	_01de69_jump:
		cmp    $0x000001,%ah
		jne    _01e091_jump
		mov    0x000081(%ecx),%bl
		mov    $0x000004,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e091_jump

	_01de8b_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01de9b_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _01e091_jump

	_01de9b_jump:
		mov    0x000081(%ecx),%al
		test   $0x000010,%al
		je     _01e091_jump
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01dec2_jump
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e091_jump

	_01dec2_jump:
		cmp    $0x000001,%ah
		jne    _01e091_jump
		mov    %al,%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e091_jump

	_01dee0_jump:
		mov    0x000081(%ecx),%al
		test   $0x000010,%al
		je     _01e091_jump
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01df07_jump
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e091_jump

	_01df07_jump:
		cmp    $0x000001,%ah
		jne    _01e091_jump
		mov    %al,%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e091_jump

	_01df25_jump:
		cmpb   $0x000000,0x000070(%ecx)
		jne    _01df3b_jump
		orb    $0x000008,0x000081(%ecx)
		movb   $0x000002,(%esp)
		jmp    _01e091_jump

	_01df3b_jump:
		andb   $0x0000f7,0x000081(%ecx)
		xor    %dh,%dh
		mov    %dh,(%esp)
		jmp    _01e091_jump

	_01df4c_jump:
		mov    0x000081(%ecx),%dl
		test   $0x000008,%dl
		jne    _01df64_jump
		mov    %dl,%bl
		or     $0x000008,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _01df6f_jump

	_01df64_jump:
		mov    %dl,%dh
		and    $0x0000f7,%dh
		mov    %dh,0x000081(%ecx)

	_01df6f_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01df7f_jump
		cmpb   $0x000003,0x00006c(%ecx)
		je     _01e091_jump

	_01df7f_jump:
		mov    $0x000003,%dh
		movw   $0x000000,0x00004a(%ecx)
		mov    %dh,(%esp)
		jmp    _01e091_jump

	_01df8f_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01df9f_jump
		cmpb   $0x000002,0x00006c(%ecx)
		je     _01e091_jump

	_01df9f_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d374_func
		mov    0x000081(%ecx),%bl
		test   $0x000008,%bl
		jne    _01dfcd_jump
		mov    %bl,%ah
		mov    $0x000003,%dl
		or     $0x000008,%ah
		mov    %dl,(%esp)
		mov    %ah,0x000081(%ecx)
		jmp    _01e091_jump

	_01dfcd_jump:
		mov    %bl,%bh
		mov    $0x000002,%al
		and    $0x0000f7,%bh
		mov    %al,(%esp)
		mov    %bh,0x000081(%ecx)
		jmp    _01e091_jump

	_01dfe2_jump:
		mov    0x000070(%ecx),%dl
		test   %dl,%dl
		jne    _01dff9_jump
		movb   $0x000002,(%esp)
		orb    $0x000008,0x000081(%ecx)
		jmp    _01e091_jump

	_01dff9_jump:
		cmp    $0x000001,%dl
		jne    _01e091_jump
		mov    0x000081(%ecx),%bh
		and    $0x0000f7,%bh
		mov    %dl,(%esp)
		mov    %bh,0x000081(%ecx)
		jmp    _01e091_jump

	_01e019_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e025_jump
		cmpb   $0x000018,0x00006c(%ecx)
		je     _01e091_jump

	_01e025_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e031_jump
		cmpb   $0x000012,0x00006c(%ecx)
		je     _01e091_jump

	_01e031_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e03d_jump
		cmpb   $0x000013,0x00006c(%ecx)
		je     _01e091_jump

	_01e03d_jump:
		mov    $0x000018,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		movw   $0x000000,0x000042(%ecx)
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)

	_01e091_jump:
		cmpb   $0x0000ff,(%esp)
		je     _01e0dd_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000010,_092265_data(,%eax,4)
		je     _01e0b8_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		call   _053c60_func
		cwtl   
		sub    %eax,0x000028(%ecx)
		jmp    _01e0c6_jump

	_01e0b8_jump:
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)

	_01e0c6_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    (%esp),%dl
		movw   $0x000000,0x000040(%ecx)
		call   _05f030_func

	_01e0dd_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e0e4_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    _0cdb96_data,%ecx
		movswl %ax,%esi
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    %esi,%eax
		dec    %ecx
		cmp    %ebx,%eax
		jl     _01e107_jump
		cmp    %ecx,%eax
		jg     _01e107_jump
		mov    $0x000001,%eax
		jmp    _01e109_jump

	_01e107_jump:
		xor    %eax,%eax

	_01e109_jump:
		test   %eax,%eax
		je     _01e15c_jump
		mov    _0cdb98_data,%ecx
		movswl %dx,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		dec    %ecx
		cmp    %ebx,%eax
		jl     _01e12d_jump
		cmp    %ecx,%eax
		jg     _01e12d_jump
		mov    $0x000001,%eax
		jmp    _01e12f_jump

	_01e12d_jump:
		xor    %eax,%eax

	_01e12f_jump:
		test   %eax,%eax
		je     _01e15c_jump
		mov    _0cdb96_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		add    %esi,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_01e15c_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01e164_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		cmpw   $0x000017,0x000060(%eax)
		jne    _01e187_jump
		testb  $0x000002,_0ced81_data
		je     _01e183_jump
		mov    $0x000004,%dl
		jmp    _01e189_jump

	_01e183_jump:
		mov    $0x000008,%dl
		jmp    _01e189_jump

	_01e187_jump:
		mov    $0x000010,%dl

	_01e189_jump:
		movzbw 0x000068(%esi),%di
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%edi
		mov    0x00002c(%esi),%bx
		add    %eax,%ebx
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    %ebx,0x000010(%esp)
		test   %ax,%ax
		js     _01e1b1_jump
		sar    %cl,%ax
		jmp    _01e1ba_jump

	_01e1b1_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e1ba_jump:
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %ax,0x000014(%esp)
		mov    %edi,%eax
		test   %ax,%ax
		js     _01e1cf_jump
		sar    %cl,%ax
		jmp    _01e1d8_jump

	_01e1cf_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e1d8_jump:
		mov    %ax,0x00000c(%esp)
		mov    %ax,0x000008(%esp)
		mov    %edi,%eax
		xor    %dh,%dh
		mov    $0x000004,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _01e1f4_jump
		sar    %cl,%ax
		jmp    _01e1fd_jump

	_01e1f4_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e1fd_jump:
		mov    %ax,(%esp)
		mov    %edi,%eax
		mov    $0x000004,%cl
		add    %edx,%eax
		test   %ax,%ax
		js     _01e211_jump
		sar    %cl,%ax
		jmp    _01e21a_jump

	_01e211_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e21a_jump:
		mov    %ax,0x000004(%esp)
		mov    %ebx,%eax
		mov    0x00000a(%esp),%ecx
		dec    %eax
		sar    $0x000010,%ecx
		movswl %ax,%edx
		mov    %ecx,%eax
		movswl %bx,%ebx
		call   _01e0e4_func
		mov    %al,0x000065(%esi)
		mov    -0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		call   _01e0e4_func
		mov    0x00006d(%esi),%dl
		mov    %al,0x000063(%esi)
		cmp    $0x000002,%dl
		jne    _01e27d_jump
		mov    0x000010(%esp),%eax
		xor    %ah,%ah
		and    $0x00000f,%edi
		and    $0x00000f,%al
		mov    %ebx,%edx
		movswl %ax,%ebp
		mov    %ecx,%eax
		movswl %di,%edi
		call   _01e0e4_func
		and    $0x0000ff,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _024968_func
		cwtl   
		jmp    _01e28b_jump

	_01e27d_jump:
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _01e0e4_func
		and    $0x0000ff,%eax

	_01e28b_jump:
		mov    0x000012(%esp),%edx
		mov    %al,0x000062(%esi)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _01e0e4_func
		mov    %al,0x000064(%esi)
		mov    0x000014(%esp),%eax
		inc    %eax
		movswl %ax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		call   _01e0e4_func
		mov    %al,0x000066(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e2ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		call   _01e164_func
		movzbw 0x000068(%ebx),%si
		mov    0x000028(%ebx),%dx
		movzbw 0x000069(%ebx),%di
		mov    0x00002c(%ebx),%cx
		mov    0x000060(%ebx),%ax
		add    %edx,%esi
		add    %ecx,%edi
		cmp    $0x000017,%ax
		jne    _01e372_jump
		mov    $0xffffffff,%edx
		mov    _0cdc06_data,%cl
		mov    %dx,_0cdbf4_data
		cmp    $0x00000c,%cl
		jb     _01e357_jump
		jbe    _01e361_jump
		cmp    $0x000012,%cl
		jb     _01e34b_jump
		cmp    $0x000017,%cl
		jbe    _01e36a_jump
		cmp    $0x000019,%cl
		jbe    _01e372_jump
		cmp    $0x00001e,%cl
		je     _01e36a_jump
		jmp    _01e372_jump

	_01e34b_jump:
		cmp    $0x00000e,%cl
		jb     _01e372_jump
		cmp    $0x00000f,%cl
		jbe    _01e361_jump
		jmp    _01e372_jump

	_01e357_jump:
		cmp    $0x000002,%cl
		jb     _01e372_jump
		cmp    $0x000007,%cl
		ja     _01e372_jump

	_01e361_jump:
		movb   $0x000001,_0cefce_data
		jmp    _01e372_jump

	_01e36a_jump:
		xor    %ah,%ah
		mov    %ah,_0cefce_data

	_01e372_jump:
		xor    %eax,%eax
		mov    0x000062(%ebx),%al
		testb  $0x000002,_092224_data(%eax)
		jne    _01e5f9_jump
		cmpw   $0x000017,0x000060(%ebx)
		jne    _01e3a9_jump
		mov    _0cdbf6_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		jmp    _01e3be_jump

	_01e3a9_jump:
		movswl %di,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func

	_01e3be_jump:
		mov    0x00006d(%ebx),%cl
		cmp    $0x000002,%cl
		jne    _01e3ea_jump
		xor    %edx,%edx
		mov    %al,%dl
		test   %cl,_092224_data(%edx)
		jne    _01e3ea_jump
		movswl %di,%eax
		add    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func

	_01e3ea_jump:
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_092224_data(%edx)
		je     _01e3fe_jump
		xor    %ah,%ah
		jmp    _01e5fe_jump

	_01e3fe_jump:
		xor    %eax,%eax
		mov    0x000064(%ebx),%al
		mov    _092224_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,2),%edx
		xor    %eax,%eax
		mov    0x000063(%ebx),%al
		mov    _092224_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    %al,%cl
		cmp    $0x000003,%al
		jne    _01e44b_jump
		mov    %esi,%eax
		xor    %ah,%ah
		and    $0x00000f,%al
		cmp    $0x000008,%ax
		jge    _01e449_jump
		mov    $0x000001,%cl
		jmp    _01e44b_jump

	_01e449_jump:
		mov    $0x000002,%cl

	_01e44b_jump:
		test   %cl,%cl
		je     _01e5f9_jump
		mov    0x000060(%ebx),%ax
		dec    %cl
		cmp    $0x000017,%ax
		jne    _01e4ed_jump
		cmpb   $0x000001,_0cefce_data
		jne    _01e5f9_jump
		test   %cl,%cl
		je     _01e479_jump
		add    $0x000010,%esi
		jmp    _01e47c_jump

	_01e479_jump:
		sub    $0x000010,%esi

	_01e47c_jump:
		movswl %di,%eax
		sub    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _01e5f9_jump
		cmpb   $0x000002,_0cdc11_data
		je     _01e4cc_jump
		mov    _0cdc25_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%cl
		je     _01e4c6_jump
		movw   $0x000000,0x000050(%ebx)
		jmp    _01e4cc_jump

	_01e4c6_jump:
		movw   $0x000001,0x000050(%ebx)

	_01e4cc_jump:
		test   %cl,%cl
		setne  %al
		and    $0x0000ff,%eax
		inc    %eax
		mov    _0cdc06_data(%eax),%al
		mov    %al,_0cdc06_data
		xor    %eax,%eax
		mov    0x000062(%ebx),%al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01e4ed_jump:
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _01e5f9_jump
		cmpb   $0x000002,0x00006d(%ebx)
		setne  %al
		and    $0x0000ff,%eax
		je     _01e5f9_jump
		cmpw   $0x000000,0x000060(%ebx)
		jne    _01e527_jump
		testb  $0x000010,0x000081(%ebx)
		jne    _01e5ee_jump

	_01e527_jump:
		mov    0x000060(%ebx),%cx
		cmp    $0x000009,%cx
		je     _01e5ee_jump
		cmp    $0x0000a5,%cx
		je     _01e5ee_jump
		cmp    $0x000014,%cx
		je     _01e5ee_jump
		cmp    $0x000023,%cx
		je     _01e5ee_jump
		cmp    $0x00002b,%cx
		je     _01e5ee_jump
		cmp    $0x00003c,%cx
		je     _01e5ee_jump
		cmp    $0x00003d,%cx
		je     _01e5ee_jump
		cmp    $0x000041,%cx
		jne    _01e583_jump
		cmpw   $0x000000,0x000050(%ebx)
		jne    _01e5ee_jump

	_01e583_jump:
		mov    0x000060(%ebx),%dx
		cmp    $0x000046,%dx
		je     _01e5ee_jump
		cmp    $0x000064,%dx
		je     _01e5ee_jump
		cmp    $0x0000d9,%dx
		je     _01e5ee_jump
		cmp    $0x000098,%dx
		je     _01e5ee_jump
		cmp    $0x00009c,%dx
		je     _01e5ee_jump
		cmp    $0x0000c3,%dx
		je     _01e5ee_jump
		cmp    $0x00007b,%dx
		jne    _01e5f9_jump
		mov    0x000075(%ebx),%cl
		cmp    $0x000001,%cl
		je     _01e5d5_jump
		cmp    $0x000004,%cl
		je     _01e5d5_jump
		cmp    $0x000007,%cl
		jne    _01e5f9_jump
		cmpb   $0x000002,0x00007d(%ebx)
		jne    _01e5f9_jump

	_01e5d5_jump:
		cmpb   $0x000000,0x00006d(%ebx)
		jne    _01e5e1_jump
		cmpb   $0x000004,0x00006c(%ebx)
		je     _01e5e8_jump

	_01e5e1_jump:
		mov    $0x000001,%eax
		jmp    _01e5ea_jump

	_01e5e8_jump:
		xor    %eax,%eax

	_01e5ea_jump:
		test   %eax,%eax
		je     _01e5f9_jump

	_01e5ee_jump:
		mov    %ebx,%eax
		call   _01dbb8_func
		movb   $0x00000f,0x000062(%ebx)

	_01e5f9_jump:
		xor    %eax,%eax
		mov    0x000062(%ebx),%al

	_01e5fe_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e604_func:
		movb   $0x000000,0x000071(%eax)
		movb   $0x000000,0x000072(%eax)
		ret    



_01e610_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _01e62f_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01e626_jump
		neg    %eax

	_01e626_jump:
		cmp    $0x000020,%eax
		jge    _01e62f_jump
		add    %dx,0x000040(%ecx)

	_01e62f_jump:
		cmpw   $0x000006,0x000060(%ecx)
		jne    _01e64d_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _01e642_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _01e66f_jump

	_01e642_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		jmp    _01e663_jump

	_01e64d_jump:
		mov    0x00006d(%ecx),%dl
		cmp    $0x000002,%dl
		jne    _01e65a_jump
		cmp    0x00006c(%ecx),%dl
		je     _01e66f_jump

	_01e65a_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_01e663_jump:
		call   _01d374_func
		mov    %ecx,%eax
		call   _01e604_func

	_01e66f_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01e674_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%edx
		call   _01cbd0_func
		test   %al,%al
		je     _01e6d7_jump
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    _0cedb4_data,%bx
		mov    %ah,0x000081(%edx)
		cmp    $0x000005,%bx
		jne    _01e6ad_jump
		cmpw   $0x0000a1,0x000060(%edx)
		je     _01e6b8_jump

	_01e6ad_jump:
		mov    0x000032(%edx),%eax
		sar    $0x000010,%eax
		call   _01f334_func

	_01e6b8_jump:
		mov    0x000060(%edx),%si
		cmp    $0x0000aa,%si
		je     _01e6c9_jump
		cmp    $0x00004b,%si
		jne    _01e6d7_jump

	_01e6c9_jump:
		movl   $0xffff8300,0x000028(%edx)
		movl   $0xffff8300,0x00002c(%edx)

	_01e6d7_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_01e6dc_func:
		push   %ebx
		push   %edx
		mov    0x000076(%eax),%dl
		mov    _0cdcd3_data,%dh
		cmp    %dh,%dl
		jae    _01e6f2_jump
		movb   $0x000000,0x000076(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_01e6f2_jump:
		mov    %dl,%bl
		sub    %dh,%bl
		mov    %bl,0x000076(%eax)
		pop    %edx
		pop    %ebx
		ret    



_01e6fc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %cx,0x000014(%esp)
		movw   $0x000000,(%edx)
		xor    %eax,%eax
		movw   $0x000000,(%ebx)
		mov    _0cdc0c_data,%al
		mov    0x00004e(%esi),%dx
		mov    0x000028(%esi),%bx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %ax,0x000010(%esp)
		xor    %eax,%eax
		mov    0x00004c(%esi),%cx
		mov    _0cdc0d_data,%al
		mov    0x00002c(%esi),%dx
		add    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00000e(%esp),%ebx
		mov    0x000069(%esi),%al
		sar    $0x000010,%ebx
		sub    %eax,%edx
		mov    %ebx,%eax
		mov    %dx,0x00000c(%esp)
		test   %eax,%eax
		jge    _01e766_jump
		neg    %eax

	_01e766_jump:
		mov    0x00000a(%esp),%ecx
		mov    %eax,%edx
		sar    $0x000010,%ecx
		mov    %ax,0x000018(%esp)
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _01e77c_jump
		neg    %eax

	_01e77c_jump:
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    %ax,0x00001c(%esp)
		cmpw   $0x000000,0x000010(%esp)
		je     _01e8b5_jump
		cmpw   $0x000000,0x00000c(%esp)
		je     _01e8b5_jump
		cmp    (%esp),%dx
		jle    _01e848_jump
		mov    -0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		sar    $0x00001f,%edx
		mov    %eax,0x000004(%esp)
		mov    %ebx,%eax
		idivl  0x000004(%esp)
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %eax,%ecx
		cmpw   $0x000000,0x000010(%esp)
		jle    _01e7df_jump
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01e7e8_jump

	_01e7df_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01e7e8_jump:
		mov    0x00002e(%esp),%edx
		mov    %ax,(%edi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %ax,0x000000(%ebp)
		test   %ax,%ax
		jne    _01e922_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _01e82f_jump
		movl   $0x000010,0x000008(%esp)
		jmp    _01e837_jump

	_01e82f_jump:
		movl   $0xfffffff0,0x000008(%esp)

	_01e837_jump:
		mov    0x000008(%esp),%eax
		movswl (%edi),%edx
		add    %eax,%edx
		mov    %dx,(%edi)
		jmp    _01e922_jump

	_01e848_jump:
		movswl %dx,%eax
		mov    %eax,0x000004(%esp)
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %eax,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    0x00000c(%esp),%edx
		mov    %eax,%ebx
		test   %dx,%dx
		jle    _01e87b_jump
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01e884_jump

	_01e87b_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01e884_jump:
		mov    0x000012(%esp),%edx
		mov    %ax,0x000000(%ebp)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %ax,(%edi)
		jmp    _01e922_jump

	_01e8b5_jump:
		mov    0x00000c(%esp),%edx
		test   %dx,%dx
		jne    _01e8f3_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _01e8d1_jump
		mov    0x000012(%esp),%edx
		sar    $0x000010,%edx
		neg    %edx
		jmp    _01e8d8_jump

	_01e8d1_jump:
		mov    0x000012(%esp),%edx
		sar    $0x000010,%edx

	_01e8d8_jump:
		mov    %dx,(%edi)
		cmpw   $0x000000,0x000010(%esp)
		jle    _01e8ea_jump
		mov    $0x000001,%ebx
		jmp    _01e8ef_jump

	_01e8ea_jump:
		mov    $0xffffffff,%ebx

	_01e8ef_jump:
		xor    %ecx,%ecx
		jmp    _01e922_jump

	_01e8f3_jump:
		jle    _01e8fe_jump
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01e907_jump

	_01e8fe_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01e907_jump:
		mov    0x00000c(%esp),%ecx
		xor    %ebx,%ebx
		mov    %ax,0x000000(%ebp)
		test   %cx,%cx
		jle    _01e91d_jump
		mov    $0x000001,%ecx
		jmp    _01e922_jump

	_01e91d_jump:
		mov    $0xffffffff,%ecx

	_01e922_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _01e931_jump
		cmpw   $0x000000,(%edi)
		jg     _01e940_jump

	_01e931_jump:
		testb  $0x000008,0x000081(%esi)
		je     _01e950_jump
		cmpw   $0x000000,(%edi)
		jge    _01e950_jump

	_01e940_jump:
		negw   (%edi)
		cmpw   $0x000000,0x000000(%ebp)
		jne    _01e950_jump
		movw   $0x000002,0x000000(%ebp)

	_01e950_jump:
		mov    0x00004e(%esi),%ax
		mov    0x00004c(%esi),%dx
		add    %ebx,%ebx
		add    %ecx,%ecx
		add    %ebx,%eax
		add    %ecx,%edx
		mov    %ax,0x00004e(%esi)
		mov    %dx,0x00004c(%esi)
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01ea14_func:
		push   %ebx
		cmp    $0x000001,%al
		jbe    _01ea1f_jump
		cmp    $0x000002,%al
		je     _01ea39_jump
		jmp    _01ea51_jump

	_01ea1f_jump:
		jne    _01ea24_jump
		add    $0x000029,%dl

	_01ea24_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0ce320_data,%ebx
		jmp    _01ea4c_jump

	_01ea39_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0cdc34_data,%ebx

	_01ea4c_jump:
		shl    $0x000002,%eax
		add    %eax,%ebx

	_01ea51_jump:
		xor    %eax,%eax
		mov    0x000005(%ebx),%al
		pop    %ebx
		ret    



_01ea58_func:
		push   %ebx
		cmp    $0x000001,%al
		jbe    _01ea63_jump
		cmp    $0x000002,%al
		je     _01ea7d_jump
		jmp    _01ea95_jump

	_01ea63_jump:
		jne    _01ea68_jump
		add    $0x000029,%dl

	_01ea68_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0ce320_data,%ebx
		jmp    _01ea90_jump

	_01ea7d_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0cdc34_data,%ebx

	_01ea90_jump:
		shl    $0x000002,%eax
		add    %eax,%ebx

	_01ea95_jump:
		mov    0x000009(%ebx),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x000007(%ebx),%dl
		and    $0x0000ff,%eax
		add    %edx,%eax
		pop    %ebx
		ret    



_01eaa8_func:
		push   %ebx
		push   %edx
		mov    _0c04d4_data,%dh
		xor    %eax,%eax

	_01eab2_jump:
		add    $0x0000d8,%eax
		mov    %dh,%dl
		xor    %bl,%bl
		mov    %dh,_0cb9b0_data(%eax)
		mov    %bl,_0cba86_data(%eax)
		xor    %dh,%dl
		mov    %dl,_0cba85_data(%eax)
		cmp    $0x000870,%eax
		jne    _01eab2_jump
		pop    %edx
		pop    %ebx
		ret    



_01eadc_func:
		push   %edx
		xor    %ah,%ah
		cmp    $0x000061,%al
		jb     _01eaec_jump
		cmp    $0x00007a,%al
		ja     _01eaec_jump
		mov    %al,%ah
		sub    $0x00005d,%ah

	_01eaec_jump:
		cmp    $0x000030,%al
		jb     _01eaf9_jump
		cmp    $0x000039,%al
		ja     _01eaf9_jump
		mov    %al,%ah
		sub    $0x000012,%ah

	_01eaf9_jump:
		mov    %al,%dl
		cmp    $0x00003f,%al
		jb     _01eb61_jump
		jbe    _01eb93_jump
		cmp    $0x000081,%al
		jb     _01eb3f_jump
		jbe    _01ebd5_jump
		cmp    $0x000094,%al
		jb     _01eb33_jump
		jbe    _01ebcf_jump
		cmp    $0x00009c,%al
		jb     _01ebdd_jump
		jbe    _01ebdb_jump
		cmp    $0x0000f8,%al
		je     _01ebbd_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb33_jump:
		cmp    $0x000084,%al
		je     _01ebdb_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb3f_jump:
		cmp    $0x00007c,%al
		jb     _01eb55_jump
		jbe    _01ebc9_jump
		cmp    $0x00007e,%al
		je     _01ebb7_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb55_jump:
		cmp    $0x00005e,%al
		je     _01ebb7_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb61_jump:
		cmp    $0x000027,%al
		jb     _01eb7d_jump
		jbe    _01ebab_jump
		cmp    $0x00002e,%al
		jb     _01eb75_jump
		jbe    _01eb9f_jump
		cmp    $0x00003a,%al
		je     _01eba5_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb75_jump:
		cmp    $0x00002a,%al
		je     _01ebc3_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb7d_jump:
		cmp    $0x000023,%al
		jb     _01eb8b_jump
		jbe    _01ebb1_jump
		cmp    $0x000025,%al
		je     _01ebbd_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb8b_jump:
		cmp    $0x000021,%al
		je     _01eb99_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb93_jump:
		mov    $0x000001,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb99_jump:
		mov    $0x000002,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb9f_jump:
		mov    $0x000003,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01eba5_jump:
		mov    $0x000028,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebab_jump:
		mov    $0x000029,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebb1_jump:
		mov    $0x00002f,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebb7_jump:
		mov    $0x00002e,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebbd_jump:
		mov    $0x00002d,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebc3_jump:
		mov    $0x000030,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebc9_jump:
		mov    $0x000031,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebcf_jump:
		mov    $0x00002b,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebd5_jump:
		mov    $0x00002c,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebdb_jump:
		mov    $0x00002a,%ah

	_01ebdd_jump:
		mov    %ah,%al
		pop    %edx
		ret    



_01ebe4_func:
		cmp    $0x000001,%al
		jne    _01ebeb_jump
		addb   $0x000029,(%edx)

	_01ebeb_jump:
		ret    



_01ebec_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    %ecx,(%esp)
		mov    %edx,%ecx
		xor    %ebx,%ebx
		jmp    _01ec30_jump

	_01ebfe_jump:
		cmp    $0x00002f,%dl
		je     _01ec3c_jump
		cmp    $0x000020,%dl
		jne    _01ec0c_jump
		add    %esi,%ebx
		jmp    _01ec30_jump

	_01ec0c_jump:
		mov    %dl,%al
		and    $0x0000ff,%eax
		call   _01eadc_func
		test   %al,%al
		je     _01ec30_jump
		xor    %edx,%edx
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		call   _01ea58_func
		sub    (%esp),%eax
		add    %eax,%ebx

	_01ec30_jump:
		inc    %ecx
		movswl %cx,%eax
		add    %edi,%eax
		mov    (%eax),%dl
		test   %dl,%dl
		jne    _01ebfe_jump

	_01ec3c_jump:
		mov    %ebx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01ec48_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000ec,%esp
		mov    %eax,%ebp
		mov    0x0000d4(%eax),%al
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,0x0000d4(%esp)
		mov    %edx,0x0000c8(%esp)
		mov    %edx,0x0000e4(%esp)
		mov    %edx,0x0000e0(%esp)
		mov    %edx,0x0000d0(%esp)
		mov    %al,0x0000e8(%esp)
		cmp    $0x000002,%al
		jne    _01ecb5_jump
		mov    $0x00000f,%edx
		mov    $0x000001,%ecx
		mov    $0x000008,%esi
		mov    %edx,0x0000d8(%esp)
		mov    %ecx,0x0000dc(%esp)
		mov    %esi,0x0000cc(%esp)
		jmp    _01ed03_jump

	_01ecb5_jump:
		cmp    $0x000001,%al
		jne    _01ecdf_jump
		mov    $0x000017,%esi
		mov    $0x000003,%edi
		mov    $0x00000a,%eax
		mov    %esi,0x0000d8(%esp)
		mov    %edi,0x0000dc(%esp)
		mov    %eax,0x0000cc(%esp)
		jmp    _01ed03_jump

	_01ecdf_jump:
		mov    $0x000024,%eax
		mov    $0x000003,%edx
		mov    $0x00000c,%ecx
		mov    %eax,0x0000d8(%esp)
		mov    %edx,0x0000dc(%esp)
		mov    %ecx,0x0000cc(%esp)

	_01ed03_jump:
		mov    $0x0000c8,%ecx
		mov    %esp,%edi
		mov    %ebp,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01ee9f_jump
		xor    %ecx,%ecx
		jmp    _01ede9_jump

	_01ed2d_jump:
		cmp    $0x00002f,%dl
		jne    _01ed8b_jump
		mov    $0x000001,%esi
		mov    0x0000c8(%esp),%edi
		mov    0x0000d4(%esp),%eax
		add    %esi,%edi
		mov    %esi,0x0000d0(%esp)
		mov    %edi,0x0000c8(%esp)
		cmp    %ax,%bx
		jle    _01ed62_jump
		mov    %bx,0x0000d4(%esp)

	_01ed62_jump:
		mov    0x0000e0(%esp),%eax
		mov    0x0000e4(%esp),%edx
		xor    %ebx,%ebx
		cmp    %dx,%ax
		jle    _01ed7e_jump
		mov    %eax,0x0000e4(%esp)

	_01ed7e_jump:
		xor    %esi,%esi
		xor    %al,%al
		mov    %esi,0x0000e0(%esp)
		jmp    _01edb8_jump

	_01ed8b_jump:
		cmp    $0x000020,%dl
		jne    _01edac_jump
		mov    0x0000cc(%esp),%edi
		mov    0x0000e0(%esp),%edx
		xor    %al,%al
		inc    %edx
		add    %edi,%ebx
		mov    %edx,0x0000e0(%esp)
		jmp    _01edb8_jump

	_01edac_jump:
		mov    %dl,%al
		and    $0x0000ff,%eax
		call   _01eadc_func

	_01edb8_jump:
		test   %al,%al
		je     _01ede8_jump
		xor    %edx,%edx
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x0000e8(%esp),%al
		mov    0x0000e0(%esp),%edi
		call   _01ea58_func
		mov    0x0000dc(%esp),%edx
		inc    %edi
		sub    %edx,%eax
		mov    %edi,0x0000e0(%esp)
		add    %eax,%ebx

	_01ede8_jump:
		inc    %ecx

	_01ede9_jump:
		movswl %cx,%eax
		mov    (%esp,%eax,1),%dl
		test   %dl,%dl
		jne    _01ed2d_jump
		mov    0x0000c8(%esp),%edi
		test   %di,%di
		jne    _01ee19_jump
		mov    $0x000001,%edx
		mov    %bx,0x0000d4(%esp)
		mov    %edx,0x0000c8(%esp)
		jmp    _01ee23_jump

	_01ee19_jump:
		mov    %edi,%eax
		dec    %eax
		mov    %eax,0x0000c8(%esp)

	_01ee23_jump:
		cmpw   $0x000000,0x0000d0(%esp)
		je     _01ee4e_jump
		mov    0x0000d2(%esp),%eax
		mov    0x0000ce(%ebp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,0x0000c8(%ebp)
		jmp    _01ee5c_jump

	_01ee4e_jump:
		mov    0x0000d0(%ebp),%ax
		mov    %ax,0x0000c8(%ebp)

	_01ee5c_jump:
		mov    0x0000d4(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,0x0000cc(%ebp)
		mov    0x0000d8(%esp),%ecx
		mov    0x0000d2(%ebp),%ax
		sub    %ecx,%eax
		add    $0x000002,%eax
		mov    %ax,0x0000ca(%ebp)
		mov    0x0000c8(%esp),%eax
		imul   %ecx,%eax
		sub    $0x000002,%eax
		mov    %ax,0x0000ce(%ebp)

	_01ee9f_jump:
		add    $0x0000ec,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01eeac_switch:
		.long   _01eefe_case
		.long   _01ef08_case
		.long   _01ef12_case
		.long   _01ef1c_case




_01eebc_func:
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		cmp    $0x0000ff,%bx
		jne    _01eee4_jump
		xor    %al,%al
		jmp    _01eed8_jump

	_01eecd_jump:
		cmp    $0x000024,%ah
		jne    _01eed6_jump
		xor    %ebx,%ebx
		mov    %al,%bl

	_01eed6_jump:
		inc    %al

	_01eed8_jump:
		xor    %edx,%edx
		mov    %al,%dl
		add    %ecx,%edx
		mov    (%edx),%ah
		test   %ah,%ah
		jne    _01eecd_jump

	_01eee4_jump:
		cmp    $0x0000ff,%bx
		je     _01ef23_jump
		cmp    $0x000003,%si
		ja     _01ef23_jump
		xor    %edx,%edx
		mov    %si,%dx
		jmp    *%cs:_01eeac_switch(,%edx,4)

	_01eefe_case:
		movswl %bx,%edx
		movb   $0x000061,(%ecx,%edx,1)
		pop    %esi
		pop    %ecx
		ret    

	_01ef08_case:
		movswl %bx,%edx
		movb   $0x000062,(%ecx,%edx,1)
		pop    %esi
		pop    %ecx
		ret    

	_01ef12_case:
		movswl %bx,%edx
		movb   $0x000063,(%ecx,%edx,1)
		pop    %esi
		pop    %ecx
		ret    

	_01ef1c_case:
		movswl %bx,%edx
		movb   $0x000064,(%ecx,%edx,1)

	_01ef23_jump:
		pop    %esi
		pop    %ecx
		ret    



_01ef28_func:
		push   %ebx
		push   %ecx
		mov    (%eax),%bx
		mov    (%edx),%cx
		mov    %bx,(%edx)
		mov    %cx,(%eax)
		pop    %ecx
		pop    %ebx
		ret    



_01ef3c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,0x000008(%esp)
		mov    %dx,0x000014(%esp)
		mov    %bx,0x000024(%esp)
		mov    %cx,0x00001c(%esp)
		mov    0x000040(%esp),%eax
		mov    0x000012(%esp),%ecx
		mov    %eax,0x000018(%esp)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		mov    0x000022(%esp),%edi
		mov    %eax,%ecx
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%edi
		sar    $0x000010,%eax
		sub    %edi,%eax
		xor    %esi,%esi
		mov    %eax,%edi
		test   %ecx,%ecx
		je     _01efa0_jump
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %eax,%eax
		jge    _01ef94_jump
		neg    %eax

	_01ef94_jump:
		cmp    $0x000001,%eax
		jge    _01efa0_jump
		mov    $0x000001,%ebx
		jmp    _01efa2_jump

	_01efa0_jump:
		xor    %ebx,%ebx

	_01efa2_jump:
		cmp    $0x000001,%bx
		jne    _01f11e_jump
		test   %ecx,%ecx
		jge    _01efd2_jump
		lea    0x00001c(%esp),%edx
		lea    0x000014(%esp),%eax
		mov    %ebx,%esi
		call   _01ef28_func
		neg    %ecx
		lea    0x00003c(%esp),%edx
		lea    0x000024(%esp),%eax
		neg    %edi
		call   _01ef28_func
		jmp    _01efe9_jump

	_01efd2_jump:
		jne    _01efe9_jump
		test   %edi,%edi
		jge    _01efe9_jump
		lea    0x00003c(%esp),%edx
		lea    0x000024(%esp),%eax
		mov    %ebx,%esi
		call   _01ef28_func
		neg    %edi

	_01efe9_jump:
		test   %edi,%edi
		jle    _01eff7_jump
		movl   $0x000001,0x000004(%esp)
		jmp    _01f009_jump

	_01eff7_jump:
		jge    _01f003_jump
		movl   $0xffffffff,0x000004(%esp)
		jmp    _01f009_jump

	_01f003_jump:
		xor    %ebp,%ebp
		mov    %ebp,0x000004(%esp)

	_01f009_jump:
		mov    %edi,%eax
		test   %eax,%eax
		jge    _01f011_jump
		neg    %eax

	_01f011_jump:
		mov    %eax,%edi
		lea    (%eax,%eax,1),%ebp
		add    %edi,%edi
		sub    %ecx,%eax
		mov    %di,0x00000c(%esp)
		add    %eax,%eax
		sub    %ecx,%ebp
		mov    %ax,0x000010(%esp)
		test   %si,%si
		je     _01f0ac_jump
		mov    0x00001a(%esp),%esi
		mov    0x000012(%esp),%eax
		mov    0x000042(%esp),%edx
		sar    $0x000010,%esi
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %esi,%eax
		imul   %edx,%eax
		negl   0x000004(%esp)
		mov    $0x000007,%cl
		mov    0x00003a(%esp),%edi
		test   %eax,%eax
		je     _01f05d_jump
		sar    %cl,%eax
		jmp    _01f063_jump

	_01f05d_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f063_jump:
		mov    0x00001a(%esp),%esi
		sar    $0x000010,%esi
		lea    (%esi,%eax,1),%ecx
		inc    %esi
		sar    $0x000010,%edi

	_01f071_jump:
		cmp    %ecx,%esi
		jl     _01f293_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f08d_jump
		mov    0x00000e(%esp),%eax
		mov    0x000004(%esp),%edx
		sar    $0x000010,%eax
		add    %edx,%edi
		jmp    _01f094_jump

	_01f08d_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax

	_01f094_jump:
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01f0a9_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01f0a9_jump:
		dec    %esi
		jmp    _01f071_jump

	_01f0ac_jump:
		mov    0x000012(%esp),%esi
		mov    0x00001a(%esp),%edx
		mov    0x000042(%esp),%eax
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %esi,%edx
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x000022(%esp),%edi
		test   %eax,%eax
		je     _01f0d4_jump
		sar    %cl,%eax
		jmp    _01f0da_jump

	_01f0d4_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f0da_jump:
		mov    0x000012(%esp),%esi
		sar    $0x000010,%esi
		lea    (%esi,%eax,1),%ecx
		inc    %esi
		sar    $0x000010,%edi

	_01f0e8_jump:
		cmp    %ecx,%esi
		jg     _01f293_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f0ff_jump
		add    0x000004(%esp),%edi
		mov    0x00000e(%esp),%eax
		jmp    _01f103_jump

	_01f0ff_jump:
		mov    0x00000a(%esp),%eax

	_01f103_jump:
		sar    $0x000010,%eax
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01f11b_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01f11b_jump:
		inc    %esi
		jmp    _01f0e8_jump

	_01f11e_jump:
		test   %edi,%edi
		jge    _01f147_jump
		lea    0x00001c(%esp),%edx
		lea    0x000014(%esp),%eax
		mov    $0x000001,%esi
		call   _01ef28_func
		neg    %ecx
		lea    0x00003c(%esp),%edx
		lea    0x000024(%esp),%eax
		neg    %edi
		call   _01ef28_func
		jmp    _01f161_jump

	_01f147_jump:
		jne    _01f161_jump
		test   %ecx,%ecx
		jge    _01f161_jump
		lea    0x00001c(%esp),%edx
		lea    0x000014(%esp),%eax
		mov    $0x000001,%esi
		call   _01ef28_func
		neg    %ecx

	_01f161_jump:
		test   %ecx,%ecx
		jle    _01f16e_jump
		movl   $0x000001,(%esp)
		jmp    _01f17e_jump

	_01f16e_jump:
		jge    _01f179_jump
		movl   $0xffffffff,(%esp)
		jmp    _01f17e_jump

	_01f179_jump:
		xor    %edx,%edx
		mov    %edx,(%esp)

	_01f17e_jump:
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _01f186_jump
		neg    %eax

	_01f186_jump:
		mov    %eax,%ecx
		lea    (%eax,%eax,1),%ebp
		add    %ecx,%ecx
		sub    %edi,%eax
		mov    %cx,0x000020(%esp)
		add    %eax,%eax
		sub    %edi,%ebp
		mov    %ax,0x000028(%esp)
		test   %si,%si
		je     _01f224_jump
		mov    0x00003a(%esp),%edi
		mov    (%esp),%edx
		mov    0x000022(%esp),%eax
		sar    $0x000010,%edi
		neg    %edx
		sar    $0x000010,%eax
		mov    %edx,(%esp)
		mov    0x000042(%esp),%edx
		sub    %edi,%eax
		sar    $0x000010,%edx
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x00001a(%esp),%esi
		test   %eax,%eax
		je     _01f1d6_jump
		sar    %cl,%eax
		jmp    _01f1dc_jump

	_01f1d6_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f1dc_jump:
		mov    0x00003a(%esp),%edi
		sar    $0x000010,%edi
		lea    (%edi,%eax,1),%ecx
		inc    %edi
		sar    $0x000010,%esi

	_01f1ea_jump:
		cmp    %ecx,%edi
		jl     _01f293_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f205_jump
		mov    0x000026(%esp),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		add    %edx,%esi
		jmp    _01f20c_jump

	_01f205_jump:
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax

	_01f20c_jump:
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01f221_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01f221_jump:
		dec    %edi
		jmp    _01f1ea_jump

	_01f224_jump:
		mov    0x000022(%esp),%edi
		mov    0x00003a(%esp),%eax
		mov    0x000042(%esp),%edx
		sar    $0x000010,%edi
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edi,%eax
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x000012(%esp),%esi
		test   %eax,%eax
		je     _01f24c_jump
		sar    %cl,%eax
		jmp    _01f252_jump

	_01f24c_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f252_jump:
		mov    0x000022(%esp),%edi
		sar    $0x000010,%edi
		lea    (%edi,%eax,1),%ecx
		inc    %edi
		sar    $0x000010,%esi
		cmp    %ecx,%edi
		jg     _01f293_jump

	_01f264_jump:
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f272_jump
		add    (%esp),%esi
		mov    0x000026(%esp),%eax
		jmp    _01f276_jump

	_01f272_jump:
		mov    0x00001e(%esp),%eax

	_01f276_jump:
		sar    $0x000010,%eax
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01f28e_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01f28e_jump:
		inc    %edi
		cmp    %ecx,%edi
		jle    _01f264_jump

	_01f293_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_01f29c_func:
		push   %edx
		mov    _0ced88_data,%ah
		mov    _0ced89_data,%dl
		and    $0x000000,%ah
		and    $0x0000f0,%dl
		mov    %ah,_0ced88_data
		mov    %dl,_0ced89_data
		pop    %edx
		ret    



_01f2c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cdbb0_data,%eax
		mov    (%eax),%edx
		mov    0x00000c(%eax),%ebx
		mov    0x000002(%edx),%cl
		mov    0x0001c2(%edx),%dl
		mov    %dl,0x0000a2(%ebx)
		mov    (%eax),%edx
		mov    0x0001c2(%edx),%bl
		mov    %bl,0x000002(%edx)
		mov    (%eax),%eax
		mov    %cl,0x0001c2(%eax)
		mov    $0x000001,%al
		mov    _0cefc5_data,%ah
		sub    %ah,%al
		mov    %al,_0cefc5_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f304_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cc30c_data,%dx
		movswl %dx,%ebx
		lea    0x000000(,%ebx,2),%ecx
		inc    %edx
		mov    _0cc308_data,%ebx
		mov    0x000034(%eax),%ax
		mov    %dx,_0cc30c_data
		mov    %ax,(%ecx,%ebx,1)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f334_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    _0cc30c_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _01f36b_jump

	_01f348_jump:
		movswl %ax,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    _0cc308_data,%edx
		cmp    (%edx,%ebx,1),%cx
		je     _01f36b_jump
		mov    _0cc30c_data,%bx
		inc    %eax
		cmp    %bx,%ax
		jl     _01f348_jump

	_01f36b_jump:
		mov    _0cc30c_data,%di
		cmp    %di,%ax
		jge    _01f39f_jump
		mov    %edi,%edx
		dec    %edx
		mov    %dx,_0cc30c_data
		mov    _0cc30a_data,%ebx
		sar    $0x000010,%ebx
		mov    _0cc308_data,%edx
		add    %ebx,%ebx
		lea    (%edx,%ebx,1),%ecx
		movswl %ax,%ebx
		mov    (%ecx),%ax
		mov    %ax,(%edx,%ebx,2)

	_01f39f_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f3a4_func:
		push   %edx
		mov    %eax,%edx
		call   _03c85c_func
		push   %edx
		push   $_0c04d8_data
		call   _07bcec_func
		mov    _0cefa4_data,%ah
		add    $0x000008,%esp
		cmp    $0x000001,%ah
		je     _01f3d7_jump
		push   $_0c04f8_data
		call   _07bcec_func
		add    $0x000004,%esp
		call   _07c10b_func

	_01f3d7_jump:
		mov    $0xffffffff,%eax
		call   _07bd0f_func
		pop    %edx
		ret    



_01f3e4_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    %dl,(%esp)
		xor    %eax,%eax
		jmp    _01f401_jump

	_01f3f2_jump:
		imul   $0x00000c,%edx,%ecx
		mov    (%ebx),%edx
		mov    0x000004(%ecx,%edx,1),%dl
		cmp    (%esp),%dl
		je     _01f410_jump
		inc    %eax

	_01f401_jump:
		xor    %ecx,%ecx
		movswl %ax,%edx
		mov    0x000044(%ebx),%cx
		cmp    %ecx,%edx
		jl     _01f3f2_jump
		xor    %al,%al

	_01f410_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_01f420_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    _0cedae_data,%eax
		mov    _0cedaa_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %di,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0cedc8_data,%eax
		mov    _0cedac_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %eax,%ebx
		movswl %si,%eax
		sub    %eax,%ebx
		test   %dx,%dx
		setg   %al
		mov    %al,0x000004(%esp)
		test   %bx,%bx
		setg   %al
		mov    %al,(%esp)
		cmpb   $0x000000,0x000004(%esp)
		jne    _01f47d_jump
		neg    %edx

	_01f47d_jump:
		cmpb   $0x000000,(%esp)
		jne    _01f485_jump
		neg    %ebx

	_01f485_jump:
		cmp    $0x0000c8,%dx
		jle    _01f4be_jump
		mov    $0x000001,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _01f49a_jump
		sar    %cl,%ax
		jmp    _01f4a3_jump

	_01f49a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01f4a3_jump:
		mov    $0x000001,%cl
		mov    %eax,%edx
		mov    %ebx,%eax
		test   %ax,%ax
		js     _01f4b3_jump
		sar    %cl,%ax
		jmp    _01f4bc_jump

	_01f4b3_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01f4bc_jump:
		mov    %eax,%ebx

	_01f4be_jump:
		test   %bx,%bx
		jne    _01f4ed_jump
		cmpb   $0x000000,0x000004(%esp)
		je     _01f4d4_jump
		mov    $0x00001b,%eax
		jmp    _01f58a_jump

	_01f4d4_jump:
		test   %dx,%dx
		je     _01f4e3_jump
		mov    $0x000009,%eax
		jmp    _01f58a_jump

	_01f4e3_jump:
		mov    $0xffffffff,%eax
		jmp    _01f58a_jump

	_01f4ed_jump:
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cmpb   $0x000000,0x000004(%esp)
		je     _01f54c_jump
		cmpb   $0x000000,(%esp)
		je     _01f537_jump
		cmp    $0x0000ff,%ax
		jle    _01f527_jump
		mov    $0x00001b,%eax
		jmp    _01f58a_jump

	_01f527_jump:
		cwtl   
		mov    _094784_data(%eax),%al
		xor    %ah,%ah
		add    $0x00001b,%eax
		jmp    _01f58a_jump

	_01f537_jump:
		cmp    $0x0000ff,%ax
		jle    _01f541_jump
		xor    %eax,%eax
		jmp    _01f58a_jump

	_01f541_jump:
		cwtl   
		mov    _094784_data(%eax),%al
		xor    %ah,%ah
		jmp    _01f58a_jump

	_01f54c_jump:
		cmpb   $0x000000,(%esp)
		je     _01f56f_jump
		cmp    $0x0000ff,%ax
		jle    _01f55f_jump
		mov    $0x000012,%eax
		jmp    _01f58a_jump

	_01f55f_jump:
		cwtl   
		mov    _094784_data(%eax),%al
		xor    %ah,%ah
		add    $0x000012,%eax
		jmp    _01f58a_jump

	_01f56f_jump:
		cmp    $0x0000ff,%ax
		jle    _01f57c_jump
		mov    $0x000009,%eax
		jmp    _01f58a_jump

	_01f57c_jump:
		cwtl   
		mov    _094784_data(%eax),%al
		xor    %ah,%ah
		add    $0x000009,%eax

	_01f58a_jump:
		movswl %ax,%ebx
		movswl %si,%edx
		movswl %di,%eax
		call   _077630_func
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01f5a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x000008(%esp),%edx
		push   %edx
		lea    0x000004(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %edx
		lea    0x000014(%esp),%ebx
		mov    $0x00000e,%edx
		call   _01d710_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %ebx,%eax
		cwtl   
		call   _01f420_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f5f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x000008(%esp),%edx
		push   %edx
		lea    0x000004(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %edx
		lea    0x000014(%esp),%ebx
		mov    $0x00000e,%edx
		call   _01d710_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %ebx,%eax
		cwtl   
		call   _01f420_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f650_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x00000f,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    0x000002(%esp),%ebx
		add    %edx,%eax
		sar    $0x000010,%ebx
		movswl %ax,%edx
		mov    0x000006(%esp),%eax
		sar    %ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		cwtl   
		call   _01f420_func
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x00000e,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %ebx,%eax
		cwtl   
		call   _01f420_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f6f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0cdbcc_data,%ebx
		mov    _0cdc0c_data,%dl
		mov    0x000028(%eax),%ecx
		add    %ebx,%edx
		mov    0x000068(%eax),%al
		sub    %ecx,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		test   %edx,%edx
		setg   %al
		xor    %ah,%ah
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01f888_switch:
		.long   _01f944_case
		.long   _01f9bd_case
		.long   _01f9bd_case
		.long   _01f966_case
		.long   _01f9fd_case
		.long   _01f9fd_case
		.long   _01fa94_case
		.long   _01fb14_case
		.long   _01fb14_case
		.long   _01fad4_case
		.long   _01fb14_case
		.long   _01fb14_case
		.long   _01fbf3_case
		.long   _01fc08_case
		.long   _01fc2f_case

_01f8c4_switch:
		.long   _01fb4c_case
		.long   _01fb32_case
		.long   _01fb5c_case
		.long   _01fb4c_case
		.long   _01fb32_case

_01f8d8_switch:
		.long   _01fbcc_case
		.long   _01fbbf_case
		.long   _01fc82_case
		.long   _01fbe6_case
		.long   _01fbd9_case




_01f8ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		movzbw 0x00006c(%eax),%si
		shl    $0x000002,%edx
		mov    0x00000c(%eax),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0cef4d_data(%eax),%al
		mov    %esi,%edx
		test   %al,%al
		sete   %al
		sub    $0x000002,%edx
		mov    %al,%ah
		cmp    $0x00000e,%dx
		ja     _01fc82_case
		and    $0x00ffff,%edx
		jmp    *%cs:_01f888_switch(,%edx,4)

	_01f944_case:
		cmpb   $0x00000e,0x00006b(%ecx)
		jne    _01fc82_case
		test   %al,%al
		je     _01fc82_case
		mov    %ecx,%eax
		call   _01f650_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01f966_case:
		cmpb   $0x000016,0x00006b(%ecx)
		jne    _01fc82_case
		cmpb   $0x000000,0x000076(%ecx)
		jne    _01f990_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _05f030_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01f990_jump:
		mov    $0x000001,%eax
		call   _069140_func
		test   %ax,%ax
		jne    _01fa7a_jump

	_01f9a3_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05f030_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01f9bd_case:
		cmpb   $0x000013,0x00006b(%ecx)
		jne    _01fc82_case
		test   %ah,%ah
		je     _01fc82_case
		incw   _0ced6a_data
		cmp    $0x000004,%si
		jne    _01f9e3_jump
		mov    %ecx,%eax
		call   _01f5f8_func

	_01f9e3_jump:
		cmp    $0x000003,%si
		jne    _01fc82_case
		mov    %ecx,%eax
		call   _01f5a0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01f9fd_case:
		cmpb   $0x000014,0x00006b(%ecx)
		jne    _01fc82_case
		cmpb   $0x000000,0x000076(%ecx)
		jne    _01fa27_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _05f030_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fa27_jump:
		mov    _0ced6a_data,%ax
		cmp    $0x000001,%ax
		jb     _01fa70_jump
		jbe    _01fa3d_jump
		cmp    $0x000003,%ax
		je     _01fa52_jump
		jmp    _01fa70_jump

	_01fa3d_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _01d364_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fa52_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ecx,%ecx
		call   _01d364_func
		mov    %cx,_0ced6a_data
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fa70_jump:
		cmp    $0x000006,%si
		jne    _01f9a3_jump

	_01fa7a_jump:
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05f030_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fa94_case:
		mov    %ecx,%eax
		call   _01f6f4_func
		test   %ax,%ax
		je     _01faba_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _05f030_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01faba_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _05f030_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fad4_case:
		mov    %ecx,%eax
		call   _01f6f4_func
		test   %ax,%ax
		je     _01fafa_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _05f030_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fafa_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _05f030_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fb14_case:
		cmpb   $0x000014,0x000070(%ecx)
		jne    _01fb64_jump
		mov    %esi,%eax
		sub    $0x000009,%eax
		cmp    $0x000004,%ax
		ja     _01fb5c_case
		and    $0x00ffff,%eax
		jmp    *%cs:_01f8c4_switch(,%eax,4)

	_01fb32_case:
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01fb3e_jump
		neg    %eax

	_01fb3e_jump:
		mov    %eax,%ebx
		mov    %ax,0x000040(%ecx)
		neg    %ebx
		mov    %bx,0x000040(%ecx)
		jmp    _01fb5c_case

	_01fb4c_case:
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01fb58_jump
		neg    %eax

	_01fb58_jump:
		mov    %ax,0x000040(%ecx)

	_01fb5c_case:
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_01fb64_jump:
		xor    %eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000069(%ecx),%al
		mov    0x000068(%ecx),%dl
		mov    %ax,(%esp)
		mov    %al,%bl
		mov    %ecx,%eax
		movzbw 0x000068(%ecx),%di
		call   _02ec10_func
		test   %ax,%ax
		je     _01fc82_case
		mov    -0x000002(%esp),%ebx
		movswl %di,%edx
		mov    %ecx,%eax
		sar    $0x000010,%ebx
		call   _01d624_func
		test   %ax,%ax
		je     _01fc82_case
		sub    $0x000009,%esi
		cmp    $0x000004,%si
		ja     _01fc82_case
		xor    %eax,%eax
		mov    %si,%ax
		jmp    *%cs:_01f8d8_switch(,%eax,4)

	_01fbbf_case:
		movb   $0x000009,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fbcc_case:
		movb   $0x00000a,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fbd9_case:
		movb   $0x00000c,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fbe6_case:
		movb   $0x00000d,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fbf3_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fc08_case:
		mov    0x00006b(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x00001d,%dl
		jae    _01fc1d_jump
		mov    $0xfffffffc,%eax
		jmp    _01fc22_jump

	_01fc1d_jump:
		mov    $0xfffffff8,%eax

	_01fc22_jump:
		mov    %ax,0x000042(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fc2f_case:
		mov    %ecx,%eax
		movw   $0x00fff8,0x000042(%ecx)
		call   _01cbd0_func
		test   %al,%al
		je     _01fc82_case
		mov    _0cedf8_data,%eax
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebx
		mov    0x000069(%ecx),%dl
		sar    $0x000010,%eax
		add    %ebx,%edx
		cmp    %eax,%edx
		jge    _01fc82_case
		mov    0x000081(%ecx),%ah
		and    $0x0000fb,%ah
		mov    $0x000001,%edx
		mov    %ah,0x000081(%ecx)
		mov    $_0cdba4_data,%eax
		movl   $0x000000,0x000024(%ecx)
		call   _076184_func
		mov    %dx,_0cedd4_data

	_01fc82_case:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01fc8c_func:
		push   %ebx
		push   %edx
		mov    0x00006c(%eax),%dl
		test   %dl,%dl
		jne    _01fcb9_jump
		xor    %dh,%dh
		mov    %dx,_0ced6a_data
		mov    0x000081(%eax),%dh
		and    $0x0000f7,%dh
		mov    $0x000001,%ebx
		mov    %dh,0x000081(%eax)
		mov    %ebx,%edx
		call   _05f030_func

	_01fcb9_jump:
		pop    %edx
		pop    %ebx
		ret    



_01fcbc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmp    $0x000002,%dx
		jne    _01fd1e_jump
		call   _01f6f4_func
		mov    0x00006c(%ebx),%cl
		mov    %eax,%edx
		cmp    $0x000005,%cl
		je     _01fceb_jump
		cmp    $0x000006,%cl
		jne    _01fcdf_jump
		test   %ax,%ax
		je     _01fceb_jump

	_01fcdf_jump:
		cmpb   $0x000007,0x00006c(%ebx)
		jne    _01fd1e_jump
		cmp    $0x000001,%dx
		jne    _01fd1e_jump

	_01fceb_jump:
		mov    0x000076(%ebx),%dl
		dec    %dl
		mov    _0cdc30_data,%eax
		mov    %dl,0x000076(%ebx)
		xor    %edx,%edx
		mov    0x000036(%eax),%bx
		mov    0x000068(%eax),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000038(%eax),%cx
		mov    0x000069(%eax),%dl
		call   _077338_func
		add    %ecx,%edx
		movswl %bx,%eax
		movswl %dx,%edx
		call   _077a30_func

	_01fd1e_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01fd24_func:
		movw   $0x000028,_0cdbfa_data
		call   _01f6f4_func
		test   %ax,%ax
		je     _01fd3d_jump
		mov    $0x000001,%eax
		ret    

	_01fd3d_jump:
		mov    $0xffffffff,%eax
		ret    



_01fd50_func:
		push   %ebx
		push   %edx
		mov    _0ceffc_data,%dx
		cmp    $0x000002,%dx
		jb     _01fd7e_jump
		jbe    _01fd69_jump
		cmp    $0x000003,%dx
		je     _01fd72_jump
		jmp    _01fd7e_jump

	_01fd69_jump:
		mov    $0x000001,%ebx
		mov    %ebx,%edx
		jmp    _01fd85_jump

	_01fd72_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		jmp    _01fd85_jump

	_01fd7e_jump:
		mov    $0x000001,%edx
		xor    %ebx,%ebx

	_01fd85_jump:
		call   _01d374_func
		pop    %edx
		pop    %ebx
		ret    



_01fd90_func:
		push   %ebx
		mov    %eax,%ebx
		cmp    $0x000006,%dx
		jne    _01fded_jump
		cmpw   $0x000000,0x000050(%eax)
		jne    _01fded_jump
		mov    _0cdc30_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jle    _01fdc3_jump
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d364_func
		mov    0x00003a(%ebx),%eax
		sar    $0x000010,%eax
		add    $0x000047,%eax
		jmp    _01fdd8_jump

	_01fdc3_jump:
		mov    $0x000005,%edx
		mov    %ebx,%eax
		call   _01d364_func
		mov    0x00003a(%ebx),%eax
		sar    $0x000010,%eax
		sub    $0x000055,%eax

	_01fdd8_jump:
		mov    %eax,0x000028(%ebx)
		movw   $0x000000,0x000056(%ebx)
		movw   $0x0000ff,0x000050(%ebx)
		movb   $0x0000ff,0x00006b(%ebx)
		pop    %ebx
		ret    

	_01fded_jump:
		cmp    $0x000001,%dx
		jle    _01fe12_jump
		mov    _0cdc30_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jle    _01fe06_jump
		mov    $0x000007,%edx
		jmp    _01fe0b_jump

	_01fe06_jump:
		mov    $0x000006,%edx

	_01fe0b_jump:
		mov    %ebx,%eax
		call   _01d364_func

	_01fe12_jump:
		pop    %ebx
		ret    

_01fe14_switch:
		.long   _020027_case
		.long   _01ff38_case
		.long   _01ff69_case
		.long   _01ff9a_case
		.long   _01ffcb_case
		.long   _01fff9_case




_01fe2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ebp
		mov    0x000050(%eax),%dx
		dec    %edx
		mov    %dx,0x000050(%eax)
		test   %dx,%dx
		jge    _01fe4b_jump
		movw   $0x000000,0x000050(%eax)

	_01fe4b_jump:
		cmpb   $0x000003,_0cf000_data
		jne    _020078_jump
		mov    _0cc300_data,%esi
		mov    0x000081(%ebp),%al
		movl   $0x000000,0x000024(%ebp)
		and    $0x0000fb,%al
		mov    _0cc304_data,%dx
		mov    %al,0x000081(%ebp)
		xor    %eax,%eax
		test   %dx,%dx
		jle    _02025a_jump

	_01fe85_jump:
		cmpw   $0x0000d3,0x000060(%esi)
		jne    _02005e_jump
		xor    %edi,%edi

	_01fe93_jump:
		lea    0x000004(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		movswl %di,%edx
		mov    %ebp,%eax
		call   _01d710_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		test   %di,%di
		jne    _01fee6_jump
		mov    %di,0x000040(%esi)
		mov    %di,0x000042(%esi)
		jmp    _01ff19_jump

	_01fee6_jump:
		mov    $0x000004,%eax
		mov    $0x000002,%edx
		call   _069140_func
		sub    %ax,%dx
		mov    %dx,0x000040(%esi)
		jne    _01ff04_jump
		movw   $0x000001,0x000040(%esi)

	_01ff04_jump:
		mov    $0x000003,%eax
		mov    $0xfffffffc,%edx
		call   _069140_func
		sub    %eax,%edx
		mov    %dx,0x000042(%esi)

	_01ff19_jump:
		movb   $0x000000,0x000071(%esi)
		movb   $0x000005,0x000072(%esi)
		cmp    $0x000005,%di
		ja     _020048_jump
		xor    %eax,%eax
		mov    %di,%ax
		jmp    *%cs:_01fe14_switch(,%eax,4)

	_01ff38_case:
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movb   $0x00002b,0x000069(%esi)
		movb   $0x000019,0x000068(%esi)
		mov    0x000081(%esi),%cl
		movb   $0x00001f,0x00006a(%esi)
		and    $0x0000f7,%cl
		mov    %cl,0x000081(%esi)
		jmp    _020048_jump

	_01ff69_case:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movb   $0x000011,0x000069(%esi)
		movb   $0x00000c,0x000068(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x000021,0x00006a(%esi)
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%esi)
		jmp    _020048_jump

	_01ff9a_case:
		mov    $0x00000b,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movb   $0x000007,0x000069(%esi)
		movb   $0x000007,0x000068(%esi)
		mov    0x000081(%esi),%bl
		movb   $0x000022,0x00006a(%esi)
		and    $0x0000f7,%bl
		mov    %bl,0x000081(%esi)
		jmp    _020048_jump

	_01ffcb_case:
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movb   $0x00001c,0x000069(%esi)
		movb   $0x000011,0x000068(%esi)
		mov    0x000081(%esi),%dh
		movb   $0x000020,0x00006a(%esi)
		and    $0x0000f7,%dh
		mov    %dh,0x000081(%esi)
		jmp    _020048_jump

	_01fff9_case:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movb   $0x000011,0x000069(%esi)
		movb   $0x00000c,0x000068(%esi)
		mov    0x000081(%esi),%dl
		movb   $0x000021,0x00006a(%esi)
		or     $0x000008,%dl
		mov    %dl,0x000081(%esi)
		jmp    _020048_jump

	_020027_case:
		mov    $0x000015,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%esi),%ch
		movb   $0x000025,0x00006a(%esi)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%esi)

	_020048_jump:
		inc    %edi
		add    $0x000084,%esi
		cmp    $0x000006,%di
		jge    _02025a_jump
		jmp    _01fe93_jump

	_02005e_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _01fe85_jump
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020078_jump:
		mov    0x00006c(%ebp),%dl
		cmp    $0x000007,%dl
		je     _02025a_jump
		cmp    $0x000006,%dl
		je     _02025a_jump
		cmp    $0x000003,%dl
		je     _02025a_jump
		lea    0x000004(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %ebp,%eax
		call   _01d710_func
		push   $0x000020
		mov    0x00000c(%esp),%ecx
		mov    0x000004(%esp),%esi
		mov    0x000010(%esp),%edi
		mov    _0cf006_data,%eax
		push   $0x000020
		sar    $0x000010,%eax
		add    $0x000005,%ecx
		add    $0x000005,%esi
		sub    $0x00000a,%edi
		push   %eax
		mov    %cx,0x000014(%esp)
		mov    %si,0x00000c(%esp)
		mov    _0cf004_data,%eax
		mov    %di,0x000018(%esp)
		sar    $0x000010,%eax
		mov    0x000016(%esp),%ebx
		push   %eax
		mov    0x000014(%esp),%eax
		mov    0x00000e(%esp),%edx
		sub    $0x00000a,%eax
		sar    $0x000010,%ebx
		mov    %ax,0x000014(%esp)
		sar    $0x000010,%edx
		mov    0x000012(%esp),%ecx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02015d_jump
		cmpb   $0x000000,_0cf000_data
		jne    _02015d_jump
		mov    $0x000001,%cl
		mov    _0cf012_data,%dx
		movw   $0x000004,0x000056(%ebp)
		inc    %edx
		mov    %cl,_0cf000_data
		mov    %dx,_0cf012_data
		cmp    $0x000006,%dx
		jl     _020154_jump
		mov    %edx,%ecx
		dec    %ecx
		mov    %cx,_0cf012_data

	_020154_jump:
		xor    %esi,%esi
		mov    %si,_0cf00e_data

	_02015d_jump:
		xor    %edx,%edx
		mov    0x00006a(%ebp),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ebp),%eax
		mov    0x00000a(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebp),%dl
		cmp    %eax,%edx
		jne    _0201bc_jump
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		mov    0x00000c(%ebp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ebp),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _0201bc_jump
		mov    $0x000001,%al
		jmp    _0201be_jump

	_0201bc_jump:
		xor    %al,%al

	_0201be_jump:
		mov    0x00006c(%ebp),%ah
		cmp    $0x000004,%ah
		jb     _02025a_jump
		jbe    _0201db_jump
		cmp    $0x000005,%ah
		je     _020210_jump
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0201db_jump:
		test   %al,%al
		je     _02025a_jump
		mov    0x000056(%ebp),%dx
		inc    %edx
		mov    %dx,0x000056(%ebp)
		cmp    $0x000004,%dx
		jge    _020209_jump
		mov    $0x000005,%edx
		mov    %ebp,%eax
		call   _01d364_func
		mov    0x00003a(%ebp),%eax
		sar    $0x000010,%eax
		sub    $0x000055,%eax
		jmp    _020257_jump

	_020209_jump:
		mov    $0x000006,%edx
		jmp    _02024a_jump

	_020210_jump:
		test   %al,%al
		je     _02025a_jump
		mov    0x000056(%ebp),%di
		inc    %edi
		mov    %di,0x000056(%ebp)
		cmp    $0x000004,%di
		jge    _020245_jump
		mov    $0x000004,%edx
		mov    %ebp,%eax
		call   _01d364_func
		mov    0x00003a(%ebp),%eax
		sar    $0x000010,%eax
		add    $0x000047,%eax
		mov    %eax,0x000028(%ebp)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020245_jump:
		mov    $0x000007,%edx

	_02024a_jump:
		mov    %ebp,%eax
		call   _01d364_func
		mov    0x00003a(%ebp),%eax
		sar    $0x000010,%eax

	_020257_jump:
		mov    %eax,0x000028(%ebp)

	_02025a_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020264_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		cmpw   $0x000000,0x000042(%eax)
		jle    _0202bb_jump
		xor    %eax,%eax
		mov    0x00002c(%ebx),%edx
		mov    0x000069(%ebx),%al
		add    %edx,%eax
		cmp    $0x000108,%eax
		jle    _0202bb_jump
		mov    0x00003e(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,0x000040(%ebx)
		mov    0x000040(%ebx),%edx
		sar    $0x000010,%edx
		neg    %edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,0x000042(%ebx)
		test   %ax,%ax
		jne    _0202b1_jump
		movb   $0x0000ff,0x000072(%ebx)

	_0202b1_jump:
		mov    $0x000005,%al
		mov    0x000071(%ebx),%ah
		sub    %ah,%al
		mov    %al,0x000071(%ebx)

	_0202bb_jump:
		pop    %edx
		pop    %ebx
		ret    



_0202c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    $0x000054,%eax
		call   _06fa90_func
		mov    0x000028(%edx),%ebx
		movw   $0x00ffff,0x000040(%edx)
		add    $0x000014,%ebx
		mov    %edx,%eax
		mov    %ebx,0x000028(%edx)
		call   _07906c_func
		mov    0x000028(%edx),%ecx
		movw   $0x000001,0x000040(%edx)
		sub    $0x000028,%ecx
		mov    %edx,%eax
		mov    %ecx,0x000028(%edx)
		call   _07906c_func
		mov    0x000028(%edx),%esi
		add    $0x000014,%esi
		mov    %edx,%eax
		mov    %esi,0x000028(%edx)
		call   _076fac_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020314_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000032(%eax),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		mov    0x000050(%ecx),%ax
		cmp    $0x000002,%ax
		jb     _020340_jump
		jbe    _02035e_jump
		cmp    $0x000004,%ax
		je     _020390_jump
		jmp    _0203da_jump

	_020340_jump:
		test   %ax,%ax
		jne    _0203da_jump
		mov    $0x000003,%al
		mov    0x000071(%ecx),%bl
		movw   $0x00fffb,0x000042(%ecx)
		sub    %bl,%al
		mov    %al,0x000071(%ecx)
		jmp    _0203da_jump

	_02035e_jump:
		mov    $0x000003,%al
		mov    0x000071(%ecx),%dl
		movw   $0x00fffb,0x000042(%ecx)
		sub    %dl,%al
		mov    0x000081(%ecx),%dh
		mov    %al,0x000071(%ecx)
		test   $0x000008,%dh
		je     _020380_jump
		mov    $0xffffff7e,%eax
		jmp    _020385_jump

	_020380_jump:
		mov    $0x000019,%eax

	_020385_jump:
		add    0x000028(%ecx),%eax
		mov    %ax,_0cf01a_data
		jmp    _0203da_jump

	_020390_jump:
		mov    %ecx,%eax
		call   _0202c0_func
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0cdbee_data,%dx
		jne    _0203da_jump
		movw   $0x00ffff,_0cdbee_data
		mov    $0x000002,%ebx
		mov    $_0cdba4_data,%eax
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d374_func

	_0203da_jump:
		mov    %ecx,%eax
		call   _0255d0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0203e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _020502_jump

	_020405_jump:
		cmpw   $0x00007a,0x000060(%ecx)
		jne    _0204f2_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0204f2_jump
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		mov    _0cf014_data,%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		test   $0x000001,%al
		jne    _02044d_jump
		mov    0x000081(%ecx),%al
		or     $0x000008,%al
		mov    $0xffffffec,%edx
		mov    %al,0x000081(%ecx)
		jmp    _020461_jump

	_02044d_jump:
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    $0x000104,%edx
		mov    %ah,0x000081(%ecx)

	_020461_jump:
		mov    %ecx,%eax
		call   _05c7fc_func
		movswl %dx,%eax
		movw   $0x00ffff,0x000046(%ecx)
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%ebx),%eax
		sub    $0x000014,%eax
		mov    %eax,0x00002c(%ecx)
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f304_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		mov    0x000081(%ecx),%dl
		movb   $0x000002,0x00006d(%ecx)
		and    $0x0000bf,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000081(%ecx),%dh
		movb   $0x000002,0x00006c(%ecx)
		test   $0x000008,%dh
		je     _0204cb_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		jmp    _0204d4_jump

	_0204cb_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_0204d4_jump:
		call   _05f030_func
		mov    %ecx,%eax
		call   _01db8c_func
		cmpw   $0x000000,_095bac_data
		jne    _020502_jump
		movb   $0x000001,0x000076(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0204f2_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _020405_jump

	_020502_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020508_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,0x000004(%esp)
		mov    _0cc300_data,%esi
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _020811_jump

	_02052d_jump:
		cmpw   $0x000061,0x000060(%esi)
		jne    _020801_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _020801_jump
		cmpw   $0x000004,0x000004(%esp)
		jne    _020553_jump
		andb   $0x0000df,0x000081(%esi)
		jmp    _02055a_jump

	_020553_jump:
		orb    $0x000020,0x000081(%esi)

	_02055a_jump:
		cmpw   $0x000000,0x000004(%esp)
		sete   %al
		lea    0x000010(%esp),%ecx
		xor    %ah,%ah
		mov    0x000081(%esi),%bl
		mov    %eax,%edx
		and    $0x0000f7,%bl
		lea    0x000008(%esp),%eax
		add    $0x000008,%edx
		mov    %bl,0x000081(%esi)
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		movswl %dx,%edx
		mov    %edi,%eax
		call   _01d710_func
		mov    0x000004(%esp),%ebx
		cmp    $0x000001,%bx
		jne    _02062c_jump
		mov    -0x000002(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		mov    0x000081(%edi),%bl
		add    %eax,%edx
		test   $0x000008,%bl
		je     _0205d0_jump
		mov    $0x000040,%eax
		jmp    _0205d5_jump

	_0205d0_jump:
		mov    $0xffffffc0,%eax

	_0205d5_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000028,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _0205f7_jump
		mov    $0x00000c,%eax
		jmp    _0205fc_jump

	_0205f7_jump:
		mov    $0xfffffff4,%eax

	_0205fc_jump:
		movw   $0x000000,0x000042(%esi)
		mov    %ax,0x000040(%esi)
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000081(%esi)
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _020780_jump

	_02062c_jump:
		test   %bx,%bx
		jne    _0206bc_jump
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		mov    0x000081(%edi),%ch
		add    %eax,%edx
		test   $0x000008,%ch
		je     _020660_jump
		mov    $0x000009,%eax
		jmp    _020665_jump

	_020660_jump:
		mov    $0xfffffff7,%eax

	_020665_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000028,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _020687_jump
		mov    $0x000002,%eax
		jmp    _02068c_jump

	_020687_jump:
		mov    $0xfffffffe,%eax

	_02068c_jump:
		movw   $0x00fffb,0x000042(%esi)
		mov    %ax,0x000040(%esi)
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _020780_jump

	_0206bc_jump:
		cmp    $0x000003,%bx
		jne    _0206f2_jump
		testb  $0x000008,0x000081(%edi)
		je     _0206d2_jump
		mov    $0x000078,%edx
		jmp    _0206d7_jump

	_0206d2_jump:
		mov    $0xffffffdc,%edx

	_0206d7_jump:
		mov    0x000028(%edi),%eax
		add    %edx,%eax
		mov    %eax,0x000028(%esi)
		mov    0x00002c(%edi),%eax
		sub    $0x0000b9,%eax
		movw   $0x000004,0x000042(%esi)
		jmp    _020777_jump

	_0206f2_jump:
		cmp    $0x00000a,%bx
		jge    _02071e_jump
		mov    _0cdbcc_data,%eax
		mov    %eax,0x000028(%esi)
		cmp    $0x000028,%eax
		jge    _02070c_jump
		movl   $0x000028,0x000028(%esi)

	_02070c_jump:
		cmpl   $0x0000c8,0x000028(%esi)
		jle    _020769_jump
		movl   $0x0000c8,0x000028(%esi)
		jmp    _020769_jump

	_02071e_jump:
		testb  $0x000008,0x000081(%edi)
		je     _02074b_jump
		xor    %edx,%edx
		mov    _0cf00a_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    $0x0000f0,%edx
		add    %eax,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		jmp    _020769_jump

	_02074b_jump:
		xor    %edx,%edx
		mov    _0cf00a_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		add    %eax,%eax
		sub    $0x000014,%eax
		mov    %eax,0x000028(%esi)

	_020769_jump:
		mov    0x00002c(%edi),%eax
		sub    $0x0000c8,%eax
		movw   $0x000000,0x000042(%esi)

	_020777_jump:
		mov    %eax,0x00002c(%esi)
		movw   $0x000000,0x000040(%esi)

	_020780_jump:
		mov    0x000004(%esp),%ebx
		movw   $0x000026,0x000056(%esi)
		cmp    $0x000003,%bx
		je     _020796_jump
		movb   $0x00000a,0x000072(%esi)
		jmp    _02079a_jump

	_020796_jump:
		movb   $0x000007,0x000072(%esi)

	_02079a_jump:
		cmpw   $0x000000,0x000004(%esp)
		jne    _0207a6_jump
		movb   $0x000003,0x000072(%esi)

	_0207a6_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		movb   $0x000002,0x00006d(%esi)
		mov    %ebx,%edx
		movb   $0x000006,0x00006c(%esi)
		call   _05f030_func
		mov    %esi,%eax
		call   _01db8c_func
		mov    0x000081(%esi),%al
		or     $0x000004,%al
		mov    0x000004(%esp),%edi
		mov    %al,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f304_func
		movb   $0x000000,0x000071(%esi)
		cmp    $0x00000a,%di
		jge    _0207f3_jump
		mov    %di,0x000050(%esi)
		jmp    _020811_jump

	_0207f3_jump:
		movw   $0x000004,0x000050(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_020801_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _02052d_jump

	_020811_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02081c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0208e6_jump

	_020837_jump:
		cmpw   $0x000061,0x000060(%ecx)
		jne    _0208d6_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0208d6_jump
		movl   $0xffffffd8,0x000028(%ecx)
		movl   $0x0000a0,0x00002c(%ecx)
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%ax
		movw   $0x000026,0x000056(%ecx)
		add    $0x000019,%eax
		movb   $0x000003,0x000072(%ecx)
		mov    %ax,_0cf01a_data
		mov    0x000081(%ecx),%ah
		movb   $0x000002,0x00006d(%ecx)
		and    $0x0000f7,%ah
		mov    %ebx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movb   $0x000006,0x00006c(%ecx)
		call   _05f030_func
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000024,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f304_func
		movb   $0x000000,0x000071(%ecx)
		movw   $0x000002,0x000050(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0208d6_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _020837_jump

	_0208e6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0208ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		call   _01db8c_func
		movl   $0x000000,0x000024(%edx)
		mov    $0x00000a,%bl
		movw   $0x000000,0x000050(%edx)
		mov    $0x000001,%cl
		mov    0x000081(%edx),%ah
		movb   $0x00000a,0x000072(%edx)
		xor    %esi,%esi
		or     $0x000004,%ah
		mov    %bl,_0cefe9_data
		mov    %cl,_0cf00a_data
		mov    %si,_0cf016_data
		mov    %si,_0ceda2_data
		xor    %ebx,%ebx
		mov    %ah,0x000081(%edx)
		mov    $0xffffffff,%eax
		mov    %bx,_0cf00c_data
		mov    %bx,_0cf012_data
		mov    %bx,_0cf00e_data
		mov    %bx,_0cf014_data
		mov    %bx,_0ceffc_data
		xor    %dl,%dl
		mov    %bx,_0cf004_data
		mov    %dl,_0cefe6_data
		mov    %dl,_0cefe1_data
		mov    %ax,_0ceffe_data
		xor    %bh,%bh
		mov    $0x00270f,%edx
		mov    %bh,_0cf000_data
		mov    %dx,_0cf01a_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020998_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpw   $0x000000,_0cf00c_data
		je     _020a08_jump
		call   _0202c0_func
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000034(%ecx),%bx
		cmp    _0cdbee_data,%bx
		jne    _0209f4_jump
		mov    $0xffffffff,%esi
		mov    $0x000002,%ebx
		mov    $_0cdba4_data,%eax
		mov    %si,_0cdbee_data
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d374_func

	_0209f4_jump:
		xor    %edi,%edi
		mov    $0x00270f,%eax
		mov    %di,_0cf00c_data
		mov    %ax,_0cf01a_data

	_020a08_jump:
		cmpw   $0x000003,0x000050(%ecx)
		jne    _020a31_jump
		mov    0x000056(%ecx),%bx
		dec    %bx
		mov    %bx,0x000056(%ecx)
		jne    _020a31_jump
		mov    0x000081(%ecx),%dl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)

	_020a31_jump:
		mov    0x000040(%ecx),%di
		mov    $0x000014,%eax
		test   %di,%di
		jge    _020a44_jump
		mov    $0xffffffec,%eax

	_020a44_jump:
		xor    %edx,%edx
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%dl
		cwtl   
		add    %ebx,%edx
		add    %edx,%eax
		mov    0x00002c(%ecx),%edx
		mov    _0cdb96_data,%ebx
		add    $0x000028,%edx
		sar    $0x000010,%ebx
		sar    $0x000004,%edx
		imul   %ebx,%edx
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _020bd2_jump
		mov    0x000050(%ecx),%ax
		test   %ax,%ax
		jbe    _020bb6_jump
		cmp    $0x000001,%ax
		jne    _020bd2_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020ac6_jump
		neg    %eax

	_020ac6_jump:
		cmp    $0x00000c,%eax
		jne    _020aed_jump
		cmpw   $0x000000,0x000040(%ecx)
		jle    _020ad9_jump
		mov    $0xfffffff3,%eax
		jmp    _020ade_jump

	_020ad9_jump:
		mov    $0x00000d,%eax

	_020ade_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		jmp    _020bd2_jump

	_020aed_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020af9_jump
		neg    %eax

	_020af9_jump:
		cmp    $0x00000d,%eax
		jne    _020b21_jump
		cmpw   $0x000000,0x000040(%ecx)
		jle    _020b0c_jump
		mov    $0xfffffff2,%eax
		jmp    _020b11_jump

	_020b0c_jump:
		mov    $0x00000e,%eax

	_020b11_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020b21_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020b2d_jump
		neg    %eax

	_020b2d_jump:
		cmp    $0x00000e,%eax
		jne    _020b55_jump
		cmpw   $0x000000,0x000040(%ecx)
		jle    _020b40_jump
		mov    $0xfffffff1,%eax
		jmp    _020b45_jump

	_020b40_jump:
		mov    $0x00000f,%eax

	_020b45_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020b55_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020b61_jump
		neg    %eax

	_020b61_jump:
		cmp    $0x00000f,%eax
		jne    _020bd2_jump
		mov    %ecx,%eax
		call   _0202c0_func
		mov    0x000081(%ecx),%bl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0cdbee_data,%dx
		jne    _020bd2_jump
		movw   $0x00ffff,_0cdbee_data
		mov    $0x000002,%ebx
		mov    $_0cdba4_data,%eax
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020bb6_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000002,0x000050(%ecx)

	_020bd2_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020bd8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0cc300_data,%esi
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _020d2f_jump

	_020bfa_jump:
		cmpw   $0x000079,0x000060(%esi)
		jne    _020d1f_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _020d1f_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		movw   $0x000000,0x000042(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbw (%edx,%eax,8),%ax
		testb  $0x000008,0x000081(%esi)
		je     _020c5b_jump
		cwtl   
		jmp    _020c5e_jump

	_020c5b_jump:
		cwtl   
		neg    %eax

	_020c5e_jump:
		mov    %ax,0x000040(%esi)
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x00000a,%edx
		mov    %edi,%eax
		call   _01d710_func
		mov    0x000006(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    0x000081(%edi),%bl
		mov    %eax,%edx
		test   $0x000008,%bl
		je     _020cab_jump
		mov    $0x000010,%eax
		jmp    _020cb0_jump

	_020cab_jump:
		mov    $0xfffffff0,%eax

	_020cb0_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _05f030_func
		mov    %esi,%eax
		call   _01db8c_func
		mov    0x000081(%esi),%bh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f304_func
		mov    %esi,%eax
		call   _076fac_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020d1f_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _020bfa_jump

	_020d2f_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020d38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0cc300_data,%esi
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _020f5b_jump

	_020d5a_jump:
		cmpw   $0x000087,0x000060(%esi)
		jne    _020f4b_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _020f4b_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		mov    0x000081(%esi),%dh
		movw   $0x000000,0x000042(%esi)
		test   $0x000008,%dh
		jne    _020daa_jump
		movw   $0x000007,0x000040(%esi)
		jmp    _020db0_jump

	_020daa_jump:
		movw   $0x00fff9,0x000040(%esi)

	_020db0_jump:
		lea    0x000004(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000010(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000003,%edx
		call   _01d710_func
		testb  $0x000008,0x000081(%edi)
		jne    _020ddc_jump
		xor    %ecx,%ecx
		mov    %cx,0x000008(%esp)

	_020ddc_jump:
		mov    0x00000a(%esp),%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%edx
		mov    0x000028(%esi),%ax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%esi)
		sub    $0x000008,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _05f030_func
		mov    %esi,%eax
		call   _01db8c_func
		mov    0x000081(%esi),%bh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f304_func
		mov    0x000105(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000105(%esi)
		mov    %cl,%ch
		add    $0x000084,%esi
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		mov    0x000081(%esi),%al
		movw   $0x000000,0x000042(%esi)
		test   $0x000008,%al
		jne    _020e92_jump
		movw   $0x000007,0x000040(%esi)
		jmp    _020e98_jump

	_020e92_jump:
		movw   $0x00fff9,0x000040(%esi)

	_020e98_jump:
		lea    0x000004(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000010(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000002,%edx
		call   _01d710_func
		testb  $0x000008,0x000081(%edi)
		jne    _020ec4_jump
		xor    %edi,%edi
		mov    %di,0x000008(%esp)

	_020ec4_jump:
		mov    0x00000a(%esp),%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%edx
		mov    0x000028(%esi),%ax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%esi)
		sub    $0x000008,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _05f030_func
		mov    %esi,%eax
		call   _01db8c_func
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f304_func
		mov    %esi,%eax
		call   _076fac_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020f4b_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _020d5a_jump

	_020f5b_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_020f80_switch:
		.long   _020fc2_case
		.long   _020fdb_case
		.long   _020ff4_case
		.long   _02100e_case
		.long   _021028_case
		.long   _021041_case
		.long   _02105a_case
		.long   _021084_case




_020fa0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cf010_data,%ax
		cmp    $0x000007,%ax
		ja     _021099_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_020f80_switch(,%eax,4)

	_020fc2_case:
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x000001,_0cefe6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020fdb_case:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x000002,_0cefe6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020ff4_case:
		mov    $0x000006,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000003,%ch
		call   _01d374_func
		mov    %ch,_0cefe6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02100e_case:
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000004,%cl
		call   _01d374_func
		mov    %cl,_0cefe6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021028_case:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x000005,_0cefe6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021041_case:
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x00000c,_0cefe6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02105a_case:
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d374_func
		movb   $0x00000b,_0cefe6_data
		mov    $0x000001,%dh
		movw   $0x000023,0x000056(%ecx)
		mov    %dh,_0cf00a_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021084_case:
		mov    $0x000016,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x00000d,_0cefe6_data

	_021099_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0210a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf00e_data,%cx
		mov    %eax,%edx
		inc    %ecx
		cmp    $0x000007,%cx
		jge    _0210df_jump
		mov    _0cf010_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		lea    0x000000(,%eax,4),%ebx
		movswl %cx,%eax
		mov    _095bae_data(%ebx,%eax,4),%ax
		mov    %ax,_0cf010_data
		jmp    _0210e8_jump

	_0210df_jump:
		movw   $0x0000ff,_0cf010_data

	_0210e8_jump:
		cmpw   $0x0000ff,_0cf010_data
		jne    _021115_jump
		mov    _0cf010_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		mov    _095bae_data(,%eax,4),%ax
		xor    %ecx,%ecx
		mov    %ax,_0cf010_data

	_021115_jump:
		mov    _0cf010_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		lea    0x000000(,%eax,4),%ebx
		movswl %cx,%eax
		mov    _095bb0_data(%ebx,%eax,4),%al
		mov    %al,_0cefe9_data
		mov    %edx,%eax
		mov    %cx,_0cf00e_data
		call   _020fa0_func
		mov    _0cf00e_data,%cx
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021158_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,_0cefe9_data
		je     _02118a_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _05f030_func
		movb   $0x000006,_0cefe6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02118a_jump:
		mov    %ecx,%eax
		call   _0210a0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021198_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		movw   $0x000000,0x000042(%eax)
		mov    $0x000006,%edx
		movw   $0x000000,0x000040(%eax)
		call   _0255d0_func
		mov    %ebx,%eax
		call   _01d364_func
		mov    %ebx,%eax
		mov    $0x000001,%edx
		call   _053b78_func
		mov    %dx,_0ceda0_data
		pop    %edx
		pop    %ebx
		ret    

_0211d0_switch:
		.long   _021545_case
		.long   _0215b3_case
		.long   _021623_case
		.long   _021740_case
		.long   _0217b0_case
		.long   _021818_case
		.long   _02188d_case
		.long   _0218ba_case
		.long   _021970_case
		.long   _0219e8_case
		.long   _021a89_case
		.long   _021acb_case
		.long   _021b8a_case
		.long   _021c1b_case




_021208_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    $0x000001,%ah
		mov    _0cf016_data,%dx
		mov    %ah,_0cefbd_data
		test   %dx,%dx
		je     _021254_jump
		mov    _0cf018_data,%bx
		dec    %ebx
		mov    %bx,_0cf018_data
		test   %bx,%bx
		jge    _021254_jump
		mov    $0x000032,%edi
		mov    %esi,%eax
		mov    %di,_0cf018_data
		call   _0203e8_func
		decw   _0cf016_data

	_021254_jump:
		mov    %esp,%eax
		mov    $_0cf008_data,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $_0cf006_data,%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x000028(%esi),%ax
		mov    %eax,0x000004(%esp)
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %eax,(%esp)
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _0212d7_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _0212d7_jump
		movb   $0x000001,_0cefe5_data
		jmp    _0212df_jump

	_0212d7_jump:
		xor    %dh,%dh
		mov    %dh,_0cefe5_data

	_0212df_jump:
		cmpb   $0x000002,_0cf000_data
		jne    _02133f_jump
		cmpb   $0x000000,_0cefe5_data
		je     _02133f_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000077(%esi),%al
		mov    0x000076(%esi),%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _021319_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		mov    $0x000007,%ch
		call   _05f030_func
		mov    %ch,_0cefe6_data

	_021319_jump:
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0cf002_data,%bl
		mov    _0cf001_data,%dl
		call   _01d374_func
		movb   $0x000001,_0cefe9_data
		mov    _0cf004_data,%al
		mov    %al,0x000070(%esi)

	_02133f_jump:
		cmpb   $0x000001,_0cf000_data
		jne    _0213c8_jump
		mov    0x00006d(%esi),%al
		mov    $0x000009,%ebx
		mov    %al,_0cf001_data
		mov    0x00006c(%esi),%al
		xor    %edx,%edx
		mov    %al,_0cf002_data
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000002,%dl
		mov    0x000076(%esi),%bl
		xor    %eax,%eax
		mov    %dl,_0cf000_data
		dec    %bl
		mov    0x000070(%esi),%al
		movw   $0x000000,0x000040(%esi)
		xor    %dh,%dh
		mov    %bl,0x000076(%esi)
		mov    %dh,_0cefe5_data
		mov    %ax,_0cf004_data
		cmp    $0x000001,%bl
		jae    _0213c8_jump
		mov    $0x000003,%cl
		mov    $0x000014,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    %cl,_0cf000_data
		call   _01d374_func
		mov    $0x0001a4,%edx
		movw   $0x000000,0x000040(%esi)
		mov    $0x000001,%ch
		mov    %dx,_0cf004_data
		mov    %ch,_0cefca_data

	_0213c8_jump:
		cmpb   $0x000003,_0cf000_data
		jne    _02140f_jump
		mov    _0cf004_data,%ax
		dec    %eax
		mov    %ax,_0cf004_data
		cmp    $0x000001,%ax
		jge    _021ce7_jump
		movb   $0x000001,_0cefc8_data
		mov    _0ced88_data,%ch
		mov    $0x0003e7,%ebx
		or     $0x000008,%ch
		mov    %bx,_0cf004_data
		mov    %ch,_0ced88_data
		jmp    _021ce7_jump

	_02140f_jump:
		mov    0x000070(%esi),%al
		cmp    $0x000001,%al
		jb     _021425_jump
		jbe    _021434_jump
		cmp    $0x000002,%al
		je     _02152b_jump
		jmp    _021ccd_jump

	_021425_jump:
		test   %al,%al
		jne    _021ccd_jump
		andb   $0x0000f7,0x000081(%esi)

	_021434_jump:
		cmpb   $0x000001,0x000070(%esi)
		jne    _021441_jump
		orb    $0x000008,0x000081(%esi)

	_021441_jump:
		mov    %esi,%eax
		call   _053ce4_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _02149d_jump
		mov    0x000081(%esi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    $0x000006,%edx
		mov    %bh,(%eax)
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000008,%cl
		call   _05f030_func
		mov    %cl,_0cefe6_data

	_02149d_jump:
		cmpb   $0x000007,_0cefe6_data
		jne    _02151f_jump
		testb  $0x000008,0x000081(%esi)
		je     _0214ba_jump
		mov    $0x00000a,%eax
		jmp    _0214bf_jump

	_0214ba_jump:
		mov    $0xfffffff6,%eax

	_0214bf_jump:
		mov    _0cf018_data,%edx
		sar    $0x000010,%edx
		add    $0x000004,%edx
		add    %edx,%eax
		cmp    0x000028(%esi),%eax
		jle    _02151f_jump
		testb  $0x000008,0x000081(%esi)
		je     _0214e2_jump
		mov    $0x00000a,%eax
		jmp    _0214e7_jump

	_0214e2_jump:
		mov    $0xfffffff6,%eax

	_0214e7_jump:
		mov    _0cf018_data,%edx
		sar    $0x000010,%edx
		sub    $0x000004,%edx
		mov    0x000028(%esi),%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jge    _02151f_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		movb   $0x000009,_0cefe6_data

	_02151f_jump:
		mov    %esi,%eax
		call   _0252c0_func
		jmp    _021ccd_jump

	_02152b_jump:
		mov    _0cefe6_data,%al
		cmp    $0x00000d,%al
		ja     _021ccd_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0211d0_switch(,%eax,4)

	_021545_case:
		cmpb   $0x000000,_0cf00a_data
		je     _021563_jump
		mov    $0x000001,%dl
		call   _02081c_func
		mov    %dl,_0cefe1_data
		xor    %dh,%dh
		mov    %dh,_0cf00a_data

	_021563_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _021ccd_jump
		cmpb   $0x000000,_0cefe1_data
		je     _021ccd_jump
		movb   $0x000000,0x00006b(%esi)
		mov    _095bb0_data,%al
		xor    %ecx,%ecx
		mov    %al,_0cefe9_data
		mov    _095bae_data,%ax
		mov    %cx,_0cf012_data
		mov    %ax,_0cf010_data
		mov    %esi,%eax
		mov    %cx,_0cf00e_data
		call   _020fa0_func
		jmp    _021ccd_jump

	_0215b3_case:
		mov    0x00006c(%esi),%bh
		cmp    $0x000004,%bh
		jne    _02160a_jump
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _02160a_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %bh,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _02160a_jump
		cmpw   $0x000000,_0ceda2_data
		jne    _02160a_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		mov    %bx,_0ceda2_data
		call   _020508_func

	_02160a_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _021ccd_jump
		mov    %esi,%eax
		call   _021158_func
		jmp    _021ccd_jump

	_021623_case:
		cmpb   $0x00000b,0x00006c(%esi)
		jne    _021663_jump
		cmpb   $0x000017,0x00006b(%esi)
		jne    _021663_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _021663_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _020508_func

	_021663_jump:
		cmpb   $0x000003,0x00006c(%esi)
		jne    _0216e9_jump
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _0216e9_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _0216e9_jump
		cmpw   $0x000000,_0ceda2_data
		jne    _0216e9_jump
		mov    $0x000001,%edi
		mov    $0x000003,%edx
		mov    %esi,%eax
		mov    %di,_0ceda2_data
		call   _020508_func
		cmpw   $0x000000,_095bac_data
		jne    _0216d6_jump
		mov    $0x000003,%edx
		jmp    _0216db_jump

	_0216d6_jump:
		mov    $0x000001,%edx

	_0216db_jump:
		xor    %eax,%eax
		mov    _0cefe9_data,%al
		add    %edx,%eax
		mov    %al,_0cefe9_data

	_0216e9_jump:
		cmpb   $0x00000a,0x00006c(%esi)
		jne    _021716_jump
		cmpb   $0x000000,_0cefe5_data
		je     _021716_jump
		mov    _0cefe9_data,%al
		dec    %al
		mov    %al,_0cefe9_data
		je     _021716_jump
		mov    $0x00000a,%edx
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01d364_func

	_021716_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x00000b,%dl
		jne    _021ccd_jump
		cmpb   $0x000000,_0cefe5_data
		je     _021ccd_jump
		mov    %dl,_0cefe6_data
		movw   $0x000023,0x000056(%esi)
		jmp    _021ccd_jump

	_021740_case:
		mov    0x00006c(%esi),%bl
		cmp    $0x000006,%bl
		jne    _021797_jump
		cmpb   $0x000040,0x00006b(%esi)
		jne    _021797_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %bl,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _021797_jump
		cmpw   $0x000000,_095bac_data
		setne  %al
		and    $0x0000ff,%eax
		xor    %ebx,%ebx
		add    $0x000003,%eax
		mov    %bx,_0cf018_data
		mov    %ax,_0cf016_data

	_021797_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _021ccd_jump
		mov    %esi,%eax
		call   _021158_func
		jmp    _021ccd_jump

	_0217b0_case:
		cmpb   $0x000007,0x00006c(%esi)
		jne    _0217ff_jump
		cmpb   $0x00002c,0x00006b(%esi)
		jne    _0217ff_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _0217ff_jump
		mov    %esi,%eax
		call   _020d38_func
		mov    0x000032(%esi),%edx
		mov    $0x000072,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func

	_0217ff_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _021ccd_jump
		mov    %esi,%eax
		call   _021158_func
		jmp    _021ccd_jump

	_021818_case:
		cmpb   $0x000002,0x00006c(%esi)
		jne    _021863_jump
		cmpb   $0x000015,0x00006b(%esi)
		jne    _021863_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _021863_jump
		mov    %esi,%eax
		call   _020bd8_func
		mov    0x000032(%esi),%edx
		mov    $0x000072,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func

	_021863_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _021ccd_jump
		mov    $0x000001,%edx
		mov    $0x00000a,%ch
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01d364_func
		mov    %ch,_0cefe6_data
		jmp    _021ccd_jump

	_02188d_case:
		cmpb   $0x000000,_0cefe5_data
		je     _021ccd_jump
		mov    _0cefe9_data,%ah
		dec    %ah
		mov    %ah,_0cefe9_data
		jne    _021ccd_jump
		mov    %esi,%eax
		call   _0210a0_func
		jmp    _021ccd_jump

	_0218ba_case:
		cmpb   $0x000008,0x00006c(%esi)
		jne    _0218fc_jump
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _0218fc_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _0218fc_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _020508_func
		jmp    _021ccd_jump

	_0218fc_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _021ccd_jump
		mov    _0cefe9_data,%bh
		dec    %bh
		mov    %bh,_0cefe9_data
		jne    _02195f_jump
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _021949_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _05f030_func
		jmp    _021ccd_jump

	_021949_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _05f030_func
		jmp    _021ccd_jump

	_02195f_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d364_func
		jmp    _021ccd_jump

	_021970_case:
		cmpb   $0x000000,_0cefe5_data
		je     _021ccd_jump
		cmpb   $0x000009,0x00006c(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _021ccd_jump
		cmpb   $0x000000,_0cf00a_data
		jne    _0219da_jump
		mov    _0cf010_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		xor    %edi,%edi
		mov    _095bb0_data(,%eax,4),%dl
		mov    _095bae_data(,%eax,4),%ax
		mov    %di,_0cf00e_data
		mov    %ax,_0cf010_data
		mov    %esi,%eax
		mov    %dl,_0cefe9_data
		call   _020fa0_func
		jmp    _021ccd_jump

	_0219da_jump:
		mov    %esi,%eax
		call   _0210a0_func
		xor    %al,%al
		jmp    _021cc8_jump

	_0219e8_case:
		cmpb   $0x000014,0x00006b(%esi)
		jne    _021a2d_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _021a2d_jump
		cmpb   $0x000009,0x00006c(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _021a2d_jump
		movw   $0x000001,_0cf00c_data

	_021a2d_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _021ccd_jump
		cmpb   $0x000002,_0cf000_data
		je     _021ccd_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _021a6a_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		jmp    _021a74_jump

	_021a6a_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx

	_021a74_jump:
		mov    %esi,%eax
		call   _05f030_func
		xor    %esi,%esi
		mov    %si,_0cf00c_data
		jmp    _021ccd_jump

	_021a89_case:
		cmpb   $0x000000,_0cefe5_data
		je     _021ccd_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		movb   $0x000000,0x00006b(%esi)
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _021949_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _05f030_func
		jmp    _021ccd_jump

	_021acb_case:
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%al
		jb     _021ae1_jump
		jbe    _021ae9_jump
		cmp    $0x000006,%al
		je     _021b4c_jump
		jmp    _021ccd_jump

	_021ae1_jump:
		test   %al,%al
		jne    _021ccd_jump

	_021ae9_jump:
		mov    0x000056(%esi),%dx
		dec    %edx
		mov    %dx,0x000056(%esi)
		cmp    $0x000001,%dx
		jle    _021b22_jump
		movw   $0x00fff8,0x000042(%esi)
		mov    0x000081(%esi),%dh
		movb   $0x000000,0x000071(%esi)
		test   $0x000008,%dh
		je     _021b14_jump
		mov    $0x000004,%eax
		jmp    _021b19_jump

	_021b14_jump:
		mov    $0xfffffffc,%eax

	_021b19_jump:
		mov    %ax,0x000040(%esi)
		jmp    _021ccd_jump

	_021b22_jump:
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _01d364_func
		testb  $0x000008,0x000081(%esi)
		je     _021b3e_jump
		mov    $0x000002,%eax
		jmp    _021b43_jump

	_021b3e_jump:
		mov    $0xfffffffe,%eax

	_021b43_jump:
		mov    %ax,0x000040(%esi)
		jmp    _021ccd_jump

	_021b4c_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _021ccd_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _021949_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _05f030_func
		jmp    _021ccd_jump

	_021b8a_case:
		cmpb   $0x000004,0x00006c(%esi)
		jne    _021bed_jump
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _021bed_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _021bed_jump
		cmpw   $0x000000,_0ceda2_data
		jne    _021bed_jump
		movw   $0x000001,_0ceda2_data
		xor    %eax,%eax
		mov    _0cf00a_data,%al
		add    $0x00000a,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _020508_func
		incb   _0cf00a_data

	_021bed_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _021ccd_jump
		cmpb   $0x000003,_0cf00a_data
		jne    _021ccd_jump
		xor    %ch,%ch
		mov    %esi,%eax
		mov    %ch,_0cf00a_data
		call   _021158_func
		jmp    _021ccd_jump

	_021c1b_case:
		cmpb   $0x000016,0x00006c(%esi)
		jne    _021ccd_jump
		cmpb   $0x00003f,0x00006b(%esi)
		jne    _021c5f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _021c5f_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _020508_func

	_021c5f_jump:
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _021caf_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _021caf_jump
		cmpw   $0x000000,_0ceda2_data
		jne    _021caf_jump
		mov    $0x000001,%ecx
		mov    $0x000003,%edx
		mov    %esi,%eax
		mov    %cx,_0ceda2_data
		call   _020508_func

	_021caf_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _021ccd_jump
		mov    $0x00000b,%ch
		mov    $0x000001,%al
		movw   $0x000023,0x000056(%esi)
		mov    %ch,_0cefe6_data

	_021cc8_jump:
		mov    %al,_0cf00a_data

	_021ccd_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _021ce7_jump
		cmpb   $0x000002,_0cf000_data
		jne    _021ce7_jump
		xor    %bh,%bh
		mov    %bh,_0cf000_data

	_021ce7_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021cf0_func:
		push   %ebx
		mov    %eax,%ebx
		cmp    $0x000009,%dx
		jne    _021d17_jump
		mov    $0x000008,%edx
		call   _01d364_func
		mov    $0x000007,%ah
		mov    $0x000002,%dl
		movb   $0x000000,0x00006b(%ebx)
		mov    %ah,_0cefe6_data
		mov    %dl,_0cefe9_data

	_021d17_jump:
		pop    %ebx
		ret    

_021d1c_switch:
		.long   _021f43_case
		.long   _022009_case
		.long   _022096_case
		.long   _022133_case
		.long   _02234d_case
		.long   _0224df_case




_021d34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		movzbw 0x000068(%eax),%di
		mov    0x000028(%eax),%dx
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000074(%esi),%al
		add    %edx,%edi
		add    %ebx,%eax
		xor    %edx,%edx
		add    $0x000040,%eax
		mov    0x00006a(%esi),%dl
		mov    %ax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _021db4_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _021db4_jump
		movb   $0x000001,_0cefe5_data
		jmp    _021dbc_jump

	_021db4_jump:
		xor    %dh,%dh
		mov    %dh,_0cefe5_data

	_021dbc_jump:
		cmpb   $0x000002,_0cefe6_data
		jae    _021e33_jump
		cmpb   $0x000002,0x00006d(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _021e33_jump
		mov    _0cedaa_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		mov    $0x000010,%ecx
		sub    %eax,%edx
		mov    $0xfffffff0,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _021dfc_jump
		cmp    %ecx,%eax
		jg     _021dfc_jump
		mov    $0x000001,%eax
		jmp    _021dfe_jump

	_021dfc_jump:
		xor    %eax,%eax

	_021dfe_jump:
		test   %eax,%eax
		je     _021e33_jump
		mov    -0x000002(%esp),%eax
		mov    _0cedac_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000020,%eax
		cmp    %eax,%edx
		jge    _021e33_jump
		mov    $0x000010,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_021e33_jump:
		mov    0x00006d(%esi),%ch
		cmp    $0x000001,%ch
		jne    _021e84_jump
		cmpb   $0x000000,_0cefe6_data
		jne    _021e4a_jump
		mov    %ch,_0cefe6_data

	_021e4a_jump:
		mov    %esi,%eax
		call   _053ce4_func
		cmpb   $0x000004,_0cefe6_data
		jae    _021e61_jump
		mov    %esi,%eax
		call   _0252c0_func

	_021e61_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _021e84_jump
		xor    %eax,%eax
		mov    _0ceffa_data,%edx
		mov    0x00006c(%esi),%al
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		je     _021e84_jump
		mov    %esi,%eax
		call   _01fd50_func

	_021e84_jump:
		cmpw   $0x000008,_0ceffe_data
		jge    _021f1d_jump
		mov    _0cefe6_data,%bl
		test   %bl,%bl
		je     _021f1d_jump
		cmp    $0x000005,%bl
		je     _021f1d_jump
		mov    _0cedc8_data,%ax
		cmp    _0cede8_data,%ax
		jne    _021ed1_jump
		mov    _0cee0e_data,%eax
		movswl %di,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _021ec9_jump
		mov    %ebx,%eax

	_021ec9_jump:
		mov    %ax,_0cedc8_data
		jmp    _021edf_jump

	_021ed1_jump:
		cmp    %ax,%di
		jle    _021edf_jump
		movw   $0x000001,_0cf004_data

	_021edf_jump:
		cmpw   $0x000000,_0cf004_data
		je     _021f29_jump
		cmpb   $0x000001,0x00006d(%esi)
		jne    _021f07_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    _0cedc8_data,%bx
		inc    %eax
		add    %eax,%ebx
		mov    %bx,_0cedc8_data
		jmp    _021f29_jump

	_021f07_jump:
		mov    _0cedc8_data,%dx
		mov    0x000040(%esi),%ax
		add    %eax,%edx
		mov    %dx,_0cedc8_data
		jmp    _021f29_jump

	_021f1d_jump:
		mov    _0cede8_data,%ax
		mov    %ax,_0cedc8_data

	_021f29_jump:
		mov    _0cefe6_data,%al
		cmp    $0x000005,%al
		ja     _022710_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_021d1c_switch(,%eax,4)

	_021f43_case:
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000002,_092224_data(%eax)
		jne    _021f55_jump
		mov    $0x00003c,%al
		jmp    _021f57_jump

	_021f55_jump:
		mov    $0x000028,%al

	_021f57_jump:
		xor    %edx,%edx
		mov    0x000062(%esi),%dl
		testb  $0x000002,_092224_data(%edx)
		jne    _021fc1_jump
		xor    %edx,%edx
		movswl %di,%ebx
		mov    %al,%dl
		mov    _0cedaa_data,%eax
		add    %ebx,%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jle    _022710_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _022710_jump
		cmpw   $0x000000,_0ceffc_data
		je     _022710_jump
		mov    0x000081(%esi),%bh
		mov    $0x000002,%edx
		or     $0x000008,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		mov    $0x000001,%ebx
		call   _01d374_func
		movw   $0x000002,0x000042(%esi)
		jmp    _022710_jump

	_021fc1_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _022710_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _022710_jump
		movswl %di,%edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    _0cedaa_data,%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jle    _022710_jump
		mov    $0x000001,%dh
		mov    %esi,%eax
		mov    %dh,_0cefe6_data
		call   _01fd50_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022009_case:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _022710_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		lea    0x000008(%eax),%edx
		mov    _0cdb96_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		add    %ecx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cdba0_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _022710_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fff8,0x000042(%esi)
		movw   $0x000003,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022096_case:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _022710_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		mov    _0cdb96_data,%ebx
		add    $0x000008,%eax
		sar    $0x000010,%ebx
		sar    $0x000004,%eax
		imul   %eax,%ebx
		mov    0x000028(%esi),%edx
		xor    %eax,%eax
		sub    $0x000008,%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cdba0_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _022710_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    $0xffffffff,%ecx
		movw   $0x000000,0x000042(%esi)
		mov    %cx,_0ceffe_data
		movw   $0x000000,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022133_case:
		mov    _0cedc6_data,%eax
		mov    $0x0015cc,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _022146_jump
		mov    %ebx,%eax

	_022146_jump:
		mov    _0cedaa_data,%edx
		mov    %ax,_0cedc8_data
		movswl %di,%eax
		sar    $0x000010,%edx
		add    $0x000020,%eax
		cmp    %eax,%edx
		jle    _02220a_jump
		mov    _0ceffc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02220a_jump
		mov    (%esp),%edx
		cmp    _0cedae_data,%dx
		jge    _02220a_jump
		mov    _0ceffa_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0221a3_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01fd50_func
		mov    %bx,_0ceffe_data
		jmp    _02220a_jump

	_0221a3_jump:
		mov    0x000050(%esi),%bx
		cmp    $0x0000c8,%bx
		jge    _0221de_jump
		mov    %ebx,%ecx
		inc    %ecx
		mov    %cx,0x000050(%esi)
		cmp    $0x0000c8,%cx
		jne    _0221de_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		mov    %dx,_0ceffc_data
		call   _01fd50_func
		mov    %bx,_0ceffe_data
		movw   $0x0000ff,0x000050(%esi)

	_0221de_jump:
		mov    _0cee10_data,%ax
		mov    %ax,_0cedc8_data
		cmp    %ax,%di
		jle    _02220a_jump
		mov    _0cdbe2_data,%ebx
		mov    $0x000001,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _022203_jump
		mov    %ebx,%eax

	_022203_jump:
		add    %ax,_0cedc8_data

	_02220a_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _022226_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _022226_jump
		cmpb   $0x000010,0x00006c(%esi)
		jne    _022226_jump
		mov    %esi,%eax
		call   _01fd50_func

	_022226_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _022242_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _022242_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _022242_jump
		mov    %esi,%eax
		call   _01fd50_func

	_022242_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _022710_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%al
		add    %ebp,%eax
		mov    _0cdb96_data,%ebx
		add    $0x000008,%eax
		sar    $0x000010,%ebx
		sar    $0x000004,%eax
		imul   %eax,%ebx
		mov    0x000028(%esi),%edx
		xor    %eax,%eax
		sub    $0x000008,%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cdba0_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _0222c5_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movw   $0x00fffa,0x000042(%esi)
		mov    %esi,%eax
		movw   $0x000003,0x000040(%esi)
		call   _01d374_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)

	_0222c5_jump:
		cmpb   $0x000002,0x00006d(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _022710_jump
		mov    _0cedaa_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		mov    $0x000010,%ecx
		sub    %eax,%edx
		mov    $0xfffffff0,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _022300_jump
		cmp    %ecx,%eax
		jg     _022300_jump
		mov    $0x000001,%eax
		jmp    _022302_jump

	_022300_jump:
		xor    %eax,%eax

	_022302_jump:
		test   %eax,%eax
		je     _022710_jump
		mov    -0x000002(%esp),%edx
		mov    _0cedac_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    $0x000020,%edx
		cmp    %edx,%eax
		jge    _022327_jump
		mov    $0x000010,%ebx
		jmp    _02232c_jump

	_022327_jump:
		mov    $0x000001,%ebx

	_02232c_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000042(%esi)
		mov    0x000042(%esi),%ax
		mov    %ax,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02234d_case:
		mov    _0cedc6_data,%ax
		cmp    _0cf008_data,%ax
		jle    _022366_jump
		mov    %eax,%ecx
		dec    %ecx
		mov    %cx,_0cedc6_data

	_022366_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _0223eb_jump
		mov    0x00006d(%esi),%ah
		cmp    $0x000002,%ah
		jne    _022395_jump
		cmp    0x00006c(%esi),%ah
		jne    _022395_jump
		mov    $0x000001,%ecx
		mov    %esi,%eax
		mov    %cx,_0ceffc_data
		call   _01fd50_func
		jmp    _0223eb_jump

	_022395_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0223eb_jump
		cmpb   $0x000005,0x00006c(%esi)
		jne    _0223eb_jump
		mov    _0cf006_data,%ax
		inc    %eax
		mov    %ax,_0cf006_data
		cmp    $0x000003,%ax
		jge    _0223c9_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %bx,_0ceffc_data
		call   _01fd50_func
		jmp    _0223eb_jump

	_0223c9_jump:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000005,%bh
		mov    _0cedfa_data,%ax
		mov    %bh,_0cefe6_data
		mov    %ax,_0cf008_data

	_0223eb_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _0224ad_jump
		testb  $0x000008,0x000081(%esi)
		je     _022405_jump
		mov    $0x000010,%eax
		jmp    _02240a_jump

	_022405_jump:
		mov    $0xfffffff0,%eax

	_02240a_jump:
		mov    0x000028(%esi),%ebx
		mov    0x00002c(%esi),%ecx
		xor    %edx,%edx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%esi),%dl
		mov    0x000069(%esi),%al
		add    %edx,%ebx
		add    %ecx,%eax
		mov    _0cdb96_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ebx
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _0224ad_jump
		mov    0x000081(%esi),%al
		movw   $0x000000,0x000042(%esi)
		shl    $0x000004,%al
		movw   $0x000000,0x000040(%esi)
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,0x000081(%esi)
		or     %al,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		mov    $0x000005,%ebx
		call   _01d374_func

	_0224ad_jump:
		mov    _0cedae_data,%eax
		mov    _0cedaa_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %di,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _0224cf_jump
		neg    %eax

	_0224cf_jump:
		cmp    $0x0000fa,%eax
		jle    _022710_jump
		jmp    _0226d4_jump

	_0224df_case:
		mov    _0ceffe_data,%cx
		test   %cx,%cx
		jge    _022515_jump
		mov    %ecx,%eax
		inc    %ax
		mov    %ax,_0ceffe_data
		jne    _0224ff_jump
		mov    _0cedda_data,%ax
		jmp    _02250f_jump

	_0224ff_jump:
		xor    %edx,%edx
		mov    _0cf008_data,%ax
		mov    _0cef52_data,%dl
		sub    %edx,%eax

	_02250f_jump:
		mov    %ax,_0cedc6_data

	_022515_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _02253d_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02253d_jump
		cmpb   $0x000005,0x00006c(%esi)
		jne    _02253d_jump
		mov    $0x000003,%ebx
		mov    %esi,%eax
		mov    %bx,_0ceffc_data
		call   _01fd50_func

	_02253d_jump:
		mov    0x00006d(%esi),%dl
		test   %dl,%dl
		jne    _02259b_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _02259b_jump
		cmpb   $0x000000,_0cefe5_data
		je     _022565_jump
		movw   $0x000002,_0ceffc_data
		mov    %esi,%eax
		call   _01fd50_func
		jmp    _02259b_jump

	_022565_jump:
		cmpb   $0x000015,0x00006b(%esi)
		jne    _02259b_jump
		xor    %eax,%eax
		mov    %dl,%al
		shl    $0x000002,%eax
		mov    0x00000c(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _02259b_jump
		movw   $0x00ffe2,_0ceffe_data

	_02259b_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _0226ab_jump
		testb  $0x000008,0x000081(%esi)
		je     _0225b5_jump
		mov    $0x000010,%eax
		jmp    _0225ba_jump

	_0225b5_jump:
		mov    $0xfffffff0,%eax

	_0225ba_jump:
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		lea    (%eax,%edx,1),%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		add    $0x000008,%eax
		mov    _0cdb96_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		imul   %edx,%eax
		sar    $0x000004,%ebx
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _0226ab_jump
		cmpw   $0x000003,_0ceffc_data
		jne    _022659_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movw   $0x00fffe,0x000042(%esi)
		movw   $0x000004,0x000040(%esi)
		mov    _0cedda_data,%ax
		movb   $0x0000ff,0x000072(%esi)
		mov    %ax,_0cedc6_data
		mov    _0cede8_data,%ax
		movb   $0x000000,0x000071(%esi)
		mov    %ax,_0cedc8_data
		jmp    _0226ab_jump

	_022659_jump:
		mov    0x000081(%esi),%al
		movw   $0x000000,0x000042(%esi)
		shl    $0x000004,%al
		movw   $0x000000,0x000040(%esi)
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,0x000081(%esi)
		or     %al,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		mov    $0x000005,%ebx
		call   _01d374_func

	_0226ab_jump:
		mov    _0cedae_data,%eax
		mov    _0cedaa_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %di,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _0226cd_jump
		neg    %eax

	_0226cd_jump:
		cmp    $0x000190,%eax
		jle    _022710_jump

	_0226d4_jump:
		mov    _0cedda_data,%ax
		mov    0x000081(%esi),%cl
		xor    %bh,%bh
		movl   $0x000000,0x000024(%esi)
		mov    %bh,_0cefeb_data
		and    $0x0000fb,%cl
		mov    %bh,_0cefe6_data
		mov    %ax,_0cedc6_data
		mov    _0cede8_data,%ax
		mov    %cl,0x000081(%esi)
		mov    %ax,_0cedc8_data

	_022710_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02271c_func:
		mov    0x000076(%eax),%al
		xor    %ah,%ah
		mov    %ax,_0ceffc_data
		ret    

_022728_switch:
		.long   _022775_case
		.long   _022787_case
		.long   _0227a6_case
		.long   _0227db_case




_022738_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpw   $0x000001,0x000042(%eax)
		jle    _022845_jump
		movw   $0x000000,0x000042(%eax)
		movw   $0x000000,0x000040(%eax)
		call   _0255d0_func
		mov    _0cefe6_data,%al
		cmp    $0x000003,%al
		ja     _022845_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_022728_switch(,%eax,4)

	_022775_case:
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d364_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022787_case:
		mov    %ebx,%eax
		mov    $0x000002,%dh
		call   _01fd50_func
		mov    _0ceffc_data,%ax
		mov    %dh,_0cefe6_data
		mov    %ax,0x000040(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0227a6_case:
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d364_func
		mov    $0x000003,%dl
		mov    $0xffffffff,%ecx
		mov    %dl,_0cefe6_data
		mov    0x000028(%ebx),%edx
		movw   $0x000000,0x000050(%ebx)
		sub    $0x000020,%edx
		mov    %cx,_0ceffc_data
		mov    %edx,0x000028(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0227db_case:
		mov    $0x000002,%edx
		mov    $0x0002b3,%esi
		movb   $0x000005,0x000072(%ebx)
		mov    _0ceffe_data,%cx
		movb   $0x000000,0x000071(%ebx)
		mov    %ebx,%eax
		movw   $0x000002,0x000040(%ebx)
		inc    %ecx
		xor    %edi,%edi
		mov    %cx,_0ceffe_data
		call   _01d364_func
		mov    _0cedfa_data,%ax
		mov    %si,_0cf008_data
		mov    %di,_0cf006_data
		movw   $0x000000,0x000040(%ebx)
		mov    %ax,_0cedc6_data
		cmp    %si,%ax
		jge    _022837_jump
		mov    %si,_0cedc6_data

	_022837_jump:
		mov    $0x000004,%ah
		movw   $0x000000,0x000042(%ebx)
		mov    %ah,_0cefe6_data

	_022845_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02284c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jne    _0228a8_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _0228a8_jump
		movb   $0x000001,_0cefe5_data
		jmp    _0228b0_jump

	_0228a8_jump:
		xor    %dh,%dh
		mov    %dh,_0cefe5_data

	_0228b0_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _0228e7_jump
		mov    %ecx,%eax
		call   _053ce4_func
		mov    %ecx,%eax
		call   _0252c0_func
		cmpb   $0x000000,_0cefe5_data
		je     _0228e7_jump
		xor    %eax,%eax
		mov    _0ceffa_data,%edx
		mov    0x00006c(%ecx),%al
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		je     _0228e7_jump
		mov    %ecx,%eax
		call   _01fd50_func

	_0228e7_jump:
		mov    _0cefe6_data,%al
		test   %al,%al
		jbe    _0228fd_jump
		cmp    $0x000001,%al
		je     _0229bf_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0228fd_jump:
		andb   $0x0000f7,0x000081(%ecx)
		cmpb   $0x000002,0x00006d(%ecx)
		je     _022911_jump
		mov    %ecx,%eax
		call   _0252c0_func

	_022911_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _022933_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _022933_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		mov    %dx,_0ceffc_data
		call   _01fd50_func

	_022933_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _022a34_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%esi
		mov    0x000069(%ecx),%al
		add    %esi,%eax
		mov    _0cdb96_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		mov    0x000028(%ecx),%ebx
		xor    %edx,%edx
		sub    $0x000008,%ebx
		mov    0x000068(%ecx),%dl
		add    %ebx,%edx
		sar    $0x000004,%edx
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cdba0_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _022a34_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d374_func
		movb   $0x000005,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		movw   $0x00fffe,0x000040(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0229bf_jump:
		cmp    0x00006d(%ecx),%al
		jne    _022a34_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %eax,%edx
		add    $0x000008,%edx
		mov    _0cdb96_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _022a34_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000042(%ecx)
		mov    $0x000002,%dh
		movw   $0x000000,0x000040(%ecx)
		mov    %dh,_0cefe6_data

	_022a34_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022a3c_func:
		push   %edx
		mov    %eax,%edx
		cmpw   $0x000001,0x000042(%eax)
		jle    _022a6e_jump
		movw   $0x000000,0x000042(%eax)
		movw   $0x000000,0x000040(%eax)
		call   _0252c0_func
		mov    _0cefe6_data,%al
		test   %al,%al
		jne    _022a6e_jump
		mov    %edx,%eax
		call   _01fd50_func
		movb   $0x000001,_0cefe6_data

	_022a6e_jump:
		pop    %edx
		ret    



_022a70_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x000081(%eax),%ah
		xor    %edx,%edx
		or     $0x000008,%ah
		mov    0x00006a(%ebx),%dl
		mov    %ah,0x000081(%ebx)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ebx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebx),%dl
		cmp    %eax,%edx
		jne    _022ae1_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		lea    0x000000(,%eax,8),%ecx
		mov    (%edx),%eax
		mov    0x000005(%ecx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _022ae1_jump
		movb   $0x000001,_0cefe5_data
		jmp    _022ae9_jump

	_022ae1_jump:
		xor    %dh,%dh
		mov    %dh,_0cefe5_data

	_022ae9_jump:
		mov    0x00006d(%ebx),%ch
		test   %ch,%ch
		jne    _022b45_jump
		cmpb   $0x000007,0x00006c(%ebx)
		jne    _022b2a_jump
		cmpb   $0x00002c,0x00006b(%ebx)
		jne    _022b2a_jump
		xor    %eax,%eax
		mov    %ch,%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ebx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _022b2a_jump
		mov    %ebx,%eax
		call   _020d38_func

	_022b2a_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _022b45_jump
		cmpb   $0x000000,0x00006c(%ebx)
		jne    _022b45_jump
		mov    $0x000007,%edx
		mov    %ebx,%eax
		call   _01d364_func

	_022b45_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022b4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		test   %al,%al
		jbe    _022b60_jump
		cmp    $0x000001,%al
		je     _022b67_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022b60_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_022b67_jump:
		cmpb   $0x000001,0x000070(%ecx)
		jne    _022b74_jump
		orb    $0x000008,0x000081(%ecx)

	_022b74_jump:
		mov    %ecx,%eax
		call   _053ce4_func
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %eax,%edx
		mov    _0cdb96_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		cwtl   
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0cdba0_data,%eax
		movw   $0x000000,0x000042(%ecx)
		mov    0x000002(%eax,%edx,2),%al
		and    $0x0000ff,%eax
		testb  $0x000020,_092224_data(%eax)
		je     _022ca5_jump
		mov    _0cc300_data,%edx
		mov    _0cc304_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _022c8f_jump

	_022be5_jump:
		cmpw   $0x000073,0x000060(%edx)
		jne    _022c7f_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _022c7f_jump
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movw   $0x000000,0x000040(%edx)
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%edx)
		mov    0x000028(%ecx),%eax
		sub    $0x000020,%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		sub    $0x000030,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		call   _01db8c_func
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f304_func
		movw   $0x0000ff,0x000056(%edx)
		movw   $0x00001e,0x000050(%edx)
		movw   $0x00001e,0x000052(%edx)
		movb   $0x000000,0x00006d(%edx)
		movb   $0x000004,0x00006c(%edx)
		movb   $0x000000,0x00006b(%edx)
		movw   $0x00ffff,0x000046(%edx)
		movw   $0x000000,0x000048(%edx)
		jmp    _022c8f_jump

	_022c7f_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _022be5_jump

	_022c8f_jump:
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)

	_022ca5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022cac_func:
		push   %edx
		mov    0x000070(%eax),%dl
		cmp    $0x000002,%dl
		jb     _022cca_jump
		jbe    _022cc4_jump
		cmp    $0x000003,%dl
		jne    _022cca_jump
		movw   $0x00ffff,0x000042(%eax)
		pop    %edx
		ret    

	_022cc4_jump:
		movw   $0x000000,0x000042(%eax)

	_022cca_jump:
		pop    %edx
		ret    



_022cd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    _0cc2f8_data,%ecx
		movswl (%ecx),%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0cc300_data,%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		mov    _0cc2fc_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _022db6_jump
		mov    _0cc2fc_data,%si

	_022d0a_jump:
		cmpw   $0x000082,0x000060(%ecx)
		jne    _022d8a_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _022d8a_jump
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000028(%ebx),%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%ebx),%edx
		movw   $0x000000,0x000042(%ecx)
		mov    %edx,0x00002c(%ecx)
		xor    %ebx,%ebx
		mov    0x000042(%ecx),%ax
		xor    %edx,%edx
		mov    0x00006e(%ecx),%bl
		mov    0x00006f(%ecx),%dl
		mov    %ax,0x000040(%ecx)
		mov    %ecx,%eax
		call   _01d374_func
		mov    %ecx,%eax
		call   _01db8c_func
		mov    %ecx,%eax
		call   _01db14_func
		movw   $0x00ffff,0x000046(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000048(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f304_func
		andb   $0x0000bf,0x000081(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022d8a_jump:
		inc    %eax
		movswl %ax,%ecx
		lea    0x000000(,%ecx,2),%edx
		mov    _0cc2f8_data,%ecx
		movswl (%ecx,%edx,1),%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0cc300_data,%edx
		add    %edx,%ecx
		cmp    %si,%ax
		jl     _022d0a_jump

	_022db6_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022dbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		testb  $0x000004,0x00007d(%eax)
		je     _022e3f_jump
		mov    %ecx,%eax
		call   _01d380_func
		mov    %eax,%esi
		mov    %ecx,%eax
		call   _01d4b0_func
		movswl %si,%esi
		movswl %ax,%edi
		mov    %esi,%edx
		mov    %edi,%ebx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _022e14_jump
		mov    %edi,%ebx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _022e14_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _05f030_func

	_022e14_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    0x000040(%ecx),%dx
		mov    %ax,0x000042(%ecx)
		test   %dx,%dx
		jle    _022e36_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _022e3f_jump

	_022e36_jump:
		jge    _022e3f_jump
		andb   $0x0000f7,0x000081(%ecx)

	_022e3f_jump:
		testb  $0x000008,0x00007d(%ecx)
		je     _022e55_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_022e55_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022e5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x0000ff,%dl
		mov    0x000070(%eax),%dh
		test   %dh,%dh
		jne    _022e7b_jump
		mov    0x000081(%eax),%cl
		or     $0x000008,%cl
		mov    $0x000003,%dl
		mov    %cl,0x000081(%eax)
		jmp    _022e91_jump

	_022e7b_jump:
		cmp    $0x000001,%dh
		jne    _022e91_jump
		mov    0x000081(%eax),%bh
		and    $0x0000f7,%bh
		mov    $0x000002,%dl
		mov    %bh,0x000081(%eax)

	_022e91_jump:
		cmp    $0x0000ff,%dl
		je     _022ea6_jump
		mov    $0x000001,%ebx
		and    $0x0000ff,%edx
		call   _05f030_func

	_022ea6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022eac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		cmpb   $0x000000,0x00006d(%eax)
		jne    _022ecf_jump
		cmpb   $0x000004,0x00006c(%esi)
		jne    _022ecf_jump
		mov    %esi,%eax
		call   _053ce4_func
		negw   0x000040(%esi)
		jmp    _022fea_jump

	_022ecf_jump:
		cmpb   $0x000000,0x000070(%esi)
		jne    _022ede_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _022ee5_jump

	_022ede_jump:
		orb    $0x000008,0x000081(%esi)

	_022ee5_jump:
		testb  $0x000002,0x00007d(%esi)
		je     _022f32_jump
		mov    %esi,%eax
		call   _053ce4_func
		xor    %edx,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   _024c98_func
		mov    %al,%cl
		testb  $0x000001,_092224_data(%ecx)
		je     _022f2b_jump
		cmpb   $0x000000,0x000070(%esi)
		jne    _022f1a_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _022f24_jump

	_022f1a_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_022f24_jump:
		mov    %esi,%eax
		call   _05f030_func

	_022f2b_jump:
		mov    %esi,%eax
		call   _0252c0_func

	_022f32_jump:
		testb  $0x000001,0x00007d(%esi)
		je     _022fd7_jump
		mov    $0x000028,%ebx
		lea    0x00004a(%esi),%ecx
		mov    $0x000030,%edx
		mov    %esi,%eax
		call   _01d084_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01d380_func
		mov    %eax,%ecx
		mov    %esi,%eax
		call   _01d4b0_func
		movswl %cx,%ecx
		movswl %ax,%edi
		mov    %ecx,%edx
		mov    %edi,%ebx
		mov    %esi,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _022fd0_jump
		mov    %edi,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _022fd0_jump
		mov    0x00003e(%esi),%ecx
		mov    0x000028(%esi),%edx
		sar    $0x000010,%ecx
		sub    %ecx,%edx
		mov    %edx,0x000028(%esi)
		cmpb   $0x000000,0x000070(%esi)
		jne    _022fb8_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _05f030_func
		orb    $0x000008,0x000081(%esi)
		jmp    _022fd0_jump

	_022fb8_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _05f030_func
		andb   $0x0000f7,0x000081(%esi)

	_022fd0_jump:
		mov    %esi,%eax
		call   _053ce4_func

	_022fd7_jump:
		testb  $0x000010,0x00007d(%esi)
		je     _022fea_jump
		mov    %esi,%eax
		call   _053ce4_func
		movw   $0x000000,0x000042(%esi)

	_022fea_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022ff0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		testb  $0x000010,0x00007d(%eax)
		je     _0230a8_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02300c_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _023020_jump

	_02300c_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _0230a8_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _0230a8_jump

	_023020_jump:
		mov    0x00007f(%esi),%cl
		cmp    $0x0000ff,%cl
		jne    _02305b_jump
		mov    0x00002c(%esi),%ecx
		mov    0x000040(%esi),%ebx
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _023048_jump
		cmp    %ecx,%eax
		jg     _023048_jump
		mov    $0x000001,%eax
		jmp    _02304a_jump

	_023048_jump:
		xor    %eax,%eax

	_02304a_jump:
		test   %eax,%eax
		jne    _023055_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _0230a8_jump

	_023055_jump:
		movb   $0x00003c,0x00007f(%esi)
		jmp    _0230a8_jump

	_02305b_jump:
		test   %cl,%cl
		jne    _02309b_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _023082_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _02308c_jump

	_023082_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_02308c_jump:
		mov    %esi,%eax
		call   _05f030_func
		movw   $0x000000,0x000042(%esi)
		jmp    _0230a8_jump

	_02309b_jump:
		mov    %cl,%al
		movw   $0x000000,0x000042(%esi)
		dec    %al
		mov    %al,0x00007f(%esi)

	_0230a8_jump:
		cmpb   $0x000004,0x000075(%esi)
		jne    _02311d_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0230be_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _0230ca_jump

	_0230be_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02311d_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _02311d_jump

	_0230ca_jump:
		cmpb   $0x000000,0x00007b(%esi)
		je     _02310c_jump
		mov    0x00002c(%esi),%ecx
		mov    0x000040(%esi),%ebx
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _0230f0_jump
		cmp    %ecx,%eax
		jg     _0230f0_jump
		mov    $0x000001,%eax
		jmp    _0230f2_jump

	_0230f0_jump:
		xor    %eax,%eax

	_0230f2_jump:
		test   %eax,%eax
		je     _02311d_jump
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000042(%esi)
		jmp    _02311d_jump

	_02310c_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func

	_02311d_jump:
		testb  $0x000002,0x00007d(%esi)
		je     _023164_jump
		cmpw   $0x000000,0x000040(%esi)
		je     _023164_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _023164_jump
		cmpb   $0x000000,0x000070(%esi)
		jne    _023153_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _02315d_jump

	_023153_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_02315d_jump:
		mov    %esi,%eax
		call   _05f030_func

	_023164_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02316c_func:
		push   %edx
		mov    0x000070(%eax),%dl
		cmp    $0x000002,%dl
		jb     _02318c_jump
		jbe    _023198_jump
		cmp    $0x000014,%dl
		jb     _023198_jump
		jbe    _023185_jump
		cmp    $0x00001e,%dl
		je     _023193_jump
		pop    %edx
		ret    

	_023185_jump:
		call   _022dbc_func
		pop    %edx
		ret    

	_02318c_jump:
		call   _022eac_func
		pop    %edx
		ret    

	_023193_jump:
		call   _022ff0_func

	_023198_jump:
		pop    %edx
		ret    



_02319c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _023222_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    _0cdc30_data,%eax
		movw   $0x000000,0x000042(%ecx)
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jl     _0231ee_jump
		jle    _0231dc_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _0231f5_jump

	_0231dc_jump:
		testb  $0x000008,0x000081(%eax)
		je     _0231ee_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _0231f5_jump

	_0231ee_jump:
		orb    $0x000008,0x000081(%ecx)

	_0231f5_jump:
		mov    %ecx,%eax
		call   _022cd0_func
		testb  $0x000008,0x000081(%ecx)
		je     _023211_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _02321b_jump

	_023211_jump:
		mov    $0x000001,%ebx
		mov    $0x000003,%edx

	_02321b_jump:
		mov    %ecx,%eax
		call   _05f030_func

	_023222_jump:
		pop    %ecx
		pop    %ebx
		ret    

_023228_switch:
		.long   _023451_case
		.long   _0233c9_case
		.long   _0232a8_case
		.long   _023495_case
		.long   _023495_case
		.long   _023264_case




_023240_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000075(%eax),%al
		sub    $0x000002,%al
		cmp    $0x000005,%al
		ja     _023495_case
		and    $0x0000ff,%eax
		jmp    *%cs:_023228_switch(,%eax,4)

	_023264_case:
		mov    0x00006d(%esi),%ah
		cmp    $0x000001,%ah
		jne    _023495_case
		cmp    0x00006c(%esi),%ah
		jne    _023495_case
		cmpb   $0x000002,_0cdc11_data
		setne  %al
		and    $0x0000ff,%eax
		je     _023495_case
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _05f030_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0232a8_case:
		cmpb   $0x000002,_0cdc11_data
		je     _023495_case
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x00007a(%esi),%al
		mov    0x000004(%esp),%ebx
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		mov    %eax,%ecx
		add    %eax,%ecx
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000008(%esp)
		xor    %eax,%eax
		mov    (%esp),%edi
		mov    0x00007a(%esi),%al
		add    %eax,%edi
		mov    %di,(%esp)
		cmpb   $0x000001,0x00006d(%esi)
		jne    _023495_case
		cmpb   $0x000000,0x00006c(%esi)
		jne    _023495_case
		mov    _0cedc8_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0cedae_data,%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    _0cedac_data,%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%edx
		push   %eax
		mov    _0cedaa_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _023495_case
		xor    %edx,%edx
		mov    _0cedae_data,%ax
		mov    0x000074(%esi),%dl
		sub    %edx,%eax
		mov    %ax,0x000050(%esi)
		mov    0x00002c(%esi),%edx
		mov    0x00004e(%esi),%eax
		sub    $0x000010,%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _023495_case
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000004,%edx
		call   _01db14_func
		mov    %esi,%eax
		call   _05f030_func
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%edx
		movb   $0x000006,0x000072(%esi)
		dec    %edx
		mov    %edx,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0233c9_case:
		mov    0x00006d(%esi),%ch
		test   %ch,%ch
		jne    _023495_case
		cmpb   $0x000000,0x00006c(%esi)
		jne    _023495_case
		cmpb   $0x000002,_0cdc11_data
		setne  %al
		and    $0x0000ff,%eax
		je     _023495_case
		mov    %esi,%eax
		call   _01db14_func
		xor    %eax,%eax
		mov    _0cdbd0_data,%dx
		mov    _0cdc18_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		mov    %dx,0x000050(%esi)
		mov    0x00002c(%esi),%eax
		mov    0x00004e(%esi),%edx
		sub    $0x000010,%eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jge    _023495_case
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _05f030_func
		movb   $0x000006,0x000072(%esi)
		movb   $0x0000ff,0x00007f(%esi)
		mov    0x00002c(%esi),%ebx
		mov    %ch,0x000071(%esi)
		dec    %ebx
		mov    %ebx,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023451_case:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _023495_case
		cmpb   $0x000000,0x00006c(%esi)
		jne    _023495_case
		cmpb   $0x000002,_0cdc11_data
		setne  %al
		and    $0x0000ff,%eax
		je     _023495_case
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000004,%edx
		call   _01db14_func
		mov    %esi,%eax
		call   _05f030_func
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ecx
		movb   $0x000006,0x000072(%esi)
		dec    %ecx
		mov    %ecx,0x00002c(%esi)

	_023495_case:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0234a0_func:
		push   %edx
		mov    _0cede2_data,%edx
		mov    _0cedce_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		shl    $0x000005,%edx
		dec    %eax
		sub    $0x000020,%edx
		add    %edx,%eax
		mov    _0ca498_data(,%eax,2),%ax
		pop    %edx
		ret    



_0234c8_func:
		push   %ebx
		push   %edx
		push   %edi
		push   %ebp
		cmpw   $0x000000,_0ced5e_data
		je     _023591_jump
		mov    _0cede2_data,%eax
		mov    _0cedce_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000005,%eax
		dec    %edx
		sub    $0x000020,%eax
		mov    _0cce24_data,%ebx
		add    %eax,%edx
		cmp    $0x000001,%ebx
		jne    _023522_jump
		mov    _0ca496_data(,%edx,2),%eax
		sar    $0x000010,%eax
		mov    %eax,_0cce28_data
		cmp    $0xfffffffe,%eax
		je     _023522_jump
		mov    %eax,%ebx
		shl    $0x000004,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		mov    %eax,_0cce28_data

	_023522_jump:
		mov    _0ca496_data(,%edx,2),%edx
		sar    $0x000010,%edx
		cmp    $0xfffffffe,%edx
		je     _023591_jump
		cmpl   $0x000000,_0cce28_data
		je     _023591_jump
		mov    _0cce24_data,%edi
		cmp    $0x000078,%edi
		jle    _023591_jump
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    $0x000001,%ebp
		shl    $0x000002,%eax
		lea    -0x000078(%edi),%edx
		mov    %ebp,_0cdbc8_data
		sub    %edx,%eax
		mov    %eax,_0cce28_data
		jne    _023591_jump
		cmpb   $0x000000,_0cefab_data
		je     _023591_jump
		mov    _0cce10_data,%al
		xor    %ebx,%ebx
		mov    %al,_0ce4b0_data
		mov    $_0cdba4_data,%eax
		mov    %bx,_0cedf4_data
		call   _076184_func
		call   _03b970_func

	_023591_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    



_023598_func:
		dec    %eax
		dec    %edx
		shl    $0x000005,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    $_0ca630_data,%eax
		jmp    _05bdd8_jump



_0235b0_func:
		dec    %eax
		dec    %edx
		shl    $0x000005,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    $_0ca630_data,%eax
		jmp    _05bd98_jump



_0235c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cefaa_data,%ah
		test   %ah,%ah
		jbe    _023626_jump
		cmpw   $0x000000,_0ced5e_data
		jne    _023626_jump
		cmpb   $0x000000,_0cef51_data
		jne    _023626_jump
		mov    %ah,%dh
		mov    _0ce4b0_data,%bl
		dec    %dh
		inc    %bl
		mov    %dh,_0cefaa_data
		mov    %bl,_0ce4b0_data
		cmp    $0x000063,%bl
		jbe    _023626_jump
		mov    %bl,%cl
		sub    $0x000064,%cl
		mov    %cl,_0ce4b0_data
		call   _077548_func
		mov    %ax,_0ced82_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _023626_jump
		call   _056444_func

	_023626_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02362c_func:
		push   %edx
		xor    %eax,%eax

	_02362f_jump:
		inc    %eax
		xor    %dl,%dl
		mov    %dl,_0ca62f_data(%eax)
		cmp    $0x000018,%eax
		jl     _02362f_jump
		pop    %edx
		ret    



_023640_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000001,%eax
		call   _053298_func
		call   _040c04_func
		cmpw   $0x000000,_0ced68_data
		jne    _0236c0_jump
		call   _03b920_func
		mov    $0x00003c,%ebx
		mov    _0cede4_data,%cx
		mov    _0cedd0_data,%ax
		mov    _0cce24_data,%edx
		dec    %ecx
		dec    %eax
		shl    $0x000005,%ecx
		sub    $0x000078,%edx
		add    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %cx,%eax
		mov    _0ca496_data(,%eax,2),%ebx
		mov    _0cce28_data,%eax
		push   %edx
		mov    %eax,%edx
		mov    $0x00003c,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		sar    $0x000010,%ebx
		dec    %ebx
		sub    %eax,%ebx
		push   %ebx
		push   $_0c0510_data
		push   $_0cf01c_data
		call   _07c0db_func
		add    $0x000010,%esp

	_0236c0_jump:
		mov    _0cedce_data,%edx
		mov    _0cede2_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _023598_func
		test   %al,%al
		je     _02377b_jump
		cmpw   $0x000000,_0cee32_data
		jne    _023702_jump
		cmpb   $0x000000,_0cef51_data
		jne    _023702_jump
		mov    $0x0000bf,%ebx
		mov    $0x000080,%edx
		xor    %eax,%eax
		call   _03b604_func

	_023702_jump:
		cmpw   $0x000000,_0cee32_data
		jne    _023726_jump
		cmpb   $0x000000,_0cef53_data
		jne    _023726_jump
		mov    $0x0000ef,%ebx
		mov    $0x0000c0,%edx
		xor    %eax,%eax
		call   _03b604_func

	_023726_jump:
		call   _03bc8c_func
		push   $0x000005
		mov    $0x00003c,%ebx
		mov    $0x0000a0,%edx
		mov    _0c262c_data,%eax
		xor    %ecx,%ecx
		call   _01a178_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x00006e,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2630_data,%eax
		call   _01a178_func
		push   $0x000005
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    $_0cf01c_data,%eax
		xor    %ecx,%ecx
		call   _01a178_func
		jmp    _023827_jump

	_02377b_jump:
		cmpw   $0x000000,_0cee32_data
		jne    _02379f_jump
		cmpb   $0x000000,_0cef51_data
		jne    _02379f_jump
		mov    $0x0000bf,%ebx
		mov    $0x000080,%edx
		xor    %eax,%eax
		call   _03b604_func

	_02379f_jump:
		cmpw   $0x000000,_0cee32_data
		jne    _0237c3_jump
		cmpb   $0x000000,_0cef53_data
		jne    _0237c3_jump
		mov    $0x0000ef,%ebx
		mov    $0x0000c0,%edx
		xor    %eax,%eax
		call   _03b604_func

	_0237c3_jump:
		call   _03bc8c_func
		cmpw   $0x00000f,_0ced68_data
		jne    _0237f9_jump
		call   _07727c_func
		movw   $0x00004b,0x000036(%eax)
		movw   $0x000032,0x000038(%eax)
		mov    %eax,_0cf030_data
		movl   $0x000001,0x000024(%eax)
		call   _0545ac_func
		call   _056444_func

	_0237f9_jump:
		cmpw   $0x000014,_0ced68_data
		jle    _023827_jump
		mov    _0cf030_data,%eax
		call   _0545ac_func
		mov    _0cf030_data,%eax
		call   _01e674_func
		mov    _0cf030_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _023827_jump
		call   _018ae8_func

	_023827_jump:
		mov    _0ced68_data,%bx
		xor    %edx,%edx
		cmp    $0x0001f4,%bx
		je     _023869_jump
		call   _040974_func
		test   %ax,%ax
		jne    _02385f_jump
		call   _040a00_func
		test   %ax,%ax
		jne    _02385f_jump
		call   _040a8c_func
		test   %ax,%ax
		jne    _02385f_jump
		call   _040b18_func
		test   %ax,%ax
		je     _023878_jump

	_02385f_jump:
		cmpw   $0x000032,_0ced68_data
		jle    _023878_jump

	_023869_jump:
		mov    $_0cdba4_data,%eax
		mov    $0x000001,%edx
		call   _076184_func

	_023878_jump:
		mov    _0ced68_data,%si
		inc    %esi
		mov    %edx,%eax
		mov    %si,_0ced68_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023890_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ced68_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jge    _0239c5_jump
		mov    %edx,%ecx
		inc    %ecx
		mov    %cx,_0ced68_data
		mov    _0ced66_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0239c5_jump
		mov    _095b14_data,%ah
		mov    %ecx,%edi
		xor    %esi,%esi
		inc    %edi
		mov    %si,_0cedf4_data
		mov    %di,_0ced68_data
		cmp    $0x000001,%ah
		jne    _0238f1_jump
		xor    %eax,%eax
		mov    _0cef9f_data,%al
		mov    $0x000001,%ebx
		call   _03c86c_func

	_0238f1_jump:
		mov    $0x00fa00,%edx
		mov    $_0cce00_data,%eax
		call   _07b440_func
		mov    _0cedce_data,%edx
		mov    _0cede2_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _023598_func
		test   %al,%al
		je     _023926_jump
		mov    $_0cce00_data,%eax
		call   _035eb8_func
		jmp    _023930_jump

	_023926_jump:
		mov    $_0cce00_data,%eax
		call   _035eb8_func

	_023930_jump:
		mov    $_0c7198_data,%eax
		call   _03bb78_func
		call   _03b998_func
		call   _01cb68_func
		cmpb   $0x000000,_0cef72_data
		je     _02395c_jump
		call   _06ed40_func
		mov    $0x000006,%eax
		call   _0702cc_jump

	_02395c_jump:
		mov    $_023640_func,%eax
		call   _03b9e8_func
		cmpb   $0x000000,_0cef72_data
		je     _023974_jump
		call   _03da70_func

	_023974_jump:
		call   _03b970_func
		mov    _0cce10_data,%al
		xor    %edx,%edx
		mov    %al,_0ce4b0_data
		mov    %edx,_0cce10_data
		mov    _0cedce_data,%edx
		mov    _0cede2_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0235b0_func
		test   %ebx,%ebx
		je     _0239b1_jump
		xor    %eax,%eax
		mov    _0cef9f_data,%al
		call   _03c740_func

	_0239b1_jump:
		call   _03b998_func
		call   _03bbec_func
		mov    $_0cce00_data,%eax
		call   _07b74c_func

	_0239c5_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0239d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    %dx,(%esp)

	_0239df_jump:
		xor    %esi,%esi

	_0239e1_jump:
		mov    $0x000040,%eax
		movswl %si,%edi
		sub    %edi,%eax
		imul   %eax,%eax
		mov    -0x000002(%esp),%ebp
		mov    $0x000040,%edx
		sar    $0x000010,%ebp
		sub    %ebp,%edx
		imul   %edx,%edx
		add    %edx,%eax
		call   _07b952_func
		call   _07c13a_func
		call   _07c1a0_func
		mov    $0xbca1af28,%ebx
		mov    $0x3fbaf286,%ecx
		and    $0x0000ff,%eax
		shl    $0x000007,%ebp
		call   _07b95f_func
		call   _07bb4f_func
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		call   _07c45a_func
		call   _07b998_func
		mov    $0x40440000,%ecx
		xor    %ebx,%ebx
		inc    %esi
		call   _07bb4f_func
		call   _07c1a0_func
		mov    %al,_0d9444_data(%edi,%ebp,1)
		cmp    $0x000080,%si
		jl     _0239e1_jump
		mov    (%esp),%ebx
		inc    %ebx
		mov    %bx,(%esp)
		cmp    $0x000080,%bx
		jl     _0239df_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023a7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %al,%ch
		cmpb   $0x000000,_0cef8c_data
		jne    _023a95_jump
		movb   $0x00004a,_0dd744_data
		jmp    _023a9c_jump

	_023a95_jump:
		movb   $0x000070,_0dd744_data

	_023a9c_jump:
		movzbl _0dd744_data,%edi
		xor    %eax,%eax

	_023aa5_jump:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%edx
		add    %edi,%ebx
		lea    (%ebx,%ebx,2),%ebx
		mov    _095c5a_data(%edx),%cl
		mov    %cl,_0c7498_data(%ebx)
		mov    _095c59_data(%edx),%cl
		mov    _095c58_data(%edx),%dl
		mov    %cl,_0c7499_data(%ebx)
		inc    %eax
		mov    %dl,_0c749a_data(%ebx)
		cmp    $0x000010,%ax
		jl     _023aa5_jump
		test   %ch,%ch
		je     _023b01_jump
		lea    0x00000f(%edi),%ecx
		mov    $_0c7498_data,%esi
		mov    %edi,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_023b01_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023b08_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %ebx,%edi
		mov    %cx,0x00000c(%esp)
		mov    %esp,%ebp
		mov    _0cccb4_data,%ebx
		movswl %dx,%edx
		movswl %ax,%ecx
		lea    0x000000(,%edx,4),%eax
		add    %ebx,%ecx
		add    %edx,%eax
		mov    0x000030(%esp),%bl
		shl    $0x000006,%eax
		mov    %bl,(%esp)
		mov    0x000038(%esp),%bl
		lea    (%ecx,%eax,1),%edx
		mov    $0x000140,%eax
		mov    %bl,0x000001(%esp)
		mov    0x000040(%esp),%bl
		sub    %edi,%eax
		mov    %bl,0x000002(%esp)
		mov    0x000048(%esp),%bl
		mov    %eax,0x000014(%esp)
		mov    %bl,0x000003(%esp)
		xor    %ebx,%ebx
		lea    0x000004(%esp),%eax
		mov    %ebx,0x000010(%esp)
		jmp    _023c7c_jump

	_023b6d_jump:
		mov    0x000000(%ebp),%esi
		add    $0x1010101,%esi
		mov    %esi,%ebx
		mov    %esi,0x000000(%ebp)
		and    $0x7f7f7f7f,%ebx
		mov    %ebx,0x000000(%ebp)
		mov    0x00002c(%esp),%bl
		mov    %bl,0x000004(%esp)
		mov    0x000034(%esp),%bl
		mov    %bl,0x000005(%esp)
		mov    0x00003c(%esp),%bl
		mov    %bl,0x000006(%esp)
		mov    0x000044(%esp),%bl
		mov    %bl,0x000007(%esp)
		xor    %ebx,%ebx
		jmp    _023c5a_jump

	_023bab_jump:
		mov    (%eax),%ecx
		add    $0x1010101,%ecx
		mov    %ecx,%esi
		mov    %ecx,(%eax)
		and    $0x7f7f7f7f,%esi
		xor    %ecx,%ecx
		mov    %esi,(%eax)
		mov    (%esp),%cl
		movzbl 0x000004(%esp),%esi
		shl    $0x000007,%ecx
		mov    _0d9444_data(%ecx,%esi,1),%cl
		mov    0x00004c(%esp),%ch
		add    %ch,%cl
		mov    %cl,0x000018(%esp)
		xor    %ecx,%ecx
		mov    0x000001(%esp),%cl
		movzbl 0x000005(%esp),%esi
		shl    $0x000007,%ecx
		add    %ecx,%esi
		mov    0x000018(%esp),%cl
		mov    _0d9444_data(%esi),%ch
		add    %ch,%cl
		mov    %cl,0x000018(%esp)
		xor    %ecx,%ecx
		mov    0x000002(%esp),%cl
		mov    %ecx,%esi
		xor    %ecx,%ecx
		shl    $0x000007,%esi
		mov    0x000006(%esp),%cl
		add    %ecx,%esi
		mov    0x000018(%esp),%cl
		add    _0d9444_data(%esi),%cl
		movzbl 0x000003(%esp),%esi
		mov    %cl,0x000018(%esp)
		xor    %ecx,%ecx
		shl    $0x000007,%esi
		mov    0x000007(%esp),%cl
		add    %ecx,%esi
		mov    0x000018(%esp),%cl
		add    _0d9444_data(%esi),%cl
		mov    %ecx,%esi
		xor    %ecx,%ecx
		and    $0x0000ff,%esi
		mov    _0dd744_data,%cl
		sar    $0x000004,%esi
		add    %ecx,%esi
		mov    %esi,0x000008(%esp)
		inc    %edx
		mov    0x000008(%esp),%cl
		inc    %ebx
		mov    %cl,-0x000001(%edx)

	_023c5a_jump:
		xor    %esi,%esi
		movswl %di,%ecx
		mov    %bx,%si
		cmp    %ecx,%esi
		jl     _023bab_jump
		mov    0x000010(%esp),%esi
		xor    %ecx,%ecx
		inc    %esi
		mov    0x000014(%esp),%cx
		mov    %esi,0x000010(%esp)
		add    %ecx,%edx

	_023c7c_jump:
		xor    %ecx,%ecx
		mov    0x00000a(%esp),%esi
		mov    0x000010(%esp),%cx
		sar    $0x000010,%esi
		cmp    %esi,%ecx
		jl     _023b6d_jump
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000024



_023c9c_func:
		push   %esi
		push   %edi
		mov    %eax,%esi
		cmpb   $0x000000,0x00000c(%esp)
		je     _023dc9_jump
		incw   _095c88_data
		subw   $0x000002,_095c8a_data
		incw   _095c8c_data
		subw   $0x000002,_095c8e_data
		addw   $0x000003,_095c90_data
		subw   $0x000002,_095c92_data
		incw   _095c94_data
		subw   $0x000003,_095c96_data
		mov    _095c98_data,%di
		mov    _095c86_data,%eax
		add    $0x000005,%edi
		sar    $0x000010,%eax
		mov    %di,_095c98_data
		call   _05be40_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0dd750_data
		mov    _095c88_data,%eax
		sar    $0x000010,%eax
		call   _05be00_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0dd74e_data
		mov    _095c8a_data,%eax
		sar    $0x000010,%eax
		call   _05be00_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0dd754_data
		mov    _095c8c_data,%eax
		sar    $0x000010,%eax
		call   _05be40_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0dd752_data
		mov    _095c8e_data,%eax
		sar    $0x000010,%eax
		call   _05be00_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0dd74c_data
		mov    _095c90_data,%eax
		sar    $0x000010,%eax
		call   _05be40_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0dd74a_data
		mov    _095c92_data,%eax
		sar    $0x000010,%eax
		call   _05be00_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0dd748_data
		mov    _095c94_data,%eax
		sar    $0x000010,%eax
		call   _05be40_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0dd746_data

	_023dc9_jump:
		sub    $0x000003,%esi
		sub    $0x000003,%edx
		add    $0x000006,%ebx
		add    $0x000006,%ecx
		test   %si,%si
		jge    _023de0_jump
		add    %esi,%ebx
		xor    %esi,%esi
		jmp    _023df6_jump

	_023de0_jump:
		movswl %si,%eax
		movswl %bx,%edi
		add    %edi,%eax
		cmp    $0x000140,%eax
		jle    _023df6_jump
		mov    $0x000140,%ebx
		sub    %esi,%ebx

	_023df6_jump:
		test   %dx,%dx
		jge    _023e01_jump
		xor    %edx,%edx
		add    %esi,%ecx
		jmp    _023e17_jump

	_023e01_jump:
		movswl %dx,%edi
		movswl %cx,%eax
		add    %edi,%eax
		cmp    $0x000140,%eax
		jle    _023e17_jump
		mov    $0x0000c8,%ecx
		sub    %edx,%ecx

	_023e17_jump:
		mov    _095c96_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0dd744_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0dd746_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0dd748_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0dd74a_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0dd74c_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0dd74e_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0dd750_data,%eax
		sar    $0x000010,%eax
		movswl %cx,%ecx
		push   %eax
		mov    _0dd752_data,%eax
		movswl %bx,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		push   %eax
		movswl %si,%eax
		call   _023b08_func
		pop    %edi
		pop    %esi
		ret    $0x000004



_023e80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    $0x000001,%eax
		call   _069178_func
		cmpb   $0x000000,_0cef8c_data
		jne    _023ea4_jump
		movb   $0x00004a,_0dd744_data
		jmp    _023eab_jump

	_023ea4_jump:
		movb   $0x000070,_0dd744_data

	_023eab_jump:
		xor    %eax,%eax

	_023ead_jump:
		movswl %ax,%edx
		lea    (%edx,%edx,2),%ebx
		movzbl _095c9a_data(%ebx),%edi
		sar    $0x000002,%edi
		mov    %edi,(%esp)
		movzbl _0dd744_data,%edi
		add    %edi,%edx
		lea    (%edx,%edx,2),%edx
		mov    (%esp),%cl
		mov    %cl,_0c7498_data(%edx)
		xor    %ecx,%ecx
		mov    _095c9c_data(%ebx),%cl
		sar    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%cl
		mov    _095c9b_data(%ebx),%bl
		mov    %cl,_0c7499_data(%edx)
		and    $0x0000ff,%ebx
		sar    $0x000002,%ebx
		inc    %eax
		mov    %bl,_0c749a_data(%edx)
		cmp    $0x000010,%ax
		jl     _023ead_jump
		lea    0x00000f(%edi),%ecx
		mov    $_0c7498_data,%esi
		mov    %edi,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		xor    %esi,%esi

	_023f2c_jump:
		xor    %eax,%eax

	_023f2e_jump:
		movswl %si,%edx
		imul   $0x000258,%edx,%ebx
		xor    %ecx,%ecx
		mov    _0dd744_data,%cl
		movswl %ax,%edx
		inc    %eax
		mov    %cx,_0cf034_data(%ebx,%edx,2)
		cmp    $0x00012c,%ax
		jl     _023f2e_jump
		inc    %esi
		cmp    $0x000046,%si
		jl     _023f2c_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023f64_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %cx,0x00000c(%esp)
		mov    _0cccb4_data,%esi
		cwtl   
		movswl %dx,%ecx
		add    %eax,%esi
		lea    0x000000(,%ecx,4),%eax
		xor    %edi,%edi
		add    %ecx,%eax
		xor    %edx,%edx
		shl    $0x000006,%eax
		mov    _0dd744_data,%dl
		add    %eax,%esi
		xor    %eax,%eax
		mov    %esi,0x000008(%esp)
		call   _069178_func
		test   %bx,%bx
		jle    _023ff7_jump

	_023fa3_jump:
		mov    $0x00000a,%eax
		call   _069140_func
		cmp    $0x000005,%ax
		jge    _023fca_jump
		mov    $0x000001,%eax
		call   _069140_func
		imul   $0x00000f,%eax,%eax
		xor    %edx,%edx
		mov    _0dd744_data,%dl
		add    %eax,%edx

	_023fca_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000258,%eax,%esi
		inc    %eax
		imul   $0x000258,%eax,%eax
		movswl %di,%ecx
		mov    %dx,_0cf034_data(%esi,%ecx,2)
		inc    %edi
		mov    %dx,_0cf034_data(%eax,%ecx,2)
		cmp    %bx,%di
		jl     _023fa3_jump

	_023ff7_jump:
		mov    $0x000001,%edi
		jmp    _024164_jump

	_024001_jump:
		xor    %edx,%edx
		test   %bx,%bx
		jle    _024163_jump

	_02400c_jump:
		test   %dx,%dx
		jne    _024082_jump
		movswl %di,%eax
		lea    -0x000001(%eax),%ecx
		imul   $0x000258,%ecx,%ecx
		mov    %ecx,0x000004(%esp)
		movswl %bx,%ecx
		mov    0x000004(%esp),%esi
		add    %ecx,%ecx
		add    %esi,%ecx
		imul   $0x000258,%eax,%esi
		inc    %eax
		imul   $0x000258,%eax,%eax
		mov    _0cf030_data(%ecx),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,(%esp)
		movswl %dx,%ecx
		add    %ecx,%ecx
		mov    _0cf032_data(%ecx,%esi,1),%ebp
		sar    $0x000010,%ebp
		mov    _0cf034_data(%ecx,%esi,1),%esi
		sar    $0x000010,%esi
		add    (%esp),%ebp
		mov    _0cf032_data(%ecx,%eax,1),%eax
		add    %ebp,%esi
		sar    $0x000010,%eax
		add    %esi,%eax
		add    0x000004(%esp),%ecx
		sar    $0x000002,%eax
		mov    %ax,_0cf034_data(%ecx)
		jmp    _024159_jump

	_024082_jump:
		movswl %bx,%eax
		movswl %dx,%ecx
		lea    -0x000001(%eax),%esi
		lea    0x000000(,%ecx,2),%eax
		cmp    %esi,%ecx
		jne    _0240fd_jump
		movswl %di,%ecx
		imul   $0x000258,%ecx,%esi
		mov    _0cf030_data(%esi,%eax,1),%ebp
		mov    _0cf032_data(%esi,%eax,1),%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		add    %esi,%ebp
		lea    0x000001(%ecx),%esi
		imul   $0x000258,%esi,%esi
		dec    %ecx
		imul   $0x000258,%ecx,%ecx
		mov    %ebp,(%esp)
		mov    _0cf032_data(%esi),%ebp
		sar    $0x000010,%ebp
		mov    _0cf032_data(%esi,%eax,1),%esi
		mov    %ebp,0x000004(%esp)
		mov    (%esp),%ebp
		sar    $0x000010,%esi
		add    0x000004(%esp),%ebp
		add    %ebp,%esi
		sar    $0x000002,%esi
		mov    %esi,0x000004(%esp)
		mov    0x000004(%esp),%esi
		mov    %si,_0cf034_data(%ecx,%eax,1)
		jmp    _024159_jump

	_0240fd_jump:
		movswl %di,%esi
		imul   $0x000258,%esi,%ecx
		mov    _0cf030_data(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,(%esp)
		mov    _0cf032_data(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		mov    _0cf034_data(%ecx,%eax,1),%ecx
		add    (%esp),%ebp
		sar    $0x000010,%ecx
		add    %ecx,%ebp
		lea    0x000001(%esi),%ecx
		imul   $0x000258,%ecx,%ecx
		dec    %esi
		imul   $0x000258,%esi,%esi
		mov    _0cf032_data(%ecx,%eax,1),%ecx
		sar    $0x000010,%ecx
		add    %ebp,%ecx
		sar    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%ecx
		mov    %cx,_0cf034_data(%esi,%eax,1)

	_024159_jump:
		inc    %edx
		cmp    %bx,%dx
		jl     _02400c_jump

	_024163_jump:
		inc    %edi

	_024164_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		movswl %di,%ecx
		add    $0x000002,%eax
		cmp    %eax,%ecx
		jl     _024001_jump
		mov    0x00000c(%esp),%edx
		xor    %edi,%edi
		test   %dx,%dx
		jle    _0241cf_jump

	_024184_jump:
		xor    %eax,%eax
		test   %bx,%bx
		jle    _0241b1_jump

	_02418b_jump:
		movswl %di,%ecx
		imul   $0x000258,%ecx,%ecx
		movswl %ax,%esi
		mov    _0cf034_data(%ecx,%esi,2),%dl
		mov    0x000008(%esp),%ecx
		mov    %dl,(%ecx)
		lea    0x000001(%ecx),%edx
		inc    %eax
		mov    %edx,0x000008(%esp)
		cmp    %bx,%ax
		jl     _02418b_jump

	_0241b1_jump:
		mov    $0x000140,%ecx
		movswl %bx,%eax
		mov    0x000008(%esp),%ebp
		sub    %eax,%ecx
		inc    %edi
		add    %ecx,%ebp
		mov    0x00000c(%esp),%ecx
		mov    %ebp,0x000008(%esp)
		cmp    %cx,%di
		jl     _024184_jump

	_0241cf_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0241d8_func:
		push   %esi
		push   %edi
		sub    $0x000003,%eax
		sub    $0x000003,%edx
		add    $0x000006,%ebx
		add    $0x000006,%ecx
		test   %ax,%ax
		jge    _0241f1_jump
		add    %eax,%ebx
		xor    %eax,%eax
		jmp    _024208_jump

	_0241f1_jump:
		movswl %ax,%edi
		movswl %bx,%esi
		add    %edi,%esi
		cmp    $0x000140,%esi
		jle    _024208_jump
		mov    $0x000140,%ebx
		sub    %eax,%ebx

	_024208_jump:
		test   %dx,%dx
		jge    _024213_jump
		xor    %edx,%edx
		add    %eax,%ecx
		jmp    _02422a_jump

	_024213_jump:
		movswl %dx,%edi
		movswl %cx,%esi
		add    %edi,%esi
		cmp    $0x000140,%esi
		jle    _02422a_jump
		mov    $0x0000c8,%ecx
		sub    %edx,%ecx

	_02422a_jump:
		movswl %cx,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		cwtl   
		call   _023f64_func
		pop    %edi
		pop    %esi
		ret    



_02423c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cefd7_data,%ch
		xor    %eax,%eax

	_024247_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		imul   $0x000300,%edx,%ebx
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		mov    _0c7498_data(%edx,%ebx,1),%cl
		mov    %cl,_0dd444_data(%edx)
		mov    _0c7499_data(%edx,%ebx,1),%cl
		mov    _0c749a_data(%edx,%ebx,1),%bl
		mov    %cl,_0dd445_data(%edx)
		inc    %eax
		mov    %bl,_0dd446_data(%edx)
		cmp    $0x000050,%ax
		jl     _024247_jump
		mov    $0x000046,%eax
		mov    %al,%dl
		add    %al,%dl
		mov    %dl,%bl
		sub    $0x00008c,%bl
		mov    %dl,%bh
		neg    %bh
		add    $0x00000a,%bh

	_02429a_jump:
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		xor    %cl,%cl
		mov    %bh,_0dd444_data(%edx)
		inc    %eax
		mov    %bl,_0dd445_data(%edx)
		add    $0x000002,%bl
		mov    %cl,_0dd446_data(%edx)
		sub    $0x000002,%bh
		cmp    $0x000066,%ax
		jl     _02429a_jump
		mov    $0x000066,%eax

	_0242c6_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		imul   $0x000300,%edx,%ebx
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		mov    _0c7498_data(%edx,%ebx,1),%cl
		mov    %cl,_0dd444_data(%edx)
		mov    _0c7499_data(%edx,%ebx,1),%cl
		mov    _0c749a_data(%edx,%ebx,1),%bl
		mov    %cl,_0dd445_data(%edx)
		inc    %eax
		mov    %bl,_0dd446_data(%edx)
		cmp    $0x000070,%ax
		jl     _0242c6_jump
		mov    $0x000070,%eax

	_024309_jump:
		movswl %ax,%ebx
		lea    -0x000070(%ebx),%edx
		lea    (%edx,%edx,2),%edx
		lea    (%ebx,%ebx,2),%ebx
		mov    _095c5a_data(%edx),%cl
		mov    %cl,_0dd444_data(%ebx)
		mov    _095c59_data(%edx),%cl
		mov    _095c58_data(%edx),%dl
		mov    %cl,_0dd445_data(%ebx)
		inc    %eax
		mov    %dl,_0dd446_data(%ebx)
		cmp    $0x000080,%ax
		jl     _024309_jump
		mov    $0x000080,%eax
		mov    %al,%dl
		sub    $0x000080,%dl

	_02434a_jump:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%ebx
		mov    %dl,_0dd444_data(%ebx)
		mov    %dl,_0dd445_data(%ebx)
		inc    %eax
		mov    %dl,_0dd446_data(%ebx)
		inc    %dl
		cmp    $0x0000c0,%ax
		jl     _02434a_jump
		mov    $0x0000c0,%eax
		xor    %cl,%cl

	_024372_jump:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%edx
		mov    %cl,_0dd444_data(%edx)
		mov    %cl,_0dd445_data(%edx)
		lea    -0x0000c0(%ebx),%edx
		cmp    $0x000003,%edx
		jg     _024394_jump
		mov    $0x000003,%edx

	_024394_jump:
		mov    %dl,%bl
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		inc    %eax
		mov    %bl,_0dd446_data(%edx)
		cmp    $0x000100,%ax
		jl     _024372_jump
		cmpb   $0x000000,_0cefa8_data
		je     _0243e2_jump
		mov    $0x000010,%ah
		mov    $0x00000e,%dl
		mov    $0x000031,%bl
		mov    $0x00002d,%cl
		mov    %ah,_0dd4a4_data
		mov    %dl,_0dd4a5_data
		mov    %bl,_0dd4b6_data
		mov    %cl,_0dd4b8_data
		mov    $0x00000d,%dh
		mov    $0x00002f,%bh
		mov    %dh,_0dd4a6_data
		mov    %bh,_0dd4b7_data

	_0243e2_jump:
		mov    %ch,_0cefd7_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0243ec_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,(%esp)
		mov    %dl,0x000008(%esp)
		cmpb   $0x000001,_095b14_data
		jne    _0244a7_jump
		xor    %ebx,%ebx
		mov    %bx,0x000004(%esp)
		mov    $0x000003,%ebp

	_024414_jump:
		mov    (%esp),%esi
		mov    0x000004(%esp),%ah
		xor    %ebx,%ebx
		mov    _0cc638_data,%edx
		mov    0x000004(%esp),%bx
		xor    %ecx,%ecx
		add    %edx,%ebx
		mov    $0x0003ce,%edx
		mov    $0x000004,%al
		out    %ax,(%dx)

	_024435_jump:
		mov    0x000008(%esp),%dh
		mov    (%esi),%al
		test   %dh,%dh
		je     _024480_jump
		movzbl _0cefd7_data,%edi
		imul   $0x000300,%edi,%edi
		xor    %edx,%edx
		mov    %al,%dl
		lea    (%edx,%edx,2),%edx
		add    %edi,%edx
		xor    %eax,%eax
		mov    _0c7499_data(%edx),%al
		movzbl _0c7498_data(%edx),%edi
		mov    _0c749a_data(%edx),%dl
		add    %edi,%eax
		and    $0x0000ff,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		add    $0x000080,%eax

	_024480_jump:
		mov    %al,(%ebx)
		inc    %ecx
		add    $0x000004,%ebx
		inc    %esi
		cmp    $0x003e80,%cx
		jb     _024435_jump
		mov    0x000004(%esp),%edx
		inc    %edx
		mov    %dx,0x000004(%esp)
		cmp    $0x000004,%dx
		jae    _02452f_jump
		jmp    _024414_jump

	_0244a7_jump:
		mov    (%esp),%esi
		mov    _0cc638_data,%edi
		test   %dl,%dl
		je     _02451a_jump
		xor    %edx,%edx
		mov    %dx,0x000004(%esp)

	_0244bb_jump:
		xor    %edx,%edx
		mov    _0cefd7_data,%dl
		imul   $0x000300,%edx,%edx
		mov    (%esi),%al
		and    $0x0000ff,%eax
		lea    (%eax,%eax,2),%eax
		add    %edx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0c7498_data(%eax),%bl
		mov    _0c7499_data(%eax),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0c749a_data(%eax),%dl
		add    %ebx,%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000004(%esp),%ecx
		inc    %edi
		inc    %esi
		inc    %ecx
		add    $0x000080,%eax
		mov    %cx,0x000004(%esp)
		mov    %al,-0x000001(%edi)
		cmp    $0x00fa00,%cx
		jae    _02452f_jump
		jmp    _0244bb_jump

	_02451a_jump:
		mov    $0x00fa00,%ecx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_02452f_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_024538_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %ax,0x000008(%esp)
		mov    %dx,0x000004(%esp)
		mov    %ecx,%esi
		xor    %ah,%ah
		mov    $0x000004,%edx
		and    $0x000003,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000008(%esp),%edx
		add    %eax,%edx
		mov    %ebx,%eax
		mov    %dx,0x000008(%esp)
		xor    %bh,%ah
		mov    $0x000004,%edx
		and    $0x000003,%al
		sub    %eax,%edx
		add    %edx,%ebx
		mov    $0x000140,%edx
		movswl %bx,%eax
		mov    0x000006(%esp),%ecx
		sub    %eax,%edx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		add    _0cccb4_data,%ecx
		mov    0x000002(%esp),%edx
		sar    $0x000002,%eax
		sar    $0x000010,%edx
		mov    %ax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    %bx,(%esp)
		shl    $0x000006,%eax
		sar    $0x000002,%bx
		add    %ecx,%eax
		xor    %ecx,%ecx
		test   %si,%si
		jle    _0245ee_jump

	_0245b6_jump:
		xor    %edx,%edx
		test   %bx,%bx
		jle    _0245dc_jump

	_0245bd_jump:
		mov    (%eax),%edi
		test   %edi,%edi
		je     _0245cd_jump
		lea    0x40404040(%edi),%ebp
		mov    %ebp,(%eax)
		jmp    _0245d3_jump

	_0245cd_jump:
		movl   $0xc8c8c8c8,(%eax)

	_0245d3_jump:
		inc    %edx
		add    $0x000004,%eax
		cmp    %bx,%dx
		jl     _0245bd_jump

	_0245dc_jump:
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000002,%edx
		inc    %ecx
		add    %edx,%eax
		cmp    %si,%cx
		jl     _0245b6_jump

	_0245ee_jump:
		mov    -0x000002(%esp),%edx
		mov    0x000002(%esp),%ebx
		mov    $0x002026,%eax
		mov    _0cccb4_data,%edi
		movswl %si,%ecx
		mov    0x000006(%esp),%esi
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		call   _014b1a_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_024620_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%esi
		cmpb   $0x000000,0x00001c(%esp)
		je     _024638_jump
		movw   $0x002026,0x000008(%esp)
		jmp    _02463f_jump

	_024638_jump:
		movw   $0x002620,0x000008(%esp)

	_02463f_jump:
		movswl %bx,%edi
		movswl %si,%esi
		movswl %ax,%ebp
		mov    %edi,(%esp)
		mov    %esi,%ebx
		movswl %cx,%edi
		mov    %ebp,%eax
		mov    %edi,0x000004(%esp)
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    _0cccb4_data,%edi
		call   _014a4e_func
		mov    0x000006(%esp),%eax
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    _0cccb4_data,%edi
		mov    %esi,%ebx
		sar    $0x000010,%eax
		mov    %ebp,%esi
		call   _014b1a_func
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_024690_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cefd7_data,%bh
		cmpb   $0x000000,_0cef8c_data
		je     _0246e7_jump
		cmpb   $0x000000,_095b4b_data
		jne    _0246e7_jump
		xor    %al,%al
		mov    $0x00003f,%ah

	_0246af_jump:
		mov    %al,%bl
		xor    %edx,%edx
		add    %al,%bl
		mov    %bh,%dl
		imul   $0x000300,%edx,%ecx
		xor    %edx,%edx
		mov    %al,%dl
		add    $0x000046,%edx
		lea    (%edx,%edx,2),%edx
		mov    %ah,_0c7498_data(%ecx,%edx,1)
		mov    %bl,_0c7499_data(%ecx,%edx,1)
		sub    $0x000002,%ah
		xor    %bl,%bl
		inc    %al
		mov    %bl,_0c749a_data(%ecx,%edx,1)
		cmp    $0x000020,%al
		jb     _0246af_jump

	_0246e7_jump:
		mov    %bh,_0cefd7_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0246f4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    0x000030(%esp),%edi
		mov    %eax,%esi
		mov    %dx,0x00000c(%esp)
		mov    %bx,0x000010(%esp)
		mov    %cx,0x000018(%esp)
		mov    0x00002c(%esp),%ecx
		mov    0x000034(%esp),%edx
		mov    _0cccb4_data,%ebp
		cwtl   
		add    %eax,%ebp
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		inc    %eax
		lea    0x000000(,%eax,4),%ebx
		add    %eax,%ebx
		inc    %ebp
		shl    $0x000006,%ebx
		add    %ebx,%ebp
		cmp    %di,%dx
		jle    _024740_jump
		mov    %edi,%edx
		jmp    _024749_jump

	_024740_jump:
		cmp    %cx,%dx
		jge    _024749_jump
		xor    %edx,%edx
		jmp    _02474b_jump

	_024749_jump:
		sub    %ecx,%edx

	_02474b_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000008,%ebx
		sar    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _024760_jump
		mov    %ebx,%eax

	_024760_jump:
		mov    0x000010(%esp),%ebx
		sub    %eax,%ebx
		mov    %ax,0x000008(%esp)
		mov    %ebx,%eax
		sub    $0x000003,%eax
		movswl %dx,%edx
		cwtl   
		imul   %eax,%edx
		movswl %di,%ebx
		movswl %cx,%eax
		sub    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000016(%esp),%ecx
		mov    _0cccb4_data,%edi
		sar    $0x000010,%ecx
		movswl %si,%edx
		mov    0x00000a(%esp),%ebx
		inc    %edx
		sar    $0x000010,%ebx
		movswl %si,%esi
		add    %edx,%eax
		mov    0x00000e(%esp),%edx
		mov    %ax,0x000014(%esp)
		mov    $0x002026,%eax
		sar    $0x000010,%edx
		call   _014b1a_func
		xor    %dh,%dh
		xor    %ah,%ah
		jmp    _024802_jump

	_0247bf_jump:
		xor    %dl,%dl
		xor    %al,%al
		jmp    _0247e1_jump

	_0247c5_jump:
		mov    %ah,%cl
		add    $0x000046,%cl
		mov    %cl,0x000000(%ebp)
		xor    %ecx,%ecx
		sar    $0x000005,%ebx
		mov    %al,%cl
		cmp    %ebx,%ecx
		jle    _0247dc_jump
		xor    %al,%al
		inc    %ah

	_0247dc_jump:
		inc    %dl
		inc    %ebp
		inc    %al

	_0247e1_jump:
		mov    0x00000e(%esp),%ecx
		sar    $0x000010,%ecx
		movzbl %dl,%esi
		lea    -0x000002(%ecx),%ebx
		cmp    %ebx,%esi
		jl     _0247c5_jump
		mov    $0x000140,%ebx
		sub    %ecx,%ebx
		inc    %dh
		add    $0x000002,%ebx
		xor    %ah,%ah
		add    %ebx,%ebp

	_024802_jump:
		mov    0x000016(%esp),%esi
		xor    %ebx,%ebx
		sar    $0x000010,%esi
		mov    %dh,%bl
		lea    -0x000002(%esi),%ecx
		cmp    %ecx,%ebx
		jl     _0247bf_jump
		mov    0x000006(%esp),%eax
		mov    _0cccb4_data,%edi
		lea    -0x000003(%esi),%ebp
		sar    $0x000010,%eax
		mov    0x000012(%esp),%esi
		mov    %eax,0x000004(%esp)
		mov    0x00000a(%esp),%eax
		mov    %ebp,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		inc    %eax
		mov    0x000004(%esp),%edx
		mov    %eax,(%esp)
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _014a4e_func
		mov    $0x000308,%eax
		mov    0x000004(%esp),%edx
		mov    (%esp),%ebx
		mov    _0cccb4_data,%edi
		mov    %ebp,%ecx
		call   _014b1a_func
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_02486c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %ax,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %ebx,%esi
		mov    %ecx,%edi
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		mov    _0cccb4_data,%ecx
		add    %ebx,%eax
		mov    _0cccb4_data,%ebp
		shl    $0x000006,%eax
		xor    %edx,%edx
		mov    %eax,%ebx
		add    %eax,%ecx
		mov    %ebp,%eax
		call   _07c0b0_func
		mov    -0x000002(%esp),%ebx
		mov    $0x0000c8,%ebp
		sar    $0x000010,%ebx
		sub    %ebx,%ebp
		lea    0x000000(,%ebp,4),%eax
		add    %eax,%ebp
		lea    0x000000(,%ebx,4),%eax
		mov    _0cccb4_data,%edx
		add    %ebx,%eax
		shl    $0x000006,%ebp
		shl    $0x000006,%eax
		mov    %ebp,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _07c0b0_func
		mov    0x000004(%esp),%edx
		cmp    (%esp),%dx
		jge    _024924_jump
		movswl %si,%ebx

	_0248ef_jump:
		xor    %eax,%eax
		test   %si,%si
		jle    _024900_jump

	_0248f6_jump:
		inc    %eax
		movb   $0x000000,(%ecx)
		inc    %ecx
		cmp    %si,%ax
		jl     _0248f6_jump

	_024900_jump:
		movswl %di,%eax
		sub    %ebx,%eax
		add    %eax,%ecx
		mov    %edi,%eax
		cmp    $0x000140,%di
		jge    _02491b_jump

	_024910_jump:
		inc    %eax
		movb   $0x000000,(%ecx)
		inc    %ecx
		cmp    $0x000140,%ax
		jl     _024910_jump

	_02491b_jump:
		mov    (%esp),%eax
		inc    %edx
		cmp    %ax,%dx
		jl     _0248ef_jump

	_024924_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_024930_func:
		movswl %dx,%edx
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx
		cwtl   
		call   _01e0e4_func
		cmp    $0x00000f,%al
		sete   %al
		xor    %ah,%ah
		ret    



_02494c_func:
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		movswl %ax,%esi
		movswl %bx,%edx
		movswl %cx,%eax
		call   *_0c22b8_data(,%esi,4)
		sub    %ebx,%eax
		pop    %esi
		pop    %ecx
		ret    



_024968_func:
		push   %ecx
		mov    %eax,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		cwtl   
		call   _02494c_func
		test   %ax,%ax
		jg     _024980_jump
		mov    %ecx,%eax
		pop    %ecx
		ret    

	_024980_jump:
		xor    %eax,%eax
		pop    %ecx
		ret    

_024984_switch:
		.long   _024ac6_case
		.long   _024ac6_case
		.long   _024ad6_case
		.long   _024ae9_case
		.long   _024afc_case
		.long   _024afc_case
		.long   _024b13_case
		.long   _024b13_case
		.long   _024ac6_case
		.long   _024b22_case
		.long   _024ac6_case
		.long   _024bef_case
		.long   _024bef_case
		.long   _024bef_case
		.long   _024b22_case
		.long   _024b22_case
		.long   _024bef_case
		.long   _024bef_case
		.long   _024ad6_case
		.long   _024ae9_case
		.long   _024afc_case
		.long   _024afc_case
		.long   _024b13_case
		.long   _024b13_case
		.long   _024ac6_case
		.long   _024ac6_case
		.long   _024bef_case
		.long   _024bef_case
		.long   _024bef_case
		.long   _024bef_case
		.long   _024b22_case




_024a00_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %dl,0x000008(%esp)
		xor    %edx,%edx
		mov    %edx,(%esp)
		mov    0x000060(%eax),%dx
		xor    %ebx,%ebx
		cmp    $0x000017,%dx
		jne    _024a7d_jump
		testb  $0x000002,_0ced81_data
		je     _024a7d_jump
		xor    %eax,%eax
		mov    $0x000001,%cl
		mov    0x000008(%esp),%al
		xor    %edx,%edx
		test   %ax,%ax
		js     _024a3b_jump
		sar    %cl,%ax
		jmp    _024a44_jump

	_024a3b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024a44_jump:
		mov    _0cdc11_data,%dl
		mov    _0cdbb0_data,%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    (%ecx),%ecx
		mov    _0cdc10_data,%dl
		mov    %al,0x000008(%esp)
		testb  $0x000040,0x000007(%ecx,%edx,8)
		jne    _024a7d_jump
		test   %al,%al
		je     _024a74_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    _024a79_jump

	_024a74_jump:
		mov    $0x000001,%edx

	_024a79_jump:
		mov    %dl,0x000008(%esp)

	_024a7d_jump:
		xor    %eax,%eax
		mov    0x00002c(%edi),%dx
		mov    0x000069(%edi),%al
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		mov    0x000002(%esp),%eax
		movzbw 0x000068(%edi),%si
		sar    $0x000010,%eax
		mov    0x000028(%edi),%cx
		sar    $0x000004,%eax
		add    %ecx,%esi
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		cmp    $0x00001e,%al
		ja     _024bef_case
		and    $0x0000ff,%eax
		jmp    *%cs:_024984_switch(,%eax,4)

	_024ac6_case:
		mov    $0x000008,%eax
		sub    0x000042(%edi),%ax
		add    %eax,%ebx
		jmp    _024bef_case

	_024ad6_case:
		cmpw   $0x000000,0x000040(%edi)
		jl     _024bef_case
		add    $0x000011,%ebx
		jmp    _024bef_case

	_024ae9_case:
		cmpw   $0x000000,0x000040(%edi)
		jg     _024bef_case
		add    $0x000011,%ebx
		jmp    _024bef_case

	_024afc_case:
		cmpw   $0x000000,0x000040(%edi)
		jl     _024b0b_jump
		add    $0x000011,%ebx
		jmp    _024bef_case

	_024b0b_jump:
		add    $0x000002,%ebx
		jmp    _024bef_case

	_024b13_case:
		cmpw   $0x000000,0x000040(%edi)
		jg     _024b0b_jump
		add    $0x000011,%ebx
		jmp    _024bef_case

	_024b22_case:
		mov    0x000062(%edi),%al
		cmp    $0x000002,%al
		jb     _024b38_jump
		cmp    $0x000003,%al
		jbe    _024b35_jump
		cmp    $0x000012,%al
		jb     _024b38_jump
		cmp    $0x000013,%al
		ja     _024b38_jump

	_024b35_jump:
		add    $0x000008,%ebx

	_024b38_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		cmp    $0x00000a,%al
		jb     _024b94_jump
		jbe    _024bac_jump
		cmp    $0x000013,%al
		jb     _024b7d_jump
		jbe    _024bbd_jump
		cmp    $0x000016,%al
		jb     _024bc9_jump
		cmp    $0x000017,%al
		jbe    _024bd9_jump
		cmp    $0x000019,%al
		jbe    _024bac_jump
		jmp    _024bec_jump

	_024b7d_jump:
		cmp    $0x00000c,%al
		jb     _024bec_jump
		jbe    _024be9_jump
		cmp    $0x000012,%al
		je     _024bb1_jump
		jmp    _024bec_jump

	_024b94_jump:
		cmp    $0x000003,%al
		jb     _024ba8_jump
		jbe    _024bbd_jump
		cmp    $0x000006,%al
		jb     _024bc9_jump
		cmp    $0x000007,%al
		jbe    _024bd9_jump
		cmp    $0x000008,%al
		je     _024bac_jump
		jmp    _024bec_jump

	_024ba8_jump:
		cmp    $0x000001,%al
		ja     _024bb1_jump

	_024bac_jump:
		add    $0x000009,%ebx
		jmp    _024bef_case

	_024bb1_jump:
		cmpw   $0x000000,0x000040(%edi)
		jl     _024bef_case
		add    $0x000019,%ebx
		jmp    _024bef_case

	_024bbd_jump:
		cmpw   $0x000000,0x000040(%edi)
		jg     _024bef_case
		add    $0x000019,%ebx
		jmp    _024bef_case

	_024bc9_jump:
		cmpw   $0x000000,0x000040(%edi)
		jl     _024b0b_jump
		add    $0x000011,%ebx
		jmp    _024bef_case

	_024bd9_jump:
		cmpw   $0x000000,0x000040(%edi)
		jg     _024b0b_jump
		add    $0x000011,%ebx
		jmp    _024bef_case

	_024be9_jump:
		inc    %ebx
		jmp    _024bef_case

	_024bec_jump:
		add    $0x000008,%ebx

	_024bef_case:
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    0x000008(%esp),%dl
		test   %ax,%ax
		js     _024c01_jump
		sar    %cl,%ax
		jmp    _024c0a_jump

	_024c01_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024c0a_jump:
		sub    %al,%dl
		mov    %dl,0x000008(%esp)
		cmp    $0x000080,%dl
		jbe    _024c1b_jump
		xor    %cl,%cl
		mov    %cl,0x000008(%esp)

	_024c1b_jump:
		mov    $0x000004,%cl
		mov    %esi,%eax
		mov    0x000004(%esp),%edi
		test   %ax,%ax
		js     _024c2d_jump
		sar    %cl,%ax
		jmp    _024c36_jump

	_024c2d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024c36_jump:
		sub    %ebx,%edi
		mov    $0x000004,%cl
		mov    %edi,%eax
		test   %ax,%ax
		js     _024c46_jump
		sar    %cl,%ax
		jmp    _024c4f_jump

	_024c46_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024c4f_jump:
		xor    %ebx,%ebx
		xor    %cl,%cl
		jmp    _024c77_jump

	_024c55_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		sub    %ebx,%eax
		mov    %edi,%edx
		shl    $0x000004,%eax
		sub    %eax,%edx
		movswl %dx,%edx
		movswl %si,%eax
		call   _024930_func
		test   %ax,%ax
		je     _024c76_jump
		inc    %cl

	_024c76_jump:
		inc    %ebx

	_024c77_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		cmp    %eax,%ebx
		jle    _024c55_jump
		test   %cl,%cl
		je     _024c8c_jump
		movl   $0x00000f,(%esp)

	_024c8c_jump:
		mov    (%esp),%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_024c98_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _024cb5_jump
		mov    $0x000001,%eax
		jg     _024cb5_jump
		neg    %eax

	_024cb5_jump:
		mov    %eax,%ecx
		test   %ax,%ax
		je     _024e1b_jump
		cmpw   $0x000017,0x000060(%esi)
		jne    _024cf8_jump
		mov    _0ced81_data,%ah
		mov    $0x000004,%dh
		test   $0x000002,%ah
		je     _024cdd_jump
		mov    $0x000008,%eax
		mov    $0x000002,%dh
		jmp    _024ce2_jump

	_024cdd_jump:
		mov    $0x00000e,%eax

	_024ce2_jump:
		mov    _0cdbf2_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _024cfd_jump
		xor    %ebx,%ebx
		mov    %dh,%bl
		sub    %ebx,%eax
		jmp    _024cfd_jump

	_024cf8_jump:
		mov    $0x00000e,%eax

	_024cfd_jump:
		test   %cx,%cx
		jge    _024d04_jump
		neg    %eax

	_024d04_jump:
		test   %dl,%dl
		je     _024d0a_jump
		neg    %eax

	_024d0a_jump:
		cwtl   
		mov    0x000028(%esi),%ebx
		add    %eax,%ebx
		mov    0x000028(%esi),%di
		mov    %ebx,0x000028(%esi)
		test   %dl,%dl
		jne    _024d4a_jump
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		mov    _092265_data(,%edx,4),%bl
		mov    0x000040(%esi),%ax
		test   $0x000010,%bl
		je     _024d46_jump
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _024d3d_jump
		sar    %cl,%ax
		jmp    _024d46_jump

	_024d3d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024d46_jump:
		cwtl   
		sub    %eax,0x000028(%esi)

	_024d4a_jump:
		testb  $0x000020,0x000081(%esi)
		je     _024d73_jump
		lea    0x000010(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		jmp    _024d79_jump

	_024d73_jump:
		xor    %ecx,%ecx
		mov    %ecx,0x000008(%esp)

	_024d79_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000074(%esi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %eax,%edx
		mov    $0x000004,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _024d99_jump
		sar    %cl,%ax
		jmp    _024da2_jump

	_024d99_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024da2_jump:
		mov    0x000060(%esi),%bx
		mov    %eax,%edx
		cmp    $0x000017,%bx
		jne    _024df8_jump
		xor    %ebx,%ebx
		mov    _0cdc11_data,%bl
		mov    _0cdbb0_data,%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    _0cdc10_data,%bl
		mov    %ecx,(%esp)
		lea    0x000000(,%ebx,8),%ecx
		mov    (%esp),%ebx
		mov    (%ebx),%ebx
		testb  $0x000040,0x000007(%ecx,%ebx,1)
		je     _024df8_jump
		xor    %eax,%eax
		mov    $0x000001,%cl
		mov    %dl,%al
		test   %ax,%ax
		js     _024def_jump
		sar    %cl,%ax
		jmp    _024df8_jump

	_024def_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024df8_jump:
		test   %al,%al
		je     _024dfe_jump
		dec    %al

	_024dfe_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _024a00_func
		mov    %al,%dl
		movswl %di,%eax
		mov    %eax,0x000028(%esi)
		mov    %dl,%al
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_024e1b_jump:
		xor    %dl,%dl
		mov    %dl,%al
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_024e28_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000002,_092224_data(%eax)
		jne    _02516d_jump
		mov    0x000060(%ecx),%ax
		cmp    $0x000028,%ax
		jb     _024e9a_jump
		jbe    _0250d7_jump
		cmp    $0x00007a,%ax
		jb     _024e7b_jump
		jbe    _0250d7_jump
		cmp    $0x0000a5,%ax
		jb     _02514f_jump
		jbe    _0250c4_jump
		cmp    $0x0000ac,%ax
		je     _025130_jump
		jmp    _02514f_jump

	_024e7b_jump:
		cmp    $0x000041,%ax
		jb     _02514f_jump
		jbe    _0250ff_jump
		cmp    $0x000064,%ax
		je     _0250f4_jump
		jmp    _02514f_jump

	_024e9a_jump:
		cmp    $0x000003,%ax
		jb     _024ec1_jump
		jbe    _025071_jump
		cmp    $0x000009,%ax
		jb     _02514f_jump
		jbe    _0250c4_jump
		cmp    $0x000017,%ax
		je     _024ecf_jump
		jmp    _02514f_jump

	_024ec1_jump:
		test   %ax,%ax
		je     _025090_jump
		jmp    _02514f_jump

	_024ecf_jump:
		call   _069318_func
		cmpb   $0x00000c,_0cefd2_data
		je     _02514f_jump
		cmpb   $0x00000c,_0cefd6_data
		je     _02514f_jump
		cmpb   $0x00000c,_0cefd5_data
		je     _02514f_jump
		cmpb   $0x000005,_0cdc11_data
		je     _02514f_jump
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdc10_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _024f53_jump
		xor    %edx,%edx
		mov    _0cdbdc_data,%bx
		mov    %dx,_0cdbe6_data
		mov    _0cdbd0_data,%edx
		add    $0x000010,%ebx
		add    $0x000010,%edx
		mov    %bx,_0cdbdc_data
		mov    %edx,_0cdbd0_data

	_024f53_jump:
		cmpb   $0x000000,_0cefa9_data
		je     _024f8c_jump
		cmpb   $0x000000,_0cdc11_data
		jne    _024f7d_jump
		cmpb   $0x000028,_0cdc10_data
		jne    _024f7d_jump
		mov    $0x00001a,%ebx
		mov    $0x000002,%edx
		jmp    _025033_jump

	_024f7d_jump:
		mov    $0x00001c,%ebx
		mov    $0x000002,%edx
		jmp    _025033_jump

	_024f8c_jump:
		cmpb   $0x000001,_0cdc11_data
		jne    _024fcb_jump
		mov    _0cdc10_data,%ah
		cmp    $0x000009,%ah
		je     _024fa5_jump
		cmp    $0x00000b,%ah
		jne    _024fcb_jump

	_024fa5_jump:
		mov    _0cdc25_data,%dh
		test   $0x000008,%dh
		sete   %al
		mov    %dh,%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,_0cdc25_data
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,_0cdc25_data

	_024fcb_jump:
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _024fd9_jump
		neg    %eax

	_024fd9_jump:
		cmp    $0x000002,%eax
		jg     _02501f_jump
		xor    %eax,%eax
		call   _069cd8_func
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdc10_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _025013_jump
		mov    $0x000018,%ebx
		mov    $0x000002,%edx
		jmp    _025033_jump

	_025013_jump:
		mov    $0x000021,%ebx
		mov    $0x000002,%edx
		jmp    _025033_jump

	_02501f_jump:
		mov    $0x000001,%eax
		mov    $0x000020,%ebx
		mov    $0x000002,%edx
		call   _069cd8_func

	_025033_jump:
		mov    %ecx,%eax
		call   _01d374_func
		xor    %esi,%esi
		mov    _0cefce_data,%ah
		mov    %si,_0cedf8_data
		test   %ah,%ah
		je     _025057_jump
		cmpw   $0x000000,_0cedd8_data
		je     _025065_jump

	_025057_jump:
		movw   $0x000001,_0cdbec_data
		jmp    _02514f_jump

	_025065_jump:
		mov    %si,_0cdbec_data
		jmp    _02514f_jump

	_025071_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		jmp    _02514a_jump

	_025090_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d36c_func
		cmpb   $0x000002,0x00006c(%ecx)
		je     _0250b3_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d364_func
		jmp    _02514f_jump

	_0250b3_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d364_func
		jmp    _02514f_jump

	_0250c4_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d374_func
		jmp    _02514f_jump

	_0250d7_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05f030_func
		movb   $0x000007,0x000072(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _02514f_jump

	_0250f4_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		jmp    _02514a_jump

	_0250ff_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		movb   $0x0000ff,0x00007c(%ecx)
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _05f030_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _02514f_jump

	_025130_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d374_func
		mov    $0x00000f,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx

	_02514a_jump:
		call   _05f030_func

	_02514f_jump:
		movw   $0x000000,0x000052(%ecx)
		mov    0x000060(%ecx),%bx
		movb   $0x000000,0x000071(%ecx)
		cmp    $0x000028,%bx
		je     _02516d_jump
		cmp    $0x00007a,%bx
		je     _02516d_jump
		movb   $0x000000,0x000072(%ecx)

	_02516d_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025174_func:
		push   %ecx
		push   %edx
		xor    %dl,%dl
		cmpb   $0x000009,0x000062(%eax)
		jne    _0251a2_jump
		cmpw   $0x000000,0x000042(%eax)
		jl     _0251a2_jump
		mov    0x000060(%eax),%cx
		cmp    $0x000017,%cx
		je     _0251a0_jump
		mov    %ecx,%eax
		and    $0x00ffff,%eax
		testb  $0x000008,_092266_data(,%eax,4)
		je     _0251a2_jump

	_0251a0_jump:
		mov    $0x000001,%dl

	_0251a2_jump:
		mov    %dl,%al
		pop    %edx
		pop    %ecx
		ret    



_0251a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    0x000062(%eax),%dl
		xor    %cl,%cl
		cmp    $0x000009,%dl
		jne    _025239_jump
		cmpw   $0x000000,0x000042(%eax)
		jl     _025239_jump
		mov    0x000060(%eax),%bx
		cmp    $0x000017,%bx
		jne    _025223_jump
		mov    $0x000001,%cl
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %cl,_0cefd3_data
		call   _01d374_func
		call   _069f20_func
		mov    $0xffffffff,%edx
		mov    $0x0000f9,%eax
		mov    $0x00000c,%esi
		call   _06f3bc_func
		mov    _0cdbe6_data,%di
		mov    $_0cdba4_data,%eax
		sub    $0x000003,%edi
		mov    %si,_0cedf8_data
		mov    %di,_0cdbe6_data
		call   _077f64_func
		jmp    _025239_jump

	_025223_jump:
		xor    %edx,%edx
		mov    %bx,%dx
		testb  $0x000008,_092266_data(,%edx,4)
		je     _025239_jump
		call   _02ec54_func
		mov    $0x000001,%cl

	_025239_jump:
		mov    %cl,%al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_025244_switch:
		.long   _025480_case
		.long   _025480_case
		.long   _025436_case
		.long   _025442_case
		.long   _025449_case
		.long   _02545a_case
		.long   _02546b_case
		.long   _025474_case
		.long   _025480_case
		.long   _0253e6_case
		.long   _025480_case
		.long   _025480_case
		.long   _0254d8_case
		.long   _025480_case
		.long   _0253e6_case
		.long   _0253e6_case
		.long   _025480_case
		.long   _025480_case
		.long   _025436_case
		.long   _025442_case
		.long   _025449_case
		.long   _02545a_case
		.long   _02546b_case
		.long   _025474_case
		.long   _025480_case
		.long   _025480_case
		.long   _025480_case
		.long   _025480_case
		.long   _025480_case
		.long   _025480_case
		.long   _0253e6_case




_0252c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000001,_092266_data(,%eax,4)
		jne    _0252e5_jump
		cmp    $0x000017,%ax
		jne    _0255c3_jump

	_0252e5_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000010,_092265_data(,%eax,4)
		je     _02530a_jump
		cmp    $0x000017,%ax
		je     _02530a_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		call   _053c60_func
		mov    %eax,%edi
		jmp    _02530e_jump

	_02530a_jump:
		mov    0x000040(%ecx),%di

	_02530e_jump:
		xor    %eax,%eax
		mov    0x000028(%ecx),%dx
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000008(%esp)
		mov    0x000069(%ecx),%al
		mov    0x00002c(%ecx),%dx
		mov    0x000060(%ecx),%si
		add    %eax,%edx
		mov    0x000008(%esp),%eax
		mov    %dx,0x000010(%esp)
		mov    %edx,%ebx
		xor    %ah,%ah
		xor    %dh,%bh
		and    $0x00000f,%al
		and    $0x00000f,%bl
		add    %edi,%eax
		cmp    $0x000017,%si
		jne    _025381_jump
		mov    _0cdbf2_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _025381_jump
		test   %di,%di
		jle    _025363_jump
		mov    $0x00000f,%eax
		jmp    _025367_jump

	_025363_jump:
		jge    _025367_jump
		xor    %eax,%eax

	_025367_jump:
		xor    %edx,%edx
		mov    0x000062(%ecx),%dl
		lea    0x000000(,%edx,4),%esi
		cwtl   
		movswl %bx,%edx
		call   *_0c20b8_data(%esi)
		mov    %eax,%ebx
		jmp    _025397_jump

	_025381_jump:
		xor    %edx,%edx
		mov    0x000062(%ecx),%dl
		lea    0x000000(,%edx,4),%esi
		cwtl   
		movswl %bx,%edx
		call   *_0c20b8_data(%esi)

	_025397_jump:
		sub    %ebx,%eax
		mov    0x000010(%esp),%ebx
		add    %eax,%ebx
		mov    %ax,0x00000c(%esp)
		movswl %bx,%eax
		mov    0x000008(%esp),%esi
		sar    $0x000004,%eax
		add    %edi,%esi
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		mov    %eax,(%esp)
		xor    %bh,%bh
		mov    (%esp),%eax
		and    $0x00000f,%bl
		cwtl   
		and    $0x00000f,%esi
		call   _01e0e4_func
		mov    %al,0x000014(%esp)
		cmp    $0x00001e,%al
		ja     _025480_case
		and    $0x0000ff,%eax
		jmp    *%cs:_025244_switch(,%eax,4)

	_0253e6_case:
		mov    0x00000e(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		sub    $0x000010,%eax
		mov    0x000006(%esp),%ebp
		sar    $0x000004,%eax
		sar    $0x000010,%ebp
		movswl %ax,%edx
		movswl %di,%eax
		add    %ebp,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%edi
		movswl %bx,%edx
		movswl %si,%eax
		call   *_0c21b8_data(%edi)
		mov    %ebx,%edx
		sub    $0x000010,%edx
		jmp    _0254de_jump

	_025436_case:
		mov    $0x00000f,%edx
		sub    %esi,%edx
		jmp    _0254e0_jump

	_025442_case:
		mov    %esi,%edx
		jmp    _0254e0_jump

	_025449_case:
		movswl %si,%eax
		mov    $0x00000f,%edx
		sar    %eax
		sub    %eax,%edx
		jmp    _0254e0_jump

	_02545a_case:
		movswl %si,%eax
		mov    $0x000007,%edx
		sar    %eax
		sub    %eax,%edx
		jmp    _0254e0_jump

	_02546b_case:
		movswl %si,%eax
		sar    %eax
		mov    %eax,%edx
		jmp    _0254e0_jump

	_025474_case:
		movswl %si,%eax
		sar    %eax
		add    $0x000008,%eax
		mov    %eax,%edx
		jmp    _0254e0_jump

	_025480_case:
		mov    0x000010(%esp),%eax
		mov    0x00000c(%esp),%esi
		mov    0x000008(%esp),%edx
		add    %esi,%eax
		add    %edx,%edi
		add    $0x000010,%eax
		mov    %edi,%edx
		mov    %eax,%esi
		xor    %dh,%dh
		cwtl   
		and    $0x00000f,%dl
		sar    $0x000004,%eax
		mov    %dx,0x000004(%esp)
		movswl %ax,%edx
		movswl %di,%eax
		sar    $0x000004,%eax
		and    $0x00000f,%esi
		cwtl   
		sub    $0x000010,%esi
		call   _01e0e4_func
		movzbl %al,%edi
		mov    0x000002(%esp),%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		call   *_0c22b8_data(,%edi,4)
		sub    %esi,%eax
		cmp    $0x000002,%ax
		jle    _0254dc_jump

	_0254d8_case:
		mov    %ebx,%edx
		jmp    _0254e0_jump

	_0254dc_jump:
		mov    %ebx,%edx

	_0254de_jump:
		add    %eax,%edx

	_0254e0_jump:
		mov    %ecx,%eax
		call   _0251a8_func
		test   %al,%al
		jne    _0255c3_jump
		mov    0x000060(%ecx),%di
		cmp    $0x000017,%di
		jne    _0255b0_jump
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _025570_jump
		cmpb   $0x000002,_0cdc11_data
		setne  %al
		and    $0x0000ff,%eax
		je     _025570_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _025527_jump
		neg    %eax

	_025527_jump:
		cmp    $0x000002,%eax
		jle    _025570_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _025538_jump
		neg    %eax

	_025538_jump:
		cmp    $0x000010,%eax
		jge    _025570_jump
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		testb  $0x000002,_092224_data(%eax)
		jne    _025570_jump
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000042(%ecx),%si
		call   _01d374_func
		movb   $0x000001,_0cefd3_data
		call   _069f20_func
		mov    %si,0x000042(%ecx)
		jmp    _0255c3_jump

	_025570_jump:
		cmpb   $0x000003,_0cdc11_data
		jne    _025582_jump
		cmpb   $0x000020,_0cdc10_data
		je     _025589_jump

	_025582_jump:
		mov    $0x000001,%eax
		jmp    _02558b_jump

	_025589_jump:
		xor    %eax,%eax

	_02558b_jump:
		test   %eax,%eax
		je     _0255c3_jump
		cmpb   $0x000003,_0cdc11_data
		jne    _0255a1_jump
		cmpb   $0x000016,_0cdc10_data
		je     _0255a8_jump

	_0255a1_jump:
		mov    $0x000001,%eax
		jmp    _0255aa_jump

	_0255a8_jump:
		xor    %eax,%eax

	_0255aa_jump:
		test   %eax,%eax
		je     _0255c3_jump
		jmp    _0255b2_jump

	_0255b0_jump:
		je     _0255c3_jump

	_0255b2_jump:
		add    0x00000c(%esp),%edx
		sub    %ebx,%edx
		mov    %ecx,%eax
		mov    %dx,0x000042(%ecx)
		call   _024e28_func

	_0255c3_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0255d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		mov    0x000028(%ebx),%dx
		mov    0x00002c(%ebx),%si
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    0x000069(%ebx),%cl
		mov    0x000068(%ebx),%al
		add    %esi,%ecx
		add    %edx,%eax
		mov    %ecx,%esi
		mov    %eax,%edi
		movswl %cx,%edx
		and    $0x00fff0,%esi
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx
		cwtl   
		and    $0x00000f,%edi
		call   _01e0e4_func
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%ebp
		xor    %edx,%edx
		movswl %di,%eax
		call   *_0c1fb8_data(%ebp)
		cmpw   $0x000017,0x000060(%ebx)
		je     _02563e_jump
		movswl %si,%edx
		cwtl   
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%ebx),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%ebx)
		jmp    _025646_jump

	_02563e_jump:
		add    %esi,%eax
		sub    %ecx,%eax
		mov    %ax,0x000042(%ebx)

	_025646_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025650_func:
		mov    %edx,%eax
		inc    %eax
		ret    



_025654_func:
		mov    $0x00000f,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		lea    0x000000(%eax),%eax

	_025660_jump:
		ret    



_025664_func:
		cwtl   
		mov    $0x00000f,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		ret    



_025674_func:
		cwtl   
		mov    $0x000007,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		ret    



_025684_func:
		cwtl   
		sar    %eax
		ret    



_025688_func:
		cwtl   
		sar    %eax
		add    $0x000008,%eax
		ret    

	_025690_jump:
		mov    %edx,%eax
		ret    

	_025694_jump:
		xor    %eax,%eax
		ret    



_025698_func:
		mov    $0x000010,%eax
		ret    

_0256a0_switch:
		.long   _0258bb_case
		.long   _0258bb_case
		.long   _02574c_case
		.long   _025779_case
		.long   _0257a6_case
		.long   _0257d7_case
		.long   _02580d_case
		.long   _025843_case
		.long   _0258bb_case
		.long   _025885_case
		.long   _0258bb_case
		.long   _0258bb_case
		.long   _025874_case
		.long   _0258bb_case
		.long   _025885_case
		.long   _025885_case
		.long   _0258bb_case
		.long   _0258bb_case
		.long   _02574c_case
		.long   _025779_case
		.long   _0257a6_case
		.long   _0257d7_case
		.long   _02580d_case
		.long   _025843_case
		.long   _0258bb_case
		.long   _0258bb_case
		.long   _0258bb_case
		.long   _0258bb_case
		.long   _0258bb_case
		.long   _0258bb_case
		.long   _025885_case




_02571c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_025654_func,%esi
		mov    $_025660_jump,%edi
		mov    $_025664_func,%ecx
		xor    %al,%al
		mov    $_025688_func,%ebx

	_025738_jump:
		cmp    $0x00001e,%al
		ja     _0258bb_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_0256a0_switch(,%edx,4)

	_02574c_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,_0c20b8_data(,%edx,4)
		mov    %esi,_0c21b8_data(,%edx,4)
		mov    %esi,_0c22b8_data(,%edx,4)
		mov    %esi,_0c1fb8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025738_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025779_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edi,_0c20b8_data(,%edx,4)
		mov    %edi,_0c21b8_data(,%edx,4)
		mov    %edi,_0c22b8_data(,%edx,4)
		mov    %edi,_0c1fb8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025738_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0257a6_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ecx,_0c20b8_data(,%edx,4)
		mov    %ecx,_0c21b8_data(,%edx,4)
		mov    %ecx,_0c22b8_data(,%edx,4)
		mov    %ecx,_0c1fb8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025738_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0257d7_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_025674_func,%ebp
		mov    %ebp,_0c20b8_data(,%edx,4)
		mov    %ebp,_0c21b8_data(,%edx,4)
		mov    %ebp,_0c22b8_data(,%edx,4)
		mov    %ebp,_0c1fb8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025738_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02580d_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_025684_func,%ebp
		mov    %ebp,_0c20b8_data(,%edx,4)
		mov    %ebp,_0c21b8_data(,%edx,4)
		mov    %ebp,_0c22b8_data(,%edx,4)
		mov    %ebp,_0c1fb8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025738_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025843_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebx,_0c20b8_data(,%edx,4)
		mov    %ebx,_0c21b8_data(,%edx,4)
		mov    %ebx,_0c22b8_data(,%edx,4)
		mov    %ebx,_0c1fb8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025738_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025874_case:
		xor    %edx,%edx
		mov    %al,%dl
		movl   $_025690_jump,_0c20b8_data(,%edx,4)
		jmp    _0258ca_jump

	_025885_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_025694_jump,%ebp
		mov    %ebp,_0c20b8_data(,%edx,4)
		mov    %ebp,_0c21b8_data(,%edx,4)
		mov    %ebp,_0c22b8_data(,%edx,4)
		mov    %ebp,_0c1fb8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025738_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0258bb_case:
		xor    %edx,%edx
		mov    %al,%dl
		movl   $_025650_func,_0c20b8_data(,%edx,4)

	_0258ca_jump:
		movl   $_025698_func,_0c21b8_data(,%edx,4)
		movl   $_025690_jump,_0c22b8_data(,%edx,4)
		movl   $_025694_jump,_0c1fb8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025738_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025900_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000044,%esp
		mov    %eax,%ecx
		mov    _0dd760_data,%eax
		mov    %eax,0x000010(%esp)
		call   _010010_func
		mov    0x000010(%esp),%eax
		movw   $0x000000,0x000006(%eax)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _025932_jump
		mov    %ebx,%eax

	_025932_jump:
		mov    0x000010(%esp),%ebx
		mov    %ax,0x000008(%ebx)
		test   %dx,%dx
		jl     _02594f_jump
		mov    $0x000001,%eax
		movswl %dx,%ebx
		cmp    %ebx,%eax
		jge    _02594d_jump
		mov    %ebx,%eax

	_02594d_jump:
		jmp    _025961_jump

	_02594f_jump:
		movswl %dx,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _02595f_jump
		mov    %ebx,%eax

	_02595f_jump:
		neg    %eax

	_025961_jump:
		mov    0x000010(%esp),%edx
		mov    %ax,0x00000a(%edx)
		xor    %eax,%eax
		mov    $0x000046,%ebx
		mov    %cx,%ax
		cmp    %ebx,%eax
		jle    _025979_jump
		mov    %ebx,%eax

	_025979_jump:
		mov    %eax,%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jge    _025986_jump
		mov    %ebx,%eax

	_025986_jump:
		mov    %al,0x00000c(%edx)
		xor    %eax,%eax
		mov    0x000001(%edx),%al
		call   _07b95f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54524550,%eax
		mov    $0x400921fb,%edx
		call   _07c4c8_func
		mov    %edx,0x000014(%esp)
		mov    0x000010(%esp),%edx
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%edx),%al
		call   _07b95f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54524550,%eax
		mov    $0x401921fb,%edx
		call   _07c4c8_func
		mov    $0xbff921fb,%ebx
		mov    %eax,0x000020(%esp)
		mov    0x000010(%esp),%eax
		mov    %edx,0x000008(%esp)
		mov    $0x54524550,%edx
		mov    0x000020(%eax),%eax
		mov    %ebx,0x00001c(%esp)
		mov    %eax,0x000018(%esp)
		xor    %ah,%ah
		mov    %edx,0x000004(%esp)
		mov    %ah,0x000034(%esp)

	_0259f8_jump:
		mov    0x000010(%esp),%edx
		xor    %eax,%eax
		mov    0x00000c(%edx),%al
		call   _07b95f_func
		mov    %eax,%edi
		mov    %edx,%esi
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		call   _07c45a_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07bb4f_func
		mov    %eax,0x000024(%esp)
		mov    %edx,0x00002c(%esp)
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		call   _07c481_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07bb4f_func
		mov    %eax,0x000028(%esp)
		mov    %edx,0x000030(%esp)
		xor    %edi,%edi
		xor    %bh,%bh
		xor    %esi,%esi
		mov    %bh,0x000040(%esp)

	_025a58_jump:
		mov    0x000028(%esp),%eax
		mov    0x000030(%esp),%edx
		call   _07c6ce_func
		mov    %eax,0x00000c(%esp)
		mov    %edx,%ebp
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07c45a_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00000c(%esp),%eax
		mov    %ebp,%edx
		call   _07bb4f_func
		call   _07c19c_func
		mov    0x000018(%esp),%edx
		mov    %ax,(%edx)
		mov    0x000024(%esp),%eax
		mov    0x00002c(%esp),%edx
		call   _07c19c_func
		mov    0x000018(%esp),%edx
		mov    %ax,0x000002(%edx)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07c481_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00000c(%esp),%eax
		mov    %ebp,%edx
		call   _07bb4f_func
		call   _07c19c_func
		mov    0x000018(%esp),%edx
		mov    0x000020(%esp),%ebx
		lea    0x00000a(%edx),%ecx
		mov    %ax,0x000004(%edx)
		mov    %ecx,0x000018(%esp)
		mov    %edi,%eax
		mov    %esi,%edx
		mov    0x000008(%esp),%ecx
		call   _07b998_func
		mov    %eax,%edi
		mov    0x000040(%esp),%al
		mov    %edx,%esi
		inc    %al
		mov    0x000010(%esp),%edx
		mov    %al,0x000040(%esp)
		cmp    (%edx),%al
		jbe    _025a58_jump
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    (%esp),%ebx
		mov    0x000014(%esp),%ecx
		call   _07b998_func
		mov    %edx,0x00001c(%esp)
		mov    0x000034(%esp),%dl
		inc    %dl
		mov    %eax,0x000004(%esp)
		mov    %dl,0x000034(%esp)
		mov    %dl,%al
		mov    0x000010(%esp),%edx
		cmp    0x000001(%edx),%al
		jbe    _0259f8_jump
		mov    0x000010(%esp),%eax
		mov    0x000010(%esp),%ebx
		xor    %ecx,%ecx
		mov    0x000002(%eax),%dx
		mov    0x000024(%ebx),%ebx
		test   %dx,%dx
		jbe    _025b90_jump

	_025b46_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%esi
		mov    %cx,%dx
		movzbl (%esi),%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ecx,%edx
		add    %eax,%edx
		mov    %edx,%eax
		mov    %dx,(%ebx)
		inc    %edx
		mov    0x000010(%esp),%esi
		mov    %dx,0x000002(%ebx)
		xor    %dh,%dh
		mov    (%esi),%dl
		add    %eax,%edx
		add    $0x000002,%edx
		mov    %dx,0x000004(%ebx)
		xor    %dh,%dh
		mov    (%esi),%dl
		add    %edx,%eax
		inc    %eax
		mov    %ax,0x000006(%ebx)
		inc    %ecx
		mov    0x000002(%esi),%si
		add    $0x000034,%ebx
		cmp    %si,%cx
		jb     _025b46_jump

	_025b90_jump:
		mov    0x000010(%esp),%eax
		mov    _0dd762_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    (%eax),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0dd764_data,%edx
		mov    %al,0x00003c(%esp)
		xor    %ebx,%ebx
		mov    0x000010(%esp),%eax
		sar    $0x000010,%edx
		mov    0x000001(%eax),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %cl,%cl
		mov    0x000010(%esp),%edx
		mov    %al,%bh
		mov    0x000010(%esp),%eax
		mov    %cl,0x000038(%esp)
		mov    0x000001(%edx),%ch
		mov    0x000024(%eax),%eax
		test   %ch,%ch
		jbe    _025c8f_jump

	_025be3_jump:
		mov    0x000010(%esp),%edx
		mov    (%edx),%cl
		xor    %bl,%bl
		test   %cl,%cl
		jbe    _025c78_jump

	_025bf3_jump:
		xor    %dh,%dh
		xor    %ch,%ch
		mov    0x00003c(%esp),%dl
		mov    %bl,%cl
		imul   %ecx,%edx
		movzbw 0x000038(%esp),%si
		mov    %bh,%cl
		imul   %esi,%ecx
		cmpw   $0x000100,_0dd764_data
		jg     _025c1f_jump
		mov    0x000010(%esp),%esi
		mov    0x000018(%esi),%esi
		jmp    _025c3c_jump

	_025c1f_jump:
		cmp    $0x0000a0,%dx
		jae    _025c2f_jump
		mov    0x000010(%esp),%esi
		mov    0x000018(%esi),%esi
		jmp    _025c3c_jump

	_025c2f_jump:
		mov    0x000010(%esp),%esi
		mov    0x00001c(%esi),%esi
		sub    $0x0000a0,%edx

	_025c3c_jump:
		mov    %esi,0x000008(%eax)
		mov    %dl,0x00002e(%eax)
		mov    %dl,0x00002c(%eax)
		mov    %cl,%dh
		mov    %cl,0x000033(%eax)
		add    %bh,%dh
		mov    %cl,0x00002d(%eax)
		dec    %dh
		mov    %dh,0x000031(%eax)
		mov    0x00003c(%esp),%ch
		mov    %dh,0x00002f(%eax)
		add    %ch,%dl
		dec    %dl
		mov    %dl,0x000032(%eax)
		mov    %dl,0x000030(%eax)
		mov    0x000010(%esp),%edx
		inc    %bl
		mov    (%edx),%cl
		add    $0x000034,%eax
		cmp    %cl,%bl
		jb     _025bf3_jump

	_025c78_jump:
		mov    0x000038(%esp),%dl
		inc    %dl
		mov    0x000010(%esp),%ecx
		mov    %dl,0x000038(%esp)
		cmp    0x000001(%ecx),%dl
		jb     _025be3_jump

	_025c8f_jump:
		mov    0x000010(%esp),%eax
		movb   $0x000001,0x00000d(%eax)
		add    $0x000044,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_025ca0_case:
		push   %edx
		mov    _0dd760_data,%edx
		test   %edx,%edx
		je     _025cda_jump
		cmpl   $0x000000,0x000020(%edx)
		je     _025cb9_jump
		lea    0x000020(%edx),%eax
		call   _07b83c_func

	_025cb9_jump:
		cmpl   $0x000000,0x000024(%edx)
		je     _025cc7_jump
		lea    0x000024(%edx),%eax
		call   _07b83c_func

	_025cc7_jump:
		cmpl   $0x000000,_0dd760_data
		je     _025cda_jump
		mov    $_0dd760_data,%eax
		call   _07b83c_func

	_025cda_jump:
		pop    %edx
		ret    



_025cdc_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,(%esp)
		mov    %edx,%edi
		mov    %ebx,0x000008(%esp)
		mov    %cx,0x000004(%esp)
		mov    $0x000100,%edx
		mov    $0x0000c8,%ebx
		mov    $0x000020,%eax
		xor    %cl,%cl
		mov    %dx,_0dd764_data
		xor    %edx,%edx
		mov    %bx,_0dd766_data
		mov    %dx,_0dd76a_data
		mov    0x00001c(%esp),%edx
		mov    %ax,_0dd768_data
		test   %edx,%edx
		je     _025e02_jump
		cmpl   $0x000000,0x000020(%esp)
		je     _025e02_jump
		mov    $0x00003c,%eax
		call   _07b824_func
		mov    %eax,%edx
		mov    %eax,_0dd760_data
		test   %eax,%eax
		je     _025e02_jump
		xor    %ebx,%ebx
		mov    %eax,%esi
		mov    (%esp),%bx
		mov    $0x000002,%eax
		cmp    %ebx,%eax
		jge    _025d60_jump
		mov    %ebx,%eax

	_025d60_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    $0x000001,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _025d72_jump
		mov    %ebx,%eax

	_025d72_jump:
		mov    %al,0x000001(%edx)
		mov    (%esp),%eax
		imul   %edi,%eax
		mov    %ax,0x000002(%edx)
		mov    (%esp),%eax
		inc    %edi
		inc    %eax
		imul   %edi,%eax
		mov    %ax,0x000004(%edx)
		mov    0x00001c(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x000010(%edx)
		mov    0x000020(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000014(%edx)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		call   _07b824_func
		mov    %eax,0x000024(%edx)
		test   %eax,%eax
		je     _025e02_jump
		xor    %ebx,%ebx
		mov    0x000004(%edx),%bx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		call   _07b824_func
		mov    %eax,0x000020(%edx)
		test   %eax,%eax
		je     _025e02_jump
		mov    _0cc638_data,%eax
		mov    _0dd764_data,%bx
		mov    %eax,0x000018(%edx)
		cmp    $0x000100,%bx
		jg     _025df8_jump
		movl   $0x000000,0x00001c(%edx)
		jmp    _025e00_jump

	_025df8_jump:
		add    $0x00c800,%eax
		mov    %eax,0x00001c(%edx)

	_025e00_jump:
		mov    $0x000001,%cl

	_025e02_jump:
		test   %cl,%cl
		je     _025e93_jump
		cmpw   $0x000100,_0dd764_data
		jg     _025e4a_jump
		mov    _0dd768_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		shl    $0x000006,%eax
		mov    0x000010(%esi),%ebx
		mov    _0dd762_data,%edi
		add    %ebx,%eax
		mov    _0dd766_data,%ebx
		mov    0x000018(%esi),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edi
		add    %ebx,%eax
		mov    %edi,%ebx
		jmp    _025e6a_jump

	_025e4a_jump:
		mov    $0x0000a0,%ebx
		mov    0x000018(%esi),%edx
		mov    0x000010(%esi),%eax
		call   _07a070_func
		mov    $0x0000a0,%ebx
		mov    0x000010(%esi),%eax
		mov    0x00001c(%esi),%edx
		add    $0x0000a0,%eax

	_025e6a_jump:
		call   _07a070_func
		mov    0x000002(%esp),%edx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000018(%esp),%bx
		mov    0x000008(%esp),%ax
		sar    $0x000010,%edx
		call   _025900_func
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c

	_025e93_jump:
		call   _025ca0_case
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_025ea4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    _0dd760_data,%esi
		mov    0x00000d(%esi),%ah
		mov    0x000020(%esi),%ecx
		cmp    $0x000001,%ah
		jne    _026046_jump
		cmpw   $0x000000,0x00000a(%esi)
		jl     _025ed5_jump
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		mov    %eax,0x00000c(%esp)
		jmp    _025ee7_jump

	_025ed5_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000008(%esi),%dx
		mov    0x000006(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x00000c(%esp)

	_025ee7_jump:
		mov    _0dd762_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    (%esi),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0dd764_data,%edx
		mov    %al,0x000038(%esp)
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000001(%esi),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %al,0x000024(%esp)
		mov    _0dd768_data,%eax
		sar    $0x000010,%eax
		xor    %bl,%bl
		sub    $0x000064,%eax
		mov    %bl,0x000034(%esp)
		mov    %eax,0x000010(%esp)

	_025f2d_jump:
		mov    _0dd766_data,%ebp
		xor    %dl,%dl
		sar    $0x000010,%ebp
		mov    %dl,0x000030(%esp)
		sub    $0x0000a0,%ebp

	_025f42_jump:
		mov    0x000002(%ecx),%edi
		movswl (%ecx),%edx
		sar    $0x000010,%edi
		shl    $0x000009,%edx
		add    $0x000200,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    (%ecx),%edx
		sar    $0x000010,%edx
		shl    $0x000009,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%edi
		mov    %ebp,%edx
		mov    0x00000c(%esp),%eax
		sub    %ebx,%edx
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000008(%esi),%ax
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		add    $0x0000a0,%ebx
		mov    0x000010(%esp),%edx
		add    %ebx,%eax
		mov    0x00000c(%esp),%ebx
		sub    %edi,%edx
		imul   %ebx,%edx
		mov    %ax,0x000006(%ecx)
		mov    %edx,%eax
		xor    %ebx,%ebx
		sar    $0x00001f,%edx
		mov    0x000008(%esi),%bx
		idiv   %ebx
		add    $0x00000a,%ecx
		add    $0x000064,%edi
		mov    0x000030(%esp),%dh
		add    %edi,%eax
		inc    %dh
		mov    %ax,-0x000002(%ecx)
		xor    %eax,%eax
		mov    %dh,0x000030(%esp)
		mov    0x000038(%esp),%al
		mov    (%esi),%bl
		add    %eax,%ebp
		cmp    %bl,%dh
		jbe    _025f42_jump
		mov    0x000010(%esp),%edx
		mov    0x000034(%esp),%bh
		xor    %eax,%eax
		inc    %bh
		mov    0x000024(%esp),%al
		mov    %bh,0x000034(%esp)
		add    %eax,%edx
		mov    0x000001(%esi),%ah
		mov    %edx,0x000010(%esp)
		cmp    %ah,%bh
		jbe    _025f2d_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _026009_jump
		neg    %eax

	_026009_jump:
		mov    0x000006(%esi),%di
		add    %eax,%edi
		mov    0x000008(%esi),%dx
		mov    %di,0x000006(%esi)
		cmp    %dx,%di
		jbe    _026356_jump
		cmpw   $0x000000,0x00000a(%esi)
		jge    _026030_jump
		movb   $0x000002,0x00000d(%esi)
		jmp    _026356_jump

	_026030_jump:
		movw   $0x000000,0x000006(%esi)
		mov    0x000006(%esi),%bx
		mov    %ebx,%eax
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026046_jump:
		cmp    $0x000002,%ah
		jne    _026093_jump
		movw   $0x0000a0,0x000028(%esi)
		movw   $0x000064,0x00002a(%esi)
		movw   $0x000008,0x00002c(%esi)
		movw   $0x00000a,0x00002e(%esi)
		movb   $0x000000,0x000034(%esi)
		movb   $0x000000,0x000035(%esi)
		movb   $0x000000,0x000036(%esi)
		movw   $0x000000,0x000030(%esi)
		movw   $0x000000,0x000032(%esi)
		movb   $0x000000,0x00000d(%esi)
		movw   $0x000000,0x000006(%esi)
		movw   $0x0003e8,0x000008(%esi)
		movb   $0x000000,0x000037(%esi)
		movb   $0x000000,0x000038(%esi)

	_026093_jump:
		cmpb   $0x000000,0x000036(%esi)
		je     _0260ac_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0260a5_jump
		neg    %eax

	_0260a5_jump:
		shl    $0x000002,%eax
		add    %ax,0x000032(%esi)

	_0260ac_jump:
		xor    %eax,%eax
		mov    0x00000c(%esi),%al
		mov    $0x000140,%edx
		add    $0x000004,%eax
		sub    %eax,%edx
		mov    0x00002e(%esi),%bx
		mov    %edx,%eax
		xor    %edx,%edx
		inc    %ebx
		mov    0x000028(%esi),%dx
		mov    %bx,0x00002e(%esi)
		cmp    %eax,%edx
		jle    _0260f6_jump
		cmpb   $0x000000,0x000035(%esi)
		jne    _0260f6_jump
		mov    0x00002c(%esi),%ax
		neg    %eax
		inc    %eax
		mov    %ax,0x00002c(%esi)
		mov    0x000038(%esi),%al
		movb   $0x000001,0x000035(%esi)
		test   %al,%al
		je     _0260f0_jump
		movb   $0x000001,0x000037(%esi)

	_0260f0_jump:
		movb   $0x000001,0x000038(%esi)
		jmp    _026140_jump

	_0260f6_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x00000c(%esi),%al
		mov    0x000028(%esi),%dx
		add    $0x000004,%eax
		cmp    %eax,%edx
		jge    _02611f_jump
		cmpb   $0x000000,0x000035(%esi)
		jne    _02611f_jump
		mov    0x00002c(%esi),%ax
		neg    %eax
		movb   $0x000001,0x000035(%esi)
		dec    %eax
		mov    %ax,0x00002c(%esi)
		jmp    _026140_jump

	_02611f_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00000c(%esi),%dl
		mov    0x000028(%esi),%ax
		add    $0x000004,%edx
		cmp    %edx,%eax
		jg     _02613c_jump
		mov    $0x000140,%ebx
		sub    %edx,%ebx
		cmp    %ebx,%eax
		jge    _026140_jump

	_02613c_jump:
		movb   $0x000000,0x000035(%esi)

	_026140_jump:
		xor    %eax,%eax
		mov    0x00000c(%esi),%al
		mov    $0x0000c8,%edx
		add    $0x000003,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		xor    %edx,%edx
		mov    0x00002a(%esi),%dx
		cmp    %eax,%edx
		jle    _026180_jump
		cmpb   $0x000000,0x000034(%esi)
		jne    _026180_jump
		cmpb   $0x000000,0x000037(%esi)
		jne    _026180_jump
		mov    0x00002e(%esi),%ax
		movb   $0x000001,0x000034(%esi)
		neg    %eax
		movb   $0x000001,0x000036(%esi)
		add    $0x000002,%eax
		mov    %ax,0x00002e(%esi)
		jmp    _0261b3_jump

	_026180_jump:
		xor    %edx,%edx
		mov    0x00000c(%esi),%dl
		mov    $0x0000c8,%eax
		lea    0x000003(%edx),%ebx
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002a(%esi),%ax
		cmp    %ebx,%eax
		jg     _0261a1_jump
		movb   $0x000000,0x000034(%esi)
		jmp    _0261b3_jump

	_0261a1_jump:
		add    $0x0000cb,%edx
		cmp    %edx,%eax
		jl     _0261b3_jump
		mov    0x000008(%esi),%ax
		mov    %ax,0x000006(%esi)

	_0261b3_jump:
		mov    0x00002a(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0261d4_jump
		neg    %eax

	_0261d4_jump:
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ax
		add    %edx,%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%edx
		mov    %ax,0x000028(%esi)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _026204_jump
		neg    %eax

	_026204_jump:
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x00002a(%esi),%ax
		add    %edx,%eax
		mov    %ax,0x00002a(%esi)
		lea    0x000020(%esp),%ebx
		mov    0x00002e(%esi),%eax
		lea    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		call   _05be7c_func
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000008(%esp)
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000020(%esp),%ebx
		mov    %eax,0x000018(%esp)
		mov    0x000030(%esi),%eax
		lea    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		call   _05be7c_func
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000014(%esp)
		mov    0x00001e(%esp),%eax
		xor    %dh,%dh
		sar    $0x000010,%eax
		mov    %dh,0x00002c(%esp)
		mov    %eax,0x000004(%esp)

	_02626b_jump:
		xor    %dl,%dl
		mov    %dl,0x000028(%esp)

	_026271_jump:
		mov    0x000014(%esp),%ebx
		movswl (%ecx),%eax
		imul   %eax,%ebx
		mov    (%ecx),%edx
		mov    0x000004(%esp),%ebp
		sar    $0x000010,%edx
		imul   %edx,%ebp
		add    %ebp,%ebx
		imul   0x000004(%esp),%eax
		imul   0x000014(%esp),%edx
		mov    0x000002(%ecx),%edi
		sar    $0x000010,%edi
		neg    %edi
		sub    %edx,%eax
		mov    0x000008(%esp),%edx
		imul   %edi,%edx
		sar    $0x000009,%eax
		mov    %edx,(%esp)
		mov    0x000018(%esp),%edx
		imul   %eax,%edx
		add    (%esp),%edx
		imul   0x000018(%esp),%edi
		imul   0x000008(%esp),%eax
		sub    %eax,%edi
		sar    $0x000009,%edi
		mov    %edx,%eax
		add    $0x000200,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		movzwl 0x000028(%esi),%ebp
		mov    %ebx,%edx
		add    %ebp,%eax
		sar    $0x00001f,%edx
		mov    %ax,0x000006(%ecx)
		mov    %ebx,%eax
		idiv   %edi
		movzwl 0x00002a(%esi),%ebp
		add    $0x00000a,%ecx
		add    %ebp,%eax
		mov    0x000028(%esp),%dh
		mov    %ax,-0x000002(%ecx)
		inc    %dh
		mov    (%esi),%bl
		mov    %dh,0x000028(%esp)
		cmp    %bl,%dh
		jbe    _026271_jump
		mov    0x00002c(%esp),%bh
		inc    %bh
		mov    0x000001(%esi),%ah
		mov    %bh,0x00002c(%esp)
		cmp    %ah,%bh
		jbe    _02626b_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _026325_jump
		neg    %eax

	_026325_jump:
		mov    0x000030(%esi),%dx
		add    %eax,%eax
		add    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		mov    %dx,0x000030(%esi)
		test   %eax,%eax
		jge    _02633d_jump
		neg    %eax

	_02633d_jump:
		mov    0x000006(%esi),%bx
		add    %eax,%ebx
		mov    0x000008(%esi),%cx
		mov    %bx,0x000006(%esi)
		cmp    %cx,%bx
		jbe    _026356_jump
		movw   $0x000000,0x000006(%esi)

	_026356_jump:
		mov    0x000006(%esi),%bx
		mov    %ebx,%eax
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026368_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    _0dd760_data,%eax
		xor    %edi,%edi
		mov    %eax,0x00000c(%esp)
		mov    0x000020(%eax),%ecx
		mov    0x000002(%eax),%bx
		mov    0x000024(%eax),%edx
		test   %bx,%bx
		jbe    _0264aa_jump
		lea    0x000008(%edx),%ebx

	_026392_jump:
		xor    %eax,%eax
		mov    (%edx),%ax
		imul   $0x00000a,%eax,%eax
		mov    0x000004(%ecx,%eax,1),%esi
		mov    0x000006(%ecx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000020(%esp)
		xor    %eax,%eax
		mov    0x000006(%edx),%ax
		imul   $0x00000a,%eax,%eax
		sar    $0x000010,%esi
		mov    %esi,0x000014(%esp)
		lea    (%ecx,%eax,1),%esi
		mov    0x000004(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000004(%edx),%ax
		imul   $0x00000a,%eax,%eax
		mov    0x000004(%ecx,%eax,1),%ebp
		mov    0x000006(%ecx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00001c(%esp)
		xor    %eax,%eax
		mov    0x000002(%edx),%ax
		imul   $0x00000a,%eax,%eax
		sar    $0x000010,%ebp
		dec    %ebp
		mov    %ebp,0x000018(%esp)
		mov    0x000004(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		mov    0x000006(%esi),%esi
		dec    %ebp
		sar    $0x000010,%esi
		mov    %ebp,0x000010(%esp)
		mov    0x000014(%esp),%ebp
		mov    0x000006(%ecx,%eax,1),%eax
		sub    0x000018(%esp),%ebp
		sar    $0x000010,%eax
		mov    %ebp,0x000004(%esp)
		mov    %esi,%ebp
		sub    %eax,%ebp
		mov    %ebp,(%esp)
		mov    0x000004(%esp),%ebp
		imul   (%esp),%ebp
		mov    %ebp,0x000004(%esp)
		mov    0x000020(%esp),%ebp
		sub    0x00001c(%esp),%ebp
		mov    %ebp,(%esp)
		mov    0x000024(%esp),%ebp
		sub    0x000010(%esp),%ebp
		mov    %ebp,0x000008(%esp)
		mov    (%esp),%ebp
		imul   0x000008(%esp),%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x000004(%esp),%ebp
		cmp    0x000008(%esp),%ebp
		jge    _026492_jump
		mov    %esi,0x000018(%edx)
		mov    0x000014(%esp),%ebp
		mov    %eax,0x000028(%edx)
		mov    0x000018(%esp),%esi
		mov    %ebp,0x00000c(%edx)
		mov    0x000020(%esp),%ebp
		mov    %esi,0x00001c(%edx)
		mov    0x00001c(%esp),%esi
		mov    %ebp,0x000010(%edx)
		mov    0x000024(%esp),%ebp
		mov    %esi,0x000020(%edx)
		mov    0x000010(%esp),%esi
		mov    %ebp,0x000014(%edx)
		mov    0x00000c(%esp),%eax
		mov    %esi,0x000024(%edx)
		mov    %ebx,%esi
		mov    0x000014(%eax),%eax
		call   _010045_func

	_026492_jump:
		mov    0x00000c(%esp),%eax
		add    $0x000034,%ebx
		inc    %edi
		mov    0x000002(%eax),%si
		add    $0x000034,%edx
		cmp    %si,%di
		jb     _026392_jump

	_0264aa_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0264c0_func:
		mov    _095fa0_data,%al
		ret    



_0264d0_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_095fa0_data
		je     _026512_jump
		mov    $0x000016,%edx
		mov    _0ced84_data,%ax
		mov    $0x000001,%ebx
		mov    %ax,_0dd818_data
		mov    %dx,_0ced84_data
		mov    _0ced92_data,%ax
		mov    %bx,_0cede4_data
		mov    %ax,_0dd816_data
		mov    %bx,_0ced92_data

	_026512_jump:
		pop    %edx
		pop    %ebx
		ret    



_026518_func:
		xor    %ah,%ah
		mov    %ah,_095f9d_data
		ret    



_026524_func:
		mov    _0dd818_data,%ax
		mov    %ax,_0ced84_data
		mov    _0dd816_data,%ax
		mov    %ax,_0ced92_data
		ret    



_026540_func:
		push   %edx
		mov    $0x000007,%edx
		xor    %ah,%ah
		mov    %dx,_0cede4_data
		mov    %ah,_095fa0_data
		pop    %edx
		ret    



_026558_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _095f86_data,%dx
		mov    _095f88_data,%cl
		mov    _095f8a_data,%si
		mov    _095f8c_data,%di
		test   %dx,%dx
		jge    _026582_jump
		add    $0x000048,%edx
		jmp    _02658b_jump

	_026582_jump:
		cmp    $0x000048,%dx
		jle    _02658b_jump
		sub    $0x000048,%edx

	_02658b_jump:
		mov    $0x000012,%ebx
		movswl %dx,%eax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jl     _0265c3_jump
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095d02_data(%eax),%si
		mov    _095d04_data(%eax),%ax
		mov    %eax,%edi
		jmp    _026664_jump

	_0265c3_jump:
		mov    $0x000024,%ebx
		sub    %edx,%ebx
		test   %bx,%bx
		jl     _0265f8_jump
		movswl %bx,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095d02_data(%eax),%si
		mov    _095d04_data(%eax),%ax
		neg    %esi
		mov    %eax,%edi
		jmp    _026664_jump

	_0265f8_jump:
		mov    $0x000036,%ebx
		sub    %eax,%ebx
		test   %ebx,%ebx
		jl     _026631_jump
		mov    %edx,%eax
		sub    $0x000024,%eax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    %cl,%bl
		add    %eax,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    _095d02_data(%eax),%si
		mov    _095d04_data(%eax),%ax
		mov    %eax,%edi
		neg    %esi
		jmp    _026662_jump

	_026631_jump:
		mov    $0x000048,%eax
		sub    %edx,%eax
		test   %ax,%ax
		jl     _026664_jump
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095d02_data(%eax),%si
		mov    _095d04_data(%eax),%ax
		mov    %eax,%edi

	_026662_jump:
		neg    %edi

	_026664_jump:
		mov    %di,_095f8c_data
		mov    %si,_095f8a_data
		mov    %cl,_095f88_data
		mov    %dx,_095f86_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026688_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_095f86_data
		mov    %ah,_095f88_data
		mov    %dx,_095f8c_data
		mov    %dx,_095f8a_data
		pop    %edx
		ret    



_0266b8_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000012,%edx
		xor    %ah,%ah
		mov    %dx,_095f86_data
		mov    %ah,_095f88_data
		call   _026558_func
		pop    %edx
		ret    



_0266e4_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    _095f88_data,%ah
		inc    %ah
		mov    %ah,_095f88_data
		cmp    $0x000007,%ah
		jbe    _02670d_jump
		movb   $0x000007,_095f88_data

	_02670d_jump:
		call   _026558_func
		pop    %edx
		ret    



_026714_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000024,%eax
		mov    _095f86_data,%dx
		sub    %edx,%eax
		mov    %ax,_095f86_data
		call   _026558_func
		pop    %edx
		ret    



_026740_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000048,%eax
		mov    _095f86_data,%dx
		sub    %edx,%eax
		mov    %ax,_095f86_data
		call   _026558_func
		pop    %edx
		ret    



_02676c_func:
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%eax
		movswl %bx,%edx
		mov    %eax,0x000028(%ecx)
		mov    %edx,0x00002c(%ecx)
		mov    $0x000008,%cl
		shl    %cl,%eax
		mov    $0x000008,%cl
		mov    %eax,_095f90_data
		mov    %edx,%eax
		shl    %cl,%eax
		mov    %eax,_095f94_data
		pop    %ecx
		ret    



_02680c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _095f9e_data,%cl
		xor    %ebx,%ebx
		xor    %eax,%eax
		cmp    $0x000005,%cl
		ja     _02682a_jump
		cmpb   $0x000000,_095f9f_data
		je     _026865_jump

	_02682a_jump:
		cmpb   $0x000005,_095f9e_data
		jbe    _02683b_jump
		xor    %ah,%ah
		mov    %ah,_095f9e_data

	_02683b_jump:
		mov    $0x000101,%eax
		call   _069140_func
		xor    %cl,%cl
		mov    %eax,%ebx
		mov    $0x000101,%eax
		sub    $0x000080,%ebx
		call   _069140_func
		sub    $0x000080,%eax
		mov    %cl,_095f9f_data

	_026865_jump:
		mov    _095f88_data,%ecx
		movswl %bx,%ebx
		sar    $0x000010,%ecx
		add    %ecx,%ebx
		mov    _095f90_data,%ecx
		add    %ebx,%ecx
		mov    _095f8a_data,%ebx
		cwtl   
		sar    $0x000010,%ebx
		mov    _095f94_data,%esi
		add    %ebx,%eax
		mov    %ecx,_095f90_data
		add    %eax,%esi
		mov    %ecx,%eax
		mov    $0x000008,%cl
		mov    %esi,_095f94_data
		test   %eax,%eax
		je     _0268a7_jump
		sar    %cl,%eax
		jmp    _0268ad_jump

	_0268a7_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_0268ad_jump:
		cwtl   
		mov    $0x000008,%cl
		mov    %eax,0x000028(%edx)
		mov    _095f94_data,%eax
		test   %eax,%eax
		je     _0268c0_jump
		sar    %cl,%eax
		jmp    _0268c6_jump

	_0268c0_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_0268c6_jump:
		cwtl   
		mov    %eax,0x00002c(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0268d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x000013,%eax
		call   _069140_func
		mov    %al,%cl
		xor    %ah,%ah

	_0268e1_jump:
		mov    %ah,%al
		add    %cl,%al
		cmp    $0x000014,%al
		jb     _0268eb_jump
		sub    $0x000014,%al

	_0268eb_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0dd776_data(,%edx,8),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0cc300_data,%edx
		add    %ebx,%edx
		cmp    _095cd0_data,%al
		je     _026948_jump
		mov    0x000050(%edx),%bx
		cmp    $0x000002,%bx
		je     _026925_jump
		cmp    $0x000001,%bx
		je     _026925_jump
		cmp    $0x000003,%bx
		jne    _026948_jump

	_026925_jump:
		mov    $0x000002,%bh
		movb   $0x00000a,0x000076(%edx)
		mov    %al,_095cd0_data
		mov    0x000050(%edx),%al
		mov    %bh,_095ccf_data
		mov    %al,_095cd1_data
		movw   $0x000006,0x000050(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026948_jump:
		inc    %ah
		cmp    $0x000014,%ah
		jb     _0268e1_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026954_func:
		push   %edx
		cmpb   $0x000005,_095cd3_data
		jb     _02697c_jump
		mov    _095ccf_data,%dl
		cmp    $0x000001,%dl
		jne    _026970_jump
		call   _0268d0_func
		pop    %edx
		ret    

	_026970_jump:
		cmp    $0x000002,%dl
		je     _02697c_jump
		movb   $0x000001,_095ccf_data

	_02697c_jump:
		pop    %edx
		ret    

_026980_switch:
		.long   _026a53_case
		.long   _026a4e_case
		.long   _026a58_case
		.long   _026a62_case
		.long   _026a5d_case
		.long   _026a6c_case
		.long   _026a6c_case
		.long   _026a6c_case
		.long   _026a6c_case
		.long   _026a6c_case
		.long   _026a6c_case
		.long   _026a67_case




_0269b0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    %ecx,%ebp
		mov    %edx,%eax
		mov    0x000020(%esp),%edx
		mov    0x000004(%esi),%ebx
		mov    0x000020(%ebx),%cx
		and    $0x00003f,%ch
		mov    %ecx,0x000008(%esp)
		xor    %ecx,%ecx
		mov    0x000008(%esp),%cx
		mov    %ecx,(%esp)
		mov    _095cf0_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,0x000004(%esp)
		mov    (%esp),%ecx
		imul   0x000004(%esp),%ecx
		add    $0x000018,%ebx
		cwtl   
		mov    (%ebx),%ebx
		shl    $0x000002,%ecx
		shl    $0x000002,%eax
		add    %ecx,%ebx
		add    %eax,%ebx
		xor    %ecx,%ecx
		mov    0x000003(%ebx),%al
		mov    %al,%cl
		mov    %al,0x00000c(%esp)
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		mov    (%esi),%ecx
		add    %ecx,%eax
		cmpb   $0x000000,0x00000c(%esp)
		je     _026a73_jump
		cmpb   $0x000000,0x000004(%eax)
		je     _026a73_jump
		xor    %ecx,%ecx
		mov    0x000001(%ebx),%cl
		mov    %cx,(%edi)
		mov    0x000002(%ebx),%bl
		xor    %bh,%bh
		mov    %bx,0x000000(%ebp)
		mov    0x000004(%eax),%al
		sub    $0x000027,%al
		cmp    $0x00000b,%al
		ja     _026a6c_case
		and    $0x0000ff,%eax
		jmp    *%cs:_026980_switch(,%eax,4)

	_026a4e_case:
		movb   $0x000002,(%edx)
		jmp    _026a6f_jump

	_026a53_case:
		movb   $0x000001,(%edx)
		jmp    _026a6f_jump

	_026a58_case:
		movb   $0x000003,(%edx)
		jmp    _026a6f_jump

	_026a5d_case:
		movb   $0x000004,(%edx)
		jmp    _026a6f_jump

	_026a62_case:
		movb   $0x000005,(%edx)
		jmp    _026a6f_jump

	_026a67_case:
		movb   $0x000007,(%edx)
		jmp    _026a6f_jump

	_026a6c_case:
		movb   $0x000000,(%edx)

	_026a6f_jump:
		mov    $0x000001,%al
		jmp    _026a75_jump

	_026a73_jump:
		xor    %al,%al

	_026a75_jump:
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

_026a80_switch:
		.long   _026ac0_case
		.long   _026ada_case
		.long   _026ae3_case
		.long   _026aec_case
		.long   _026af5_case
		.long   _026b07_case
		.long   _026b13_case
		.long   _026b0d_case




_026aa0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000050(%eax),%ax
		cmp    $0x000007,%ax
		ja     _026b59_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_026a80_switch(,%eax,4)

	_026ac0_case:
		mov    0x000081(%edx),%al
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%edx)
		jmp    _026b59_jump

	_026ada_case:
		movb   $0x000001,0x00006b(%edx)
		jmp    _026b59_jump

	_026ae3_case:
		movb   $0x000000,0x00006b(%edx)
		jmp    _026b59_jump

	_026aec_case:
		movb   $0x000002,0x00006b(%edx)
		jmp    _026b59_jump

	_026af5_case:
		cmpb   $0x000005,0x000076(%edx)
		ja     _026b01_jump
		movb   $0x000007,0x00006b(%edx)
		jmp    _026b59_jump

	_026b01_jump:
		movb   $0x000003,0x00006b(%edx)
		jmp    _026b59_jump

	_026b07_case:
		movb   $0x000004,0x00006b(%edx)
		jmp    _026b59_jump

	_026b0d_case:
		movb   $0x000005,0x00006b(%edx)
		jmp    _026b59_jump

	_026b13_case:
		mov    0x000004(%edx),%eax
		mov    0x000016(%eax),%ax
		and    $0x00ffff,%eax
		xor    %ebx,%ebx
		dec    %eax
		mov    0x00006b(%edx),%bl
		cmp    %eax,%ebx
		jne    _026b49_jump
		mov    0x000076(%edx),%bh
		movb   $0x000000,0x00006b(%edx)
		dec    %bh
		mov    %bh,0x000076(%edx)
		jne    _026b59_jump
		xor    %eax,%eax
		mov    _095cd1_data,%al
		mov    %ax,0x000050(%edx)
		call   _0268d0_func
		jmp    _026b59_jump

	_026b49_jump:
		mov    _0cef51_data,%ah
		cmp    $0x000001,%ah
		jne    _026b59_jump
		add    %ah,%bl
		mov    %bl,0x00006b(%edx)

	_026b59_jump:
		cmpw   $0x000000,0x000050(%edx)
		je     _026bbe_jump
		mov    0x000054(%edx),%eax
		sar    $0x000010,%eax
		mov    _0cee0e_data,%ebx
		mov    _0dd772_data(,%eax,8),%ecx
		mov    _095cf6_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %eax,%ebx
		xor    %eax,%eax
		add    %ecx,%ebx
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		mov    0x000054(%edx),%eax
		mov    %ebx,0x000028(%edx)
		sar    $0x000010,%eax
		mov    _0cedf8_data,%ebx
		mov    _0dd774_data(,%eax,8),%ecx
		mov    _095cf8_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %eax,%ebx
		xor    %eax,%eax
		add    %ecx,%ebx
		mov    0x000069(%edx),%al
		sub    %eax,%ebx
		mov    %ebx,0x00002c(%edx)

	_026bbe_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026bc4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0cc300_data,%esi
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _026c72_jump

	_026be6_jump:
		cmpw   $0x00000b,0x000060(%esi)
		jne    _026c62_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _026c62_jump
		mov    %esp,%edx
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		lea    0x000010(%esp),%edx
		call   _01d294_func
		movb   $0x000000,0x00006b(%esi)
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    0x000081(%esi),%ah
		mov    0x000006(%esp),%ebx
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%esi)
		add    %edx,%ebx
		xor    %edx,%edx
		or     $0x000004,%ah
		mov    0x000069(%esi),%dl
		mov    %ah,0x000081(%esi)
		sub    %edx,%ebx
		mov    %esi,%eax
		mov    %ebx,0x00002c(%esi)
		call   _01f304_func
		jmp    _026c72_jump

	_026c62_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _026be6_jump

	_026c72_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026c7c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %bl,(%esp)
		mov    %cl,0x000004(%esp)
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _026d54_jump

	_026ca3_jump:
		cmp    0x000060(%ecx),%dx
		jne    _026d44_jump
		mov    0x000024(%ecx),%edi
		test   %edi,%edi
		jne    _026d44_jump
		mov    0x000028(%esi),%ebp
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%dl
		mov    0x000068(%ecx),%bl
		add    %ebp,%edx
		sub    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x000028(%ecx)
		xor    %edx,%edx
		mov    0x00002c(%esi),%eax
		mov    0x000069(%esi),%dl
		mov    0x000069(%ecx),%bl
		add    %eax,%edx
		mov    %ecx,%eax
		sub    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x00002c(%ecx)
		xor    %edx,%edx
		mov    0x000004(%esp),%bl
		mov    (%esp),%dl
		call   _01d374_func
		mov    0x000081(%ecx),%ah
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebx
		mov    0x000068(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		add    %ebx,%edx
		mov    _0cedf8_data,%ebx
		movw   $0x000000,0x000040(%ecx)
		sar    $0x000010,%ebx
		or     $0x000004,%ah
		sub    %ebx,%edx
		mov    %ah,0x000081(%ecx)
		cmp    $0x000064,%edx
		setl   %al
		movb   $0x000001,0x00007e(%ecx)
		movw   $0x000000,0x00005e(%ecx)
		xor    %ah,%ah
		mov    %edi,0x000030(%ecx)
		inc    %eax
		mov    %ax,0x000042(%ecx)
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_026d44_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jl     _026ca3_jump

	_026d54_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_026d5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    $0x000001,%ah
		mov    _0ce4b3_data,%dl
		mov    %ah,_095ccf_data
		cmp    $0x000004,%dl
		je     _026d80_jump
		mov    $0x000052,%edx
		mov    $0x000006,%bl
		mov    $0x000002,%al
		jmp    _026dc5_jump

	_026d80_jump:
		mov    _0cdc30_data,%eax
		mov    0x00006e(%eax),%dh
		cmp    $0x000001,%dh
		je     _026d97_jump
		cmp    $0x000003,%dh
		je     _026d97_jump
		cmp    $0x000005,%dh
		jne    _026da2_jump

	_026d97_jump:
		mov    $0x00005f,%edx
		mov    $0x000005,%bl
		mov    $0x000007,%al
		jmp    _026dc5_jump

	_026da2_jump:
		cmp    $0x00000c,%dh
		je     _026db2_jump
		mov    $0x00005f,%edx
		mov    $0x000005,%bl
		mov    $0x00000e,%al
		jmp    _026dc5_jump

	_026db2_jump:
		mov    $0x0000a1,%edx
		mov    $0x000007,%eax
		mov    $0x000005,%bl
		call   _069140_func
		add    $0x000018,%al

	_026dc5_jump:
		xor    %ecx,%ecx
		mov    %al,%cl
		and    $0x0000ff,%ebx
		and    $0x00ffff,%edx
		mov    %esi,%eax
		call   _026c7c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_026de4_switch:
		.long   _026f60_case
		.long   _026f8c_case
		.long   _026fb8_case
		.long   _02700b_case
		.long   _027051_case
		.long   _026fb8_case
		.long   _027072_case




_026e00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		mov    _0cee10_data,%dx
		mov    0x000028(%eax),%ax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0cedfa_data,%cx
		mov    0x000068(%ebp),%al
		xor    %bh,%bh
		add    %edx,%eax
		mov    %bh,0x000020(%esp)
		add    $0x000008,%eax
		mov    0x00002c(%ebp),%dx
		mov    %ax,0x00001c(%esp)
		xor    %eax,%eax
		sub    %ecx,%edx
		mov    0x000069(%ebp),%al
		mov    %bh,_0dd834_data
		add    %eax,%edx
		xor    %bl,%bl
		mov    %dx,0x000008(%esp)

	_026e52_jump:
		cmpb   $0x000001,_0dd834_data
		jae    _0271db_jump
		xor    %edx,%edx
		mov    %bl,%dl
		mov    _0dd776_data(,%edx,8),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc300_data,%ecx
		add    %ecx,%edx
		cmpw   $0x000000,0x000050(%edx)
		je     _0271d0_jump
		cmp    _095cf0_data,%bl
		je     _0271d0_jump
		mov    _0cee10_data,%di
		xor    %ecx,%ecx
		mov    0x000028(%edx),%ax
		mov    0x000068(%edx),%cl
		sub    %edi,%eax
		add    %eax,%ecx
		add    $0x000008,%ecx
		movswl %cx,%eax
		mov    0x00001a(%esp),%ecx
		sar    $0x000010,%ecx
		sub    %eax,%ecx
		mov    %cx,0x000014(%esp)
		mov    0x000012(%esp),%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _026ec9_jump
		neg    %eax

	_026ec9_jump:
		mov    %eax,%esi
		mov    %eax,0x00000c(%esp)
		cmp    $0x000015,%ax
		jg     _0271d0_jump
		mov    _0cedfa_data,%ax
		mov    0x00002c(%edx),%cx
		sub    %eax,%ecx
		mov    %ecx,0x000004(%esp)
		xor    %ecx,%ecx
		mov    0x000004(%esp),%eax
		mov    0x000069(%edx),%cl
		add    %eax,%ecx
		mov    0x000006(%esp),%eax
		movswl %cx,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		mov    %ax,0x000018(%esp)
		mov    0x000016(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _026f14_jump
		neg    %eax

	_026f14_jump:
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    %eax,0x000010(%esp)
		cmp    $0x000015,%si
		jg     _0271d0_jump
		imul   %edi,%edi
		imul   %ecx,%ecx
		mov    _095f98_data,%esi
		add    %edi,%ecx
		cmp    %esi,%ecx
		jg     _0271d0_jump
		mov    0x000050(%edx),%ax
		dec    %eax
		mov    %bl,_095cf0_data
		cmp    $0x000006,%ax
		ja     _0270a9_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_026de4_switch(,%eax,4)

	_026f60_case:
		movw   $0x000002,0x000050(%edx)
		xor    %dl,%dl
		mov    %dl,_095f9e_data
		mov    _095cd3_data,%dh
		mov    $0x0000c1,%eax
		inc    %dh
		mov    %ax,_095ccc_data
		mov    %dh,_095cd3_data
		jmp    _0270a9_jump

	_026f8c_case:
		xor    %al,%al
		mov    $0x0000c1,%edi
		mov    %al,_095f9e_data
		mov    _095cd3_data,%ah
		movw   $0x000003,0x000050(%edx)
		inc    %ah
		mov    %di,_095ccc_data
		mov    %ah,_095cd3_data
		jmp    _0270a9_jump

	_026fb8_case:
		mov    %edx,%eax
		call   _077338_func
		mov    _095cd3_data,%cl
		mov    _095cd2_data,%ah
		inc    %cl
		dec    %ah
		mov    %cl,_095cd3_data
		mov    0x000050(%edx),%cx
		mov    %ah,_095cd2_data
		cmp    $0x000006,%cx
		jne    _026fec_jump
		mov    %edx,%eax
		call   _026d5c_func

	_026fec_jump:
		mov    $0x00000e,%esi
		xor    %ch,%ch
		movw   $0x000000,0x000050(%edx)
		mov    %ch,_095f9e_data
		mov    %si,_095ccc_data
		jmp    _0270a9_jump

	_02700b_case:
		movw   $0x0000d6,_095ccc_data
		mov    _095f9e_data,%ah
		inc    %ah
		mov    0x000076(%edx),%cl
		mov    %ah,_095f9e_data
		dec    %cl
		mov    %cl,0x000076(%edx)
		jne    _0270a9_jump
		mov    %edx,%eax
		call   _077338_func
		movw   $0x000000,0x000050(%edx)
		mov    $0x00000e,%edx
		mov    %cl,_095f9e_data
		mov    %dx,_095ccc_data
		jmp    _0270a9_jump

	_027051_case:
		mov    %ebp,%eax
		call   _0266e4_func
		mov    _095f9e_data,%al
		mov    $0x000036,%edi
		inc    %al
		mov    %di,_095ccc_data
		mov    %al,_095f9e_data
		jmp    _0270a9_jump

	_027072_case:
		mov    $0x000001,%edx
		mov    $0x000036,%ecx
		mov    _095cfa_data,%si
		mov    %dx,_095cf6_data
		mov    %cx,_095ccc_data
		mov    _095f9e_data,%ch
		sub    $0x000005,%esi
		inc    %ch
		mov    %si,_095cfa_data
		mov    %ch,_095f9e_data

	_0270a9_jump:
		xor    %eax,%eax
		mov    _0dd834_data,%al
		xor    %cl,%cl
		mov    %cl,_0dd770_data(,%eax,8)
		mov    0x000010(%esp),%edx
		mov    %cl,_0dd771_data(,%eax,8)
		cmp    0x00000c(%esp),%dx
		jg     _02712a_jump
		mov    _095f88_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _0270e1_jump
		mov    $0x000001,%eax
		jg     _0270e1_jump
		neg    %eax

	_0270e1_jump:
		mov    %eax,%edx
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _0270f8_jump
		mov    $0x000001,%eax
		jg     _0270f8_jump
		neg    %eax

	_0270f8_jump:
		cmp    %eax,%edx
		jne    _027118_jump
		mov    $0x000001,%dh
		mov    0x000020(%esp),%cl
		xor    %eax,%eax
		add    %dh,%cl
		mov    _0dd834_data,%al
		mov    %cl,0x000020(%esp)
		mov    %dh,_0dd771_data(,%eax,8)
		jmp    _02712a_jump

	_027118_jump:
		xor    %eax,%eax
		mov    $0x000001,%dl
		mov    _0dd834_data,%al
		add    %dl,%bh
		mov    %dl,_0dd770_data(,%eax,8)

	_02712a_jump:
		mov    0x00000c(%esp),%eax
		cmp    0x000010(%esp),%ax
		jg     _02718e_jump
		mov    _095f8a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _02714b_jump
		mov    $0x000001,%eax
		jg     _02714b_jump
		neg    %eax

	_02714b_jump:
		mov    %eax,%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _027162_jump
		mov    $0x000001,%eax
		jg     _027162_jump
		neg    %eax

	_027162_jump:
		cmp    %eax,%edx
		jne    _02717a_jump
		xor    %eax,%eax
		mov    $0x000001,%dl
		mov    _0dd834_data,%al
		add    %dl,%bh
		mov    %dl,_0dd770_data(,%eax,8)
		jmp    _02718e_jump

	_02717a_jump:
		xor    %eax,%eax
		mov    _0dd834_data,%al
		mov    $0x000001,%ch
		mov    %ch,_0dd771_data(,%eax,8)
		add    %ch,0x000020(%esp)

	_02718e_jump:
		xor    %eax,%eax
		mov    _0dd834_data,%al
		mov    0x000014(%esp),%edx
		mov    %dx,_0dd76c_data(,%eax,8)
		mov    0x000018(%esp),%edx
		mov    %dx,_0dd76e_data(,%eax,8)
		mov    %al,%dh
		mov    %bl,_0dd772_data(,%eax,8)
		inc    %dh
		mov    _095f9c_data,%bl
		mov    %dh,_0dd834_data
		cmp    %bl,%dh
		jbe    _0271db_jump
		mov    %dh,_095f9c_data
		jmp    _0271db_jump

	_0271d0_jump:
		inc    %bl
		cmp    $0x000014,%bl
		jb     _026e52_jump

	_0271db_jump:
		cmpb   $0x000000,_0dd834_data
		je     _02720a_jump
		test   %bh,%bh
		je     _0271ef_jump
		mov    %ebp,%eax
		call   _026714_func

	_0271ef_jump:
		cmpb   $0x000000,0x000020(%esp)
		je     _0271fd_jump
		mov    %ebp,%eax
		call   _026740_func

	_0271fd_jump:
		mov    _095cca_data,%eax
		sar    $0x000010,%eax
		call   _06fa90_func

	_02720a_jump:
		mov    _0dd834_data,%al
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02721c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,0x000008(%esp)
		mov    %esi,%eax
		call   _01db8c_func
		xor    %eax,%eax
		mov    0x000036(%esi),%dx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sub    $0x000008,%eax
		mov    0x000038(%esi),%bx
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    $0x00002e,%edx
		mov    0x000069(%esi),%al
		mov    %dx,0x000004(%esp)
		add    %eax,%ebx
		mov    $_0cdba4_data,%eax
		mov    $0x000002,%edx
		call   _01db8c_func
		movzbw _0cdc0c_data,%di
		mov    _0cdbda_data,%cx
		sub    $0x000008,%ebx
		add    %ecx,%edi
		mov    _0cdc11_data,%cl
		mov    _0cdbdc_data,%ax
		test   %cl,%cl
		jne    _027296_jump
		cmpb   $0x000004,_0cdc10_data
		je     _0272a9_jump

	_027296_jump:
		mov    _0cdc11_data,%cl
		cmp    $0x000001,%cl
		jne    _0272c7_jump
		cmp    _0cdc10_data,%cl
		jne    _0272c7_jump

	_0272a9_jump:
		mov    _095cf0_data,%cl
		sub    $0x000016,%edi
		add    $0x000020,%eax
		cmp    $0x000019,%cl
		je     _027321_jump
		movb   $0x000019,0x000008(%esp)
		jmp    _027321_jump

	_0272c7_jump:
		cmpb   $0x000000,_0cdc11_data
		jne    _0272d9_jump
		cmpb   $0x000014,_0cdc10_data
		je     _0272fd_jump

	_0272d9_jump:
		cmpb   $0x000003,_0cdc11_data
		jne    _0272eb_jump
		cmpb   $0x000011,_0cdc10_data
		je     _0272fd_jump

	_0272eb_jump:
		cmpb   $0x000003,_0cdc11_data
		jne    _027321_jump
		cmpb   $0x000012,_0cdc10_data
		jne    _027321_jump

	_0272fd_jump:
		mov    0x000004(%esp),%ecx
		add    $0x000020,%ecx
		sub    $0x000026,%edi
		mov    %cx,0x000004(%esp)
		mov    _095cf0_data,%cl
		add    $0x00004a,%eax
		cmp    $0x00001a,%cl
		je     _027321_jump
		movb   $0x00001a,0x000008(%esp)

	_027321_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _027434_jump
		movswl %dx,%edx
		push   %edx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		push   %edx
		cwtl   
		mov    $0x000010,%ecx
		push   %eax
		movswl %di,%eax
		movswl %bx,%edx
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _027434_jump
		cmpw   $0x000000,_095f8c_data
		jl     _027434_jump
		cmpb   $0x000005,_095cd2_data
		ja     _027387_jump
		cmpw   $0x000003,_095cf2_data
		je     _027387_jump
		movb   $0x000001,_095f88_data
		jmp    _02738e_jump

	_027387_jump:
		xor    %al,%al
		mov    %al,_095f88_data

	_02738e_jump:
		mov    (%esp),%eax
		add    $0x000010,%eax
		sub    %edi,%eax
		movswl %ax,%edx
		mov    %edx,%eax
		mov    0x000004(%esp),%ebx
		shl    $0x000004,%eax
		add    $0x00000f,%ebx
		sub    %edx,%eax
		mov    %bx,0x000004(%esp)
		lea    0x000000(,%eax,8),%edx
		mov    0x000002(%esp),%ebx
		neg    %edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x4062c000,%ecx
		xor    %ebx,%ebx
		call   _07b952_func
		call   _07b998_func
		mov    $0x9999999a,%ebx
		mov    $0x3fc99999,%ecx
		call   _07bb4f_func
		call   _07c19c_func
		mov    %ax,_095f86_data
		call   _026558_func
		mov    %esi,%eax
		call   _026bc4_func
		mov    $0x00002c,%eax
		mov    0x000008(%esp),%dl
		call   _06fa90_func
		cmp    $0x000019,%dl
		jne    _027423_jump
		mov    $0x000032,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func

	_027423_jump:
		mov    0x000008(%esp),%al
		xor    %dh,%dh
		mov    %al,_095cf0_data
		mov    %dh,_095f9e_data

	_027434_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027440_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _095cfa_data,%dx
		mov    _095cfe_data,%bx
		mov    _095cf6_data,%cx
		cmpb   $0x000001,_095cce_data
		jne    _0274b2_jump
		dec    %cx
		jne    _0274b2_jump
		add    %ebx,%edx
		mov    _0dd824_data,%bx
		mov    $0x0001f4,%ecx
		cmp    %bx,%dx
		jl     _027487_jump
		mov    %ebx,%edx
		xor    %ebx,%ebx
		mov    %bx,_095cfc_data
		jmp    _0274b2_jump

	_027487_jump:
		mov    _0dd822_data,%si
		cmp    %si,%dx
		jg     _0274a4_jump
		mov    $0x000001,%ebx
		xor    %eax,%eax
		mov    %esi,%edx
		mov    %ax,_095cfc_data
		jmp    _0274b2_jump

	_0274a4_jump:
		xor    %edi,%edi
		mov    $0x000001,%ebx
		mov    %di,_095cfc_data

	_0274b2_jump:
		mov    %cx,_095cf6_data
		mov    %bx,_095cfe_data
		mov    %dx,_095cfa_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0274d0_switch:
		.long   _02780a_case
		.long   _02780a_case
		.long   _02780a_case
		.long   _02781b_case
		.long   _02781f_case
		.long   _02781f_case
		.long   _027812_case




_0274ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		mov    $0xfffffec0,%edx
		mov    $0xffffff38,%ebx
		mov    $0x000140,%ecx
		mov    $0x0000c8,%esi
		xor    %ah,%ah
		mov    %edx,(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %esi,0x000010(%esp)
		mov    %ah,_095cce_data
		mov    %ah,_095ccf_data
		mov    $0x000014,%dh
		xor    %al,%al
		mov    %dh,_095cd0_data
		xor    %ebx,%ebx

	_027534_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %bx,_0dd774_data(,%edx,8)
		mov    %bx,_0dd776_data(,%edx,8)
		mov    %bl,_0dd77a_data(,%edx,8)
		inc    %al
		mov    %bx,_0dd778_data(,%edx,8)
		cmp    $0x000014,%al
		jb     _027534_jump
		mov    _0cc300_data,%edi
		mov    _0cc304_data,%ax
		movw   $0x000064,0x000056(%ebp)
		xor    %bl,%bl
		xor    %esi,%esi
		mov    %bl,0x00001c(%esp)
		mov    %eax,0x000008(%esp)
		test   %ax,%ax
		jle    _027668_jump

	_027584_jump:
		mov    0x00001c(%esp),%bh
		cmp    $0x000014,%bh
		jae    _027668_jump
		cmpw   $0x000100,0x000060(%edi)
		jne    _027654_jump
		lea    0x000020(%esp),%eax
		lea    0x000014(%esp),%ecx
		xor    %edx,%edx
		push   %eax
		mov    %bh,%dl
		lea    0x00001c(%esp),%ebx
		mov    %ebp,%eax
		call   _0269b0_func
		test   %ax,%ax
		jne    _0275cd_jump
		mov    $0x000080,%edx
		mov    %eax,0x000014(%esp)
		xor    %ah,%ah
		mov    %edx,0x000018(%esp)
		mov    %ah,0x000020(%esp)

	_0275cd_jump:
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		mov    0x000018(%esp),%eax
		shl    $0x000003,%edx
		add    $0x00002a,%eax
		mov    %ax,_0dd774_data(%edx)
		mov    0x000014(%esp),%eax
		add    $0x000009,%eax
		mov    %ax,_0dd776_data(%edx)
		mov    0x000020(%esp),%al
		mov    %al,_0dd77a_data(%edx)
		mov    (%esp),%ecx
		mov    _0dd774_data(%edx),%ax
		mov    %si,_0dd778_data(%edx)
		cmp    %cx,%ax
		jle    _02761b_jump
		mov    %eax,(%esp)
		jmp    _027626_jump

	_02761b_jump:
		cmp    0x000004(%esp),%ax
		jge    _027626_jump
		mov    %eax,0x000004(%esp)

	_027626_jump:
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		shl    $0x000003,%edx
		mov    0x00000c(%esp),%ecx
		mov    _0dd776_data(%edx),%ax
		cmp    %cx,%ax
		jle    _027645_jump
		mov    %eax,0x00000c(%esp)
		jmp    _027650_jump

	_027645_jump:
		cmp    0x000010(%esp),%ax
		jge    _027650_jump
		mov    %eax,0x000010(%esp)

	_027650_jump:
		incb   0x00001c(%esp)

	_027654_jump:
		mov    0x000008(%esp),%edx
		inc    %esi
		add    $0x000084,%edi
		cmp    %dx,%si
		jl     _027584_jump

	_027668_jump:
		mov    0x000004(%esp),%ebx
		cmp    $0x00000c,%bx
		jg     _02767d_jump
		xor    %esi,%esi
		mov    %si,_0dd820_data
		jmp    _02768a_jump

	_02767d_jump:
		mov    $0x00000c,%eax
		sub    %ebx,%eax
		mov    %ax,_0dd820_data

	_02768a_jump:
		mov    (%esp),%edi
		cmp    $0x000124,%di
		jle    _02769f_jump
		xor    %ebx,%ebx
		mov    %bx,_0dd826_data
		jmp    _0276ac_jump

	_02769f_jump:
		mov    $0x000124,%eax
		sub    %edi,%eax
		mov    %ax,_0dd826_data

	_0276ac_jump:
		mov    0x000010(%esp),%ecx
		cmp    $0x000008,%cx
		jg     _0276c1_jump
		xor    %edi,%edi
		mov    %di,_0dd822_data
		jmp    _0276ce_jump

	_0276c1_jump:
		mov    $0x000008,%eax
		sub    %ecx,%eax
		mov    %ax,_0dd822_data

	_0276ce_jump:
		cmpw   $0x000078,0x00000c(%esp)
		jle    _0276e1_jump
		xor    %ebx,%ebx
		mov    %bx,_0dd824_data
		jmp    _0276f2_jump

	_0276e1_jump:
		mov    $0x000078,%eax
		mov    0x00000c(%esp),%edx
		sub    %edx,%eax
		mov    %ax,_0dd824_data

	_0276f2_jump:
		mov    _095cf0_data,%eax
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		add    %eax,%eax
		mov    %cx,_095cfa_data
		mov    _095cd4_data(%eax),%dx
		mov    _095b15_data,%cl
		mov    %dx,_095cf8_data
		cmp    $0x000001,%cl
		jne    _02773b_jump
		mov    %edx,%esi
		sub    $0x000008,%esi
		mov    _0cef6d_data,%ch
		mov    %si,_095cf8_data
		cmp    %cl,%ch
		jne    _02773b_jump
		mov    %dx,_095cfa_data

	_02773b_jump:
		xor    %al,%al
		xor    %bl,%bl
		mov    %al,_095cd2_data
		mov    $0x000004,%bh
		xor    %esi,%esi

	_027748_jump:
		xor    %eax,%eax
		mov    %bl,%al
		mov    _0dd776_data(,%eax,8),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc300_data,%ecx
		mov    _0dd772_data(,%eax,8),%edi
		add    %ecx,%edx
		mov    _0cee0e_data,%ecx
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		add    %edi,%ecx
		movzbl 0x000068(%edx),%edi
		sub    %edi,%ecx
		mov    %ecx,%edi
		mov    _095cf6_data,%ecx
		sar    $0x000010,%ecx
		add    %ecx,%edi
		mov    %edi,0x000028(%edx)
		mov    _0dd774_data(,%eax,8),%ecx
		mov    _0cedf8_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%edi
		add    %edi,%ecx
		movzbl 0x000069(%edx),%edi
		sub    %edi,%ecx
		mov    _095cf8_data,%edi
		sar    $0x000010,%edi
		add    %edi,%ecx
		mov    %ecx,0x00002c(%edx)
		mov    _0dd77a_data(,%eax,8),%al
		movl   $0x000001,0x000024(%edx)
		xor    %ah,%ah
		mov    0x000081(%edx),%cl
		mov    %ax,0x000050(%edx)
		mov    %bl,%al
		or     %bh,%cl
		mov    %ax,0x000056(%edx)
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _01f304_func
		mov    %bh,0x00007e(%edx)
		mov    0x000050(%edx),%ax
		mov    %si,0x000040(%edx)
		dec    %eax
		mov    %si,0x000042(%edx)
		cmp    $0x000006,%ax
		ja     _02781f_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0274d0_switch(,%eax,4)

	_02780a_case:
		incb   _095cd2_data
		jmp    _02781f_case

	_027812_case:
		movb   $0x000002,_095cce_data
		jmp    _02781f_case

	_02781b_case:
		movb   $0x000014,0x000076(%edx)

	_02781f_case:
		mov    %edx,%eax
		inc    %bl
		call   _026aa0_func
		cmp    $0x000014,%bl
		jb     _027748_jump
		xor    %ah,%ah
		mov    %ah,_095cd3_data
		mov    %ah,_095f9f_data
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02784c_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %al,%al

	_027851_jump:
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    _0dd776_data(,%ebx,8),%ecx
		sar    $0x000010,%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0cc300_data,%edx
		andb   $0x0000fb,0x000081(%ecx,%edx,1)
		mov    _0dd776_data(,%ebx,8),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		inc    %al
		movl   $0x000000,0x000024(%edx,%ebx,1)
		cmp    $0x000014,%al
		jb     _027851_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027898_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		movw   $0x000005,_0cedb4_data
		call   _026524_func
		call   _026518_func
		cmpb   $0x000000,_095b15_data
		jne    _0278c6_jump
		xor    %esi,%esi
		mov    %si,_0cee10_data
		jmp    _0278cf_jump

	_0278c6_jump:
		movw   $0x00fffb,_0cee10_data

	_0278cf_jump:
		mov    _0cee10_data,%ax
		mov    %ax,_0cedc8_data
		mov    %ax,_0cedba_data
		mov    _095cf0_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		add    %eax,%eax
		mov    %bx,_095cfa_data
		mov    _095cd4_data(%eax),%dx
		mov    %bx,_0dd830_data
		mov    %dx,_095cf8_data
		xor    %edx,%edx
		mov    $0x000038,%ebx
		mov    _0cdc0c_data,%dl
		mov    %bx,_0dd82c_data
		sub    %edx,%ebx
		mov    $0x000018,%edi
		sub    $0x000008,%ebx
		mov    $0x000020,%esi
		mov    %bx,_0dd828_data
		mov    $0x000108,%ebx
		mov    %di,_0cedfa_data
		sub    %edx,%ebx
		mov    %di,_0cedc6_data
		mov    %ebx,%edx
		mov    %di,_0cedbc_data
		sub    $0x000008,%edx
		mov    %si,_0dd832_data
		mov    %dx,_0dd82e_data
		mov    _095b15_data,%dl
		mov    %si,_0dd82a_data
		test   %dl,%dl
		jne    _027980_jump
		addw   $0x000008,_0cee10_data
		jmp    _027a04_jump

	_027980_jump:
		mov    _095cf8_data,%si
		sub    $0x000008,%esi
		mov    _0cef6d_data,%dh
		mov    %si,_095cf8_data
		cmp    $0x000001,%dh
		jne    _0279b5_jump
		mov    _095ce2_data(%eax),%ax
		mov    $0x00000a,%edi
		mov    %ax,_095cfa_data
		mov    %di,_0dd830_data

	_0279b5_jump:
		mov    $0xfffffff8,%eax
		mov    _0dd832_data,%dx
		mov    _0dd82a_data,%bx
		mov    _0dd828_data,%si
		mov    _0dd82e_data,%di
		mov    %ax,_0dd82c_data
		sub    $0x000008,%edx
		add    $0x000008,%ebx
		sub    $0x000008,%esi
		sub    $0x000008,%edi
		mov    %dx,_0dd832_data
		mov    %bx,_0dd82a_data
		mov    %si,_0dd828_data
		mov    %di,_0dd82e_data

	_027a04_jump:
		mov    %ecx,%eax
		movb   $0x000000,0x00007e(%ecx)
		call   _026688_func
		mov    _0cedf8_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0cdc0d_data,%dl
		add    $0x0000c0,%eax
		sub    %edx,%eax
		mov    _0cce24_data,%edx
		mov    %eax,_0cdbd0_data
		cmp    $0x000002,%edx
		jne    _027a6c_jump
		mov    0x000004(%ecx),%eax
		mov    0x000022(%eax),%ax
		dec    %eax
		mov    $0x000001,%ebx
		cwtl   
		mov    $0x000003,%edx
		call   _069140_func
		mov    %ax,_095cf2_data
		mov    %ax,_095cf4_data
		mov    %ecx,%eax
		movb   $0x000003,0x000076(%ecx)
		call   _0274ec_func
		mov    $_0cdba4_data,%eax
		jmp    _027a7a_jump

	_027a6c_jump:
		cmp    $0x000032,%edx
		jne    _027a7f_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_027a7a_jump:
		call   _01d374_func

	_027a7f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027a88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		mov    _0cdc11_data,%ah
		mov    %dx,_095cfe_data
		mov    %dx,_095cfc_data
		test   %ah,%ah
		jne    _027ab5_jump
		cmpb   $0x000004,_0cdc10_data
		je     _027ad0_jump

	_027ab5_jump:
		mov    _0cdc11_data,%dh
		cmp    $0x000001,%dh
		jne    _027beb_jump
		cmp    _0cdc10_data,%dh
		jne    _027beb_jump

	_027ad0_jump:
		mov    %esi,%eax
		call   _026688_func
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		call   _01d710_func
		testb  $0x000008,_0cdc25_data
		jne    _027b0d_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000002,%eax
		jmp    _027b0f_jump

	_027b0d_jump:
		xor    %eax,%eax

	_027b0f_jump:
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		mov    0x000008(%esp),%ecx
		add    $0x000005,%eax
		sub    %eax,%ecx
		mov    0x000002(%esp),%edx
		mov    %cx,0x000008(%esp)
		sar    $0x000010,%edx
		mov    0x000006(%esp),%ebx
		mov    %esi,%eax
		sar    $0x000010,%ebx
		call   _02676c_func
		cmpb   $0x000000,0x00007e(%esi)
		jne    _027b67_jump
		mov    %esi,%eax
		call   _077338_func
		mov    $0x0000c2,%eax
		call   _06fa90_func

	_027b67_jump:
		movb   $0x000002,0x00007e(%esi)
		mov    0x000081(%esi),%ch
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ch
		mov    %ch,0x000081(%esi)
		call   _040974_func
		test   %ax,%ax
		je     _027beb_jump
		mov    %esi,%eax
		mov    $0x000002,%ebx
		call   _0266b8_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000032,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		cmpb   $0x000002,_095cce_data
		jne    _027bdc_jump
		mov    $0x000001,%dl
		mov    $0x000001,%edi
		xor    %esi,%esi
		mov    %dl,_095cce_data
		mov    %si,_095cfc_data
		mov    %di,_095cfe_data
		jmp    _027be4_jump

	_027bdc_jump:
		xor    %ah,%ah
		mov    %ah,_095cce_data

	_027be4_jump:
		movb   $0x000014,_095cf0_data

	_027beb_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027bf4_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0cdbda_data,%bx
		mov    _0cdc0c_data,%dl
		add    %ebx,%edx
		sub    %edx,%eax
		testb  $0x000008,_0cdc25_data
		je     _027c17_jump
		test   %ax,%ax
		jge    _027c25_jump

	_027c17_jump:
		testb  $0x000008,_0cdc25_data
		jne    _027c2a_jump
		test   %ax,%ax
		jg     _027c2a_jump

	_027c25_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    

	_027c2a_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_027c30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _095cd2_data,%ah
		test   %ah,%ah
		jne    _027ce9_jump
		mov    0x000056(%ecx),%di
		mov    %ah,0x00007e(%ecx)
		dec    %edi
		mov    %ecx,%eax
		mov    %di,0x000056(%ecx)
		call   _026688_func
		cmpw   $0x000000,0x000056(%ecx)
		jne    _027eff_jump
		call   _02784c_func
		mov    0x000004(%ecx),%eax
		mov    0x000022(%eax),%ax
		incw   _095cf2_data
		and    $0x00ffff,%eax
		mov    _095cf0_data,%edx
		dec    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jle    _027c92_jump
		xor    %ebx,%ebx
		mov    %bx,_095cf2_data

	_027c92_jump:
		mov    _095cf2_data,%ax
		cmp    _095cf4_data,%ax
		jne    _027cc4_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000064,0x000056(%ecx)
		call   _01d374_func
		mov    $0x00006b,%eax
		call   _06fa90_func
		jmp    _027eff_jump

	_027cc4_jump:
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _0274ec_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d374_func
		mov    $0x000069,%eax
		call   _06fa90_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027ce9_jump:
		mov    _0cee10_data,%dx
		mov    0x000028(%ecx),%ax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		mov    _0cedfa_data,%bx
		add    %eax,%edx
		mov    0x00002c(%ecx),%ax
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		add    $0x000008,%edx
		add    %eax,%ebx
		movswl %dx,%eax
		mov    _0dd828_data,%edx
		mov    $0x000140,%esi
		sar    $0x000010,%edx
		sub    %edx,%esi
		mov    %esi,%edx
		lea    0x000008(%eax),%esi
		cmp    %edx,%esi
		jl     _027d65_jump
		cmpb   $0x000016,_095cf0_data
		je     _027ef3_jump
		mov    %ecx,%eax
		call   _026714_func
		mov    $0x000016,%ah
		xor    %dl,%dl
		mov    %ah,_095cf0_data
		mov    $0x00002d,%eax
		mov    %dl,_095f9e_data
		call   _06fa90_func
		jmp    _027ef3_jump

	_027d65_jump:
		mov    _0dd830_data,%edx
		lea    -0x000008(%eax),%esi
		sar    $0x000010,%edx
		cmp    %edx,%esi
		jg     _027db5_jump
		cmpb   $0x000015,_095cf0_data
		je     _027ef3_jump
		mov    %ecx,%eax
		mov    $0x000015,%bl
		call   _026714_func
		mov    %bl,_095cf0_data
		xor    %bh,%bh
		mov    $0x00002d,%eax
		mov    %bh,_095f9e_data
		call   _06fa90_func
		mov    %ecx,%eax
		call   _02680c_func
		call   _026954_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027db5_jump:
		mov    _0dd82e_data,%esi
		movswl %bx,%edx
		sar    $0x000010,%esi
		lea    -0x000008(%edx),%edi
		cmp    %esi,%edi
		jg     _027e1b_jump
		cmpb   $0x000017,_095cf0_data
		je     _027ef3_jump
		mov    %ecx,%eax
		mov    $0x000017,%bh
		call   _026740_func
		mov    _095f9e_data,%al
		mov    %bh,_095cf0_data
		test   %al,%al
		je     _027df7_jump
		mov    %al,%ah
		inc    %ah
		mov    %ah,_095f9e_data

	_027df7_jump:
		mov    $0x00002d,%eax
		mov    $0x000001,%dl
		call   _06fa90_func
		mov    %dl,_095f9f_data
		mov    %ecx,%eax
		call   _02680c_func
		call   _026954_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027e1b_jump:
		mov    _0cdbda_data,%esi
		sar    $0x000010,%esi
		add    $0x000008,%edx
		add    $0x000040,%esi
		cmp    %esi,%edx
		jle    _027ee1_jump
		cmpw   $0x000000,_0cdbe4_data
		je     _027e8e_jump
		call   _027bf4_func
		test   %al,%al
		je     _027e8e_jump
		cmpb   $0x000000,_0cdc11_data
		jne    _027e57_jump
		cmpb   $0x000004,_0cdc10_data
		je     _027e68_jump

	_027e57_jump:
		mov    _0cdc11_data,%al
		cmp    $0x000001,%al
		jne    _027e8e_jump
		cmp    _0cdc10_data,%al
		jne    _027e8e_jump

	_027e68_jump:
		mov    $0x000011,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		mov    %ecx,%eax
		call   _02680c_func
		call   _026954_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027e8e_jump:
		mov    _0dd82e_data,%eax
		mov    $0x0000c8,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %bx,%edx
		cmp    %eax,%edx
		jl     _027eec_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    %ecx,%eax
		movb   $0x000000,0x00007e(%ecx)
		call   _026688_func
		cmpb   $0x000001,_095cce_data
		jne    _027ef3_jump
		movb   $0x000002,_095cce_data
		mov    %ecx,%eax
		call   _02680c_func
		call   _026954_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027ee1_jump:
		mov    %ecx,%eax
		call   _026e00_func
		test   %al,%al
		jne    _027ef3_jump

	_027eec_jump:
		mov    %ecx,%eax
		call   _02721c_func

	_027ef3_jump:
		mov    %ecx,%eax
		call   _02680c_func
		call   _026954_func

	_027eff_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027f08_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000002,_095ccf_data
		jne    _027f40_jump
		xor    %edx,%edx
		mov    _095cd0_data,%dl
		mov    _0dd776_data(,%edx,8),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		xor    %ecx,%ecx
		add    %ebx,%edx
		mov    _0cc300_data,%ebx
		mov    _095cd1_data,%cl
		mov    %cx,0x000050(%ebx,%edx,4)

	_027f40_jump:
		xor    %dh,%dh
		mov    0x000076(%eax),%bl
		mov    %dh,_095ccf_data
		dec    %bl
		mov    %bl,0x000076(%eax)
		jne    _027f6b_jump
		mov    $0x000004,%ebx
		xor    %edx,%edx
		movw   $0x000064,0x000056(%eax)
		call   _01d374_func
		mov    $0x000016,%eax
		jmp    _027f7c_jump

	_027f6b_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x00000f,%eax

	_027f7c_jump:
		call   _06fa90_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027f88_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%edx
		movb   $0x000000,0x00007e(%eax)
		xor    %ebx,%ebx
		call   _026688_func
		mov    %bx,_095cfe_data
		mov    0x000056(%edx),%si
		mov    %bx,_095cfc_data
		dec    %si
		mov    %si,0x000056(%edx)
		jne    _02800d_jump
		cmpb   $0x000000,0x000076(%edx)
		je     _027fbd_jump
		call   _056444_func

	_027fbd_jump:
		movw   $0x000001,_0cedb4_data
		call   _02784c_func
		mov    0x000081(%edx),%bl
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bl
		mov    $_0cdba4_data,%eax
		mov    %bl,0x000081(%edx)
		mov    $0x000002,%ebx
		mov    $0x000003,%edx
		call   _01d374_func
		movw   $0x000001,_0cedea_data
		call   _026524_func
		call   _026540_func
		call   _03b970_func

	_02800d_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_028014_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000076(%eax)
		jbe    _028097_jump
		mov    $0x000140,%ebx
		mov    _095b15_data,%dl
		mov    $0x0000c8,%edi
		cmp    $0x000001,%dl
		jne    _028050_jump
		cmp    _0cef6d_data,%dl
		jne    _028050_jump
		mov    $0x00013d,%ebx
		mov    $0x0000c0,%edi

	_028050_jump:
		mov    $0x000001,%cl
		mov    %cl,0x00001c(%esp)
		cmp    0x000076(%esi),%cl
		jae    _028097_jump
		sub    $0x00001c,%ebx
		mov    %bx,0x000018(%esp)

	_028063_jump:
		xor    %ebx,%ebx
		mov    0x00001c(%esp),%bl
		imul   $0x000014,%ebx,%ebx
		push   $0x000001
		mov    %edi,%eax
		mov    $0x00000b,%edx
		sub    %ebx,%eax
		mov    0x00001a(%esp),%ebx
		movswl %ax,%ecx
		sar    $0x000010,%ebx
		mov    %esi,%eax
		call   _018cb0_func
		mov    0x00001c(%esp),%al
		inc    %al
		mov    %al,0x00001c(%esp)
		cmp    0x000076(%esi),%al
		jb     _028063_jump

	_028097_jump:
		cmpb   $0x000014,_095cd2_data
		ja     _028170_jump
		movl   $0x000010,0x000014(%esp)
		mov    _095b15_data,%dh
		mov    $0x0000af,%eax
		cmp    $0x000001,%dh
		jne    _0280d2_jump
		cmp    _0cef6d_data,%dh
		jne    _0280d2_jump
		mov    $0x00000c,%ebx
		mov    $0x0000a9,%eax
		mov    %ebx,0x000014(%esp)

	_0280d2_jump:
		push   $0x000001
		mov    _0cedd0_data,%edx
		mov    _0cc300_data,%edi
		sar    $0x000010,%edx
		movswl %ax,%ebp
		mov    %edx,%ebx
		mov    0x000018(%esp),%eax
		shl    $0x000005,%ebx
		mov    %ebp,%ecx
		add    %edx,%ebx
		sub    $0x000002,%eax
		shl    $0x000002,%ebx
		mov    $0x000039,%edx
		add    %ebx,%edi
		movswl %ax,%ebx
		mov    %edi,%eax
		call   _018cb0_func
		mov    0x000014(%esp),%eax
		mov    $0x00000a,%ecx
		xor    %edx,%edx
		add    $0x000027,%eax
		mov    _095cd2_data,%dl
		movswl %ax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		add    $0x00001c,%eax
		xor    %edx,%edx
		mov    %ebp,%ecx
		mov    %al,%dl
		mov    %edi,%eax
		call   _018cb0_func
		mov    0x000014(%esp),%eax
		mov    $0x00000a,%ecx
		xor    %edx,%edx
		add    $0x000036,%eax
		mov    _095cd2_data,%dl
		movswl %ax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		add    $0x00001c,%edx
		and    $0x0000ff,%edx
		mov    %ebp,%ecx
		mov    %edi,%eax
		call   _018cb0_func

	_028170_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _028238_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000001,%dl
		jb     _028238_jump
		jbe    _028192_jump
		cmp    $0x000004,%dl
		je     _0281eb_jump
		jmp    _028238_jump

	_028192_jump:
		mov    _0cce24_data,%eax
		and    $0x00003f,%eax
		cmp    $0x000020,%eax
		jge    _028238_jump
		mov    _0c26a8_data,%edx
		push   %edx
		push   $_0c0520_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    $0x000064,%ebx
		xor    %ecx,%ecx
		push   $0x000000
		mov    $0x0000a0,%edx
		lea    0x000004(%esp),%eax
		call   _01a178_func
		push   $0x000000
		mov    $0x000002,%ecx
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2688_data,%eax
		jmp    _028233_jump

	_0281eb_jump:
		cmpb   $0x000000,_095f9d_data
		je     _028207_jump
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0c25b8_data,%eax
		jmp    _028231_jump

	_028207_jump:
		cmpb   $0x000000,0x000076(%esi)
		jne    _028220_jump
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0c25b8_data,%eax
		jmp    _028231_jump

	_028220_jump:
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0c262c_data,%eax

	_028231_jump:
		xor    %ecx,%ecx

	_028233_jump:
		call   _01a178_func

	_028238_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_028244_switch:
		.long   _0282c0_case
		.long   _0282cb_case
		.long   _0282d6_case
		.long   _0282e1_case
		.long   _0282ec_case




_028258_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%eax
		call   _040780_func
		test   %al,%al
		je     _02829e_jump
		mov    _095f9d_data,%ah
		test   %ah,%ah
		jne    _02829e_jump
		mov    $0x000001,%dl
		mov    $0x000004,%ebx
		mov    %ah,0x000076(%ecx)
		mov    %dl,_095f9d_data
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000064,0x000056(%ecx)
		call   _01d374_func
		mov    $0x000016,%eax
		call   _06fa90_func

	_02829e_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0282f3_jump
		mov    0x00006c(%ecx),%bl
		cmp    $0x00000a,%bl
		je     _0282f3_jump
		mov    %bl,%al
		cmp    $0x000004,%bl
		ja     _0282f3_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_028244_switch(,%eax,4)

	_0282c0_case:
		mov    %ecx,%eax
		call   _027898_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0282cb_case:
		mov    %ecx,%eax
		call   _027a88_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0282d6_case:
		mov    %ecx,%eax
		call   _027c30_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0282e1_case:
		mov    %ecx,%eax
		call   _027f08_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0282ec_case:
		mov    %ecx,%eax
		call   _027f88_func

	_0282f3_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0282f8_func:
		push   %edx
		mov    %eax,%edx
		call   _027440_func
		mov    %edx,%eax
		call   _026aa0_func
		pop    %edx
		ret    



_02830c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cdc11_data
		jne    _028323_jump
		cmpb   $0x000004,_0cdc10_data
		je     _02833e_jump

	_028323_jump:
		mov    _0cdc11_data,%dh
		cmp    $0x000001,%dh
		jne    _0284b0_jump
		cmp    _0cdc10_data,%dh
		jne    _0284b0_jump

	_02833e_jump:
		call   _040824_func
		test   %ax,%ax
		je     _0283c1_jump
		mov    _0cdc25_data,%ch
		test   $0x000008,%ch
		jne    _028370_jump
		mov    %ch,%al
		mov    _0cdbe4_data,%di
		or     $0x000008,%al
		neg    %edi
		mov    %al,_0cdc25_data
		mov    %di,_0cdbe4_data

	_028370_jump:
		cmpb   $0x000000,_0cdc11_data
		jne    _0283a1_jump
		cmpb   $0x000004,_0cdc10_data
		jne    _0283a1_jump
		mov    $0x000001,%ebx
		mov    $_0cdba4_data,%eax
		mov    %ebx,%edx
		call   _01d374_func
		movw   $0x000010,_0cdbe4_data
		jmp    _028517_jump

	_0283a1_jump:
		mov    _0cdbe2_data,%ebx
		sar    $0x000010,%ebx
		mov    $0x00002f,%eax
		inc    %ebx
		cmp    %ebx,%eax
		jle    _0283b6_jump
		mov    %ebx,%eax

	_0283b6_jump:
		mov    %ax,_0cdbe4_data
		jmp    _028517_jump

	_0283c1_jump:
		call   _0407b4_func
		test   %ax,%ax
		je     _028449_jump
		mov    _0cdc25_data,%dh
		test   $0x000008,%dh
		je     _0283f5_jump
		mov    %dh,%bl
		mov    _0cdbe4_data,%cx
		and    $0x0000f7,%bl
		neg    %ecx
		mov    %bl,_0cdc25_data
		mov    %cx,_0cdbe4_data

	_0283f5_jump:
		cmpb   $0x000000,_0cdc11_data
		jne    _028429_jump
		cmpb   $0x000004,_0cdc10_data
		jne    _028429_jump
		mov    $0x000001,%ebx
		mov    $_0cdba4_data,%eax
		mov    %ebx,%edx
		mov    $0xfffffff0,%esi
		call   _01d374_func
		mov    %si,_0cdbe4_data
		jmp    _028517_jump

	_028429_jump:
		mov    _0cdbe2_data,%ebx
		sar    $0x000010,%ebx
		mov    $0xffffffd1,%eax
		dec    %ebx
		cmp    %ebx,%eax
		jge    _02843e_jump
		mov    %ebx,%eax

	_02843e_jump:
		mov    %ax,_0cdbe4_data
		jmp    _028517_jump

	_028449_jump:
		mov    _0cdbe4_data,%dx
		test   %dx,%dx
		jle    _028469_jump
		mov    _0cdbe2_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		dec    %ebx
		cmp    %ebx,%eax
		jge    _028467_jump
		mov    %ebx,%eax

	_028467_jump:
		jmp    _02847d_jump

	_028469_jump:
		jge    _028483_jump
		mov    _0cdbe2_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		inc    %ebx
		cmp    %ebx,%eax
		jle    _02847d_jump
		mov    %ebx,%eax

	_02847d_jump:
		mov    %ax,_0cdbe4_data

	_028483_jump:
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _028491_jump
		neg    %eax

	_028491_jump:
		cmp    $0x000010,%eax
		jge    _028517_jump
		mov    $0x000004,%ebx
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _028517_jump

	_0284b0_jump:
		cmpb   $0x000003,_0cdc11_data
		jne    _0284c2_jump
		cmpb   $0x000012,_0cdc10_data
		je     _0284d4_jump

	_0284c2_jump:
		cmpb   $0x000000,_0cdc11_data
		jne    _0284fb_jump
		cmpb   $0x000014,_0cdc10_data
		jne    _0284fb_jump

	_0284d4_jump:
		mov    $_0cdba4_data,%eax
		call   _053ce4_func
		call   _040974_func
		test   %ax,%ax
		je     _028517_jump
		mov    $0x000004,%ebx
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _028517_jump

	_0284fb_jump:
		cmpb   $0x000003,_0cdc11_data
		jne    _028517_jump
		cmpb   $0x000011,_0cdc10_data
		jne    _028517_jump
		mov    $_0cdba4_data,%eax
		call   _053ce4_func

	_028517_jump:
		mov    _0dd826_data,%eax
		mov    _0cdbcc_data,%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _028543_jump
		cmpw   $0x000000,_0cdbe4_data
		jge    _028543_jump
		xor    %esi,%esi
		mov    %eax,_0cdbcc_data
		mov    %si,_0cdbe4_data
		jmp    _02858b_jump

	_028543_jump:
		mov    _0dd82c_data,%eax
		mov    _0cdbcc_data,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jg     _02856f_jump
		cmpw   $0x000000,_0cdbe4_data
		jle    _02856f_jump
		xor    %ecx,%ecx
		mov    %eax,_0cdbcc_data
		mov    %cx,_0cdbe4_data
		jmp    _02858b_jump

	_02856f_jump:
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		call   _053c60_func
		mov    _0cdbcc_data,%ecx
		cwtl   
		add    %eax,%ecx
		mov    %ecx,_0cdbcc_data

	_02858b_jump:
		push   $_0cedca_data
		mov    $_0cedb0_data,%ecx
		mov    $_0cedae_data,%ebx
		mov    $_0cedac_data,%edx
		mov    $_0cdba4_data,%eax
		call   _01d858_func
		call   _02e518_func
		mov    $_0cdba4_data,%eax
		call   _0545ac_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0285c0_func:
		movw   $0x000000,0x000040(%eax)
		movw   $0x00fff8,0x000042(%eax)
		ret    



_0285d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02861f_jump
		cmpb   $0x000007,0x00006c(%eax)
		jne    _02861f_jump
		mov    0x00006b(%eax),%bl
		test   %bl,%bl
		jne    _02861f_jump
		xor    %edx,%edx
		mov    %bl,%dl
		shl    $0x000002,%edx
		mov    0x00000c(%eax),%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		lea    0x000000(,%edx,8),%ecx
		mov    (%ebx),%edx
		mov    0x000005(%ecx,%edx,1),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		cmpb   $0x000000,_0cef4d_data(%edx)
		jne    _02861f_jump
		movb   $0x000005,0x00007e(%eax)
		call   _028bac_func

	_02861f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028624_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		call   _01e6dc_func
		mov    0x000076(%ebx),%ah
		test   %ah,%ah
		jne    _02869a_jump
		mov    %ah,0x00006f(%ebx)
		mov    0x000028(%ebx),%ax
		mov    %ax,0x00003c(%ebx)
		mov    0x00002c(%ebx),%ax
		mov    $0x00000c,%edx
		mov    %ax,0x00003e(%ebx)
		mov    %ebx,%eax
		movb   $0x000008,0x00006e(%ebx)
		call   _01d364_func
		mov    $0x000005,%dl
		movb   $0x000007,0x000078(%ebx)
		call   _028854_func
		mov    $0x000011,%eax
		mov    _0cefb3_data,%cl
		mov    %dl,_0cefba_data
		mov    0x000032(%ebx),%edx
		inc    %cl
		sar    $0x000010,%edx
		mov    %cl,_0cefb3_data
		call   _06f3bc_func
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		mov    %ebx,_0cdb14_data
		call   _0713b0_func
		pop    %ecx
		pop    %ebx
		ret    

	_02869a_jump:
		mov    $0x00000a,%edx
		mov    %ebx,%eax
		call   _01d364_func
		pop    %ecx
		pop    %ebx
		ret    



_0286ac_func:
		push   %ebx
		push   %edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000020,%dl
		je     _0286cf_jump
		cmp    $0x000021,%dl
		je     _0286cf_jump
		cmp    $0x000022,%dl
		je     _0286cf_jump
		cmp    $0x000023,%dl
		je     _0286cf_jump
		cmp    $0x000024,%dl
		je     _0286cf_jump
		cmp    $0x000025,%dl
		jne    _028702_jump

	_0286cf_jump:
		mov    0x00006b(%eax),%bl
		cmp    $0x000029,%bl
		jne    _0286ea_jump
		mov    0x000032(%eax),%edx
		mov    $0x0000c0,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		pop    %edx
		pop    %ebx
		ret    

	_0286ea_jump:
		cmp    $0x000040,%bl
		jne    _02871d_jump
		mov    0x000032(%eax),%edx
		mov    $0x0000c1,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		pop    %edx
		pop    %ebx
		ret    

	_028702_jump:
		cmp    $0x000026,%dl
		jne    _02871d_jump
		mov    0x000081(%eax),%dh
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%eax)

	_02871d_jump:
		pop    %edx
		pop    %ebx
		ret    



_028720_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce4b2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0ce57c_data,%cx
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%edx
		test   %cx,%cx
		jle    _02884e_jump

	_028751_jump:
		cmpw   $0x0000c5,0x000060(%edx)
		jne    _028823_jump
		cmpw   $0x000000,_0cecba_data
		jne    _028778_jump
		mov    $0x000001,%ecx
		call   _07020c_func
		mov    %cx,_0cecba_data

	_028778_jump:
		mov    _0cee04_data,%ax
		mov    %ax,_0cee10_data
		mov    _0cee00_data,%ax
		mov    %ax,_0cedfa_data
		mov    %edx,%eax
		call   _0545ac_func
		mov    0x00006c(%edx),%ah
		cmp    $0x000020,%ah
		je     _0287b8_jump
		cmp    $0x000021,%ah
		je     _0287b8_jump
		cmp    $0x000022,%ah
		je     _0287b8_jump
		cmp    $0x000023,%ah
		je     _0287b8_jump
		cmp    $0x000024,%ah
		je     _0287b8_jump
		cmp    $0x000025,%ah
		jne    _0287df_jump

	_0287b8_jump:
		mov    0x00006b(%edx),%cl
		cmp    $0x000029,%cl
		jne    _0287cd_jump
		mov    0x000032(%edx),%edx
		mov    $0x0000c0,%eax
		sar    $0x000010,%edx
		jmp    _028814_jump

	_0287cd_jump:
		cmp    $0x000040,%cl
		jne    _028819_jump
		mov    0x000032(%edx),%edx
		mov    $0x0000c1,%eax
		sar    $0x000010,%edx
		jmp    _028814_jump

	_0287df_jump:
		cmp    $0x000026,%ah
		jne    _028819_jump
		xor    %al,%al
		mov    %al,_0cefb6_data
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		xor    %esi,%esi
		mov    %ah,0x000081(%edx)
		mov    $0xffffffff,%edx
		mov    $0x00003d,%eax
		mov    %si,_0cecba_data

	_028814_jump:
		call   _06f3bc_func

	_028819_jump:
		mov    $0x000001,%eax
		call   _053298_func

	_028823_jump:
		inc    %ebx
		movswl %bx,%edx
		mov    _0ce4b2_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc300_data,%eax
		mov    _0ce57c_data,%si
		add    %eax,%edx
		cmp    %si,%bx
		jl     _028751_jump

	_02884e_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028854_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cc300_data,%ebx
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _02898f_jump

	_028870_jump:
		cmpw   $0x0000c5,0x000060(%ebx)
		jne    _02897f_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _02897f_jump
		mov    _0cee0e_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ebx),%al
		add    $0x0000a0,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%ebx)
		mov    %edx,%eax
		mov    %dx,0x00003c(%ebx)
		xor    %edx,%eax
		mov    _0cedf8_data,%edx
		mov    0x000069(%ebx),%al
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%ebx)
		sub    %eax,%edx
		mov    0x000081(%ebx),%ah
		mov    %edx,0x00002c(%ebx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ebx)
		mov    %ebx,%eax
		mov    %dx,0x00003e(%ebx)
		call   _01f304_func
		andb   $0x0000ef,0x000081(%ebx)
		xor    %edx,%edx
		mov    _0cefb2_data,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _094a4d_data(,%eax,4),%al
		xor    %edx,%edx
		add    $0x000020,%al
		mov    %al,%dl
		mov    %ebx,%eax
		call   _01d364_func
		xor    %edx,%edx
		mov    _0cefb2_data,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		cmpb   $0x000006,_094a4d_data(%eax)
		jne    _028929_jump
		movb   $0x000005,_094a4d_data(%eax)

	_028929_jump:
		xor    %edx,%edx
		mov    _0cefb2_data,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x000001,%bh
		mov    _094a4d_data(,%eax,4),%cl
		xor    %esi,%esi
		add    %bh,%cl
		mov    %bh,_0cefb6_data
		mov    %cl,_094a4d_data(,%eax,4)
		mov    _0cee04_data,%ax
		mov    %si,_0cee06_data
		mov    %ax,_0cee10_data
		mov    _0cee00_data,%ax
		mov    %si,_0cee08_data
		mov    %ax,_0cedfa_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02897f_jump:
		inc    %eax
		add    $0x000084,%ebx
		cmp    %dx,%ax
		jl     _028870_jump

	_02898f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028994_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%ebp
		mov    %dl,0x000018(%esp)
		mov    $0x000003,%eax
		call   _01d020_func
		xor    %edi,%edi
		mov    %eax,%esi
		add    $0x000738,%eax
		mov    0x000060(%ebp),%dx
		mov    %eax,(%esp)
		cmp    $0x000017,%dx
		jne    _0289e4_jump
		xor    %eax,%eax
		mov    _0cdc0e_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0cdba8_data,%eax
		mov    0x000008(%eax,%edx,4),%al
		mov    %al,0x000014(%esp)
		jmp    _028b97_jump

	_0289e4_jump:
		movb   $0x000001,0x000014(%esp)
		cmp    (%esp),%esi
		jb     _0289f7_jump
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0289f7_jump:
		cmpl   $0x000000,0x000024(%esi)
		jne    _028b91_jump
		cmpw   $0x000003,0x000060(%esi)
		jne    _028b91_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		movw   $0x000014,0x000056(%esi)
		movl   $0x000001,0x000024(%esi)
		mov    0x000081(%esi),%dl
		movb   $0x000000,0x000071(%esi)
		or     $0x000004,%dl
		mov    %dl,0x000081(%esi)
		movswl %di,%edx
		movb   $0x000005,0x000072(%esi)
		mov    _095fb2_data(,%edx,2),%bx
		mov    %bx,0x000042(%esi)
		mov    _095fa4_data(,%edx,2),%dx
		mov    %esi,%eax
		mov    %dx,0x000040(%esi)
		call   _01f304_func
		cmpw   $0x000000,0x000040(%esi)
		jle    _028a9c_jump
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%ebx
		mov    0x000040(%esi),%dl
		mov    %dl,(%ebx)
		mov    %dl,%bl
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		neg    %bl
		mov    %bl,0x000001(%edx)
		mov    0x000081(%esi),%bl
		mov    %esi,%eax
		or     $0x000008,%bl
		mov    $0x000002,%edx
		mov    %bl,0x000081(%esi)
		mov    $0x000001,%ebx
		jmp    _028ad0_jump

	_028a9c_jump:
		mov    0x00000c(%esi),%edx
		mov    0x000040(%esi),%bl
		mov    0x000008(%edx),%edx
		neg    %bl
		mov    %bl,(%edx)
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%ebx
		mov    0x000040(%esi),%dl
		mov    %dl,0x000001(%ebx)
		mov    0x000081(%esi),%dh
		mov    %esi,%eax
		and    $0x0000f7,%dh
		mov    $0x000001,%ebx
		mov    %dh,0x000081(%esi)
		mov    $0x000002,%edx

	_028ad0_jump:
		call   _05f030_func
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		mov    (%edx),%al
		mov    %al,0x000008(%edx)
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		mov    0x000001(%edx),%al
		mov    %al,0x000009(%edx)
		lea    0x00000c(%esp),%edx
		push   %edx
		lea    0x00000c(%esp),%edx
		xor    %ebx,%ebx
		push   %edx
		movswl %di,%edx
		mov    0x00001c(%esp),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    0x000018(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		movswl %dx,%edx
		mov    %ebp,%eax
		call   _01d710_func
		mov    0x000006(%esp),%edx
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x00000a(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		mov    %esi,%eax
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,0x00002c(%esi)
		call   _01db8c_func
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		movb   $0x000000,0x00006b(%esi)
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		inc    %edi
		mov    0x000002(%ebx,%edx,8),%al
		mov    0x000081(%esi),%bh
		xor    %edx,%edx
		mov    %al,0x00006a(%esi)
		and    $0x0000bf,%bh
		mov    0x000018(%esp),%dl
		mov    %bh,0x000081(%esi)
		cmp    %dx,%di
		je     _028ba0_jump

	_028b91_jump:
		add    $0x000084,%esi

	_028b97_jump:
		cmp    (%esp),%esi
		jb     _0289f7_jump

	_028ba0_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_028bac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    _0cc300_data,%edx
		mov    _0cc304_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _028c2d_jump

	_028bc6_jump:
		cmpw   $0x00003b,0x000060(%edx)
		jne    _028c21_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _028c21_jump
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f304_func
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    _0cee10_data,%di
		mov    0x000028(%edx),%ax
		mov    0x00002c(%ecx),%ecx
		sub    %edi,%eax
		mov    %ecx,0x00002c(%edx)
		mov    %ax,0x000036(%edx)
		mov    _0cedfa_data,%bx
		mov    0x00002c(%edx),%ax
		movw   $0x00fffc,0x000042(%edx)
		sub    %ebx,%eax
		mov    %ax,0x000038(%edx)
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028c21_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _028bc6_jump

	_028c2d_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028c34_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000056(%eax),%dx
		test   %dx,%dx
		je     _028c49_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x000056(%eax)

	_028c49_jump:
		cmpb   $0x000000,_0cefcd_data
		je     _028c6d_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%bl
		testb  $0x000002,0x000007(%eax,%ebx,8)
		jne    _028c80_jump

	_028c6d_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _028c9a_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _028c9a_jump
		cmpw   $0x000002,0x000042(%ecx)
		jle    _028c9a_jump

	_028c80_jump:
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff6,0x000042(%ecx)

	_028c9a_jump:
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x00006d(%ecx),%al
		mov    0x00006c(%ecx),%bl
		shl    $0x000008,%eax
		add    %ebx,%eax
		lea    0x000081(%ecx),%ebx
		cmp    $0x000003,%eax
		jb     _028ce9_jump
		cmp    $0x000005,%eax
		jbe    _028df8_jump
		cmp    $0x000200,%eax
		jb     _028cde_jump
		cmp    $0x000201,%eax
		jbe    _028d76_jump
		cmp    $0x000202,%eax
		je     _028d70_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028cde_jump:
		cmp    $0x000100,%eax
		je     _028d26_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028ce9_jump:
		cmp    $0x000001,%eax
		jbe    _028df8_jump
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _028df8_jump
		mov    0x000081(%ecx),%dh
		mov    %ebx,%eax
		test   $0x000008,%dh
		sete   %bl
		and    $0x000001,%bl
		mov    (%eax),%bh
		and    $0x0000f7,%bh
		mov    %bh,(%eax)
		shl    $0x000003,%bl
		mov    %bh,%cl
		or     %bl,%cl
		mov    %cl,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028d26_jump:
		mov    %ecx,%eax
		call   _053ce4_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _028d65_jump
		mov    0x000081(%ecx),%dh
		mov    %ebx,%eax
		test   $0x000008,%dh
		sete   %bl
		and    $0x000001,%bl
		mov    (%eax),%bh
		and    $0x0000f7,%bh
		mov    %bh,(%eax)
		shl    $0x000003,%bl
		mov    %bh,%dl
		or     %bl,%dl
		mov    %dl,(%eax)

	_028d65_jump:
		mov    %ecx,%eax
		call   _0252c0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028d70_jump:
		movw   $0x000000,0x000040(%ecx)

	_028d76_jump:
		cmpb   $0x00000a,0x000062(%ecx)
		jne    _028d98_jump
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff6,0x000042(%ecx)
		jmp    _028dd4_jump

	_028d98_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _028dd4_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _028dd4_jump
		cmpb   $0x000000,_0cefcd_data
		jne    _028dce_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d364_func

	_028dce_jump:
		movw   $0x000000,0x000042(%ecx)

	_028dd4_jump:
		cmpw   $0x000000,0x000040(%ecx)
		je     _028df8_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _028df8_jump
		movw   $0x000000,0x000040(%ecx)

	_028df8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028dfc_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000001,0x000007(%ebx,%edx,8)
		je     _028e25_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _05f030_func

	_028e25_jump:
		pop    %edx
		pop    %ebx
		ret    



_028e30_func:
		mov    _0ddf0c_data,%al
		ret    



_028e50_func:
		mov    %al,_0ddf0c_data
		ret    



_028e70_func:
		push   %edx
		mov    %eax,%edx
		mov    $0x00002f,%eax
		call   _063fb8_func
		pop    %edx
		ret    



_028e80_func:
		test   $0x000080,%ah
		je     _028e88_jump
		xor    %ah,%ah
		ret    

	_028e88_jump:
		mov    $0x000100,%eax
		ret    



_028e90_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %esi,%ecx
		xor    %dl,%dl
		shr    $0x000010,%ecx

	_028ea3_jump:
		movw   $0x001510,_0dd8b2_data
		xor    %ah,%ah
		mov    %cx,_0dd8c4_data
		mov    (%esp),%al
		mov    %si,_0dd8b4_data
		mov    %ax,_0dd8b6_data
		mov    $_0dd8b2_data,%eax
		inc    %dl
		call   _028e70_func
		cmp    $0x00000a,%dl
		je     _028edf_jump
		mov    %edi,%gs
		testb  $0x000080,%gs:0x000004(%ebx)
		jne    _028ea3_jump

	_028edf_jump:
		mov    %edi,%gs
		xor    %eax,%eax
		mov    %gs:0x000003(%ebx),%ax
		call   _028e80_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    



_028ef4_func:
		push   %ecx
		push   %esi
		mov    %edx,%esi
		mov    %eax,%ecx
		mov    %edx,%gs
		movb   $0x00000d,%gs:(%ecx)
		movb   $0x000000,%gs:0x000001(%ecx)
		movw   $0x000000,%gs:0x000003(%ecx)
		xor    %al,%al
		mov    %bl,%gs:0x000002(%ecx)
		mov    %esi,%gs

	_028f14_jump:
		xor    %edx,%edx
		mov    %al,%dl
		inc    %al
		movb   $0x000000,%gs:0x000005(%ecx,%edx,1)
		cmp    $0x000008,%al
		jb     _028f14_jump
		pop    %esi
		pop    %ecx
		ret    



_028f28_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %edx,(%esp)
		mov    %eax,%esi
		mov    %ebx,%edi
		xor    %ebx,%ebx
		mov    %cl,%bl
		call   _028ef4_func
		mov    (%esp),%gs
		movb   $0x000000,%gs:0x00000d(%esi)
		movw   $0x000000,%gs:0x000014(%esi)
		movl   $0x000000,%gs:0x000016(%esi)
		mov    0x000010(%esp),%ebx
		mov    %di,%gs:0x00000e(%esi)
		mov    %bx,%gs:0x000012(%esi)
		shr    $0x000010,%edi
		mov    %di,%gs:0x000010(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_029144_func:
		push   %ebx
		push   %edx
		mov    $0x001500,%edx
		mov    $_0dd8b2_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0dd8b2_data
		mov    %bx,_0dd8b4_data
		mov    %bx,_0dd8b6_data
		call   _028e70_func
		mov    _0dd8b6_data,%al
		mov    %al,_0ddf0c_data
		mov    _0dd8b4_data,%al
		pop    %edx
		pop    %ebx
		ret    



_029180_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _029144_func
		mov    %al,%dh
		mov    %al,_0ddeef_data
		xor    %dl,%dl
		mov    $0x00150b,%esi
		xor    %ecx,%ecx

	_029199_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %cl,_0ddef0_data(%ebx)
		test   %dh,%dh
		je     _0291dc_jump
		xor    %ah,%ah
		mov    %dl,%al
		mov    %si,_0dd8b2_data
		mov    %ax,_0dd8b6_data
		mov    $_0dd8b2_data,%eax
		mov    %cx,_0dd8b4_data
		call   _028e70_func
		cmp    _0dd8b2_data,%cx
		je     _0291dc_jump
		mov    $0x000001,%ah
		sub    %ah,%dh
		mov    %ah,_0ddef0_data(%ebx)

	_0291dc_jump:
		inc    %dl
		cmp    $0x00001a,%dl
		jb     _029199_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0291e8_jump:
		push   %edx
		mov    _0dd8c8_data,%dx
		xor    %al,%al
		test   %dx,%dx
		je     _029201_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _063f84_func

	_029201_jump:
		test   %al,%al
		je     _02920e_jump
		movw   $0x000102,_0dd8cc_data

	_02920e_jump:
		pop    %edx
		ret    



_029210_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x000100,%edx
		xor    %ah,%ah
		mov    %dx,_0dd8cc_data
		mov    %ah,_0ddf0f_data
		call   _0294f8_func
		cmp    $0x000001,%al
		jne    _029497_jump
		call   _029534_func
		cmp    $0x000001,%al
		jne    _029497_jump
		call   _029144_func
		test   %al,%al
		je     _02948c_jump
		mov    $0x000030,%esi
		mov    $0x000035,%edi
		mov    $0x00003c,%ebp
		mov    %dx,_0dd8cc_data
		call   _029180_func
		mov    $_0dd868_data,%edx
		mov    $0x00008a,%eax
		mov    $0x000043,%ecx
		call   _063f20_func
		mov    %ax,_0dd8c8_data
		mov    %esi,_0dd8a0_data
		mov    %edi,_0dd894_data
		mov    %ebp,_0dd87c_data
		mov    %ecx,_0dd882_data
		xor    %edx,%edx
		mov    $0x00004e,%esi
		mov    %edx,_0dd8ac_data
		mov    %edx,_0dd8a6_data
		mov    $0x00001a,%edx
		mov    $0x000059,%edi
		mov    %edx,_0dd89a_data
		mov    _0dd868_data,%edx
		mov    $0x00005b,%ebp
		mov    %edx,_0dd858_data
		add    $0x000030,%edx
		test   %ax,%ax
		sete   %bl
		mov    %edx,_0dd864_data
		mov    _0dd868_data,%edx
		mov    %ax,_0dd8b0_data
		add    $0x000035,%edx
		mov    %ax,_0dd8aa_data
		mov    %edx,_0dd85c_data
		mov    _0dd868_data,%edx
		mov    %ax,_0dd8a4_data
		add    $0x00003c,%edx
		mov    %ax,_0dd898_data
		mov    %edx,_0dd854_data
		mov    _0dd868_data,%edx
		mov    %ax,_0dd880_data
		add    $0x00001a,%edx
		mov    %ax,_0dd89e_data
		mov    %edx,_0dd84c_data
		mov    _0dd868_data,%edx
		mov    %ax,_0dd886_data
		add    %ecx,%edx
		mov    %ax,_0dd874_data
		mov    %edx,_0dd848_data
		mov    _0dd868_data,%edx
		mov    %esi,_0dd870_data
		add    %esi,%edx
		mov    %ax,_0dd87a_data
		mov    %edx,_0dd850_data
		mov    _0dd868_data,%edx
		mov    %edi,_0dd876_data
		add    %edi,%edx
		mov    %ax,_0dd892_data
		mov    %edx,_0dd840_data
		mov    _0dd868_data,%edx
		mov    %ax,_0dd88c_data
		add    %ebp,%edx
		mov    $0x000064,%eax
		mov    %edx,_0dd860_data
		mov    _0dd868_data,%edx
		mov    %ebp,_0dd88e_data
		add    %eax,%edx
		mov    %eax,_0dd888_data
		mov    %edx,_0dd844_data
		test   %bl,%bl
		je     _0293c4_jump
		movw   $0x000101,_0dd8cc_data
		jmp    _0294a0_jump

	_0293c4_jump:
		call   _029144_func
		cmp    $0x000001,%al
		ja     _02943e_jump
		jmp    _029453_jump

	_0293d6_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    %edx,%eax
		call   _029ef4_func
		cmp    $0x000001,%al
		jne    _029435_jump
		mov    %edx,%eax
		call   _029d84_func
		cmp    $0x000001,%al
		jne    _029435_jump
		mov    %edx,%eax
		call   _029dcc_func
		test   %al,%al
		je     _029435_jump
		mov    %edx,%eax
		mov    %cl,_0ddf0f_data
		call   _02a188_func
		cmp    $0x000001,%al
		jne    _029435_jump
		mov    $0x000001,%eax
		call   _029db4_func
		test   %al,%al
		jne    _029435_jump
		mov    %cl,_0cef80_data
		call   _069078_func
		cmp    _0cef80_data,%cl
		jne    _02942f_jump
		mov    %bl,%bh

	_02942f_jump:
		mov    %cl,_0cef80_data

	_029435_jump:
		inc    %bl
		cmp    $0x00001a,%bl
		jb     _029442_jump
		jmp    _029446_jump

	_02943e_jump:
		xor    %bh,%bh
		xor    %cl,%cl

	_029442_jump:
		test   %bh,%bh
		je     _0293d6_jump

	_029446_jump:
		test   %bh,%bh
		je     _029453_jump
		xor    %eax,%eax
		mov    %bh,%al
		call   _028e50_func

	_029453_jump:
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _029d84_func
		test   %al,%al
		jne    _02946f_jump
		movw   $0x00000c,_0dd8cc_data

	_02946f_jump:
		call   _028e30_func
		and    $0x0000ff,%eax
		add    $0x000041,%eax
		push   %eax
		push   $_0c0630_data
		call   _07bcec_func
		add    $0x000008,%esp
		jmp    _0294a0_jump

	_02948c_jump:
		movw   $0x000001,_0dd8cc_data
		jmp    _0294a0_jump

	_029497_jump:
		movw   $0x00000c,_0dd8cc_data

	_0294a0_jump:
		cmpw   $0x000100,_0dd8cc_data
		jne    _0294e5_jump
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _029ef4_func
		test   %al,%al
		jne    _0294c9_jump
		movw   $0x000001,_0dd8cc_data
		jmp    _0294e5_jump

	_0294c9_jump:
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _02a188_func
		test   %al,%al
		jne    _0294e5_jump
		movw   $0x000008,_0dd8cc_data

	_0294e5_jump:
		cmpw   $0x000100,_0dd8cc_data
		sete   %al
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0294f8_func:
		push   %ebx
		push   %edx
		mov    $0x001500,%edx
		mov    $_0dd8b2_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0dd8b2_data
		mov    %bx,_0dd8b4_data
		mov    %bx,_0dd8b6_data
		call   _028e70_func
		cmpw   $0x000000,_0dd8b4_data
		setne  %al
		and    $0x0000ff,%eax
		pop    %edx
		pop    %ebx
		ret    



_029534_func:
		push   %ebx
		push   %edx
		mov    $0x00150c,%edx
		mov    $_0dd8b2_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0dd8b2_data
		mov    %bx,_0dd8b4_data
		call   _028e70_func
		xor    %eax,%eax
		mov    _0dd8b4_data,%ax
		mov    %eax,%edx
		sar    $0x000004,%edx
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    _0dd8b4_data,%ax
		shl    $0x000002,%edx
		xor    %ah,%ah
		and    $0x00ffff,%eax
		add    %edx,%eax
		mov    %ax,_0dd8ca_data
		cmp    $0x0000d2,%ax
		setge  %al
		and    $0x0000ff,%eax
		pop    %edx
		pop    %ebx
		ret    



_0295a0_func:
		push   %ecx
		push   %esi
		mov    %dl,%cl
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    %eax,%edx
		lea    0x000000(,%eax,8),%esi
		xor    %eax,%edx
		mov    %cl,%dl
		add    %eax,%esi
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		add    %esi,%eax
		mov    %bl,%dl
		add    %edx,%eax
		sub    $0x000096,%eax
		pop    %esi
		pop    %ecx
		ret    



_0295e8_func:
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		and    $0x0000ff,%ecx
		mov    %dl,%al
		shl    $0x000010,%ecx
		shl    $0x000008,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    %bl,%cl
		add    %ecx,%eax
		pop    %ecx
		ret    



_029608_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %eax,%edx
		mov    $0x001194,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esi,%edx
		mov    %al,(%edi)
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00004b,%esi
		mov    %edx,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ebx,%edx
		mov    %al,0x000000(%ebp)
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %dl,(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_029648_func:
		push   %esi
		sub    $0x000004,%esp
		mov    %ecx,%esi
		mov    %eax,%ecx
		sar    $0x000010,%ecx
		and    $0x0000ff,%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%cl
		mov    %cl,(%edx)
		mov    %eax,%edx
		sar    $0x000008,%edx
		and    $0x0000ff,%edx
		mov    %dl,(%ebx)
		mov    %al,(%esi)
		add    $0x000004,%esp
		pop    %esi
		ret    



_029678_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		mov    %esp,%edx
		call   _029608_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000008(%esp),%bl
		mov    0x000004(%esp),%dl
		mov    (%esp),%al
		call   _0295e8_func
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0296ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		mov    %esp,%edx
		call   _029648_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000008(%esp),%bl
		mov    0x000004(%esp),%dl
		mov    (%esp),%al
		call   _0295a0_func
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0296e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    $0x000085,%ebx
		mov    _0dd89e_data,%dx
		mov    _0dd89a_data,%eax
		call   _028ef4_func
		mov    _0dd89e_data,%cx
		mov    _0dd89a_data,%ebx
		xor    %eax,%eax
		mov    _0dd84c_data,%edx
		mov    (%esp),%al
		call   _028e90_func
		mov    %ax,_0dd8cc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02972c_func:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		call   _0296e0_func
		mov    %ax,_0dd8cc_data
		mov    %edx,%eax
		call   _0296e0_func
		mov    %ax,_0dd8cc_data
		pop    %edx
		ret    



_029750_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    $0x000088,%ebx
		mov    _0dd89e_data,%dx
		mov    _0dd89a_data,%eax
		call   _028ef4_func
		mov    _0dd89e_data,%cx
		mov    _0dd89a_data,%ebx
		xor    %eax,%eax
		mov    _0dd84c_data,%edx
		mov    (%esp),%al
		call   _028e90_func
		mov    %ax,_0dd8cc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02979c_func:
		push   %esi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		mov    %ebx,%esi
		mov    $0x000084,%ebx
		mov    _0dd89e_data,%dx
		mov    _0dd89a_data,%eax
		call   _028ef4_func
		lgs    _0dd89a_data,%ebx
		mov    (%esp),%al
		mov    %al,%gs:0x00000d(%ebx)
		mov    _0dd84c_data,%edx
		mov    %ecx,%gs:0x000012(%ebx)
		xor    %eax,%eax
		mov    %gs,%ecx
		mov    0x000004(%esp),%al
		mov    %esi,%gs:0x00000e(%ebx)
		call   _028e90_func
		mov    %ax,_0dd8cc_data
		add    $0x000008,%esp
		pop    %esi
		ret    



_0297f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000002
		mov    $0x00000c,%ecx
		mov    _0dd840_data,%ebx
		mov    _0dd8aa_data,%dx
		mov    _0dd8a6_data,%eax
		call   _028f28_func
		mov    _0dd87a_data,%gs
		xor    %eax,%eax
		mov    _0dd876_data,%ebx
		mov    (%esp),%al
		mov    _0dd8aa_data,%cx
		movb   $0x000001,%gs:(%ebx)
		mov    _0dd858_data,%edx
		movb   $0x000000,%gs:0x000001(%ebx)
		mov    _0dd8a6_data,%ebx
		call   _028e90_func
		mov    %ax,_0dd8cc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02985c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000002
		mov    $0x00000c,%ecx
		mov    _0dd840_data,%ebx
		mov    _0dd8aa_data,%dx
		mov    _0dd8a6_data,%eax
		call   _028f28_func
		mov    _0dd87a_data,%gs
		xor    %eax,%eax
		mov    _0dd876_data,%ebx
		mov    (%esp),%al
		mov    _0dd8aa_data,%cx
		movb   $0x000001,%gs:(%ebx)
		mov    _0dd858_data,%edx
		movb   $0x000001,%gs:0x000001(%ebx)
		mov    _0dd8a6_data,%ebx
		call   _028e90_func
		mov    %ax,_0dd8cc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029920_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000001
		mov    $0x00000c,%ecx
		mov    _0dd864_data,%ebx
		mov    _0dd8aa_data,%dx
		mov    _0dd8a6_data,%eax
		call   _028f28_func
		lgs    _0dd8a0_data,%eax
		mov    _0dd8aa_data,%cx
		mov    _0dd8a6_data,%ebx
		movb   $0x000005,%gs:(%eax)
		xor    %eax,%eax
		mov    _0dd858_data,%edx
		mov    (%esp),%al
		call   _028e90_func
		mov    %ax,_0dd8cc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02997c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%esi
		mov    %ebx,%ebp
		mov    %ecx,%edi
		push   $0x000007
		mov    $0x000003,%ecx
		mov    _0dd85c_data,%ebx
		mov    _0dd8aa_data,%dx
		mov    _0dd8a6_data,%eax
		call   _028f28_func
		lgs    _0dd894_data,%eax
		movb   $0x00000a,%gs:(%eax)
		movb   $0x000000,%gs:0x000001(%eax)
		mov    _0dd8aa_data,%cx
		movb   $0x000000,%gs:0x000002(%eax)
		mov    _0dd8a6_data,%ebx
		movl   $0x000000,%gs:0x000003(%eax)
		xor    %eax,%eax
		mov    _0dd858_data,%edx
		mov    (%esp),%al
		call   _028e90_func
		mov    %ax,_0dd8cc_data
		lgs    _0dd894_data,%edx
		mov    %gs:0x000001(%edx),%bl
		mov    %bl,(%esi)
		mov    %gs:0x000002(%edx),%bl
		mov    %bl,0x000000(%ebp)
		mov    %gs:0x000003(%edx),%edx
		mov    %edx,(%edi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_029a0c_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		mov    %ebx,%edi
		mov    %ecx,%esi
		push   $0x000007
		mov    $0x000003,%ecx
		mov    _0dd854_data,%ebx
		mov    _0dd8aa_data,%dx
		mov    _0dd8a6_data,%eax
		call   _028f28_func
		lgs    _0dd87c_data,%eax
		movb   $0x00000b,%gs:(%eax)
		mov    (%esp),%dl
		movl   $0x000000,%gs:0x000002(%eax)
		mov    _0dd8aa_data,%cx
		movb   $0x000000,%gs:0x000006(%eax)
		mov    _0dd8a6_data,%ebx
		mov    %dl,%gs:0x000001(%eax)
		xor    %eax,%eax
		mov    _0dd858_data,%edx
		mov    0x000004(%esp),%al
		call   _028e90_func
		mov    %ax,_0dd8cc_data
		lgs    _0dd87c_data,%ebx
		mov    %gs:0x000002(%ebx),%edx
		mov    %edx,(%edi)
		mov    %gs:0x000006(%ebx),%dl
		mov    %dl,(%esi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_029a98_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %edx,%edi
		mov    %ebx,%esi
		mov    %ecx,%ebp
		push   $0x00000b
		mov    $0x000003,%ecx
		mov    _0dd850_data,%ebx
		mov    _0dd8aa_data,%dx
		mov    _0dd8a6_data,%eax
		call   _028f28_func
		lgs    _0dd870_data,%eax
		mov    _0dd8aa_data,%cx
		mov    _0dd8a6_data,%ebx
		movb   $0x00000c,%gs:(%eax)
		xor    %eax,%eax
		mov    _0dd858_data,%edx
		mov    0x000004(%esp),%al
		call   _028e90_func
		mov    %ax,_0dd8cc_data
		mov    _0dd874_data,%gs
		mov    %eax,%ebx
		mov    _0dd870_data,%eax
		mov    %gs:0x000002(%eax),%dl
		xor    %ecx,%ecx
		and    $0x0000f0,%dl
		mov    %dl,%cl
		sar    $0x000004,%ecx
		lea    0x000000(,%ecx,4),%edx
		add    %ecx,%edx
		mov    %gs:0x000002(%eax),%cl
		and    $0x00000f,%cl
		mov    %cl,(%esp)
		xor    %ecx,%ecx
		add    %edx,%edx
		mov    (%esp),%cl
		add    %ecx,%edx
		mov    %dl,(%edi)
		mov    %gs:0x000004(%eax),%dl
		mov    %dl,(%esi)
		mov    %gs:0x000005(%eax),%dl
		mov    %dl,0x000000(%ebp)
		mov    0x000018(%esp),%edx
		mov    %gs:0x000006(%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_029b50_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%esi
		push   $0x000005
		mov    $0x000003,%ecx
		mov    _0dd864_data,%ebx
		mov    _0dd8aa_data,%dx
		mov    _0dd8a6_data,%eax
		call   _028f28_func
		lgs    _0dd8a0_data,%eax
		mov    _0dd8aa_data,%cx
		movb   $0x000006,%gs:(%eax)
		mov    _0dd8a6_data,%ebx
		movl   $0x000000,%gs:0x000001(%eax)
		xor    %eax,%eax
		mov    _0dd858_data,%edx
		mov    (%esp),%al
		call   _028e90_func
		mov    %ax,_0dd8cc_data
		lgs    _0dd8a0_data,%edx
		mov    %gs:0x000001(%edx),%edx
		mov    %edx,(%esi)
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_029d34_func:
		push   %edx
		sub    $0x000004,%esp
		mov    %esp,%edx
		and    $0x0000ff,%eax
		call   _029b50_func
		mov    %ax,_0dd8cc_data
		mov    (%esp),%eax
		add    $0x000004,%esp
		pop    %edx
		ret    



_029d54_func:
		and    $0x0000ff,%eax
		call   _029d34_func
		test   $0x000001,%al
		sete   %al
		and    $0x0000ff,%eax
		ret    



_029d6c_func:
		and    $0x0000ff,%eax
		call   _029d34_func
		test   $0x000002,%al
		sete   %al
		and    $0x0000ff,%eax
		ret    



_029d84_func:
		and    $0x0000ff,%eax
		call   _029d34_func
		test   $0x000010,%al
		setne  %al
		and    $0x0000ff,%eax
		ret    



_029db4_func:
		and    $0x0000ff,%eax
		testb  $0x000040,_0dde8b_data(%eax)
		sete   %al
		and    $0x0000ff,%eax
		ret    



_029dcc_func:
		and    $0x0000ff,%eax
		call   _029d34_func
		test   $0x000008,%ah
		jne    _029dec_jump
		cmpw   $0x000100,_0dd8cc_data
		jne    _029dec_jump
		mov    $0x000001,%eax
		ret    

	_029dec_jump:
		xor    %eax,%eax
		ret    



_029df0_func:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		call   _029d6c_func
		cmp    $0x000001,%al
		jne    _029e0f_jump
		mov    %edx,%eax
		call   _0297f4_func
		mov    %ax,_0dd8cc_data
		pop    %edx
		ret    

	_029e0f_jump:
		movw   $0x000100,_0dd8cc_data
		pop    %edx
		ret    

	_029e1c_jump:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		call   _029d6c_func
		test   %al,%al
		jne    _029e46_jump
		mov    %edx,%eax
		call   _029d54_func
		cmp    $0x000001,%al
		jne    _029e46_jump
		mov    %edx,%eax
		call   _02985c_func
		mov    %ax,_0dd8cc_data
		pop    %edx
		ret    

	_029e46_jump:
		movw   $0x000100,_0dd8cc_data
		pop    %edx
		ret    

	_029ee8_jump:
		xor    %al,%al

	_029eea_jump:
		add    $0x00001c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029ef4_func:
		and    $0x0000ff,%eax
		mov    _0ddef0_data(%eax),%al
		ret    



_029f00_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		xor    %eax,%eax
		mov    (%esp),%al
		call   _02a188_func
		cmp    $0x000001,%al
		jne    _029ff0_jump
		cmp    _0dd9d1_data,%dl
		jb     _029fd7_jump
		cmp    _0dd9d2_data,%dl
		ja     _029fd7_jump
		movzbl %dl,%esi
		mov    %esi,%eax
		call   _029db4_func
		cmp    $0x000001,%al
		jne    _029fdc_jump
		xor    %eax,%eax
		mov    %bl,%al
		movzbl %cl,%edi
		shl    $0x000008,%eax
		add    %eax,%edi
		lea    0x000000(,%esi,4),%eax
		shl    $0x000008,%edi
		mov    _0dd9d7_data(%eax),%esi
		mov    _0dd9d2_data,%bh
		add    %esi,%edi
		cmp    %bh,%dl
		jae    _029f74_jump
		mov    _0dd9db_data(%eax),%eax
		jmp    _029f79_jump

	_029f74_jump:
		mov    _0dd9d3_data,%eax

	_029f79_jump:
		cmp    %eax,%edi
		jge    _029fe7_jump
		movzbl (%esp),%esi
		mov    %esi,%eax
		call   _0296e0_func
		mov    %ax,_0dd8cc_data
		and    $0x0000ff,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		sub    %ebx,%eax
		xor    %ebx,%ebx
		shl    $0x000002,%eax
		mov    %cl,%bl
		add    %eax,%ebx
		xor    %ecx,%ecx
		lea    0x000000(,%ebx,4),%eax
		mov    %dl,%cl
		add    %ebx,%eax
		mov    $0x000001,%edx
		mov    %eax,%ebx
		shl    $0x000004,%eax
		mov    _0ddcfb_data(,%ecx,4),%ecx
		sub    %ebx,%eax
		mov    %edi,%ebx
		sub    %eax,%ecx
		mov    %esi,%eax
		call   _02979c_func
		mov    %ax,_0dd8cc_data
		jmp    _029ff0_jump

	_029fd7_jump:
		cmp    $0x000064,%dl
		jne    _029fe7_jump

	_029fdc_jump:
		movw   $0x000007,_0dd8cc_data
		jmp    _029ff0_jump

	_029fe7_jump:
		movw   $0x000008,_0dd8cc_data

	_029ff0_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    



_029ff8_func:
		and    $0x0000ff,%eax
		call   _0296e0_func
		mov    %ax,_0dd8cc_data
		ret    



_02a00c_func:
		and    $0x0000ff,%eax
		call   _02972c_func
		mov    %ax,_0dd8cc_data
		ret    



_02a020_func:
		and    $0x0000ff,%eax
		call   _029750_func
		mov    %ax,_0dd8cc_data
		ret    



_02a0a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%ch
		call   _028e30_func
		mov    $0x000084,%ebx
		mov    _0dd89e_data,%dx
		mov    %al,%cl
		mov    _0dd89a_data,%eax
		call   _028ef4_func
		mov    _0dd89e_data,%gs
		xor    %eax,%eax
		mov    _0dd89a_data,%ebx
		mov    %ch,%al
		movb   $0x000001,%gs:0x00000d(%ebx)
		mov    _0dd9d7_data(,%eax,4),%edx
		mov    %edx,%gs:0x00000e(%ebx)
		mov    _0ddb6b_data(,%eax,4),%eax
		mov    %eax,%gs:0x000012(%ebx)
		xor    %eax,%eax
		mov    _0dd84c_data,%edx
		mov    %cl,%al
		mov    %gs,%ecx
		call   _028e90_func
		mov    %ax,_0dd8cc_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a110_func:
		call   _02a118_func
		lea    0x000000(%eax),%eax



_02a118_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _028e30_func
		mov    $0x000085,%ebx
		mov    _0dd89e_data,%dx
		mov    %al,%cl
		mov    _0dd89a_data,%eax
		call   _028ef4_func
		movzbl %cl,%esi
		mov    _0dd89e_data,%ax
		mov    _0dd89a_data,%ebx
		mov    _0dd84c_data,%edx
		mov    %eax,%ecx
		mov    %esi,%eax
		call   _028e90_func
		mov    %ax,_0dd8cc_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a164_func:
		push   %edx
		mov    %al,%dl
		call   _02a118_func
		xor    %eax,%eax
		mov    %dl,%al
		call   _02a0a8_func
		pop    %edx
		ret    



_02a188_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00001c,%esp
		mov    %al,0x00000c(%esp)
		mov    $0x000001,%al
		cmpb   $0x000000,_0ddf0f_data
		jne    _029eea_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		mov    $0x0000ff,%dl
		call   _029920_func
		mov    %ax,_0dd8cc_data

	_02a1b5_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		call   _029dcc_func
		test   %al,%al
		jne    _02a1c8_jump
		dec    %dl
		jne    _02a1b5_jump

	_02a1c8_jump:
		movzbl 0x00000c(%esp),%esi
		mov    %esi,%eax
		call   _029dcc_func
		cmp    $0x000001,%al
		jne    _029ee8_jump
		mov    $0x00051f,%ebx
		mov    $_0dd9d0_data,%eax
		xor    %edx,%edx
		lea    0x000004(%esp),%ecx
		call   _07c0b0_func
		lea    0x000014(%esp),%ebx
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _02997c_func
		mov    %ax,_0dd8cc_data
		mov    0x000018(%esp),%al
		mov    %al,_0dd9d1_data
		mov    0x000014(%esp),%al
		mov    %al,_0dd9d2_data
		mov    0x000004(%esp),%eax
		mov    %eax,_0dd9d3_data
		mov    0x000014(%esp),%al
		mov    0x000018(%esp),%dl
		inc    %al
		mov    %dl,0x000010(%esp)
		sub    %dl,%al
		mov    0x000014(%esp),%dh
		mov    %al,_0dd9d0_data
		cmp    %dh,%dl
		ja     _02a282_jump

	_02a23e_jump:
		movzbl 0x000010(%esp),%esi
		lea    0x000008(%esp),%ecx
		xor    %eax,%eax
		mov    %esp,%ebx
		mov    0x00000c(%esp),%al
		mov    %esi,%edx
		call   _029a0c_func
		mov    %ax,_0dd8cc_data
		mov    (%esp),%eax
		mov    0x000010(%esp),%bl
		mov    %eax,_0dd9d7_data(,%esi,4)
		mov    0x000008(%esp),%al
		inc    %bl
		mov    %al,_0dde8b_data(%esi)
		mov    %bl,0x000010(%esp)
		cmp    _0dd9d2_data,%bl
		jbe    _02a23e_jump

	_02a282_jump:
		mov    _0dd9d3_data,%eax
		mov    %eax,_0ddb67_data
		xor    %eax,%eax
		mov    _0dd9d2_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0dd9d3_data,%eax
		mov    %eax,_0dd9db_data(%edx)
		mov    _0dd9d1_data,%bl
		cmp    _0dd9d2_data,%bl
		ja     _02a307_jump

	_02a2b3_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    _0dd9db_data(,%edx,4),%eax
		call   _0296ac_func
		mov    %eax,%ecx
		mov    _0dd9d7_data(,%edx,4),%eax
		call   _0296ac_func
		sub    %eax,%ecx
		mov    _0dd9db_data(,%edx,4),%eax
		mov    %ecx,_0ddb6b_data(,%edx,4)
		call   _0296ac_func
		mov    %eax,%ecx
		mov    _0dd9d7_data(,%edx,4),%eax
		call   _0296ac_func
		sub    %eax,%ecx
		mov    %ecx,_0ddcfb_data(,%edx,4)
		inc    %bl
		cmp    _0dd9d2_data,%bl
		jbe    _02a2b3_jump

	_02a307_jump:
		xor    %eax,%eax
		mov    _0dd9d2_data,%al
		xor    %edx,%edx
		mov    %edx,_0dd9db_data(,%eax,4)
		mov    _0dd9d3_data,%eax
		call   _0296ac_func
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0dd9d1_data,%al
		mov    _0dd9d7_data(,%eax,4),%eax
		call   _0296ac_func
		sub    %eax,%edx
		mov    %edx,%eax
		call   _029678_func
		mov    %eax,_0ddb67_data
		mov    $0x000001,%al
		mov    _0dd8cc_data,%dx
		mov    %al,_0ddf0f_data
		cmp    $0x000100,%dx
		sete   %al
		add    $0x00001c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a370_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a3a0_jump
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _02a3a0_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a3a0_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000002,%al
		jb     _02a3bf_jump
		jbe    _02a3d3_jump
		cmp    $0x000014,%al
		jne    _02a3d3_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		jmp    _02a3d3_jump

	_02a3bf_jump:
		test   %al,%al
		jne    _02a3cc_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02a3d3_jump

	_02a3cc_jump:
		orb    $0x000008,0x000081(%ecx)

	_02a3d3_jump:
		xor    %eax,%eax
		mov    0x000028(%ecx),%dx
		mov    0x000068(%ecx),%al
		mov    _0cdbcc_data,%bx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    _0cdc0c_data,%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0cdbe4_data,%ax
		add    %eax,%eax
		sub    %eax,%edx
		movswl %dx,%ebx
		mov    %edx,%eax
		cmp    $0xfffffff6,%ebx
		jge    _02a449_jump
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		jne    _02a438_jump
		cmpb   $0x000006,0x00006c(%ecx)
		je     _02a438_jump
		mov    %dh,%al
		mov    $0x000001,%ebx
		or     $0x000008,%al
		mov    $0x000004,%edx
		mov    %al,0x000081(%ecx)
		mov    %ecx,%eax
		call   _05f030_func
		jmp    _02a49c_jump

	_02a438_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _02a49c_jump
		movw   $0x000003,0x000040(%ecx)
		jmp    _02a49c_jump

	_02a449_jump:
		cmp    $0x00000a,%dx
		jle    _02a48f_jump
		mov    0x000081(%ecx),%bh
		test   $0x000008,%bh
		je     _02a47e_jump
		cmpb   $0x000006,0x00006c(%ecx)
		je     _02a47e_jump
		mov    %bh,%dl
		mov    %ecx,%eax
		and    $0x0000f7,%dl
		mov    $0x000001,%ebx
		mov    %dl,0x000081(%ecx)
		mov    $0x000003,%edx
		call   _05f030_func
		jmp    _02a49c_jump

	_02a47e_jump:
		testb  $0x000008,0x000081(%ecx)
		jne    _02a49c_jump
		movw   $0x00fffd,0x000040(%ecx)
		jmp    _02a49c_jump

	_02a48f_jump:
		jg     _02a49c_jump
		cmp    $0xfffffff6,%ebx
		jl     _02a49c_jump
		movw   $0x000000,0x000040(%ecx)

	_02a49c_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _02a4ac_jump
		mov    $0x000010,%ebx
		jmp    _02a4b1_jump

	_02a4ac_jump:
		mov    $0xfffffff0,%ebx

	_02a4b1_jump:
		xor    %edx,%edx
		mov    0x000068(%ecx),%dl
		mov    %ecx,%eax
		add    %ebx,%edx
		xor    %ebx,%ebx
		movswl %dx,%edx
		mov    0x000069(%ecx),%bl
		call   _01d624_func
		test   %ax,%ax
		je     _02a4d2_jump
		movw   $0x000000,0x000040(%ecx)

	_02a4d2_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _02a513_jump
		cmpb   $0x000003,0x00006c(%ecx)
		jne    _02a513_jump
		mov    0x00003c(%ecx),%edx
		mov    0x00002c(%ecx),%ebx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jl     _02a539_jump
		mov    $0x000001,%ebx
		mov    0x00003c(%ecx),%edx
		movw   $0x000000,0x000042(%ecx)
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000002,%edx
		movw   $0x000000,0x000052(%ecx)
		call   _05f030_func
		jmp    _02a539_jump

	_02a513_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _02a539_jump
		cmpb   $0x000006,0x00006c(%ecx)
		jne    _02a539_jump
		cmpb   $0x00000f,0x00006b(%ecx)
		jbe    _02a539_jump
		cmpw   $0x000001,0x000052(%ecx)
		jne    _02a539_jump
		mov    %ecx,%eax
		call   _02a96c_func
		movw   $0x000002,0x000052(%ecx)

	_02a539_jump:
		cmpw   $0x000000,0x000052(%ecx)
		je     _02a557_jump
		mov    0x00007f(%ecx),%ah
		inc    %ah
		mov    %ah,0x00007f(%ecx)
		cmp    $0x000050,%ah
		jbe    _02a557_jump
		movb   $0x000000,0x00007f(%ecx)
		movw   $0x000000,0x000052(%ecx)

	_02a557_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a55c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a58a_jump
		cmpb   $0x000002,0x00006c(%edx)
		jne    _02a58a_jump
		movw   $0x00fff8,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%bh
		mov    %bh,0x000081(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_02a58a_jump:
		mov    0x000070(%edx),%al
		cmp    $0x000002,%al
		jb     _02a5a9_jump
		jbe    _02a5bd_jump
		cmp    $0x000014,%al
		jne    _02a5bd_jump
		mov    0x000056(%edx),%ax
		mov    %ax,0x000040(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x000042(%edx)
		jmp    _02a5bd_jump

	_02a5a9_jump:
		test   %al,%al
		jne    _02a5b6_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _02a5bd_jump

	_02a5b6_jump:
		orb    $0x000008,0x000081(%edx)

	_02a5bd_jump:
		cmpb   $0x000000,0x00006d(%edx)
		jne    _02a5f2_jump
		cmpb   $0x000008,0x00006c(%edx)
		jne    _02a5f2_jump
		cmpw   $0x000000,0x000052(%edx)
		jne    _02a5e6_jump
		cmpb   $0x000006,0x00006b(%edx)
		jb     _02a5e6_jump
		mov    %edx,%eax
		call   _02a96c_func
		movw   $0x000001,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_02a5e6_jump:
		cmpb   $0x000001,0x00006b(%edx)
		jne    _02a5f2_jump
		movw   $0x000000,0x000052(%edx)

	_02a5f2_jump:
		pop    %edx
		pop    %ebx
		ret    



_02a5f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a62b_jump
		cmpb   $0x000002,0x00006c(%edx)
		jne    _02a62b_jump
		movw   $0x00fff8,0x000042(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%edx)
		jmp    _02a743_jump

	_02a62b_jump:
		mov    0x000070(%edx),%al
		cmp    $0x000002,%al
		jb     _02a64a_jump
		jbe    _02a665_jump
		cmp    $0x000014,%al
		jne    _02a665_jump
		mov    0x000056(%edx),%ax
		mov    %ax,0x000040(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x000042(%edx)
		jmp    _02a665_jump

	_02a64a_jump:
		test   %al,%al
		jne    _02a657_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _02a65e_jump

	_02a657_jump:
		orb    $0x000008,0x000081(%edx)

	_02a65e_jump:
		mov    %edx,%eax
		call   _053ce4_func

	_02a665_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		mov    _0cdbcc_data,%cx
		add    %ebx,%eax
		xor    %ebx,%ebx
		sub    %ecx,%eax
		mov    _0cdc0c_data,%bl
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdbd0_data,%si
		mov    _0cdc0d_data,%al
		mov    0x00002c(%edx),%di
		mov    %eax,%ecx
		xor    %eax,%eax
		add    %esi,%ecx
		mov    0x000069(%edx),%al
		sub    %edi,%ecx
		sub    %eax,%ecx
		mov    %ecx,%eax
		mov    0x000052(%edx),%cx
		test   %cx,%cx
		jne    _02a72b_jump
		cmp    $0x000012,%ax
		jl     _02a6fb_jump
		cmp    $0x000028,%ax
		jge    _02a6c7_jump
		movw   $0x000001,0x000042(%edx)
		jmp    _02a6ff_jump

	_02a6c7_jump:
		cmp    $0x000041,%ax
		jge    _02a6d5_jump
		movw   $0x000002,0x000042(%edx)
		jmp    _02a6ff_jump

	_02a6d5_jump:
		cmp    $0x000064,%ax
		jge    _02a6e3_jump
		movw   $0x000003,0x000042(%edx)
		jmp    _02a6ff_jump

	_02a6e3_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _02a6ec_jump
		neg    %eax

	_02a6ec_jump:
		cmp    $0x0000a5,%eax
		jge    _02a6fb_jump
		movw   $0x000004,0x000042(%edx)
		jmp    _02a6ff_jump

	_02a6fb_jump:
		mov    %cx,0x000042(%edx)

	_02a6ff_jump:
		testb  $0x000008,0x000081(%edx)
		je     _02a70e_jump
		cmp    $0x00005a,%bx
		jg     _02a71f_jump

	_02a70e_jump:
		testb  $0x000008,0x000081(%edx)
		jne    _02a743_jump
		movswl %bx,%eax
		cmp    $0xffffffa6,%eax
		jge    _02a743_jump

	_02a71f_jump:
		movw   $0x000001,0x000052(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a72b_jump:
		cmp    $0x000078,%ax
		jle    _02a73d_jump
		movw   $0x00fffe,0x000042(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a73d_jump:
		movw   $0x00ffff,0x000042(%edx)

	_02a743_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a74c_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a7b1_jump
		cmpb   $0x000002,0x00006c(%eax)
		jne    _02a7b1_jump
		cmpw   $0x000000,0x000052(%eax)
		jne    _02a7b1_jump
		cmpb   $0x000010,0x00006b(%eax)
		jb     _02a7b1_jump
		mov    $0x000001,%ebx
		mov    _0cdc11_data,%dh
		movw   $0x000001,0x000052(%eax)
		mov    %bx,_0ceda6_data
		test   %dh,%dh
		je     _02a789_jump
		cmp    $0x000001,%dh
		jne    _02a794_jump

	_02a789_jump:
		movb   $0x000001,_0cdc21_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a794_jump:
		cmp    $0x000004,%dh
		je     _02a79e_jump
		cmp    $0x000005,%dh
		jne    _02a7e2_jump

	_02a79e_jump:
		mov    $0x000002,%ch
		mov    $0x000001,%al
		mov    %ch,_0cdc11_data
		mov    %al,_0cdc10_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a7b1_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a7c7_jump
		cmpb   $0x00000b,0x00006c(%eax)
		jne    _02a7c7_jump
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a7c7_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a7e2_jump
		cmpb   $0x000016,0x00006c(%eax)
		jne    _02a7e2_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		call   _05f030_func

	_02a7e2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a7e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _02a90c_jump

	_02a806_jump:
		cmpw   $0x00003e,0x000060(%ecx)
		jne    _02a8fc_jump
		mov    0x000024(%ecx),%ebx
		test   %ebx,%ebx
		jne    _02a8fc_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d374_func
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		or     %al,%dl
		xor    %eax,%eax
		mov    %dl,0x000081(%ecx)
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		movw   $0x00fffe,0x000042(%ecx)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		movsbw (%eax,%edx,8),%ax
		testb  $0x000008,0x000081(%ecx)
		je     _02a874_jump
		cwtl   
		jmp    _02a877_jump

	_02a874_jump:
		cwtl   
		neg    %eax

	_02a877_jump:
		mov    %ax,0x000040(%ecx)
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%esi
		mov    0x000028(%ecx),%ax
		sub    $0x000019,%esi
		mov    %ax,0x00003c(%ecx)
		mov    %esi,0x00002c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %ecx,%eax
		movb   $0x00000c,0x000072(%ecx)
		call   _05f030_func
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000081(%ecx),%bl
		and    $0x0000bb,%bl
		mov    %bl,0x000081(%ecx)
		mov    %bl,%bh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bh
		mov    %ecx,%eax
		mov    %bh,0x000081(%ecx)
		call   _01f304_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a8fc_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _02a806_jump

	_02a90c_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a914_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a92b_jump
		cmpb   $0x000002,0x00006c(%eax)
		jne    _02a92b_jump
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_02a92b_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a94c_jump
		cmpb   $0x00000b,0x00006c(%eax)
		jne    _02a94c_jump
		cmpw   $0x000000,0x000052(%eax)
		jne    _02a94c_jump
		movw   $0x000001,0x000052(%eax)
		call   _02a7e8_func
		pop    %edx
		pop    %ebx
		ret    

	_02a94c_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a967_jump
		cmpb   $0x000016,0x00006c(%eax)
		jne    _02a967_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		call   _05f030_func

	_02a967_jump:
		pop    %edx
		pop    %ebx
		ret    



_02a96c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0cc300_data,%esi
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _02ab22_jump

	_02a98e_jump:
		cmpw   $0x000077,0x000060(%esi)
		jne    _02ab12_jump
		mov    0x000024(%esi),%ebx
		test   %ebx,%ebx
		jne    _02ab12_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		cmpw   $0x000074,0x000060(%edi)
		jne    _02aa0b_jump
		mov    _0cdbe4_data,%ax
		movw   $0x000001,0x000042(%esi)
		cmp    $0x000002,%ax
		jge    _02a9f2_jump
		movw   $0x000000,0x000040(%esi)
		jmp    _02aa3f_jump

	_02a9f2_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _02aa03_jump
		movw   $0x00ffff,0x000040(%esi)
		jmp    _02aa3f_jump

	_02aa03_jump:
		movw   $0x000001,0x000040(%esi)
		jmp    _02aa3f_jump

	_02aa0b_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		movw   $0x000000,0x000042(%esi)
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%al
		mov    0x000081(%esi),%dh
		movsbw (%ebx,%eax,8),%ax
		test   $0x000008,%dh
		je     _02aa38_jump
		cwtl   
		jmp    _02aa3b_jump

	_02aa38_jump:
		cwtl   
		neg    %eax

	_02aa3b_jump:
		mov    %ax,0x000040(%esi)

	_02aa3f_jump:
		cmpw   $0x000074,0x000060(%edi)
		jne    _02aa66_jump
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %edi,%eax
		call   _01d710_func
		jmp    _02aaa4_jump

	_02aa66_jump:
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000009,%edx
		mov    %edi,%eax
		call   _01d710_func
		mov    $0x000010,%ebx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%eax
		mov    %bx,(%esp)
		add    $0x000020,%ecx
		add    %ebx,%eax
		mov    %cx,0x000008(%esp)
		mov    %ax,0x000004(%esp)

	_02aaa4_jump:
		mov    0x000002(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000068(%esi),%al
		sub    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x000006(%esp),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000074(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		sub    %ebx,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x000081(%esi),%bh
		mov    0x00002c(%esi),%ax
		or     $0x000004,%bh
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f304_func
		mov    %edi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01db8c_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ab12_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _02a98e_jump

	_02ab22_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ab2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000076(%eax),%al
		cmp    0x000077(%ecx),%al
		je     _02ab6a_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _02ab86_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _02ab86_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%ecx),%bh
		movw   $0x000000,0x000040(%ecx)
		or     $0x000010,%bh
		mov    %bh,0x000081(%ecx)
		jmp    _02ab86_jump

	_02ab6a_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d36c_func
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d364_func
		orb    $0x000010,0x000081(%ecx)

	_02ab86_jump:
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000042(%ecx)
		test   $0x000008,%al
		jne    _02aba2_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _02abb0_jump

	_02aba2_jump:
		test   $0x000008,%al
		je     _02abb7_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx

	_02abb0_jump:
		mov    %ecx,%eax
		call   _05f030_func

	_02abb7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02abbc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		mov    _0cdc30_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _02abdc_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02abe5_jump

	_02abdc_jump:
		jge    _02abe5_jump
		orb    $0x000008,0x000081(%ecx)

	_02abe5_jump:
		cmpb   $0x000000,0x000076(%ecx)
		je     _02ac08_jump
		mov    0x00002c(%ecx),%edx
		mov    $0x000001,%ebx
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000004,%edx
		call   _05f030_func
		pop    %ecx
		pop    %ebx
		ret    

	_02ac08_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%ecx),%bl
		movb   $0x000000,0x000070(%ecx)
		and    $0x0000ef,%bl
		mov    %bl,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_02ac2c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		mov    _0cdc30_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _02ac4c_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02ac55_jump

	_02ac4c_jump:
		jge    _02ac55_jump
		orb    $0x000008,0x000081(%ecx)

	_02ac55_jump:
		cmpb   $0x000000,0x000076(%ecx)
		je     _02ac8c_jump
		testb  $0x000008,0x000081(%ecx)
		je     _02ac78_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _05f030_func
		pop    %ecx
		pop    %ebx
		ret    

	_02ac78_jump:
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _05f030_func
		pop    %ecx
		pop    %ebx
		ret    

	_02ac8c_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		andb   $0x0000ef,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_02aca4_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02acb2_jump
		cmpb   $0x000000,0x00006c(%eax)
		je     _02acbe_jump

	_02acb2_jump:
		cmpb   $0x000001,0x00006d(%eax)
		jne    _02accd_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _02accd_jump

	_02acbe_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		call   _05f030_func

	_02accd_jump:
		pop    %edx
		pop    %ebx
		ret    



_02acd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpw   $0x000000,0x000052(%eax)
		jne    _02acf5_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		call   _05f030_func
		movb   $0x000000,0x00007f(%ecx)
		movw   $0x000001,0x000052(%ecx)

	_02acf5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ad00_func:
		mov    0x00005c(%eax),%ax
		and    $0x00ffff,%eax
		sar    $0x00000b,%eax
		ret    



_02ad10_func:
		mov    0x00005c(%eax),%ax
		and    $0x000007,%ah
		ret    



_02ad18_func:
		push   %ebx
		call   _02ad10_func
		movswl %ax,%ebx
		movswl %dx,%eax
		add    %ebx,%eax
		shl    $0x000003,%eax
		add    $_092a96_data,%eax
		pop    %ebx
		ret    



_02ad38_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %edx,%esi
		mov    0x000060(%eax),%dx
		cmp    $0x000064,%dx
		jb     _02ad56_jump
		jbe    _02ad75_jump
		cmp    $0x0000d9,%dx
		je     _02ad75_jump
		jmp    _02adac_jump

	_02ad56_jump:
		cmp    $0x000014,%dx
		jne    _02adac_jump
		mov    $0x000001,%cl
		xor    %bh,%bh
		mov    $0x0000ff,%al
		mov    %bh,(%esp)
		mov    %cl,0x000001(%esp)
		mov    $0x000002,%ch
		mov    %al,0x000003(%esp)
		mov    %ch,0x000002(%esp)
		jmp    _02adb7_jump

	_02ad75_jump:
		movb   $0x000001,(%esp)
		cmpb   $0x00000b,0x00006c(%eax)
		jne    _02ada5_jump
		cmpb   $0x000002,0x00006d(%eax)
		jne    _02ad8c_jump
		movb   $0x000003,0x000001(%esp)
		jmp    _02ad9e_jump

	_02ad8c_jump:
		cmpb   $0x00000f,0x00006b(%eax)
		jbe    _02ad99_jump
		movb   $0x000002,0x000001(%esp)
		jmp    _02ad9e_jump

	_02ad99_jump:
		movb   $0x0000ff,0x000001(%esp)

	_02ad9e_jump:
		movb   $0x0000ff,0x000002(%esp)
		jmp    _02adb7_jump

	_02ada5_jump:
		movb   $0x0000ff,0x000001(%esp)
		jmp    _02adb7_jump

	_02adac_jump:
		xor    %dh,%dh
		mov    $0x0000ff,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000001(%esp)

	_02adb7_jump:
		xor    %eax,%eax

	_02adb9_jump:
		movswl %ax,%edx
		mov    (%esp,%edx,1),%dl
		inc    %eax
		xor    %dh,%dh
		movswl %ax,%ebx
		cmp    %dx,%si
		sete   %dl
		mov    (%esp,%ebx,1),%cl
		mov    %edx,%edi
		cmp    $0x0000ff,%cl
		je     _02addb_jump
		cmp    $0x000001,%dx
		jne    _02adb9_jump

	_02addb_jump:
		mov    %edi,%eax
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02ae60_func:
		push   %esi
		push   %edi
		mov    0x000014(%esp),%esi
		mov    0x000018(%esp),%edi
		sub    %esi,%eax
		sub    %edi,%edx
		add    %edi,%ecx
		mov    0x00000c(%esp),%edi
		add    %esi,%ebx
		cmp    %di,%ax
		jg     _02aeb2_jump
		cmp    0x000010(%esp),%dx
		jg     _02aeb2_jump
		movswl %ax,%esi
		movswl %bx,%eax
		add    %eax,%esi
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %esi,%eax
		jg     _02aeb2_jump
		movswl %dx,%eax
		movswl %cx,%edx
		add    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _02aeb2_jump
		mov    $0x000001,%eax
		pop    %edi
		pop    %esi
		ret    $0x000010

	_02aeb2_jump:
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		ret    $0x000010



_02aebc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %ecx,(%esp)
		mov    0x000060(%eax),%ax
		cmp    $0x00004f,%ax
		jb     _02afdf_jump
		jbe    _02b148_jump
		cmp    $0x000086,%ax
		jb     _02af76_jump
		jbe    _02b193_jump
		cmp    $0x0000a7,%ax
		jb     _02af35_jump
		jbe    _02b193_jump
		cmp    $0x0000be,%ax
		jb     _02af26_jump
		jbe    _02b853_jump
		cmp    $0x0000c3,%ax
		jb     _02af5a_jump
		jbe    _02b86c_jump
		cmp    $0x0000cc,%ax
		je     _02b131_jump
		jmp    _02af5a_jump

	_02af26_jump:
		cmp    $0x0000ac,%ax
		je     _02b4b7_jump
		jmp    _02af5a_jump

	_02af35_jump:
		cmp    $0x000092,%ax
		jb     _02af50_jump
		jbe    _02b1ff_jump
		cmp    $0x0000a4,%ax
		je     _02b9d9_jump
		jmp    _02af5a_jump

	_02af50_jump:
		cmp    $0x000087,%ax
		je     _02b250_jump

	_02af5a_jump:
		mov    0x000028(%esp),%edx
		mov    (%esp),%ecx
		mov    %edi,%ebx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01d294_func

	_02af6d_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02af76_jump:
		cmp    $0x000077,%ax
		jb     _02afb2_jump
		jbe    _02b7c9_jump
		cmp    $0x00007a,%ax
		jb     _02afa6_jump
		jbe    _02b40d_jump
		cmp    $0x000081,%ax
		jb     _02af5a_jump
		jbe    _02b90d_jump
		cmp    $0x000084,%ax
		je     _02b883_jump
		jmp    _02af5a_jump

	_02afa6_jump:
		cmp    $0x000079,%ax
		je     _02b250_jump
		jmp    _02af5a_jump

	_02afb2_jump:
		cmp    $0x000061,%ax
		jb     _02afd0_jump
		jbe    _02b2fa_jump
		cmp    $0x000069,%ax
		jb     _02af5a_jump
		cmp    $0x00006a,%ax
		jbe    _02b3c6_jump
		jmp    _02af5a_jump

	_02afd0_jump:
		cmp    $0x000053,%ax
		je     _02b7f8_jump
		jmp    _02af5a_jump

	_02afdf_jump:
		cmp    $0x000039,%ax
		jb     _02b04a_jump
		jbe    _02b0b4_jump
		cmp    $0x00003e,%ax
		jb     _02b02b_jump
		jbe    _02b693_jump
		cmp    $0x000046,%ax
		jb     _02b01c_jump
		jbe    _02b774_jump
		cmp    $0x000047,%ax
		jbe    _02b2a5_jump
		cmp    $0x000049,%ax
		je     _02b1e8_jump
		jmp    _02af5a_jump

	_02b01c_jump:
		cmp    $0x000042,%ax
		je     _02b67a_jump
		jmp    _02af5a_jump

	_02b02b_jump:
		cmp    $0x00003b,%ax
		jb     _02b462_jump
		jbe    _02b583_jump
		cmp    $0x00003c,%ax
		je     _02b5cd_jump
		jmp    _02af5a_jump

	_02b04a_jump:
		cmp    $0x000023,%ax
		jb     _02b08a_jump
		jbe    _02b4b7_jump
		cmp    $0x00002b,%ax
		jb     _02b07b_jump
		jbe    _02b4b7_jump
		cmp    $0x00002c,%ax
		jbe    _02b2a5_jump
		cmp    $0x000038,%ax
		je     _02b4b7_jump
		jmp    _02af5a_jump

	_02b07b_jump:
		cmp    $0x000028,%ax
		je     _02b40d_jump
		jmp    _02af5a_jump

	_02b08a_jump:
		cmp    $0x000005,%ax
		jb     _02b0a5_jump
		jbe    _02b5a8_jump
		cmp    $0x000008,%ax
		je     _02b193_jump
		jmp    _02af5a_jump

	_02b0a5_jump:
		cmp    $0x000002,%ax
		je     _02b193_jump
		jmp    _02af5a_jump

	_02b0b4_jump:
		mov    0x000028(%esp),%ecx
		push   %ecx
		mov    0x000004(%esp),%eax
		push   %eax
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %esi,%eax
		mov    $0x000001,%edx
		call   _01d710_func
		mov    (%esp),%eax
		mov    0x000028(%esp),%edx
		mov    (%eax),%ax
		cmp    (%edx),%ax
		jle    _02b103_jump
		addw   $0x000004,0x000000(%ebp)
		mov    (%esp),%eax
		subw   $0x000008,(%eax)
		mov    (%edi),%bx
		add    $0x000008,%ebx
		mov    0x000028(%esp),%eax
		mov    %bx,(%edi)
		subw   $0x00000c,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b103_jump:
		mov    (%esp),%eax
		movswl (%eax),%eax
		sar    %eax
		movswl 0x000000(%ebp),%esi
		sub    $0x000003,%eax
		add    %eax,%esi
		mov    (%esp),%eax
		mov    %si,0x000000(%ebp)
		movw   $0x000006,(%eax)
		addw   $0x000010,(%edi)
		subw   $0x000020,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b131_jump:
		mov    0x000028(%esp),%edx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01d858_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b148_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000014(%esp),%eax
		add    $0x00000d,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000d,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000004,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000004,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b193_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000014(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000014,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000014,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b1e8_jump:
		mov    0x000028(%esp),%ebx
		push   %ebx
		mov    %esi,%eax
		mov    %edi,%ebx
		call   _01d294_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b1ff_jump:
		mov    0x000028(%esp),%edx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01d294_func
		mov    (%esp),%eax
		movswl (%eax),%eax
		sar    %eax
		movswl 0x000000(%ebp),%esi
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    0x000028(%esp),%eax
		mov    %si,0x000000(%ebp)
		movswl (%eax),%eax
		sar    %eax
		movswl (%edi),%esi
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    (%esp),%eax
		mov    %si,(%edi)
		movw   $0x000004,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000004,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b250_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000014(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x00001e,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000008,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b2a5_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000014(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		sub    $0x000004,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000004,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		add    $0x000003,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b2fa_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		xor    %ah,%ah
		mov    0x000081(%esi),%dh
		mov    %ax,0x000004(%esp)
		and    $0x0000f7,%dh
		lea    0x000008(%esp),%eax
		mov    %dh,0x000081(%esi)
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000004(%esp),%al
		mov    0x000081(%esi),%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,0x000081(%esi)
		mov    %bl,%bh
		or     %al,%bh
		mov    0x000050(%esi),%ax
		mov    %bh,0x000081(%esi)
		cmp    $0x000002,%ax
		je     _02b393_jump
		mov    0x000014(%esp),%eax
		add    $0x000003,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000014,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000032,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000028,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b393_jump:
		mov    0x000014(%esp),%eax
		add    $0x000014,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000023,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000001,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000001,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b3c6_jump:
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x000014(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000010,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000020,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b40d_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000014(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000008,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000006,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b462_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000014(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000010,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000010,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b4b7_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sub    $0x000008,%eax
		mov    %ax,0x000000(%ebp)
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		sub    $0x00003c,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000010,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000032,(%eax)
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02af6d_jump
		mov    0x00006c(%esi),%bh
		cmp    $0x000005,%bh
		jne    _02b528_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		mov    (%edi),%dx
		add    %eax,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,(%edi)
		mov    0x000028(%esp),%edx
		mov    0x00006b(%esi),%al
		mov    (%edx),%bx
		add    %eax,%eax
		sub    %eax,%ebx
		mov    %bx,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b528_jump:
		cmp    $0x000006,%bh
		jne    _02af6d_jump
		mov    (%eax),%cx
		sar    %cx
		mov    %cx,(%eax)
		mov    (%edi),%dx
		add    %ecx,%edx
		xor    %ebx,%ebx
		mov    %dx,(%edi)
		mov    $0x00000f,%eax
		mov    0x00006b(%esi),%bl
		cmp    %ebx,%eax
		jle    _02b552_jump
		mov    %ebx,%eax

	_02b552_jump:
		mov    (%edi),%bx
		add    %eax,%eax
		sub    %eax,%ebx
		mov    %bx,(%edi)
		xor    %ebx,%ebx
		mov    $0x00000f,%eax
		mov    0x00006b(%esi),%bl
		mov    0x000028(%esp),%edx
		cmp    %ebx,%eax
		jle    _02b570_jump
		mov    %ebx,%eax

	_02b570_jump:
		mov    (%edx),%cx
		add    %eax,%eax
		add    %eax,%ecx
		mov    %cx,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b583_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x000000,(%ecx)
		movw   $0x000000,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b5a8_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x000032,(%ecx)
		movw   $0x00006e,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b5cd_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02b621_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _02b621_jump
		cmpb   $0x000010,0x00006b(%esi)
		jb     _02b621_jump
		testb  $0x000008,0x000081(%esi)
		je     _02b5ef_jump
		mov    $0x000050,%eax
		jmp    _02b5f4_jump

	_02b5ef_jump:
		mov    $0x000010,%eax

	_02b5f4_jump:
		add    0x000028(%esi),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000044,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b621_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02b647_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _02b647_jump
		testb  $0x000008,0x000081(%esi)
		je     _02b63d_jump
		mov    $0x000050,%eax
		jmp    _02b642_jump

	_02b63d_jump:
		mov    $0x000030,%eax

	_02b642_jump:
		add    0x000028(%esi),%eax
		jmp    _02b650_jump

	_02b647_jump:
		mov    0x000028(%esi),%ax
		add    $0x000040,%eax

	_02b650_jump:
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000026,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000020,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b67a_jump:
		mov    0x000028(%esp),%ecx
		push   %ecx
		mov    %esi,%eax
		mov    0x000004(%esp),%ecx
		call   _01d294_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b693_jump:
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x00006d(%esi),%ch
		cmp    $0x000002,%ch
		jne    _02b6ee_jump
		cmp    0x00006c(%esi),%ch
		jne    _02b6ee_jump
		mov    0x000014(%esp),%eax
		add    $0x000005,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00001c,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000006,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000016,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b6ee_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02b72d_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _02b72d_jump
		mov    0x000014(%esp),%eax
		add    $0x000006,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000012,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000d,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00000b,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b72d_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02af6d_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _02af6d_jump
		mov    0x000014(%esp),%eax
		add    $0x000007,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000013,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00000b,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b774_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000014(%esp),%eax
		add    $0x000018,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000e,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000030,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x00001b,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b7c9_jump:
		mov    0x000028(%esi),%ax
		add    $0x00004c,%eax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		add    $0x000055,%eax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x000008,(%ecx)
		movw   $0x000008,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b7f8_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		cmpb   $0x000000,0x00006c(%esi)
		jne    _02b839_jump
		mov    (%esp),%eax
		movw   $0x000016,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000016,(%eax)
		mov    (%edx),%dx
		add    $0x000044,%edx
		mov    %dx,0x000000(%ebp)
		mov    (%ebx),%bx
		add    $0x000041,%ebx
		mov    %bx,(%edi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b839_jump:
		mov    (%esp),%eax
		movw   $0x000000,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000000,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b853_jump:
		mov    0x000028(%esp),%ecx
		push   %ecx
		mov    %esi,%eax
		mov    0x000004(%esp),%ecx
		call   _062640_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b86c_jump:
		mov    0x000028(%esp),%ebx
		push   %ebx
		mov    %esi,%eax
		mov    %edi,%ebx
		call   _01bd10_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b883_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02b88f_jump
		cmpb   $0x00000f,0x00006c(%esi)
		je     _02b8a7_jump

	_02b88f_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02b89b_jump
		cmpb   $0x00000c,0x00006c(%esi)
		je     _02b8a7_jump

	_02b89b_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02b8da_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _02b8da_jump

	_02b8a7_jump:
		mov    0x000028(%esi),%ax
		add    $0x000036,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000037,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000e,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000015,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b8da_jump:
		mov    0x000028(%esi),%ax
		add    $0x00004a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00002d,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000e,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000015,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b90d_jump:
		cmpb   $0x000001,0x000076(%esi)
		jne    _02b93c_jump
		mov    0x000028(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%ebx)
		mov    (%esp),%eax
		movw   $0x00002b,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00000f,(%eax)

	_02b93c_jump:
		cmpb   $0x000002,0x000076(%esi)
		jne    _02b96c_jump
		mov    0x000028(%esi),%ax
		add    $0x000083,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000058,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000011,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000031,(%eax)

	_02b96c_jump:
		cmpb   $0x000003,0x000076(%esi)
		jne    _02b99c_jump
		mov    0x000028(%esi),%ax
		add    $0x00003e,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00002b,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000010,(%eax)

	_02b99c_jump:
		cmpb   $0x000004,0x000076(%esi)
		jne    _02af6d_jump
		mov    0x000028(%esi),%ax
		add    $0x000060,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000057,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000011,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b9d9_jump:
		mov    0x000028(%esp),%eax
		push   %eax
		mov    %esi,%eax
		call   _01d294_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    0x000007(%eax),%dl
		add    %dl,%dl
		shr    $0x000007,%dl
		mov    0x000007(%eax),%al
		and    $0x0000ff,%edx
		shr    $0x000007,%al
		add    %edx,%edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		mov    $0x000018,%eax
		shl    $0x000002,%esi
		mov    0x000000(%ebp),%dx
		sub    %esi,%eax
		add    %eax,%edx
		mov    %dx,0x000000(%ebp)
		mov    (%edi),%bx
		add    %eax,%ebx
		mov    (%esp),%edx
		mov    %bx,(%edi)
		add    %eax,%eax
		sub    %ax,(%edx)
		mov    0x000028(%esp),%edx
		sub    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02ba58_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,(%esp)
		lea    0x000020(%esp),%ecx
		lea    0x000004(%esp),%ebx
		xor    %edx,%edx
		mov    0x000060(%eax),%ax
		mov    %edx,0x00000c(%esp)
		mov    %edx,0x000010(%esp)
		mov    %edx,0x00001c(%esp)
		mov    %edx,0x000024(%esp)
		lea    0x000018(%esp),%edx
		mov    %eax,0x000014(%esp)
		push   %edx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		push   %edx
		movswl %di,%edx
		call   _01d710_func
		mov    %eax,%edx
		test   %ax,%ax
		je     _02bd5f_jump
		mov    0x000014(%esp),%ebx
		cmp    $0x000051,%bx
		jb     _02bad4_jump
		jbe    _02bae3_jump
		cmp    $0x000064,%bx
		jb     _02bd21_jump
		jbe    _02bc59_jump
		cmp    $0x0000d9,%bx
		je     _02bc59_jump
		jmp    _02bd21_jump

	_02bad4_jump:
		cmp    $0x000014,%bx
		je     _02bb70_jump
		jmp    _02bd21_jump

	_02bae3_jump:
		cmp    $0x000004,%di
		jb     _02baf6_jump
		jbe    _02bb29_jump
		cmp    $0x000005,%di
		je     _02bb4a_jump
		jmp    _02bd21_jump

	_02baf6_jump:
		cmp    $0x000003,%di
		jne    _02bd21_jump
		mov    $0x000004,%ecx
		mov    $0x000002,%esi
		mov    $0xfffffffc,%edi
		mov    $0xfffffff6,%eax
		mov    %ecx,0x000024(%esp)
		mov    %esi,0x00001c(%esp)
		mov    %edi,0x000010(%esp)
		mov    %eax,0x00000c(%esp)
		jmp    _02bd21_jump

	_02bb29_jump:
		mov    $0x000002,%edi
		xor    %esi,%esi
		mov    $0xfffffff6,%ebx
		mov    %esi,0x000024(%esp)
		mov    %edi,0x00001c(%esp)
		mov    %esi,0x000010(%esp)
		mov    %ebx,0x00000c(%esp)
		jmp    _02bd21_jump

	_02bb4a_jump:
		mov    $0x000002,%eax
		mov    $0xfffffffc,%ebx
		xor    %edi,%edi
		mov    $0xfffffff6,%ecx
		mov    %edi,0x000024(%esp)
		mov    %eax,0x00001c(%esp)
		mov    %ebx,0x000010(%esp)
		mov    %ecx,0x00000c(%esp)
		jmp    _02bd21_jump

	_02bb70_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02bb7c_jump
		cmpb   $0x000000,0x00006c(%esi)
		je     _02bb90_jump

	_02bb7c_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _02bc0b_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _02bc0b_jump

	_02bb90_jump:
		cmp    $0x000001,%di
		jb     _02bba3_jump
		jbe    _02bbc8_jump
		cmp    $0x000002,%di
		je     _02bbe5_jump
		jmp    _02bd21_jump

	_02bba3_jump:
		test   %di,%di
		jne    _02bd21_jump
		mov    $0x00000a,%esi
		mov    $0x000022,%eax
		mov    $0x000020,%ebx
		mov    %edi,0x00001c(%esp)
		mov    %esi,0x000024(%esp)
		jmp    _02bd19_jump

	_02bbc8_jump:
		mov    $0x000004,%eax
		mov    $0x00001a,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000024(%esp)
		mov    %ebx,0x00001c(%esp)
		mov    %ecx,0x000008(%esp)
		jmp    _02bd21_jump

	_02bbe5_jump:
		mov    $0x000004,%ebx
		mov    $0x000030,%esi
		mov    $0x000018,%edi
		xor    %ecx,%ecx
		mov    %ebx,0x000024(%esp)
		mov    %ecx,0x00001c(%esp)
		mov    %esi,0x000008(%esp)
		mov    %edi,0x000018(%esp)
		jmp    _02bd21_jump

	_02bc0b_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02bc48_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _02bc48_jump
		mov    0x000028(%esi),%ax
		add    $0x000070,%eax
		mov    %eax,0x000004(%esp)
		mov    0x00002c(%esi),%ax
		add    $0x0000b8,%eax
		mov    $0x000020,%edi
		mov    %eax,0x000020(%esp)
		mov    $0x000010,%eax
		mov    %edi,0x000008(%esp)
		mov    %eax,0x000018(%esp)
		jmp    _02bd21_jump

	_02bc48_jump:
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    %ecx,0x000008(%esp)
		mov    %ecx,0x000018(%esp)
		jmp    _02bd21_jump

	_02bc59_jump:
		cmp    $0x000002,%di
		jb     _02bc74_jump
		jbe    _02bce2_jump
		cmp    $0x000003,%di
		je     _02bd00_jump
		jmp    _02bd21_jump

	_02bc74_jump:
		cmp    $0x000001,%di
		jne    _02bd21_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02bcbc_jump
		mov    0x00006c(%esi),%bl
		cmp    $0x000009,%bl
		je     _02bc96_jump
		cmp    $0x00000a,%bl
		je     _02bc96_jump
		cmp    $0x00000b,%bl
		jne    _02bcbc_jump

	_02bc96_jump:
		mov    $0xfffffff8,%eax
		mov    $0x000005,%ebx
		mov    $0x00001a,%ecx
		mov    $0x000008,%esi
		mov    %eax,0x000024(%esp)
		mov    %ebx,0x00001c(%esp)
		mov    %ecx,0x000008(%esp)
		mov    %esi,0x000018(%esp)
		jmp    _02bd21_jump

	_02bcbc_jump:
		mov    $0x000001,%ebx
		mov    $0xfffffffb,%ecx
		mov    $0x000010,%esi
		mov    $0x00001e,%edi
		mov    %ebx,0x000024(%esp)
		mov    %ecx,0x00001c(%esp)
		mov    %esi,0x000008(%esp)
		mov    %edi,0x000018(%esp)
		jmp    _02bd21_jump

	_02bce2_jump:
		mov    $0x000007,%esi
		xor    %ecx,%ecx
		mov    $0x000010,%edi
		mov    %ecx,0x000024(%esp)
		mov    %esi,0x00001c(%esp)
		mov    %edi,0x000008(%esp)
		mov    %edi,0x000018(%esp)
		jmp    _02bd21_jump

	_02bd00_jump:
		mov    $0x000002,%edi
		mov    $0x00000d,%eax
		xor    %esi,%esi
		mov    $0x000009,%ebx
		mov    %esi,0x000024(%esp)
		mov    %edi,0x00001c(%esp)

	_02bd19_jump:
		mov    %eax,0x000008(%esp)
		mov    %ebx,0x000018(%esp)

	_02bd21_jump:
		mov    0x000004(%esp),%eax
		mov    0x000024(%esp),%ecx
		add    %ecx,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00001c(%esp),%esi
		mov    0x000020(%esp),%eax
		mov    (%esp),%ebx
		add    %esi,%eax
		mov    %ax,(%ebx)
		mov    0x000010(%esp),%edi
		mov    0x000008(%esp),%eax
		mov    0x000038(%esp),%ebx
		add    %edi,%eax
		mov    %ax,(%ebx)
		mov    0x000018(%esp),%eax
		add    0x00000c(%esp),%eax
		mov    0x00003c(%esp),%ebx
		mov    %ax,(%ebx)

	_02bd5f_jump:
		mov    %edx,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_02bd6c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		mov    0x000048(%esp),%esi
		mov    %ax,0x000020(%esp)
		mov    %dx,0x000018(%esp)
		mov    %bx,0x00001c(%esp)
		mov    %cx,0x000034(%esp)
		mov    0x000060(%esi),%ax
		mov    $0xffffffff,%edi
		cmp    $0x000071,%ax
		jb     _02bdc4_jump
		jbe    _02bdd3_jump
		cmp    $0x0000c6,%ax
		jb     _02c094_jump
		jbe    _02be70_jump
		cmp    $0x0000c8,%ax
		jb     _02c094_jump
		cmp    $0x0000c9,%ax
		jbe    _02be70_jump
		jmp    _02c094_jump

	_02bdc4_jump:
		cmp    $0x00002e,%ax
		je     _02be70_jump
		jmp    _02c094_jump

	_02bdd3_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x00006b(%esi),%bl
		mov    %bl,%al
		mov    _094884_data(,%eax,2),%dx
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _02c094_jump
		movswl %bx,%ebp
		mov    0x00002c(%esi),%cx
		mov    _0948d2_data(,%ebp,2),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%bl
		push   %eax
		add    %ecx,%ebx
		mov    _0948aa_data(,%ebp,2),%eax
		add    %ebx,%edx
		mov    _0948d4_data(,%ebp,2),%bx
		sar    $0x000010,%eax
		sub    %ebx,%edx
		push   %eax
		movswl %dx,%edx
		mov    0x00003a(%esp),%ecx
		push   %edx
		xor    %edx,%edx
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%dl
		sar    %eax
		add    %ebx,%edx
		sar    $0x000010,%ecx
		sub    %eax,%edx
		mov    0x000026(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		mov    0x000022(%esp),%edx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02c094_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02be70_jump:
		mov    0x000034(%esp),%eax
		cmp    _0cedca_data,%ax
		jne    _02bf5d_jump
		lea    0x000030(%esp),%eax
		push   %eax
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000030(%esp),%eax
		lea    0x000020(%esp),%ecx
		push   %eax
		lea    0x000020(%esp),%eax
		lea    0x000038(%esp),%ebx
		push   %eax
		lea    0x000040(%esp),%edx
		mov    %esi,%eax
		call   _01da1c_func
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%ebp
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ebp
		sar    $0x000010,%eax
		mov    0x000026(%esp),%esi
		push   %eax
		mov    0x000042(%esp),%eax
		mov    %ebp,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		mov    %eax,0x000010(%esp)
		mov    0x00002e(%esp),%eax
		mov    %esi,%ebx
		sar    $0x000010,%eax
		mov    0x000010(%esp),%ecx
		mov    %eax,0x000014(%esp)
		call   _02ae60_func
		test   %ax,%ax
		je     _02bf13_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bf13_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000c(%esp),%ecx
		sar    $0x000010,%eax
		mov    %esi,%ebx
		push   %eax
		mov    %ebp,%edx
		mov    0x000014(%esp),%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02c094_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bf5d_jump:
		lea    0x000030(%esp),%eax
		push   %eax
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000030(%esp),%eax
		lea    0x000020(%esp),%ecx
		push   %eax
		lea    0x000020(%esp),%eax
		lea    0x000038(%esp),%ebx
		push   %eax
		lea    0x000040(%esp),%edx
		mov    %esi,%eax
		call   _01da1c_func
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%edx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02bfd4_jump
		mov    $0x000006,%edi

	_02bfd4_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%edx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02c01f_jump
		mov    $0x000001,%edi

	_02c01f_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02c094_jump
		cmpb   $0x00000a,0x00006c(%esi)
		jne    _02c094_jump
		lea    0x000014(%esp),%eax
		lea    0x000028(%esp),%ecx
		push   %eax
		lea    0x000014(%esp),%eax
		lea    0x000030(%esp),%ebx
		push   %eax
		mov    $0x000009,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%edx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02c094_jump
		mov    $0x000009,%edi

	_02c094_jump:
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02c0a0_func:
		push   %esi
		push   %edi
		sub    $0x000034,%esp
		mov    0x000044(%esp),%esi
		mov    %eax,0x000010(%esp)
		mov    %dx,0x00001c(%esp)
		mov    %bx,0x000020(%esp)
		mov    %cx,0x000004(%esp)
		xor    %edx,%edx
		mov    %dx,(%esp)
		mov    %dx,0x000024(%esp)
		mov    %dx,0x000028(%esp)
		mov    %dx,0x000008(%esp)
		mov    $0xffffffff,%eax
		mov    0x00005c(%esi),%dx
		mov    %eax,0x00000c(%esp)
		test   %dx,%dx
		je     _02c31c_jump
		mov    %esi,%eax
		call   _02ad00_func
		mov    _0cede4_data,%di
		mov    %eax,0x000018(%esp)
		cmp    $0x000001,%di
		jne    _02c15c_jump
		mov    0x000060(%esi),%ax
		cmp    $0x000032,%ax
		je     _02c10f_jump
		cmp    $0x0000e3,%ax
		jne    _02c12e_jump

	_02c10f_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _02c158_jump

	_02c12e_jump:
		cmpw   $0x0000a5,0x000060(%esi)
		jne    _02c15c_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000040,0x000007(%ebx,%eax,1)
		je     _02c15c_jump

	_02c158_jump:
		decl   0x000018(%esp)

	_02c15c_jump:
		xor    %edi,%edi
		mov    0x000018(%esp),%eax
		mov    %di,0x00002c(%esp)
		test   %ax,%ax
		jle    _02c4a8_jump

	_02c170_jump:
		mov    0x00002a(%esp),%edx
		mov    %esi,%eax
		sar    $0x000010,%edx
		call   _02ad18_func
		mov    0x000006(%eax),%ch
		mov    %eax,%edi
		test   $0x000004,%ch
		je     _02c194_jump
		cmpw   $0x00005e,0x000010(%esp)
		jne    _02c2f9_jump

	_02c194_jump:
		testb  $0x000002,0x000006(%edi)
		je     _02c249_jump
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		imul   $0x00000c,%eax,%eax
		mov    0x000004(%esi),%edx
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		and    $0x00003f,%dh
		xor    %ebx,%ebx
		and    $0x00ffff,%edx
		mov    0x00006b(%esi),%bl
		imul   %ebx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    0x000007(%edi),%dl
		cmpb   $0x000000,0x000003(%ebx,%edx,4)
		je     _02c2a5_jump
		mov    %esp,%eax
		push   %eax
		lea    0x000028(%esp),%eax
		lea    0x00002c(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%ebx
		mov    %esi,%eax
		call   _01d710_func
		testb  $0x000008,0x000081(%esi)
		je     _02c217_jump
		xor    %eax,%eax
		mov    0x000024(%esp),%edx
		mov    0x000004(%edi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    (%edi),%dx
		mov    0x000008(%esp),%ebx
		sub    %edx,%eax
		add    %eax,%ebx
		mov    %bx,0x000008(%esp)
		jmp    _02c225_jump

	_02c217_jump:
		mov    0x000008(%esp),%ecx
		mov    (%edi),%ax
		add    %eax,%ecx
		mov    %cx,0x000008(%esp)

	_02c225_jump:
		mov    0x000028(%esp),%ecx
		mov    0x000002(%edi),%ax
		add    %eax,%ecx
		mov    %cx,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000004(%edi),%al
		mov    %ax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000005(%edi),%al
		mov    %ax,(%esp)
		jmp    _02c2a5_jump

	_02c249_jump:
		mov    0x000028(%esi),%ax
		mov    (%edi),%dx
		add    %edx,%eax
		mov    %ax,0x000008(%esp)
		mov    0x00002c(%esi),%ax
		mov    0x000002(%edi),%bx
		add    %ebx,%eax
		mov    %ax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000004(%edi),%al
		mov    %ax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000005(%edi),%al
		mov    %ax,(%esp)
		testb  $0x000008,0x000081(%esi)
		je     _02c2a5_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		mov    0x000022(%esp),%edx
		add    %ebx,%eax
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		add    %eax,%eax
		sub    %ebx,%eax
		mov    %ax,0x000008(%esp)

	_02c2a5_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02c2f9_jump
		xor    %eax,%eax
		mov    0x000007(%edi),%al
		mov    %eax,0x00000c(%esp)
		jmp    _02c4a8_jump

	_02c2f9_jump:
		mov    0x00002c(%esp),%ecx
		inc    %ecx
		mov    0x000018(%esp),%edi
		mov    %cx,0x00002c(%esp)
		cmp    %di,%cx
		jl     _02c170_jump
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c31c_jump:
		mov    0x000079(%esi),%ah
		cmp    $0x0000fe,%ah
		jne    _02c3ca_jump
		mov    %esp,%eax
		lea    0x000024(%esp),%ecx
		lea    0x000028(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02aebc_func
		testb  $0x000008,0x000081(%esi)
		je     _02c36a_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		mov    0x000022(%esp),%ebx
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		add    %eax,%eax
		sub    %ebx,%eax
		mov    %ax,0x000008(%esp)

	_02c36a_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02c3b5_jump
		movswl %ax,%edx
		jmp    _02c3ba_jump

	_02c3b5_jump:
		mov    $0xffffffff,%edx

	_02c3ba_jump:
		mov    %edx,0x00000c(%esp)
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c3ca_jump:
		cmp    $0x0000ff,%ah
		jne    _02c4a8_jump
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x000008(%edx,%eax,4),%ax
		xor    %ebx,%ebx
		and    $0x00003f,%ah
		mov    %bx,0x000030(%esp)
		mov    %eax,0x000014(%esp)
		test   %ax,%ax
		jle    _02c4a8_jump

	_02c400_jump:
		mov    0x00002e(%esp),%edi
		sar    $0x000010,%edi
		mov    %esi,%eax
		mov    %edi,%edx
		call   _02ad38_func
		test   %ax,%ax
		je     _02c491_jump
		mov    %esp,%eax
		lea    0x000028(%esp),%ecx
		push   %eax
		lea    0x000028(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    %edi,%edx
		mov    %esi,%eax
		call   _02ba58_func
		test   %ax,%ax
		je     _02c491_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02c491_jump
		mov    0x000030(%esp),%eax
		mov    %eax,0x00000c(%esp)
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c491_jump:
		mov    0x000030(%esp),%edx
		inc    %edx
		mov    0x000014(%esp),%ebx
		mov    %dx,0x000030(%esp)
		cmp    %bx,%dx
		jl     _02c400_jump

	_02c4a8_jump:
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_02c4b4_func:
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    0x000028(%esp),%esi
		mov    %ax,0x000014(%esp)
		mov    %edx,%edi
		mov    %bx,0x000018(%esp)
		mov    %cx,0x000010(%esp)
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		mov    %eax,%edx
		test   %ax,%ax
		je     _02c532_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    0x000016(%esp),%ecx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%ebx
		push   %eax
		mov    0x00000e(%esp),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x000022(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _02ae60_func
		mov    %eax,%edx

	_02c532_jump:
		test   %dx,%dx
		je     _02c53e_jump
		xor    %eax,%eax
		mov    0x000079(%esi),%al
		jmp    _02c543_jump

	_02c53e_jump:
		mov    $0xffffffff,%eax

	_02c543_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02c54c_func:
		push   %esi
		push   %edi
		mov    0x000010(%esp),%edi
		mov    %eax,%esi
		mov    %edx,%eax
		xor    %edx,%edx
		mov    0x000079(%edi),%dl
		cmp    $0x0000fd,%dx
		jb     _02c5ad_jump
		jbe    _02c56d_jump
		cmp    $0x0000ff,%dx
		jbe    _02c58c_jump
		jmp    _02c5ad_jump

	_02c56d_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		movswl %cx,%esi
		cwtl   
		sar    $0x000010,%edx
		movswl %bx,%edi
		mov    %edx,%ecx
		mov    %esi,%ebx
		mov    %edi,%edx
		call   _02bd6c_func
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c58c_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		sar    $0x000010,%edx
		movswl %cx,%ecx
		push   %edx
		movswl %ax,%edx
		xor    %eax,%eax
		movswl %bx,%ebx
		mov    %si,%ax
		call   _02c0a0_func
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c5ad_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		movswl %cx,%esi
		cwtl   
		sar    $0x000010,%edx
		movswl %bx,%edi
		mov    %edx,%ecx
		mov    %esi,%ebx
		mov    %edi,%edx
		call   _02c4b4_func
		pop    %edi
		pop    %esi
		ret    $0x000008



_02c5cc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    0x000060(%eax),%ax
		cmp    $0x00009a,%ax
		jb     _02c61f_jump
		jbe    _02c71f_jump
		cmp    $0x0000a0,%ax
		jb     _02c606_jump
		jbe    _02c838_jump
		cmp    $0x0000a9,%ax
		jb     _02c855_jump
		jbe    _02c665_jump
		cmp    $0x000102,%ax
		je     _02c665_jump
		jmp    _02c855_jump

	_02c606_jump:
		cmp    $0x00009b,%ax
		jbe    _02c75f_jump
		cmp    $0x00009f,%ax
		je     _02c7a1_jump
		jmp    _02c855_jump

	_02c61f_jump:
		cmp    $0x000051,%ax
		jb     _02c642_jump
		jbe    _02c665_jump
		cmp    $0x00007d,%ax
		jb     _02c855_jump
		jbe    _02c698_jump
		cmp    $0x00008a,%ax
		je     _02c6df_jump
		jmp    _02c855_jump

	_02c642_jump:
		cmp    $0x000010,%ax
		jb     _02c855_jump
		cmp    $0x000011,%ax
		jbe    _02c795_jump
		cmp    $0x000018,%ax
		je     _02c795_jump
		jmp    _02c855_jump

	_02c665_jump:
		mov    $0x000001,%ecx
		mov    $0x000002,%esi
		xor    %ebx,%ebx
		mov    $0x0000ff,%edi
		mov    %bx,(%esp)
		mov    %cx,0x000002(%esp)
		mov    %si,0x000004(%esp)
		mov    %di,0x000006(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c698_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%ecx
		mov    $0x000003,%esi
		xor    %eax,%eax
		mov    $0x000004,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    $0x0000ff,%eax
		mov    %di,0x000008(%esp)
		mov    %ax,0x00000a(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c6df_jump:
		mov    $0x000005,%eax
		mov    $0x000006,%ebx
		mov    $0x000007,%ecx
		mov    $0x000008,%esi
		mov    $0x0000ff,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    %di,0x000008(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c71f_jump:
		mov    $0x000001,%eax
		mov    $0x000002,%ebx
		mov    $0x000003,%ecx
		mov    $0x000004,%esi
		mov    $0x0000ff,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    %di,0x000008(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c75f_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%ecx
		mov    $0x000003,%esi
		mov    $0x0000ff,%edi
		mov    %bx,(%esp)
		mov    %cx,0x000002(%esp)
		mov    %si,0x000004(%esp)
		mov    %di,0x000006(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c795_jump:
		mov    $0x000001,%ebx
		xor    %eax,%eax
		jmp    _02c842_jump

	_02c7a1_jump:
		testb  $0x000008,_0cdc25_data
		je     _02c7e7_jump
		mov    $0x000004,%edi
		mov    $0x000005,%eax
		mov    $0x000006,%ebx
		mov    $0x000007,%ecx
		mov    $0x000008,%esi
		mov    %di,(%esp)
		mov    %ax,0x000002(%esp)
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000006(%esp)
		mov    $0x000009,%edi
		mov    %si,0x000008(%esp)
		mov    %di,0x00000a(%esp)
		jmp    _02c822_jump

	_02c7e7_jump:
		mov    $0x000009,%esi
		mov    $0x000008,%edi
		mov    $0x000007,%eax
		mov    $0x000006,%ebx
		mov    $0x000005,%ecx
		mov    %si,(%esp)
		mov    %di,0x000002(%esp)
		mov    %ax,0x000004(%esp)
		mov    %bx,0x000006(%esp)
		mov    $0x000004,%esi
		mov    %cx,0x000008(%esp)
		mov    %si,0x00000a(%esp)

	_02c822_jump:
		movw   $0x0000ff,0x00000c(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c838_jump:
		mov    $0x000004,%eax
		mov    $0x000005,%ebx

	_02c842_jump:
		mov    $0x0000ff,%ecx
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)

	_02c855_jump:
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02c864_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %bx,0x000008(%esp)
		xor    %ebx,%ebx
		mov    _0cdbcc_data,%cx
		mov    _0cdc0c_data,%bl
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    %cx,0x000004(%esp)
		mov    _0cdc0d_data,%bl
		mov    _0cdbd0_data,%cx
		add    %ebx,%ecx
		mov    %cx,(%esp)
		mov    %edx,%ebx
		mov    $0x000008,%edx
		add    %eax,%ebx
		mov    _0ced81_data,%cl
		dec    %ebx
		test   $0x000002,%cl
		je     _02c8b4_jump
		mov    $0x000004,%edx

	_02c8b4_jump:
		movswl %bx,%edi
		movswl %ax,%esi
		movswl %dx,%edx
		mov    %esi,%ebx
		lea    (%edi,%edx,1),%ecx
		sub    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02c8dc_jump
		cmp    %ecx,%eax
		jg     _02c8dc_jump
		mov    $0x000001,%eax
		jmp    _02c8de_jump

	_02c8dc_jump:
		xor    %eax,%eax

	_02c8de_jump:
		test   %eax,%eax
		jne    _02c8e9_jump
		mov    $0x002710,%eax
		jmp    _02c93a_jump

	_02c8e9_jump:
		mov    %edi,%ecx
		mov    %esi,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02c8fe_jump
		cmp    %ecx,%eax
		jg     _02c8fe_jump
		mov    $0x000001,%eax
		jmp    _02c900_jump

	_02c8fe_jump:
		xor    %eax,%eax

	_02c900_jump:
		test   %eax,%eax
		je     _02c921_jump
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02c91a_jump
		neg    %eax

	_02c91a_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_02c921_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02c937_jump
		neg    %eax

	_02c937_jump:
		neg    %eax
		dec    %eax

	_02c93a_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_02c944_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    $0x000008,%edx
		mov    _0ced81_data,%ah
		mov    %dx,0x000010(%esp)
		test   $0x000002,%ah
		je     _02c96b_jump
		movw   $0x000004,0x000010(%esp)

	_02c96b_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _02c993_jump
		neg    %eax

	_02c993_jump:
		mov    _094762_data(,%eax,2),%eax
		sar    $0x000010,%eax
		call   _05be00_func
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		sar    $0x000009,%edx
		mov    %edx,%edi
		movswl %dx,%edx
		sub    %edx,%eax
		mov    -0x000002(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		mov    0x00000c(%esp),%ecx
		add    %eax,%edx
		mov    %di,0x000004(%esp)
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    _0cdbcc_data,%bx
		mov    0x000074(%esi),%al
		add    %edi,%edx
		movzbw _0cdc0d_data,%di
		dec    %edx
		add    %eax,%ecx
		xor    %eax,%eax
		mov    %ecx,0x00000c(%esp)
		mov    _0cdc0c_data,%al
		movswl %dx,%ebp
		add    %eax,%ebx
		mov    _0cdbd0_data,%ax
		mov    %bx,0x000014(%esp)
		mov    0x00000e(%esp),%ebx
		mov    0x000012(%esp),%edx
		add    %eax,%edi
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %ebx,%eax
		lea    (%ebx,%ebp,1),%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02ca34_jump
		cmp    %ecx,%eax
		jg     _02ca34_jump
		mov    $0x000001,%eax
		jmp    _02ca36_jump

	_02ca34_jump:
		xor    %eax,%eax

	_02ca36_jump:
		test   %eax,%eax
		je     _02caf4_jump
		mov    0x00000c(%esp),%eax
		sub    %edi,%eax
		movswl %ax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02ca4f_jump
		neg    %eax

	_02ca4f_jump:
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _02caf4_jump
		mov    %ebx,%eax
		mov    -0x000002(%esp),%ebx
		sar    %eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %edx,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000008(%esp)
		movsbw 0x000076(%esi),%ax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _02ca88_jump
		sar    %cl,%ax
		jmp    _02ca91_jump

	_02ca88_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02ca91_jump:
		mov    -0x000002(%esp),%ebx
		mov    %ax,0x000008(%esp)
		mov    %ebp,%ecx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02cab0_jump
		cmp    %ecx,%eax
		jg     _02cab0_jump
		mov    $0x000001,%eax
		jmp    _02cab2_jump

	_02cab0_jump:
		xor    %eax,%eax

	_02cab2_jump:
		test   %eax,%eax
		je     _02cacd_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02cac7_jump
		neg    %eax

	_02cac7_jump:
		mov    %ax,0x000054(%esi)
		jmp    _02cafa_jump

	_02cacd_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02cade_jump
		neg    %eax

	_02cade_jump:
		mov    %eax,%ecx
		mov    %ax,0x000054(%esi)
		neg    %ecx
		mov    %cx,0x000054(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02caf4_jump:
		movw   $0x002710,0x000054(%esi)

	_02cafa_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02cb04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%esi
		mov    $0x000008,%edx
		mov    _0ced81_data,%ah
		mov    %dx,0x00001c(%esp)
		test   $0x000002,%ah
		je     _02cb2a_jump
		movw   $0x000004,0x00001c(%esp)

	_02cb2a_jump:
		mov    $0x002710,%ebx
		xor    %eax,%eax
		mov    _0cdbcc_data,%dx
		mov    _0cdc0c_data,%al
		mov    0x000034(%esi),%cx
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000018(%esp)
		mov    _0cdc0d_data,%al
		mov    _0cdbd0_data,%dx
		xor    %edi,%edi
		add    %eax,%edx
		mov    _0cdbee_data,%ax
		mov    %edx,0x000014(%esp)
		cmp    %cx,%ax
		jne    _02cc53_jump
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		mov    0x000060(%esi),%bx
		cmp    $0x00008a,%bx
		je     _02cbb2_jump
		cmp    $0x00009a,%bx
		je     _02cbb2_jump
		cmp    $0x00009b,%bx
		jne    _02cbca_jump

	_02cbb2_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		sub    $0x00000a,%edx
		add    $0x000005,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,0x00000c(%esp)

	_02cbca_jump:
		cmpw   $0x00009f,0x000060(%esi)
		jne    _02cc37_jump
		cmpb   $0x000000,_0cdc11_data
		jne    _02cc37_jump
		mov    0x00006b(%esi),%dh
		cmp    $0x000009,%dh
		jbe    _02cc37_jump
		cmp    $0x000028,%dh
		jae    _02cc37_jump
		xor    %eax,%eax
		mov    _0cdbcc_data,%ebx
		mov    _0cdc0c_data,%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %bx,%bx
		jle    _02cc1a_jump
		decl   _0cdbcc_data
		jmp    _02cc22_jump

	_02cc1a_jump:
		jge    _02cc22_jump
		incl   _0cdbcc_data

	_02cc22_jump:
		xor    %eax,%eax
		mov    _0cdbcc_data,%dx
		mov    _0cdc0c_data,%al
		add    %eax,%edx
		mov    %dx,0x000018(%esp)

	_02cc37_jump:
		mov    0x000006(%esp),%ebx
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02c864_func
		mov    %eax,%ebx

	_02cc53_jump:
		cmp    $0x002710,%bx
		jne    _02cd56_jump

	_02cc5e_jump:
		movswl %di,%edx
		mov    %esi,%eax
		call   _02c5cc_func
		inc    %edi
		mov    %ax,0x000010(%esp)
		movswl %bx,%eax
		test   %eax,%eax
		jge    _02cc77_jump
		neg    %eax

	_02cc77_jump:
		cmp    $0x000007,%eax
		jle    _02cd56_jump
		cmpw   $0x0000ff,0x000010(%esp)
		je     _02cd56_jump
		mov    %esp,%eax
		mov    0x00000e(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    %esi,%eax
		call   _01d710_func
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		mov    0x000060(%esi),%bx
		cmp    $0x00008a,%bx
		je     _02ccd4_jump
		cmp    $0x00009a,%bx
		je     _02ccd4_jump
		cmp    $0x00009b,%bx
		jne    _02ccec_jump

	_02ccd4_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		sub    $0x00000a,%edx
		add    $0x000005,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,0x00000c(%esp)

	_02ccec_jump:
		mov    0x00000a(%esp),%ecx
		mov    0x000002(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %ecx,%ebx
		sar    $0x000010,%eax
		add    %edx,%ebx
		cmp    %ebx,%eax
		jg     _02cd3a_jump
		sub    %edx,%ecx
		cmp    %ecx,%eax
		jl     _02cd3a_jump
		mov    0x000014(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    0x000060(%esi),%ax
		sub    %ecx,%ebx
		cmp    $0x00009f,%ax
		jne    _02cd3f_jump
		cmp    $0x000008,%bx
		jl     _02cd3f_jump
		cmp    $0x00000b,%bx
		jge    _02cd3f_jump
		xor    %ebx,%ebx
		jmp    _02cd3f_jump

	_02cd3a_jump:
		mov    $0x002710,%ebx

	_02cd3f_jump:
		cmp    $0x002710,%bx
		je     _02cc5e_jump
		mov    0x000010(%esp),%al
		mov    %al,0x000075(%esi)
		jmp    _02cc5e_jump

	_02cd56_jump:
		mov    %bx,0x000054(%esi)
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02cd64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,0x000004(%esp)
		andb   $0x0000f7,0x000081(%esi)
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x000004(%esp),%al
		mov    0x000081(%esi),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%esi)
		mov    %dl,%dh
		or     %al,%dh
		mov    $0x000037,%ebx
		mov    %dh,0x000081(%esi)
		xor    %eax,%eax
		mov    0x000010(%esp),%edx
		mov    0x00000c(%esp),%ecx
		mov    0x000074(%esi),%al
		mov    %ebx,(%esp)
		add    %eax,%edx
		add    $0x000004,%ecx
		mov    %dx,0x000010(%esp)
		mov    %cx,0x00000c(%esp)
		mov    0x00000e(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    $0x000037,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _02c864_func
		mov    %eax,%ebx
		cmp    $0x002710,%ax
		je     _02ce0f_jump
		movb   $0x000002,0x000075(%esi)

	_02ce0f_jump:
		mov    %bx,0x000054(%esi)
		add    $0x000014,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ce1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		cmpb   $0x000003,0x00006c(%eax)
		je     _02ce32_jump
		cmpb   $0x000006,0x00006c(%esi)
		jne    _02ce9f_jump

	_02ce32_jump:
		cmpb   $0x00000c,0x00006b(%esi)
		jae    _02ce9f_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    0x000008(%esp),%eax
		mov    $0x00002d,%ebx
		sub    $0x00002d,%eax
		mov    %dx,(%esp)
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		mov    %ebx,0x000008(%esp)
		add    %edx,%eax
		mov    -0x000002(%esp),%ebx
		mov    %ax,0x000004(%esp)
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%eax
		mov    $0x00002d,%edx
		sar    $0x000010,%eax
		call   _02c864_func
		jmp    _02cea4_jump

	_02ce9f_jump:
		mov    $0x002710,%eax

	_02cea4_jump:
		mov    _0cdbee_data,%dx
		cmp    0x000034(%esi),%dx
		jne    _02cef0_jump
		cmpb   $0x000006,0x00006c(%esi)
		jne    _02cef0_jump
		cmpb   $0x00000b,0x00006b(%esi)
		jne    _02cef0_jump
		mov    $0xffffffff,%edi
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx
		mov    %di,_0cdbee_data
		call   _01d374_func
		mov    _0cdbe6_data,%dx
		sub    $0x00000a,%edx
		mov    $0x002710,%eax
		mov    %dx,_0cdbe6_data

	_02cef0_jump:
		mov    %ax,0x000054(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02cf00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000008,_092265_data(,%eax,4)
		je     _02cf25_jump
		mov    %esi,%eax
		call   _02cb04_func
		jmp    _02cff1_jump

	_02cf25_jump:
		cmp    $0x00006d,%ax
		je     _02cf31_jump
		cmp    $0x000061,%ax
		jne    _02cf40_jump

	_02cf31_jump:
		mov    %esi,%eax
		call   _02cd64_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02cf40_jump:
		cmp    $0x000083,%ax
		jne    _02cf55_jump
		mov    %esi,%eax
		call   _02ce1c_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02cf55_jump:
		cmp    $0x0000fe,%ax
		jne    _02cf6a_jump
		mov    %esi,%eax
		call   _02c944_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02cf6a_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		mov    0x000060(%esi),%bx
		cmp    $0x000008,%bx
		je     _02cfbd_jump
		cmp    $0x000086,%bx
		je     _02cfbd_jump
		cmp    $0x0000a7,%bx
		je     _02cfbd_jump
		cmp    $0x0000b1,%bx
		je     _02cfbd_jump
		cmp    $0x000006,%bx
		jne    _02cfd3_jump

	_02cfbd_jump:
		mov    0x00000c(%esp),%ebx
		mov    (%esp),%ecx
		sub    $0x000002,%ebx
		add    $0x000004,%ecx
		mov    %bx,0x00000c(%esp)
		mov    %cx,(%esp)

	_02cfd3_jump:
		mov    0x000002(%esp),%ebx
		mov    -0x000002(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02c864_func
		mov    %ax,0x000054(%esi)

	_02cff1_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02cffc_func:
		push   %edx
		call   _064ab8_func
		mov    $0x000001,%ah
		mov    _0cdcd1_data,%dl
		mov    %ah,_0cdcd5_data
		test   %dl,%dl
		jne    _02d028_jump
		xor    %dh,%dh
		mov    _0cdc30_data,%eax
		mov    %dx,_0cdccc_data
		movw   $0x000000,0x000040(%eax)

	_02d028_jump:
		pop    %edx
		ret    



_02d02c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		xor    %ah,%ah
		mov    %ah,0x000010(%esp)
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    _0cdc30_data,%eax
		call   _01d710_func
		mov    _0cdc30_data,%edx
		mov    0x000040(%edx),%bx
		test   %bx,%bx
		jl     _02d090_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%bl
		mov    0x000074(%edx),%al
		add    %ebx,%eax
		mov    0x00002c(%edx),%esi
		sar    %eax
		add    %esi,%eax
		sar    $0x000004,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000028(%edx),%edi
		mov    0x000068(%edx),%al
		add    %edi,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		jmp    _02d0bb_jump

	_02d090_jump:
		jge    _02d0c4_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%bl
		mov    0x000074(%edx),%al
		add    %ebx,%eax
		sar    %eax
		add    0x00002c(%edx),%eax
		xor    %ebx,%ebx
		mov    0x000028(%edx),%ecx
		mov    0x000068(%edx),%bl
		add    %ecx,%ebx
		sar    $0x000004,%eax
		sar    $0x000004,%ebx
		cwtl   
		movswl %bx,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax

	_02d0bb_jump:
		call   _01e0e4_func
		mov    %al,0x000010(%esp)

	_02d0c4_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		testb  $0x000002,_092224_data(%eax)
		je     _02d0e7_jump
		call   _02cffc_func
		mov    $0x000001,%eax
		call   _0646b4_func
		jmp    _02d27d_jump

	_02d0e7_jump:
		mov    _0ce4b2_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		mov    _0cc300_data,%esi
		add    %ebx,%edx
		mov    _0ce57c_data,%ax
		shl    $0x000002,%edx
		xor    %edi,%edi
		add    %edx,%esi
		test   %ax,%ax
		jle    _02d27d_jump

	_02d113_jump:
		cmpw   $0x000000,_0cedea_data
		jne    _02d27d_jump
		cmpw   $0x000000,_0cedd4_data
		jne    _02d27d_jump
		cmpb   $0x000000,_0cefc8_data
		jne    _02d27d_jump
		cmpb   $0x000000,_0cefca_data
		jne    _02d27d_jump
		cmpb   $0x000000,0x00007e(%esi)
		je     _02d254_jump
		cmpb   $0x000000,0x000076(%esi)
		je     _02d254_jump
		xor    %ebx,%ebx
		mov    0x00006d(%esi),%bl
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%esi),%dl
		lea    0x000000(,%edx,8),%ecx
		mov    (%ebx),%edx
		testb  $0x000008,0x000007(%ecx,%edx,1)
		je     _02d254_jump
		mov    0x00000a(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    $0x00005e,%eax
		push   %esi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		push   %edx
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _02c54c_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _02d254_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		movswl %dx,%edx
		lea    0x000000(,%eax,4),%ebx
		xor    %ecx,%ecx
		add    %eax,%ebx
		mov    %esi,%eax
		mov    0x000076(%esi),%cl
		call   *_0932e8_data(,%ebx,4)
		xor    %edx,%edx
		call   _02cffc_func
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		movb   $0x000000,0x000071(%esi)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		shr    $0x000004,%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x00000b,%edx
		je     _02d20d_jump
		cmp    $0x00000a,%edx
		je     _02d20d_jump
		movb   $0x000000,0x000072(%esi)

	_02d20d_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    %cx,%ax
		jne    _02d27d_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		shl    $0x000002,%eax
		testb  $0x000001,_092267_data(%eax)
		je     _02d27d_jump
		testb  $0x000080,_092264_data(%eax)
		je     _02d23a_jump
		mov    _0cede2_data,%ax
		jmp    _02d23e_jump

	_02d23a_jump:
		mov    0x000034(%esi),%ax

	_02d23e_jump:
		movswl %ax,%edx
		mov    $0x0000d6,%eax
		call   _06f3bc_func
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d254_jump:
		inc    %edi
		movswl %di,%edx
		mov    _0ce4b2_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc300_data,%esi
		add    %edx,%esi
		cmp    _0ce57c_data,%di
		jl     _02d113_jump

	_02d27d_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lea    0x000000(%eax),%eax

	_02d288_jump:
		ret    



_02d344_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		mov    _0cdbd0_data,%edx
		mov    _0cdc0d_data,%bl
		add    %edx,%ebx
		mov    _0cdb98_data,%edx
		sar    $0x000010,%edx
		shl    $0x000004,%edx
		xor    %eax,%eax
		cmp    %edx,%ebx
		jge    _02d4c1_jump
		mov    _0cdbec_data,%ebx
		mov    _0cdbf6_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%ebx
		jne    _02d39d_jump
		lea    0x000000(,%edx,4),%eax
		mov    _0cdba0_data,%ebx
		sub    %edx,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		sete   %al
		xor    %ah,%ah

	_02d39d_jump:
		test   %ax,%ax
		jne    _02d4c1_jump
		mov    _0cdb96_data,%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ebx
		mov    _0cdba0_data,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,1)
		sete   %bl
		xor    %bh,%bh
		mov    %ebx,%eax
		test   %bx,%bx
		jne    _02d4c1_jump
		lea    0x000001(%edx),%ecx
		lea    -0x000001(%edx),%ebx
		cmpb   $0x000002,_0cdc11_data
		jne    _02d3ef_jump
		cmpw   $0x000000,_0cdbe4_data
		je     _02d41e_jump

	_02d3ef_jump:
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0cdba0_data,%ebx
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		je     _02d415_jump
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		jne    _02d41c_jump

	_02d415_jump:
		mov    $0x000001,%eax
		jmp    _02d41e_jump

	_02d41c_jump:
		xor    %eax,%eax

	_02d41e_jump:
		test   %ax,%ax
		jne    _02d4c1_jump
		testb  $0x000002,_0ced81_data
		jne    _02d45b_jump
		xor    %ecx,%ecx
		mov    _0cdc11_data,%cl
		mov    _0cdbb0_data,%ebx
		shl    $0x000002,%ecx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    _0cdc10_data,%bl
		testb  $0x000040,0x000007(%ecx,%ebx,8)
		jne    _02d45b_jump
		mov    $0x000001,%ebx
		jmp    _02d45d_jump

	_02d45b_jump:
		xor    %ebx,%ebx

	_02d45d_jump:
		test   %ebx,%ebx
		je     _02d4c1_jump
		mov    _0cdb96_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		mov    %edx,%eax
		sub    %ebx,%edx
		test   %edx,%edx
		jge    _02d483_jump

	_02d474_jump:
		mov    _0cdb96_data,%ebx
		sar    $0x000010,%ebx
		add    %ebx,%edx
		test   %edx,%edx
		jl     _02d474_jump

	_02d483_jump:
		test   %eax,%eax
		jge    _02d494_jump
		mov    _0cdb96_data,%ebx
		sar    $0x000010,%ebx
		add    %ebx,%eax
		jmp    _02d483_jump

	_02d494_jump:
		mov    %edx,%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		mov    _0cdba0_data,%ebx
		cmpb   $0x000008,0x000002(%ebx,%edx,2)
		je     _02d4b6_jump
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		jne    _02d4bf_jump

	_02d4b6_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d4bf_jump:
		xor    %eax,%eax

	_02d4c1_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d4c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0cdbd0_data,%edx
		mov    _0cdc0d_data,%al
		add    %eax,%edx
		mov    _0cdb98_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %eax,%edx
		jge    _02d5d8_jump
		mov    _0cdbf6_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		add    %eax,%eax
		add    %edx,%eax
		mov    0x000002(%eax),%dl
		cmp    $0x000018,%dl
		jne    _02d562_jump
		mov    $0x000020,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		cmpb   $0x000001,_0cefd4_data
		je     _02d53f_jump
		movb   $0x000001,_0cefd4_data
		call   _06ed40_func
		call   _01cb6c_func

	_02d53f_jump:
		xor    %ecx,%ecx
		mov    _0cdbd0_data,%edx
		mov    %cx,_0cdbe6_data
		add    $0x000005,%edx
		mov    %cx,_0cdbe4_data
		mov    %edx,_0cdbd0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d562_jump:
		cmpb   $0x000018,_0cdc09_data
		jne    _02d5ad_jump
		mov    $0x000020,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		cmpb   $0x000001,_0cefd4_data
		je     _02d599_jump
		movb   $0x000001,_0cefd4_data
		call   _06ed40_func
		call   _01cb6c_func

	_02d599_jump:
		xor    %edx,%edx
		mov    %dx,_0cdbe6_data
		mov    %dx,_0cdbe4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d5ad_jump:
		cmp    $0x000019,%dl
		jne    _02d5d8_jump
		mov    $0x00001f,%ebx
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		mov    _0cedfa_data,%ax
		mov    %ax,_0cedc6_data
		mov    %ax,_0cedbc_data

	_02d5d8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d5dc_func:
		push   %ebx
		push   %edx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0cdbe6_data
		mov    %dx,_0cdbe4_data
		mov    %ah,_0cdc21_data
		pop    %edx
		pop    %ebx
		ret    



_02d60c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		test   %al,%al
		je     _02d661_jump
		call   _06d5e8_func
		xor    %ebx,%ebx
		mov    _0cdbcc_data,%dx
		mov    _0cdc0c_data,%bl
		add    %edx,%ebx

	_02d62c_jump:
		xor    %eax,%eax
		mov    _0cdbd0_data,%edx
		mov    _0cdc0d_data,%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		cmp    $0x00000a,%al
		jne    _02d659_jump
		decl   _0cdbd0_data
		jmp    _02d62c_jump

	_02d659_jump:
		xor    %ah,%ah
		mov    %ah,_0cdc06_data

	_02d661_jump:
		mov    _0cdc11_data,%dl
		cmp    $0x000006,%dl
		jne    _02d69f_jump
		mov    $0x000008,%ebx
		mov    $0x000006,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,_0cdbe6_data
		xor    %dl,%bl
		mov    %dx,_0cdbe4_data
		mov    %bl,_0cdcd4_data
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02d69f_jump:
		testb  $0x000004,_0cdc25_data
		je     _02d95e_jump
		cmp    $0x000003,%dl
		jne    _02d6c1_jump
		mov    _0cdc10_data,%bh
		cmp    $0x000016,%bh
		je     _02d6c8_jump
		cmp    $0x000020,%bh
		je     _02d6c8_jump

	_02d6c1_jump:
		mov    $0x000001,%eax
		jmp    _02d6ca_jump

	_02d6c8_jump:
		xor    %eax,%eax

	_02d6ca_jump:
		test   %eax,%eax
		je     _02d95e_jump
		cmpb   $0x000002,_0cdc11_data
		jne    _02d6e4_jump
		cmpb   $0x00001f,_0cdc10_data
		je     _02d6eb_jump

	_02d6e4_jump:
		mov    $0x000001,%eax
		jmp    _02d6ed_jump

	_02d6eb_jump:
		xor    %eax,%eax

	_02d6ed_jump:
		test   %eax,%eax
		je     _02d95e_jump
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0cdc10_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _02d743_jump
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _02d743_jump
		mov    $0x00003d,%ebx
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		jmp    _02d752_jump

	_02d743_jump:
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax

	_02d752_jump:
		call   _01d374_func
		xor    %ebx,%ebx
		mov    %bx,_0ceda8_data
		test   %ecx,%ecx
		jne    _02d7ae_jump
		cmpb   $0x000000,_0cdc11_data
		jne    _02d776_jump
		cmpb   $0x00003d,_0cdc10_data
		je     _02d77d_jump

	_02d776_jump:
		mov    $0x000001,%eax
		jmp    _02d77f_jump

	_02d77d_jump:
		xor    %eax,%eax

	_02d77f_jump:
		test   %eax,%eax
		je     _02d7ae_jump
		testb  $0x000008,_0cdc25_data
		je     _02d797_jump
		movw   $0x00fffe,_0cdbe4_data
		jmp    _02d7a0_jump

	_02d797_jump:
		movw   $0x000002,_0cdbe4_data

	_02d7a0_jump:
		movw   $0x00fffd,_0cdbe6_data
		jmp    _02d8f5_jump

	_02d7ae_jump:
		cmpb   $0x000000,_0cdc11_data
		jne    _02d7c4_jump
		cmpb   $0x00003d,_0cdc10_data
		je     _02d8f5_jump

	_02d7c4_jump:
		mov    0x000060(%ecx),%si
		cmp    $0x0000b4,%si
		jne    _02d7d9_jump
		call   _0735dc_func
		jmp    _02d891_jump

	_02d7d9_jump:
		cmp    $0x000096,%si
		jne    _02d7ea_jump
		call   _075398_func
		jmp    _02d891_jump

	_02d7ea_jump:
		cmp    $0x0000c6,%si
		je     _02d88c_jump
		cmp    $0x0000c8,%si
		jne    _02d806_jump
		mov    $0xffffffff,%eax
		jmp    _02d891_jump

	_02d806_jump:
		cmp    $0x000064,%si
		jne    _02d823_jump
		testb  $0x000008,0x000081(%ecx)
		jne    _02d88c_jump
		mov    $0xffffffff,%eax
		jmp    _02d891_jump

	_02d823_jump:
		cmp    $0x000078,%si
		jne    _02d832_jump
		mov    %ecx,%eax
		call   _01fd24_func
		jmp    _02d891_jump

	_02d832_jump:
		cmp    $0x0000bb,%si
		jne    _02d842_jump
		mov    %ecx,%eax
		call   _063d48_func
		jmp    _02d891_jump

	_02d842_jump:
		cmp    $0x0000d1,%si
		je     _02d88c_jump
		cmp    $0x0000d2,%si
		jne    _02d857_jump
		mov    $0xffffffff,%eax
		jmp    _02d891_jump

	_02d857_jump:
		mov    0x00003e(%ecx),%edx
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02d877_jump
		mov    $0x000001,%eax
		jg     _02d877_jump
		neg    %eax

	_02d877_jump:
		test   %ax,%ax
		jne    _02d891_jump
		testb  $0x000008,_0cdc25_data
		je     _02d88c_jump
		mov    $0xffffffff,%eax
		jmp    _02d891_jump

	_02d88c_jump:
		mov    $0x000001,%eax

	_02d891_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		testb  $0x000004,_092265_data(,%edx,4)
		je     _02d8a8_jump
		mov    $0x000005,%edx
		jmp    _02d8bb_jump

	_02d8a8_jump:
		cmp    $0x0000b4,%dx
		jne    _02d8b6_jump
		mov    $0x000004,%edx
		jmp    _02d8bb_jump

	_02d8b6_jump:
		mov    $0x000002,%edx

	_02d8bb_jump:
		cmp    $0x000001,%ax
		jne    _02d8ca_jump
		mov    %dx,_0cdbe4_data
		jmp    _02d8e2_jump

	_02d8ca_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _02d8e2_jump
		mov    %edx,%ecx
		mov    %dx,_0cdbe4_data
		neg    %ecx
		mov    %cx,_0cdbe4_data

	_02d8e2_jump:
		inc    %edx
		mov    %edx,%esi
		mov    %dx,_0cdbe6_data
		neg    %esi
		mov    %si,_0cdbe6_data

	_02d8f5_jump:
		mov    $0x000001,%cl
		mov    $0xffffffff,%esi
		mov    _0ced80_data,%dl
		xor    %ebx,%ebx
		xor    %al,%al
		xor    %edi,%edi
		mov    %cl,_0cefde_data
		mov    %bx,_0cedf8_data
		mov    %si,_0cdbee_data
		mov    %di,_0cedb2_data
		mov    $0xffffffff,%ecx
		xor    %ah,%ah
		mov    %cx,_0cee0c_data
		xor    %ch,%ch
		mov    %ax,_0cdbec_data
		mov    %ch,_0cdc15_data
		mov    %ch,_0cdc16_data
		mov    %ch,_0cdcd4_data
		test   $0x000008,%dl
		je     _02d957_jump
		movb   $0x000001,_0cefd3_data

	_02d957_jump:
		xor    %eax,%eax
		call   _069cd8_func

	_02d95e_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02d964_func:
		push   %ecx
		push   %esi
		testb  $0x000008,0x000081(%eax)
		jne    _02d97e_jump
		xor    %ecx,%ecx
		mov    (%edx),%si
		mov    0x00007a(%eax),%cl
		sub    %ecx,%esi
		mov    %si,(%edx)
		jmp    _02d98b_jump

	_02d97e_jump:
		movswl (%ebx),%esi
		movswl (%edx),%ecx
		sar    %esi
		add    %esi,%ecx
		mov    %cx,(%edx)

	_02d98b_jump:
		movswl (%ebx),%edx
		mov    0x00007a(%eax),%al
		sar    %edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    %ax,(%ebx)
		pop    %esi
		pop    %ecx
		ret    

_02d9a0_switch:
		.long   _02ddca_case
		.long   _02dcb0_case
		.long   _02dd7f_case
		.long   _02dac1_case
		.long   _02dac1_case
		.long   _02dd0c_case




_02d9b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000060(%esi),%ax
		cmp    $0x00007b,%ax
		jb     _02db30_jump
		jbe    _02dc96_jump
		cmp    $0x0000b5,%ax
		jb     _02da58_jump
		jbe    _02de7a_jump
		cmp    $0x0000d4,%ax
		jb     _02da2e_jump
		jbe    _02e0fa_jump
		cmp    $0x0000e2,%ax
		jb     _02da1f_jump
		jbe    _02e04d_jump
		cmp    $0x0000ef,%ax
		je     _02dc45_jump
		jmp    _02dab2_jump

	_02da1f_jump:
		cmp    $0x0000e1,%ax
		je     _02e030_jump
		jmp    _02dab2_jump

	_02da2e_jump:
		cmp    $0x0000c3,%ax
		jb     _02da49_jump
		jbe    _02e084_jump
		cmp    $0x0000c7,%ax
		je     _02de7a_jump
		jmp    _02dab2_jump

	_02da49_jump:
		cmp    $0x0000b8,%ax
		je     _02e04d_jump
		jmp    _02dab2_jump

	_02da58_jump:
		cmp    $0x000099,%ax
		jb     _02da98_jump
		jbe    _02dbe2_jump
		cmp    $0x0000ac,%ax
		jb     _02da7f_jump
		jbe    _02df9e_jump
		cmp    $0x0000ae,%ax
		je     _02e030_jump
		jmp    _02dab2_jump

	_02da7f_jump:
		cmp    $0x0000a8,%ax
		jb     _02dab2_jump
		cmp    $0x0000a9,%ax
		jbe    _02ddec_jump
		jmp    _02dab2_jump

	_02da98_jump:
		cmp    $0x000084,%ax
		jb     _02dab2_jump
		jbe    _02de13_jump
		cmp    $0x000093,%ax
		je     _02de57_jump

	_02dab2_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx

	_02daba_jump:
		mov    %esi,%eax
		call   _02d964_func

	_02dac1_case:
		mov    _0cedc8_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0cedae_data,%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    _0cedac_data,%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%edx
		push   %eax
		mov    _0cedaa_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02e149_jump
		mov    0x00007b(%esi),%dh
		cmp    $0x000002,%dh
		jae    _02e130_jump
		test   %dh,%dh
		jne    _02e11e_jump
		movb   $0x000001,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02db30_jump:
		cmp    $0x000038,%ax
		jb     _02db91_jump
		jbe    _02df9e_jump
		cmp    $0x000051,%ax
		jb     _02db72_jump
		jbe    _02ddec_jump
		cmp    $0x000064,%ax
		jb     _02db63_jump
		jbe    _02dfbb_jump
		cmp    $0x000074,%ax
		je     _02df2e_jump
		jmp    _02dab2_jump

	_02db63_jump:
		cmp    $0x000059,%ax
		je     _02e114_jump
		jmp    _02dab2_jump

	_02db72_jump:
		cmp    $0x00003d,%ax
		jb     _02dab2_jump
		jbe    _02dead_jump
		cmp    $0x00004d,%ax
		je     _02dc45_jump
		jmp    _02dab2_jump

	_02db91_jump:
		cmp    $0x00000e,%ax
		jb     _02dbc3_jump
		jbe    _02dee7_jump
		cmp    $0x000015,%ax
		jb     _02dbb4_jump
		jbe    _02dac1_case
		cmp    $0x000035,%ax
		je     _02dc26_jump
		jmp    _02dab2_jump

	_02dbb4_jump:
		cmp    $0x000014,%ax
		je     _02ddec_jump
		jmp    _02dab2_jump

	_02dbc3_jump:
		cmp    $0x000005,%ax
		jb     _02dab2_jump
		jbe    _02ddec_jump
		cmp    $0x00000c,%ax
		je     _02df07_jump
		jmp    _02dab2_jump

	_02dbe2_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %edx
		sar    %eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		mov    0x000004(%esp),%edi
		sar    $0x000010,%eax
		sub    $0x000010,%edi
		add    %edx,%eax
		mov    %di,0x000004(%esp)
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %ax,0x000008(%esp)
		addw   $0x000040,(%esp)
		jmp    _02dac1_case

	_02dc26_jump:
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		mov    %eax,%ebx
		add    %eax,%edx
		add    $0x0000c8,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,(%esp)
		jmp    _02dac1_case

	_02dc45_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d964_func
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02dac1_case
		cmpb   $0x000004,0x00006c(%esi)
		jne    _02dac1_case
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		shl    $0x000002,%eax
		add    %eax,%edx
		add    %ebx,%edx
		mov    %dx,(%esp)
		jmp    _02dac1_case

	_02dc96_jump:
		mov    0x000075(%esi),%al
		sub    $0x000002,%al
		cmp    $0x000005,%al
		ja     _02dac1_case
		and    $0x0000ff,%eax
		jmp    *%cs:_02d9a0_switch(,%eax,4)

	_02dcb0_case:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02dac1_case
		cmpb   $0x000000,0x00006c(%esi)
		jne    _02dac1_case
		xor    %eax,%eax
		mov    (%esp),%ecx
		mov    0x00007a(%esi),%al
		add    %eax,%ecx
		mov    %cx,(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x00007a(%esi),%al
		sub    %eax,%edi
		mov    %di,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x00007a(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		xor    %edx,%edx
		mov    0x00000a(%esp),%eax
		mov    0x00007a(%esi),%dl
		sar    $0x000010,%eax
		sar    %edx
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		jmp    _02dac1_case

	_02dd0c_case:
		mov    0x00006d(%esi),%ah
		cmp    $0x000001,%ah
		jne    _02dac1_case
		cmp    0x00006c(%esi),%ah
		jne    _02dac1_case
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		dec    %edx
		add    %edx,%eax
		mov    -0x000002(%esp),%edx
		mov    %ax,0x00000c(%esp)
		sar    $0x000010,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		mov    $0x000014,%edi
		add    %edx,%eax
		mov    %di,0x000008(%esp)
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x00007a(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		testb  $0x000008,0x000081(%esi)
		jne    _02dac1_case
		sub    %di,0x00000c(%esp)
		jmp    _02dac1_case

	_02dd7f_case:
		mov    (%esp),%ecx
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x00007a(%esi),%al
		mov    0x000006(%esp),%edx
		add    %ecx,%eax
		sar    $0x000010,%edx
		sub    %eax,%edi
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		mov    %eax,%edx
		add    %eax,%edx
		mov    %di,0x000004(%esp)
		mov    %dx,0x000008(%esp)
		xor    %eax,%eax
		mov    %ecx,%ebx
		mov    0x00007a(%esi),%al
		add    %eax,%ebx
		mov    %bx,(%esp)
		jmp    _02dac1_case

	_02ddca_case:
		xor    %eax,%eax
		mov    (%esp),%ebx
		mov    0x00007a(%esi),%al
		mov    0x000004(%esp),%ecx
		add    %ebx,%eax
		sub    %eax,%ecx
		mov    %cx,0x000004(%esp)
		xor    %eax,%eax
		mov    %ebx,%edi
		mov    0x00007a(%esi),%al
		add    %eax,%edi
		mov    %di,(%esp)

	_02ddec_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    0x000008(%esp),%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00000c(%esp),%ebx
		mov    0x00007a(%esi),%al
		sub    %eax,%ebx
		mov    %bx,0x00000c(%esp)
		jmp    _02dac1_case

	_02de13_jump:
		testb  $0x000008,0x000081(%esi)
		je     _02de25_jump
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		jmp    _02de2e_jump

	_02de25_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		neg    %edx

	_02de2e_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000004(%esp),%ebx
		mov    (%esp),%ecx
		sar    $0x000010,%eax
		sub    $0x000032,%ebx
		add    $0x000032,%ecx
		mov    %bx,0x000004(%esp)
		add    %edx,%eax
		mov    %cx,(%esp)
		mov    %ax,0x00000c(%esp)
		jmp    _02dac1_case

	_02de57_jump:
		cmpb   $0x000000,0x000076(%esi)
		je     _02dac1_case
		mov    _0cdb9a_data,%ax
		xor    %edx,%edx
		shl    $0x000004,%eax
		mov    %dx,0x000004(%esp)
		mov    %ax,(%esp)
		jmp    _02dac1_case

	_02de7a_jump:
		mov    0x000028(%esi),%dx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000068(%esi),%al
		mov    %bx,0x000004(%esp)
		add    %eax,%edx
		mov    _0cdb9a_data,%ax
		mov    %dx,0x00000c(%esp)
		mov    $0x000010,%edx
		shl    $0x000004,%eax
		mov    %dx,0x000008(%esp)
		mov    %ax,(%esp)
		jmp    _02dac1_case

	_02dead_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		lea    0x000008(%esp),%ebx
		sub    %edx,%eax
		lea    0x00000c(%esp),%edx
		mov    %ax,0x000004(%esp)
		jmp    _02daba_jump

	_02dee7_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)

	_02df07_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    0x000008(%esp),%ecx
		add    %eax,%eax
		add    %eax,%ecx
		mov    %cx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00000c(%esp),%edi
		mov    0x00007a(%esi),%al
		sub    %eax,%edi
		mov    %di,0x00000c(%esp)
		jmp    _02dac1_case

	_02df2e_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _02df54_jump
		xor    %edx,%edx
		mov    0x000006(%esp),%eax
		mov    0x00007a(%esi),%dl
		sar    $0x000010,%eax
		sar    %edx
		sar    %eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		jmp    _02df64_jump

	_02df54_jump:
		mov    0x000006(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sar    %edx

	_02df64_jump:
		add    %edx,%eax
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    -0x000002(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		mov    %ax,0x000008(%esp)
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		add    %edx,%eax
		mov    %ax,(%esp)
		jmp    _02dac1_case

	_02df9e_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d964_func
		mov    (%esp),%eax
		add    %eax,%eax
		mov    %ax,(%esp)
		jmp    _02dac1_case

	_02dfbb_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _02dfd6_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%ecx
		mov    0x00007a(%esi),%al
		sub    %eax,%ecx
		mov    %cx,0x00000c(%esp)
		jmp    _02dff3_jump

	_02dfd6_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    $0x000096,%edx
		add    %edx,%eax
		mov    %ax,0x00000c(%esp)

	_02dff3_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		add    $0x000096,%eax
		mov    -0x000002(%esp),%edx
		mov    %ax,0x000008(%esp)
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00007a(%esi),%al
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %ax,(%esp)
		jmp    _02dac1_case

	_02e030_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		mov    $0x000096,%ecx
		call   _02d964_func
		mov    %cx,(%esp)
		jmp    _02dac1_case

	_02e04d_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		mov    $0x000096,%ecx
		call   _02d964_func
		mov    0x00000c(%esp),%edi
		mov    0x000004(%esp),%eax
		mov    %cx,(%esp)
		add    $0x000046,%edi
		add    $0x000032,%eax
		mov    %di,0x00000c(%esp)
		mov    %ax,0x000004(%esp)
		jmp    _02dac1_case

	_02e084_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02e09c_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000018,%dl
		je     _02e0a8_jump
		cmp    $0x00001e,%dl
		je     _02e0a8_jump
		cmp    $0x00000b,%dl
		je     _02e0a8_jump

	_02e09c_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _02e0ce_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _02e0ce_jump

	_02e0a8_jump:
		mov    $0x00000a,%eax
		mov    0x00000c(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    %ax,(%esp)
		sub    $0x000028,%edx
		add    $0x000050,%ebx
		mov    %dx,0x00000c(%esp)
		mov    %bx,0x000008(%esp)
		jmp    _02dac1_case

	_02e0ce_jump:
		mov    $0x0000c8,%ebx
		mov    0x00000c(%esp),%ecx
		mov    0x000008(%esp),%edi
		mov    %bx,(%esp)
		sub    $0x000082,%ecx
		add    $0x000104,%edi
		mov    %cx,0x00000c(%esp)
		mov    %di,0x000008(%esp)
		jmp    _02dac1_case

	_02e0fa_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d964_func
		movw   $0x0000fa,(%esp)
		jmp    _02dac1_case

	_02e114_jump:
		addw   $0x000014,(%esp)
		jmp    _02dac1_case

	_02e11e_jump:
		cmp    $0x000001,%dh
		jne    _02e15e_jump
		movb   $0x000002,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e130_jump:
		mov    %dh,%bl
		inc    %bl
		mov    %bl,0x00007b(%esi)
		cmp    $0x000014,%bl
		jne    _02e15e_jump
		movb   $0x000002,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e149_jump:
		mov    0x000060(%esi),%cx
		movb   $0x000000,0x00007b(%esi)
		cmp    $0x000015,%cx
		jne    _02e15e_jump
		andb   $0x0000fe,0x000081(%esi)

	_02e15e_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e168_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000032(%eax),%edx
		mov    $0x0000cc,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		mov    0x000060(%ecx),%ax
		cmp    $0x00003c,%ax
		jb     _02e25c_jump
		jbe    _02e3a1_jump
		cmp    $0x00006d,%ax
		jb     _02e1f2_jump
		jbe    _02e30b_jump
		cmp    $0x000091,%ax
		jb     _02e1d3_jump
		jbe    _02e30b_jump
		cmp    $0x0000bc,%ax
		jb     _02e1c4_jump
		jbe    _02e30b_jump
		cmp    $0x0000f3,%ax
		je     _02e30b_jump
		jmp    _02e3bd_jump

	_02e1c4_jump:
		cmp    $0x0000a5,%ax
		je     _02e32f_jump
		jmp    _02e3bd_jump

	_02e1d3_jump:
		cmp    $0x00007b,%ax
		jb     _02e3bd_jump
		jbe    _02e369_jump
		cmp    $0x00008e,%ax
		je     _02e30b_jump
		jmp    _02e3bd_jump

	_02e1f2_jump:
		cmp    $0x000052,%ax
		jb     _02e22d_jump
		jbe    _02e30b_jump
		cmp    $0x000065,%ax
		jb     _02e3bd_jump
		jbe    _02e30b_jump
		cmp    $0x000069,%ax
		jb     _02e3bd_jump
		cmp    $0x00006b,%ax
		jbe    _02e30b_jump
		mov    %ecx,%eax
		call   _01db14_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e22d_jump:
		cmp    $0x00003f,%ax
		jb     _02e3bd_jump
		jbe    _02e30b_jump
		cmp    $0x000044,%ax
		jb     _02e3bd_jump
		cmp    $0x000045,%ax
		jbe    _02e30b_jump
		mov    %ecx,%eax
		call   _01db14_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e25c_jump:
		cmp    $0x000019,%ax
		jb     _02e2d3_jump
		cmp    $0x00001d,%ax
		jbe    _02e30b_jump
		cmp    $0x00002d,%ax
		jb     _02e2ae_jump
		jbe    _02e30b_jump
		cmp    $0x000039,%ax
		jb     _02e299_jump
		jbe    _02e316_jump
		cmp    $0x00003a,%ax
		je     _02e30b_jump
		mov    %ecx,%eax
		call   _01db14_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e299_jump:
		cmp    $0x00002f,%ax
		je     _02e30b_jump
		mov    %ecx,%eax
		call   _01db14_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e2ae_jump:
		cmp    $0x00001e,%ax
		jbe    _02e327_jump
		cmp    $0x000029,%ax
		jb     _02e3bd_jump
		cmp    $0x00002a,%ax
		jbe    _02e30b_jump
		mov    %ecx,%eax
		call   _01db14_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e2d3_jump:
		cmp    $0x000009,%ax
		jb     _02e2fc_jump
		jbe    _02e32f_jump
		cmp    $0x000010,%ax
		jb     _02e3bd_jump
		cmp    $0x000011,%ax
		jbe    _02e30b_jump
		cmp    $0x000016,%ax
		je     _02e30b_jump
		mov    %ecx,%eax
		call   _01db14_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e2fc_jump:
		test   %ax,%ax
		jbe    _02e32f_jump
		cmp    $0x000001,%ax
		jne    _02e3bd_jump

	_02e30b_jump:
		andb   $0x0000f7,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e316_jump:
		cmpb   $0x000004,0x00006c(%ecx)
		jne    _02e30b_jump
		mov    %ecx,%eax
		call   _01db14_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e327_jump:
		movb   $0x000001,0x00007f(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e32f_jump:
		mov    %ecx,%eax
		call   _01db14_func
		testb  $0x000008,0x000081(%ecx)
		je     _02e354_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05f030_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e354_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05f030_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e369_jump:
		mov    0x000075(%ecx),%al
		cmp    $0x000002,%al
		jb     _02e37c_jump
		cmp    $0x000003,%al
		jbe    _02e3c4_jump
		cmp    $0x000006,%al
		jb     _02e37c_jump
		cmp    $0x000007,%al
		jbe    _02e3c4_jump

	_02e37c_jump:
		mov    %ecx,%eax
		call   _01db14_func
		testb  $0x000008,0x000081(%ecx)
		je     _02e354_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05f030_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e3a1_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    $0x000007,%edx
		call   _01db14_func
		mov    %ecx,%eax
		call   _05f030_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e3bd_jump:
		mov    %ecx,%eax
		call   _01db14_func

	_02e3c4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e3c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    0x000052(%eax),%dx
		mov    0x000034(%eax),%bx
		mov    %edx,%ecx
		cmp    %bx,%dx
		je     _02e456_jump

	_02e3df_jump:
		movswl %cx,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000002,_092265_data(,%eax,4)
		je     _02e40f_jump
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		call   _0713e8_func
		test   %al,%al
		jne    _02e438_jump

	_02e40f_jump:
		mov    %ebx,%eax
		call   _05c7fc_func
		mov    0x000081(%ebx),%dh
		or     $0x000004,%dh
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		mov    $0x000001,%edx
		call   _053dbc_func
		mov    %ebx,%eax
		call   _02e168_func

	_02e438_jump:
		mov    0x000032(%ebx),%eax
		mov    _0ce434_data,%edx
		sar    $0x000010,%eax
		mov    %ecx,%esi
		mov    (%edx,%eax,2),%cx
		mov    %ebx,%eax
		call   _0575fc_func
		cmp    %cx,%si
		jne    _02e3df_jump

	_02e456_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e45c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce4b2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    _0ce57c_data,%dx
		xor    %esi,%esi
		test   %dx,%dx
		jle    _02e512_jump

	_02e48c_jump:
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		testb  $0x000004,_092264_data(,%edx,4)
		jne    _02e4e6_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000020,0x000007(%ebx,%edx,8)
		je     _02e4e6_jump
		mov    _0cedae_data,%ecx
		mov    _0cedac_data,%ebx
		mov    _0cedaa_data,%edx
		push   %eax
		mov    _0cedc8_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02c54c_func

	_02e4e6_jump:
		inc    %esi
		movswl %si,%eax
		mov    _0ce4b2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%edx
		mov    _0ce57c_data,%bx
		add    %edx,%eax
		cmp    %bx,%si
		jl     _02e48c_jump

	_02e512_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e518_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ce4b2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cc300_data,%esi
		add    %edx,%eax
		xor    %edi,%edi
		shl    $0x000002,%eax
		mov    _0ce57c_data,%dx
		add    %eax,%esi
		test   %dx,%dx
		jle    _02e77c_jump

	_02e54a_jump:
		cmpw   $0x000000,_0cedea_data
		jne    _02e77c_jump
		cmpw   $0x000000,_0cedd4_data
		jne    _02e77c_jump
		cmpb   $0x000000,_0cefc8_data
		jne    _02e77c_jump
		cmpb   $0x000000,_0cefca_data
		jne    _02e77c_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		testb  $0x000020,0x000007(%eax,%edx,8)
		je     _02e750_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		shl    $0x000002,%eax
		testb  $0x000010,_092266_data(%eax)
		jne    _02e6e3_jump
		cmpb   $0x000000,_0cdc21_data
		jne    _02e750_jump
		mov    _0cdbf8_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _02e750_jump
		xor    %edx,%edx
		mov    _0cdc11_data,%dl
		mov    _0cdbb0_data,%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0cdc10_data,%dl
		lea    0x000000(,%edx,8),%ecx
		mov    (%ebx),%edx
		testb  $0x000008,0x000007(%ecx,%edx,1)
		je     _02e750_jump
		testb  $0x000004,_092264_data(%eax)
		jne    _02e750_jump
		cmpw   $0x0000aa,0x000060(%esi)
		jne    _02e62b_jump
		mov    0x00006b(%esi),%cl
		cmp    $0x000003,%cl
		ja     _02e624_jump
		test   %cl,%cl
		jne    _02e62b_jump

	_02e624_jump:
		mov    $0xffffffff,%eax
		jmp    _02e66f_jump

	_02e62b_jump:
		cmpw   $0x000093,0x000060(%esi)
		jne    _02e640_jump
		cmpb   $0x000000,0x000076(%esi)
		je     _02e640_jump
		mov    $0xffffffff,%eax
		jmp    _02e66f_jump

	_02e640_jump:
		mov    _0cedc8_data,%eax
		mov    _0cedae_data,%ecx
		mov    _0cedac_data,%ebx
		mov    _0cedaa_data,%edx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02c54c_func

	_02e66f_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		je     _02e750_jump
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		imul   $0x000014,%edx,%edx
		mov    %esi,%eax
		call   *_0932ec_data(%edx)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000008,_092264_data(,%eax,4)
		je     _02e750_jump
		mov    _0cdbf8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02e750_jump
		cmpb   $0x000003,_0cdc11_data
		jne    _02e6c1_jump
		cmpb   $0x000020,_0cdc10_data
		je     _02e6c8_jump

	_02e6c1_jump:
		mov    $0x000001,%eax
		jmp    _02e6ca_jump

	_02e6c8_jump:
		xor    %eax,%eax

	_02e6ca_jump:
		test   %eax,%eax
		je     _02e750_jump
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02d60c_func
		jmp    _02e77c_jump

	_02e6e3_jump:
		cmpb   $0x000003,_0cdc11_data
		jne    _02e6f5_jump
		cmpb   $0x000020,_0cdc10_data
		je     _02e750_jump

	_02e6f5_jump:
		mov    0x000060(%esi),%dx
		cmp    $0x000051,%dx
		je     _02e706_jump
		cmp    $0x0000a9,%dx
		jne    _02e70a_jump

	_02e706_jump:
		xor    %eax,%eax
		jmp    _02e739_jump

	_02e70a_jump:
		mov    _0cedc8_data,%eax
		mov    _0cedae_data,%ecx
		mov    _0cedac_data,%ebx
		mov    _0cedaa_data,%edx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02c54c_func

	_02e739_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		je     _02e750_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		imul   $0x000014,%eax,%edx
		mov    %esi,%eax
		call   *_0932ec_data(%edx)

	_02e750_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0ce4b2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%esi
		mov    _0ce57c_data,%bx
		add    %eax,%esi
		cmp    %bx,%di
		jl     _02e54a_jump

	_02e77c_jump:
		cmpb   $0x000000,_0cdc21_data
		je     _02e78a_jump
		call   _02d5dc_func

	_02e78a_jump:
		mov    _0cdbf8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jle    _02e79e_jump
		decw   _0cdbfa_data

	_02e79e_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e7a4_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000010,_092266_data(,%eax,4)
		je     _02e84a_jump
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%edx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%edx),%al
		testb  $0x000020,0x000007(%ebx,%eax,8)
		je     _02e84a_jump
		cmpb   $0x000003,_0cdc11_data
		jne    _02e7f1_jump
		cmpb   $0x000020,_0cdc10_data
		je     _02e7f8_jump

	_02e7f1_jump:
		mov    $0x000001,%eax
		jmp    _02e7fa_jump

	_02e7f8_jump:
		xor    %eax,%eax

	_02e7fa_jump:
		test   %eax,%eax
		je     _02e84a_jump
		mov    _0cdbfa_data,%bx
		cmp    $0x00003c,%bx
		jge    _02e83c_jump
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		jne    _02e83c_jump
		mov    $0x000001,%eax
		call   _02d60c_func
		mov    _0cedb4_data,%dx
		cmp    $0x000003,%dx
		je     _02e84a_jump
		cmp    $0x000004,%dx
		je     _02e84a_jump
		movw   $0x00003c,_0cdbfa_data
		pop    %edx
		pop    %ebx
		ret    

	_02e83c_jump:
		xor    %eax,%eax
		call   _02d60c_func
		mov    %bx,_0cdbfa_data

	_02e84a_jump:
		pop    %edx
		pop    %ebx
		ret    



_02e850_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		xor    %ah,%ah
		lea    0x000010(%esp),%ecx
		mov    %ah,0x000024(%esp)
		lea    0x000020(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %edi,%eax
		call   _01d294_func
		mov    0x000060(%edi),%dx
		cmp    $0x000008,%dx
		je     _02e892_jump
		cmp    $0x000086,%dx
		je     _02e892_jump
		cmp    $0x0000a7,%dx
		jne    _02e8c6_jump

	_02e892_jump:
		mov    0x000014(%esp),%esi
		mov    0x000004(%esp),%eax
		mov    0x000010(%esp),%edx
		mov    0x000020(%esp),%ebx
		add    $0x00000a,%esi
		add    $0x000014,%eax
		sub    $0x000014,%edx
		sub    $0x000019,%ebx
		mov    %si,0x000014(%esp)
		mov    %ax,0x000004(%esp)
		mov    %dx,0x000010(%esp)
		mov    %bx,0x000020(%esp)
		jmp    _02e8f4_jump

	_02e8c6_jump:
		mov    0x000014(%esp),%eax
		mov    0x000004(%esp),%edx
		mov    0x000010(%esp),%ebx
		mov    0x000020(%esp),%ecx
		add    %esi,%eax
		add    %esi,%edx
		mov    %ax,0x000014(%esp)
		add    %esi,%esi
		mov    %dx,0x000004(%esp)
		sub    %esi,%ebx
		sub    %esi,%ecx
		mov    %bx,0x000010(%esp)
		mov    %cx,0x000020(%esp)

	_02e8f4_jump:
		mov    _0ce4b2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%esi
		shl    $0x000002,%eax
		xor    %ecx,%ecx
		add    %eax,%esi
		mov    _0ce57c_data,%ax
		mov    %cx,0x00001c(%esp)
		test   %ax,%ax
		jle    _02ebfe_jump

	_02e925_jump:
		cmp    %esi,%edi
		je     _02ebc5_jump
		mov    0x000060(%esi),%ax
		test   %ax,%ax
		jbe    _02e945_jump
		cmp    $0x0000d6,%ax
		je     _02ea8c_jump
		jmp    _02ebbe_jump

	_02e945_jump:
		mov    0x00006d(%esi),%cl
		cmp    $0x000002,%cl
		je     _02ebbe_jump
		test   %cl,%cl
		jne    _02e95b_jump
		cmpb   $0x000003,0x00006c(%esi)
		je     _02e962_jump

	_02e95b_jump:
		mov    $0x000001,%ebx
		jmp    _02e964_jump

	_02e962_jump:
		xor    %ebx,%ebx

	_02e964_jump:
		test   %ebx,%ebx
		je     _02ebbe_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _02ebbe_jump
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		test   %ax,%ax
		je     _02ebbe_jump
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    0x00000a(%esp),%eax
		mov    0x00001e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000e(%esp),%edx
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02ebbe_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x000004,0x000075(%esi)
		movw   $0x000000,0x00004c(%esi)
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x00000b,0x000074(%esi)
		or     $0x000020,%bh
		mov    %bh,0x000081(%esi)
		mov    _0cdbee_data,%ax
		cmp    0x000034(%edi),%ax
		jne    _02ea42_jump
		call   _06b108_func

	_02ea42_jump:
		cmpb   $0x000002,0x000070(%esi)
		jne    _02ea6e_jump
		testb  $0x000008,0x000081(%esi)
		je     _02ea5d_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _02ea67_jump

	_02ea5d_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_02ea67_jump:
		mov    %esi,%eax
		call   _05f030_func

	_02ea6e_jump:
		mov    $0x000009,%edx
		mov    %edi,%eax
		call   _01d364_func
		mov    $0x000001,%al
		movl   $0x000000,0x000024(%edi)
		mov    %al,0x000024(%esp)
		jmp    _02ebbe_jump

	_02ea8c_jump:
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		test   %ax,%ax
		je     _02ebbe_jump
		cmpw   $0x000068,0x000060(%edi)
		jne    _02ebbe_jump
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    0x00000a(%esp),%eax
		mov    0x00001e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000e(%esp),%edx
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02ebbe_jump
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02eb12_jump
		cmpb   $0x000006,0x00006c(%esi)
		je     _02eb19_jump

	_02eb12_jump:
		mov    $0x000001,%eax
		jmp    _02eb1b_jump

	_02eb19_jump:
		xor    %eax,%eax

	_02eb1b_jump:
		test   %eax,%eax
		je     _02ebbe_jump
		testb  $0x000008,0x000081(%edi)
		je     _02eb6f_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		mov    0x000028(%edi),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%edi),%dl
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _02eb50_jump
		mov    $0x000001,%eax
		jg     _02eb50_jump
		neg    %eax

	_02eb50_jump:
		test   %eax,%eax
		jl     _02eb6f_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %edi,%eax
		movb   $0x000001,0x00007d(%esi)
		call   _05f030_func
		movw   $0x000008,0x000040(%esi)

	_02eb6f_jump:
		testb  $0x000008,0x000081(%edi)
		jne    _02ebbe_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		lea    (%eax,%ecx,1),%edx
		mov    0x000028(%edi),%ebp
		xor    %eax,%eax
		sub    %ebp,%edx
		mov    0x000068(%edi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02eb9f_jump
		mov    $0x000001,%eax
		jg     _02eb9f_jump
		neg    %eax

	_02eb9f_jump:
		test   %eax,%eax
		jge    _02ebbe_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %edi,%eax
		movb   $0x000001,0x00007d(%esi)
		call   _05f030_func
		movw   $0x00fff8,0x000040(%esi)

	_02ebbe_jump:
		cmpb   $0x000000,0x000024(%esp)
		jne    _02ebfe_jump

	_02ebc5_jump:
		mov    0x00001c(%esp),%edx
		inc    %edx
		mov    %dx,0x00001c(%esp)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    _0ce4b2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%esi
		mov    _0ce57c_data,%bx
		add    %eax,%esi
		cmp    %bx,%dx
		jl     _02e925_jump

	_02ebfe_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02ec10_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		movswl %bx,%ebx
		mov    0x00002c(%eax),%esi
		add    %ebx,%esi
		mov    _0cdb96_data,%ebx
		sar    $0x000004,%esi
		sar    $0x000010,%ebx
		imul   %ebx,%esi
		mov    0x000028(%eax),%edi
		movswl %cx,%ebx
		add    %edi,%ebx
		sar    $0x000004,%ebx
		mov    0x000058(%eax),%cx
		add    %esi,%ebx
		xor    %edx,%edx
		cmp    %cx,%bx
		je     _02ec4d_jump
		mov    $0x000001,%edx
		mov    %bx,0x000058(%eax)

	_02ec4d_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_02ec54_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    0x000040(%eax),%di
		mov    $0x0000ff,%ah
		xor    %edx,%edx
		mov    %ah,0x000004(%esp)
		mov    0x000060(%ecx),%ax
		mov    %dx,(%esp)
		cmp    $0x00007b,%ax
		jb     _02ece8_jump
		jbe    _02ecc6_jump
		cmp    $0x0000ac,%ax
		jne    _02ece8_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _02ece8_jump
		mov    $0x00000f,%bh
		mov    $0x000002,%edx
		mov    %ecx,%eax
		mov    %bh,0x000004(%esp)
		mov    $0x000003,%ebx
		call   _01d374_func
		mov    $0x000005,%ebx
		mov    $0xfffffffd,%esi
		mov    %bx,(%esp)
		jmp    _02ece8_jump

	_02ecc6_jump:
		testb  $0x000002,0x00007d(%ecx)
		je     _02ece8_jump
		mov    $0x000001,%ah
		mov    $0x000005,%ebx
		mov    $0x000002,%edx
		mov    %ah,0x000004(%esp)
		mov    %ecx,%eax
		mov    $0xfffffffd,%esi
		call   _01d374_func

	_02ece8_jump:
		cmpb   $0x0000ff,0x000004(%esp)
		je     _02ed23_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000004(%esp),%dl
		call   _05f030_func
		movb   $0x000000,0x000071(%ecx)
		mov    %di,0x000040(%ecx)
		mov    (%esp),%al
		mov    0x00002c(%ecx),%edx
		mov    %si,0x000042(%ecx)
		sub    $0x00000c,%edx
		mov    %al,0x000072(%ecx)
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01e2ec_func

	_02ed23_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ed2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		call   _01d380_func
		mov    %eax,%edi
		mov    %ecx,%eax
		call   _01d4b0_func
		movswl %di,%edi
		movswl %ax,%esi
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _02ed78_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _02ed78_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _05f030_func

	_02ed78_jump:
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    0x000070(%ecx),%dl
		mov    %ah,0x000081(%ecx)
		cmp    $0x000014,%dl
		jne    _02ed9f_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_02ed9f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02eda8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		testb  $0x000080,_0ced80_data
		je     _02ee78_jump
		cmpw   $0x000003,_0cedb4_data
		je     _02ee78_jump
		xor    %eax,%eax
		mov    _0cdbd0_data,%edx
		mov    _0cdc0d_data,%al
		mov    0x00002c(%ecx),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000069(%ecx),%dl
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02ede8_jump
		neg    %eax

	_02ede8_jump:
		cmp    $0x0000fa,%eax
		jge    _02ee78_jump
		call   _06c47c_func
		mov    0x000034(%ecx),%ax
		mov    %ax,_0ced96_data
		mov    %ecx,%eax
		call   _077180_func
		cwtl   
		mov    %ax,0x00004e(%ecx)
		cmp    $0x000100,%eax
		jg     _02ee20_jump
		jne    _02ee28_jump
		testb  $0x000008,_0cdc25_data
		jne    _02ee28_jump

	_02ee20_jump:
		movw   $0x00ffff,0x000052(%ecx)
		jmp    _02ee2e_jump

	_02ee28_jump:
		movw   $0x000001,0x000052(%ecx)

	_02ee2e_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _02ee48_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _02ee48_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _05f030_func

	_02ee48_jump:
		mov    _0cdc30_data,%ecx
		xor    %bh,%bh
		mov    0x000081(%ecx),%al
		mov    %bh,_0cdcd2_data
		and    $0x0000fb,%al
		mov    %bh,_0cdcd1_data
		mov    %al,0x000081(%ecx)
		xor    %eax,%eax
		movl   $0x000000,0x000024(%ecx)
		call   _0646b4_func

	_02ee78_jump:
		pop    %ecx
		pop    %ebx
		ret    



_02ee7c_func:
		push   %ebx
		push   %edx
		cmpb   $0x000001,0x00006d(%eax)
		jne    _02ee9c_jump
		movw   $0x000000,0x000042(%eax)
		xor    %ebx,%ebx
		xor    %edx,%edx
		movw   $0x000000,0x000040(%eax)
		call   _01d374_func
		pop    %edx
		pop    %ebx
		ret    

	_02ee9c_jump:
		cmpw   $0x00000a,0x000060(%eax)
		jne    _02eeb5_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02eeb5_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _02eeb5_jump
		movw   $0x000000,0x000042(%eax)

	_02eeb5_jump:
		pop    %edx
		pop    %ebx
		ret    



_02eeb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		mov    0x000060(%ecx),%dx
		cmp    $0x000001,%ax
		je     _02ef4a_jump
		cmp    $0x000002,%ax
		je     _02ef4a_jump
		cmp    $0x00000b,%ax
		je     _02ef4a_jump
		cmp    $0x000016,%ax
		je     _02ef4a_jump
		cmp    $0x000003,%ax
		je     _02ef4a_jump
		cmp    $0x000009,%ax
		je     _02ef4a_jump
		cmp    $0x000004,%ax
		je     _02ef4a_jump
		cmp    $0x000005,%ax
		je     _02ef4a_jump
		cmp    $0x000006,%ax
		je     _02ef4a_jump
		cmp    $0x00000f,%ax
		je     _02ef4a_jump
		cmp    $0x000010,%ax
		je     _02ef4a_jump
		cmp    $0x000011,%ax
		je     _02ef4a_jump
		cmp    $0x00000c,%dx
		je     _02ef38_jump
		cmp    $0x00000e,%dx
		je     _02ef38_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func

	_02ef38_jump:
		mov    %ecx,%eax
		call   _053ce4_func
		mov    %ecx,%eax
		call   _0252c0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ef4a_jump:
		cmp    $0x000003,%ax
		je     _02ef56_jump
		cmp    $0x000006,%ax
		jne    _02ef6f_jump

	_02ef56_jump:
		mov    0x000081(%ecx),%ah
		movw   $0x00fff8,0x000042(%ecx)
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ef6f_jump:
		cmp    $0x00000b,%ax
		je     _02ef81_jump
		cmp    $0x000002,%ax
		je     _02ef81_jump
		cmp    $0x000016,%ax
		jne    _02efbe_jump

	_02ef81_jump:
		cmp    $0x00000e,%dx
		jb     _02ef9b_jump
		jbe    _02efa1_jump
		cmp    $0x00003c,%dx
		jb     _02efbe_jump
		jbe    _02efac_jump
		cmp    $0x00003d,%dx
		je     _02efb7_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ef9b_jump:
		cmp    $0x00000c,%dx
		jne    _02efbe_jump

	_02efa1_jump:
		mov    %ecx,%eax
		call   _076b88_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02efac_jump:
		mov    %ecx,%eax
		call   _02a74c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02efb7_jump:
		mov    %ecx,%eax
		call   _02a914_func

	_02efbe_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02efc4_func:
		push   %edx
		mov    0x000060(%eax),%dx
		cmp    $0x00000a,%dx
		jb     _02efd9_jump
		jbe    _02efe1_jump
		cmp    $0x000018,%dx
		je     _02f020_jump
		pop    %edx
		ret    

	_02efd9_jump:
		cmp    $0x000001,%dx
		je     _02f003_jump
		pop    %edx
		ret    

	_02efe1_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02f069_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _02f069_jump
		cmpb   $0x000003,0x000070(%eax)
		jne    _02f018_jump
		movw   $0x00fffe,0x000042(%eax)
		pop    %edx
		ret    

	_02f003_jump:
		mov    0x000070(%eax),%dl
		cmp    $0x000003,%dl
		jne    _02f013_jump
		movw   $0x00fffe,0x000042(%eax)
		pop    %edx
		ret    

	_02f013_jump:
		cmp    $0x000004,%dl
		jne    _02f069_jump

	_02f018_jump:
		movw   $0x000002,0x000042(%eax)
		pop    %edx
		ret    

	_02f020_jump:
		cmpb   $0x000002,0x000070(%eax)
		je     _02f069_jump
		mov    0x000048(%eax),%dx
		dec    %edx
		mov    %dx,0x000048(%eax)
		test   %dx,%dx
		jle    _02f051_jump
		mov    0x000070(%eax),%dh
		cmp    $0x000003,%dh
		jne    _02f044_jump
		movw   $0x00ffff,0x000042(%eax)
		pop    %edx
		ret    

	_02f044_jump:
		cmp    $0x000004,%dh
		jne    _02f069_jump
		movw   $0x000001,0x000042(%eax)
		pop    %edx
		ret    

	_02f051_jump:
		movw   $0x000000,0x000042(%eax)
		movw   $0x000000,0x000048(%eax)
		mov    0x00002c(%eax),%dx
		movb   $0x000002,0x000070(%eax)
		mov    %dx,0x00003e(%eax)

	_02f069_jump:
		pop    %edx
		ret    



_02f06c_func:
		cmpw   $0x000000,0x000060(%eax)
		jne    _02f086_jump
		cmpb   $0x000001,0x00006d(%eax)
		jne    _02f086_jump
		cmpb   $0x00000b,0x00006c(%eax)
		jne    _02f086_jump
		andb   $0x0000ef,0x000081(%eax)

	_02f086_jump:
		ret    



_02f088_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		call   _02f06c_func
		mov    0x000070(%edx),%al
		cmp    $0x000003,%al
		jb     _02f0b6_jump
		cmp    $0x000004,%al
		jbe    _02f10e_jump
		cmp    $0x000014,%al
		jb     _02f128_jump
		jbe    _02f118_jump
		pop    %edx
		pop    %ebx
		ret    

	_02f0b6_jump:
		cmp    $0x000001,%al
		jbe    _02f0c4_jump
		mov    %edx,%eax
		call   _02ee7c_func
		pop    %edx
		pop    %ebx
		ret    

	_02f0c4_jump:
		test   %al,%al
		jne    _02f0d1_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _02f0d8_jump

	_02f0d1_jump:
		orb    $0x000008,0x000081(%edx)

	_02f0d8_jump:
		cmp    $0x000001,%bx
		jne    _02f0ef_jump
		mov    %edx,%eax
		call   _053ce4_func
		mov    %edx,%eax
		call   _0252c0_func
		pop    %edx
		pop    %ebx
		ret    

	_02f0ef_jump:
		cmp    $0x000002,%bx
		jne    _02f0ff_jump
		mov    %edx,%eax
		call   _053ce4_func
		pop    %edx
		pop    %ebx
		ret    

	_02f0ff_jump:
		test   %bx,%bx
		jne    _02f128_jump
		mov    %edx,%eax
		call   _02eeb8_func
		pop    %edx
		pop    %ebx
		ret    

	_02f10e_jump:
		mov    %edx,%eax
		call   _02efc4_func
		pop    %edx
		pop    %ebx
		ret    

	_02f118_jump:
		mov    0x000056(%edx),%bx
		mov    %bx,0x000040(%edx)
		mov    0x00004a(%edx),%bx
		mov    %bx,0x000042(%edx)

	_02f128_jump:
		pop    %edx
		pop    %ebx
		ret    

_02f12c_switch:
		.long   _02f172_case
		.long   _02f198_case
		.long   _02f18a_case
		.long   _02f1ce_case
		.long   _02f1ce_case
		.long   _02f1b0_case




_02f144_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		cmpw   $0x000091,0x000060(%eax)
		jne    _02f1d2_jump
		mov    0x00006c(%eax),%al
		cmp    $0x000005,%al
		ja     _02f1ce_case
		and    $0x0000ff,%eax
		jmp    *%cs:_02f12c_switch(,%eax,4)

	_02f172_case:
		mov    0x000056(%esi),%cx
		dec    %cx
		mov    %cx,0x000056(%esi)
		jne    _02f1ce_case
		movb   $0x000003,0x00006c(%esi)
		movw   $0x00001e,0x000056(%esi)
		jmp    _02f1ce_case

	_02f18a_case:
		mov    0x000056(%esi),%di
		dec    %di
		mov    %di,0x000056(%esi)
		jne    _02f1ce_case
		jmp    _02f1bc_jump

	_02f198_case:
		mov    0x000056(%esi),%dx
		dec    %dx
		mov    %dx,0x000056(%esi)
		jne    _02f1ce_case
		movb   $0x000002,0x00006c(%esi)
		movw   $0x000005,0x000056(%esi)
		jmp    _02f1ce_case

	_02f1b0_case:
		mov    0x000056(%esi),%bx
		dec    %bx
		mov    %bx,0x000056(%esi)
		jne    _02f1ce_case

	_02f1bc_jump:
		movb   $0x000000,0x00006c(%esi)
		mov    0x000050(%esi),%ax
		movw   $0x000064,0x000050(%esi)
		mov    %ax,0x000056(%esi)

	_02f1ce_case:
		movb   $0x000000,0x000073(%esi)

	_02f1d2_jump:
		mov    _0cdbcc_data,%ax
		sub    0x000028(%esi),%ax
		mov    0x00002c(%esi),%bx
		mov    %eax,%edx
		mov    _0cdbd0_data,%ax
		sub    %ebx,%eax
		mov    0x000060(%esi),%cx
		mov    %eax,%ebx
		add    $0x000020,%edx
		add    $0x000019,%ebx
		cmp    $0x000091,%cx
		jne    _02f203_jump
		add    $0x000014,%edx
		add    $0x00000a,%ebx

	_02f203_jump:
		test   %dx,%dx
		setg   %al
		mov    %al,(%esp)
		test   %bx,%bx
		setg   %al
		mov    %al,0x000004(%esp)
		cmpb   $0x000000,(%esp)
		jne    _02f21e_jump
		neg    %edx

	_02f21e_jump:
		cmpb   $0x000000,0x000004(%esp)
		jne    _02f227_jump
		neg    %ebx

	_02f227_jump:
		cmp    $0x0000c8,%dx
		jle    _02f260_jump
		mov    $0x000001,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _02f23c_jump
		sar    %cl,%ax
		jmp    _02f245_jump

	_02f23c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02f245_jump:
		mov    $0x000001,%cl
		mov    %eax,%edx
		mov    %ebx,%eax
		test   %ax,%ax
		js     _02f255_jump
		sar    %cl,%ax
		jmp    _02f25e_jump

	_02f255_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02f25e_jump:
		mov    %eax,%ebx

	_02f260_jump:
		test   %bx,%bx
		jne    _02f28e_jump
		cmpb   $0x000000,(%esp)
		je     _02f275_jump
		mov    $0x00001b,%ecx
		jmp    _02f334_jump

	_02f275_jump:
		test   %dx,%dx
		je     _02f284_jump
		mov    $0x000009,%ecx
		jmp    _02f334_jump

	_02f284_jump:
		mov    $0xffffffff,%ecx
		jmp    _02f334_jump

	_02f28e_jump:
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		cmpb   $0x000000,(%esp)
		je     _02f2f3_jump
		cmpb   $0x000000,0x000004(%esp)
		je     _02f2db_jump
		cmp    $0x0000ff,%cx
		jle    _02f2cb_jump
		mov    $0x00001b,%ecx
		jmp    _02f334_jump

	_02f2cb_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _094784_data(%eax),%cl
		add    $0x00001b,%ecx
		jmp    _02f334_jump

	_02f2db_jump:
		cmp    $0x0000ff,%cx
		jle    _02f2e6_jump
		xor    %ecx,%ecx
		jmp    _02f334_jump

	_02f2e6_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _094784_data(%eax),%cl
		jmp    _02f334_jump

	_02f2f3_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _02f318_jump
		cmp    $0x0000ff,%cx
		jle    _02f308_jump
		mov    $0x000012,%ecx
		jmp    _02f334_jump

	_02f308_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _094784_data(%eax),%cl
		add    $0x000012,%ecx
		jmp    _02f334_jump

	_02f318_jump:
		cmp    $0x0000ff,%cx
		jle    _02f326_jump
		mov    $0x000009,%ecx
		jmp    _02f334_jump

	_02f326_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _094784_data(%eax),%cl
		add    $0x000009,%ecx

	_02f334_jump:
		cmpb   $0x000003,0x00006c(%esi)
		jne    _02f391_jump
		mov    0x000056(%esi),%di
		dec    %di
		mov    %di,0x000056(%esi)
		jne    _02f391_jump
		movb   $0x000001,0x00006c(%esi)
		mov    0x000036(%esi),%ax
		movw   $0x00003c,0x000056(%esi)
		movswl %ax,%ebx
		mov    0x000038(%esi),%dx
		cmp    $0xffffffcc,%ebx
		jle    _02f38b_jump
		movswl %dx,%ebx
		cmp    $0xffffffdc,%ebx
		jle    _02f38b_jump
		cmp    $0x000131,%ax
		jge    _02f38b_jump
		cmp    $0x0000c3,%dx
		jge    _02f38b_jump
		movswl %cx,%ebx
		mov    0x00002a(%esi),%edx
		mov    0x000026(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _077630_func
		jmp    _02f391_jump

	_02f38b_jump:
		movw   $0x000028,0x000050(%esi)

	_02f391_jump:
		movswl %cx,%eax
		cmp    $0xffffffff,%eax
		je     _02f39e_jump
		dec    %cl
		mov    %cl,0x00006b(%esi)

	_02f39e_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f3a8_func:
		push   %ebx
		mov    %eax,%ebx
		mov    0x000076(%eax),%ah
		dec    %ah
		mov    %ah,0x000076(%ebx)
		je     _02f3c9_jump
		mov    $0x000005,%edx
		mov    %ebx,%eax
		call   _01d364_func
		movw   $0x000032,0x000056(%ebx)
		pop    %ebx
		ret    

	_02f3c9_jump:
		mov    $0x000006,%edx
		mov    %ebx,%eax
		call   _01d364_func
		pop    %ebx
		ret    

_02f3d8_switch:
		.long   _02f55e_case
		.long   _02f5ba_case
		.long   _02f40b_case
		.long   _02f4b2_case


	_02f40b_case:
		mov    0x000028(%eax),%ebp
		xor    %ecx,%ecx
		mov    0x00002c(%eax),%edi
		mov    0x000068(%eax),%cl
		mov    _0cdb96_data,%eax
		sar    $0x000004,%edi
		sar    $0x000010,%eax
		imul   %edi,%eax
		add    %ebp,%ecx
		sub    $0x000008,%ecx
		sar    $0x000004,%ecx
		lea    (%ecx,%eax,1),%edi
		lea    0x000000(,%edi,4),%ecx
		sub    %edi,%ecx
		mov    _0cdba0_data,%edi
		mov    0x000002(%edi,%ecx,2),%cl
		and    $0x0000ff,%ecx
		testb  $0x000001,_092224_data(%ecx)
		je     _02f456_jump
		mov    $0x000001,%esi

	_02f456_jump:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%eax
		mov    0x000068(%ebx),%cl
		lea    (%ecx,%eax,1),%edi
		mov    0x00002c(%ebx),%ebx
		mov    _0cdb96_data,%ecx
		sar    $0x000004,%ebx
		sar    $0x000010,%ecx
		imul   %ecx,%ebx
		add    $0x000007,%edi
		sar    $0x000004,%edi
		lea    (%edi,%ebx,1),%ecx
		lea    0x000000(,%ecx,4),%ebx
		sub    %ecx,%ebx
		mov    _0cdba0_data,%ecx
		mov    0x000002(%ecx,%ebx,2),%bl
		and    $0x0000ff,%ebx
		testb  $0x000001,_092224_data(%ebx)
		je     _02f616_jump
		mov    $0x000001,%esi
		mov    %esi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02f4b2_case:
		xor    %ecx,%ecx
		mov    0x000028(%eax),%edx
		mov    0x000068(%eax),%cl
		lea    (%ecx,%edx,1),%edi
		mov    0x00002c(%eax),%ecx
		add    $0x00009a,%ecx
		mov    _0cdb96_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		sub    $0x000008,%edi
		sar    $0x000004,%edi
		add    %ecx,%edi
		lea    0x000000(,%edi,4),%ecx
		sub    %edi,%ecx
		mov    _0cdba0_data,%edi
		mov    0x000002(%edi,%ecx,2),%cl
		and    $0x0000ff,%ecx
		testb  $0x000001,_092224_data(%ecx)
		je     _02f503_jump
		mov    $0x000001,%esi

	_02f503_jump:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%edi
		mov    0x000068(%ebx),%cl
		mov    0x00002c(%ebx),%ebx
		add    %ecx,%edi
		mov    _0cdb96_data,%ecx
		sar    $0x000004,%ebx
		sar    $0x000010,%ecx
		imul   %ecx,%ebx
		add    $0x000007,%edi
		sar    $0x000004,%edi
		lea    (%edi,%ebx,1),%ecx
		lea    0x000000(,%ecx,4),%ebx
		sub    %ecx,%ebx
		mov    _0cdba0_data,%ecx
		mov    0x000002(%ecx,%ebx,2),%bl
		and    $0x0000ff,%ebx
		testb  $0x000001,_092224_data(%ebx)
		je     _02f616_jump
		mov    $0x000001,%esi
		mov    %esi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02f55e_case:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x000068(%ebx),%cl
		add    %ebp,%ecx
		sub    $0x000010,%ecx
		sar    $0x000004,%ecx
		mov    $0x000006,%edx
		mov    %ecx,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp

	_02f57b_jump:
		movswl %dx,%ecx
		add    0x00002c(%ebx),%ecx
		mov    _0cdb96_data,%edi
		sar    $0x000004,%ecx
		sar    $0x000010,%edi
		imul   %edi,%ecx
		add    %ebp,%ecx
		imul   $0x000006,%ecx,%ecx
		mov    _0cdba0_data,%edi
		movzbl 0x000002(%ecx,%edi,1),%edi
		testb  $0x000001,_092224_data(%edi)
		je     _02f5ae_jump
		mov    $0x000001,%esi

	_02f5ae_jump:
		inc    %eax
		add    $0x000010,%edx
		cmp    $0x00000a,%ax
		jge    _02f616_jump
		jmp    _02f57b_jump

	_02f5ba_case:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%edi
		mov    0x000068(%ebx),%cl
		add    %edi,%ecx
		add    $0x000010,%ecx
		sar    $0x000004,%ecx
		mov    $0x000006,%edx
		mov    %ecx,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%ebp

	_02f5d9_jump:
		movswl %dx,%ecx
		add    0x00002c(%ebx),%ecx
		mov    _0cdb96_data,%edi
		sar    $0x000004,%ecx
		sar    $0x000010,%edi
		imul   %edi,%ecx
		add    %ebp,%ecx
		imul   $0x000006,%ecx,%ecx
		mov    _0cdba0_data,%edi
		movzbl 0x000002(%ecx,%edi,1),%edi
		testb  $0x000001,_092224_data(%edi)
		je     _02f60c_jump
		mov    $0x000001,%esi

	_02f60c_jump:
		inc    %eax
		add    $0x000010,%edx
		cmp    $0x00000a,%ax
		jl     _02f5d9_jump

	_02f616_jump:
		mov    %esi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02f624_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _02f088_func
		cmpb   $0x000004,0x00006c(%edx)
		jne    _02f691_jump
		cmpb   $0x00000e,0x00006b(%edx)
		jne    _02f691_jump
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%edx),%al
		mov    0x000005(%ebx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _02f691_jump
		mov    0x000034(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff60,%eax
		jle    _02f691_jump
		cmpw   $0x0000fa,0x000036(%edx)
		jge    _02f691_jump
		cmpw   $0x000064,0x000038(%edx)
		jge    _02f691_jump
		mov    0x00002c(%edx),%ebx
		add    $0x000056,%ebx
		mov    %edx,%eax
		mov    %ebx,0x00002c(%edx)
		call   _053b78_func
		subl   $0x000056,0x00002c(%edx)

	_02f691_jump:
		pop    %edx
		pop    %ebx
		ret    



_02f694_func:
		push   %edx
		testb  $0x000080,_0ced81_data
		jne    _02f6cc_jump
		mov    _0cee26_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02f6cc_jump
		mov    _0cee28_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02f6cc_jump
		mov    _0cdc11_data,%dl
		test   %dl,%dl
		je     _02f6c7_jump
		cmp    $0x000001,%dl
		jne    _02f6cc_jump

	_02f6c7_jump:
		call   _0591d0_func

	_02f6cc_jump:
		pop    %edx
		ret    

_02f6d0_switch:
		.long   _02f87c_case
		.long   _02f943_case
		.long   _02f718_case
		.long   _02f7c7_case




_02f6e0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		xor    %ecx,%ecx
		mov    0x000028(%eax),%si
		mov    0x000068(%eax),%cl
		xor    %ebx,%ebx
		mov    %ecx,%edi
		mov    0x00002c(%eax),%cx
		add    %esi,%edi
		movzbw 0x000074(%eax),%si
		sub    $0x000019,%edi
		add    %ecx,%esi
		cmp    $0x000003,%dx
		ja     _02fa03_jump
		xor    %eax,%eax
		mov    %dx,%ax
		jmp    *%cs:_02f6d0_switch(,%eax,4)

	_02f718_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000003,%edx
		jge    _02fa03_jump
		mov    _0cdb96_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %di,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cdba0_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_092224_data(%edx)
		je     _02f76f_jump
		mov    $0x000001,%ebx

	_02f76f_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cdba0_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_092224_data(%edx)
		je     _02f797_jump
		mov    $0x000001,%ebx

	_02f797_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _02fa03_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02f7c7_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x00000c,%edx
		jle    _02fa03_jump
		add    $0x000030,%ecx
		mov    _0cdb96_data,%edx
		sar    $0x000004,%ecx
		sar    $0x000010,%edx
		imul   %ecx,%edx
		movswl %di,%eax
		sar    $0x000004,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0cdba0_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _02f821_jump
		mov    $0x000001,%ebx

	_02f821_jump:
		inc    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ecx
		mov    _0cdba0_data,%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _02f84a_jump
		mov    $0x000001,%ebx

	_02f84a_jump:
		inc    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _02fa03_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02f87c_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x000003,%edx
		jge    _02fa03_jump
		movswl %si,%eax
		mov    _0cdb96_data,%edx
		add    %edi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %eax,%edx
		sar    $0x000004,%ecx
		add    %ecx,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		mov    _0cdba0_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _02f8d6_jump
		mov    $0x000001,%ebx

	_02f8d6_jump:
		mov    _0cdb96_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0cdba0_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _02f906_jump
		mov    $0x000001,%ebx

	_02f906_jump:
		mov    _0cdb96_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cdba0_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _02fa03_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02f943_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x00000c,%edx
		jle    _02fa03_jump
		movswl %si,%eax
		mov    _0cdb96_data,%edx
		add    %edi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		add    $0x000003,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cdba0_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_092224_data(%edx)
		je     _02f9a0_jump
		mov    $0x000001,%ebx

	_02f9a0_jump:
		mov    _0cdb96_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cdba0_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_092224_data(%edx)
		je     _02f9d2_jump
		mov    $0x000001,%ebx

	_02f9d2_jump:
		mov    _0cdb96_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _02fa03_jump
		mov    $0x000001,%ebx

	_02fa03_jump:
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02fa0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02fbcb_jump
		cmpb   $0x00000c,0x00006c(%ecx)
		jne    _02fbcb_jump
		mov    %ecx,%eax
		call   _01d380_func
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _01d4b0_func
		movswl %dx,%edi
		movswl %ax,%esi
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _02fa6e_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _02fa6e_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _05f030_func

	_02fa6e_jump:
		mov    0x000081(%ecx),%dh
		and    $0x0000f7,%dh
		mov    0x000070(%ecx),%bl
		mov    %dh,0x000081(%ecx)
		cmp    $0x000014,%bl
		jne    _02fa8d_jump
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_02fa8d_jump:
		mov    _0cdbee_data,%dx
		mov    0x000034(%ecx),%bx
		xor    %eax,%eax
		cmp    %bx,%dx
		jne    _02fb0a_jump
		xor    %ebx,%edx
		mov    0x000028(%ecx),%si
		mov    0x000068(%ecx),%dl
		add    %edx,%esi
		xor    %edx,%edx
		mov    _0cdbcc_data,%di
		mov    _0cdc0c_data,%dl
		add    %edi,%edx
		sub    %esi,%edx
		test   %dx,%dx
		jle    _02fae7_jump
		cmp    $0x00000a,%dx
		jle    _02fad1_jump
		mov    $0x000001,%eax

	_02fad1_jump:
		cmp    $0x00000f,%dx
		jle    _02fad8_jump
		inc    %eax

	_02fad8_jump:
		cmp    $0x000012,%dx
		jle    _02fadf_jump
		inc    %eax

	_02fadf_jump:
		cmp    $0x00002a,%dx
		jle    _02fb0a_jump
		jmp    _02fb08_jump

	_02fae7_jump:
		neg    %edx
		cmp    $0x00000a,%dx
		jle    _02faf4_jump
		mov    $0xffffffff,%eax

	_02faf4_jump:
		cmp    $0x00000f,%dx
		jle    _02fafb_jump
		dec    %eax

	_02fafb_jump:
		cmp    $0x000012,%dx
		jle    _02fb02_jump
		dec    %eax

	_02fb02_jump:
		cmp    $0x000029,%dx
		jle    _02fb0a_jump

	_02fb08_jump:
		xor    %eax,%eax

	_02fb0a_jump:
		mov    %ax,0x000040(%ecx)
		cmpw   $0x000000,0x000042(%ecx)
		jge    _02fb99_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _02f6e0_func
		test   %ax,%ax
		je     _02fb95_jump
		mov    0x000050(%ecx),%dx
		movw   $0x000000,0x000042(%ecx)
		inc    %edx
		mov    %dx,0x000050(%ecx)
		cmp    $0x0000f0,%dx
		jle    _02fb99_jump
		mov    0x00002c(%ecx),%edx
		sub    $0x000050,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _076fac_func
		mov    0x000032(%ecx),%edx
		mov    $0x000073,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		mov    0x00003a(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00003c(%ecx),%edx
		mov    $0x000004,%ebx
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _077338_func
		jmp    _02fb99_jump

	_02fb95_jump:
		mov    %ax,0x000050(%ecx)

	_02fb99_jump:
		mov    0x000040(%ecx),%si
		test   %si,%si
		jle    _02fbb5_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _02f6e0_func
		test   %ax,%ax
		je     _02fbcb_jump
		jmp    _02fbc5_jump

	_02fbb5_jump:
		jge    _02fbcb_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _02f6e0_func
		test   %ax,%ax
		je     _02fbcb_jump

	_02fbc5_jump:
		movw   $0x000000,0x000040(%ecx)

	_02fbcb_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02fbd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    0x000056(%eax),%ax
		add    %ax,0x00003c(%edx)

	_02fbe3_jump:
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02fbef_jump
		neg    %eax

	_02fbef_jump:
		cmp    $0x000080,%eax
		jl     _02fc2b_jump
		cmpw   $0x000000,0x000056(%edx)
		jle    _02fc14_jump
		mov    0x000028(%edx),%ecx
		mov    0x00003c(%edx),%ax
		inc    %ecx
		sub    $0x000080,%eax
		mov    %ecx,0x000028(%edx)
		mov    %ax,0x00003c(%edx)
		jmp    _02fbe3_jump

	_02fc14_jump:
		mov    0x000028(%edx),%ebx
		mov    0x00003c(%edx),%di
		dec    %ebx
		add    $0x000080,%edi
		mov    %ebx,0x000028(%edx)
		mov    %di,0x00003c(%edx)
		jmp    _02fbe3_jump

	_02fc2b_jump:
		mov    0x00004a(%edx),%ax
		add    %ax,0x00003e(%edx)

	_02fc33_jump:
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02fc3f_jump
		neg    %eax

	_02fc3f_jump:
		cmp    $0x000080,%eax
		jl     _02fc7b_jump
		cmpw   $0x000000,0x00004a(%edx)
		jle    _02fc64_jump
		mov    0x00002c(%edx),%edi
		mov    0x00003e(%edx),%si
		inc    %edi
		sub    $0x000080,%esi
		mov    %edi,0x00002c(%edx)
		mov    %si,0x00003e(%edx)
		jmp    _02fc33_jump

	_02fc64_jump:
		mov    0x00002c(%edx),%esi
		mov    0x00003e(%edx),%cx
		dec    %esi
		add    $0x000080,%ecx
		mov    %esi,0x00002c(%edx)
		mov    %cx,0x00003e(%edx)
		jmp    _02fc33_jump

	_02fc7b_jump:
		mov    %edx,%eax
		call   _01db8c_func
		mov    0x000076(%edx),%al
		dec    %al
		mov    %al,0x00006b(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02fc90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		cmp    $0x000001,%al
		jbe    _02fca4_jump
		cmp    $0x000002,%al
		jne    _02fcc6_jump
		jmp    _02fcb8_jump

	_02fca4_jump:
		test   %al,%al
		jne    _02fcb1_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02fcb8_jump

	_02fcb1_jump:
		orb    $0x000008,0x000081(%ecx)

	_02fcb8_jump:
		mov    %ecx,%eax
		call   _053ce4_func
		mov    %ecx,%eax
		call   _0252c0_func

	_02fcc6_jump:
		cmpw   $0x000000,0x000040(%ecx)
		je     _02fd42_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000008,%eax
		xor    %edx,%edx
		movswl %ax,%esi
		mov    0x000068(%ecx),%dl
		mov    %esi,%ebx
		mov    %ecx,%eax
		movzbw 0x000068(%ecx),%di
		call   _02ec10_func
		test   %ax,%ax
		je     _02fd42_jump
		movswl %di,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _02fd42_jump
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		jne    _02fd29_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		or     $0x000008,%bh
		mov    $0x000002,%edx
		mov    %bh,0x000081(%ecx)
		mov    $0x000001,%ebx
		jmp    _02fd3d_jump

	_02fd29_jump:
		mov    %dh,%bl
		and    $0x0000f7,%bl
		mov    %bl,0x000081(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_02fd3d_jump:
		call   _05f030_func

	_02fd42_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02fd48_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cedd8_data,%eax
		sar    $0x000010,%eax
		mov    _0cee0e_data,%edx
		add    $0x0000be,%eax
		mov    _0cc304_data,%bx
		mov    %eax,0x00002c(%ecx)
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%al
		movw   $0x000082,0x000050(%ecx)
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %edx,0x000028(%ecx)
		mov    _0cc300_data,%edx
		test   %bx,%bx
		jle    _02fdf7_jump

	_02fd8a_jump:
		cmpw   $0x00009d,0x000060(%edx)
		jne    _02fdeb_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _02fdeb_jump
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000040(%edx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%edx)
		mov    0x000028(%ecx),%eax
		add    $0x000065,%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01db8c_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%bl
		movb   $0x000001,0x00006c(%edx)
		or     $0x000004,%bl
		mov    %bl,0x000081(%edx)
		jmp    _02fdf7_jump

	_02fdeb_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _02fd8a_jump

	_02fdf7_jump:
		movw   $0x000000,0x0000c6(%edx)
		mov    0x000105(%edx),%bh
		movw   $0x000000,0x0000c4(%edx)
		and    $0x0000f7,%bh
		mov    %bh,0x000105(%edx)
		mov    0x000028(%ecx),%eax
		add    $0x0000ca,%eax
		mov    %eax,0x0000ac(%edx)
		add    $0x000084,%edx
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01db8c_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%al
		movb   $0x000002,0x00006c(%edx)
		or     $0x000004,%al
		mov    %al,0x000081(%edx)
		movw   $0x000000,0x0000c6(%edx)
		mov    0x000105(%edx),%ah
		movw   $0x000000,0x0000c4(%edx)
		and    $0x0000f7,%ah
		mov    %ah,0x000105(%edx)
		mov    0x000028(%ecx),%eax
		add    $0x00012f,%eax
		mov    %eax,0x0000ac(%edx)
		add    $0x000084,%edx
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01db8c_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%bl
		movb   $0x000003,0x00006c(%edx)
		or     $0x000004,%bl
		mov    %bl,0x000081(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02fec0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edx
		testb  $0x000004,_0cdc25_data
		je     _03019a_jump
		cmpb   $0x000003,_0cdc11_data
		jne    _02fee7_jump
		cmpb   $0x000017,_0cdc10_data
		je     _02feee_jump

	_02fee7_jump:
		mov    $0x000001,%eax
		jmp    _02fef0_jump

	_02feee_jump:
		xor    %eax,%eax

	_02fef0_jump:
		test   %eax,%eax
		je     _03019a_jump
		mov    _0cede4_data,%ax
		cmp    $0x000003,%ax
		jb     _02ff19_jump
		jbe    _02ffbc_jump
		cmp    $0x000005,%ax
		jbe    _0300b4_jump
		jmp    _0301a6_jump

	_02ff19_jump:
		cmp    $0x000001,%ax
		jne    _0301a6_jump
		mov    0x000076(%edx),%al
		test   %al,%al
		jbe    _02ff43_jump
		cmp    $0x000001,%al
		jne    _02ffb4_jump
		sub    %al,%al
		mov    %al,0x000076(%edx)
		mov    %edx,%eax
		call   _02fd48_func
		jmp    _0301a6_jump

	_02ff43_jump:
		cmpw   $0x000028,0x000050(%edx)
		jg     _02ff6a_jump
		mov    _0cedd4_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0cc300_data,%eax
		shl    $0x000002,%ebx
		cmpw   $0x000001,0x000056(%ebx,%eax,1)
		jne    _02ffa9_jump

	_02ff6a_jump:
		cmpb   $0x000000,_0cef4f_data
		je     _02ff8a_jump
		testb  $0x000004,_0cdc25_data
		je     _02ff8a_jump
		cmpl   $0x000078,0x00002c(%edx)
		jle    _02ff8a_jump
		movw   $0x00ffff,0x000042(%edx)
		jmp    _02ff90_jump

	_02ff8a_jump:
		movw   $0x000000,0x000042(%edx)

	_02ff90_jump:
		mov    0x000050(%edx),%si
		test   %si,%si
		jle    _0301a6_jump
		mov    %esi,%edi
		dec    %edi
		mov    %di,0x000050(%edx)
		jmp    _0301a6_jump

	_02ffa9_jump:
		movw   $0x000000,0x000042(%edx)
		jmp    _0301a6_jump

	_02ffb4_jump:
		decb   0x000076(%edx)
		jmp    _0301a6_jump

	_02ffbc_jump:
		mov    _0cede4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _030060_jump
		mov    _0cee28_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _030027_jump
		mov    _0cedfa_data,%ax
		add    $0x000078,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00002c(%edx),%ebx
		mov    0x00003c(%edx),%eax
		sub    $0x000064,%ebx
		sar    $0x000010,%eax
		cmp    %eax,%ebx
		jle    _02fffd_jump
		subl   $0x000003,0x00002c(%edx)

	_02fffd_jump:
		decl   0x00002c(%edx)
		mov    0x00003c(%edx),%eax
		mov    0x00002c(%edx),%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _03001c_jump
		cmpb   $0x000000,_0cef4f_data
		je     _03001c_jump
		lea    -0x000001(%ebx),%ecx
		mov    %ecx,0x00002c(%edx)

	_03001c_jump:
		movw   $0x000001,0x000056(%edx)
		jmp    _0300a7_jump

	_030027_jump:
		cmpw   $0x000001,0x000056(%edx)
		jne    _03004b_jump
		xor    %eax,%eax
		mov    _0cdbd0_data,%bx
		mov    _0cdc0d_data,%al
		add    %ebx,%eax
		movw   $0x000000,0x000056(%edx)
		sub    $0x00001e,%eax
		mov    %ax,0x00003e(%edx)

	_03004b_jump:
		mov    0x00003c(%edx),%eax
		mov    0x00002c(%edx),%esi
		sar    $0x000010,%eax
		cmp    %esi,%eax
		jge    _0300a7_jump
		lea    -0x000001(%esi),%edi
		mov    %edi,0x00002c(%edx)
		jmp    _0300a7_jump

	_030060_jump:
		mov    %eax,%ebx
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc300_data,%ebx
		cmpb   $0x000000,0x000076(%ebx,%eax,4)
		jbe    _0300a7_jump
		mov    _0cedd8_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edx),%ebx
		add    $0x000078,%eax
		cmp    %ebx,%eax
		jle    _0300a7_jump
		mov    0x00003a(%edx),%bx
		add    $0x00000e,%ebx
		mov    %bx,0x00003a(%edx)
		cmp    $0x000010,%bx
		jle    _0300a7_jump
		mov    %ebx,%esi
		mov    0x00002c(%edx),%ecx
		sub    $0x000010,%esi
		inc    %ecx
		mov    %si,0x00003a(%edx)
		mov    %ecx,0x00002c(%edx)

	_0300a7_jump:
		mov    0x00002c(%edx),%ax
		sub    $0x000078,%eax
		mov    %ax,_0cedc6_data

	_0300b4_jump:
		mov    0x000034(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff5a,%eax
		jge    _03012f_jump
		mov    0x000028(%edx),%eax
		mov    0x00006c(%edx),%bl
		add    $0x0001f9,%eax
		inc    %bl
		mov    %eax,0x000028(%edx)
		mov    %bl,0x00006c(%edx)
		cmp    $0x000003,%bl
		jbe    _0300dd_jump
		movb   $0x000000,0x00006c(%edx)

	_0300dd_jump:
		cmpw   $0x000008,_0cedd0_data
		jne    _0301a6_jump
		mov    _0cede4_data,%cx
		cmp    $0x000005,%cx
		jne    _0301a6_jump
		sub    %cx,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0cedd8_data,%eax
		mov    _0cc5b0_data,%ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%ecx
		sub    $0x000050,%eax
		cmp    %ecx,%eax
		jle    _0301a6_jump
		mov    %eax,0x00002c(%edx)
		jmp    _0301a6_jump

	_03012f_jump:
		cmpw   $0x00016e,0x000036(%edx)
		jle    _0301a6_jump
		mov    0x000028(%edx),%esi
		mov    0x00006c(%edx),%al
		sub    $0x0001f9,%esi
		dec    %al
		mov    %esi,0x000028(%edx)
		mov    %al,0x00006c(%edx)
		cmp    $0x000003,%al
		jbe    _030157_jump
		movb   $0x000003,0x00006c(%edx)

	_030157_jump:
		cmpw   $0x000008,_0cedd0_data
		jne    _0301a6_jump
		mov    _0cede4_data,%di
		cmp    $0x000005,%di
		jne    _0301a6_jump
		add    %di,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0cedd8_data,%eax
		mov    _0cc5b0_data,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    0x00002c(%edx),%ebp
		sub    $0x000050,%eax
		cmp    %ebp,%eax
		jle    _0301a6_jump
		mov    %eax,0x00002c(%edx)
		jmp    _0301a6_jump

	_03019a_jump:
		movw   $0x000000,0x000042(%edx)
		movw   $0x000000,0x000040(%edx)

	_0301a6_jump:
		mov    _0cedd8_data,%eax
		mov    _0cc5b0_data,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    0x00002c(%edx),%ebp
		sub    $0x000050,%eax
		cmp    %ebp,%eax
		jle    _0301c3_jump
		mov    %eax,0x00002c(%edx)

	_0301c3_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0301cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		mov    _0ce434_data,%ebx
		mov    0x000032(%eax),%edx
		movzbl 0x00006d(%eax),%ebp
		sar    $0x000010,%edx
		shl    $0x000002,%ebp
		mov    (%ebx,%edx,2),%dx
		mov    0x00000c(%eax),%ebx
		add    %ebx,%ebp
		xor    %ebx,%ebx
		mov    0x000000(%ebp),%ebp
		mov    0x00006c(%eax),%bl
		movzbl 0x000002(%ebp,%ebx,8),%ebp
		lea    0x000000(,%ebp,4),%ebx
		sub    %ebp,%ebx
		mov    0x000004(%eax),%ebp
		mov    0x00000a(%ebp,%ebx,4),%bl
		mov    %bl,0x000008(%esp)
		mov    0x000034(%eax),%bx
		xor    %edi,%edi
		cmp    %bx,%dx
		je     _0302e0_jump
		mov    %edi,0x000004(%esp)
		xor    %esi,%esi

	_030229_jump:
		movswl %dx,%ebp
		imul   $0x000084,%ebp,%edx
		mov    0x000004(%esp),%eax
		mov    _0cc300_data,%ebx
		add    $0x000020,%eax
		add    %edx,%ebx
		mov    %eax,0x000004(%esp)
		mov    0x000081(%ebx),%ah
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ebx)
		mov    0x00006b(%ecx),%dl
		mov    %edx,(%esp)
		inc    %edi
		mov    (%esp),%eax
		movswl %di,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %dl,0x00006b(%ebx)
		xor    %edx,%edx
		mov    0x000076(%ecx),%dl
		mov    0x000004(%esp),%eax
		sub    $0x000002,%edx
		imul   %edx,%eax
		mov    0x00003c(%ecx),%dx
		add    %eax,%edx
		mov    %dx,0x00003c(%ebx)
		mov    0x00003e(%ecx),%dx
		mov    %dx,0x00003e(%ebx)
		add    $0x000100,%esi
		mov    0x000050(%ecx),%dx
		sub    %esi,%edx
		mov    %dx,0x000050(%ebx)
		mov    0x00003a(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%ebx)
		mov    0x00003c(%ebx),%edx
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ebx)
		call   _01db8c_func
		mov    _0ce434_data,%ebx
		mov    (%ebx,%ebp,2),%dx
		cmp    0x000034(%ecx),%dx
		jne    _030229_jump

	_0302e0_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0302ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x000060(%eax),%dx
		cmp    $0x0000b2,%dx
		je     _030304_jump
		cmp    $0x0000f1,%dx
		jne    _030343_jump

	_030304_jump:
		cmpw   $0x000000,0x000052(%esi)
		jne    _030343_jump
		xor    %ecx,%ecx
		mov    0x00006a(%esi),%cl
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    0x000004(%esi),%ecx
		mov    0x00000a(%ecx,%eax,4),%ax
		dec    %eax
		cwtl   
		call   _069140_func
		mov    %al,0x00006b(%esi)
		mov    %esi,%eax
		movw   $0x001000,0x000050(%esi)
		call   _0301cc_func
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030343_jump:
		mov    $0x000028,%ebx
		lea    0x000050(%esi),%ecx
		mov    $0x000018,%edx
		mov    %esi,%eax
		call   _01d084_func
		movw   $0x000000,0x000040(%esi)
		mov    %ax,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030368_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0303b5_jump
		cmpb   $0x000036,0x00006c(%ecx)
		jne    _0303b5_jump
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _03039c_jump
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%ecx)
		jmp    _0303a9_jump

	_03039c_jump:
		cmpb   $0x000000,0x00006b(%ecx)
		jne    _0303a9_jump
		mov    %ecx,%eax
		call   _077338_func

	_0303a9_jump:
		mov    %ecx,%eax
		call   _0545ac_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0303b5_jump:
		cmpb   $0x000003,_0cdc11_data
		jne    _0303c7_jump
		cmpb   $0x000017,_0cdc10_data
		je     _0303f8_jump

	_0303c7_jump:
		cmpw   $0x000003,_0cedb4_data
		jne    _030496_jump
		cmpb   $0x000002,_0cdc11_data
		jne    _0303e7_jump
		cmpb   $0x00001f,_0cdc10_data
		je     _0303ee_jump

	_0303e7_jump:
		mov    $0x000001,%eax
		jmp    _0303f0_jump

	_0303ee_jump:
		xor    %eax,%eax

	_0303f0_jump:
		test   %eax,%eax
		je     _030496_jump

	_0303f8_jump:
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000069(%ecx),%dl
		call   _0188d0_func
		cwtl   
		mov    0x00002c(%ecx),%esi
		sub    %edx,%eax
		sub    %esi,%eax
		cmp    $0x000020,%eax
		jg     _03043b_jump
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000069(%ecx),%dl
		call   _0188d0_func
		cwtl   
		mov    $0x000036,%ebx
		sub    %edx,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01d374_func
		movb   $0x00006b,0x00006a(%ecx)
		movb   $0x000000,0x00006b(%ecx)
		jmp    _030451_jump

	_03043b_jump:
		mov    0x000081(%ecx),%dl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)

	_030451_jump:
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _077338_func
		mov    _0cee12_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc300_data,%eax
		mov    0x000081(%eax,%edx,4),%bl
		movl   $0x000000,0x000024(%eax,%edx,4)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%eax,%edx,4)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030496_jump:
		mov    _0cefe2_data,%ah
		test   %ah,%ah
		je     _030620_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cefe8_data,%al
		mov    _0cefe7_data,%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _0304fc_jump
		mov    _0cee12_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		andb   $0x0000fb,0x000081(%ecx)
		andb   $0x0000fb,0x000081(%edx)
		mov    %ecx,%eax
		call   _077338_func
		cmpl   $0x000000,0x000024(%edx)
		je     _03063f_jump
		mov    %edx,%eax
		call   _077338_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0304fc_jump:
		mov    %edx,%eax
		shl    $0x000003,%edx
		add    %eax,%edx
		add    %edx,%edx
		add    $_0ce57e_data,%edx
		movswl (%edx),%eax
		mov    %eax,0x000028(%ecx)
		mov    (%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%edx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x000009(%edx),%al
		mov    %al,0x00006c(%ecx)
		mov    0x00000a(%edx),%al
		mov    %al,0x00006a(%ecx)
		mov    0x00000b(%edx),%al
		mov    %al,0x00006b(%ecx)
		mov    0x00000c(%edx),%al
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		xor    %eax,%eax
		mov    0x000011(%edx),%al
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		mov    0x00007e(%ecx),%bl
		mov    %ax,0x00005a(%ecx)
		test   %bl,%bl
		jne    _030575_jump
		mov    %ecx,%eax
		call   _077338_func

	_030575_jump:
		mov    _0cee12_data,%eax
		sar    $0x000010,%eax
		movb   $0x000004,0x00007e(%ecx)
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc300_data,%eax
		shl    $0x000002,%ecx
		mov    0x000010(%edx),%bh
		add    %eax,%ecx
		test   %bh,%bh
		je     _0305f9_jump
		mov    0x000081(%ecx),%ah
		movb   $0x000004,0x00007e(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000002(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x000004(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00000d(%edx),%al
		mov    %al,0x00006a(%ecx)
		mov    0x00000e(%edx),%al
		mov    %al,0x00006b(%ecx)
		mov    0x00000f(%edx),%al
		and    $0x000001,%al
		mov    0x000081(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%ecx)
		mov    %dl,%dh
		movw   $0x000000,0x000042(%ecx)
		or     %al,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _030600_jump

	_0305f9_jump:
		andb   $0x0000fb,0x000081(%ecx)

	_030600_jump:
		mov    _0cefe7_data,%bl
		inc    %bl
		mov    %bl,_0cefe7_data
		cmp    $0x000064,%bl
		jbe    _03063f_jump
		xor    %cl,%cl
		mov    %cl,_0cefe7_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030620_jump:
		mov    %ah,0x00007e(%ecx)
		mov    _0cee12_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc300_data,%eax
		andb   $0x0000fb,0x000081(%eax,%edx,4)

	_03063f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030644_func:
		push   %edx
		cmpb   $0x000001,_0cefe2_data
		jne    _030656_jump
		xor    %dl,%dl
		mov    %dl,_0cdc1a_data

	_030656_jump:
		pop    %edx
		ret    



_030658_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%ah
		or     $0x000008,%ah
		mov    _0cefa9_data,%dl
		mov    %ah,0x000081(%esi)
		cmp    $0x000001,%dl
		jne    _030862_jump
		mov    %ah,%bl
		and    $0x0000df,%bl
		mov    %bl,0x000081(%esi)
		cmpw   $0x000000,_0cdbe4_data
		jle    _03069e_jump
		testb  $0x000008,_0cdc25_data
		jne    _0306b5_jump

	_03069e_jump:
		cmpw   $0x000000,_0cdbe4_data
		jge    _030715_jump
		testb  $0x000008,_0cdc25_data
		jne    _030715_jump

	_0306b5_jump:
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0306c3_jump
		neg    %eax

	_0306c3_jump:
		cmp    $0x000002,%eax
		jge    _0306e0_jump
		cmpw   $0x000000,_0cdbe4_data
		jle    _0306d9_jump
		mov    $0x000002,%eax
		jmp    _030711_jump

	_0306d9_jump:
		mov    $0xfffffffe,%eax
		jmp    _030711_jump

	_0306e0_jump:
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0306ee_jump
		neg    %eax

	_0306ee_jump:
		cmp    $0x000007,%eax
		jl     _03070b_jump
		cmpw   $0x000000,_0cdbe4_data
		jle    _030704_jump
		mov    $0x000007,%eax
		jmp    _030711_jump

	_030704_jump:
		mov    $0xfffffff9,%eax
		jmp    _030711_jump

	_03070b_jump:
		mov    _0cdbe4_data,%ax

	_030711_jump:
		mov    %ax,0x000050(%esi)

	_030715_jump:
		mov    0x000056(%esi),%dx
		test   %dx,%dx
		jne    _030796_jump
		mov    _0cdbe4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030730_jump
		neg    %eax

	_030730_jump:
		test   %eax,%eax
		jg     _030749_jump
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030742_jump
		neg    %eax

	_030742_jump:
		cmp    $0x000002,%eax
		jle    _03078e_jump
		jmp    _03078a_jump

	_030749_jump:
		mov    _0cdbe6_data,%cx
		test   %cx,%cx
		jle    _03076f_jump
		mov    _0cdbe4_data,%bx
		test   %bx,%bx
		jle    _030767_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _03078e_jump

	_030767_jump:
		jge    _03078a_jump
		movb   $0x000002,0x00006b(%esi)
		jmp    _03078e_jump

	_03076f_jump:
		jge    _03078e_jump
		mov    _0cdbe4_data,%ax
		test   %ax,%ax
		jle    _030782_jump
		movb   $0x000002,0x00006b(%esi)
		jmp    _03078e_jump

	_030782_jump:
		jge    _03078a_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _03078e_jump

	_03078a_jump:
		movb   $0x000001,0x00006b(%esi)

	_03078e_jump:
		movw   $0x000008,0x000056(%esi)
		jmp    _03079d_jump

	_030796_jump:
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x000056(%esi)

	_03079d_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d710_func
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x000074(%esi),%al
		add    %edi,%eax
		sub    %ebx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    _0cdbcc_data,%ebx
		mov    _0cdc0c_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    _0cdbd0_data,%edx
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    %ebx,0x000028(%esi)
		xor    %ebx,%ebx
		mov    _0cdc0d_data,%al
		mov    0x000069(%esi),%bl
		add    %edx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    _0cdc11_data,%ch
		mov    %ebx,0x00002c(%esi)
		cmp    $0x000003,%ch
		jne    _030826_jump
		cmpb   $0x000017,_0cdc10_data
		je     _030845_jump

	_030826_jump:
		cmpb   $0x000003,_0cdc11_data
		jne    _030838_jump
		cmpb   $0x000016,_0cdc10_data
		je     _030845_jump

	_030838_jump:
		call   _06d388_func
		test   %al,%al
		jne    _0308e9_jump

	_030845_jump:
		mov    _0ced7e_data,%ax
		xor    %dh,%dh
		mov    %ax,_0ced80_data
		mov    %dh,_0cefa9_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030862_jump:
		movw   $0x000000,0x000056(%esi)
		mov    %ah,%dh
		movb   $0x000001,0x00006b(%esi)
		or     $0x000020,%dh
		mov    _0cdc11_data,%bl
		mov    %dh,0x000081(%esi)
		cmp    $0x000003,%bl
		jne    _03089c_jump
		cmpb   $0x000016,_0cdc10_data
		jne    _03089c_jump
		mov    0x000050(%esi),%ax
		mov    %ax,0x000040(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03089c_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _0308ae_jump
		cmpb   $0x000001,_0cdc10_data
		je     _0308d1_jump

	_0308ae_jump:
		mov    _0cdc11_data,%al
		cmp    $0x000002,%al
		jne    _0308bf_jump
		cmp    _0cdc10_data,%al
		je     _0308d1_jump

	_0308bf_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _0308e3_jump
		cmpb   $0x000006,_0cdc10_data
		jne    _0308e3_jump

	_0308d1_jump:
		xor    %edx,%edx
		mov    %dx,_0cdbe4_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0308e3_jump:
		movw   $0x000000,0x000050(%esi)

	_0308e9_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0308f4_switch:
		.long   _0309a9_case
		.long   _0309af_case
		.long   _0309b5_case
		.long   _0309b5_case
		.long   _0309bb_case




_030908_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    _0cede4_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _030ab4_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _030955_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc300_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000028(%esi),%ebx
		cmp    0x000028(%eax),%ebx
		jge    _03094c_jump
		mov    0x00002c(%eax),%eax
		add    $0x000070,%eax
		jmp    _030952_jump

	_03094c_jump:
		mov    0x00002c(%eax),%eax
		add    $0x000078,%eax

	_030952_jump:
		mov    %eax,0x00002c(%esi)

	_030955_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _030a99_jump
		cmpb   $0x00000f,_0cdc10_data
		jne    _030a99_jump
		mov    _0cdbd0_data,%di
		mov    0x000028(%esi),%ax
		mov    0x00002c(%esi),%cx
		mov    0x00006c(%esi),%bl
		mov    %eax,0x000004(%esp)
		mov    _0cdbcc_data,%ax
		sub    $0x000010,%bl
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		cmp    $0x000004,%bl
		ja     _0309c1_jump
		and    $0x0000ff,%ebx
		jmp    *%cs:_0308f4_switch(,%ebx,4)

	_0309a9_case:
		mov    $0x000030,%dl
		mov    $0x000018,%dh
		jmp    _0309c3_jump

	_0309af_case:
		mov    $0x000030,%dl
		mov    $0x000020,%dh
		jmp    _0309c3_jump

	_0309b5_case:
		mov    $0x000038,%dl
		mov    $0x000028,%dh
		jmp    _0309c3_jump

	_0309bb_case:
		mov    $0x000038,%dl
		mov    $0x000040,%dh
		jmp    _0309c3_jump

	_0309c1_jump:
		xor    %eax,%eax

	_0309c3_jump:
		test   %ax,%ax
		je     _030a05_jump
		xor    %eax,%eax
		mov    %dh,%al
		push   %eax
		xor    %eax,%eax
		mov    %dl,%al
		add    %ecx,%eax
		push   $0x000004
		cwtl   
		push   %eax
		mov    0x000010(%esp),%eax
		add    $0x00007e,%eax
		cwtl   
		push   %eax
		mov    %edi,%eax
		add    $0x00001a,%eax
		movswl %ax,%edx
		mov    0x000010(%esp),%eax
		mov    $0x00002e,%ebx
		add    $0x000039,%eax
		mov    $0x000004,%ecx
		cwtl   
		call   _02ae60_func

	_030a05_jump:
		test   %ax,%ax
		je     _030a99_jump
		mov    0x000076(%esi),%cl
		dec    %cl
		mov    %cl,0x000076(%esi)
		cmp    $0x000001,%cl
		jae    _030a3e_jump
		mov    0x000077(%esi),%al
		mov    %al,0x000076(%esi)
		mov    0x00006c(%esi),%al
		cmp    $0x000013,%al
		jae    _030a37_jump
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _01d364_func
		jmp    _030a3e_jump

	_030a37_jump:
		mov    %esi,%eax
		call   _077ce4_func

	_030a3e_jump:
		mov    _0cede4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		cmpw   $0x000000,0x000056(%edx,%eax,1)
		jne    _030a73_jump
		mov    0x000004(%esp),%eax
		add    $0x00001e,%edi
		add    $0x000080,%eax
		movswl %di,%edx
		cwtl   
		call   _077d94_func

	_030a73_jump:
		mov    _0cede4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		movw   $0x000000,0x000050(%edx,%eax,4)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030a99_jump:
		mov    _0cede4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		incw   0x000050(%edx,%eax,4)

	_030ab4_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030ac0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x000076(%eax)
		jne    _030aff_jump
		mov    _0cdbcc_data,%eax
		mov    0x000028(%ecx),%edx
		add    $0x00002f,%eax
		cmp    %edx,%eax
		jle    _030aff_jump
		mov    _0cdbcc_data,%ebx
		lea    0x0000ba(%edx),%eax
		cmp    %ebx,%eax
		jle    _030aff_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		movb   $0x00000a,0x000076(%ecx)
		call   _01d374_func

	_030aff_jump:
		cmpb   $0x000001,0x000076(%ecx)
		jbe    _030b38_jump
		mov    0x000042(%ecx),%dx
		cmp    $0x000010,%dx
		jge    _030b21_jump
		cmpb   $0x000000,_0cef55_data
		jne    _030b3e_jump
		mov    %edx,%ebx
		inc    %ebx
		mov    %bx,0x000042(%ecx)
		jmp    _030b3e_jump

	_030b21_jump:
		cmpb   $0x000000,_0cef55_data
		jne    _030b3e_jump
		cmpb   $0x000000,_0cef50_data
		jne    _030b3e_jump
		incl   0x00002c(%ecx)
		jmp    _030b3e_jump

	_030b38_jump:
		movw   $0x000000,0x000042(%ecx)

	_030b3e_jump:
		cmpw   $0x000001,0x000050(%ecx)
		setle  %al
		movw   $0x000000,0x000050(%ecx)
		xor    %ah,%ah
		mov    %ax,0x000056(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030b58_func:
		push   %ebx
		push   %edx
		mov    _0cdbd0_data,%edx
		xor    %ebx,%ebx
		sub    $0x000062,%edx
		mov    0x00006a(%eax),%bl
		mov    %edx,0x00002c(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x00000a(%ebx,%edx,4),%dx
		and    $0x00ffff,%edx
		xor    %ebx,%ebx
		dec    %edx
		mov    0x00006b(%eax),%bl
		cmp    %edx,%ebx
		jne    _030bea_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		mov    0x000005(%ebx,%edx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		cmpb   $0x000000,_0cef4d_data(%edx)
		jne    _030bea_jump
		mov    _0cede4_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc300_data,%ebx
		cmpw   $0x000000,0x000056(%ebx,%edx,4)
		jne    _030bea_jump
		mov    0x000081(%eax),%bh
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%eax)

	_030bea_jump:
		pop    %edx
		pop    %ebx
		ret    



_030bf0_func:
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		cmpw   $0x0000ff,0x000050(%eax)
		je     _030c4f_jump
		mov    0x00004e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _030c2d_jump
		mov    %edx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _030c4f_jump
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

	_030c2d_jump:
		mov    0x000050(%edx),%cx
		test   %cx,%cx
		jne    _030c48_jump
		movb   $0x000000,0x00006b(%edx)
		movw   $0x00ffff,0x000050(%edx)
		movb   $0x000002,0x00007e(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

	_030c48_jump:
		mov    %ecx,%esi
		dec    %esi
		mov    %si,0x000050(%edx)

	_030c4f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

_030c54_switch:
		.long   _030d55_case
		.long   _030d61_case
		.long   _030d6e_case
		.long   _030d80_case
		.long   _030d5b_case




_030c68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    _0cedda_data,%ax
		mov    %ax,_0cedc6_data
		mov    %ax,_0cedbc_data
		mov    %ax,_0cedfa_data
		cmpb   $0x000000,_095b15_data
		jne    _030ca4_jump
		mov    _0cedc8_data,%ax
		mov    %ax,_0cedba_data
		mov    %ax,_0cee10_data

	_030ca4_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000014,%al
		jb     _030cb6_jump
		jbe    _030cd1_jump
		cmp    $0x00001e,%al
		je     _030ce6_jump
		jmp    _030e58_jump

	_030cb6_jump:
		cmp    $0x000002,%al
		jne    _030e58_jump
		movw   $0x000000,0x000042(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		jmp    _030e58_jump

	_030cd1_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		jmp    _030e58_jump

	_030ce6_jump:
		cmpl   $0x000000,0x000020(%ecx)
		je     _030e58_jump
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		mov    $0x000001,%bl
		cmp    $0xffffffff,%edx
		je     _030d13_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		cmpl   $0x000000,0x000024(%edx,%eax,4)
		je     _030d13_jump
		xor    %bl,%bl

	_030d13_jump:
		test   %bl,%bl
		je     _030d2e_jump
		mov    0x00007f(%ecx),%dl
		test   %dl,%dl
		je     _030d2e_jump
		cmpb   $0x000000,_0cef4f_data
		je     _030d2e_jump
		mov    %dl,%bl
		dec    %bl
		mov    %bl,0x00007f(%ecx)

	_030d2e_jump:
		xor    %bh,%bh
		mov    0x00007f(%ecx),%al
		mov    %bh,(%esp)
		test   %al,%al
		jne    _030e4e_jump
		mov    0x000052(%ecx),%ax
		cmp    $0x000004,%ax
		ja     _030d8b_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_030c54_switch(,%eax,4)

	_030d55_case:
		movw   $0x000002,0x000052(%ecx)

	_030d5b_case:
		mov    0x000060(%ecx),%si
		jmp    _030d8b_jump

	_030d61_case:
		mov    $0x00004d,%esi
		movw   $0x000003,0x000052(%ecx)
		jmp    _030d8b_jump

	_030d6e_case:
		mov    $0x000048,%esi
		mov    $0x000001,%ah
		movw   $0x000001,0x000052(%ecx)
		mov    %ah,(%esp)
		jmp    _030d8b_jump

	_030d80_case:
		mov    $0x0000bb,%esi
		movw   $0x000004,0x000052(%ecx)

	_030d8b_jump:
		cmpb   $0x000000,(%esp)
		jne    _030d95_jump
		movb   $0x000032,0x00007f(%ecx)

	_030d95_jump:
		cmp    0x000060(%ecx),%si
		je     _030e4e_jump
		mov    %ecx,%eax
		call   _05ef90_func
		movw   $0x000000,0x000048(%ecx)
		mov    0x000034(%ecx),%ax

	_030db0_jump:
		movswl %ax,%edx
		mov    _0ce434_data,%eax
		mov    (%eax,%edx,2),%ax
		movswl %ax,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc300_data,%ebx
		add    %ebx,%edx
		mov    0x000060(%edx),%bx
		cmp    %bx,%si
		je     _030ddc_jump
		cmp    0x000060(%ecx),%bx
		jne    _030db0_jump

	_030ddc_jump:
		mov    0x000060(%edx),%ax
		cmp    0x000060(%ecx),%ax
		je     _030e4e_jump
		cmp    $0x00004d,%ax
		jb     _030dfa_jump
		jbe    _030e02_jump
		cmp    $0x0000bb,%ax
		je     _030e14_jump
		jmp    _030e22_jump

	_030dfa_jump:
		cmp    $0x000048,%ax
		je     _030e0b_jump
		jmp    _030e22_jump

	_030e02_jump:
		mov    %edx,%eax
		call   _03c9e8_func
		jmp    _030e22_jump

	_030e0b_jump:
		mov    %edx,%eax
		call   _05b4b0_func
		jmp    _030e22_jump

	_030e14_jump:
		mov    %edx,%eax
		call   _061ec0_func
		mov    %edx,%eax
		call   _063cd4_func

	_030e22_jump:
		mov    %edx,%eax
		call   _0575fc_func
		mov    %edx,%eax
		call   _055e84_func
		mov    %edx,%eax
		call   _01db8c_func
		mov    0x000081(%edx),%bl
		or     $0x000004,%bl
		mov    0x000034(%edx),%ax
		mov    %bl,0x000081(%edx)
		mov    %ax,0x000050(%ecx)

	_030e4e_jump:
		cmpb   $0x000000,(%esp)
		jne    _030d2e_jump

	_030e58_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030e60_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000042(%eax),%dx
		cmp    $0x000002,%dx
		jle    _030e78_jump
		mov    $0x000002,%ebx
		mov    %ebx,%edx
		jmp    _030e88_jump

	_030e78_jump:
		cmp    $0x000001,%dx
		jle    _030e8d_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_030e88_jump:
		call   _01d374_func

	_030e8d_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030e99_jump
		neg    %eax

	_030e99_jump:
		cmp    $0x000001,%eax
		jle    _030ed1_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _030eaa_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _030eb1_jump

	_030eaa_jump:
		mov    $0x000001,%eax
		jmp    _030eb3_jump

	_030eb1_jump:
		xor    %eax,%eax

	_030eb3_jump:
		test   %eax,%eax
		je     _030ed1_jump
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		je     _030ec8_jump
		decw   0x000040(%ecx)
		jmp    _030ed1_jump

	_030ec8_jump:
		test   $0x000008,%dh
		jne    _030ed1_jump
		incw   0x000040(%ecx)

	_030ed1_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _030efe_jump
		cmpb   $0x000003,0x00006c(%ecx)
		jne    _030efe_jump
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _030efe_jump
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)

	_030efe_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030f04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%cl
		shl    $0x000004,%cl
		mov    0x00006d(%eax),%ah
		shr    $0x000007,%cl
		test   %ah,%ah
		jne    _030f40_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _030f40_jump
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _030f40_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func

	_030f40_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _031045_jump
		cmpb   $0x00000f,0x00006c(%esi)
		jne    _031045_jump
		cmpw   $0x000086,0x000060(%esi)
		jne    _030f7d_jump
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _030f7d_jump
		mov    $0x00000d,%edx
		mov    %esi,%eax
		call   _01d364_func
		movw   $0x000000,0x000040(%esi)
		jmp    _030fd0_jump

	_030f7d_jump:
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _030fd0_jump
		mov    0x000081(%esi),%bh
		mov    _0cdc25_data,%al
		and    $0x0000f7,%bh
		and    $0x000008,%al
		mov    %bh,%ch
		mov    %bh,0x000081(%esi)
		or     %al,%ch
		mov    %esi,%eax
		mov    %ch,0x000081(%esi)
		call   _053ce4_func
		mov    %cl,%al
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%esi)
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)

	_030fd0_jump:
		cmpw   $0x000000,0x000040(%esi)
		je     _031045_jump
		mov    %esp,%eax
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		add    $0x000010,%eax
		sar    $0x000004,%eax
		mov    0x000040(%esi),%bx
		movswl %ax,%edx
		test   %bx,%bx
		jge    _03100a_jump
		xor    %ebx,%ebx
		jmp    _031011_jump

	_03100a_jump:
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx

	_031011_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _031045_jump
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%esi)

	_031045_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031050_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _031087_jump
		cmpb   $0x00000a,0x000062(%ecx)
		jne    _031087_jump
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %eax,%edx
		and    $0x00fff0,%edx
		sub    %eax,%edx
		lea    0x000007(%edx),%eax
		mov    %eax,0x00002c(%ecx)

	_031087_jump:
		mov    %ecx,%eax
		mov    $0x00000a,%edx
		call   _030f04_func
		mov    %ecx,%eax
		call   _02e850_func
		cmpb   $0x000009,0x00006c(%ecx)
		jne    _0310a7_jump
		mov    %ecx,%eax
		call   _05e09c_func

	_0310a7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0310ac_switch:
		.long   _03113c_case
		.long   _031151_case
		.long   _03113c_case
		.long   _031151_case
		.long   _03113c_case
		.long   _031151_case
		.long   _031151_case
		.long   _031146_case
		.long   _031151_case
		.long   _031146_case
		.long   _031151_case
		.long   _031146_case




_0310dc_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    0x000060(%eax),%ax
		cmp    $0x000086,%ax
		jb     _0310fd_jump
		jbe    _03110b_jump
		cmp    $0x0000a7,%ax
		jb     _031125_jump
		jbe    _03110b_jump
		cmp    $0x0000b1,%ax
		je     _031115_jump
		jmp    _031125_jump

	_0310fd_jump:
		cmp    $0x000006,%ax
		jb     _031125_jump
		jbe    _031115_jump
		cmp    $0x000008,%ax
		jne    _031125_jump

	_03110b_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x00002c,%eax
		jmp    _03111d_jump

	_031115_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x00008b,%eax

	_03111d_jump:
		sar    $0x000010,%edx
		call   _06f3bc_func

	_031125_jump:
		mov    _0cdcd0_data,%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _031151_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_0310ac_switch(,%edx,4)

	_03113c_case:
		xor    %ebx,%ebx
		mov    _0cdcd3_data,%bl
		jmp    _031151_case

	_031146_case:
		xor    %ebx,%ebx
		mov    _0cdcd3_data,%bl
		sub    $0x000002,%ebx

	_031151_case:
		mov    %ebx,%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    _0cdc30_data,%edx
		mov    0x000040(%edx),%si
		add    $0x00000a,%ebx
		test   %si,%si
		jge    _03116c_jump
		neg    %ebx

	_03116c_jump:
		movswl %bx,%edx
		mov    %ecx,%eax
		call   _01e610_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03117c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000040(%eax),%bx
		call   _053ce4_func
		mov    0x00003e(%edx),%eax
		movswl %bx,%ecx
		sar    $0x000010,%eax
		imul   %ecx,%eax
		test   %eax,%eax
		jge    _0311c1_jump
		mov    0x000081(%edx),%ch
		lea    0x000081(%edx),%eax
		test   $0x000008,%ch
		sete   %cl
		and    $0x000001,%cl
		mov    (%eax),%ch
		and    $0x0000f7,%ch
		mov    %ch,(%eax)
		shl    $0x000003,%cl
		or     %cl,%ch
		mov    %ch,(%eax)
		mov    %bx,0x000040(%edx)

	_0311c1_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0311c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x0000ff,0x00007f(%eax)
		je     _031299_jump
		cmpb   $0x000000,0x00007f(%ecx)
		jne    _031296_jump
		mov    0x00006d(%ecx),%al
		mov    _0cdc25_data,%ah
		and    $0x0000fb,%ah
		or     $0x000004,%ah
		test   %al,%al
		jbe    _0311fb_jump
		cmp    $0x000005,%al
		je     _03121d_jump
		jmp    _031242_jump

	_0311fb_jump:
		mov    $0x000001,%ebx
		mov    0x000081(%ecx),%dh
		mov    %ah,_0cdc25_data
		and    $0x0000fb,%dh
		mov    %ebx,_0cdbc8_data
		mov    %dh,0x000081(%ecx)
		jmp    _031242_jump

	_03121d_jump:
		mov    $0x000001,%edx
		mov    $0x000028,%ebx
		mov    %ah,_0cdc25_data
		mov    $_0cdba4_data,%eax
		mov    %edx,_0cdbc8_data
		mov    $0x000003,%edx
		call   _01d374_func

	_031242_jump:
		mov    0x000081(%ecx),%bl
		mov    0x000032(%ecx),%eax
		and    $0x0000fb,%bl
		sar    $0x000010,%eax
		mov    %bl,0x000081(%ecx)
		call   _01f334_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0cdc0c_data,%al
		sub    %eax,%edx
		mov    0x00002c(%ecx),%esi
		mov    %edx,_0cdbcc_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000069(%ecx),%al
		mov    _0cdc0d_data,%dl
		add    %esi,%eax
		mov    $0x000040,%bh
		sub    %edx,%eax
		mov    %bh,_0cefd4_data
		mov    %eax,_0cdbd0_data

	_031296_jump:
		decb   0x00007f(%ecx)

	_031299_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031960_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000040(%eax),%cx
		xor    %eax,%eax
		mov    _0cdbcc_data,%bx
		mov    _0cdc0c_data,%al
		mov    0x000028(%esi),%di
		add    %ebx,%eax
		sub    %edi,%eax
		movzbw 0x000068(%esi),%di
		sub    %edi,%eax
		mov    0x000034(%esi),%bx
		mov    %eax,%edi
		cmp    _0cdbee_data,%bx
		jne    _031ab2_jump
		movb   $0x000005,0x000072(%esi)
		mov    _0cdbd0_data,%eax
		add    $0x000008,%eax
		test   %di,%di
		jle    _031a39_jump
		cmp    $0x000062,%di
		jle    _0319c1_jump
		mov    %eax,_0cdbd0_data
		jmp    _0319f7_jump

	_0319c1_jump:
		cmp    $0x000046,%di
		jle    _0319ce_jump
		mov    $0x000004,%edx
		jmp    _0319f7_jump

	_0319ce_jump:
		cmp    $0x00003c,%di
		jle    _0319db_jump
		mov    $0x000003,%edx
		jmp    _0319f7_jump

	_0319db_jump:
		cmp    $0x000028,%di
		jle    _0319e8_jump
		mov    $0x000002,%edx
		jmp    _0319f7_jump

	_0319e8_jump:
		cmp    $0x000014,%di
		jle    _0319f5_jump
		mov    $0x000001,%edx
		jmp    _0319f7_jump

	_0319f5_jump:
		xor    %edx,%edx

	_0319f7_jump:
		cmp    %dx,%cx
		jge    _031a14_jump
		mov    0x000071(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000071(%esi)
		test   %al,%al
		ja     _031a14_jump
		inc    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _031acf_jump

	_031a14_jump:
		cmp    %dx,%cx
		jle    _031acf_jump
		mov    0x000071(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000071(%esi)
		test   %al,%al
		ja     _031acf_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _031acf_jump

	_031a39_jump:
		neg    %edi
		cmp    $0x000069,%di
		jle    _031a48_jump
		mov    %eax,_0cdbd0_data
		jmp    _031a7e_jump

	_031a48_jump:
		cmp    $0x000046,%di
		jle    _031a55_jump
		mov    $0xfffffffc,%edx
		jmp    _031a7e_jump

	_031a55_jump:
		cmp    $0x00003c,%di
		jle    _031a62_jump
		mov    $0xfffffffd,%edx
		jmp    _031a7e_jump

	_031a62_jump:
		cmp    $0x000028,%di
		jle    _031a6f_jump
		mov    $0xfffffffe,%edx
		jmp    _031a7e_jump

	_031a6f_jump:
		cmp    $0x000014,%di
		jle    _031a7c_jump
		mov    $0xffffffff,%edx
		jmp    _031a7e_jump

	_031a7c_jump:
		xor    %edx,%edx

	_031a7e_jump:
		cmp    %dx,%cx
		jle    _031a98_jump
		mov    0x000071(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000071(%esi)
		test   %al,%al
		ja     _031a98_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _031acf_jump

	_031a98_jump:
		cmp    %dx,%cx
		jle    _031acf_jump
		mov    0x000071(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000071(%esi)
		test   %al,%al
		ja     _031acf_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _031acf_jump

	_031ab2_jump:
		mov    0x000072(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000072(%esi)
		test   %al,%al
		jne    _031acf_jump
		movb   $0x000005,0x000072(%esi)
		test   %cx,%cx
		je     _031acf_jump
		jle    _031ace_jump
		dec    %ecx
		jmp    _031acf_jump

	_031ace_jump:
		inc    %ecx

	_031acf_jump:
		mov    %ecx,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000068(%esi),%al
		add    %ecx,%edx
		mov    0x000069(%esi),%bl
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _031af0_jump
		xor    %ecx,%ecx

	_031af0_jump:
		mov    0x00006d(%esi),%ah
		mov    %cx,0x000040(%esi)
		test   %ah,%ah
		jne    _031b50_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _031b50_jump
		cmpw   $0x000000,0x000052(%esi)
		jne    _031cd4_jump
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _031cd4_jump
		mov    0x00007f(%esi),%bh
		cmp    $0x000064,%bh
		jbe    _031b44_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		movw   $0x000001,0x000052(%esi)
		mov    %esi,%eax
		movb   $0x000000,0x00007f(%esi)
		call   _05f030_func
		jmp    _031cd4_jump

	_031b44_jump:
		mov    %bh,%cl
		inc    %cl
		mov    %cl,0x00007f(%esi)
		jmp    _031cd4_jump

	_031b50_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _031c2b_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _031c2b_jump
		movw   $0x000000,0x000052(%esi)
		cmpb   $0x000002,_0cdc11_data
		jne    _031cd4_jump
		mov    _0cdbf8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _031cd4_jump
		mov    0x00006b(%esi),%ah
		cmp    $0x000014,%ah
		jb     _031cd4_jump
		cmp    $0x000016,%ah
		ja     _031cd4_jump
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d710_func
		movswl %di,%eax
		test   %eax,%eax
		jge    _031bc4_jump
		neg    %eax

	_031bc4_jump:
		cmp    $0x000064,%eax
		jge    _031cd4_jump
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		mov    _0cdbd0_data,%ebp
		mov    _0cdc0d_data,%al
		sar    $0x000010,%edx
		add    %ebp,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		lea    -0x00001c(%edx),%eax
		test   %eax,%eax
		jge    _031bf7_jump
		neg    %eax

	_031bf7_jump:
		cmp    $0x000014,%eax
		jge    _031cd4_jump
		test   %di,%di
		jge    _031c0e_jump
		orb    $0x000008,_0cdc25_data
		jmp    _031c15_jump

	_031c0e_jump:
		andb   $0x0000f7,_0cdc25_data

	_031c15_jump:
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02d60c_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031c2b_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _031cd4_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _031cd4_jump
		cmpl   $0x000000,_0cdbc8_data
		jne    _031cd4_jump
		cmpb   $0x000000,0x00006b(%esi)
		jne    _031cd4_jump
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _031cd4_jump
		mov    $0x000001,%ebx
		mov    $0xffffffff,%ecx
		lea    0x000008(%esp),%eax
		mov    $0x000001,%edx
		mov    %ebx,_0cdbc8_data
		mov    %cx,_0cdbfa_data
		push   %eax
		lea    0x000004(%esp),%eax
		mov    _0cdbcc_data,%ecx
		lea    0x000008(%esp),%ebx
		sub    $0x000004,%ecx
		push   %eax
		mov    %ecx,_0cdbcc_data
		mov    %esi,%eax
		lea    0x000014(%esp),%ecx
		call   _01d710_func
		mov    0x00000a(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000074(%esi),%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0cdc0d_data,%dl
		sub    %edx,%eax
		mov    $0x000008,%ebx
		mov    %eax,_0cdbd0_data
		xor    %edx,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func

	_031cd4_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031ce0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    %ax,0x000018(%esp)
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		mov    0x000052(%esi),%dx
		mov    %ax,0x000024(%esp)
		test   %dx,%dx
		jne    _031d15_jump
		mov    %dx,0x000040(%esi)
		mov    %dx,0x000042(%esi)
		jmp    _031dcd_jump

	_031d15_jump:
		cmp    $0x000001,%dx
		jne    _031dcd_jump
		mov    _0cdbee_data,%ax
		mov    0x000034(%esi),%cx
		cmp    %cx,%ax
		jne    _031d67_jump
		xor    %ecx,%eax
		mov    _0cdbcc_data,%di
		mov    _0cdc0c_data,%al
		mov    0x000028(%esi),%dx
		add    %edi,%eax
		mov    0x000018(%esp),%ebx
		sub    %edx,%eax
		mov    _0cdbd0_data,%edx
		sub    %ebx,%eax
		add    $0x000008,%edx
		cmp    $0x000060,%ax
		jg     _031d61_jump
		movswl %ax,%ebx
		cmp    $0xffffff95,%ebx
		jge    _031d67_jump

	_031d61_jump:
		mov    %edx,_0cdbd0_data

	_031d67_jump:
		mov    0x000022(%esp),%edi
		mov    0x000016(%esp),%ecx
		mov    %esi,%eax
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		mov    %edi,%ebx
		mov    %ecx,%edx
		call   _01d624_func
		test   %ax,%ax
		je     _031da6_jump
		mov    %edi,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _031da6_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _05f030_func

	_031da6_jump:
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    0x000070(%esi),%dl
		mov    %ah,0x000081(%esi)
		cmp    $0x000014,%dl
		jne    _031dcd_jump
		mov    0x000056(%esi),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000042(%esi)

	_031dcd_jump:
		cmpw   $0x000001,0x000052(%esi)
		jl     _03218c_jump
		mov    0x000032(%esi),%edx
		mov    _0ce434_data,%ebx
		sar    $0x000010,%edx
		mov    (%ebx,%edx,2),%ax
		movswl %ax,%edi
		mov    %edi,%ecx
		shl    $0x000005,%ecx
		add    %edi,%ecx
		mov    _0cc300_data,%edx
		shl    $0x000002,%ecx
		add    %edx,%ecx
		cmpl   $0x000000,0x000024(%ecx)
		jne    _031e0a_jump
		movl   $0x000001,0x000024(%ecx)

	_031e0a_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _03218c_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _03218c_jump
		cmpw   $0x000001,0x000052(%esi)
		jne    _031e3e_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		movw   $0x000002,0x000052(%esi)
		call   _05f030_func

	_031e3e_jump:
		mov    0x000052(%esi),%bx
		cmp    $0x000002,%bx
		jne    _031f65_jump
		movw   $0x000003,0x000052(%ecx)
		mov    0x000028(%ecx),%ax
		mov    0x000028(%esi),%di
		mov    0x00002c(%esi),%dx
		sub    %edi,%eax
		mov    0x00002c(%ecx),%di
		sub    %edx,%edi
		cmp    $0x000006,%ax
		jle    _031e77_jump
		movw   $0x00fffc,0x000040(%ecx)
		jmp    _03218c_jump

	_031e77_jump:
		movswl %ax,%edx
		cmp    $0xfffffffa,%edx
		jge    _031e8f_jump
		movw   $0x000004,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031e8f_jump:
		test   %ax,%ax
		jle    _031ea4_jump
		movw   $0x00ffff,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031ea4_jump:
		jge    _031eb6_jump
		movw   $0x000001,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031eb6_jump:
		movswl %di,%edx
		movw   $0x000000,0x000040(%ecx)
		cmp    $0xfffffff8,%edx
		jge    _031ed4_jump
		movw   $0x000004,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031ed4_jump:
		cmp    $0x000008,%di
		jle    _031eea_jump
		movw   $0x00fffc,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031eea_jump:
		test   %di,%di
		jle    _031eff_jump
		movw   $0x00ffff,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031eff_jump:
		jl     _032186_jump
		movw   $0x000000,0x000042(%ecx)
		movw   $0x000004,0x000052(%esi)
		mov    0x000060(%ecx),%bx
		movw   $0x000004,0x000052(%ecx)
		cmp    $0x0000a8,%bx
		jne    _031f30_jump
		movw   $0x000009,0x000028(%esp)
		mov    $0x000005,%eax
		jmp    _031f3f_jump

	_031f30_jump:
		mov    $0x000005,%edi
		mov    $0x000009,%eax
		mov    %di,0x000028(%esp)

	_031f3f_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %al,%bl
		mov    %ecx,%eax
		call   _01d374_func
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000028(%esp),%bl
		call   _01d374_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031f65_jump:
		cmp    $0x000004,%bx
		jne    _03205f_jump
		cmpw   $0x0000a8,0x000060(%esi)
		jne    _031f80_jump
		movw   $0x000007,0x000028(%esp)
		jmp    _031f87_jump

	_031f80_jump:
		movw   $0x00000b,0x000028(%esp)

	_031f87_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _03218c_jump
		xor    %eax,%eax
		mov    0x000028(%esp),%edx
		mov    0x00006c(%esi),%al
		cmp    %dx,%ax
		jne    _03218c_jump
		cmpb   $0x000000,0x00006b(%esi)
		jne    _03218c_jump
		movw   $0x000005,0x000052(%esi)
		cmpl   $0x000000,_0cdbc8_data
		jne    _03218c_jump
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _03218c_jump
		mov    _0cdbf8_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _03218c_jump
		cmpw   $0x0000a9,0x000060(%esi)
		jne    _03218c_jump
		mov    $0x000001,%ecx
		lea    0x000014(%esp),%edx
		lea    0x00000c(%esp),%ebx
		mov    _0cdbcc_data,%edi
		mov    %esi,%eax
		mov    %ecx,_0cdbc8_data
		push   %edx
		sub    $0x000004,%edi
		lea    0x00000c(%esp),%edx
		lea    0x000020(%esp),%ecx
		push   %edx
		mov    $0x000001,%edx
		mov    %edi,_0cdbcc_data
		call   _01d710_func
		mov    0x00001a(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000074(%esi),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0cdc0d_data,%dl
		sub    %edx,%ebx
		mov    $_0cdba4_data,%eax
		mov    %ebx,_0cdbd0_data
		xor    %edx,%edx
		mov    $0x000008,%ebx
		call   _01d374_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03205f_jump:
		cmp    $0x000005,%bx
		jne    _03218c_jump
		xor    %eax,%eax
		mov    0x000022(%esp),%edx
		mov    0x000068(%ecx),%al
		sar    $0x000010,%edx
		mov    %ax,0x000020(%esp)
		mov    %edx,0x000004(%esp)
		mov    0x000016(%esp),%edx
		mov    0x000004(%esp),%ebx
		mov    0x00001e(%esp),%ebp
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000069(%ecx),%al
		sar    $0x000010,%ebp
		mov    %ax,0x000010(%esp)
		mov    %edx,(%esp)
		mov    %esi,%eax
		mov    0x00000e(%esp),%edi
		call   _01d624_func
		mov    %eax,0x00000c(%esp)
		sar    $0x000010,%edi
		mov    %ebp,%edx
		mov    %edi,%ebx
		mov    %ecx,%eax
		call   _01d624_func
		mov    0x000004(%esp),%ebx
		mov    (%esp),%edx
		mov    %ax,0x00001c(%esp)
		mov    %esi,%eax
		call   _02ec10_func
		mov    %eax,0x000008(%esp)
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		mov    0x000004(%esp),%ebx
		mov    (%esp),%edx
		mov    %eax,0x000014(%esp)
		mov    %esi,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _032154_jump
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _032154_jump
		mov    0x000004(%esp),%ebx
		mov    (%esp),%edx
		movw   $0x000001,0x000052(%esi)
		mov    %esi,%eax
		movw   $0x000001,0x000052(%ecx)
		call   _02ec10_func
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _05f030_func
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _05f030_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032154_jump:
		mov    0x00000e(%esp),%ebx
		mov    0x00001e(%esp),%edx
		mov    %ecx,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01d624_func
		test   %ax,%ax
		jne    _03218c_jump
		cmpw   $0x0000a8,0x000060(%ecx)
		jne    _032186_jump
		movw   $0x00ffff,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032186_jump:
		movw   $0x000001,0x000042(%ecx)

	_03218c_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032198_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    0x000060(%eax),%dx
		xor    %ebx,%ebx
		cmp    $0x0000a9,%dx
		jne    _03226d_jump
		movl   $0x00000a,(%esp)
		mov    0x000032(%esi),%eax
		mov    _0ce434_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%esi),%ax
		je     _0322ab_jump
		cwtl   
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0cc300_data,%eax
		shl    $0x000002,%edi
		add    %eax,%edi
		cmpw   $0x0000a8,0x000060(%edi)
		jne    _0322ab_jump
		cmpw   $0x000080,0x000042(%edi)
		jle    _032203_jump
		movw   $0x000001,0x000042(%edi)
		jmp    _032214_jump

	_032203_jump:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff80,%eax
		jge    _032214_jump
		movw   $0x00ffff,0x000042(%edi)

	_032214_jump:
		mov    _0cedae_data,%ecx
		mov    _0cedac_data,%ebx
		push   %edi
		mov    0x000040(%edi),%eax
		mov    0x00002c(%edi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %eax,%eax
		sar    $0x000010,%ebx
		add    %eax,%edx
		mov    _0cedc8_data,%eax
		mov    %edx,0x00002c(%edi)
		sar    $0x000010,%eax
		mov    _0cedaa_data,%edx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02c0a0_func
		mov    %eax,%ebx
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edi),%ecx
		add    %eax,%eax
		sub    %eax,%ecx
		mov    %ecx,0x00002c(%edi)
		mov    0x000042(%edi),%cx
		add    %ecx,%ecx
		jmp    _0322ab_jump

	_03226d_jump:
		mov    $0x000001,%edi
		mov    _0cedae_data,%ecx
		mov    _0cedac_data,%ebx
		mov    _0cedaa_data,%edx
		push   %eax
		mov    _0cedc8_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		push   %eax
		mov    $0x000017,%eax
		mov    %edi,0x000008(%esp)
		call   _02c0a0_func
		mov    %eax,%ebx
		mov    0x000042(%esi),%cx

	_0322ab_jump:
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		je     _0324bd_jump
		mov    _0cdc11_data,%ah
		dec    %ebx
		cmp    $0x000002,%ah
		jne    _032337_jump
		mov    _0cdc10_data,%dl
		cmp    %ah,%dl
		je     _0322dd_jump
		cmp    $0x000001,%dl
		je     _0322dd_jump
		mov    $0x000001,%eax
		jmp    _0322df_jump

	_0322dd_jump:
		xor    %eax,%eax

	_0322df_jump:
		test   %eax,%eax
		je     _032337_jump
		cmpb   $0x000008,_0cdc10_data
		je     _0322fb_jump
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func

	_0322fb_jump:
		cmp    $0x000080,%cx
		jle    _032309_jump
		mov    $0x000001,%ecx
		jmp    _032316_jump

	_032309_jump:
		movswl %cx,%eax
		cmp    $0xffffff80,%eax
		jge    _032316_jump
		mov    $0xffffffff,%ecx

	_032316_jump:
		mov    _0cdbd0_data,%edi
		movswl %cx,%eax
		add    %eax,%edi
		xor    %ecx,%ecx
		mov    %edi,_0cdbd0_data
		mov    %cx,_0cdbf6_data
		mov    %cx,_0cdbe6_data

	_032337_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _032349_jump
		cmpb   $0x000008,_0cdc10_data
		je     _032350_jump

	_032349_jump:
		mov    $0x000001,%eax
		jmp    _032352_jump

	_032350_jump:
		xor    %eax,%eax

	_032352_jump:
		test   %eax,%eax
		je     _0324bd_jump
		cmpb   $0x000000,_0cdc11_data
		jne    _03236c_jump
		cmpb   $0x00003d,_0cdc10_data
		je     _032373_jump

	_03236c_jump:
		mov    $0x000001,%eax
		jmp    _032375_jump

	_032373_jump:
		xor    %eax,%eax

	_032375_jump:
		test   %eax,%eax
		je     _0324bd_jump
		mov    0x00006b(%esi),%ch
		cmp    $0x000014,%ch
		jb     _0324bd_jump
		cmp    $0x000016,%ch
		ja     _0324bd_jump
		mov    0x00006d(%esi),%ah
		test   %ah,%ah
		jne    _0324bd_jump
		mov    (%esp),%edx
		mov    0x00006c(%esi),%al
		cmp    %dx,%ax
		jne    _0324bd_jump
		cmpb   $0x000001,0x000075(%esi)
		je     _0323bc_jump
		cmp    $0x000001,%bx
		jne    _032496_jump

	_0323bc_jump:
		testb  $0x000004,_0cdc25_data
		je     _032496_jump
		cmpb   $0x000002,_0cdc11_data
		jne    _0323db_jump
		cmpb   $0x000008,_0cdc10_data
		je     _0323e2_jump

	_0323db_jump:
		mov    $0x000001,%eax
		jmp    _0323e4_jump

	_0323e2_jump:
		xor    %eax,%eax

	_0323e4_jump:
		test   %eax,%eax
		je     _032496_jump
		cmpb   $0x000000,_0cdc11_data
		jne    _0323fe_jump
		cmpb   $0x00003d,_0cdc10_data
		je     _032405_jump

	_0323fe_jump:
		mov    $0x000001,%eax
		jmp    _032407_jump

	_032405_jump:
		xor    %eax,%eax

	_032407_jump:
		test   %eax,%eax
		je     _032496_jump
		mov    _0cdbcc_data,%bx
		xor    %eax,%eax
		mov    0x000028(%esi),%cx
		mov    _0cdc0c_data,%al
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000068(%esi),%dl
		sub    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		cwtl   
		test   %eax,%eax
		jge    _032435_jump
		neg    %eax

	_032435_jump:
		cmp    $0x000019,%eax
		jge    _03247f_jump
		mov    $0xffffffff,%ebx
		mov    $_0cdba4_data,%eax
		xor    %edi,%edi
		xor    %ebp,%ebp
		xor    %edx,%edx
		mov    %di,_0cdbe4_data
		mov    %di,_0cdbe6_data
		mov    %di,_0cedb2_data
		mov    %bx,_0cdbfa_data
		xor    %ebx,%ebx
		mov    %ebp,_0cdbc8_data
		call   _01d374_func
		mov    0x000034(%esi),%ax
		mov    %ax,_0cdbee_data
		jmp    _0324bd_jump

	_03247f_jump:
		test   %dx,%dx
		jge    _03248d_jump
		orb    $0x000008,_0cdc25_data
		jmp    _0324b1_jump

	_03248d_jump:
		andb   $0x0000f7,_0cdc25_data
		jmp    _0324b1_jump

	_032496_jump:
		cmpb   $0x000000,0x000075(%esi)
		je     _0324a1_jump
		test   %bx,%bx
		jne    _0324aa_jump

	_0324a1_jump:
		orb    $0x000008,_0cdc25_data
		jmp    _0324b1_jump

	_0324aa_jump:
		andb   $0x0000f7,_0cdc25_data

	_0324b1_jump:
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02d60c_func

	_0324bd_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0324d0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%bl
		call   _0188d0_func
		sub    %ebx,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0cede8_data,%ax
		add    $0x000090,%eax
		mov    %ax,0x00003c(%edx)
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%edx)
		pop    %edx
		pop    %ebx
		ret    



_032508_func:
		push   %edx
		mov    _096065_data,%dl
		inc    %dl
		cmp    $0x000003,%dl
		jne    _03251e_jump
		mov    %dl,_096066_data
		jmp    _03252d_jump

	_03251e_jump:
		xor    %eax,%eax
		mov    %dl,%al
		mov    _09604e_data(%eax),%al
		mov    %al,_096066_data

	_03252d_jump:
		mov    %dl,_096065_data
		pop    %edx
		ret    



_032634_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    _0cee22_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0329f5_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0329f5_jump
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc300_data,%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		mov    _0cede0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0326de_jump
		mov    $0x000040,%ebx
		mov    $0x000005,%edx
		mov    _0cdc30_data,%eax
		call   _01d374_func
		movzbl 0x000068(%ecx),%edi
		mov    0x000028(%ecx),%edx
		mov    _0cdc30_data,%eax
		add    %edx,%edi
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%edi
		xor    %edx,%edx
		mov    %edi,0x000028(%eax)
		mov    0x000069(%ecx),%dl
		mov    0x00002c(%ecx),%ebx
		movzbl 0x000069(%eax),%edi
		add    %ebx,%edx
		sub    %edi,%edx
		sub    $0x000005,%edx
		mov    0x000024(%eax),%edi
		mov    %edx,0x00002c(%eax)
		test   %edi,%edi
		jne    _0326c3_jump
		call   _01f304_func

	_0326c3_jump:
		mov    _0cdc30_data,%eax
		mov    0x000081(%eax),%dh
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%dh
		mov    %dh,0x000081(%eax)

	_0326de_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x00001c,%al
		jb     _0326fc_jump
		jbe    _03283d_jump
		cmp    $0x00001d,%al
		jbe    _0327b4_jump
		cmp    $0x000028,%al
		je     _03270c_jump
		jmp    _0329f5_jump

	_0326fc_jump:
		cmp    $0x00001a,%al
		jb     _0329f5_jump
		jbe    _03283d_jump
		jmp    _032729_jump

	_03270c_jump:
		mov    %esi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _0329f5_jump
		mov    %esi,%eax
		call   _033838_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032729_jump:
		mov    0x00002c(%ecx),%ebx
		mov    _0de756_data,%eax
		sub    $0x000008,%ebx
		sar    $0x000010,%eax
		mov    %ebx,0x00002c(%ecx)
		cmp    %ebx,%eax
		jle    _032741_jump
		mov    %eax,0x00002c(%ecx)

	_032741_jump:
		mov    _0cede0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032769_jump
		mov    _0cdc30_data,%eax
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebp
		mov    0x000069(%ecx),%dl
		movzbl 0x000069(%eax),%edi
		add    %ebp,%edx
		sub    %edi,%edx
		sub    $0x000005,%edx
		mov    %edx,0x00002c(%eax)

	_032769_jump:
		mov    %esi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _0329f5_jump
		mov    0x000050(%ecx),%dx
		dec    %dx
		mov    %dx,0x000050(%ecx)
		jne    _032799_jump
		mov    $0x000028,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032799_jump:
		mov    $0x00001c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000056(%ecx)
		call   _01d374_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0327b4_jump:
		mov    0x00002c(%ecx),%ebp
		mov    _0de758_data,%eax
		add    $0x000006,%ebp
		sar    $0x000010,%eax
		mov    %ebp,0x00002c(%ecx)
		cmp    %ebp,%eax
		jge    _0327cc_jump
		mov    %eax,0x00002c(%ecx)

	_0327cc_jump:
		mov    _0cede0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0327f5_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edi
		mov    0x000069(%ecx),%al
		add    %eax,%edi
		mov    _0cdc30_data,%eax
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%edi
		sub    $0x000005,%edi
		mov    %edi,0x00002c(%eax)

	_0327f5_jump:
		mov    %esi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _03281b_jump
		mov    $0x00001a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000056(%ecx)
		call   _01d374_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03281b_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _0329f5_jump
		mov    $0x00001b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03283d_jump:
		xor    %eax,%eax
		mov    _0cdbcc_data,%dx
		mov    _0cdc0c_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0de756_data,%di
		mov    0x000068(%ecx),%al
		add    %edi,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    _0cdbd0_data,%bx
		mov    _0cdc0d_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0de75a_data,%di
		mov    0x000069(%ecx),%al
		add    %edi,%eax
		sub    %eax,%ebx
		movswl %dx,%eax
		mov    %eax,%edi
		imul   %eax,%edi
		movswl %bx,%edx
		imul   %edx,%edx
		test   %eax,%eax
		jge    _032891_jump
		neg    %eax

	_032891_jump:
		add    %edi,%edx
		cmp    $0x000028,%eax
		jl     _0328a0_jump
		cmp    $0x000bb8,%edx
		jae    _0328a4_jump

	_0328a0_jump:
		mov    $0x000001,%ah
		jmp    _0328a6_jump

	_0328a4_jump:
		xor    %ah,%ah

	_0328a6_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x00001a,%al
		jb     _0329f5_jump
		jbe    _0328c2_jump
		cmp    $0x00001c,%al
		je     _032982_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0328c2_jump:
		test   %ah,%ah
		jne    _032910_jump
		cmpb   $0x000002,_0cdc11_data
		jne    _0328d8_jump
		cmpb   $0x000000,_0cdc10_data
		je     _032910_jump

	_0328d8_jump:
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%edi
		shl    $0x000002,%eax
		add    %eax,%edi
		xor    %eax,%eax
		mov    (%edi),%edi
		mov    _0cdc10_data,%al
		testb  $0x000040,0x000007(%edi,%eax,8)
		je     _032925_jump
		movswl %bx,%eax
		test   %eax,%eax
		jge    _032903_jump
		neg    %eax

	_032903_jump:
		cmp    $0x00001e,%eax
		jge    _032925_jump
		cmp    $0x000bb8,%edx
		jae    _032925_jump

	_032910_jump:
		mov    $0x00001b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032925_jump:
		cmpw   $0x00001d,0x000056(%ecx)
		jge    _0329f5_jump
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		mov    _0de758_data,%edx
		mov    _096012_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    _0cede0_data,%eax
		sar    $0x000010,%eax
		mov    %edx,0x00002c(%ecx)
		cmp    $0xffffffff,%eax
		je     _0329f1_jump
		movzbl 0x000069(%ecx),%esi
		mov    _0cdc30_data,%eax
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%esi
		sub    $0x000005,%esi
		mov    %esi,0x00002c(%eax)
		incw   0x000056(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032982_jump:
		test   %ah,%ah
		jne    _0329a4_jump
		cmpb   $0x000002,_0cdc11_data
		je     _0329a4_jump
		mov    $0x00001d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0329a4_jump:
		cmpw   $0x00001d,0x000056(%ecx)
		jge    _0329f5_jump
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		mov    _0de756_data,%edx
		mov    _096012_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0cede0_data,%eax
		sar    $0x000010,%eax
		mov    %edx,0x00002c(%ecx)
		cmp    $0xffffffff,%eax
		je     _0329f1_jump
		xor    %edx,%edx
		mov    0x00002c(%ecx),%eax
		mov    0x000069(%ecx),%dl
		add    %eax,%edx
		mov    _0cdc30_data,%eax
		movzbl 0x000069(%eax),%esi
		sub    %esi,%edx
		sub    $0x000005,%edx
		mov    %edx,0x00002c(%eax)

	_0329f1_jump:
		incw   0x000056(%ecx)

	_0329f5_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0329fc_switch:
		.long   _032a2c_case
		.long   _032ace_case
		.long   _032b8f_case
		.long   _032c2b_case




_032a0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _096066_data,%al
		cmp    $0x000003,%al
		ja     _032c3c_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0329fc_switch(,%eax,4)

	_032a2c_case:
		mov    _0cee24_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032c3c_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    0x000050(%edx),%ax
		test   %ax,%ax
		jne    _032a87_jump
		mov    $_096051_data,%eax
		movw   $0x000002,0x000050(%edx)
		call   _033af4_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_092264_data(,%eax,4)
		movb   $0x000001,_0cefbd_data
		call   _03db10_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032a87_jump:
		cmp    $0x000001,%ax
		jne    _032c3c_jump
		mov    0x000024(%edx),%esi
		test   %esi,%esi
		jne    _032c3c_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_092264_data(,%eax,4)
		mov    0x000081(%edx),%cl
		xor    %bh,%bh
		mov    %esi,0x000024(%edx)
		and    $0x0000fb,%cl
		mov    %bh,_0cefbd_data
		mov    %cl,0x000081(%edx)
		call   _032508_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032ace_case:
		mov    _0cee2e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032c3c_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc300_data,%ecx
		shl    $0x000002,%edx
		add    %ecx,%edx
		mov    0x000050(%edx),%si
		test   %si,%si
		jne    _032b45_jump
		mov    _0cee1c_data,%ebx
		sar    $0x000010,%ebx
		movw   $0x000002,0x000050(%edx)
		cmp    $0xffffffff,%ebx
		je     _032b1c_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movw   $0x000002,0x000050(%ecx,%eax,4)

	_032b1c_jump:
		mov    $_096056_data,%eax
		call   _033af4_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_092264_data(,%eax,4)
		movb   $0x000001,_0cefbd_data
		call   _03dbc4_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032b45_jump:
		cmp    $0x000001,%si
		jne    _032c3c_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _032c3c_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_092264_data(,%eax,4)
		mov    0x000081(%edx),%cl
		movl   $0x000000,0x000024(%edx)
		xor    %bh,%bh
		and    $0x0000fb,%cl
		mov    %bh,_0cefbd_data
		mov    %cl,0x000081(%edx)
		call   _032508_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032b8f_case:
		mov    _0cee2c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032c3c_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x000050(%edx),%bx
		test   %bx,%bx
		jne    _032be9_jump
		mov    $_09605b_data,%eax
		movw   $0x000002,0x000050(%edx)
		call   _033af4_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_092264_data(,%eax,4)
		movb   $0x000001,_0cefbd_data
		call   _03dd70_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032be9_jump:
		cmp    $0x000001,%bx
		jne    _032c3c_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _032c3c_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_092264_data(,%eax,4)
		mov    0x000081(%edx),%cl
		movl   $0x000000,0x000024(%edx)
		xor    %bh,%bh
		and    $0x0000fb,%cl
		mov    %bh,_0cefbd_data
		mov    %cl,0x000081(%edx)
		call   _032508_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032c2b_case:
		mov    $_096060_data,%eax
		call   _033af4_func
		mov    %edx,%eax
		call   _033988_func

	_032c3c_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_032c44_switch:
		.long   _032c88_case
		.long   _032c88_case
		.long   _032c91_case
		.long   _032c9a_case
		.long   _032caa_case
		.long   _032ca3_case




_032c5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x00006d(%eax)
		jne    _032caa_case
		cmpb   $0x000027,0x00006c(%esi)
		jne    _032caa_case
		mov    _0cefdf_data,%al
		cmp    $0x000005,%al
		ja     _032caa_case
		and    $0x0000ff,%eax
		jmp    *%cs:_032c44_switch(,%eax,4)

	_032c88_case:
		mov    %esi,%eax
		call   _033788_func
		jmp    _032caa_case

	_032c91_case:
		mov    %esi,%eax
		call   _033838_func
		jmp    _032caa_case

	_032c9a_case:
		mov    %esi,%eax
		call   _0338bc_func
		jmp    _032caa_case

	_032ca3_case:
		mov    %esi,%eax
		call   _033988_func

	_032caa_case:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _032d15_jump
		cmpb   $0x000006,0x00006c(%esi)
		jne    _032d15_jump
		cmpb   $0x000004,0x00006b(%esi)
		jne    _032cc7_jump
		movw   $0x00fffc,0x000042(%esi)
		jmp    _033084_jump

	_032cc7_jump:
		cmpb   $0x000004,_0cefdf_data
		jne    _032ceb_jump
		mov    %esi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _033084_jump
		mov    %esi,%eax
		call   _033988_func
		jmp    _033084_jump

	_032ceb_jump:
		mov    %esi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _033084_jump
		mov    0x000081(%esi),%dh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%esi)
		jmp    _033084_jump

	_032d15_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _032f4c_jump
		mov    0x00006c(%esi),%cl
		cmp    $0x000008,%cl
		je     _032d49_jump
		cmp    $0x00000a,%cl
		je     _032d49_jump
		cmp    $0x00000c,%cl
		je     _032d49_jump
		cmp    $0x00000e,%cl
		je     _032d49_jump
		cmp    $0x000016,%cl
		je     _032d49_jump
		cmp    $0x000017,%cl
		je     _032d49_jump
		cmp    $0x000018,%cl
		jne    _032f4c_jump

	_032d49_jump:
		cmpb   $0x000016,0x00006b(%esi)
		jne    _032f4c_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		sub    $0x000060,%eax
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    $0xfffffffb,%edi
		add    %eax,%edx
		xor    %eax,%eax
		mov    %di,_0de754_data
		mov    %ax,_0de752_data
		mov    0x00006c(%esi),%al
		sub    $0x000080,%edx
		cmp    $0x00000e,%al
		jb     _032deb_jump
		jbe    _032e5a_jump
		cmp    $0x000017,%al
		jb     _032dda_jump
		jbe    _032ebe_jump
		cmp    $0x000018,%al
		je     _032f05_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032dda_jump:
		cmp    $0x000016,%al
		je     _032e78_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032deb_jump:
		cmp    $0x00000a,%al
		jb     _032dfe_jump
		jbe    _032e21_jump
		cmp    $0x00000c,%al
		je     _032e3c_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032dfe_jump:
		cmp    $0x000008,%al
		jne    _033084_jump
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		xor    %ebx,%ebx
		call   _033478_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032e21_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    %ecx,%ebx
		call   _033478_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032e3c_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    $0x000002,%ebx
		call   _033478_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032e5a_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    $0x000003,%ebx
		call   _033478_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032e78_jump:
		mov    $0x000002,%al
		mov    $0x000003,%ecx
		movswl %dx,%edi
		movswl %bx,%esi
		mov    $0x000012,%ebx
		mov    %al,_0de75c_data
		mov    $_096051_data,%eax
		mov    %edi,%edx
		call   _033af4_func
		mov    %esi,%eax
		call   _033478_func
		mov    $0x000005,%ecx
		mov    $0x000012,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _033478_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032ebe_jump:
		mov    $0x000002,%ch
		mov    $_096056_data,%eax
		movswl %dx,%esi
		movswl %bx,%edi
		mov    $0x000013,%ebx
		mov    %ch,_0de75c_data
		call   _033af4_func
		mov    %esi,%edx
		mov    $0x000001,%ecx
		mov    %edi,%eax
		call   _033478_func
		mov    $0x000004,%ecx
		mov    $0x000013,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _033478_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032f05_jump:
		mov    $0x000002,%cl
		mov    $_09605b_data,%eax
		movswl %dx,%esi
		movswl %bx,%edi
		mov    $0x000014,%ebx
		mov    %cl,_0de75c_data
		call   _033af4_func
		mov    %esi,%edx
		mov    $0x000001,%ecx
		mov    %edi,%eax
		call   _033478_func
		mov    $0x000002,%ecx
		mov    $0x000014,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _033478_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032f4c_jump:
		mov    0x00006d(%esi),%cl
		test   %cl,%cl
		jne    _03303f_jump
		mov    0x00006c(%esi),%ch
		cmp    $0x00000f,%ch
		jne    _03303f_jump
		mov    0x00006b(%esi),%al
		test   %al,%al
		jne    _032fba_jump
		xor    %eax,%eax
		mov    %cl,%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %ch,%al
		mov    0x000005(%edx,%eax,8),%al
		and    %ch,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _033084_jump
		mov    %esi,%eax
		call   _077418_func
		mov    0x000081(%esi),%dh
		movl   $0x000001,0x000024(%esi)
		or     $0x00000c,%dh
		mov    %dh,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032fba_jump:
		cmp    $0x000016,%al
		jne    _033084_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		xor    %ecx,%ecx
		sub    $0x000060,%eax
		mov    %cx,_0de752_data
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    $0x000001,%ecx
		add    %edx,%eax
		mov    $0xfffffffe,%edx
		sub    $0x000080,%eax
		mov    %dx,_0de754_data
		movswl %ax,%edx
		movswl %bx,%eax
		mov    $0x000004,%ebx
		call   _033478_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03303f_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _03305b_jump
		cmpb   $0x000015,0x00006c(%esi)
		jne    _03305b_jump
		mov    %esi,%eax
		call   _032a0c_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03305b_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _033084_jump
		mov    0x00006c(%esi),%dh
		cmp    $0x00001a,%dh
		je     _03307d_jump
		cmp    $0x00001b,%dh
		je     _03307d_jump
		cmp    $0x00001c,%dh
		je     _03307d_jump
		cmp    $0x00001d,%dh
		je     _03307d_jump
		cmp    $0x000028,%dh
		jne    _033084_jump

	_03307d_jump:
		mov    %esi,%eax
		call   _032634_func

	_033084_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033090_func:
		push   %ebx
		push   %ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0330cb_jump
		mov    0x00006c(%eax),%dh
		cmp    $0x000010,%dh
		je     _0330a5_jump
		cmp    $0x000011,%dh
		jne    _0330cb_jump

	_0330a5_jump:
		cmpb   $0x000000,0x00007e(%eax)
		je     _0330cb_jump
		mov    0x000076(%eax),%cl
		test   %cl,%cl
		je     _0330b9_jump
		mov    %cl,%ch
		dec    %ch
		mov    %ch,0x000076(%eax)

	_0330b9_jump:
		cmpb   $0x000000,0x000076(%eax)
		jne    _0330cb_jump
		mov    $0x000006,%ebx
		xor    %edx,%edx
		call   _01d374_func

	_0330cb_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0330d0_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _033122_jump
		cmpb   $0x000007,0x00006c(%ebx)
		jne    _0330ec_jump
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d364_func

	_0330ec_jump:
		cmpb   $0x000009,0x00006c(%ebx)
		jne    _0330fe_jump
		mov    $0x00000a,%edx
		mov    %ebx,%eax
		call   _01d364_func

	_0330fe_jump:
		cmpb   $0x00000b,0x00006c(%ebx)
		jne    _033110_jump
		mov    $0x00000c,%edx
		mov    %ebx,%eax
		call   _01d364_func

	_033110_jump:
		cmpb   $0x00000d,0x00006c(%ebx)
		jne    _033122_jump
		mov    $0x00000e,%edx
		mov    %ebx,%eax
		call   _01d364_func

	_033122_jump:
		pop    %edx
		pop    %ebx
		ret    



_033128_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000076(%eax)
		je     _0333c6_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000005,%dl
		jne    _03315b_jump
		cmpb   $0x000001,_0cefc8_data
		jne    _0332eb_jump
		movb   $0x000000,0x000076(%esi)
		jmp    _0332eb_jump

	_03315b_jump:
		cmp    $0x000004,%dl
		jne    _033259_jump
		mov    _0cee10_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %ecx,%eax
		mov    _0cc300_data,%ecx
		shl    $0x000002,%eax
		mov    0x000056(%esi),%di
		add    %eax,%ecx
		cmp    $0x000001,%di
		jne    _033202_jump
		movw   $0x000000,0x000056(%esi)
		mov    0x000081(%ecx),%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		xor    %edx,%edx
		mov    %bh,0x000081(%ecx)
		xor    %ebx,%ebx
		movb   $0x0000fe,0x000076(%ecx)
		call   _01d374_func
		mov    _0cdbcc_data,%ax
		movl   $0x000000,0x000028(%ecx)
		mov    %ax,0x00003c(%ecx)
		mov    _0cdbd0_data,%ax
		mov    %ax,0x00003e(%ecx)
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x00002c(%ecx)
		or     $0x000004,%al
		mov    %al,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f304_func
		xor    %ah,%ah
		movb   $0x000000,0x00007e(%ecx)
		mov    %ah,_0cefe2_data
		mov    %ah,_0cefe8_data
		mov    %ah,_0cefe7_data

	_033202_jump:
		mov    0x00003c(%ecx),%dx
		movzbw 0x000068(%esi),%di
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%ecx),%al
		add    %ebx,%edi
		add    %edx,%eax
		sub    %edi,%eax
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x00003e(%ecx),%bx
		mov    0x000069(%ecx),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		mov    _0cefe2_data,%cl
		sub    %eax,%ebx
		cmp    $0x000001,%cl
		jne    _0332eb_jump
		cmpb   $0x000019,_0cefe7_data
		jne    _0332eb_jump
		movb   $0x000000,0x000076(%esi)
		jmp    _0332eb_jump

	_033259_jump:
		movzbw _0cdc0c_data,%di
		mov    _0cdbcc_data,%bx
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %ebx,%edi
		add    %edx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		movw   $0x000000,0x000056(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdc10_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _0332c0_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdbd0_data,%cx
		mov    _0cdc0d_data,%al
		add    %ecx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		jmp    _0332eb_jump

	_0332c0_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0cdc0d_data,%dl
		mov    _0cdc18_data,%al
		sub    %eax,%edx
		mov    _0cdbd0_data,%ebx
		sar    %edx
		add    %ebx,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		sub    %eax,%edx
		mov    %edx,%ebx

	_0332eb_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _0332f4_jump
		neg    %eax

	_0332f4_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _0332ff_jump
		neg    %eax

	_0332ff_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		test   %dx,%dx
		jle    _033331_jump
		mov    $0x000004,%cl
		mov    %edi,%eax
		mov    -0x000002(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000004,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_033331_jump:
		cmpb   $0x000000,_0cef4f_data
		jne    _0333c6_jump
		mov    _0de752_data,%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _03335b_jump
		mov    $0x000001,%eax
		jg     _03335b_jump
		neg    %eax

	_03335b_jump:
		add    %ax,_0de754_data
		mov    _0de750_data,%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _03337e_jump
		mov    $0x000001,%eax
		jg     _03337e_jump
		neg    %eax

	_03337e_jump:
		mov    _0de752_data,%bx
		add    %eax,%ebx
		mov    0x000054(%esi),%ecx
		mov    %bx,_0de752_data
		mov    0x00002c(%esi),%dx
		mov    _0de752_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0de754_data,%di
		movswl %dx,%eax
		mov    0x000028(%esi),%dx
		xor    %ebx,%ebx
		add    %edi,%edx
		mov    0x00006c(%esi),%bl
		movswl %dx,%ebp
		mov    %eax,%edx
		mov    %ebp,%eax
		call   _033478_func
		movb   $0x000000,0x000076(%esi)

	_0333c6_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0333d0_switch:
		.long   _03341d_case
		.long   _033438_case
		.long   _033451_case
		.long   _033463_case




_0333e0_func:
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x000076(%eax)
		je     _033474_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0333f8_jump
		cmpb   $0x000004,0x00006c(%eax)
		je     _0333ff_jump

	_0333f8_jump:
		mov    $0x000001,%edx
		jmp    _033401_jump

	_0333ff_jump:
		xor    %edx,%edx

	_033401_jump:
		test   %edx,%edx
		je     _033474_jump
		movb   $0x000000,0x000076(%eax)
		mov    0x00006c(%eax),%al
		cmp    $0x000003,%al
		ja     _033474_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0333d0_switch(,%eax,4)

	_03341d_case:
		mov    _0ced81_data,%ch
		and    $0x0000e7,%ch
		mov    %ch,%al
		mov    %ch,_0ced81_data
		or     $0x000008,%al
		mov    %al,_0ced81_data
		pop    %edx
		pop    %ecx
		ret    

	_033438_case:
		mov    $_0cdba4_data,%eax
		call   _077338_func
		andb   $0x00009f,_0ced81_data
		call   _058efc_func
		pop    %edx
		pop    %ecx
		ret    

	_033451_case:
		mov    $_0cdba4_data,%eax
		call   _077338_func
		call   _058fac_func
		pop    %edx
		pop    %ecx
		ret    

	_033463_case:
		mov    $_0cdba4_data,%eax
		call   _077338_func
		andb   $0x0000fe,_0ced80_data

	_033474_jump:
		pop    %edx
		pop    %ecx
		ret    



_033478_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %ax,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %ecx,0x000008(%esp)
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%si
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %edx,%edx

	_0334a2_jump:
		cmpw   $0x0000d7,0x000060(%ecx)
		jne    _0334b4_jump
		cmp    0x000024(%ecx),%edx
		jne    _0334b4_jump
		mov    $0x000001,%ebx

	_0334b4_jump:
		add    $0x000084,%ecx
		inc    %eax
		test   %bx,%bx
		jne    _0334c5_jump
		cmp    %si,%ax
		jl     _0334a2_jump

	_0334c5_jump:
		sub    $0x000084,%ecx
		test   %bx,%bx
		je     _03350e_jump
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f304_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    -0x000002(%esp),%eax
		movb   $0x000001,0x000076(%ecx)
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%esp),%eax
		mov    0x00000c(%esp),%bl
		jmp    _03358e_jump

	_03350e_jump:
		mov    _0cc300_data,%eax
		xor    %edx,%edx
		xor    %edi,%edi

	_033517_jump:
		cmpw   $0x0000d7,0x000060(%eax)
		jne    _03352d_jump
		xor    %ecx,%ecx
		mov    0x00006b(%eax),%cl
		cmp    %dx,%cx
		jle    _03352d_jump
		mov    %ebx,%edi
		mov    %ecx,%edx

	_03352d_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jl     _033517_jump
		movswl %di,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0cc300_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f304_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    -0x000002(%esp),%eax
		movb   $0x000001,0x000076(%ecx)
		sar    $0x000010,%eax
		mov    0x00000c(%esp),%bl
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%esp),%eax
		xor    %edx,%edx

	_03358e_jump:
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d374_func
		movb   $0x000000,0x00006b(%ecx)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    



_0335ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    _0ced81_data,%ah
		test   $0x000018,%ah
		jne    _0335c6_jump
		test   $0x000060,%ah
		jne    _0335c6_jump
		test   $0x000002,%ah
		je     _033618_jump

	_0335c6_jump:
		mov    $_0cdba4_data,%eax
		call   _077338_func
		mov    _0ced81_data,%cl
		test   $0x000018,%cl
		je     _0335e6_jump
		mov    %cl,%ch
		or     $0x000018,%ch
		mov    %ch,_0ced81_data

	_0335e6_jump:
		testb  $0x000060,_0ced81_data
		je     _0335f4_jump
		call   _058efc_func

	_0335f4_jump:
		testb  $0x000002,_0ced81_data
		je     _033602_jump
		call   _058fac_func

	_033602_jump:
		mov    0x000081(%edx),%bl
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%edx)

	_033618_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03361c_func:
		push   %edx
		mov    _0cee22_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03365b_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    _0de754_data,%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%eax)
		mov    %dx,0x00003c(%eax)
		mov    _0de758_data,%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%eax)
		mov    %dx,0x00003e(%eax)

	_03365b_jump:
		pop    %edx
		ret    



_033660_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%dl
		mov    _0cee22_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _03370e_jump
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0cc300_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    _0de754_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0de756_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		test   %dl,%dl
		je     _03370e_jump
		mov    $0x000040,%ebx
		mov    $0x000005,%edx
		mov    _0cdc30_data,%eax
		call   _01d374_func
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%bl
		mov    _0cdc30_data,%eax
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,0x000028(%eax)
		mov    0x000069(%ecx),%dl
		mov    0x00002c(%ecx),%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%ebx
		lea    -0x000005(%ebx),%edx
		mov    0x000024(%eax),%ebx
		mov    %edx,0x00002c(%eax)
		test   %ebx,%ebx
		jne    _0336f3_jump
		call   _01f304_func

	_0336f3_jump:
		mov    _0cdc30_data,%eax
		mov    0x000081(%eax),%dl
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%dl
		mov    %dl,0x000081(%eax)

	_03370e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033714_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00002c(%eax),%ax
		mov    %ax,_0de75a_data
		mov    _0cedfa_data,%ax
		sub    $0x0000b8,%eax
		mov    %ax,_0de758_data
		mov    _0cee22_data,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    %bx,_0de756_data
		cmp    $0xffffffff,%eax
		je     _033781_jump
		mov    %eax,%ebx
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc300_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%al
		mov    0x00002c(%edx),%cx
		mov    %eax,%edx
		add    %ecx,%edx
		xor    %eax,%eax
		sub    $0x0000b8,%edx
		mov    0x000069(%ebx),%al
		sub    %eax,%edx
		add    $0x000024,%edx
		mov    %dx,_0de758_data

	_033781_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033788_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movb   $0x000001,_0cefdf_data
		mov    _0cedfa_data,%ax
		mov    %ax,_0cedc6_data
		mov    %ax,_0cedbc_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000060(%ecx),%ax
		mov    %dx,_0cedc8_data
		mov    %dx,_0cedba_data
		mov    _092264_data(,%eax,4),%dl
		and    $0x00007f,%dl
		xor    %ebx,%ebx
		mov    %dl,_092264_data(,%eax,4)
		mov    %ecx,%eax
		mov    %bx,0x000050(%ecx)
		mov    _0ced80_data,%bl
		xor    %dh,%dh
		and    $0x0000fe,%bl
		mov    %dh,_0cefbd_data
		mov    %bl,_0ced80_data
		call   _0324d0_func
		mov    %ecx,%eax
		call   _033714_func
		mov    _0cee22_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _033821_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		movw   $0x000003,0x000050(%edx,%eax,4)
		movw   $0x00001d,0x000056(%edx,%eax,4)

	_033821_jump:
		call   _03361c_func
		mov    $0x00001a,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033838_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		movb   $0x000002,_0cefdf_data
		mov    _0cedfa_data,%ax
		mov    %ax,_0cedc6_data
		mov    %ax,_0cedbc_data
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000060(%edx),%ax
		mov    %bx,_0cedc8_data
		mov    %bx,_0cedba_data
		andb   $0x00007f,_092264_data(,%eax,4)
		xor    %bh,%bh
		mov    %edx,%eax
		mov    %bh,_0cefbd_data
		call   _0324d0_func
		mov    %edx,%eax
		call   _033714_func
		mov    $0x000001,%eax
		call   _033660_func
		movl   $0x000001,0x000024(%edx)
		mov    0x000081(%edx),%cl
		movw   $0x000000,0x000050(%edx)
		or     $0x000004,%cl
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _03ed90_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0338bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movb   $0x000003,_0cefdf_data
		mov    _0cedfa_data,%ax
		mov    %ax,_0cedc6_data
		mov    %ax,_0cedbc_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000060(%ecx),%ax
		mov    %dx,_0cedc8_data
		mov    %dx,_0cedba_data
		andb   $0x00007f,_092264_data(,%eax,4)
		xor    %dh,%dh
		mov    %ecx,%eax
		mov    %dh,_0cefbd_data
		call   _0324d0_func
		mov    %ecx,%eax
		call   _033714_func
		xor    %eax,%eax
		call   _033660_func
		movl   $0x000000,0x000028(%ecx)
		xor    %ebx,%ebx
		movl   $0x000001,0x000024(%ecx)
		mov    %bx,0x000040(%ecx)
		mov    %bx,0x000042(%ecx)
		mov    _0cedf8_data,%edx
		mov    0x000028(%ecx),%eax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%ecx)
		xor    %eax,%eax
		mov    0x000081(%ecx),%bl
		mov    0x000069(%ecx),%al
		or     $0x000004,%bl
		sub    %eax,%edx
		mov    %bl,0x000081(%ecx)
		sub    $0x000014,%edx
		mov    $0x000015,%ebx
		mov    %edx,0x00002c(%ecx)
		mov    %ecx,%eax
		mov    %dx,0x00003e(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000050(%ecx)
		call   _01d374_func
		xor    %bh,%bh
		mov    _09604e_data,%al
		mov    %bh,_096065_data
		mov    %al,_096066_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033988_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		movb   $0x000005,_0cefdf_data
		mov    _0cedfa_data,%ax
		mov    %ax,_0cedc6_data
		mov    %ax,_0cedbc_data
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000060(%edx),%ax
		mov    %bx,_0cedc8_data
		mov    %bx,_0cedba_data
		andb   $0x00007f,_092264_data(,%eax,4)
		xor    %bh,%bh
		mov    %edx,%eax
		mov    %bh,_0cefbd_data
		call   _0324d0_func
		mov    %edx,%eax
		call   _033714_func
		xor    %eax,%eax
		call   _033660_func
		testb  $0x000002,_0ced81_data
		je     _0339fb_jump
		mov    $_0cdba4_data,%eax
		call   _077338_func
		call   _058fac_func

	_0339fb_jump:
		movl   $0x000000,0x000028(%edx)
		mov    $0xffffffc4,%esi
		movw   $0x000000,0x000050(%edx)
		mov    _0cedf8_data,%ebx
		mov    0x000081(%edx),%ch
		movl   $0x000000,0x000024(%edx)
		xor    %edi,%edi
		sar    $0x000010,%ebx
		and    $0x0000fb,%ch
		mov    %si,_0cee20_data
		mov    %di,_0cee18_data
		mov    0x000028(%edx),%eax
		mov    %di,_0cee1c_data
		mov    %ax,0x00003c(%edx)
		xor    %eax,%eax
		mov    %di,_0cee16_data
		mov    0x000069(%edx),%al
		mov    %ch,0x000081(%edx)
		sub    %eax,%ebx
		mov    $0x000001,%al
		sub    $0x000014,%ebx
		mov    %al,_0cefc8_data
		mov    _0ced88_data,%ah
		mov    %ebx,0x00002c(%edx)
		or     $0x000080,%ah
		mov    %bx,0x00003e(%edx)
		mov    %ah,_0ced88_data
		mov    %al,_0cefdc_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033a84_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    0x000050(%eax),%al
		cmp    $0x000005,%al
		jae    _033ae9_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    _0de727_data(%eax),%bl
		test   %bl,%bl
		je     _033ae2_jump
		movb   $0x000004,0x00007e(%edx)
		mov    _0de728_data(%eax),%bx
		dec    %bx
		mov    %bx,_0de728_data(%eax)
		jne    _033aed_jump
		mov    $0x000064,%esi
		mov    _0de727_data(%eax),%bh
		mov    %si,_0de728_data(%eax)
		dec    %bh
		mov    %bh,_0de727_data(%eax)
		jne    _033aed_jump
		mov    %bh,0x00007e(%edx)
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_033ae2_jump:
		mov    %bl,0x00007e(%edx)
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_033ae9_jump:
		movb   $0x000000,0x00007e(%edx)

	_033aed_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_033af4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %dl,%dl

	_033afb_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		imul   $0x00000a,%ebx,%eax
		mov    _0de727_data(%eax),%dh
		test   %dh,%dh
		jne    _033b39_jump
		mov    (%ecx,%ebx,1),%bl
		mov    %bl,_0de727_data(%eax)
		movw   $0x000064,_0de728_data(%eax)
		mov    _0de724_data(%eax),%al
		and    $0x0000ff,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%ebx
		mov    %dh,0x00006b(%ebx,%eax,1)

	_033b39_jump:
		inc    %dl
		cmp    $0x000005,%dl
		jb     _033afb_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033b50_func:
		adc    %eax,(%eax)
		add    %al,(%eax)
		adc    %al,(%eax)
		add    %al,(%eax)
		or     (%eax),%eax
		add    %al,(%eax)
		or     (%eax),%eax
		add    %al,(%eax)
		or     (%eax),%eax
		add    %al,(%eax)
		add    $0x000000,%al
		add    %al,(%eax)

	_033b68_jump:
		mov    $0x000001,%eax
		call   _053298_func
		call   _01a950_func
		call   _040c04_func
		mov    $_0cdba4_data,%eax
		call   _018ae8_func
		mov    $_0cdba4_data,%eax
		call   _0545ac_func
		call   _036308_func
		call   _040974_func
		test   %ax,%ax
		jne    _033bbd_jump
		call   _040a00_func
		test   %ax,%ax
		jne    _033bbd_jump
		call   _040a8c_func
		test   %ax,%ax
		jne    _033bbd_jump
		call   _040b18_func
		test   %ax,%ax
		je     _033bc4_jump

	_033bbd_jump:
		movb   $0x000001,_0cef9b_data

	_033bc4_jump:
		call   *_0cc64c_data
		xor    %eax,%eax
		mov    _0cef9b_data,%al
		ret    



_033bd4_func:
		push   %edx
		call   _01a950_func
		call   _035ebc_func
		call   _01b3ec_func
		call   _067d14_func
		call   _040c04_func
		mov    _0ced76_data,%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		cmp    $0xffffffff,%eax
		je     _033c06_jump
		cmpb   $0x000000,_0cefaf_data
		je     _033c08_jump

	_033c06_jump:
		mov    $0x000001,%dl

	_033c08_jump:
		xor    %eax,%eax
		mov    %dl,%al
		pop    %edx
		ret    



_033ca0_func:
		push   %edx
		push   %esi
		push   %edi
		call   _040c04_func
		mov    _096068_data,%al
		mov    %al,_0cefd3_data
		call   _067438_func
		mov    _0cefd3_data,%dl
		mov    _095b99_data,%ah
		mov    %dl,_096068_data
		test   %ah,%ah
		je     _033cf5_jump
		xor    %dl,%dl
		mov    %dl,_095b99_data
		call   _016dee_func
		call   _016dde_func
		mov    $0x000001,%eax
		call   _023a7c_func
		call   _033f84_func
		call   _03a340_func
		jmp    _033cfa_jump

	_033cf5_jump:
		call   _033f84_func

	_033cfa_jump:
		call   _033f84_func
		cmpw   $0x000003,_0cecee_data
		jne    _033d12_jump
		movw   $0x000001,_0ceccc_data

	_033d12_jump:
		cmpw   $0x000000,_0cecda_data
		jne    _033d26_jump
		mov    _0cef8e_data,%dh
		test   %dh,%dh
		je     _033d2d_jump

	_033d26_jump:
		mov    $0x000001,%edx
		jmp    _033d2f_jump

	_033d2d_jump:
		xor    %dl,%dl

	_033d2f_jump:
		cmpb   $0x000000,_0cef8e_data
		je     _033d8d_jump
		cmpw   $0x000001,_0cecee_data
		jne    _033d78_jump
		mov    _0ced06_data,%edi
		sar    $0x000010,%edi
		shl    $0x000002,%edi
		sub    $0x000004,%edi
		mov    $_0ccca4_data,%esi
		add    $_0ccca8_data,%edi
		push   %edi

	_033d5d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _033d75_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _033d5d_jump

	_033d75_jump:
		pop    %edi
		jmp    _033d8d_jump

	_033d78_jump:
		mov    _0ced06_data,%edi
		sar    $0x000010,%edi
		mov    _0c06a4_data,%al
		mov    %al,_0ccca4_data(,%edi,4)

	_033d8d_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_033d94_func:
		push   %ebx
		push   %edx
		call   _040c04_func
		call   _01cb68_func
		mov    _0de767_data,%al
		mov    %al,_0cefd3_data
		call   _066fc4_func
		mov    _0cefd3_data,%al
		mov    %al,_0de767_data
		cmpb   $0x000000,_095b99_data
		je     _033dea_jump
		xor    %dl,%dl
		mov    %dl,_095b99_data
		call   _016dee_func
		call   _016dde_func
		mov    $0x000001,%eax
		call   _023a7c_func
		call   _033f84_func
		call   _03a340_func
		jmp    _033def_jump

	_033dea_jump:
		call   _033f84_func

	_033def_jump:
		call   _040c04_func
		mov    _0de766_data,%al
		mov    %al,_0cefd3_data
		call   _06729c_func
		mov    _0cefd3_data,%al
		mov    %al,_0de766_data
		call   _067760_func
		cmpw   $0x000001,_0cecee_data
		jne    _033e26_jump
		cmpw   $0x000000,_0ced08_data
		jne    _033e44_jump

	_033e26_jump:
		cmpw   $0x000003,_0cecee_data
		jne    _033e72_jump
		cmpw   $0x000000,_0ced02_data
		jne    _033e72_jump
		cmpw   $0x000000,_0ced08_data
		je     _033e72_jump

	_033e44_jump:
		cmpw   $0x000000,_0cecda_data
		jne    _033e5d_jump
		call   _0673d4_func
		mov    $_033ca0_func,%eax
		call   _03b9e8_func

	_033e5d_jump:
		cmpb   $0x000000,_0cef8e_data
		jne    _033e72_jump
		xor    %eax,%eax
		mov    _0ced08_data,%al
		call   _071540_func

	_033e72_jump:
		cmpw   $0x000000,_0cecce_data
		je     _033e81_jump
		call   _066f70_func

	_033e81_jump:
		mov    _0cc640_data,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0cecbc_data,%ax
		inc    %edx
		mov    %bx,_0cecee_data
		mov    %edx,_0cc640_data
		cmp    %edx,%eax
		jg     _033ebb_jump
		cmpw   $0x000000,_0ceccc_data
		jne    _033ebb_jump
		cmpb   $0x000000,_0cefd1_data
		jne    _033ebb_jump
		call   _03524c_func

	_033ebb_jump:
		cmpb   $0x000000,_0cefd1_data
		jne    _033ee0_jump
		cmpw   $0x000000,_0ceccc_data
		jne    _033ee0_jump
		cmpb   $0x000000,_0cef89_data
		jne    _033ee0_jump
		cmpb   $0x000000,_0cef8e_data
		je     _033ee8_jump

	_033ee0_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ebx
		ret    

	_033ee8_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret    



_033ef0_func:
		push   %ebx
		push   %edx
		movb   $0x000001,_094eb8_data
		mov    $_0ccda8_data,%eax
		xor    %edx,%edx
		call   _035eac_func
		mov    $_0c7198_data,%eax
		xor    %bl,%bl
		call   _03bb78_func
		call   _03b920_func
		call   _066e98_func
		call   _066f70_func
		mov    %edx,_0cc640_data
		call   _0673d4_func
		mov    $0x000001,%dl
		mov    $_033d94_func,%eax
		mov    %bl,_096068_data
		mov    $0x000064,%ebx
		mov    %dl,_0de767_data
		mov    %dl,_0de766_data
		xor    %edx,%edx
		mov    %bx,_0ced0a_data
		mov    %dx,_0ced04_data
		mov    %dx,_0ced8c_data
		mov    %dx,_0ced8a_data
		call   _03b9e8_func
		call   _03b970_func
		call   _03bbec_func
		mov    $_0ccda8_data,%eax
		call   _07b814_func
		pop    %edx
		pop    %ebx
		ret    



_033f84_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    _0ced04_data,%ax
		mov    _0ced0a_data,%bx
		mov    $0x00001e,%edx
		cmp    %bx,%ax
		jge    _033fb6_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _033fb6_jump
		incw   _0ced04_data
		jmp    _033fd7_jump

	_033fb6_jump:
		cmpb   $0x000000,_0cefd3_data
		jne    _033fce_jump
		mov    _0cece6_data,%ax
		inc    %eax
		mov    %ax,_0ced04_data
		jmp    _033fd7_jump

	_033fce_jump:
		xor    %ecx,%ecx
		mov    %cx,_0ced04_data

	_033fd7_jump:
		mov    _0cecc8_data,%di
		cmp    %di,%dx
		jle    _033fef_jump
		mov    %edi,%edx
		inc    %edx
		mov    %dx,_0cecc8_data
		jmp    _033ff7_jump

	_033fef_jump:
		xor    %eax,%eax
		mov    %ax,_0cecc8_data

	_033ff7_jump:
		call   _03bc8c_func
		push   $0x000000
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cecf4_data,%ebx
		mov    _0c2538_data,%eax
		sar    $0x000010,%ebx
		call   _01a178_func
		cmpb   $0x000001,_0cef88_data
		jne    _03403f_jump
		mov    $0x000035,%edx
		mov    $0x000091,%esi
		mov    $0x0000ff,%edi
		mov    %si,0x000008(%esp)
		mov    %di,0x00000c(%esp)
		jmp    _034058_jump

	_03403f_jump:
		mov    $0x000035,%edx
		mov    $0x00009f,%ebx
		mov    $0x000109,%ecx
		mov    %bx,0x000008(%esp)
		mov    %cx,0x00000c(%esp)

	_034058_jump:
		cmpw   $0x000001,_0cecf4_data
		jne    _034090_jump
		mov    $_0ca7f8_data,%edi
		mov    _0c253c_data,%esi
		push   %edi

	_03406e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034086_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03406e_jump

	_034086_jump:
		pop    %edi
		mov    %dx,_0ca8c8_data
		jmp    _0340ad_jump

	_034090_jump:
		push   $0x000005
		mov    $0x000001,%ecx
		mov    _0cecfc_data,%ebx
		mov    _0c253c_data,%eax
		movswl %dx,%edx
		sar    $0x000010,%ebx
		call   _01a178_func

	_0340ad_jump:
		cmpw   $0x000002,_0cecf4_data
		jne    _0340e8_jump
		mov    $_0ca7f8_data,%edi
		mov    _0c2540_data,%esi
		push   %edi

	_0340c3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0340db_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0340c3_jump

	_0340db_jump:
		pop    %edi
		mov    0x000008(%esp),%eax
		mov    %ax,_0ca8c8_data
		jmp    _034109_jump

	_0340e8_jump:
		push   $0x000005
		mov    0x00000a(%esp),%edx
		mov    $0x000001,%ecx
		mov    _0cecfc_data,%ebx
		mov    _0c2540_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01a178_func

	_034109_jump:
		cmpw   $0x000003,_0cecf4_data
		jne    _034144_jump
		mov    $_0ca7f8_data,%edi
		mov    _0c2544_data,%esi
		push   %edi

	_03411f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034137_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03411f_jump

	_034137_jump:
		pop    %edi
		mov    0x00000c(%esp),%eax
		mov    %ax,_0ca8c8_data
		jmp    _034165_jump

	_034144_jump:
		push   $0x000005
		mov    0x00000e(%esp),%edx
		mov    $0x000001,%ecx
		mov    _0cecfc_data,%ebx
		mov    _0c2544_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01a178_func

	_034165_jump:
		mov    $_0ca7f8_data,%eax
		mov    $0x000001,%ebp
		xor    %ecx,%ecx
		call   _01ec48_func
		mov    %cx,0x000014(%esp)
		jmp    _0344a6_jump

	_034180_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		mov    $_0c06a4_data,%edx
		add    $_0ccca8_data,%eax
		call   _07b8b0_func
		test   %eax,%eax
		je     _034465_jump
		mov    $0x000001,%ebx
		xor    %ecx,%ecx
		mov    %bx,0x000004(%esp)
		mov    %ecx,0x000010(%esp)
		jmp    _034414_jump

	_0341b6_jump:
		mov    0x000004(%esp),%edi
		cmp    _0ced10_data,%di
		jne    _0341de_jump
		mov    _0ced0c_data,%eax
		inc    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jne    _0341de_jump
		cmpw   $0x000000,_0cecd8_data
		jne    _0342c4_jump

	_0341de_jump:
		mov    0x000012(%esp),%eax
		mov    $_0ccca8_data,%esi
		mov    %esp,%edi
		sar    $0x000010,%eax
		mov    0x000002(%esp),%edx
		shl    $0x000002,%eax
		xor    %ch,%ch
		add    %eax,%esi
		sar    $0x000010,%edx
		push   %edi

	_0341fb_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034213_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0341fb_jump

	_034213_jump:
		pop    %edi
		mov    0x000010(%esp),%eax
		mov    %ch,(%esp,%edx,1)
		imul   _0cecfc_data,%ax
		mov    _0cecfa_data,%bx
		mov    0x000014(%esp),%esi
		add    $0x000017,%ebx
		imul   %esi,%ebx
		mov    _0ced14_data,%cx
		mov    _0cecc4_data,%di
		add    %ecx,%ebx
		mov    -0x000001(%esp,%edx,1),%cl
		add    %edi,%eax
		cmp    $0x00007e,%cl
		jne    _034284_jump
		mov    _0ced30_data,%edx
		sar    $0x000010,%edx
		push   %edx
		mov    _0ced2e_data,%edx
		sar    $0x000010,%edx
		push   %edx
		mov    _0ced32_data,%edx
		sar    $0x000010,%edx
		movswl %bx,%ebx
		push   %edx
		sub    $0x00000a,%eax
		mov    %ebp,%ecx
		push   $0x000002
		movswl %ax,%edx
		mov    $_0c06a8_data,%eax
		jmp    _0343fc_jump

	_034284_jump:
		cmp    $0x000020,%cl
		jne    _0342a2_jump
		push   $0x000002
		movswl %bx,%ebx
		movswl %ax,%edx
		mov    %ebp,%ecx
		mov    $_0c06ad_data,%eax
		call   _01a178_func
		jmp    _034401_jump

	_0342a2_jump:
		mov    %esp,%esi
		movswl %bx,%ebx
		cwtl   
		xor    %ecx,%ecx
		dec    %edx
		mov    _0cef9d_data,%cl
		add    %edx,%esi
		push   %ecx
		mov    %eax,%edx
		mov    %ebp,%ecx
		mov    %esi,%eax
		call   _01a178_func
		jmp    _034401_jump

	_0342c4_jump:
		mov    %esp,%edi
		mov    %edx,%esi
		push   %edi

	_0342c9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0342e1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0342c9_jump

	_0342e1_jump:
		pop    %edi
		mov    0x000002(%esp),%eax
		mov    $0x001000,%esi
		mov    _0ced24_data,%di
		xor    %dl,%dl
		sar    $0x000010,%eax
		mov    %si,_0ced30_data
		mov    %dl,(%esp,%eax,1)
		cmp    $0x000200,%di
		jl     _034310_jump
		xor    %eax,%eax
		mov    %ax,_0ced24_data

	_034310_jump:
		mov    _0ced24_data,%ax
		inc    %ah
		cwtl   
		call   _05be00_func
		cwtl   
		sar    $0x000007,%eax
		add    $0x000005,%eax
		mov    %eax,%edx
		mov    _0ced22_data,%eax
		sar    $0x000010,%eax
		call   _05be00_func
		shl    $0x000003,%eax
		mov    _0cecfc_data,%cx
		mov    %ax,_0ced32_data
		mov    0x000010(%esp),%eax
		imul   %ecx,%eax
		mov    _0ced24_data,%bx
		add    %edx,%ebx
		mov    _0cecfa_data,%dx
		mov    0x000014(%esp),%esi
		add    $0x000017,%edx
		imul   %esi,%edx
		mov    _0cecc4_data,%di
		mov    %bx,_0ced24_data
		mov    0x000002(%esp),%ebx
		mov    _0ced14_data,%cx
		sar    $0x000010,%ebx
		add    %ecx,%edx
		mov    -0x000001(%esp,%ebx,1),%cl
		add    %edi,%eax
		cmp    $0x00007e,%cl
		jne    _0343c0_jump
		mov    _0ced30_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		mov    _0ced2e_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		mov    _0ced32_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		sub    $0x00000a,%eax
		mov    %ebp,%ecx
		push   $0x000002
		movswl %dx,%ebx
		movswl %ax,%edx
		mov    $_0c06a8_data,%eax
		jmp    _0343fc_jump

	_0343c0_jump:
		mov    _0ced30_data,%ecx
		inc    %edx
		sar    $0x000010,%ecx
		inc    %eax
		push   %ecx
		mov    _0ced2e_data,%ecx
		dec    %ebx
		sar    $0x000010,%ecx
		movswl %dx,%edx
		push   %ecx
		mov    _0ced32_data,%ecx
		movswl %ax,%esi
		sar    $0x000010,%ecx
		lea    0x000008(%esp),%eax
		push   %ecx
		xor    %ecx,%ecx
		add    %ebx,%eax
		mov    _0cef9d_data,%cl
		mov    %edx,%ebx
		push   %ecx
		mov    %esi,%edx
		mov    %ebp,%ecx

	_0343fc_jump:
		call   _01a3b0_func

	_034401_jump:
		mov    0x000010(%esp),%esi
		mov    0x000004(%esp),%edi
		inc    %esi
		inc    %edi
		mov    %esi,0x000010(%esp)
		mov    %di,0x000004(%esp)

	_034414_jump:
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%edx
		add    $_0ccca8_data,%edx
		mov    %edx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		jbe    _0341b6_jump
		mov    _0cecfc_data,%ax
		add    $0x00000b,%eax
		imul   $0x000003,%eax,%eax
		add    _0cecc4_data,%ax
		sub    $0x00001e,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01ad30_func
		jmp    _0344a1_jump

	_034465_jump:
		mov    _0cecfa_data,%ax
		add    $0x000017,%eax
		imul   %esi,%eax
		mov    $0x000001,%cl
		push   $0x000002
		mov    _0ced14_data,%dx
		mov    %cl,_094eb8_data
		mov    $0x000001,%ecx
		add    %edx,%eax
		mov    _0cecc2_data,%edx
		movswl %ax,%ebx
		mov    _0c2624_data,%eax
		sar    $0x000010,%edx
		call   _01a178_func

	_0344a1_jump:
		incw   0x000014(%esp)

	_0344a6_jump:
		xor    %eax,%eax
		mov    0x000014(%esp),%esi
		mov    _0cef99_data,%al
		cmp    %si,%ax
		jg     _034180_jump
		call   _01b074_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034730_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		call   _065cc8_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _01614e_func
		cmpb   $0x000001,_0cef81_data
		je     _034832_jump
		cmpb   $0x000000,_0cbb60_data
		je     _034793_jump
		mov    _0cbc30_data,%ebx
		mov    _0cbc2e_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cbc37_data,%al
		mov    _0cbc34_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0cbb60_data,%eax
		call   _01a178_func

	_034793_jump:
		cmpb   $0x000000,_0cba88_data
		je     _0347c8_jump
		mov    _0cbb58_data,%ebx
		mov    _0cbb56_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cbb5f_data,%al
		mov    _0cbb5c_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0cba88_data,%eax
		call   _01a178_func

	_0347c8_jump:
		cmpb   $0x000000,_0cbd10_data
		je     _0347fd_jump
		mov    _0cbde0_data,%ebx
		mov    _0cbdde_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cbde7_data,%al
		mov    _0cbde4_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0cbd10_data,%eax
		call   _01a178_func

	_0347fd_jump:
		cmpb   $0x000000,_0cbc38_data
		je     _034832_jump
		mov    _0cbd08_data,%ebx
		mov    _0cbd06_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cbd0f_data,%al
		mov    _0cbd0c_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0cbc38_data,%eax
		call   _01a178_func

	_034832_jump:
		cmpb   $0x000000,_0cef81_data
		je     _0349ea_jump
		mov    _0cc5d4_data,%edx
		xor    %ebp,%ebp
		test   %edx,%edx
		jle    _034916_jump
		mov    %ebp,0x000004(%esp)

	_034853_jump:
		mov    _0ce450_data(%ebp),%ch
		cmp    $0x00002f,%ch
		je     _034863_jump
		cmp    $0x000020,%ch
		jne    _034867_jump

	_034863_jump:
		xor    %al,%al
		jmp    _034870_jump

	_034867_jump:
		xor    %eax,%eax
		mov    %ch,%al
		call   _01eadc_func

	_034870_jump:
		test   %al,%al
		je     _0348fc_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    %ebx,%edx
		add    $0x000029,%ebx
		imul   $0x00000c,%ebx,%ebx
		xor    %eax,%eax
		mov    _0cc5a4_data,%al
		mov    0x000004(%esp),%ecx
		call   _01ea14_func
		mov    _0ce320_data,%edx
		mov    _0c1c98_data(%ecx),%ecx
		add    %edx,%ebx
		xor    %edx,%edx
		sar    $0x000004,%ecx
		mov    0x000006(%ebx),%dl
		sub    %edx,%ecx
		movswl %cx,%edx
		mov    %edx,0x00000c(%esp)
		mov    0x000004(%esp),%edx
		mov    _0c1e28_data(%edx),%edx
		sar    $0x000004,%edx
		movswl %dx,%edx
		mov    %edx,0x000008(%esp)
		xor    %dh,%dh
		mov    0x000006(%ebx),%dl
		mov    _0cccb4_data,%edi
		shl    $0x000008,%edx
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    _0ce324_data,%esi
		mov    %ax,%cx
		mov    (%ebx),%edx
		mov    0x00000c(%esp),%ebx
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x000008(%esp),%eax
		mov    _0cc5b8_data,%dl
		call   *_0cc5f4_data

	_0348fc_jump:
		mov    0x000004(%esp),%ebx
		mov    _0cc5d4_data,%ecx
		add    $0x000004,%ebx
		inc    %ebp
		mov    %ebx,0x000004(%esp)
		cmp    %ecx,%ebp
		jl     _034853_jump

	_034916_jump:
		mov    _0cc5d8_data,%esi
		xor    %ebp,%ebp
		test   %esi,%esi
		jle    _0349ea_jump
		mov    %ebp,(%esp)

	_034929_jump:
		mov    _0ce46e_data(%ebp),%ah
		cmp    $0x00002f,%ah
		je     _034939_jump
		cmp    $0x000020,%ah
		jne    _03493d_jump

	_034939_jump:
		xor    %al,%al
		jmp    _03494a_jump

	_03493d_jump:
		xor    %eax,%eax
		mov    _0ce46e_data(%ebp),%al
		call   _01eadc_func

	_03494a_jump:
		test   %al,%al
		je     _0349d2_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    _0cc598_data,%al
		call   _01ea14_func
		mov    %eax,%edx
		imul   $0x00000c,%ebx,%eax
		mov    _0cdc34_data,%ebx
		add    %ebx,%eax
		mov    (%esp),%ebx
		xor    %ecx,%ecx
		mov    _0c1ef0_data(%ebx),%ebx
		mov    0x000006(%eax),%cl
		sar    $0x000004,%ebx
		sub    %ecx,%ebx
		movswl %bx,%ebx
		mov    %ebx,0x000008(%esp)
		mov    (%esp),%ebx
		mov    _0c1d60_data(%ebx),%ebx
		sar    $0x000004,%ebx
		movswl %bx,%ebx
		mov    %ebx,0x00000c(%esp)
		xor    %bh,%bh
		mov    %cl,%bl
		mov    _0cccb4_data,%edi
		shl    $0x000008,%ebx
		xor    %ecx,%ecx
		add    %ebx,%edx
		mov    _0cdc38_data,%esi
		mov    %dx,%cx
		mov    (%eax),%edx
		mov    0x000008(%esp),%ebx
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x00000c(%esp),%eax
		mov    _0cc59c_data,%dl
		call   *_0cc5f4_data

	_0349d2_jump:
		mov    (%esp),%ebx
		mov    _0cc5d8_data,%ecx
		add    $0x000004,%ebx
		inc    %ebp
		mov    %ebx,(%esp)
		cmp    %ecx,%ebp
		jl     _034929_jump

	_0349ea_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0349f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cefa3_data
		je     _034a0d_jump
		xor    %esi,%esi
		mov    _0ced4e_data,%si
		add    %eax,%esi

	_034a0d_jump:
		xor    %dh,%dh
		mov    _0cc644_data,%edi
		mov    %dh,_094eb8_data
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    _0cc638_data,%eax
		mov    %eax,_0cccb4_data
		call   _066b04_func
		call   _066b08_func
		call   _04284c_func
		mov    $_0cdba4_data,%eax
		call   _018ae8_func
		call   _06545c_func
		mov    _0cc644_data,%edx
		push   %edx
		mov    _0cc5ec_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0cc638_data,%ebx
		mov    _0cc5cc_data,%edi
		push   %ebx
		mov    _0cc5ec_data,%ebx
		mov    _0cc5c8_data,%edx
		mov    %eax,%ecx
		mov    %edi,%eax
		call   _0418ac_func
		mov    _0cc644_data,%eax
		mov    %eax,_0cccb4_data
		call   _034730_func
		call   _040c04_func
		call   _01cb68_func
		call   _03633c_func
		cmpb   $0x000000,_0cef9b_data
		je     _034ac5_jump
		mov    $0x00004d,%eax
		call   _06fa90_func

	_034ac5_jump:
		mov    _0cedea_data,%dx
		test   %dx,%dx
		jne    _034ae3_jump
		cmpb   $0x000000,_0cef9b_data
		jne    _034ae3_jump
		call   _0264c0_func
		test   %al,%al
		je     _034ae8_jump

	_034ae3_jump:
		mov    $0x000001,%edx

	_034ae8_jump:
		cmpb   $0x000000,_0cefa3_data
		je     _034b06_jump
		mov    %esi,%ebx
		call   _016eb1_func
		test   %ecx,%ecx
		jne    _034b06_jump
		call   _066b04_func
		call   _066b08_func

	_034b06_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034b10_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _01cb30_func
		call   _03b998_func
		xor    %eax,%eax
		mov    _0cedd4_data,%al
		xor    %edx,%edx
		call   _057748_func
		call   _040c04_func
		mov    $_0c6598_data,%eax
		mov    %edx,_0cce24_data
		call   _03bb78_func
		call   _03b920_func
		call   _066748_func
		cmpw   $0x000000,_0ced8c_data
		jne    _034ba7_jump
		cmpw   $0x000000,_0ced8a_data
		jne    _034ba7_jump
		mov    _0cedc6_data,%eax
		mov    _0cedb8_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0cedba_data,%edx
		mov    %ax,_0cee10_data
		mov    _0cedc4_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,_0cedfa_data
		call   _041ac8_func

	_034ba7_jump:
		cmpb   $0x000000,_0cef89_data
		jne    _034bbf_jump
		call   _035a70_func
		mov    $_0349f4_func,%eax
		call   _03b9e8_func

	_034bbf_jump:
		mov    _0cef9b_data,%dl
		test   %dl,%dl
		je     _034c1a_jump
		mov    $0x000001,%dh
		mov    $0x000004,%bl
		mov    _0ced92_data,%al
		xor    %ecx,%ecx
		mov    %dh,_0cefd1_data
		mov    %al,_0cefb2_data
		mov    _0cede4_data,%ax
		mov    %bl,_0cef8c_data
		mov    %ax,_0ced92_data
		mov    _0cedd0_data,%ax
		mov    %cx,_0ced08_data
		mov    %ax,_0ced84_data
		mov    $0x00004d,%eax
		mov    %cx,_0cede4_data
		call   _06fa90_func
		jmp    _034c9e_jump

	_034c1a_jump:
		xor    %dh,%dh

	_034c1c_jump:
		call   _040974_func
		test   %ax,%ax
		jne    _034c44_jump
		call   _040a00_func
		test   %ax,%ax
		jne    _034c44_jump
		call   _040a8c_func
		test   %ax,%ax
		jne    _034c44_jump
		call   _040b18_func
		test   %ax,%ax
		je     _034c53_jump

	_034c44_jump:
		cmp    _0cef89_data,%dl
		jne    _034c53_jump
		call   _040c04_func
		jmp    _034c1c_jump

	_034c53_jump:
		call   _066c68_func
		call   _0264c0_func
		test   %al,%al
		jne    _034c81_jump
		cmpb   $0x000000,_0cefb5_data
		je     _034c81_jump
		cmpb   $0x000000,_0cef89_data
		jne    _034c81_jump
		mov    _0ced82_data,%eax
		sar    $0x000010,%eax
		mov    %ax,_0ced84_data

	_034c81_jump:
		cmpb   $0x000000,_0cef89_data
		jne    _034c9e_jump
		mov    $0x000045,%eax
		call   _06fa90_func
		mov    $0x000005,%eax
		call   _03c9a4_func

	_034c9e_jump:
		call   _066bfc_func
		call   _01cb80_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034cac_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		mov    _0cefad_data,%bl
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		mov    _0cba88_data(%eax),%cl
		mov    %eax,%edx
		test   %cl,%cl
		je     _034cfd_jump

	_034cd4_jump:
		xor    %eax,%eax
		mov    _0cefad_data,%al
		inc    %eax
		cmp    %eax,%ebx
		ja     _034cfd_jump
		mov    $_0cba88_data,%eax
		add    %edx,%eax
		inc    %ebx
		call   _01a830_func
		mov    _0cbb60_data(%edx),%ch
		add    $0x0000d8,%edx
		test   %ch,%ch
		jne    _034cd4_jump

	_034cfd_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034d04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _040c04_func
		call   _03bc8c_func
		call   _034cac_func
		mov    _0ced76_data,%dx
		inc    %edx
		mov    %dx,_0ced76_data
		cmp    $0x00003c,%dx
		jne    _034d44_jump
		mov    _0ced78_data,%si
		xor    %ecx,%ecx
		dec    %esi
		mov    %cx,_0ced76_data
		mov    %si,_0ced78_data

	_034d44_jump:
		call   _036820_func
		test   %al,%al
		jne    _034d56_jump
		call   _036868_func
		test   %al,%al
		je     _034d60_jump

	_034d56_jump:
		cmpw   $0x000003,_0ced78_data
		jle    _034d6a_jump

	_034d60_jump:
		cmpw   $0x000000,_0ced78_data
		jg     _034d71_jump

	_034d6a_jump:
		mov    $0x000001,%eax
		jmp    _034d73_jump

	_034d71_jump:
		xor    %eax,%eax

	_034d73_jump:
		mov    %eax,%ebx
		test   %ax,%ax
		je     _034dc0_jump
		xor    %edx,%edx
		mov    _0cefad_data,%dl
		add    $0x000002,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0cba88_data(,%eax,8)
		jne    _034da6_jump
		movb   $0x00000a,_0cefad_data
		jmp    _034dc0_jump

	_034da6_jump:
		movw   $0x000005,_0ced78_data
		mov    _0cefad_data,%dh
		add    $0x000002,%dh
		xor    %ebx,%ebx
		mov    %dh,_0cefad_data

	_034dc0_jump:
		test   %bx,%bx
		je     _034dd8_jump
		cmpb   $0x00000a,_0cefad_data
		jne    _034dd8_jump
		mov    $0x000001,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_034dd8_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034de0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		call   _070268_func
		mov    $0x000001,%edx
		lea    0x000004(%esp),%ecx
		xor    %ebx,%ebx
		mov    %dx,_0cec9a_data
		mov    %bx,_0cec98_data
		call   _03b970_func
		mov    %esp,%edx
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%eax
		call   _016111_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _01614e_func
		xor    %ah,%ah
		mov    %ah,_0cef97_data
		mov    $_0c4d98_data,%eax
		call   _03bb78_func
		call   _03bc1c_func
		mov    _095b14_data,%dl
		xor    %esi,%esi
		cmp    $0x000001,%dl
		jne    _034e61_jump
		xor    %eax,%eax
		mov    _0cef9f_data,%al
		mov    $0x000001,%esi
		call   _03c86c_func

	_034e61_jump:
		call   _03b920_func
		call   _068168_func
		cmpb   $0x000000,_0cef72_data
		je     _034e84_jump
		cmpb   $0x000000,_0cef88_data
		jne    _034e84_jump
		xor    %eax,%eax
		call   _0702cc_jump

	_034e84_jump:
		mov    $_034d04_func,%eax
		call   _03b9e8_func
		cmpb   $0x000000,_0cef72_data
		je     _034ea5_jump
		cmpb   $0x000000,_0cef88_data
		jne    _034ea5_jump
		call   _03da70_func

	_034ea5_jump:
		call   _03b970_func
		xor    %ch,%ch
		call   _03b998_func
		mov    %ch,_0cef95_data
		mov    %ch,_0cef9b_data
		test   %esi,%esi
		je     _034ecd_jump
		xor    %eax,%eax
		mov    _0cef9f_data,%al
		call   _03c740_func

	_034ecd_jump:
		call   _03bbec_func
		call   _03bc6c_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _01614e_func
		call   _03b920_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034ef8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		movzbl _0cef8b_data,%edi
		lea    0x000000(,%edi,4),%esi
		sub    %edi,%esi
		shl    $0x000002,%esi
		jmp    _034f44_jump

	_034f12_jump:
		mov    _0cc654_data(%esi),%ebx
		mov    _0cc652_data(%esi),%edx
		add    $0x00000c,%esi
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		mov    _0cc64e_data(%esi),%al
		mov    _0cc64c_data(%esi),%cl
		push   %eax
		mov    _0cc644_data(%esi),%eax
		inc    %edi
		call   _01a178_func

	_034f44_jump:
		xor    %eax,%eax
		mov    _0cef8f_data,%al
		cmp    %eax,%edi
		jbe    _034f12_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034f58_func:
		push   %edx
		call   _040c04_func
		call   _01cb3c_func
		call   _06857c_func
		call   _03bc8c_func
		call   _034ef8_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    _0cef9b_data,%dl
		mov    %ah,_0cef9b_data
		call   _036820_func
		test   %al,%al
		jne    _034f94_jump
		call   _036944_func
		test   %al,%al
		je     _034fa2_jump

	_034f94_jump:
		movb   $0x000001,_0cef9b_data
		movb   $0x000007,_0cef97_data

	_034fa2_jump:
		cmpb   $0x000000,_0cef9b_data
		jne    _034fb0_jump
		test   %dx,%dx
		je     _034fb7_jump

	_034fb0_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_034fb7_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_034ff4_func:
		push   %edx
		call   _01cb80_func
		call   _0684bc_func
		cmpb   $0x000007,_0cef97_data
		ja     _035059_jump

	_035008_jump:
		xor    %eax,%eax
		mov    _0cef97_data,%al
		imul   $0x000300,%eax,%eax
		add    $_0c4d98_data,%eax
		call   _03bb78_func
		call   _03bc1c_func
		call   _03b920_func
		mov    $_034f58_func,%eax
		xor    %dl,%dl
		call   _03b9e8_func
		call   _03b970_func
		mov    %dl,_0cef9b_data
		incb   _0cef97_data
		call   _03bbec_func
		call   _03bc6c_func
		cmpb   $0x000007,_0cef97_data
		jbe    _035008_jump

	_035059_jump:
		call   _01cb80_func
		call   _03b920_func
		pop    %edx
		ret    



_035120_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		mov    $0x000004,%ebx
		mov    %ah,_0cef97_data
		mov    $_0c4d98_data,%eax
		xor    %edx,%edx
		call   _03bb78_func
		call   _03bc1c_func
		call   _03b920_func
		mov    %dx,_0ced76_data
		xor    %dl,%dl
		mov    %bx,_0ced78_data
		mov    %dl,_0cefad_data
		call   _01eaa8_func
		mov    $_034d04_func,%eax
		mov    $_0ccda8_data,%edx
		call   _03b9e8_func
		mov    $_0ccdd8_data,%eax
		call   _035fe4_func
		call   _03b970_func
		call   _03bbec_func
		call   _03bc6c_func
		pop    %edx
		pop    %ebx
		ret    



_0351b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0cef96_data,%ah
		mov    %edx,_0cdc2c_data
		mov    %edx,_0cdc28_data
		test   %ah,%ah
		je     _035240_jump
		cmpw   $0x000001,_0ced84_data
		jle    _035200_jump
		cmpb   $0x000046,_095b54_data
		je     _035200_jump
		mov    _0cef88_data,%bl
		add    $0x000017,%bl
		mov    $_0c06b8_data,%edx
		mov    $_0cc4ec_data,%eax
		and    $0x0000ff,%ebx
		call   _03a318_func

	_035200_jump:
		mov    $0x000004,%ebx
		mov    $0x000006,%ecx
		mov    $_0ccda8_data,%eax
		mov    %bx,_0cedd0_data
		mov    %cx,_0cede4_data
		call   _07b814_func
		mov    $_0ccdd8_data,%eax
		call   _07b800_func
		mov    $_0ccda8_data,%eax
		call   _035fe4_func
		call   _035120_func
		call   _034ff4_func

	_035240_jump:
		xor    %dh,%dh
		mov    %dh,_0cef9b_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03524c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _03b970_func
		cmpb   $0x000001,_095b15_data
		jne    _03527d_jump
		mov    _0cecbc_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		cmpw   $0x000005,_095af8_data(%eax)
		jne    _03527d_jump
		cmpw   $0x00000a,_095b04_data(%eax)
		je     _0352ae_jump

	_03527d_jump:
		cmpb   $0x000000,_095b15_data
		jne    _0352ca_jump
		cmpw   $0x000000,_095b52_data
		je     _0352ca_jump
		mov    _0cecbc_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		cmpw   $0x000001,_095af8_data(%eax)
		jne    _0352ca_jump
		cmpw   $0x000009,_095b04_data(%eax)
		jne    _0352ca_jump

	_0352ae_jump:
		mov    _0cecbe_data,%ax
		inc    %eax
		mov    %ax,_0cecbe_data
		cmp    $0x000006,%ax
		jne    _0352ca_jump
		xor    %ebx,%ebx
		mov    %bx,_0cecbe_data

	_0352ca_jump:
		mov    $0x000001,%dh
		mov    _0ced80_data,%ax
		mov    _0ced80_data,%bl
		mov    %dh,_0cef89_data
		mov    %ax,_0cecb6_data
		or     $0x00000f,%bl
		mov    _0cecbc_data,%eax
		mov    %bl,_0ced80_data
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    %bl,%bh
		add    %eax,%eax
		mov    %edx,_0cc640_data
		and    $0x0000cf,%bh
		mov    _095af8_data(%eax),%cx
		mov    %bh,_0ced80_data
		cmp    $0x000001,%cx
		jne    _03532e_jump
		cmpw   $0x000009,_095b04_data(%eax)
		jne    _03532e_jump
		mov    %bh,%ch
		or     $0x000040,%ch
		mov    %ch,_0ced80_data
		jmp    _035335_jump

	_03532e_jump:
		andb   $0x0000bf,_0ced80_data

	_035335_jump:
		orb    $0x000080,_0ced80_data
		mov    _0ced81_data,%ah
		or     $0x000001,%ah
		mov    %ah,%dl
		mov    %ah,_0ced81_data
		and    $0x0000fd,%dl
		mov    _0cede4_data,%di
		mov    %dl,_0ced81_data
		cmp    $0x000005,%di
		jne    _03537a_jump
		cmpw   $0x000004,_0cedd0_data
		jne    _03537a_jump
		mov    %dl,%bl
		or     $0x000004,%bl
		mov    %bl,_0ced81_data
		jmp    _035381_jump

	_03537a_jump:
		andb   $0x0000fb,_0ced81_data

	_035381_jump:
		mov    $0x000008,%ecx
		mov    $_0c4d58_data,%edi
		mov    $_0c4d78_data,%esi
		mov    $0x000001,%edx
		mov    _0ced81_data,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		and    $0x000087,%bh
		mov    $0x000002,%ecx
		mov    %bh,_0ced81_data
		mov    %dx,_0c4d88_data
		mov    %cx,_0c4d8e_data
		xor    %ebx,%ebx
		mov    %cx,_0c4d8c_data
		mov    %bx,_0c4d8a_data
		call   _0405c0_func
		mov    _0ced89_data,%cl
		mov    %dx,_0cedea_data
		mov    %dx,_0cedd4_data
		mov    %bx,_0cede4_data
		mov    %bx,_0cedd0_data
		xor    %ah,%ah
		mov    _0cecbc_data,%edx
		or     $0x00000a,%cl
		mov    %ah,_0ce4b0_data
		mov    %cl,_0ced89_data
		sar    $0x000010,%edx
		mov    $0x000002,%ch
		mov    _095af8_data(,%edx,2),%bx
		mov    _095aea_data(,%edx,2),%eax
		mov    %bx,_0ced92_data
		mov    %ch,_0cdc1a_data
		mov    %ch,_0ce4b3_data
		sar    $0x000010,%eax
		mov    $0x000003,%ecx
		mov    _095b04_data(,%edx,2),%bx
		mov    %eax,_0ca41c_data
		mov    %bx,_0ced84_data
		mov    %edx,%eax
		mov    $0x000001,%bl
		shl    $0x000005,%eax
		mov    %bl,_0cdcd0_data
		mov    %bl,_0ca425_data
		sub    %edx,%eax
		xor    %ebx,%ebx
		shl    $0x000002,%eax
		mov    %ebx,_0ca410_data
		add    %edx,%eax
		mov    $_095510_data,%edx
		add    %eax,%eax
		mov    $0x000a20,%ebx
		add    %eax,%edx
		mov    $_0cb068_data,%eax
		mov    %edx,_0ca420_data
		xor    %edx,%edx
		mov    %cx,_0ce4aa_data
		call   _07c0b0_func
		mov    _0ced90_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %cl,%cl
		mov    %cl,_094a4d_data(,%eax,4)
		call   _053280_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0354bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _03b970_func
		mov    _0ca418_data,%eax
		cmp    _0ca414_data,%eax
		jne    _0354de_jump
		xor    %ebx,%ebx
		mov    %bx,_0cecbc_data
		jmp    _0354e7_jump

	_0354de_jump:
		xor    %edx,%edx
		mov    %dx,_0cecbc_data

	_0354e7_jump:
		xor    %ah,%ah
		xor    %ebx,%ebx
		xor    %dl,%dl
		xor    %ecx,%ecx
		xor    %esi,%esi
		xor    %edi,%edi
		mov    %ah,_0cef89_data
		mov    %ebx,_0cc640_data
		xor    %ebx,%ecx
		xor    %ebx,%esi
		mov    $0x000001,%eax
		xor    %ebx,%edi
		call   _057748_func
		mov    _0cecb6_data,%ax
		mov    %dl,_0ca425_data
		mov    %ebx,_0ca410_data
		mov    %ebx,_0ca41c_data
		mov    %ebx,_0ca420_data
		mov    %cx,_0cedea_data
		mov    %si,_0cedd4_data
		mov    %di,_0cede4_data
		mov    $0x000008,%ecx
		mov    $_0c4d78_data,%edi
		mov    $_0c4d58_data,%esi
		xor    %dh,%dh
		mov    %ax,_0ced80_data
		mov    %dx,_0ced92_data
		xor    %eax,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0ced89_data,%dh
		mov    %ax,_0cedd0_data
		and    $0x0000f5,%dh
		mov    %ax,_0ced84_data
		mov    %dh,_0ced89_data
		call   _0405c0_func
		mov    _0cecbe_data,%cx
		inc    %ecx
		mov    %cx,_0cecbe_data
		cmp    $0x000006,%cx
		jne    _0355a2_jump
		xor    %edi,%edi
		mov    %di,_0cecbe_data

	_0355a2_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0355a8_func:
		call   _040c04_func
		call   _036820_func
		test   %al,%al
		jne    _0355bf_jump
		call   _036868_func
		test   %al,%al
		je     _0355c6_jump

	_0355bf_jump:
		movb   $0x000001,_0cef9b_data

	_0355c6_jump:
		mov    $0x000001,%eax
		call   _053298_func
		call   _01cb68_func
		call   _03bc8c_func
		mov    $_0cdcd8_data,%eax
		call   _018ae8_func
		call   _0687e4_func
		cmpb   $0x000000,_0cef9b_data
		je     _035602_jump
		cmpw   $0x000000,_0cee32_data
		jne    _035602_jump
		mov    $0x000001,%eax
		ret    

	_035602_jump:
		xor    %eax,%eax
		ret    



_035608_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $_0cce00_data,%eax
		mov    $_0169f1_func,%edx
		mov    $_016adc_func,%ebx
		call   _036814_func
		mov    $_0cce00_data,%eax
		mov    $_016978_jump,%ecx
		call   _035eac_func
		mov    $_0c7198_data,%eax
		mov    $_016a5c_jump,%esi
		call   _03bb78_func
		call   _01cb68_func
		call   _03b920_func
		call   _068778_func
		mov    $_0355a8_func,%eax
		mov    %edx,_0cc604_data
		mov    %ebx,_0cc618_data
		call   _03b9e8_func
		mov    %ecx,_0cc604_data
		mov    %esi,_0cc618_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035674_func:
		call   _03b970_func
		jmp    _03bbec_func



_035680_func:
		push   %edx
		mov    $0x041a00,%edx
		mov    $_0cce00_data,%eax
		call   _07b440_func
		call   _01cb30_func
		call   _035608_func
		mov    $_0cce00_data,%eax
		call   _07b74c_func
		xor    %ah,%ah
		mov    %ah,_0cef9b_data
		call   _044cb0_func
		call   _035674_func
		pop    %edx
		ret    



_0356b8_func:
		push   %edx
		cmpb   $0x000001,_0cefd1_data
		je     _0356f5_jump
		call   _068b1c_func
		mov    _0cef9b_data,%dl
		test   %dl,%dl
		jne    _0356f5_jump
		call   _03b998_func
		call   _01cb80_func
		call   _03b920_func
		mov    $_033b68_jump,%eax
		call   _03b9e8_func
		call   _068fc0_func
		mov    %dl,_0cef9b_data

	_0356f5_jump:
		pop    %edx
		ret    



_0356f8_func:
		push   %ebx
		push   %ecx
		testb  $0x000001,_0ced80_data
		jne    _035733_jump
		cmp    $0x000001,%al
		jne    _035710_jump
		cmp    $0x000003,%dl
		ja     _035710_jump
		xor    %ebx,%ebx
		jmp    _035715_jump

	_035710_jump:
		mov    $0x000001,%ebx

	_035715_jump:
		mov    _0ced80_data,%dh
		mov    %bl,%ah
		and    $0x0000fe,%dh
		and    $0x000001,%ah
		mov    %dh,%bl
		mov    %dh,_0ced80_data
		or     %ah,%bl
		mov    %bl,_0ced80_data

	_035733_jump:
		testb  $0x000002,_0ced80_data
		jne    _03576e_jump
		cmp    $0x000001,%al
		jne    _035749_jump
		cmp    $0x000008,%dl
		ja     _035749_jump
		xor    %ebx,%ebx
		jmp    _03574e_jump

	_035749_jump:
		mov    $0x000001,%ebx

	_03574e_jump:
		mov    _0ced80_data,%cl
		mov    %bl,%ah
		and    $0x0000fd,%cl
		and    $0x000001,%ah
		mov    %cl,_0ced80_data
		add    %ah,%ah
		mov    %cl,%ch
		or     %ah,%ch
		mov    %ch,_0ced80_data

	_03576e_jump:
		testb  $0x000080,_0ced80_data
		jne    _0357aa_jump
		cmp    $0x000001,%al
		jne    _035784_jump
		cmp    $0x000011,%dl
		ja     _035784_jump
		xor    %ebx,%ebx
		jmp    _035789_jump

	_035784_jump:
		mov    $0x000001,%ebx

	_035789_jump:
		mov    %bl,%ah
		mov    _0ced80_data,%dh
		and    $0x000001,%ah
		and    $0x00007f,%dh
		shl    $0x000007,%ah
		mov    %dh,%bl
		mov    %dh,_0ced80_data
		or     %ah,%bl
		mov    %bl,_0ced80_data

	_0357aa_jump:
		testb  $0x000004,_0ced80_data
		jne    _0357e8_jump
		cmp    $0x000002,%al
		jb     _0357be_jump
		jne    _0357c2_jump
		cmp    $0x00000b,%dl
		ja     _0357c2_jump

	_0357be_jump:
		xor    %ebx,%ebx
		jmp    _0357c7_jump

	_0357c2_jump:
		mov    $0x000001,%ebx

	_0357c7_jump:
		mov    _0ced80_data,%cl
		mov    %bl,%ah
		and    $0x0000fb,%cl
		and    $0x000001,%ah
		mov    %cl,_0ced80_data
		shl    $0x000002,%ah
		mov    %cl,%ch
		or     %ah,%ch
		mov    %ch,_0ced80_data

	_0357e8_jump:
		testb  $0x000001,_0ced81_data
		jne    _035823_jump
		cmp    $0x000003,%al
		jb     _0357fc_jump
		jne    _035800_jump
		cmp    $0x00000b,%dl
		ja     _035800_jump

	_0357fc_jump:
		xor    %ebx,%ebx
		jmp    _035805_jump

	_035800_jump:
		mov    $0x000001,%ebx

	_035805_jump:
		mov    _0ced81_data,%dh
		mov    %bl,%ah
		and    $0x0000fe,%dh
		and    $0x000001,%ah
		mov    %dh,%bl
		mov    %dh,_0ced81_data
		or     %ah,%bl
		mov    %bl,_0ced81_data

	_035823_jump:
		cmp    $0x000003,%al
		jb     _03582e_jump
		jne    _035832_jump
		cmp    $0x000006,%dl
		ja     _035832_jump

	_03582e_jump:
		xor    %ebx,%ebx
		jmp    _035837_jump

	_035832_jump:
		mov    $0x000001,%ebx

	_035837_jump:
		mov    %bl,%ah
		mov    _0ced89_data,%bh
		and    $0x000001,%ah
		and    $0x0000f7,%bh
		shl    $0x000003,%ah
		mov    %bh,%cl
		mov    %bh,_0ced89_data
		or     %ah,%cl
		mov    %cl,_0ced89_data
		cmp    $0x000005,%al
		jb     _035863_jump
		jne    _035867_jump
		cmp    $0x000006,%dl
		ja     _035867_jump

	_035863_jump:
		xor    %eax,%eax
		jmp    _03586c_jump

	_035867_jump:
		mov    $0x000001,%eax

	_03586c_jump:
		mov    _0ced89_data,%ch
		and    $0x000001,%al
		and    $0x0000fb,%ch
		shl    $0x000002,%al
		mov    %ch,%ah
		mov    %ch,_0ced89_data
		or     %al,%ah
		mov    %ah,_0ced89_data
		pop    %ecx
		pop    %ebx
		ret    



_035890_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    $0x000fa0,%eax
		call   _07b548_func
		xor    %edi,%edi
		mov    %eax,(%esp)
		test   %eax,%eax
		je     _0359b0_jump
		mov    (%esp),%esi
		xor    %edx,%edx

	_0358b5_jump:
		xor    %eax,%eax

	_0358b7_jump:
		inc    %eax
		cmp    $0x0001f4,%ax
		jl     _0358b7_jump
		movswl %dx,%ebx
		shl    $0x000002,%ebx
		add    %esi,%ebx
		call   _016e51_func
		inc    %edx
		mov    %eax,(%ebx)
		cmp    $0x0003e8,%dx
		jl     _0358b5_jump
		mov    $0x000f9c,%eax
		call   _07b548_func
		mov    %eax,%ebp
		test   %eax,%eax
		je     _0359a8_jump
		movb   $0x000001,0x000008(%esp)
		xor    %eax,%eax

	_0358f0_jump:
		movswl %ax,%ebx
		mov    (%esp),%ecx
		shl    $0x000002,%ebx
		mov    0x000004(%ecx,%ebx,1),%edx
		mov    (%ecx,%ebx,1),%esi
		mov    %edx,%ecx
		lea    (%ebx,%ebp,1),%edx
		sub    %esi,%ecx
		mov    %ecx,(%edx)
		test   %ecx,%ecx
		jg     _035915_jump
		xor    %dl,%dl
		mov    %dl,0x000008(%esp)
		jmp    _03591e_jump

	_035915_jump:
		inc    %eax
		add    %ecx,%edi
		cmp    $0x0003e7,%ax
		jl     _0358f0_jump

	_03591e_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _035992_jump
		mov    $0x0003e7,%ebx
		mov    %edi,%edx
		mov    %edi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edi
		lea    0x000000(,%eax,4),%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %edi,%edx
		shl    $0x000002,%edx
		sub    %edi,%edx
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		xor    %esi,%esi
		mov    %eax,%edx

	_035964_jump:
		mov    0x000004(%esp),%ecx
		movswl %si,%eax
		mov    %edx,%ebx
		mov    0x000000(%ebp,%eax,4),%eax
		cmp    %ebx,%eax
		jl     _035980_jump
		cmp    %ecx,%eax
		jg     _035980_jump
		mov    $0x000001,%eax
		jmp    _035982_jump

	_035980_jump:
		xor    %eax,%eax

	_035982_jump:
		test   %eax,%eax
		jne    _03598a_jump
		incb   0x000008(%esp)

	_03598a_jump:
		inc    %esi
		cmp    $0x0003e7,%si
		jl     _035964_jump

	_035992_jump:
		mov    0x000008(%esp),%bh
		cmp    $0x00000a,%bh
		setb   %al
		mov    %al,_0cefa3_data
		mov    %ebp,%eax
		call   _07b6e0_func

	_0359a8_jump:
		mov    (%esp),%eax
		call   _07b6e0_func

	_0359b0_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0359bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cefa3_data
		je     _035a69_jump
		call   _016dee_func
		call   _016e51_func
		lea    0x000bb8(%eax),%ebx
		call   _016eb1_func
		call   _016dde_func
		call   _016e51_func
		xor    %esi,%esi
		mov    %eax,%edi
		jmp    _035a0e_jump

	_0359f3_jump:
		call   _016dee_func
		call   _016e51_func
		lea    0x000bb8(%eax),%ebx
		call   _016eb1_func
		call   _016dde_func
		inc    %esi

	_035a0e_jump:
		xor    %edx,%edx
		mov    _0cef9f_data,%dl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %si,%edx
		cmp    %eax,%edx
		jl     _0359f3_jump
		call   _016e51_func
		movswl %si,%ebx
		sub    %edi,%eax
		xor    %edx,%edx
		div    %ebx
		xor    %edx,%edx
		mov    %ax,%dx
		mov    %ax,_0ced50_data
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shr    $0x000005,%eax
		mov    %ax,_0ced4e_data
		mov    %edx,%eax
		mov    _0ced3c_data,%dx
		imul   %eax,%edx
		mov    _0ced4e_data,%ax
		add    %edx,%eax
		mov    %ax,_0ced48_data

	_035a69_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035a70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000008,%esp
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,0x000004(%esp)
		mov    %ah,(%esp)
		xor    %dh,%dh
		cli    
		mov    %dx,_0ced3c_data
		call   _016ecc_func
		call   _035890_func
		cmpb   $0x000000,_0cefa3_data
		je     _035b42_jump

	_035aa3_jump:
		cmpb   $0x000000,0x000004(%esp)
		jne    _035b42_jump
		call   _0359bc_func
		call   _016dee_func
		call   _016e51_func
		lea    0x000bb8(%eax),%ebx
		call   _016eb1_func
		call   _016dde_func
		xor    %ebx,%ebx
		call   _016e51_func
		mov    _0ced4e_data,%bx
		xor    %edx,%edx
		add    %eax,%ebx
		mov    %eax,%esi
		call   _016eb1_func
		call   _016dde_func
		call   _016e51_func
		mov    _0ced50_data,%dx
		imul   $0x000065,%edx,%edx
		mov    $0x000064,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		sub    %esi,%ebx
		cmp    %eax,%ebx
		jae    _035b15_jump
		movb   $0x000001,0x000004(%esp)
		jmp    _035b18_jump

	_035b15_jump:
		incb   (%esp)

	_035b18_jump:
		cmpb   $0x000002,(%esp)
		jbe    _035aa3_jump
		call   _04d2e4_func
		cmp    $0x0000be,%ax
		setle  %al
		xor    %ah,%ah
		mov    %ax,_0ced3c_data
		mov    %ah,_0cefa3_data
		movb   $0x000001,0x000004(%esp)
		jmp    _035aa3_jump

	_035b42_jump:
		sti    
		add    $0x000008,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035b4c_func:
		push   %ebx
		push   %edx
		mov    _0ccdc4_data,%eax
		call   _07b3d8_func
		call   _03c85c_func
		xor    %ah,%ah
		mov    %ah,_0cefa0_data
		mov    %ah,_0ca424_data
		mov    %ah,_0ca425_data
		mov    %ah,_0cefb6_data
		call   _04122c_func
		mov    $0x000003,%eax
		call   _040bfc_func
		mov    $0x00fa40,%eax
		call   _07b824_func
		mov    %eax,_0cc644_data
		mov    $0x01f400,%eax
		call   _07b824_func
		mov    _0cc644_data,%edx
		mov    %eax,_0cc638_data
		test   %edx,%edx
		je     _035bb2_jump
		test   %eax,%eax
		jne    _035bbc_jump

	_035bb2_jump:
		mov    $_0c06c4_data,%eax
		call   _01f3a4_func

	_035bbc_jump:
		call   _041954_func
		mov    _095b54_data,%bh
		cmp    $0x000046,%bh
		je     _035bd5_jump
		movb   $0x00003c,_0cef9f_data
		jmp    _035bdb_jump

	_035bd5_jump:
		mov    %bh,_0cef9f_data

	_035bdb_jump:
		xor    %eax,%eax
		mov    _0cef9f_data,%al
		call   _03c86c_func
		mov    $0x000001,%al
		xor    %edx,%edx
		mov    %al,_0cefa2_data
		call   _016dfe_func
		call   _035890_func
		mov    %dx,_0cee48_data
		pop    %edx
		pop    %ebx

	_035c03_jump:
		ret    



_035c04_func:
		cmpb   $0x000000,_0cefd1_data
		jne    _035c03_jump
		movb   $0x0000ff,(%eax)
		call   _040c04_func
		cmpl   $0x000000,_0ca410_data
		jne    _035c03_jump
		cmpb   $0x000000,_0ca425_data
		jne    _035c30_jump
		cmpb   $0x000000,_0ca424_data
		je     _035c03_jump

	_035c30_jump:
		mov    $_0ca410_data,%eax
		jmp    _040f50_func



_035c3c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%ebp
		mov    $0x00000a,%ebx
		mov    %esp,%esi
		mov    _0c06e4_data,%edx
		cwtl   
		mov    %edx,0x000000(%ebp)
		mov    %esp,%edx
		mov    %ebp,%edi
		call   _07cec8_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_035c69_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _035c81_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _035c69_jump

	_035c81_jump:
		pop    %edi
		mov    $_0c06e8_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_035c90_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _035ca8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _035c90_jump

	_035ca8_jump:
		pop    %edi
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_035cb4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%ebp
		mov    $0x00000a,%ebx
		mov    %esp,%esi
		mov    _0c06e4_data,%edx
		cwtl   
		mov    %edx,0x000000(%ebp)
		mov    %esp,%edx
		mov    %ebp,%edi
		call   _07cec8_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_035ce1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _035cf9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _035ce1_jump

	_035cf9_jump:
		pop    %edi
		mov    $_0c06f0_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_035d08_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _035d20_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _035d08_jump

	_035d20_jump:
		pop    %edi
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_035d7e_jump:
		ret    

_035d80_switch:
		.long   _035da9_case
		.long   _035db0_case
		.long   _035db7_case
		.long   _035dbe_case
		.long   _035e9f_case




_035d94_func:
		dec    %edx
		cmp    $0x000004,%dx
		ja     _035d7e_jump
		and    $0x00ffff,%edx
		jmp    *%cs:_035d80_switch(,%edx,4)

	_035da9_case:
		mov    $0x00000a,%edx
		jmp    _035dc4_jump

	_035db0_case:
		mov    $0x00000c,%edx
		jmp    _035dc4_jump

	_035db7_case:
		mov    $0x00000b,%edx
		jmp    _035dc4_jump

	_035dbe_case:
		mov    $0x000009,%edx
		nop

	_035dc4_jump:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000308,%esp
		mov    %eax,%ebx
		mov    _0ccd24_data,%esi
		mov    $0x000300,%ecx
		mov    %esi,0x000304(%esp)
		mov    _0ccd28_data,%esi
		mov    %esp,%edi
		mov    %esi,0x000300(%esp)
		mov    $_0c6598_data,%esi
		mov    _0ccd44_data,%ebp
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %ebx,%eax
		call   _0460a4_func
		mov    _0ccd44_data,%edx
		mov    $0x000300,%ecx
		mov    %edx,_0ccd48_data
		mov    _0ccd24_data,%edx
		mov    $_0c6598_data,%esi
		mov    %edx,_0ccd3c_data
		mov    _0ccd28_data,%edx
		mov    $_0c7198_data,%edi
		mov    %edx,_0ccd18_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    0x000304(%esp),%edx
		mov    $0x000300,%ecx
		mov    %esp,%esi
		mov    $_0c6598_data,%edi
		mov    %edx,_0ccd24_data
		mov    0x000300(%esp),%edx
		mov    %ebp,_0ccd44_data
		mov    %edx,_0ccd28_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x000308,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_035e9f_case:
		mov    $0x000008,%edx
		jmp    _035dc4_jump



_035eac_func:
		push   %edx
		mov    $0x000001,%edx
		call   _035dc4_jump
		pop    %edx



_035eb8_func:
		ret    



_035ebc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   $0x000089
		mov    _0cccb4_data,%edi
		mov    _0ccd48_data,%esi
		push   $0x000140
		xor    %edx,%edx
		xor    %ecx,%ecx
		push   $0x000140
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   _014b78_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035fe4_func:
		ret    



_035fe8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cefa7_data
		je     _035ffa_jump
		call   _01cb80_func

	_035ffa_jump:
		cmpb   $0x000000,_0cef87_data
		jne    _03600a_jump
		movb   $0x000001,_095b15_data

	_03600a_jump:
		cmpb   $0x000002,_0cef74_data
		jne    _03601a_jump
		movb   $0x000001,_0cef6d_data

	_03601a_jump:
		mov    _0ced92_data,%ax
		cmp    _0cede4_data,%ax
		je     _036046_jump
		xor    %eax,%eax
		mov    $0x000001,%edx
		mov    %ax,_0cedd0_data
		mov    %dx,_0cedea_data
		mov    %dx,_0cedd4_data
		jmp    _036078_jump

	_036046_jump:
		call   _0264c0_func
		test   %al,%al
		je     _036066_jump
		xor    %ecx,%ecx
		mov    $0x000001,%esi
		mov    %cx,_0cedd0_data
		mov    %si,_0cedea_data
		jmp    _03606f_jump

	_036066_jump:
		xor    %ebx,%ebx
		mov    %bx,_0cedea_data

	_03606f_jump:
		movw   $0x000001,_0cedd4_data

	_036078_jump:
		cmpb   $0x000001,_0cef96_data
		jne    _036095_jump
		cmpw   $0x000006,_0ced92_data
		jne    _036095_jump
		call   _0351b4_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_036095_jump:
		cmpb   $0x000000,_0cefd1_data
		jne    _0360fb_jump
		cmpw   $0x000000,_0cedea_data
		je     _0360fb_jump
		call   _036524_func
		mov    $_0ccdd8_data,%eax
		call   _07b800_func
		mov    $_0ccdb8_data,%eax
		call   _07b7e8_func
		mov    _0ced90_data,%eax
		mov    $_0ccd74_data,%edx
		sar    $0x000010,%eax
		mov    $_0ccd74_data,%ebx
		call   _035cb4_func
		mov    $_0ccdb8_data,%edx
		mov    $_0ccdd8_data,%eax
		call   _043870_func
		mov    $_0ccdb8_data,%eax
		call   _07b7d0_func
		call   _0584d8_func
		call   _03660c_func

	_0360fb_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036100_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cefa7_data
		je     _036113_jump
		call   _01cb80_func

	_036113_jump:
		mov    $0x000001,%ebx
		mov    _0ced92_data,%ax
		xor    %edx,%edx
		mov    %ax,_0cede4_data
		mov    %dx,_0cedea_data
		mov    %bx,_0cedd4_data
		mov    _0ced84_data,%ax
		mov    _0cefd1_data,%dl
		mov    %ax,_0cedd0_data
		test   %dl,%dl
		jne    _036245_jump
		cmpb   $0x000000,_0cef7e_data
		je     _0361f0_jump
		call   _0264c0_func
		mov    $0x0000a0,%esi
		mov    $0x0000be,%ebx
		test   %al,%al
		je     _036178_jump
		mov    $0x0000f0,%esi
		mov    $0x0000a0,%ebx

	_036178_jump:
		mov    $_0c7198_data,%edx
		mov    $0x000002,%eax
		call   _03b3e0_func
		mov    _0cccb4_data,%edi
		movswl %bx,%ebx
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		movswl %si,%edx
		push   $0x000000
		mov    $0x000002,%ecx
		mov    _0c260c_data,%eax
		call   _01a178_func
		call   _016dde_func
		call   _016dee_func
		call   _03a340_func
		cmpw   $0x000000,_0cee32_data
		je     _0361f0_jump
		mov    $_0c6e98_data,%ebx
		mov    $_0c7198_data,%edi

	_0361d3_jump:
		call   _016dee_func
		call   _016dde_func
		mov    %ebx,%edx
		mov    %edi,%eax
		call   _03b460_func
		cmpw   $0x000000,_0cee32_data
		jne    _0361d3_jump

	_0361f0_jump:
		cmpb   $0x000000,_0cefa7_data
		je     _036201_jump
		xor    %edx,%edx
		mov    %edx,_0cce0c_data

	_036201_jump:
		mov    _0cedce_data,%eax
		mov    $_0ccd90_data,%edx
		sar    $0x000010,%eax
		call   _035c3c_func
		mov    $_0ccda8_data,%eax
		call   _07b814_func
		mov    $_0ccdb8_data,%eax
		mov    $_0ccd90_data,%ebx
		call   _07b7f4_func
		mov    $_0ccda8_data,%eax
		mov    $_0ccdb8_data,%edx
		mov    $_0ccda8_data,%eax
		call   _04402c_func
		call   _047258_func

	_036245_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036308_func:
		cmpb   $0x000001,_0cefa4_data
		jne    _036321_jump
		mov    $0x000001,%eax
		call   _040780_func
		test   %al,%al
		je     _03633a_jump
		jmp    _036333_jump

	_036321_jump:
		call   _07cee8_func
		test   %eax,%eax
		je     _03633a_jump
		call   _07c10b_func
		cmp    $0x00001b,%al
		jne    _03633a_jump

	_036333_jump:
		movb   $0x000001,_0cef9b_data

	_03633a_jump:
		ret    



_03633c_func:
		cmpb   $0x000001,_0cefa4_data
		jne    _03634f_jump
		mov    $0x000001,%eax
		jmp    _040780_func

	_03634f_jump:
		call   _07cee8_func
		test   %eax,%eax
		je     _036368_jump
		call   _07c10b_func
		cmp    $0x00001b,%al
		jne    _036368_jump
		movb   $0x000001,_0cef9b_data

	_036368_jump:
		ret    

	_03636c_jump:
		call   _07cee8_func
		test   %eax,%eax
		je     _036368_jump
		call   _07c10b_func
		jmp    _03636c_jump



_03637c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000008,%esp
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		mov    $0x000001,%edx
		mov    _0cc638_data,%eax
		call   _046310_func
		mov    $_0c7198_data,%edx
		mov    $0x000001,%eax
		call   _045814_func
		add    $0x000008,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0363b0_func:
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000001,_0cefa4_data
		je     _0363da_jump
		call   _07cee8_func
		test   %eax,%eax
		je     _0363d7_jump
		cmpb   $0x000000,_0cef89_data
		jne    _0363d7_jump
		call   _07c10b_func
		mov    %al,(%edx)
		pop    %edx
		ret    

	_0363d7_jump:
		movb   $0x0000ff,(%edx)

	_0363da_jump:
		pop    %edx
		ret    

	_036424_jump:
		ret    



_036428_func:
		cmpb   $0x000000,_0cefd1_data
		je     _036424_jump
		call   _070cc0_func
		mov    $_0ccdd8_data,%eax
		call   _07b800_func
		mov    $_0ccdb8_data,%eax
		jmp    _07b7e8_func



_03644c_func:
		testb  $0x000002,_0ced81_data
		je     _036424_jump
		jmp    _058fac_func



_03645c_func:
		push   %edx
		call   _03c85c_func
		cmpb   $0x000000,_0ca424_data
		je     _036482_jump
		call   _041210_func
		mov    $0x000001,%dl
		mov    $_0ca410_data,%eax
		mov    %dl,_0ca426_data
		call   _040f50_func

	_036482_jump:
		cmpb   $0x000000,_0cefd1_data
		je     _0364d0_jump
		mov    $_0ccda8_data,%eax
		call   _07b74c_func
		mov    $_0ccdd8_data,%eax
		call   _07b74c_func
		mov    $_0ccdb8_data,%eax
		call   _07b74c_func
		mov    $_0ccdcc_data,%eax
		call   _07b74c_func
		mov    $_0cc648_data,%eax
		call   _07b83c_func
		cmpb   $0x000002,_0cef74_data
		je     _0364d0_jump
		mov    $_0cc638_data,%eax
		call   _07b83c_func

	_0364d0_jump:
		call   _07b3b0_func
		xor    %eax,%eax
		call   _07bd0f_func
		pop    %edx
		lea    0x000000(%eax),%eax
		ret    



_0364e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _03bc8c_func
		call   _0264c0_func
		mov    $0x0000a0,%edx
		mov    $0x0000be,%ebx
		test   %al,%al
		je     _036509_jump
		mov    $0x0000f0,%edx
		mov    $0x0000a0,%ebx

	_036509_jump:
		push   $0x000000
		mov    $0x000002,%ecx
		mov    _0c260c_data,%eax
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01a178_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036524_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0ccda8_data,%eax
		mov    $0x000300,%ecx
		mov    _0ced90_data,%edx
		mov    $_0c6e98_data,%esi
		sar    $0x000010,%edx
		mov    $_0c6298_data,%edi
		call   _035d94_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c7198_data,%esi
		mov    $_0c6e98_data,%edi
		mov    $_0c7198_data,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000002,%eax
		call   _03b3e0_func
		call   _016dde_func
		call   _016dee_func
		call   _03a340_func
		call   _0364e4_func
		mov    $0x000064,%edx
		mov    _0cc644_data,%ebx
		mov    $0x000009,%eax
		mov    %ebx,%ecx
		call   _0370a8_func
		test   %al,%al
		je     _0365c7_jump
		call   _0370f8_func
		call   _037130_func
		call   _0364e4_func

	_0365c7_jump:
		call   _016dee_func
		call   _016dde_func
		call   _03a340_func
		cmpw   $0x000000,_0cee32_data
		je     _036605_jump
		mov    $_0c6e98_data,%ebx

	_0365e5_jump:
		call   _016dee_func
		call   _016dde_func
		mov    $_0c7198_data,%eax
		mov    %ebx,%edx
		call   _03b460_func
		cmpw   $0x000000,_0cee32_data
		jne    _0365e5_jump

	_036605_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03660c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000064,%edx
		mov    $0x000009,%eax
		mov    _0cc644_data,%ecx
		mov    _0cccb8_data,%ebx
		call   _0370c0_func
		test   %al,%al
		je     _03663a_jump
		call   _0370f8_func
		call   _037130_func

	_03663a_jump:
		mov    $_0c7198_data,%edx
		mov    $0x000002,%eax
		mov    $0x000300,%ecx
		mov    $_0c6298_data,%esi
		mov    $_0c6e98_data,%edi
		call   _03b550_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036670_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _07c0a4_func
		cli    
		mov    _0de7d8_data,%edx
		inc    %edx
		mov    $0x00000a,%ebx
		mov    %edx,_0de7d8_data
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     _036791_jump
		mov    _0de7d0_data,%eax
		mov    _0de7d4_data,%ebx
		add    %eax,%ebx
		mov    %ebx,_0de7d4_data
		cmp    $0x000080,%ebx
		jl     _0366d3_jump
		mov    %eax,%ebx
		mov    $0x000080,%edx
		neg    %ebx
		mov    %edx,_0de7d4_data
		mov    %ebx,_0de7d0_data
		jmp    _0366ea_jump

	_0366d3_jump:
		cmp    $0x000020,%ebx
		jg     _0366ea_jump
		mov    $0x000020,%edi
		neg    %eax
		mov    %edi,_0de7d4_data
		mov    %eax,_0de7d0_data

	_0366ea_jump:
		mov    $0x000003,%edx
		mov    $0x00003f,%ecx

	_0366f4_jump:
		xor    %eax,%eax
		mov    _0c7198_data(%edx),%al
		mov    _0de7d4_data,%esi
		mov    %eax,%ebx
		imul   %esi,%ebx
		mov    %ecx,%eax
		sar    $0x000006,%ebx
		cmp    %ebx,%eax
		jle    _036712_jump
		mov    %ebx,%eax

	_036712_jump:
		mov    %al,_0c6e98_data(%edx)
		xor    %eax,%eax
		mov    _0c7199_data(%edx),%al
		mov    _0de7d4_data,%edi
		mov    %eax,%ebx
		imul   %edi,%ebx
		mov    %ecx,%eax
		sar    $0x000006,%ebx
		cmp    %ebx,%eax
		jle    _036736_jump
		mov    %ebx,%eax

	_036736_jump:
		xor    %ebx,%ebx
		mov    %al,_0c6e99_data(%edx)
		mov    _0de7d4_data,%eax
		mov    _0c719a_data(%edx),%bl
		imul   %eax,%ebx
		sar    $0x000006,%ebx
		mov    %ecx,%eax
		add    $0x000003,%edx
		cmp    %ebx,%eax
		jle    _03675a_jump
		mov    %ebx,%eax

	_03675a_jump:
		mov    %al,_0c6e97_data(%edx)
		cmp    $0x00001b,%edx
		jne    _0366f4_jump
		call   _016dde_func
		mov    $_0c6e98_data,%esi
		mov    $0x000008,%ecx
		mov    $0x000001,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_036791_jump:
		mov    _0de7e0_data,%dx
		mov    _0de7dc_data,%eax
		call   _07cf00_func
		sti    
		cld    
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   



_036814_func:
		call   _044878_func
		mov    $0x000001,%eax
		ret    



_036820_func:
		push   %edx
		mov    _0cee32_data,%dx
		xor    %al,%al
		test   %dx,%dx
		jne    _036864_jump
		cmpw   $0x000001,_0ced4a_data
		je     _03685e_jump
		cmpb   $0x000001,_0cefa4_data
		jne    _036862_jump
		mov    $0x00001c,%eax
		call   _040780_func
		test   %al,%al
		jne    _03685e_jump
		mov    $0x000039,%eax
		call   _040780_func
		test   %al,%al
		je     _036862_jump

	_03685e_jump:
		mov    $0x000001,%al
		pop    %edx
		ret    

	_036862_jump:
		xor    %al,%al

	_036864_jump:
		pop    %edx
		ret    



_036868_func:
		push   %edx
		mov    _0cefa4_data,%ah
		xor    %dl,%dl
		cmp    $0x000001,%ah
		jne    _036886_jump
		mov    $0x00001c,%eax
		call   _040780_func
		test   %al,%al
		je     _036892_jump
		jmp    _036890_jump

	_036886_jump:
		call   _040a00_func
		test   %ax,%ax
		je     _036892_jump

	_036890_jump:
		mov    $0x000001,%dl

	_036892_jump:
		mov    %dl,%al
		pop    %edx
		ret    



_036944_func:
		push   %edx
		mov    _0cefa4_data,%ah
		xor    %dl,%dl
		cmp    $0x000001,%ah
		jne    _036962_jump
		mov    $0x000001,%eax
		call   _040780_func
		test   %al,%al
		je     _036976_jump
		jmp    _036974_jump

	_036962_jump:
		call   _07cee8_func
		test   %eax,%eax
		je     _036976_jump
		call   _07c10b_func
		cmp    $0x00001b,%al
		jne    _036976_jump

	_036974_jump:
		mov    $0x000001,%dl

	_036976_jump:
		mov    %dl,%al
		pop    %edx
		ret    



_03697c_func:
		push   %edx
		call   _041210_func
		call   _016e3e_func
		cmpb   $0x000000,_0cefa7_data
		je     _036995_jump
		call   _070500_func

	_036995_jump:
		cmpb   $0x0000ff,_095b14_data
		je     _0369a3_jump
		call   _03c85c_func

	_0369a3_jump:
		mov    _0c2754_data,%edx
		push   %edx
		push   $_0c070c_data
		call   _07bcec_func
		add    $0x000008,%esp
		push   $_0c0714_data
		call   _07bcec_func
		add    $0x000004,%esp
		push   $_0c0718_data
		call   _07bcec_func
		add    $0x000004,%esp
		push   $_0c0744_data
		call   _07bcec_func
		add    $0x000004,%esp
		push   $_0c0770_data
		call   _07bcec_func
		add    $0x000004,%esp
		push   $_0c079c_data
		call   _07bcec_func
		add    $0x000004,%esp
		push   $_0c07c8_data
		call   _07bcec_func
		add    $0x000004,%esp
		push   $_0c07f4_data
		call   _07bcec_func
		add    $0x000004,%esp
		push   $_0c0714_data
		call   _07bcec_func
		add    $0x000004,%esp
		pop    %edx
		ret    



_036a30_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _040c04_func
		mov    _0cc644_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _037d64_func
		test   %ax,%ax
		je     _036a8a_jump
		call   _040974_func
		test   %ax,%ax
		jne    _036a8a_jump
		call   _040a00_func
		test   %ax,%ax
		jne    _036a8a_jump
		call   _040a8c_func
		test   %ax,%ax
		jne    _036a8a_jump
		call   _040b18_func
		test   %ax,%ax
		jne    _036a8a_jump
		mov    $0x000039,%eax
		call   _040780_func
		test   %al,%al
		je     _036a91_jump

	_036a8a_jump:
		mov    $0x000001,%edx
		jmp    _036a93_jump

	_036a91_jump:
		xor    %edx,%edx

	_036a93_jump:
		call   _038050_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_036aa0_case:
		mov    $_0c7198_data,%eax
		call   _03bb78_func
		cmpb   $0x000001,_0961b6_data
		jne    _036ab8_jump
		call   _03b920_func

	_036ab8_jump:
		mov    $_036a30_func,%eax
		call   _03b9e8_func
		mov    _0961b3_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03bbec_func
		call   _03b970_func
		jmp    _03bbec_func



_036ae0_func:
		push   %edx
		call   _040c04_func
		call   _07ac4c_func
		test   %ax,%ax
		je     _036b26_jump
		call   _040974_func
		test   %ax,%ax
		jne    _036b26_jump
		call   _040a00_func
		test   %ax,%ax
		jne    _036b26_jump
		call   _040a8c_func
		test   %ax,%ax
		jne    _036b26_jump
		call   _040b18_func
		test   %ax,%ax
		jne    _036b26_jump
		mov    $0x000039,%eax
		call   _040780_func
		test   %al,%al
		je     _036b2d_jump

	_036b26_jump:
		mov    $0x000001,%edx
		jmp    _036b2f_jump

	_036b2d_jump:
		xor    %edx,%edx

	_036b2f_jump:
		call   _07add0_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_036b38_case:
		mov    $_0c7198_data,%eax
		call   _03bb78_func
		cmpb   $0x000001,_0961b6_data
		jne    _036b55_jump
		call   _03b998_func
		call   _03b920_func

	_036b55_jump:
		mov    $_036ae0_func,%eax
		call   _03b9e8_func
		mov    _0961b3_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03bbec_func
		call   _03b970_func
		jmp    _03bbec_func



_036b7c_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _040c04_func
		mov    _0cc644_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _025ea4_func
		test   %ax,%ax
		je     _036bd6_jump
		call   _040974_func
		test   %ax,%ax
		jne    _036bd6_jump
		call   _040a00_func
		test   %ax,%ax
		jne    _036bd6_jump
		call   _040a8c_func
		test   %ax,%ax
		jne    _036bd6_jump
		call   _040b18_func
		test   %ax,%ax
		jne    _036bd6_jump
		mov    $0x000039,%eax
		call   _040780_func
		test   %al,%al
		je     _036bdd_jump

	_036bd6_jump:
		mov    $0x000001,%edx
		jmp    _036bdf_jump

	_036bdd_jump:
		xor    %edx,%edx

	_036bdf_jump:
		call   _026368_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_036bec_case:
		mov    $_0c7198_data,%eax
		call   _03bb78_func
		cmpb   $0x000001,_0961b6_data
		jne    _036c09_jump
		call   _03b998_func
		call   _03b920_func

	_036c09_jump:
		mov    $_036b7c_func,%eax
		call   _03b9e8_func
		mov    _0961b3_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03bbec_func
		call   _03b970_func
		jmp    _03bbec_func



_036c30_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _040c04_func
		mov    _0cc644_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _043334_func
		test   %ax,%ax
		je     _036c8a_jump
		call   _040974_func
		test   %ax,%ax
		jne    _036c8a_jump
		call   _040a00_func
		test   %ax,%ax
		jne    _036c8a_jump
		call   _040a8c_func
		test   %ax,%ax
		jne    _036c8a_jump
		call   _040b18_func
		test   %ax,%ax
		jne    _036c8a_jump
		mov    $0x000039,%eax
		call   _040780_func
		test   %al,%al
		je     _036c91_jump

	_036c8a_jump:
		mov    $0x000001,%edx
		jmp    _036c93_jump

	_036c91_jump:
		xor    %edx,%edx

	_036c93_jump:
		call   _0431f0_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_036ca0_case:
		mov    $_0c7198_data,%eax
		call   _03bb78_func
		cmpb   $0x000001,_0961b6_data
		jne    _036cbd_jump
		call   _03b998_func
		call   _03b920_func

	_036cbd_jump:
		mov    $_036c30_func,%eax
		call   _03b9e8_func
		mov    _0961b3_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03bbec_func
		call   _03b970_func
		jmp    _03bbec_func



_036ce4_func:
		push   %edx
		call   _040c04_func
		call   _070754_func
		test   %ax,%ax
		je     _036d2a_jump
		call   _040974_func
		test   %ax,%ax
		jne    _036d2a_jump
		call   _040a00_func
		test   %ax,%ax
		jne    _036d2a_jump
		call   _040a8c_func
		test   %ax,%ax
		jne    _036d2a_jump
		call   _040b18_func
		test   %ax,%ax
		jne    _036d2a_jump
		mov    $0x000039,%eax
		call   _040780_func
		test   %al,%al
		je     _036d31_jump

	_036d2a_jump:
		mov    $0x000001,%edx
		jmp    _036d33_jump

	_036d31_jump:
		xor    %edx,%edx

	_036d33_jump:
		call   _070978_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_036d3c_case:
		mov    $_0c7198_data,%eax
		call   _03bb78_func
		cmpb   $0x000001,_0961b6_data
		jne    _036d59_jump
		call   _03b998_func
		call   _03b920_func

	_036d59_jump:
		mov    $_036ce4_func,%eax
		call   _03b9e8_func
		mov    _0961b3_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03bbec_func
		call   _03b970_func
		jmp    _03bbec_func



_036d80_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _040c04_func
		mov    _0cc644_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _05e600_func
		test   %ax,%ax
		je     _036dda_jump
		call   _040974_func
		test   %ax,%ax
		jne    _036dda_jump
		call   _040a00_func
		test   %ax,%ax
		jne    _036dda_jump
		call   _040a8c_func
		test   %ax,%ax
		jne    _036dda_jump
		call   _040b18_func
		test   %ax,%ax
		jne    _036dda_jump
		mov    $0x000039,%eax
		call   _040780_func
		test   %al,%al
		je     _036de1_jump

	_036dda_jump:
		mov    $0x000001,%edx
		jmp    _036de3_jump

	_036de1_jump:
		xor    %edx,%edx

	_036de3_jump:
		call   _05e8b8_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_036df0_case:
		mov    $_0c7198_data,%eax
		call   _03bb78_func
		cmpb   $0x000001,_0961b6_data
		jne    _036e0d_jump
		call   _03b998_func
		call   _03b920_func

	_036e0d_jump:
		mov    $_036d80_func,%eax
		call   _03b9e8_func
		mov    _0961b3_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03bbec_func
		call   _03b970_func
		jmp    _03bbec_func



_036e34_func:
		push   %edx
		call   _040c04_func
		call   _0785c4_func
		test   %ax,%ax
		je     _036e7a_jump
		call   _040974_func
		test   %ax,%ax
		jne    _036e7a_jump
		call   _040a00_func
		test   %ax,%ax
		jne    _036e7a_jump
		call   _040a8c_func
		test   %ax,%ax
		jne    _036e7a_jump
		call   _040b18_func
		test   %ax,%ax
		jne    _036e7a_jump
		mov    $0x000039,%eax
		call   _040780_func
		test   %al,%al
		je     _036e81_jump

	_036e7a_jump:
		mov    $0x000001,%edx
		jmp    _036e83_jump

	_036e81_jump:
		xor    %edx,%edx

	_036e83_jump:
		call   _0786ac_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_036e8c_case:
		mov    $_0c7198_data,%eax
		call   _03bb78_func
		cmpb   $0x000001,_0961b6_data
		jne    _036ea9_jump
		call   _03b998_func
		call   _03b920_func

	_036ea9_jump:
		mov    $_036e34_func,%eax
		call   _03b9e8_func
		mov    _0961b3_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03bbec_func
		call   _03b970_func
		jmp    _03bbec_func



_036ed0_func:
		cmpb   $0x000001,_0961b6_data
		jne    _036ee6_jump
		mov    $0x000006,%eax
		call   _069140_func
		add    $0x000002,%al
		ret    

	_036ee6_jump:
		mov    $0x000007,%eax
		call   _069140_func
		inc    %al
		ret    



_036ef4_func:
		mov    $0x00000b,%eax
		call   _069140_func
		inc    %al
		ret    



_036f04_func:
		mov    $0x00000e,%eax
		call   _069140_func
		inc    %al
		ret    



_036f14_func:
		mov    $0x000006,%eax
		call   _069140_func
		inc    %al
		ret    

_036f24_switch:
		.long   _036fba_case
		.long   _037012_case
		.long   _036fd4_case
		.long   _03709f_case
		.long   _036ff1_case
		.long   _03704f_case
		.long   _03707a_case
		.long   _03703c_case


	_036f44_jump:
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		mov    $0x000001,%edx
		cmp    $0x000009,%al
		jne    _036f7b_jump
		call   _036ed0_func
		mov    %al,0x000004(%esp)
		cmp    $0x000002,%al
		je     _036f68_jump
		cmp    $0x000004,%al
		jne    _036f6f_jump

	_036f68_jump:
		call   _036ef4_func
		jmp    _036f78_jump

	_036f6f_jump:
		cmp    $0x000006,%al
		jne    _036f7b_jump
		call   _036f04_func

	_036f78_jump:
		mov    %al,(%esp)

	_036f7b_jump:
		cmpb   $0x000004,0x000004(%esp)
		jne    _036f87_jump
		movb   $0x000002,0x000004(%esp)

	_036f87_jump:
		movsbw _0961b6_data,%ax
		imul   %eax,%edx
		mov    (%esp),%al
		mov    %al,_0961b4_data
		mov    0x000004(%esp),%al
		mov    %al,_0961b5_data
		dec    %al
		cmp    $0x000007,%al
		ja     _03709f_case
		and    $0x0000ff,%eax
		jmp    *%cs:_036f24_switch(,%eax,4)

	_036fba_case:
		push   %ecx
		push   %ebx
		movswl %dx,%ebx
		mov    $0x000008,%edx
		mov    $0x000078,%ecx
		mov    %edx,%eax
		call   _037c5c_func
		add    $0x000008,%esp
		ret    

	_036fd4_case:
		push   %ecx
		mov    $0x000014,%eax
		mov    $0x000190,%ecx
		push   %ebx
		movswl %dx,%ebx
		mov    $0x00000a,%edx
		call   _07ab44_func
		add    $0x000008,%esp
		ret    

	_036ff1_case:
		push   %ecx
		mov    $0x000014,%eax
		add    %edx,%edx
		push   %ebx
		movswl %dx,%ecx
		push   $0x000032
		mov    $0x00003d,%ebx
		mov    $0x000008,%edx
		call   _025cdc_func
		add    $0x000008,%esp
		ret    

	_037012_case:
		mov    (%esp),%al
		cmp    $0x00000d,%al
		je     _03701d_jump
		cmp    $0x000064,%al
		jne    _037027_jump

	_03701d_jump:
		call   _036ef4_func
		mov    %al,_0961b4_data

	_037027_jump:
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0961b4_data,%al
		movswl %dx,%edx
		call   _043144_func
		add    $0x000008,%esp
		ret    

	_03703c_case:
		add    %edx,%edx
		mov    $0x000016,%eax
		movswl %dx,%edx
		call   _070630_func
		add    $0x000008,%esp
		ret    

	_03704f_case:
		mov    (%esp),%al
		cmp    $0x000010,%al
		je     _03705a_jump
		cmp    $0x000064,%al
		jne    _037064_jump

	_03705a_jump:
		call   _036f04_func
		mov    %al,_0961b4_data

	_037064_jump:
		xor    %eax,%eax
		shl    $0x000002,%edx
		mov    _0961b4_data,%al
		movswl %dx,%edx
		call   _05e548_func
		add    $0x000008,%esp
		ret    

	_03707a_case:
		mov    $0x0000a0,%eax
		push   %ecx
		shl    $0x000002,%edx
		push   %ebx
		movswl %dx,%ecx
		push   $0x0003e8
		mov    $0x000030,%ebx
		mov    $0x000064,%edx
		call   _0784bc_func
		add    $0x000008,%esp
		ret    

	_03709f_case:
		xor    %al,%al
		add    $0x000008,%esp

	_0370a4_case:
		ret    



_0370a8_func:
		movb   $0x000001,_0961b6_data
		and    $0x0000ff,%edx
		and    $0x0000ff,%eax
		jmp    _036f44_jump



_0370c0_func:
		movb   $0x0000ff,_0961b6_data
		and    $0x0000ff,%edx
		and    $0x0000ff,%eax
		jmp    _036f44_jump

_0370d8_switch:
		.long   _036aa0_case
		.long   _036ca0_case
		.long   _036b38_case
		.long   _0370a4_case
		.long   _036bec_case
		.long   _036df0_case
		.long   _036e8c_case
		.long   _036d3c_case




_0370f8_func:
		mov    _0961b5_data,%al
		dec    %al
		cmp    $0x000007,%al
		ja     _0370a4_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0370d8_switch(,%eax,4)

_037110_switch:
		.long   _037c30_case
		.long   _043118_case
		.long   _07ab18_case
		.long   _0370a4_case
		.long   _025ca0_case
		.long   _05e50c_case
		.long   _078490_case
		.long   _070604_case




_037130_func:
		mov    _0961b5_data,%al
		dec    %al
		cmp    $0x000007,%al
		ja     _0370a4_case
		and    $0x0000ff,%eax
		jmp    *%cs:_037110_switch(,%eax,4)



_03714c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		cmpb   $0x000001,_095b15_data
		jne    _03719d_jump
		xor    %bl,%bl

	_037164_jump:
		movzbl %bl,%edi
		imul   $0x003e80,%edi,%edi
		mov    %bl,%ah
		mov    $0x003e80,%ecx
		mov    $0x0003ce,%edx
		mov    $0x000004,%al
		out    %ax,(%dx)
		mov    (%esp),%edx
		mov    %ebp,%esi
		add    %edx,%edi
		inc    %bl
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmp    $0x000004,%bl
		jae    _0371b6_jump
		jmp    _037164_jump

	_03719d_jump:
		mov    $0x00fa00,%ecx
		mov    %ebp,%esi
		mov    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_0371b6_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0371c0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    %edx,%ebp
		mov    _095b15_data,%ah
		cmp    $0x000001,%ah
		jne    _037217_jump
		mov    %ah,%bl
		mov    %ebp,%edi
		xor    %bh,%bh

	_0371de_jump:
		movzbl %bh,%esi
		imul   $0x003e80,%esi,%esi
		mov    %bl,%ah
		mov    $0x003e80,%ecx
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    (%esp),%edx
		add    %bl,%bl
		add    %edx,%esi
		inc    %bh
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmp    $0x000004,%bh
		jae    _037231_jump
		jmp    _0371de_jump

	_037217_jump:
		mov    $0x00fa00,%ecx
		mov    (%esp),%esi
		mov    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_037231_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03723c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		mov    %esp,%edx
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%eax
		call   _016111_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _01614e_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2638_data,%eax
		call   _01a178_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _01614e_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0372a0_jump:
		mov    $0x000001,%eax
		ret    



_0372a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0961b8_data,%bx
		cmpb   $0x000002,_0cef74_data
		jne    _0372f7_jump
		call   _03723c_func
		mov    $_0372a0_jump,%eax
		call   _03b9e8_func
		xor    %dl,%dl

	_0372ce_jump:
		call   _016dee_func
		inc    %dl
		call   _016dde_func
		cmp    $0x00000c,%dl
		jb     _0372ce_jump

	_0372df_jump:
		call   _016dee_func
		call   _016dde_func
		cmpb   $0x000000,_0cefa5_data
		jne    _0372df_jump
		jmp    _037409_jump

	_0372f7_jump:
		mov    _0cc638_data,%edx
		mov    _0cccb8_data,%eax
		call   _03714c_func
		mov    _0cccb4_data,%edx
		mov    _0cc638_data,%eax
		call   _0371c0_func
		call   _03723c_func
		mov    $_0372a0_jump,%eax
		call   _03b9e8_func
		mov    $0x00002a,%esi
		mov    $0x000036,%edi
		xor    %ecx,%ecx

	_037332_jump:
		mov    $0x00000f,%ebx
		mov    %cl,%dl
		mov    %bx,_0961b8_data

	_037340_jump:
		cmp    $0x000007,%dl
		ja     _037379_jump
		call   _016dee_func
		call   _016dde_func
		mov    %edi,%eax
		call   _040780_func
		test   %al,%al
		je     _037367_jump
		mov    %esi,%eax
		call   _040780_func
		test   %al,%al
		je     _037367_jump
		inc    %dl

	_037367_jump:
		mov    _0961b8_data,%bx
		dec    %bx
		mov    %bx,_0961b8_data
		jne    _037340_jump

	_037379_jump:
		mov    _0961b8_data,%bx
		cmp    $0x00000c,%dl
		jb     _037387_jump
		mov    %cl,%dl

	_037387_jump:
		mov    %bx,_0961b8_data
		test   %dl,%dl
		je     _0373d1_jump
		mov    _0961ba_data,%dh
		xor    $0x000001,%dh
		mov    _095b15_data,%al
		mov    %dh,_0961ba_data
		cmp    %al,%cl
		jne    _0373c7_jump
		mov    _0cccb4_data,%edx
		mov    _0cc638_data,%eax
		call   _0371c0_func
		cmp    _0961ba_data,%cl
		jne    _0373c7_jump
		call   _03723c_func

	_0373c7_jump:
		mov    $_0372a0_jump,%eax
		call   _03b9e8_func

	_0373d1_jump:
		mov    _0cefa5_data,%dl
		mov    _0961b8_data,%bx
		cmp    %dl,%cl
		jne    _037332_jump
		cmpb   $0x000000,_095b15_data
		jne    _037409_jump
		mov    _0cccb4_data,%edx
		mov    _0cc638_data,%eax
		call   _0371c0_func
		mov    $_0372a0_jump,%eax
		call   _03b9e8_func

	_037409_jump:
		mov    _0961b8_data,%bx
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037418_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		mov    _0cef9f_data,%dl
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		mov    _0961ba_data,%edx
		mov    _0961bc_data,%di
		sar    $0x000010,%edx
		inc    %edi
		cmp    %eax,%edx
		jge    _0374e9_jump
		mov    $0x0000a0,%ebx
		mov    _0cc644_data,%edx
		mov    _0cc638_data,%eax
		mov    %di,_0961bc_data
		call   _07a0bc_func
		mov    $0x0000a0,%ebx
		mov    _0cc644_data,%edx
		mov    _0cc638_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		call   _07a0bc_func
		mov    $0x000036,%eax
		call   _040780_func
		test   %al,%al
		je     _0374ca_jump
		mov    $0x00002a,%eax
		call   _040780_func
		test   %al,%al
		je     _0374ca_jump
		mov    _0961c0_data,%ebx
		inc    %ebx
		mov    %ebx,_0961c0_data
		cmp    $0x000005,%ebx
		jl     _0374d2_jump
		mov    _0961ba_data,%bl
		xor    %esi,%esi
		xor    $0x000001,%bl
		mov    %esi,_0961c0_data
		mov    %bl,_0961ba_data
		jmp    _0374d2_jump

	_0374ca_jump:
		xor    %edx,%edx
		mov    %edx,_0961c0_data

	_0374d2_jump:
		cmpb   $0x000000,_0961ba_data
		jne    _03773d_jump
		call   _03723c_func
		jmp    _03773d_jump

	_0374e9_jump:
		jne    _03750b_jump
		mov    %di,_0961bc_data
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0961be_data
		xor    %edx,%edx
		mov    %ah,_0961ba_data
		mov    %edx,_0961c0_data

	_03750b_jump:
		cmpb   $0x000000,_0961ba_data
		jne    _037619_jump
		cmpl   $0x000014,_0961c0_data
		jl     _037544_jump
		mov    $0x000036,%eax
		call   _040780_func
		test   %al,%al
		je     _037544_jump
		mov    $0x00002a,%eax
		call   _040780_func
		test   %al,%al
		je     _037544_jump
		movb   $0x000001,_0961ba_data

	_037544_jump:
		mov    _0961be_data,%si
		test   %si,%si
		jne    _03760a_jump
		mov    _0cc644_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _05e600_func
		and    $0x00ffff,%eax
		mov    %eax,_0961c0_data
		call   _05e8b8_func
		call   _03723c_func
		cmpl   $0x000000,_0961c0_data
		jne    _03773d_jump
		negw   _0961b8_data
		call   _036f14_func
		mov    _0961b6_data,%edx
		mov    %al,_0961b4_data
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		call   _05e19c_func
		cmpw   $0x000000,_0961b8_data
		jge    _03773d_jump
		mov    $0x0000a0,%ebx
		mov    _0cc644_data,%edx
		mov    _0cc638_data,%eax
		call   _07a0bc_func
		mov    $0x0000a0,%ebx
		mov    _0cc644_data,%edx
		mov    _0cc638_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		call   _07a0bc_func
		call   _03723c_func
		xor    %eax,%eax
		mov    _0cef9f_data,%al
		mov    %ax,_0961be_data
		jmp    _03773d_jump

	_03760a_jump:
		mov    %esi,%edi
		dec    %edi
		mov    %di,_0961be_data
		jmp    _03773d_jump

	_037619_jump:
		cmpl   $0x000000,_0961c0_data
		jne    _03762c_jump
		cmpw   $0x000000,_0961b8_data
		jl     _03766b_jump

	_03762c_jump:
		mov    _0cc644_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _05e600_func
		and    $0x00ffff,%eax
		mov    %eax,_0961c0_data
		call   _05e8b8_func
		cmpl   $0x000000,_0961c0_data
		jne    _03773d_jump
		negw   _0961b8_data
		jmp    _037720_jump

	_03766b_jump:
		mov    $0x0000a0,%ebx
		mov    _0cc644_data,%edx
		mov    _0cc638_data,%eax
		call   _07a0bc_func
		mov    $0x0000a0,%ebx
		mov    _0cc644_data,%edx
		mov    _0cc638_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		mov    $0x00fa00,%ecx
		call   _07a0bc_func
		call   _016dee_func
		call   _016dde_func
		mov    _095b10_data,%edi
		mov    _0cc644_data,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0376c5_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0376c5_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %dl,%dl

	_0376ce_jump:
		mov    $0x000036,%eax
		call   _040780_func
		test   %al,%al
		je     _0376ea_jump
		mov    $0x00002a,%eax
		call   _040780_func
		test   %al,%al
		jne    _0376f2_jump

	_0376ea_jump:
		cmp    _0cefa5_data,%dl
		jne    _0376ce_jump

	_0376f2_jump:
		mov    _0cefa5_data,%al
		xor    %ch,%ch
		xor    %ebx,%ebx
		mov    %ch,_0961ba_data
		mov    %bx,_0961be_data
		test   %al,%al
		je     _03773d_jump
		xor    %edi,%edi
		mov    $0xfffffffc,%ecx
		mov    %edi,_0961c0_data
		mov    %cx,_0961b8_data

	_037720_jump:
		call   _036f14_func
		mov    _0961b6_data,%edx
		mov    %al,_0961b4_data
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		call   _05e19c_func

	_03773d_jump:
		cmpb   $0x000000,_0cefa5_data
		jne    _0377a7_jump
		mov    $0x0000a0,%ebx
		mov    _0cc644_data,%edx
		mov    _0cc638_data,%eax
		call   _07a0bc_func
		mov    $0x0000a0,%ebx
		mov    _0cc644_data,%edx
		mov    _0cc638_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		mov    $0x00fa00,%ecx
		call   _07a0bc_func
		call   _016dee_func
		call   _016dde_func
		mov    _095b10_data,%edi
		mov    _0cc644_data,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0377a0_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0377a0_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_0377a7_jump:
		cmpb   $0x000000,_0cefa5_data
		sete   %al
		xor    %ah,%ah
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0377bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ah,%ah
		mov    _0cef72_data,%dl
		mov    %ah,_0961ba_data
		test   %dl,%dl
		je     _0377d7_jump
		call   _070294_func

	_0377d7_jump:
		cmpb   $0x000000,_0cefa7_data
		je     _0377f9_jump
		mov    $_0de7e4_data,%esi
		call   _012748_func
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _029ff8_func

	_0377f9_jump:
		cmpb   $0x000000,_095b15_data
		jne    _037854_jump
		call   _036f14_func
		mov    $0xfffffffc,%edx
		mov    _0cc644_data,%ebx
		mov    %al,_0961b4_data
		mov    %dx,_0961b8_data
		mov    $0xfffffffc,%edx
		and    $0x0000ff,%eax
		mov    %ebx,%ecx
		call   _05e548_func
		test   %al,%al
		je     _037854_jump
		xor    %ebx,%ebx
		mov    $_037418_func,%eax
		mov    %bx,_0961bc_data
		mov    %bx,_0961be_data
		call   _03b9e8_func
		call   _05e50c_case
		jmp    _037859_jump

	_037854_jump:
		call   _0372a8_func

	_037859_jump:
		cmpb   $0x000000,_0cefa7_data
		je     _037897_jump
		mov    $_0de7e8_data,%esi
		call   _012748_func
		mov    _0de7e8_data,%ebx
		mov    _0de7e4_data,%edx
		mov    _0ccdb4_data,%ecx
		sub    %edx,%ebx
		add    %ebx,%ecx
		mov    %ecx,_0ccdb4_data
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _02a020_func

	_037897_jump:
		cmpb   $0x000000,_0cef72_data
		je     _0378a5_jump
		call   _0702a8_func

	_0378a5_jump:
		xor    %ch,%ch
		xor    %esi,%esi
		mov    %ch,_0cefa5_data
		mov    %esi,_0cc4e8_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0378c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    _0de7ec_data,%ecx
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		add    %eax,%eax
		mov    0x00001c(%ecx),%ebp
		call   _07b824_func
		mov    %eax,(%esp)
		test   %eax,%eax
		je     _0379db_jump
		mov    0x000002(%ecx),%dx
		xor    %eax,%eax
		test   %dx,%dx
		jbe    _037916_jump

	_0378f5_jump:
		xor    %edx,%edx
		mov    %ax,%dx
		imul   $0x00006c,%edx,%ebx
		mov    (%esp),%edi
		add    %edx,%edx
		add    %edx,%edi
		mov    0x000034(%ebx,%ebp,1),%dx
		mov    %dx,(%edi)
		inc    %eax
		mov    0x000002(%ecx),%bx
		cmp    %bx,%ax
		jb     _0378f5_jump

	_037916_jump:
		xor    %edi,%edi
		mov    0x000002(%ecx),%ax
		mov    %edi,0x000008(%esp)
		test   %ax,%ax
		jbe    _0379d4_jump

	_037929_jump:
		mov    0x000008(%esp),%eax
		mov    0x000002(%ecx),%di
		mov    $0xffff8000,%ebx
		cmp    %di,%ax
		jae    _03795a_jump

	_03793b_jump:
		xor    %edx,%edx
		mov    %ax,%dx
		mov    (%esp),%edi
		add    %edx,%edx
		add    %edi,%edx
		mov    (%edx),%di
		cmp    %di,%bx
		jge    _037953_jump
		mov    %edi,%ebx
		mov    %eax,%esi

	_037953_jump:
		inc    %eax
		cmp    0x000002(%ecx),%ax
		jb     _03793b_jump

	_03795a_jump:
		mov    0x000008(%esp),%ebx
		cmp    %bx,%si
		je     _0379be_jump
		xor    %edx,%edx
		mov    %bx,%dx
		imul   $0x00006c,%edx,%ebx
		mov    0x000068(%ebx,%ebp,1),%ax
		mov    %eax,0x00000c(%esp)
		xor    %eax,%eax
		mov    %si,%ax
		mov    %eax,0x000004(%esp)
		imul   $0x00006c,%eax,%eax
		mov    0x000068(%eax,%ebp,1),%di
		mov    %di,0x000068(%ebx,%ebp,1)
		mov    0x00000c(%esp),%ebx
		mov    %bx,0x000068(%eax,%ebp,1)
		lea    0x000000(,%edx,2),%eax
		add    (%esp),%eax
		mov    (%eax),%dx
		mov    %edx,0x00000c(%esp)
		mov    0x000004(%esp),%edx
		mov    (%esp),%ebx
		add    %edx,%edx
		mov    (%edx,%ebx,1),%bx
		mov    %bx,(%eax)
		add    (%esp),%edx
		mov    0x00000c(%esp),%eax
		mov    %ax,(%edx)

	_0379be_jump:
		mov    0x000008(%esp),%edx
		inc    %edx
		mov    0x000002(%ecx),%bx
		mov    %edx,0x000008(%esp)
		cmp    %bx,%dx
		jb     _037929_jump

	_0379d4_jump:
		mov    %esp,%eax
		call   _07b83c_func

	_0379db_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0379e8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x000140,%eax
		mov    _0de7ec_data,%edi
		mov    %eax,%edx
		movzbl (%edi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %al,0x000008(%esp)
		mov    $0x0000c8,%eax
		mov    %eax,%edx
		movzbl 0x000001(%edi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00001c(%edi),%ecx
		mov    %al,0x00000c(%esp)
		call   _010010_func
		movw   $0x000000,0x000004(%edi)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _037a40_jump
		mov    %ebx,%eax

	_037a40_jump:
		mov    %ax,0x000006(%edi)
		test   %si,%si
		jl     _037a59_jump
		mov    $0x000001,%eax
		movswl %si,%ebx
		cmp    %ebx,%eax
		jge    _037a57_jump
		mov    %ebx,%eax

	_037a57_jump:
		jmp    _037a6b_jump

	_037a59_jump:
		movswl %si,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _037a69_jump
		mov    %ebx,%eax

	_037a69_jump:
		neg    %eax

	_037a6b_jump:
		mov    0x000002(%edi),%dx
		xor    %esi,%esi
		mov    %ax,0x000008(%edi)
		test   %dx,%dx
		jbe    _037c21_jump

	_037a7e_jump:
		xor    %ebx,%ebx
		mov    %si,%bx
		movzbl (%edi),%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		imul   %eax,%edx
		mov    %edx,(%esp)
		mov    (%esp),%edx
		mov    %dx,0x000004(%esp)
		xor    %edx,%edx
		mov    0x000004(%esp),%dx
		mov    %edx,0x00000c(%ecx)
		add    %edx,%eax
		mov    %edx,(%ecx)
		dec    %eax
		mov    %ebx,%edx
		mov    %eax,0x000024(%ecx)
		sar    $0x00001f,%edx
		mov    %eax,0x000018(%ecx)
		mov    %ebx,%eax
		movzbl (%edi),%ebp
		idiv   %ebp
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   %eax,%edx
		xor    %ebx,%ebx
		mov    %dx,%bx
		movl   $0x000200,0x00002c(%ecx)
		add    %ebx,%eax
		mov    %ebx,0x000028(%ecx)
		dec    %eax
		mov    %eax,0x00001c(%ecx)
		mov    %eax,0x000010(%ecx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x000020(%ecx)
		mov    %eax,0x000014(%ecx)
		mov    %eax,0x000008(%ecx)
		mov    0x000004(%esp),%eax
		mov    %ebx,0x000004(%ecx)
		cmp    $0x0000a0,%ax
		jae    _037b08_jump
		mov    0x000014(%edi),%eax
		mov    %eax,0x00003c(%ecx)
		jmp    _037b1d_jump

	_037b08_jump:
		mov    0x000004(%esp),%ebx
		mov    0x000018(%edi),%eax
		sub    $0x0000a0,%ebx
		mov    %eax,0x00003c(%ecx)
		mov    %bx,0x000004(%esp)

	_037b1d_jump:
		mov    0x000004(%esp),%al
		mov    %al,0x000062(%ecx)
		mov    %al,0x000060(%ecx)
		add    0x000008(%esp),%al
		dec    %al
		mov    %al,0x000066(%ecx)
		mov    $0x00000a,%ebx
		mov    %al,0x000064(%ecx)
		mov    0x00000c(%esp),%al
		mov    %dl,0x000067(%ecx)
		add    %dl,%al
		mov    %dl,0x000061(%ecx)
		dec    %al
		xor    %edx,%edx
		mov    %al,0x000065(%ecx)
		mov    %si,%dx
		mov    %al,0x000063(%ecx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000005,%edx
		jge    _037b70_jump
		call   _07cf7e_func
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		jmp    _037b84_jump

	_037b70_jump:
		call   _07cf7e_func
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000002,%edx

	_037b84_jump:
		mov    %dx,0x000030(%ecx)
		call   _07cf7e_func
		mov    %eax,%edx
		mov    $0x000008,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000006,%edx
		mov    %dx,0x000032(%ecx)
		call   _07cf7e_func
		mov    %eax,%edx
		mov    $0x000005,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000002,%edx
		mov    %dx,0x000034(%ecx)
		call   _07cf7e_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x000002,%edx
		mov    %dl,0x000039(%ecx)
		call   _07cf7e_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x000002,%edx
		mov    %dl,0x00003a(%ecx)
		call   _07cf7e_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000039(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		mov    %al,0x000036(%ecx)
		mov    0x00003a(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		add    $0x000002,%edx
		mov    %dl,0x00003b(%ecx)
		mov    %al,0x000037(%ecx)
		mov    0x00003b(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		mov    %si,0x000068(%ecx)
		mov    %al,0x000038(%ecx)
		inc    %esi
		mov    0x000002(%edi),%bx
		add    $0x00006c,%ecx
		cmp    %bx,%si
		jb     _037a7e_jump

	_037c21_jump:
		call   _0378c0_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx

	_037c2e_jump:
		ret    

	_037c30_case:
		mov    _0de7ec_data,%eax
		test   %eax,%eax
		je     _037c2e_jump
		cmpl   $0x000000,0x00001c(%eax)
		je     _037c47_jump
		add    $0x00001c,%eax
		call   _07b83c_func

	_037c47_jump:
		cmpl   $0x000000,_0de7ec_data
		je     _037c2e_jump
		mov    $_0de7ec_data,%eax
		jmp    _07b83c_func



_037c5c_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,%edi
		mov    %bx,0x000008(%esp)
		mov    %ecx,(%esp)
		mov    0x000018(%esp),%edx
		xor    %cl,%cl
		test   %edx,%edx
		je     _037d16_jump
		cmpl   $0x000000,0x00001c(%esp)
		je     _037d16_jump
		mov    $0x000020,%eax
		call   _07b824_func
		mov    %eax,%edx
		mov    %eax,_0de7ec_data
		test   %eax,%eax
		je     _037d16_jump
		xor    %ebx,%ebx
		mov    %eax,%esi
		mov    0x000004(%esp),%bx
		mov    $0x000002,%eax
		cmp    %ebx,%eax
		jge    _037cb1_jump
		mov    %ebx,%eax

	_037cb1_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    $0x000001,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _037cc3_jump
		mov    %ebx,%eax

	_037cc3_jump:
		xor    %bh,%bh
		mov    %al,0x000001(%edx)
		mov    (%edx),%bl
		xor    %ah,%ah
		imul   %eax,%ebx
		mov    0x000018(%esp),%eax
		mov    %bx,0x000002(%edx)
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%edx)
		mov    0x00001c(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		call   _07b824_func
		mov    %eax,0x00001c(%edx)
		test   %eax,%eax
		je     _037d16_jump
		mov    _0cc638_data,%eax
		mov    %eax,0x000014(%edx)
		add    $0x00c800,%eax
		mov    $0x000001,%cl
		mov    %eax,0x000018(%edx)

	_037d16_jump:
		test   %cl,%cl
		je     _037d53_jump
		mov    $0x0000a0,%ebx
		mov    0x000014(%esi),%edx
		mov    0x00000c(%esi),%eax
		call   _07a070_func
		mov    $0x0000a0,%ebx
		mov    0x00000c(%esi),%eax
		mov    0x000018(%esi),%edx
		add    $0x0000a0,%eax
		call   _07a070_func
		xor    %edx,%edx
		mov    0x000006(%esp),%eax
		mov    (%esp),%dx
		sar    $0x000010,%eax
		call   _0379e8_func
		jmp    _037d58_jump

	_037d53_jump:
		call   _037c30_case

	_037d58_jump:
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_037d64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		mov    _0de7ec_data,%eax
		mov    %eax,0x000010(%esp)
		mov    0x00001c(%eax),%ecx
		mov    0x000006(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _037d85_jump
		neg    %eax

	_037d85_jump:
		mov    %al,0x00002c(%esp)
		mov    0x000010(%esp),%eax
		xor    %edx,%edx
		mov    0x000002(%eax),%bx
		mov    %edx,0x000020(%esp)
		test   %bx,%bx
		jbe    _037fc0_jump

	_037da0_jump:
		mov    (%ecx),%eax
		add    0x000018(%ecx),%eax
		sar    %eax
		mov    0x00001c(%ecx),%ebx
		mov    %eax,0x000004(%esp)
		mov    0x000004(%ecx),%eax
		add    %ebx,%eax
		sar    %eax
		mov    0x000020(%ecx),%esi
		mov    %eax,0x00001c(%esp)
		mov    0x000008(%ecx),%eax
		xor    %bl,%bl
		add    %esi,%eax
		mov    %bl,0x000030(%esp)
		sar    %eax
		mov    %bl,0x000034(%esp)
		mov    %eax,0x000018(%esp)

	_037dd1_jump:
		xor    %dl,%dl
		cmpb   $0x000000,0x00002c(%esp)
		jbe    _037e2e_jump

	_037dda_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    0x00002e(%ecx),%ebx
		sar    $0x000010,%ebx
		add    %ebx,(%ecx,%eax,1)
		mov    0x000030(%ecx),%ebx
		mov    0x000004(%ecx,%eax,1),%esi
		sar    $0x000010,%ebx
		add    %ebx,%esi
		mov    0x000008(%ecx,%eax,1),%edi
		mov    %esi,0x000004(%ecx,%eax,1)
		cmp    $0x000032,%edi
		jge    _037e0b_jump
		movw   $0x000000,0x000034(%ecx)

	_037e0b_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    0x000032(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    0x000008(%ecx,%eax,1),%edi
		inc    %dl
		add    %ebx,%edi
		mov    0x00002c(%esp),%bl
		mov    %edi,0x000008(%ecx,%eax,1)
		cmp    %bl,%dl
		jb     _037dda_jump

	_037e2e_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x00000c,%eax,%eax
		lea    (%eax,%ecx,1),%esi
		mov    0x000004(%esp),%edi
		mov    (%esi),%eax
		mov    0x000018(%esp),%edx
		sub    %edi,%eax
		mov    0x000004(%esi),%ebp
		mov    %eax,(%esp)
		mov    0x00001c(%esp),%eax
		lea    0x000028(%esp),%ebx
		sub    %eax,%ebp
		xor    %eax,%eax
		mov    0x000008(%esi),%esi
		mov    0x000038(%ecx),%al
		sub    %edx,%esi
		add    %eax,%eax
		lea    0x000024(%esp),%edx
		cwtl   
		call   _05be7c_func
		mov    0x000026(%esp),%eax
		mov    (%esp),%edi
		sar    $0x000010,%eax
		imul   %eax,%edi
		mov    0x000022(%esp),%ebx
		mov    %ebp,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		imul   %eax,%ebp
		sub    %edx,%edi
		imul   (%esp),%ebx
		xor    %eax,%eax
		mov    0x000037(%ecx),%al
		add    %eax,%eax
		sar    $0x000009,%edi
		cwtl   
		lea    0x000024(%esp),%edx
		add    %ebx,%ebp
		lea    0x000028(%esp),%ebx
		mov    %edi,(%esp)
		call   _05be7c_func
		mov    0x000022(%esp),%ebx
		mov    %esi,%edi
		sar    $0x000010,%ebx
		imul   %ebx,%edi
		mov    0x000026(%esp),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		imul   %esi,%eax
		imul   (%esp),%ebx
		add    %edx,%edi
		mov    %eax,%esi
		xor    %eax,%eax
		lea    0x000024(%esp),%edx
		mov    0x000036(%ecx),%al
		sub    %ebx,%esi
		add    %eax,%eax
		lea    0x000028(%esp),%ebx
		cwtl   
		sar    $0x000009,%esi
		call   _05be7c_func
		mov    0x000022(%esp),%ebx
		mov    %esi,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		imul   %eax,%esi
		sar    $0x000009,%ebp
		imul   %ebp,%ebx
		mov    %edx,0x000008(%esp)
		mov    %ebp,%edx
		imul   %eax,%edx
		mov    0x000018(%esp),%ebp
		sub    %ebx,%esi
		mov    %edx,0x00000c(%esp)
		mov    0x000008(%esp),%edx
		sar    $0x000009,%esi
		add    0x00000c(%esp),%edx
		mov    %edi,%eax
		mov    %edx,0x000014(%esp)
		mov    %edi,%edx
		add    %ebp,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		xor    %ebx,%ebx
		mov    0x000004(%esp),%edx
		mov    0x000034(%esp),%bl
		add    %edx,%eax
		mov    %eax,0x000040(%ecx,%ebx,4)
		mov    0x000014(%esp),%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		mov    0x00001c(%esp),%esi
		add    %esi,%eax
		mov    %eax,0x000044(%ecx,%ebx,4)
		mov    0x000030(%esp),%al
		inc    %al
		mov    %al,0x000030(%esp)
		mov    %bl,%ah
		add    $0x000002,%ah
		mov    %ah,0x000034(%esp)
		cmp    $0x000004,%al
		jb     _037dd1_jump
		mov    0x00002c(%esp),%al
		mulb   0x000039(%ecx)
		mov    0x000036(%ecx),%dh
		mov    0x00003a(%ecx),%bl
		add    %al,%dh
		mov    0x00002c(%esp),%al
		mul    %bl
		mov    %dh,0x000036(%ecx)
		mov    0x000037(%ecx),%bh
		mov    0x00003b(%ecx),%dl
		add    %al,%bh
		mov    0x00002c(%esp),%al
		mul    %dl
		mov    0x000038(%ecx),%dh
		add    $0x00006c,%ecx
		add    %al,%dh
		mov    0x000020(%esp),%esi
		mov    %dh,-0x000034(%ecx)
		mov    0x000010(%esp),%edx
		mov    %bh,-0x000035(%ecx)
		inc    %esi
		mov    0x000002(%edx),%di
		mov    %esi,0x000020(%esp)
		cmp    %di,%si
		jb     _037da0_jump

	_037fc0_jump:
		mov    0x000010(%esp),%eax
		cmpw   $0x000014,0x000004(%eax)
		jbe    _038018_jump
		xor    %edx,%edx
		mov    0x000004(%eax),%dx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _038018_jump
		mov    0x000010(%esp),%ebx
		mov    0x000010(%esp),%eax
		xor    %edx,%edx
		mov    0x000002(%ebx),%cx
		mov    0x00001c(%eax),%eax
		test   %cx,%cx
		jbe    _038018_jump

	_037ff7_jump:
		xor    %ebx,%ebx
		mov    0x000032(%eax),%si
		mov    0x00002c(%esp),%bl
		add    %ebx,%esi
		mov    0x000010(%esp),%ebx
		mov    %si,0x000032(%eax)
		inc    %edx
		mov    0x000002(%ebx),%di
		add    $0x00006c,%eax
		cmp    %di,%dx
		jb     _037ff7_jump

	_038018_jump:
		xor    %ah,%ah
		mov    0x000010(%esp),%edx
		mov    0x00002c(%esp),%al
		mov    0x000004(%edx),%bx
		add    %eax,%ebx
		mov    0x000006(%edx),%cx
		mov    %bx,0x000004(%edx)
		cmp    %cx,%bx
		jbe    _03803b_jump
		movw   $0x000000,0x000004(%edx)

	_03803b_jump:
		mov    0x000010(%esp),%eax
		mov    0x000004(%eax),%ax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038050_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0de7ec_data,%ecx
		mov    0x00001c(%ecx),%edi
		xor    %ebx,%ebx
		mov    %edi,%edx
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		cmp    %eax,%ebx
		jl     _038072_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_038072_jump:
		xor    %eax,%eax
		mov    0x000068(%edx),%ax
		imul   $0x00006c,%eax,%eax
		add    %edi,%eax
		lea    0x00003c(%eax),%esi
		add    $0x00006c,%edx
		mov    0x000010(%ecx),%eax
		inc    %ebx
		call   _010045_func
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		cmp    %eax,%ebx
		jl     _038072_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0380a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi

	_0380a7_jump:
		movswl %si,%edx
		imul   $0x0000d8,%edx,%edx
		mov    $_0cba88_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _038118_jump
		mov    $0x000002,%cl
		mov    $0x0000bc,%edi
		mov    %cl,_0cbb5c_data(%edx)
		xor    %al,%al
		mov    %di,_0cbb5a_data(%edx)
		mov    %al,_0cbb5d_data(%edx)
		mov    %al,_0cbb5e_data(%edx)
		movw   $0x000096,_0cbb58_data(%edx)
		mov    $0x000005,%ch
		mov    %ebx,%eax
		mov    %ch,_0cbb5f_data(%edx)
		call   _01ec48_func
		mov    _0cbb50_data(%edx),%bx
		mov    %bx,_0cbb58_data(%edx)
		movb   $0x000020,_0cba88_data(%edx)
		jmp    _038120_jump

	_038118_jump:
		xor    %ah,%ah
		mov    %ah,_0cbb5d_data(%edx)

	_038120_jump:
		inc    %esi
		cmp    $0x000009,%si
		jle    _0380a7_jump
		mov    $0x0000ff,%bh
		mov    %bh,_0cefb4_data
		mov    %bh,_0cefae_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03813c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cc300_data,%edx
		mov    _0cc304_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _0381b7_jump

	_038153_jump:
		cmpw   $0x0000ee,0x000060(%edx)
		jne    _0381ab_jump
		mov    0x000081(%edx),%cl
		test   $0x000004,%cl
		jne    _0381ab_jump
		mov    %cl,%ch
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ch
		mov    %edx,%eax
		mov    %ch,0x000081(%edx)
		call   _01f304_func
		movw   $0x000008,0x000040(%edx)
		mov    0x000081(%edx),%al
		movw   $0x000000,0x000042(%edx)
		or     $0x000008,%al
		mov    %al,0x000081(%edx)
		mov    0x000034(%edx),%ax
		movb   $0x000000,0x00006b(%edx)
		mov    %ax,_0ced74_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0381ab_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _038153_jump

	_0381b7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0381bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0000ff,%ah
		mov    _0cef89_data,%dl
		mov    %ah,_0cefb4_data
		test   %dl,%dl
		jne    _0381d9_jump
		mov    %dl,_0ca425_data

	_0381d9_jump:
		xor    %bl,%bl
		mov    %bl,_0cefac_data
		call   _01eaa8_func
		mov    _0cede4_data,%si
		cmp    $0x000002,%si
		jb     _038208_jump
		jbe    _0386d5_jump
		cmp    $0x000003,%si
		je     _03888a_jump
		jmp    _038a45_jump

	_038208_jump:
		cmp    $0x000001,%si
		jne    _038a45_jump
		mov    _0cedd0_data,%si
		cmp    $0x000008,%si
		jb     _038234_jump
		jbe    _0383cd_jump
		cmp    $0x000011,%si
		je     _03854b_jump
		jmp    _038a45_jump

	_038234_jump:
		cmp    $0x000003,%si
		jne    _038a45_jump
		mov    $0x000001,%ah
		mov    $_0cba88_data,%edi
		mov    _0c2468_data,%esi
		mov    %ah,_0cefac_data
		push   %edi

	_038252_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03826a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038252_jump

	_03826a_jump:
		pop    %edi
		mov    $_0cbb60_data,%edi
		mov    _0c246c_data,%esi
		push   %edi

	_038277_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03828f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038277_jump

	_03828f_jump:
		pop    %edi
		mov    $_0cbc38_data,%edi
		mov    _0c2470_data,%esi
		push   %edi

	_03829c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0382b4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03829c_jump

	_0382b4_jump:
		pop    %edi
		mov    $_0cbd10_data,%edi
		mov    _0c2474_data,%esi
		push   %edi

	_0382c1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0382d9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0382c1_jump

	_0382d9_jump:
		pop    %edi
		mov    $_0cbde8_data,%edi
		mov    _0c2478_data,%esi
		push   %edi

	_0382e6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0382fe_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0382e6_jump

	_0382fe_jump:
		pop    %edi
		mov    $_0cbec0_data,%edi
		mov    _0c247c_data,%esi
		push   %edi

	_03830b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038323_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03830b_jump

	_038323_jump:
		pop    %edi
		mov    $_0cbf98_data,%edi
		mov    _0c2480_data,%esi
		push   %edi

	_038330_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038348_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038330_jump

	_038348_jump:
		pop    %edi
		mov    $_0cc070_data,%edi
		mov    _0c2484_data,%esi
		push   %edi

	_038355_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03836d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038355_jump

	_03836d_jump:
		pop    %edi
		mov    $_0cc148_data,%edi
		mov    _0c2488_data,%esi
		push   %edi

	_03837a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038392_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03837a_jump

	_038392_jump:
		pop    %edi
		mov    $_0cc220_data,%edi
		mov    _0c248c_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_0383a4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0383bc_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0383a4_jump

	_0383bc_jump:
		pop    %edi
		mov    _0c4d88_data,%edx
		mov    $_0cc070_data,%eax
		jmp    _038a3d_jump

	_0383cd_jump:
		mov    $0x000001,%al
		mov    $_0cba88_data,%edi
		mov    _0c2490_data,%esi
		mov    %al,_0cefac_data
		push   %edi

	_0383e0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0383f8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0383e0_jump

	_0383f8_jump:
		pop    %edi
		mov    $_0cbb60_data,%edi
		mov    _0c2494_data,%esi
		push   %edi

	_038405_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03841d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038405_jump

	_03841d_jump:
		pop    %edi
		mov    $_0cbc38_data,%edi
		mov    _0c2498_data,%esi
		push   %edi

	_03842a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038442_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03842a_jump

	_038442_jump:
		pop    %edi
		mov    $_0cbd10_data,%edi
		mov    _0c249c_data,%esi
		push   %edi

	_03844f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038467_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03844f_jump

	_038467_jump:
		pop    %edi
		mov    $_0cbde8_data,%edi
		mov    _0c24a0_data,%esi
		push   %edi

	_038474_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03848c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038474_jump

	_03848c_jump:
		pop    %edi
		mov    $_0cbec0_data,%edi
		mov    _0c24a4_data,%esi
		push   %edi

	_038499_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0384b1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038499_jump

	_0384b1_jump:
		pop    %edi
		mov    $_0cbf98_data,%edi
		mov    _0c24a8_data,%esi
		push   %edi

	_0384be_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0384d6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0384be_jump

	_0384d6_jump:
		pop    %edi
		mov    $_0cc070_data,%edi
		mov    _0c24ac_data,%esi
		push   %edi

	_0384e3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0384fb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0384e3_jump

	_0384fb_jump:
		pop    %edi
		mov    $_0cc148_data,%edi
		mov    _0c24b0_data,%esi
		push   %edi

	_038508_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038520_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038508_jump

	_038520_jump:
		pop    %edi
		mov    $_0cc220_data,%edi
		mov    _0c24b4_data,%esi
		push   %edi

	_03852d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038545_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03852d_jump

	_038545_jump:
		pop    %edi
		jmp    _038a45_jump

	_03854b_jump:
		mov    $0x000001,%ch
		mov    $_0cba88_data,%edi
		mov    _0c24b8_data,%esi
		mov    %ch,_0cefac_data
		push   %edi

	_03855f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038577_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03855f_jump

	_038577_jump:
		pop    %edi
		mov    $_0cbb60_data,%edi
		mov    _0c24bc_data,%esi
		push   %edi

	_038584_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03859c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038584_jump

	_03859c_jump:
		pop    %edi
		mov    $_0cbc38_data,%edi
		mov    _0c24c0_data,%esi
		push   %edi

	_0385a9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0385c1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0385a9_jump

	_0385c1_jump:
		pop    %edi
		mov    $_0cbd10_data,%edi
		mov    _0c24c4_data,%esi
		push   %edi

	_0385ce_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0385e6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0385ce_jump

	_0385e6_jump:
		pop    %edi
		mov    $_0cbde8_data,%edi
		mov    _0c24c8_data,%esi
		push   %edi

	_0385f3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03860b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0385f3_jump

	_03860b_jump:
		pop    %edi
		mov    $_0cbec0_data,%edi
		mov    _0c24cc_data,%esi
		push   %edi

	_038618_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038630_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038618_jump

	_038630_jump:
		pop    %edi
		mov    $_0cbf98_data,%edi
		mov    _0c24d0_data,%esi
		push   %edi

	_03863d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038655_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03863d_jump

	_038655_jump:
		pop    %edi
		mov    $_0cc070_data,%edi
		mov    _0c24d4_data,%esi
		push   %edi

	_038662_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03867a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038662_jump

	_03867a_jump:
		pop    %edi
		mov    $_0cc148_data,%edi
		mov    _0c24d8_data,%esi
		push   %edi

	_038687_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03869f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038687_jump

	_03869f_jump:
		pop    %edi
		mov    $_0cc220_data,%edi
		mov    _0c24dc_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_0386b1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0386c9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0386b1_jump

	_0386c9_jump:
		pop    %edi
		mov    _0c4d88_data,%edx
		jmp    _038a38_jump

	_0386d5_jump:
		mov    _0cedd0_data,%dx
		cmp    $0x00000b,%dx
		jne    _038a45_jump
		mov    $0x000001,%cl
		mov    $_0cba88_data,%edi
		mov    _0c24e0_data,%esi
		mov    %cl,_0cefac_data
		push   %edi

	_0386fa_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038712_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0386fa_jump

	_038712_jump:
		pop    %edi
		mov    $_0cbb60_data,%edi
		mov    _0c24e4_data,%esi
		push   %edi

	_03871f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038737_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03871f_jump

	_038737_jump:
		pop    %edi
		mov    $_0cbc38_data,%edi
		mov    _0c24e8_data,%esi
		push   %edi

	_038744_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03875c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038744_jump

	_03875c_jump:
		pop    %edi
		mov    $_0cbd10_data,%edi
		mov    _0c24ec_data,%esi
		push   %edi

	_038769_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038781_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038769_jump

	_038781_jump:
		pop    %edi
		mov    $_0cbde8_data,%edi
		mov    _0c24f0_data,%esi
		push   %edi

	_03878e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0387a6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03878e_jump

	_0387a6_jump:
		pop    %edi
		mov    $_0cbec0_data,%edi
		mov    _0c24f4_data,%esi
		push   %edi

	_0387b3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0387cb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0387b3_jump

	_0387cb_jump:
		pop    %edi
		mov    $_0cbf98_data,%edi
		mov    _0c24f8_data,%esi
		push   %edi

	_0387d8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0387f0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0387d8_jump

	_0387f0_jump:
		pop    %edi
		mov    $_0cc070_data,%edi
		mov    _0c24fc_data,%esi
		push   %edi

	_0387fd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038815_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0387fd_jump

	_038815_jump:
		pop    %edi
		mov    $_0cc148_data,%edi
		mov    _0c2500_data,%esi
		push   %edi

	_038822_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03883a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038822_jump

	_03883a_jump:
		pop    %edi
		mov    $_0cc220_data,%edi
		mov    _0c2504_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_03884c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038864_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03884c_jump

	_038864_jump:
		pop    %edi
		mov    _0c4d86_data,%edx
		mov    $_0cc148_data,%eax
		sar    $0x000010,%edx
		call   _01eebc_func
		mov    $0x0000ff,%ebx
		mov    _0c4d86_data,%edx
		mov    %edi,%eax
		jmp    _038a3d_jump

	_03888a_jump:
		mov    _0cedd0_data,%dx
		cmp    $0x00000b,%dx
		jne    _038a45_jump
		mov    $0x000001,%bh
		mov    $_0cba88_data,%edi
		mov    _0c2508_data,%esi
		mov    %bh,_0cefac_data
		push   %edi

	_0388af_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0388c7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0388af_jump

	_0388c7_jump:
		pop    %edi
		mov    $_0cbb60_data,%edi
		mov    _0c250c_data,%esi
		push   %edi

	_0388d4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0388ec_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0388d4_jump

	_0388ec_jump:
		pop    %edi
		mov    $_0cbc38_data,%edi
		mov    _0c2510_data,%esi
		push   %edi

	_0388f9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038911_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0388f9_jump

	_038911_jump:
		pop    %edi
		mov    $_0cbd10_data,%edi
		mov    _0c2514_data,%esi
		push   %edi

	_03891e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038936_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03891e_jump

	_038936_jump:
		pop    %edi
		mov    $_0cbde8_data,%edi
		mov    _0c2518_data,%esi
		push   %edi

	_038943_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03895b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038943_jump

	_03895b_jump:
		pop    %edi
		mov    $_0cbec0_data,%edi
		mov    _0c251c_data,%esi
		push   %edi

	_038968_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038980_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038968_jump

	_038980_jump:
		pop    %edi
		mov    $_0cbf98_data,%edi
		mov    _0c2520_data,%esi
		push   %edi

	_03898d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0389a5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03898d_jump

	_0389a5_jump:
		pop    %edi
		mov    $_0cc070_data,%edi
		mov    _0c2524_data,%esi
		push   %edi

	_0389b2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0389ca_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0389b2_jump

	_0389ca_jump:
		pop    %edi
		mov    $_0cc148_data,%edi
		mov    _0c2528_data,%esi
		push   %edi

	_0389d7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0389ef_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0389d7_jump

	_0389ef_jump:
		pop    %edi
		mov    $_0cc220_data,%edi
		mov    _0c252c_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_038a01_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038a19_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038a01_jump

	_038a19_jump:
		pop    %edi
		mov    _0c4d8c_data,%edx
		mov    $_0cc070_data,%eax
		sar    $0x000010,%edx
		call   _01eebc_func
		mov    $0x0000ff,%ebx
		mov    _0c4d8c_data,%edx

	_038a38_jump:
		mov    $_0cc148_data,%eax

	_038a3d_jump:
		sar    $0x000010,%edx
		call   _01eebc_func

	_038a45_jump:
		cmpb   $0x000000,_0cefac_data
		je     _038a58_jump
		call   _0380a0_func
		call   _03813c_func

	_038a58_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038a60_func:
		push   %ebx
		xor    %ebx,%ebx
		mov    0x00007f(%eax),%bl
		cmp    %dx,%bx
		jge    _038a74_jump
		mov    %bl,%dl
		inc    %dl
		mov    %dl,0x00007f(%eax)
		pop    %ebx
		ret    

	_038a74_jump:
		movb   $0x000000,0x00007f(%eax)
		incb   _0cefb4_data
		pop    %ebx
		ret    

_038a80_switch:
		.long   _038ba2_case
		.long   _038ab1_case
		.long   _038b09_case
		.long   _038b36_case
		.long   _038b57_case




_038a94_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x00007d(%eax),%al
		cmp    $0x000004,%al
		ja     _038ba2_case
		and    $0x0000ff,%eax
		jmp    *%cs:_038a80_switch(,%eax,4)

	_038ab1_case:
		mov    $0x000064,%edx
		mov    %ecx,%eax
		call   _038a60_func
		mov    _0cefb4_data,%bl
		cmp    $0x000005,%bl
		je     _038ae8_jump
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0cba88_data(,%eax,8)
		jne    _038ba9_jump

	_038ae8_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _05f030_func
		movb   $0x000000,0x00007d(%ecx)
		mov    $0x0000ff,%al
		movb   $0x000000,0x00007f(%ecx)
		mov    %al,_0cefb4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_038b09_case:
		mov    $0x00006e,%edx
		mov    %ecx,%eax
		call   _038a60_func
		cmpb   $0x000007,_0cefb4_data
		jne    _038ba9_jump
		movb   $0x000003,0x00007d(%ecx)
		mov    $0x0000ff,%dh
		movb   $0x000000,0x00007f(%ecx)
		mov    %dh,_0cefb4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_038b36_case:
		mov    0x00007f(%ecx),%bh
		inc    %bh
		mov    %bh,0x00007f(%ecx)
		cmp    $0x000032,%bh
		jbe    _038ba9_jump
		movb   $0x000004,0x00007d(%ecx)
		mov    $0x000007,%ah
		movb   $0x000000,0x00007f(%ecx)
		mov    %ah,_0cefb4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_038b57_case:
		cmpb   $0x000000,_0cef4f_data
		sete   %al
		xor    %ah,%ah
		dec    %eax
		mov    _0cefb4_data,%dh
		mov    %ax,0x000042(%ecx)
		cmp    $0x000009,%dh
		jae    _038ba9_jump
		xor    %eax,%eax
		mov    %dh,%al
		lea    0x000001(%eax),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0cba88_data(,%eax,8)
		je     _038ba9_jump
		mov    $0x000078,%edx
		mov    %ecx,%eax
		call   _038a60_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_038ba2_case:
		movb   $0x0000ff,_0cefb4_data

	_038ba9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038bb0_func:
		push   %edx
		mov    _0cedd0_data,%dx
		mov    _0cede4_data,%ax
		cmp    $0x000002,%ax
		jb     _038bce_jump
		jbe    _038bfd_jump
		cmp    $0x000003,%ax
		je     _038c0c_jump
		jmp    _038c19_jump

	_038bce_jump:
		cmp    $0x000001,%ax
		jne    _038c19_jump
		cmp    $0x000003,%dx
		jne    _038be1_jump
		orb    $0x000001,_0ced80_data

	_038be1_jump:
		cmp    $0x000008,%dx
		jne    _038bee_jump
		orb    $0x000002,_0ced80_data

	_038bee_jump:
		cmp    $0x000011,%dx
		jne    _038c19_jump
		orb    $0x000080,_0ced80_data
		jmp    _038c19_jump

	_038bfd_jump:
		cmp    $0x00000b,%dx
		jne    _038c19_jump
		orb    $0x000004,_0ced80_data
		jmp    _038c19_jump

	_038c0c_jump:
		cmp    $0x00000b,%dx
		jne    _038c19_jump
		orb    $0x000001,_0ced81_data

	_038c19_jump:
		mov    %dx,_0cedd0_data
		pop    %edx
		ret    

_038c24_switch:
		.long   _038c83_case
		.long   _038d37_case
		.long   _038d55_case
		.long   _038d55_case
		.long   _038dac_case
		.long   _038e30_case
		.long   _038dd2_case




_038c40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    _0ced72_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc300_data,%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		mov    _0cefb4_data,%al
		mov    %al,(%esp)
		mov    0x00006c(%esi),%al
		cmp    $0x000006,%al
		ja     _038e30_case
		and    $0x0000ff,%eax
		jmp    *%cs:_038c24_switch(,%eax,4)

	_038c83_case:
		mov    0x00007b(%esi),%bl
		test   %bl,%bl
		je     _038d28_jump
		xor    %eax,%eax
		mov    _0cdbcc_data,%edx
		mov    _0cdc0c_data,%al
		mov    0x000028(%esi),%ebx
		add    %edx,%eax
		sub    %ebx,%eax
		add    $0x000002,%eax
		test   %eax,%eax
		jge    _038cab_jump
		neg    %eax

	_038cab_jump:
		cmp    $0x000003,%eax
		jge    _038d2e_jump
		mov    _0cdc11_data,%al
		cmp    $0x000001,%al
		je     _038ce0_jump
		test   %al,%al
		je     _038ce0_jump
		cmp    $0x000003,%al
		jne    _038cce_jump
		cmpb   $0x000014,_0cdc10_data
		je     _038ce0_jump

	_038cce_jump:
		cmpb   $0x000003,_0cdc11_data
		jne    _038d2e_jump
		cmpb   $0x000015,_0cdc10_data
		jne    _038d2e_jump

	_038ce0_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		mov    $0x000022,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		mov    _0cdc25_data,%al
		mov    $0xffff8300,%ebx
		or     $0x000008,%al
		mov    %bx,_0cedb6_data
		mov    %al,_0cdc25_data
		jmp    _038d2e_jump

	_038d28_jump:
		mov    %bl,_0cefc9_data

	_038d2e_jump:
		movb   $0x000000,0x00007d(%esi)
		jmp    _038e30_case

	_038d37_case:
		cmpb   $0x0000ff,(%esp)
		jne    _038e30_case
		xor    %dh,%dh
		movb   $0x000001,0x00007d(%esi)
		mov    %dh,_0cefb4_data
		mov    %dh,0x00007f(%esi)
		jmp    _038e30_case

	_038d55_case:
		mov    _0cdc11_data,%ah
		cmp    $0x000001,%ah
		je     _038d72_jump
		test   %ah,%ah
		je     _038d72_jump
		cmp    $0x000003,%ah
		jne    _038d86_jump
		cmpb   $0x000022,_0cdc10_data
		jne    _038d86_jump

	_038d72_jump:
		mov    $0x000023,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func

	_038d86_jump:
		cmpb   $0x000003,_0cdc11_data
		jne    _038e30_case
		cmpb   $0x000024,_0cdc10_data
		jne    _038e30_case
		movb   $0x0000ff,_0cdc0f_data
		jmp    _038e30_case

	_038dac_case:
		mov    %esi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _038dcd_jump
		call   _038bb0_func
		movb   $0x000002,0x00007d(%esi)
		mov    $0x000005,%al
		movb   $0x000000,0x00007f(%esi)
		mov    %al,_0cefb4_data
		jmp    _038e30_case

	_038dcd_jump:
		mov    %al,0x00007d(%esi)
		jmp    _038e30_case

	_038dd2_case:
		cmpb   $0x000003,_0cdc11_data
		jne    _038df3_jump
		cmpb   $0x000024,_0cdc10_data
		jne    _038df3_jump
		mov    $0x000025,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func

	_038df3_jump:
		cmpb   $0x000003,_0cdc11_data
		jne    _038e30_case
		cmpb   $0x000014,_0cdc10_data
		jne    _038e30_case
		mov    _0cdbcc_data,%ax
		mov    0x00007d(%esi),%bh
		mov    %ax,_0cedb6_data
		cmp    $0x000004,%bh
		jne    _038e30_case
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x008300,_0cedb6_data

	_038e30_case:
		mov    %esi,%eax
		call   _038a94_func
		mov    _0cefb4_data,%al
		mov    (%esp),%ah
		cmp    %ah,%al
		je     _038ef5_jump
		mov    $0x000001,%dl
		mov    %ah,_0cefae_data
		mov    %dl,_0cefad_data
		cmp    $0x0000ff,%al
		je     _038ef5_jump
		mov    0x000081(%ecx),%bl
		or     $0x000004,%bl
		mov    0x000024(%ecx),%esi
		mov    %bl,0x000081(%ecx)
		test   %esi,%esi
		jne    _038e7a_jump
		mov    %ecx,%eax
		call   _01f304_func

	_038e7a_jump:
		mov    _0cee0e_data,%esi
		xor    %eax,%eax
		sar    $0x000010,%esi
		mov    0x000068(%ecx),%al
		movw   $0x000000,0x00005e(%ecx)
		sub    %eax,%esi
		mov    _0cedf8_data,%eax
		mov    %esi,0x000028(%ecx)
		sar    $0x000010,%eax
		movzbl 0x000069(%ecx),%esi
		add    $0x0000be,%eax
		movb   $0x000000,0x00006b(%ecx)
		sub    %esi,%eax
		mov    %eax,0x00002c(%ecx)
		xor    %eax,%eax
		mov    0x000081(%ecx),%bh
		mov    0x000068(%ecx),%al
		or     $0x000008,%bh
		mov    %eax,%esi
		mov    %ax,0x000036(%ecx)
		xor    %eax,%eax
		neg    %esi
		mov    0x000069(%ecx),%al
		mov    %si,0x000036(%ecx)
		mov    $0x0000be,%esi
		mov    %bh,0x000081(%ecx)
		sub    %eax,%esi
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    (%esp),%al
		mov    %si,0x000038(%ecx)
		mov    %al,_0cefae_data

	_038ef5_jump:
		cmpb   $0x000000,_0cefad_data
		je     _038f38_jump
		xor    %eax,%eax
		mov    _0cefae_data,%al
		lea    0x000000(,%eax,8),%esi
		sub    %eax,%esi
		shl    $0x000002,%esi
		sub    %eax,%esi
		shl    $0x000003,%esi
		mov    _0cbb5a_data(%esi),%di
		cmp    $0x0000dc,%di
		jge    _038f30_jump
		mov    %edi,%eax
		inc    %eax
		mov    %ax,_0cbb5a_data(%esi)
		jmp    _038f38_jump

	_038f30_jump:
		xor    %ah,%ah
		mov    %ah,_0cefad_data

	_038f38_jump:
		testb  $0x000004,0x000081(%ecx)
		je     _038f76_jump
		mov    0x000028(%ecx),%edi
		mov    0x000036(%ecx),%dx
		add    $0x000004,%edi
		add    $0x000004,%edx
		mov    %edi,0x000028(%ecx)
		mov    %dx,0x000036(%ecx)
		cmp    $0x000136,%dx
		jle    _038f76_jump
		movl   $0x000000,0x000024(%ecx)
		mov    0x000081(%ecx),%dh
		movb   $0x000000,0x00006b(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)

	_038f76_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038f80_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    0x00006c(%eax),%dl
		test   %dl,%dl
		jne    _039013_jump
		mov    _0cdc11_data,%bl
		cmp    $0x000002,%bl
		jne    _038fbe_jump
		mov    $0x000001,%ch
		xor    %dh,%dh
		xor    %ebx,%ebx
		mov    %dx,_0cdbe4_data
		mov    %bx,_0cdbf6_data
		mov    %ch,_0cefc9_data
		mov    %bx,_0cedb2_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_038fbe_jump:
		cmp    $0x000001,%bl
		je     _038fd5_jump
		test   %bl,%bl
		je     _038fd5_jump
		cmp    $0x000003,%bl
		jne    _03901b_jump
		cmpb   $0x000014,_0cdc10_data
		jne    _03901b_jump

	_038fd5_jump:
		xor    %edx,%edx
		mov    0x000028(%eax),%ax
		mov    _0cdc0c_data,%dl
		sub    $0x000002,%eax
		sub    %edx,%eax
		mov    _0cdbcc_data,%dh
		mov    %ax,_0cedb6_data
		test   $0x000001,%dh
		je     _039000_jump
		orb    $0x000001,_0cedb6_data
		jmp    _039007_jump

	_039000_jump:
		andb   $0x0000fe,_0cedb6_data

	_039007_jump:
		xor    %cl,%cl
		mov    %cl,_0cefc9_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_039013_jump:
		xor    %dh,%dh
		mov    %dh,_0cefc9_data

	_03901b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039020_func:
		push   %ecx
		push   %edi
		mov    _0cc644_data,%edi
		mov    %edi,_096228_data
		cld    
		xor    %eax,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		xor    %eax,%eax
		pop    %edi
		pop    %ecx
		ret    



_039040_func:
		push   %edx
		xor    %edx,%edx
		mov    %edx,_096228_data
		pop    %edx
		ret    



_039098_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    $0x000011,%ebx
		xor    %edx,%edx
		call   _07c0b0_func
		mov    $0x00003c,%ah
		mov    $0x000300,%ebx
		movl   $0x000140,0x000004(%ecx)
		mov    _096228_data,%edi
		movl   $0x0000c8,0x000008(%ecx)
		mov    %ah,_09621c_data
		mov    %edi,(%ecx)
		mov    _0cef9f_data,%cl
		mov    %ah,_0cef9f_data
		mov    $0x00003c,%eax
		mov    %cl,_0961c4_data
		call   _03b034_jump
		mov    _095b10_data,%edi
		xor    %edx,%edx
		cld    
		xor    %eax,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    $_0de7f0_data,%eax
		call   _07c0b0_func
		xor    %eax,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03910c_func:
		mov    _0961c4_data,%al
		mov    %al,_0cef9f_data
		xor    %eax,%eax
		mov    _0cef9f_data,%al
		jmp    _03b034_jump



_039124_func:
		mov    0x000004(%eax),%eax
		ret    



_039128_func:
		mov    0x000008(%eax),%eax
		ret    



_03912c_func:
		imul   0x000004(%eax),%ebx
		mov    (%eax),%eax
		add    %ebx,%edx
		mov    %cl,(%edx,%eax,1)
		ret    



_039138_func:
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %ecx,%esi
		mov    0x00000c(%esp),%ecx
		mov    %edx,%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    (%edi),%edi
		add    %eax,%edi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _03915c_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_03915c_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _039165_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_039165_jump:
		pop    %edi
		pop    %esi
		ret    $0x000004



_03916c_func:
		push   %edi
		mov    %eax,%edi
		mov    %edx,%eax
		mov    0x000008(%esp),%edx
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    (%edi),%edi
		add    %eax,%edi
		xor    %eax,%eax
		mov    %edx,%ebx
		mov    %cl,%al
		cld    
		mov    %ebx,%ecx
		and    $0x000003,%ecx
		je     _039193_jump
		rep stos %al,%es:(%edi)

	_039193_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _0391a8_jump
		mov    %eax,%ebx
		mov    %al,%ah
		mov    %bl,%bh
		shl    $0x000010,%eax
		mov    %bx,%ax
		rep stos %eax,%es:(%edi)

	_0391a8_jump:
		pop    %edi
		ret    $0x000004



_0391ac_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %cx,(%esp)
		mov    %edx,%eax
		mov    0x000014(%esp),%edx
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    (%esi),%esi
		add    %edx,%edx
		add    %eax,%esi
		xor    %eax,%eax
		mov    %edx,%ebp
		mov    0x000001(%esp),%al
		sar    %edx
		mov    %eax,%ebx
		xor    %eax,%eax
		shl    $0x000008,%ebx
		mov    (%esp),%al
		mov    %esi,%edi
		add    %ebx,%eax
		mov    %edx,%ebx
		and    $0x000001,%ebp
		cld    
		mov    %eax,%ecx
		shl    $0x000010,%eax
		mov    %cx,%ax
		mov    %ebx,%ecx
		and    $0x000001,%ecx
		je     _0391fe_jump
		rep stos %ax,%es:(%edi)

	_0391fe_jump:
		mov    %ebx,%ecx
		shr    %ecx
		je     _039206_jump
		rep stos %eax,%es:(%edi)

	_039206_jump:
		test   %ebp,%ebp
		je     _03920f_jump
		mov    (%esp),%al
		mov    %al,(%esi)

	_03920f_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_039218_func:
		push   %esi
		push   %edi
		mov    %edx,%esi
		lea    (%edx,%ecx,1),%edi
		cmp    %edi,%edx
		jge    _039268_jump
		lea    0x000000(,%edx,4),%eax
		lea    0x000000(,%edi,4),%ecx
		sub    %edx,%eax
		sub    %edi,%ecx

	_039235_jump:
		xor    %edx,%edx
		mov    (%ebx),%dl
		sar    $0x000002,%edx
		mov    %dl,_0de7f0_data(%eax)
		xor    %edx,%edx
		mov    0x000001(%ebx),%dl
		sar    $0x000002,%edx
		mov    %dl,_0de7f1_data(%eax)
		xor    %edx,%edx
		mov    0x000002(%ebx),%dl
		add    $0x000003,%eax
		sar    $0x000002,%edx
		add    $0x000003,%ebx
		mov    %dl,_0de7ef_data(%eax)
		cmp    %ecx,%eax
		jl     _039235_jump

	_039268_jump:
		cmp    _096220_data,%esi
		jge    _039276_jump
		mov    %esi,_096220_data

	_039276_jump:
		cmp    _096224_data,%edi
		jle    _039284_jump
		mov    %edi,_096224_data

	_039284_jump:
		pop    %edi
		pop    %esi
		ret    



_039288_func:
		push   %esi
		push   %edi
		mov    %edx,%esi
		lea    (%edx,%ecx,1),%edi
		cmp    %edi,%edx
		jge    _0392c9_jump
		lea    0x000000(,%edx,4),%eax
		lea    0x000000(,%edi,4),%ecx
		sub    %edx,%eax
		sub    %edi,%ecx

	_0392a5_jump:
		mov    (%ebx),%dl
		mov    %dl,_0de7f0_data(%eax)
		mov    0x000001(%ebx),%dl
		mov    %dl,_0de7f1_data(%eax)
		add    $0x000003,%eax
		mov    0x000002(%ebx),%dl
		add    $0x000003,%ebx
		mov    %dl,_0de7ef_data(%eax)
		cmp    %ecx,%eax
		jl     _0392a5_jump

	_0392c9_jump:
		cmp    _096220_data,%esi
		jge    _0392d7_jump
		mov    %esi,_096220_data

	_0392d7_jump:
		cmp    _096224_data,%edi
		jle    _0392e5_jump
		mov    %edi,_096224_data

	_0392e5_jump:
		pop    %edi
		pop    %esi
		ret    



_0392e8_func:
		push   %edx
		mov    $0x000043,%edx
		movl   $0x001200,(%eax)
		mov    $0x000034,%al
		out    %al,(%dx)
		mov    $0x000040,%edx
		xor    %al,%al
		out    %al,(%dx)
		out    %al,(%dx)
		xor    %eax,%eax
		pop    %edx
		ret    



_039304_func:
		push   %edx
		mov    $0x000036,%al
		mov    $0x000043,%edx
		out    %al,(%dx)
		mov    $0x000040,%edx
		xor    %al,%al
		out    %al,(%dx)
		out    %al,(%dx)
		pop    %edx
		ret    



_039318_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00001c,%esp
		mov    %esp,%ebx
		xor    %ah,%ah
		mov    %esp,%edx
		mov    %ah,0x000001(%esp)
		mov    $0x00001a,%eax
		call   _07cfb2_func
		mov    $0x000043,%edx
		xor    %al,%al
		out    %al,(%dx)
		mov    $0x000040,%edx
		xor    %ecx,%ecx
		sub    %eax,%eax
		in     (%dx),%al
		sub    %eax,%eax
		in     (%dx),%al
		mov    0x00000c(%esp),%cl
		xor    %edx,%edx
		mov    %al,%bl
		mov    0x00000d(%esp),%dl
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x000008(%esp),%al
		add    %ecx,%edx
		shl    $0x000018,%eax
		shl    $0x000008,%edx
		neg    %bl
		add    %edx,%eax
		xor    %edx,%edx
		mov    %bl,%dl
		add    %edx,%eax
		add    $0x00001c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039378_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		imul   (%edx),%eax
		mov    $0x0003e8,%ecx
		xor    %edx,%edx
		div    %ecx
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _039318_func
		add    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_039398_func:
		push   %ebx
		mov    %eax,%ebx
		push   $0x000200
		push   %edx
		call   _07cfcf_func
		add    $0x000008,%esp
		mov    %eax,(%ebx)
		test   %eax,%eax
		jge    _0393b6_jump
		mov    $0xfffffffb,%eax
		pop    %ebx
		ret    

	_0393b6_jump:
		xor    %eax,%eax
		pop    %ebx
		ret    



_0393bc_func:
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%eax
		mov    %ebx,%edx
		mov    %ebx,(%esp)
		mov    %esp,%ebx
		mov    %ds,%ecx
		push   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _07d242_func
		test   %eax,%eax
		je     _0393e1_jump
		mov    $0xfffffffa,%eax

	_0393e1_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		ret    



_0393e8_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    %ebx,%esi
		mov    (%edx),%edi
		test   %ebx,%ebx
		je     _03941c_jump

	_0393f6_jump:
		cmp    $0x00fff0,%esi
		jbe    _039405_jump
		mov    $0x00fff0,%ecx
		jmp    _039407_jump

	_039405_jump:
		mov    %esi,%ecx

	_039407_jump:
		mov    %ecx,%ebx
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _0393bc_func
		test   %eax,%eax
		jl     _03941e_jump
		add    %ecx,%edi
		sub    %ecx,%esi
		jne    _0393f6_jump

	_03941c_jump:
		xor    %eax,%eax

	_03941e_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_039424_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cef7a_data,%ah
		cmp    $0x000004,%ah
		jne    _03943e_jump
		xor    %bl,%bl
		mov    %bl,_0961c5_data
		jmp    _03945c_jump

	_03943e_jump:
		cmp    $0x000005,%ah
		jae    _03944c_jump
		mov    $0xfffffff3,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03944c_jump:
		mov    _0cef6c_data,%dh
		test   %dh,%dh
		sete   %al
		mov    %al,_0961c5_data

	_03945c_jump:
		mov    $0x000018,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07c0b0_func
		lea    0x000011(%ecx),%eax
		call   _0392e8_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03949e_jump
		call   _039020_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _039496_jump
		mov    %ecx,%eax
		call   _039098_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _039496_jump
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_039496_jump:
		lea    0x000011(%ecx),%eax
		call   _039304_func

	_03949e_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0394a4_func:
		push   %edx
		mov    %eax,%edx
		call   _03910c_func
		lea    0x000011(%edx),%eax
		call   _039304_func
		call   _039040_func
		cmpb   $0x000000,_0cefa7_data
		je     _0394d1_jump
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _02a00c_func

	_0394d1_jump:
		pop    %edx
		ret    



_0394d4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %ebx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    $0x000100,%ebx
		xor    %ebp,%ebp
		mov    (%eax),%si
		mov    %ebp,_096224_data
		mov    %ebx,_096220_data
		mov    %esi,0x000008(%esp)
		lea    0x000002(%eax),%esi

	_0394fe_jump:
		mov    0x000008(%esp),%edx
		dec    %edx
		mov    %edx,0x000008(%esp)
		test   %dx,%dx
		jl     _039537_jump
		inc    %esi
		xor    %eax,%eax
		movzbl (%esi),%edi
		mov    -0x000001(%esi),%al
		inc    %esi
		add    %eax,%ebp
		test   %edi,%edi
		jne    _039521_jump
		mov    $0x000100,%edi

	_039521_jump:
		mov    (%esp),%eax
		mov    %edi,%ecx
		mov    %esi,%ebx
		mov    %ebp,%edx
		call   *0x000004(%esp)
		lea    (%edi,%edi,2),%eax
		add    %eax,%esi
		add    %edi,%ebp
		jmp    _0394fe_jump

	_039537_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_039540_func:
		push   %ecx
		mov    $_039218_func,%ecx
		call   _0394d4_func
		pop    %ecx
		ret    



_039550_func:
		push   %ecx
		mov    $_039288_func,%ecx
		call   _0394d4_func
		pop    %ecx
		ret    



_039560_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %edx,%edi
		xor    %edx,%edi
		xor    %ecx,%ecx
		mov    0x00000a(%edx),%di
		mov    0x000008(%edx),%cx
		mov    %edi,0x000004(%esp)
		mov    0x00008c(%edx),%edi
		add    %ecx,%edi
		mov    0x000090(%edx),%ebp
		mov    %edi,0x000008(%esp)

	_039594_jump:
		mov    0x000004(%esp),%edx
		dec    %edx
		mov    %edx,0x000004(%esp)
		test   %edx,%edx
		jl     _03961b_jump
		mov    (%esp),%edi
		xor    %ah,%ah
		inc    %esi
		mov    %ah,0x000010(%esp)
		mov    0x00008c(%edi),%edi

	_0395b5_jump:
		mov    0x00000d(%esp),%ecx
		sar    $0x000018,%ecx
		add    %ecx,%edi
		cmp    0x000008(%esp),%edi
		jge    _039615_jump
		mov    (%esi),%cl
		inc    %esi
		mov    %cl,0x000010(%esp)
		test   %cl,%cl
		jl     _0395eb_jump
		mov    0x00000d(%esp),%ecx
		mov    0x00000c(%esp),%eax
		sar    $0x000018,%ecx
		mov    %ebp,%ebx
		push   %ecx
		xor    %ecx,%ecx
		mov    %edi,%edx
		mov    (%esi),%cl
		inc    %esi
		call   _03916c_func
		jmp    _0395b5_jump

	_0395eb_jump:
		mov    %cl,%dh
		neg    %dh
		mov    %dh,0x000010(%esp)
		mov    0x00000d(%esp),%ecx
		mov    0x00000c(%esp),%eax
		sar    $0x000018,%ecx
		mov    %ebp,%ebx
		push   %ecx
		mov    %edi,%edx
		mov    %esi,%ecx
		call   _039138_func
		mov    0x00000d(%esp),%ecx
		sar    $0x000018,%ecx
		add    %ecx,%esi
		jmp    _0395b5_jump

	_039615_jump:
		inc    %ebp
		jmp    _039594_jump

	_03961b_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_039624_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %ebx,0x000004(%esp)
		lea    0x000004(%eax),%esi
		mov    0x00008c(%edx),%ecx
		movswl (%eax),%ebp
		add    $0x000002,%eax
		mov    %ecx,(%esp)
		mov    0x000090(%edx),%edx
		mov    (%eax),%ax
		add    %edx,%ebp
		mov    %eax,0x00000c(%esp)

	_039650_jump:
		mov    0x00000c(%esp),%edx
		dec    %edx
		mov    %edx,0x00000c(%esp)
		test   %dx,%dx
		jl     _039707_jump
		mov    (%esp),%edi
		mov    (%esi),%al
		inc    %esi
		mov    %al,0x000010(%esp)
		test   %al,%al
		jbe    _039701_jump

	_039674_jump:
		mov    0x000001(%esi),%al
		inc    %esi
		xor    %ecx,%ecx
		mov    %al,0x000014(%esp)
		mov    -0x000001(%esi),%cl
		inc    %esi
		add    %ecx,%edi
		test   %al,%al
		jge    _0396c2_jump
		mov    %al,%bh
		neg    %bh
		mov    %bh,0x000014(%esp)
		mov    0x000011(%esp),%eax
		mov    %edi,%edx
		sar    $0x000018,%eax
		mov    %ebp,%ebx
		mov    %eax,0x000008(%esp)
		mov    %eax,%ecx
		push   %eax
		xor    %eax,%ecx
		mov    0x000008(%esp),%eax
		mov    (%esi),%cl
		inc    %esi
		call   _03916c_func
		mov    0x000010(%esp),%cl
		mov    0x000008(%esp),%eax
		dec    %cl
		add    %eax,%edi
		mov    %cl,0x000010(%esp)
		jmp    _0396f6_jump

	_0396c2_jump:
		mov    0x000011(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%ebx
		sar    $0x000018,%eax
		mov    %edi,%edx
		push   %eax
		mov    %eax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		call   _039138_func
		mov    0x000008(%esp),%ebx
		mov    0x000011(%esp),%ecx
		add    %ebx,%edi
		mov    0x000010(%esp),%bl
		sar    $0x000018,%ecx
		dec    %bl
		add    %ecx,%esi
		mov    %bl,0x000010(%esp)

	_0396f6_jump:
		cmpb   $0x000000,0x000010(%esp)
		ja     _039674_jump

	_039701_jump:
		inc    %ebp
		jmp    _039650_jump

	_039707_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_039710_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %ebx,0x00000c(%esp)
		mov    0x00008c(%edx),%ecx
		mov    %ecx,0x000008(%esp)
		mov    0x000090(%edx),%ecx
		mov    0x000008(%edx),%dx
		mov    0x000008(%esp),%ebx
		and    $0x00ffff,%edx
		add    %ebx,%edx
		dec    %edx
		mov    %ecx,0x000004(%esp)
		mov    %edx,(%esp)
		mov    (%eax),%dx
		lea    0x000002(%eax),%esi
		mov    %edx,0x000014(%esp)
		jmp    _039760_jump

	_03974f_jump:
		mov    0x00000e(%esp),%edx
		mov    0x000004(%esp),%edi
		sar    $0x000010,%edx
		sub    %edx,%edi
		mov    %edi,0x000004(%esp)

	_039760_jump:
		mov    (%esi),%ax
		add    $0x000002,%esi
		mov    %ax,0x000010(%esp)
		test   %ax,%ax
		jge    _0397b4_jump
		testb  $0x000040,0x000011(%esp)
		jne    _03974f_jump
		mov    (%esp),%ebx
		mov    0x00000c(%esp),%eax
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    0x000004(%esp),%cl
		mov    0x000010(%esp),%dl
		call   _03912c_func
		mov    (%esi),%ax
		add    $0x000002,%esi
		mov    %ax,0x000010(%esp)
		test   %ax,%ax
		jne    _0397b4_jump
		incl   0x000004(%esp)
		mov    0x000014(%esp),%ecx
		dec    %ecx
		mov    %ecx,0x000014(%esp)
		test   %cx,%cx
		jmp    _039854_jump

	_0397b4_jump:
		mov    0x000008(%esp),%ebp

	_0397b8_jump:
		inc    %esi
		xor    %edx,%edx
		movsbl (%esi),%edi
		mov    -0x000001(%esi),%dl
		inc    %esi
		add    %edi,%edi
		add    %edx,%ebp
		test   %edi,%edi
		jl     _039810_jump
		mov    0x000004(%esp),%ebx
		mov    0x00000c(%esp),%eax
		push   %edi
		mov    %esi,%ecx
		mov    %ebp,%edx
		add    %edi,%ebp
		add    %edi,%esi
		mov    0x000014(%esp),%edi
		call   _039138_func
		dec    %di
		mov    %di,0x000010(%esp)
		jne    _0397b8_jump
		mov    0x000004(%esp),%eax
		mov    0x000014(%esp),%edx
		inc    %eax
		dec    %edx
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000014(%esp)
		test   %dx,%dx
		jg     _039760_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_039810_jump:
		neg    %edi
		mov    0x000004(%esp),%ebx
		mov    %edi,%edx
		mov    0x00000c(%esp),%eax
		sar    %edx
		mov    (%esi),%cx
		push   %edx
		mov    %ebp,%edx
		add    $0x000002,%esi
		call   _0391ac_func
		mov    0x000010(%esp),%eax
		add    %edi,%ebp
		dec    %ax
		mov    %ax,0x000010(%esp)
		jne    _0397b8_jump
		mov    0x000004(%esp),%ebp
		mov    0x000014(%esp),%ebx
		inc    %ebp
		dec    %ebx
		mov    %ebp,0x000004(%esp)
		mov    %ebx,0x000014(%esp)
		test   %bx,%bx

	_039854_jump:
		jg     _039760_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_039864_func:
		push   %ecx
		push   %edi
		mov    (%ebx),%edi
		cld    
		xor    %eax,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		pop    %edi
		pop    %ecx
		ret    



_039878_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    (%ebx),%ebx
		mov    0x000094(%edx),%edi
		xor    %esi,%esi
		xor    %ecx,%ecx
		mov    0x00000a(%edx),%si
		mov    0x000008(%edx),%cx
		add    %ebx,%edi
		mov    %esi,%ebx
		mov    %ecx,%edx
		mov    %eax,%esi
		cld    
		pusha  
		mov    $0x000140,%ebp
		sub    %edx,%ebp
		mov    %edx,%eax
		and    $0x000003,%eax
		shr    $0x000002,%edx

	_0398a8_jump:
		mov    %edx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebp,%edi
		dec    %ebx
		jne    _0398a8_jump
		popa   
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0398bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000080(%eax),%eax
		mov    $0x000099,%ebx
		call   _07d273_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _07c0b0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0398e0_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    $0x000099,%ebx
		xor    %edx,%edx
		call   _07c0b0_func
		lea    0x000080(%ecx),%eax
		mov    %esi,%edx
		call   _039398_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _039a18_jump
		mov    $0x000080,%ebx
		mov    %ecx,%edx
		mov    0x000080(%ecx),%eax
		call   _0393bc_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _039a11_jump
		movl   $0x000000,0x000084(%ecx)
		mov    _0961c5_data,%ah
		mov    %esi,0x000088(%ecx)
		test   %ah,%ah
		setne  %al
		mov    0x000008(%ecx),%dx
		mov    %al,_0961c6_data
		cmp    $0x000140,%dx
		ja     _039a0c_jump
		cmpw   $0x0000c8,0x00000a(%ecx)
		ja     _039a0c_jump
		mov    0x000004(%ecx),%si
		cmp    $0x00af12,%si
		jne    _03999b_jump
		mov    (%ecx),%ebx
		cmp    $0x00000c,%ebx
		jne    _039985_jump
		movl   $0x00001e,0x000010(%ecx)
		mov    $0x000001,%dh
		mov    %ebx,0x000050(%ecx)
		mov    %dh,_09621d_data

	_039985_jump:
		mov    0x000050(%ecx),%edx
		mov    0x000080(%ecx),%eax
		xor    %ebx,%ebx
		call   _07d278_func
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03999b_jump:
		cmp    $0x00af11,%si
		jne    _0399fa_jump
		mov    (%ecx),%edx
		cmp    $0x00000c,%edx
		jne    _0399cc_jump
		mov    0x000080(%ecx),%eax
		mov    %edx,0x000050(%ecx)
		xor    %ebx,%ebx
		mov    0x000050(%ecx),%edx
		movl   $0x000005,0x000010(%ecx)
		call   _07d278_func
		movb   $0x000001,_09621d_data
		jmp    _0399d3_jump

	_0399cc_jump:
		movl   $0x000080,0x000050(%ecx)

	_0399d3_jump:
		mov    0x000010(%ecx),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000046,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,0x000010(%ecx)
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0399fa_jump:
		mov    $0xfffffff5,%edx
		mov    %ecx,%eax
		call   _0398bc_func
		mov    %edx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_039a0c_jump:
		mov    $0xfffffffd,%edx

	_039a11_jump:
		mov    %ecx,%eax
		call   _0398bc_func

	_039a18_jump:
		mov    %edx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_039a20_switch:
		.long   _039a9b_case
		.long   _039b21_case
		.long   _039b21_case
		.long   _039ad2_case
		.long   _039b21_case
		.long   _039b21_case
		.long   _039b21_case
		.long   _039a9b_case
		.long   _039ad2_case
		.long   _039af9_case
		.long   _039b21_case
		.long   _039b07_case
		.long   _039b15_case




_039a54_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		mov    %edx,(%esp)
		mov    %ebx,%esi
		mov    %ecx,%ebp
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ah,_09621e_data
		mov    %edx,0x000004(%esp)
		jmp    _039b25_jump

	_039a76_jump:
		mov    %esi,%eax
		mov    0x000004(%eax),%cx
		mov    (%esi),%edx
		sub    $0x000004,%ecx
		add    %edx,%esi
		cmp    $0x00000c,%cx
		ja     _039b21_case
		and    $0x00ffff,%ecx
		jmp    *%cs:_039a20_switch(,%ecx,4)

	_039a9b_case:
		cmpb   $0x000000,_0961c6_data
		je     _039aab_jump
		movb   $0x000001,_09621e_data

	_039aab_jump:
		mov    0x000004(%eax),%bx
		lea    0x000006(%eax),%ecx
		cmp    $0x000004,%bx
		jne    _039ac5_jump
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _039540_func
		jmp    _039b21_case

	_039ac5_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _039550_func
		jmp    _039b21_case

	_039ad2_case:
		mov    0x000004(%eax),%dx
		lea    0x000006(%eax),%ecx
		cmp    $0x000007,%dx
		jne    _039aec_jump
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _039710_func
		jmp    _039b21_case

	_039aec_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _039624_func
		jmp    _039b21_case

	_039af9_case:
		add    $0x000006,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _039864_func
		jmp    _039b21_case

	_039b07_case:
		add    $0x000006,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _039560_func
		jmp    _039b21_case

	_039b15_case:
		add    $0x000006,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _039878_func

	_039b21_case:
		incl   0x000004(%esp)

	_039b25_jump:
		mov    (%esp),%eax
		mov    0x000004(%eax),%eax
		mov    0x000004(%esp),%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jg     _039a76_jump
		cmpb   $0x000000,0x000098(%edi)
		jbe    _039c9c_jump
		cmpb   $0x000000,_0cefa7_data
		je     _039c9c_jump
		cmpb   $0x000002,_0961c7_data
		je     _039c9c_jump
		mov    _0961c5_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		je     _039c9c_jump
		call   _028e30_func
		mov    _0961c9_data,%cl
		test   %cl,%cl
		je     _039c81_jump
		cmpb   $0x000000,_0961c7_data
		jne    _039c53_jump
		mov    _0961c5_data,%edx
		sar    $0x000018,%edx
		shl    $0x000004,%edx
		mov    0x000084(%edi),%ebx
		cmp    _0961d4_data(%edx),%ebx
		jl     _039c21_jump
		cmp    _0961d8_data(%edx),%ebx
		jge    _039c21_jump
		lea    0x000014(%esp),%edx
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		movzbl %al,%esi
		push   %edx
		mov    %esi,%eax
		lea    0x00000c(%esp),%edx
		call   _029a98_func
		cmp    $0x000100,%ax
		jne    _039c41_jump
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		shl    $0x000010,%edx
		shl    $0x000008,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000014(%esp),%dl
		add    %eax,%edx
		mov    _0961c5_data,%eax
		sar    $0x000018,%eax
		shl    $0x000004,%eax
		cmp    _0961cc_data(%eax),%edx
		jl     _039c41_jump
		mov    %esi,%eax
		mov    $0x000001,%bl
		call   _029ff8_func
		mov    %bl,_0961c7_data
		add    %bl,_0961c8_data
		jmp    _039c41_jump

	_039c21_jump:
		mov    _0961c5_data,%edx
		sar    $0x000018,%edx
		shl    $0x000004,%edx
		mov    0x000084(%edi),%eax
		cmp    _0961d8_data(%edx),%eax
		jne    _039c41_jump
		incb   _0961c8_data

	_039c41_jump:
		cmpb   $0x000005,_0961c8_data
		jne    _039ca3_jump
		movb   $0x0000ff,_0961c8_data
		jmp    _039ca3_jump

	_039c53_jump:
		mov    _0961c5_data,%ebx
		sar    $0x000018,%ebx
		shl    $0x000004,%ebx
		mov    0x000084(%edi),%edx
		cmp    _0961d0_data(%ebx),%edx
		jl     _039ca3_jump
		and    $0x0000ff,%eax
		xor    %dl,%dl
		call   _02a020_func
		mov    %dl,_0961c7_data
		jmp    _039ca3_jump

	_039c81_jump:
		cmpb   $0x000000,_0961c7_data
		je     _039ca3_jump
		and    $0x0000ff,%eax
		call   _02a020_func
		mov    %cl,_0961c7_data
		jmp    _039ca3_jump

	_039c9c_jump:
		movb   $0x000001,_0961c7_data

	_039ca3_jump:
		cmpb   $0x000000,_0961c6_data
		je     _039cf7_jump
		cmpl   $0x000001,0x000084(%edi)
		je     _039cc6_jump

	_039cb5_jump:
		mov    0x000028(%esp),%eax
		call   _039318_func
		cmp    _096230_data,%eax
		jbe    _039cb5_jump

	_039cc6_jump:
		call   _016dee_func
		call   _016dde_func
		cmpb   $0x000000,_0961c5_data
		je     _039ce4_jump
		mov    0x000028(%esp),%edx
		mov    $0x00003c,%eax
		jmp    _039ced_jump

	_039ce4_jump:
		mov    0x000028(%esp),%edx
		mov    $0x00007d,%eax

	_039ced_jump:
		call   _039378_func
		mov    %eax,_096230_data

	_039cf7_jump:
		cmpb   $0x000000,_0961c6_data
		je     _039d71_jump
		cmpb   $0x000001,_09621e_data
		jne    _039d2a_jump
		mov    $_0de7f0_data,%esi
		pusha  
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		popa   

	_039d2a_jump:
		mov    _095b10_data,%eax
		mov    0x000094(%edi),%esi
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00000a(%edi),%bx
		mov    0x000008(%edi),%dx
		add    %esi,%eax
		mov    0x000000(%ebp),%esi
		mov    0x000094(%edi),%ebp
		mov    %eax,%edi
		add    %ebp,%esi
		cld    
		pusha  
		mov    $0x000140,%ebp
		sub    %edx,%ebp
		mov    %edx,%eax
		and    $0x000003,%eax
		shr    $0x000002,%edx

	_039d61_jump:
		mov    %edx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebp,%esi
		add    %ebp,%edi
		dec    %ebx
		jne    _039d61_jump
		popa   

	_039d71_jump:
		cmpb   $0x000000,_0961c5_data
		je     _039d83_jump
		movb   $0x000001,_0961c6_data
		jmp    _039d8a_jump

	_039d83_jump:
		xorb   $0x000001,_0961c6_data

	_039d8a_jump:
		xor    %eax,%eax
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_039d98_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    %ebx,%edi
		mov    0x000084(%eax),%edx
		inc    %edx
		mov    $0x000010,%ebx
		mov    %edx,0x000084(%eax)
		mov    %esp,%edx
		mov    0x000080(%eax),%eax
		call   _0393bc_func
		test   %eax,%eax
		jl     _039e21_jump
		cmpw   $0x00f1fa,0x000004(%esp)
		jne    _039e1c_jump
		mov    (%esp),%eax
		sub    $0x000010,%eax
		test   %eax,%eax
		jle    _039e0e_jump
		mov    _0cc638_data,%edx
		mov    %edx,0x000010(%esp)
		mov    %eax,%ebx
		mov    0x000080(%esi),%ebp
		lea    0x000010(%esp),%edx
		mov    %ebp,%eax
		call   _0393e8_func
		test   %eax,%eax
		jl     _039e21_jump
		mov    0x000010(%esp),%ebx
		push   %edi
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _039a54_func
		jmp    _039e21_jump

	_039e0e_jump:
		mov    %esp,%edx
		push   %edi
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _039a54_func
		jmp    _039e21_jump

	_039e1c_jump:
		mov    $0xfffffffc,%eax

	_039e21_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_039e2c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    0x000008(%eax),%dx
		mov    %ebx,%eax
		call   _039124_func
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %edx,%edx
		mov    %eax,0x00008c(%ecx)
		mov    %ebx,%eax
		mov    0x00000a(%ecx),%dx
		call   _039128_func
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,0x000090(%ecx)
		mov    %eax,%ebx
		mov    0x00008c(%ecx),%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    %eax,0x000094(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_039e8c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		xor    %ah,%ah
		mov    0x000098(%esi),%dl
		mov    %ah,_0961c7_data
		test   %dl,%dl
		jbe    _039ef4_jump
		cmpb   $0x000000,_0cefa7_data
		je     _039ef4_jump
		call   _028e30_func
		and    $0x0000ff,%eax
		xor    %edx,%edx
		call   _02a00c_func
		mov    0x000098(%esi),%dl
		call   _028e30_func
		and    $0x0000ff,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		call   _029f00_func
		call   _028e30_func
		and    $0x0000ff,%eax
		mov    $0x000001,%bl
		call   _029ff8_func
		mov    %bl,_0961c7_data

	_039ef4_jump:
		lea    0x000011(%edi),%ebp
		xor    %bh,%bh
		xor    %ecx,%ecx
		mov    %bh,_0961c8_data
		jmp    _039f55_jump

	_039f03_jump:
		call   _040c04_func
		call   _040974_func
		test   %ax,%ax
		jne    _039f3e_jump
		call   _040a00_func
		test   %ax,%ax
		jne    _039f3e_jump
		call   _040a8c_func
		test   %ax,%ax
		jne    _039f3e_jump
		call   _040b18_func
		test   %ax,%ax
		jne    _039f3e_jump
		mov    $0x000039,%eax
		call   _040780_func
		test   %al,%al
		je     _039f42_jump

	_039f3e_jump:
		xor    %eax,%eax
		jmp    _039f62_jump

	_039f42_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _039d98_func
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _039f5f_jump
		inc    %ecx

	_039f55_jump:
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		cmp    %eax,%ecx
		jl     _039f03_jump

	_039f5f_jump:
		mov    (%esp),%eax

	_039f62_jump:
		add    $0x000004,%esp

	_039f65_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_039f6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		mov    %eax,%ecx
		mov    0x000050(%eax),%edx
		xor    %ebx,%ebx
		mov    0x000080(%eax),%eax
		call   _07d278_func
		mov    $0x000010,%ebx
		mov    %esp,%edx
		mov    0x000080(%ecx),%eax
		call   _0393bc_func
		test   %eax,%eax
		jl     _039fa7_jump
		mov    (%esp),%edx
		mov    0x000050(%ecx),%eax
		add    %edx,%eax
		mov    %eax,0x000054(%ecx)
		xor    %eax,%eax

	_039fa7_jump:
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx

	_039fad_jump:
		ret    



_039fb0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    %edx,%edi
		call   _039f6c_func
		mov    0x000050(%esi),%edx
		mov    0x000080(%esi),%eax
		xor    %ebx,%ebx
		lea    0x000011(%edi),%ebp
		call   _07d278_func
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _039d98_func
		test   %eax,%eax
		jl     _039f65_jump

	_039fe0_jump:
		mov    0x000054(%esi),%edx
		mov    0x000080(%esi),%eax
		xor    %ebx,%ebx
		movl   $0x000001,0x000084(%esi)
		call   _07d278_func
		xor    %ah,%ah
		mov    0x000098(%esi),%dl
		mov    %ah,_0961c7_data
		test   %dl,%dl
		jbe    _03a056_jump
		cmpb   $0x000000,_0cefa7_data
		je     _03a056_jump
		call   _028e30_func
		and    $0x0000ff,%eax
		xor    %edx,%edx
		call   _02a00c_func
		mov    0x000098(%esi),%dl
		call   _028e30_func
		and    $0x0000ff,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		call   _029f00_func
		call   _028e30_func
		and    $0x0000ff,%eax
		mov    $0x000001,%bl
		call   _029ff8_func
		mov    %bl,_0961c7_data

	_03a056_jump:
		xor    %bh,%bh
		xor    %ecx,%ecx
		mov    %bh,_0961c8_data
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		cmp    %eax,%ecx
		jl     _03a06f_jump
		jmp    _039fe0_jump

	_03a06f_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _039d98_func
		test   %eax,%eax
		jl     _039f65_jump
		call   _040c04_func
		call   _040974_func
		test   %ax,%ax
		jne    _03a0bd_jump
		call   _040a00_func
		test   %ax,%ax
		jne    _03a0bd_jump
		call   _040a8c_func
		test   %ax,%ax
		jne    _03a0bd_jump
		call   _040b18_func
		test   %ax,%ax
		jne    _03a0bd_jump
		mov    $0x000039,%eax
		call   _040780_func
		test   %al,%al
		je     _03a0c5_jump

	_03a0bd_jump:
		xor    %eax,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03a0c5_jump:
		inc    %ecx
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		cmp    %eax,%ecx
		jl     _03a06f_jump
		jmp    _039fe0_jump



_03a0d8_func:
		cmpb   $0x000000,_0cef72_data
		je     _039fad_jump
		jmp    _03d4ec_jump



_03a0ec_func:
		cmpb   $0x000000,_0cef72_data
		je     _039fad_jump
		jmp    _03d530_jump



_03a100_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ebx,%ebx
		xor    %ecx,%ecx

	_03a108_jump:
		mov    $0x0000fe,%ah
		mov    %ecx,%edx

	_03a10c_jump:
		mov    _0de7f0_data(%edx),%al
		add    %ah,%al
		test   %al,%al
		jge    _03a11a_jump
		mov    %cl,%al

	_03a11a_jump:
		mov    %al,_0de7f0_data(%edx)
		mov    _0de7f1_data(%edx),%al
		add    %ah,%al
		test   %al,%al
		jge    _03a12e_jump
		mov    %cl,%al

	_03a12e_jump:
		mov    %al,_0de7f1_data(%edx)
		mov    _0de7f2_data(%edx),%al
		add    %ah,%al
		test   %al,%al
		jge    _03a142_jump
		mov    %cl,%al

	_03a142_jump:
		add    $0x000003,%edx
		mov    %al,_0de7ef_data(%edx)
		cmp    $0x000300,%edx
		jne    _03a10c_jump
		call   _016dee_func
		call   _016dde_func
		mov    $_0de7f0_data,%esi
		add    $0x000002,%ebx
		pusha  
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		popa   
		cmp    $0x000040,%ebx
		jl     _03a108_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a18c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000134,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %cl,%bh
		mov    $_0c0820_data,%eax
		call   _07d2bb_func
		test   %eax,%eax
		sete   %al
		mov    %al,_0961c9_data
		cmpb   $0x000000,_0cef7e_data
		je     _03a220_jump
		mov    $_0c082c_data,%edx
		mov    %esi,%eax
		call   _07b8b0_func
		test   %eax,%eax
		jne    _03a1d2_jump
		mov    $0xfffffffb,%eax
		jmp    _03a30b_jump

	_03a1d2_jump:
		lea    0x00009c(%esp),%edi
		push   %edi

	_03a1da_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03a1f2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03a1da_jump

	_03a1f2_jump:
		pop    %edi
		lea    0x00009c(%esp),%edi
		mov    %ebp,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03a205_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03a21d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03a205_jump

	_03a21d_jump:
		pop    %edi
		jmp    _03a243_jump

	_03a220_jump:
		lea    0x00009c(%esp),%edi
		mov    %ebp,%esi
		push   %edi

	_03a22a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03a242_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03a22a_jump

	_03a242_jump:
		pop    %edi

	_03a243_jump:
		mov    $_0c0830_data,%edx
		lea    0x00009c(%esp),%eax
		call   _07d4d0_func
		test   %eax,%eax
		jne    _03a267_jump
		mov    $0xfffffffb,%eax
		add    $0x000134,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03a267_jump:
		call   _07d584_func
		cmpb   $0x000000,_0cefa7_data
		je     _03a286_jump
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _02a00c_func
		jmp    _03a288_jump

	_03a286_jump:
		xor    %bl,%bl

	_03a288_jump:
		call   _03a0d8_func
		lea    0x00011c(%esp),%eax
		call   _039424_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03a2f8_jump
		lea    0x00009c(%esp),%edx
		mov    %esp,%eax
		call   _0398e0_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03a2f8_jump
		lea    0x00011c(%esp),%edx
		mov    %esp,%eax
		mov    %bl,0x000098(%esp)
		call   _039e2c_func
		test   %bh,%bh
		je     _03a2dc_jump
		lea    0x00011c(%esp),%edx
		mov    %esp,%eax
		call   _039fb0_func
		jmp    _03a2ea_jump

	_03a2dc_jump:
		lea    0x00011c(%esp),%edx
		mov    %esp,%eax
		call   _039e8c_func

	_03a2ea_jump:
		mov    %eax,%edx
		call   _03a100_func
		mov    %esp,%eax
		call   _0398bc_func

	_03a2f8_jump:
		lea    0x00011c(%esp),%eax
		call   _0394a4_func
		call   _03a0ec_func
		mov    %edx,%eax

	_03a30b_jump:
		add    $0x000134,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03a318_func:
		push   %ecx
		and    $0x0000ff,%ebx
		xor    %ecx,%ecx
		call   _03a18c_func
		pop    %ecx
		ret    



_03a340_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000001,_095b14_data
		jne    _03a391_jump
		mov    _0cccb8_data,%edx
		cmp    $0x0a0200,%edx
		jne    _03a36f_jump
		mov    $0x0a6200,%esi
		mov    %edx,_0cccb4_data
		mov    %esi,_0cccb8_data
		jmp    _03a385_jump

	_03a36f_jump:
		mov    $0x0a0200,%ebx
		mov    $0x0a6200,%ecx
		mov    %ebx,_0cccb8_data
		mov    %ecx,_0cccb4_data

	_03a385_jump:
		mov    _0cccb8_data,%eax
		call   _014543_func
		jmp    _03a3e8_jump

	_03a391_jump:
		mov    _0cc644_data,%eax
		mov    %eax,_0cccb4_data
		mov    _095b10_data,%eax
		mov    _0cef79_data,%dl
		mov    %eax,_0cccb8_data
		cmp    $0x000001,%dl
		jne    _03a3d7_jump
		cmpb   $0x000000,_095b9a_data
		je     _03a3d7_jump
		mov    $0x000140,%ecx
		mov    _0cc644_data,%esi
		mov    %eax,%edi
		mov    $0x0000c8,%eax
		call   *_0cc620_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03a3d7_jump:
		mov    _0cccb8_data,%edi
		mov    _0cc644_data,%esi
		call   _014a16_func

	_03a3e8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a3f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cefa2_data
		je     _03a402_jump
		call   _016dee_func

	_03a402_jump:
		mov    _0cccb8_data,%edx
		cmp    $0x0a0200,%edx
		jne    _03a423_jump
		mov    $0x0a6200,%esi
		mov    %edx,_0cccb4_data
		mov    %esi,_0cccb8_data
		jmp    _03a439_jump

	_03a423_jump:
		mov    $0x0a0200,%ebx
		mov    $0x0a6200,%ecx
		mov    %ebx,_0cccb8_data
		mov    %ecx,_0cccb4_data

	_03a439_jump:
		mov    _0cccb8_data,%eax
		call   _014543_func
		cmpb   $0x000000,_0cefa2_data
		je     _03a451_jump
		call   _016dde_func

	_03a451_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a6b4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0ccd70_data,%ebx
		movswl %dx,%edx
		mov    %ebx,0x000004(%esp)
		mov    %ebx,_0ccd6c_data
		mov    _0cdb96_data,%ebx
		sar    $0x000004,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		movswl %ax,%edx
		sar    $0x000004,%edx
		add    %edx,%ebx
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    _0cdba0_data,%ebx
		add    %edx,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,(%esp)
		mov    %edx,0x000008(%esp)
		mov    %edx,0x00000c(%esp)

	_03a706_jump:
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		xor    %ecx,%ecx
		mov    0x00000c(%esp),%ebp
		mov    %ecx,0x000010(%esp)
		add    %ebp,%edx
		mov    0x000008(%esp),%ebp

	_03a71d_jump:
		xor    %ecx,%ecx

	_03a71f_jump:
		mov    (%ebx),%di
		test   %di,%di
		jl     _03a749_jump
		cmp    $0x0004b0,%di
		jge    _03a749_jump
		cmpb   $0x000000,0x000004(%ebx)
		jne    _03a749_jump
		movswl %di,%esi
		mov    _0c27d8_data(,%esi,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _0146c4_func
		jmp    _03a750_jump

	_03a749_jump:
		mov    %edx,%edi
		call   _01467c_func

	_03a750_jump:
		add    $0x000006,%ebx
		add    $0x000010,%ecx
		add    $0x000004,%edx
		cmp    $0x000140,%cx
		jl     _03a71f_jump
		mov    _0cdb96_data,%esi
		sar    $0x000010,%esi
		sub    $0x000014,%esi
		imul   $0x000006,%esi,%esi
		add    %esi,%ebx
		mov    0x000010(%esp),%esi
		add    $0x000010,%esi
		add    $0x0004b0,%edx
		mov    %esi,0x000010(%esp)
		cmp    $0x0000e0,%si
		jl     _03a71d_jump
		mov    0x000008(%esp),%ecx
		mov    0x00000c(%esp),%esi
		add    $0x000040,%ecx
		add    $0x004600,%esi
		mov    %ecx,0x000008(%esp)
		mov    %esi,0x00000c(%esp)
		cmp    $0x000100,%ecx
		jne    _03a706_jump
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03a7b8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,(%esp)
		mov    %ecx,%esi
		movswl %bx,%eax
		mov    _0cdb96_data,%ecx
		sar    $0x000004,%eax
		sar    $0x000010,%ecx
		imul   %ecx,%eax
		movswl %dx,%edx
		sar    $0x000004,%edx
		lea    (%edx,%eax,1),%ebx
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    _0cdba0_data,%eax
		add    %edx,%edx
		add    %edx,%eax
		mov    _0ccd70_data,%edx
		mov    %eax,0x000008(%esp)
		mov    (%esp),%eax
		mov    $0x000050,%ebx
		sub    %edx,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %edx,0x000010(%esp)
		movswl %si,%edx
		mov    $0x00000d,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		imul   %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000008(%esp),%ebx
		sub    %eax,%edx
		xor    %ecx,%ecx
		add    %edx,%edx
		mov    %ecx,0x00000c(%esp)
		add    %edx,%ebx
		mov    %ecx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)

	_03a83d_jump:
		mov    0x000008(%esp),%ecx
		mov    (%esp),%edx
		mov    0x000004(%esp),%ebx
		xor    %esi,%esi
		mov    0x00000c(%esp),%ebp
		mov    %esi,0x000014(%esp)
		add    %ebx,%edx
		mov    0x000010(%esp),%ebx

	_03a858_jump:
		mov    (%ecx),%si
		test   %si,%si
		jl     _03a880_jump
		cmp    $0x0004b0,%si
		jge    _03a880_jump
		cmpb   $0x000000,0x000004(%ecx)
		jne    _03a880_jump
		movswl %si,%esi
		mov    _0c27d8_data(,%esi,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _0146c4_func

	_03a880_jump:
		add    $0x000006,%ecx
		add    $0x000004,%ebx
		add    $0x000004,%edx
		cmp    $0x000050,%ebx
		jl     _03a893_jump
		sub    $0x000050,%edx
		xor    %ebx,%ebx

	_03a893_jump:
		mov    0x000014(%esp),%edi
		add    $0x000010,%edi
		mov    %edi,0x000014(%esp)
		cmp    $0x000140,%di
		jl     _03a858_jump
		mov    0x00000c(%esp),%edi
		mov    0x000004(%esp),%ebp
		add    $0x000040,%edi
		add    $0x004600,%ebp
		mov    %edi,0x00000c(%esp)
		mov    %ebp,0x000004(%esp)
		cmp    $0x000100,%edi
		jne    _03a83d_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03a8d4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,0x000008(%esp)
		movswl %bx,%eax
		mov    _0cdb96_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		imul   %eax,%ebx
		movswl %dx,%eax
		sar    $0x000004,%eax
		add    %ebx,%eax
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0cdba0_data,%eax
		add    %edx,%edx
		add    %edx,%eax
		movswl %cx,%edx
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		lea    0x000000(,%eax,4),%edx
		mov    (%esp),%ebx
		sub    %eax,%edx
		mov    _0ccd70_data,%ecx
		add    %edx,%edx
		mov    0x000008(%esp),%eax
		add    %edx,%ebx
		sub    %ecx,%eax
		mov    %ebx,(%esp)
		xor    %edx,%edx
		mov    $0x000050,%ebx
		div    %ebx
		xor    %esi,%esi
		mov    %esi,0x000004(%esp)
		mov    %esi,0x00000c(%esp)
		mov    %eax,%ecx

	_03a951_jump:
		mov    0x000008(%esp),%edx
		mov    0x00000c(%esp),%esi
		mov    (%esp),%ebx
		add    %esi,%edx
		xor    %esi,%esi
		mov    0x000004(%esp),%ebp
		mov    %esi,0x000010(%esp)

	_03a968_jump:
		mov    (%ebx),%si
		test   %si,%si
		jl     _03a990_jump
		cmp    $0x0004b0,%si
		jge    _03a990_jump
		cmpb   $0x000000,0x000004(%ebx)
		jne    _03a990_jump
		movswl %si,%esi
		mov    _0c27d8_data(,%esi,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _0146c4_func

	_03a990_jump:
		mov    _0cdb96_data,%esi
		sar    $0x000010,%esi
		imul   $0x000006,%esi,%esi
		add    $0x000500,%edx
		add    $0x000010,%ecx
		add    %esi,%ebx
		cmp    $0x0000e0,%ecx
		jl     _03a9b7_jump
		sub    $0x004600,%edx
		xor    %ecx,%ecx

	_03a9b7_jump:
		mov    0x000010(%esp),%edi
		add    $0x000010,%edi
		mov    %edi,0x000010(%esp)
		cmp    $0x0000e0,%di
		jl     _03a968_jump
		mov    0x000004(%esp),%ebp
		mov    0x00000c(%esp),%eax
		add    $0x000040,%ebp
		add    $0x004600,%eax
		mov    %ebp,0x000004(%esp)
		mov    %eax,0x00000c(%esp)
		cmp    $0x000100,%ebp
		jne    _03a951_jump
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03a9f4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %ax,0x00001c(%esp)
		mov    %dx,0x000018(%esp)
		mov    %ecx,%eax
		mov    0x00001c(%esp),%ecx
		and    $0x0000f0,%dl
		and    $0x0000f0,%bl
		and    $0x0000f0,%al
		and    $0x0000f0,%cl
		mov    %edx,0x000008(%esp)
		mov    %ebx,%edi
		mov    %eax,0x00000c(%esp)
		cmp    %bx,%cx
		jne    _03aa31_jump
		mov    %edx,%eax
		cmp    0x00000c(%esp),%ax
		je     _03ac87_jump

	_03aa31_jump:
		mov    _0ccd6c_data,%ebx
		sub    _0ccd70_data,%ebx
		mov    $0x000050,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		mov    $0x000050,%ebp
		mov    %edx,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %ebp
		sub    %edi,%ecx
		mov    %cx,0x000014(%esp)
		mov    0x00000c(%esp),%ecx
		mov    %eax,%ebx
		mov    0x000008(%esp),%eax
		sub    %ecx,%eax
		mov    %ax,0x000010(%esp)
		mov    0x00000e(%esp),%eax
		mov    0x000012(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		add    %eax,%esi
		cmp    %ebp,%esi
		jl     _03aa92_jump
		sub    %ebp,%esi

	_03aa92_jump:
		test   %esi,%esi
		jge    _03aa99_jump
		add    $0x000050,%esi

	_03aa99_jump:
		cmp    $0x0000e0,%ebx
		jl     _03aaa7_jump
		sub    $0x0000e0,%ebx

	_03aaa7_jump:
		test   %ebx,%ebx
		jge    _03aab1_jump
		add    $0x0000e0,%ebx

	_03aab1_jump:
		mov    %ebx,%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    _0ccd70_data,%ecx
		shl    $0x000004,%ebx
		mov    _0ccd6c_data,%eax
		add    %ecx,%ebx
		mov    %eax,%edi
		add    %esi,%ebx
		mov    0x000014(%esp),%edx
		mov    %ebx,_0ccd6c_data
		mov    %ebx,%ebp
		test   %dx,%dx
		jle    _03ab47_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _03ab47_jump
		lea    0x004600(%ecx),%edx
		add    $0x000500,%eax
		cmp    %edx,%eax
		jbe    _03aafb_jump
		mov    $0xffffba00,%eax
		jmp    _03aafd_jump

	_03aafb_jump:
		xor    %eax,%eax

	_03aafd_jump:
		mov    0x000016(%esp),%ebp
		mov    0x00001a(%esp),%edx
		mov    $0x000130,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ebp
		mov    %edx,(%esp)
		lea    0x000500(%edi),%edx
		mov    %ebp,%ebx
		add    %edx,%eax
		mov    (%esp),%edx
		call   _03a8d4_func
		mov    $0x0000b0,%ecx
		mov    (%esp),%edx
		mov    %ebp,%ebx
		test   %esi,%esi
		jne    _03ab38_jump
		sub    $0x00004c,%edi
		jmp    _03ab3b_jump

	_03ab38_jump:
		add    $0x000004,%edi

	_03ab3b_jump:
		mov    %edi,%eax
		call   _03a7b8_func
		jmp    _03ac87_jump

	_03ab47_jump:
		cmpw   $0x000000,0x000014(%esp)
		jle    _03abac_jump
		cmpw   $0x000000,0x000010(%esp)
		jge    _03abac_jump
		mov    _0ccd70_data,%esi
		lea    -0x000500(%edi),%eax
		cmp    %esi,%eax
		jae    _03ab6e_jump
		mov    $0x004600,%eax
		jmp    _03ab70_jump

	_03ab6e_jump:
		xor    %eax,%eax

	_03ab70_jump:
		mov    0x000016(%esp),%edx
		mov    0x00001a(%esp),%esi
		mov    $0x000130,%ecx
		sub    $0x000500,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%esi
		add    %edi,%eax
		mov    %edx,(%esp)
		mov    %edx,%ebx
		mov    %esi,%edx
		call   _03a8d4_func
		mov    (%esp),%ebx
		mov    %esi,%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		call   _03a7b8_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03abac_jump:
		cmpw   $0x000000,0x000014(%esp)
		jge    _03ac05_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _03ac05_jump
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,(%esp)
		mov    0x00001a(%esp),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    (%esp),%ebx
		mov    %eax,0x000004(%esp)
		mov    %eax,%edx
		mov    %ebp,%eax
		call   _03a8d4_func
		mov    $0x0000b0,%ecx
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		cmp    $0x00004c,%esi
		jne    _03abf4_jump
		add    %esi,%edi
		jmp    _03abf7_jump

	_03abf4_jump:
		sub    $0x000004,%edi

	_03abf7_jump:
		mov    %edi,%eax
		call   _03a7b8_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03ac05_jump:
		cmpw   $0x000000,0x000010(%esp)
		jle    _03ac27_jump
		mov    0x000016(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    $0x0000b0,%ecx
		mov    %edi,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03a7b8_func

	_03ac27_jump:
		cmpw   $0x000000,0x000014(%esp)
		jle    _03ac49_jump
		mov    0x000016(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    $0x000130,%ecx
		mov    %edi,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03a8d4_func

	_03ac49_jump:
		cmpw   $0x000000,0x000010(%esp)
		jge    _03ac68_jump
		mov    0x000016(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03a7b8_func

	_03ac68_jump:
		cmpw   $0x000000,0x000014(%esp)
		jge    _03ac87_jump
		mov    0x000016(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03a8d4_func

	_03ac87_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03ac90_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		xor    %edx,%edx
		mov    %edx,(%esp)
		mov    _0ccd34_data,%edx
		shr    $0x000002,%edx
		mov    _0ccd34_data,%ebx
		mov    %edx,_0deaf0_data
		mov    _0ccd40_data,%edx
		add    %ebx,%edx
		mov    _0c1a44_data,%ebp
		mov    %edx,_0deaf4_data
		lea    -0x000001(%ebx),%edx
		mov    _0cef71_data,%ah
		mov    %edx,_0deaf8_data
		test   %ah,%ah
		je     _03acde_jump
		mov    $0x000001,%ebp

	_03acde_jump:
		mov    _0cef6d_data,%dl
		test   %dl,%dl
		je     _03acfa_jump
		mov    $_0c7d98_data,%esi
		mov    _0cccb4_data,%ecx
		call   _013736_func
		jmp    _03ad4d_jump

	_03acfa_jump:
		xor    %dh,%dh
		mov    %dx,0x000004(%esp)

	_03ad01_jump:
		mov    _0ccd34_data,%edx
		mov    0x000002(%esp),%ebx
		shr    $0x000002,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    $_0deaf0_data,%ecx
		mov    (%esp),%edi
		mov    $_0c7d98_data,%esi
		mov    %ebp,%eax
		mov    _0ccd1c_data,%edx
		add    %ebp,%ebp
		call   _0131a9_func
		cmp    $0x000010,%ebp
		jne    _03ad3d_jump
		mov    $0x000001,%ebp
		mov    %ebp,(%esp)

	_03ad3d_jump:
		mov    0x000004(%esp),%ebx
		inc    %ebx
		mov    %bx,0x000004(%esp)
		cmp    $0x000004,%bx
		jl     _03ad01_jump

	_03ad4d_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03ad58_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		mov    _0c1a34_data,%ebx
		mov    %ebx,0x00001c(%esp)
		mov    _0c1a38_data,%ebx
		mov    %ebx,0x000014(%esp)
		mov    _0c1a3c_data,%ebx
		mov    %ebx,0x000004(%esp)
		mov    _0ccd1c_data,%ebx
		shl    $0x000004,%ebx
		movswl %dx,%edx
		mov    %ebx,0x000008(%esp)
		mov    _0cdb96_data,%ebx
		sar    $0x000004,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		cwtl   
		sar    $0x000004,%eax
		mov    _0c1a44_data,%ebp
		add    %eax,%edx
		xor    %ecx,%ecx
		lea    0x000000(,%edx,4),%eax
		mov    %ebp,0x000010(%esp)
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		add    %eax,%eax
		mov    %ecx,0x000020(%esp)
		add    %edx,%eax
		mov    $0x004600,%edx
		mov    %eax,(%esp)
		mov    0x00001c(%esp),%eax
		mov    %edx,_0deaf0_data
		mov    %edx,_0deaf8_data
		mov    %eax,0x00000c(%esp)
		xor    %edx,%edx
		mov    _0ccd70_data,%eax
		mov    %dx,0x000034(%esp)
		mov    %eax,_0deaf4_data

	_03adf3_jump:
		mov    0x000032(%esp),%ebx
		sar    $0x000010,%ebx
		imul   $0x004600,%ebx,%ebx
		mov    _0deaf4_data,%ecx
		add    $0x004600,%ecx
		mov    _0cef6d_data,%ah
		mov    %ecx,_0deaf4_data
		test   %ah,%ah
		je     _03ae38_jump
		mov    $_0deaf0_data,%ecx
		mov    $0x000050,%edx
		mov    0x000020(%esp),%edi
		mov    $_0c8518_data,%esi
		mov    %ebp,%eax
		call   _013df3_func
		jmp    _03ae52_jump

	_03ae38_jump:
		mov    $_0deaf0_data,%ecx
		mov    $0x000050,%edx
		mov    0x000020(%esp),%edi
		mov    $_0c8498_data,%esi
		mov    %ebp,%eax
		call   _013864_func

	_03ae52_jump:
		add    %ebp,%ebp
		cmp    $0x000010,%ebp
		jne    _03ae6c_jump
		mov    $0x000001,%ebp
		mov    0x00001c(%esp),%edi
		add    %ebp,%edi
		mov    %ebp,0x000020(%esp)
		mov    %edi,0x00001c(%esp)

	_03ae6c_jump:
		mov    0x000034(%esp),%ebx
		inc    %ebx
		mov    %bx,0x000034(%esp)
		cmp    $0x000004,%bx
		jl     _03adf3_jump
		mov    0x00000c(%esp),%eax
		mov    %eax,0x000028(%esp)
		mov    (%esp),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000014(%esp),%eax
		mov    %eax,%edx
		mov    $0x000004,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000014(%esp),%eax
		mov    %edx,%esi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0ccd34_data,%ebx
		shr    $0x000002,%ebx
		imul   %ebx,%esi
		mov    _0ccd1c_data,%edi
		mov    0x000004(%esp),%edx
		imul   %edi,%edx
		add    %esi,%eax
		add    _0ccd40_data,%eax
		add    %edx,%eax
		mov    %eax,0x000024(%esp)
		mov    %ebx,%eax
		mov    %ebx,0x00002c(%esp)
		neg    %eax
		mov    _0cdb96_data,%esi
		mov    %eax,0x00002c(%esp)
		mov    0x000008(%esp),%eax
		sar    $0x000010,%esi
		mov    %eax,_0deaf0_data
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		add    %eax,%eax
		mov    %edi,_0deafc_data
		mov    %eax,_0deaf4_data
		lea    0x000000(,%edi,4),%eax
		sub    %edi,%eax
		mov    %eax,_0deb00_data
		mov    _0cdb98_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%esi
		mov    $0x0004b0,%edx
		mov    0x000010(%esp),%ebp
		mov    %edx,_0deaf8_data
		lea    -0x000001(%esi),%edx
		mov    _0ccd34_data,%ebx
		lea    0x000000(,%edx,4),%eax
		mov    %ebx,_0deb0c_data
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		add    %eax,%eax
		xor    %esi,%esi
		add    %eax,%edx
		mov    _0ccd40_data,%eax
		mov    %esi,0x000030(%esp)
		add    %ebx,%eax
		mov    %edx,_0deb04_data
		mov    %eax,_0deb08_data

	_03af6f_jump:
		mov    0x00002c(%esp),%edx
		mov    %ebp,%eax
		mov    0x000024(%esp),%esi
		call   _01283c_func
		mov    _0ccd34_data,%eax
		mov    _0ccd40_data,%ebx
		shr    $0x000002,%eax
		mov    _0ccd34_data,%ecx
		add    %eax,%edx
		add    %ecx,%ebx
		lea    (%esi,%edx,1),%eax
		mov    %edx,0x00002c(%esp)
		cmp    %ebx,%eax
		jbe    _03afb2_jump
		mov    %edx,%esi
		sub    %ecx,%esi
		mov    %esi,0x00002c(%esp)
		mov    0x000024(%esp),%esi
		inc    %esi
		mov    %esi,0x000024(%esp)

	_03afb2_jump:
		mov    0x00002c(%esp),%edi
		mov    _0cef6d_data,%dl
		add    %edi,%esi
		test   %dl,%dl
		je     _03afe5_jump
		mov    $_0deaf0_data,%ebx
		mov    0x000028(%esp),%edi
		xor    %eax,%eax
		mov    0x000018(%esp),%edx
		mov    0x000030(%esp),%ax
		mov    $_0c3a98_data,%ecx
		shl    $0x000008,%eax
		call   _0143e5_func
		jmp    _03b006_jump

	_03afe5_jump:
		mov    $_0deaf0_data,%ebx
		mov    0x000028(%esp),%edi
		xor    %eax,%eax
		mov    0x000018(%esp),%edx
		mov    0x000030(%esp),%ax
		mov    $_0c3a98_data,%ecx
		shl    $0x000008,%eax
		call   _014382_func

	_03b006_jump:
		add    %ebp,%ebp
		cmp    $0x000010,%ebp
		jne    _03b016_jump
		mov    $0x000001,%ebp
		add    %ebp,0x000028(%esp)

	_03b016_jump:
		mov    0x000030(%esp),%edi
		inc    %edi
		mov    %edi,0x000030(%esp)
		cmp    $0x000004,%di
		jb     _03af6f_jump
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03b034_jump:
		push   %ebx
		push   %edx
		mov    %al,%bl
		call   _03b1e0_func
		cmp    $0x000064,%bl
		jne    _03b058_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		or     $0x000008,%al
		mov    $0x0003c2,%edx
		and    $0x0000fb,%al
		jmp    _03b0f5_jump

	_03b058_jump:
		cmp    $0x000050,%bl
		jne    _03b073_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		or     $0x000004,%al
		mov    $0x0003c2,%edx
		and    $0x0000f7,%al
		jmp    _03b0f5_jump

	_03b073_jump:
		cmp    $0x000046,%bl
		jne    _03b089_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003c2,%edx
		and    $0x0000f3,%al
		jmp    _03b0f5_jump

	_03b089_jump:
		cmp    $0x00003c,%bl
		jne    _03b0f6_jump
		mov    $0x000063,%al
		mov    $0x0003c2,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x00007f,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x00000c,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x0000de,%al
		or     $0x000020,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000ff,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000c4,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx

	_03b0f5_jump:
		out    %al,(%dx)

	_03b0f6_jump:
		cmp    $0x000032,%bl
		jne    _03b15b_jump
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x00007f,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x000074,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x0000de,%al
		or     $0x000020,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000ff,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000fc,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)

	_03b15b_jump:
		mov    %bl,_0cef9f_data
		pop    %edx
		pop    %ebx
		ret    



_03b164_func:
		push   %edx
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0deb22_data
		mov    $0x000010,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0deb21_data
		mov    $0x000011,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0deb20_data
		mov    $0x000006,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0deb24_data
		mov    $0x000007,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0deb23_data
		mov    $0x000016,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    %al,_0deb25_data
		pop    %edx
		ret    



_03b1e0_func:
		push   %edx
		mov    $0x0003c2,%edx
		mov    _0deb22_data,%al
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0deb21_data,%al
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0deb20_data,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0deb24_data,%al
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0deb23_data,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0deb25_data,%al
		out    %al,(%dx)
		pop    %edx
		ret    



_03b250_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ebx
		mov    _0ccd6c_data,%ecx
		mov    %ecx,0x000004(%esp)
		mov    _0cdb96_data,%ecx
		movswl %dx,%edx
		sar    $0x000010,%ecx
		sar    $0x000004,%edx
		lea    -0x000014(%ecx),%esi
		imul   %ecx,%edx
		movswl %bx,%ebx
		mov    _0c1a34_data,%eax
		sar    $0x000004,%ebx
		mov    _0cdba0_data,%ebp
		add    %ebx,%edx
		mov    %eax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%ebx
		mov    _0c1a40_data,%eax
		sub    %edx,%ebx
		mov    %esi,0x000008(%esp)
		add    %ebx,%ebx
		mov    _095b56_data,%dl
		add    %ebx,%ebp
		test   %dl,%dl
		je     _03b359_jump
		cmpb   $0x000000,_0cef74_data
		je     _03b359_jump
		mov    _0ccd1c_data,%ecx
		lea    0x000000(,%esi,4),%edi
		mov    _0cef6d_data,%bl
		sub    %esi,%edi
		shl    $0x000004,%ecx
		add    %edi,%edi
		test   %bl,%bl
		je     _03b347_jump
		mov    0x00000c(%esp),%edx
		mov    _0cccb4_data,%ebx
		sub    %edx,%ebx
		add    $0x000004,%ebx
		mov    $0x000050,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    (%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		add    %eax,%ebx
		mov    _0cccb4_data,%esi
		shl    $0x000004,%ebx
		mov    %ebp,%eax
		add    %ebx,%esi
		add    $0x0ab000,%ebx
		add    %edx,%esi
		add    %edx,%ebx
		mov    $_0c7d98_data,%edx
		call   _012a73_func
		jmp    _03b359_jump

	_03b347_jump:
		mov    0x00000c(%esp),%esi
		mov    $_0c7d98_data,%edx
		mov    %eax,%ebx
		mov    %ebp,%eax
		call   _0129d3_func

	_03b359_jump:
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    0x00000c(%esp),%esi
		lea    0x000000(,%ecx,4),%eax
		mov    $_0c8498_data,%edx
		sub    %ecx,%eax
		mov    _0ccd70_data,%edi
		add    %eax,%eax
		mov    %edi,%ecx
		mov    %eax,%edi
		mov    %ebp,%eax
		call   _012850_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03b390_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    $_0c6898_data,%edx
		xor    %eax,%eax

	_03b39b_jump:
		inc    %eax
		movb   $0x000000,(%ebx)
		inc    %ebx
		movw   $0x000000,(%edx)
		add    $0x000002,%edx
		cmp    $0x000300,%ax
		jl     _03b39b_jump
		pop    %edx
		pop    %ebx
		ret    



_03b3b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $_0c6898_data,%ebx
		mov    %eax,%edx
		xor    %esi,%esi

	_03b3c1_jump:
		mov    $0x000006,%cl
		inc    %edx
		xor    %eax,%eax
		add    $0x000002,%ebx
		mov    -0x000001(%edx),%al
		inc    %esi
		cwtl   
		shl    %cl,%eax
		mov    %ax,-0x000002(%ebx)
		cmp    $0x000300,%si
		jl     _03b3c1_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b3e0_func:
		push   %ecx
		push   %esi
		mov    $0x000006,%ecx
		mov    $0x000001,%edx
		mov    $_0c6e98_data,%esi
		sub    %eax,%ecx
		mov    %ax,_0ced40_data
		shl    %cl,%edx
		mov    $_0c6e98_data,%eax
		mov    %dx,_0cee32_data
		mov    $0x000001,%dl
		mov    $0x0000ff,%ecx
		mov    %dl,_0cefdb_data
		call   _03b390_func
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		pop    %esi
		pop    %ecx
		ret    



_03b438_func:
		push   %ecx
		mov    $0x000006,%ecx
		mov    $0x000001,%edx
		sub    %eax,%ecx
		shl    %cl,%edx
		mov    %dx,_0cee32_data
		mov    $0x000002,%dl
		mov    %ax,_0ced40_data
		mov    %dl,_0cefdb_data
		pop    %ecx
		ret    



_03b460_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    _0cee32_data,%cx
		test   %cx,%cx
		je     _03b546_jump
		mov    $_0c6898_data,%eax
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %ebx,%edx
		dec    %edi
		mov    _0cefdb_data,%bl
		mov    %di,_0cee32_data
		cmp    $0x000001,%bl
		jne    _03b4c5_jump
		xor    %ebx,%ebx

	_03b499_jump:
		xor    %ecx,%ecx
		mov    (%edx),%cl
		mov    %ecx,(%esp)
		mov    (%esp),%edi
		mov    _0ced40_data,%cl
		shl    %cl,%edi
		add    $0x000002,%eax
		mov    %edi,%ecx
		mov    -0x000002(%eax),%di
		inc    %edx
		add    %ecx,%edi
		inc    %ebx
		mov    %di,-0x000002(%eax)
		cmp    $0x000300,%bx
		jge    _03b4f5_jump
		jmp    _03b499_jump

	_03b4c5_jump:
		cmp    $0x000002,%bl
		jne    _03b4f5_jump
		xor    %ebx,%ebx

	_03b4cc_jump:
		cmpw   $0x000000,(%eax)
		jle    _03b4e9_jump
		xor    %ecx,%ecx
		mov    (%edx),%cl
		mov    %ecx,(%esp)
		mov    (%esp),%edi
		mov    _0ced40_data,%cl
		shl    %cl,%edi
		mov    %edi,%ecx
		sub    %cx,(%eax)

	_03b4e9_jump:
		add    $0x000002,%eax
		inc    %ebx
		inc    %edx
		cmp    $0x000300,%bx
		jl     _03b4cc_jump

	_03b4f5_jump:
		mov    $_0c6898_data,%eax
		xor    %edx,%edx

	_03b4fc_jump:
		inc    %esi
		movswl (%eax),%ebx
		add    $0x000002,%eax
		sar    $0x000006,%ebx
		inc    %edx
		mov    %bl,-0x000001(%esi)
		cmp    $0x000300,%dx
		jl     _03b4fc_jump
		mov    $_0c6e98_data,%esi
		mov    $0x0000ff,%ecx
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		cmpw   $0x000000,_0cee32_data
		jne    _03b546_jump
		orb    $0x000040,_0cefdb_data

	_03b546_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03b550_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		cwtl   
		call   _03b438_func
		mov    _0cee32_data,%si
		xor    %ebx,%ebx
		test   %si,%si
		jle    _03b585_jump

	_03b569_jump:
		call   _016dee_func
		call   _016dde_func
		mov    $_0c6e98_data,%edx
		mov    %ecx,%eax
		inc    %ebx
		call   _03b460_func
		cmp    %si,%bx
		jl     _03b569_jump

	_03b585_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03b58c_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmp    _0cefd7_data,%al
		je     _03b5ff_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %al,_0cefd7_data
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7498_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0c6e98_data,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %edi,%eax
		call   _03b3b4_func
		cmpb   $0x000041,_0cefdb_data
		jne    _03b5ff_jump
		mov    $0x0000ff,%ecx
		mov    %edi,%esi
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_03b5ff_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_03b604_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %ax,0x000004(%esp)
		mov    %edx,%ecx
		mov    %bx,0x000008(%esp)
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%esi
		sub    %edx,%esi
		movswl %cx,%edx
		mov    %edx,%ecx
		lea    0x000000(,%edx,4),%eax
		shl    $0x000008,%esi
		sub    %edx,%eax
		mov    _0c7498_data(%esi,%eax,1),%bl
		mov    %bl,(%esp)
		mov    _0c7499_data(%esi,%eax,1),%bl
		mov    _0c749a_data(%esi,%eax,1),%al
		mov    %al,0x000002(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %bl,0x000001(%esp)
		mov    %eax,%edi
		lea    0x000003(%eax),%esi
		jmp    _03b6a5_jump

	_03b667_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000300,%edx,%edx
		mov    _0c7498_data(%edx,%esi,1),%bl
		mov    %bl,_0c7498_data(%edx,%edi,1)
		mov    _0c7499_data(%edx,%esi,1),%bl
		add    $0x000003,%esi
		mov    %bl,_0c7499_data(%edx,%edi,1)
		add    $0x000003,%edi
		mov    _0c7497_data(%edx,%esi,1),%al
		inc    %ecx
		mov    %al,_0c7497_data(%edx,%edi,1)

	_03b6a5_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    %eax,%ecx
		jl     _03b667_jump
		mov    0x000002(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %eax,%edx
		lea    0x000000(,%ecx,4),%esi
		shl    $0x000002,%eax
		sub    %ecx,%esi
		sub    %edx,%eax
		shl    $0x000008,%esi
		mov    (%esp),%dl
		mov    %dl,_0c7498_data(%esi,%eax,1)
		mov    0x000001(%esp),%dl
		mov    $_0c6e98_data,%edi
		mov    %dl,_0c7499_data(%esi,%eax,1)
		mov    0x000002(%esp),%dl
		mov    $0x000300,%ecx
		mov    %dl,_0c749a_data(%esi,%eax,1)
		add    $_0c7498_data,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %edi,%eax
		call   _03b3b4_func
		cmpw   $0x000000,_0cee32_data
		jne    _03b724_jump
		movw   $0x000001,_0cee32_data

	_03b724_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_03b72c_switch:
		.long   _03b7ce_case
		.long   _03b7d6_case
		.long   _03b7de_case
		.long   _03b7e6_case
		.long   _03b7ee_case
		.long   _03b7f6_case
		.long   _03b7fe_case
		.long   _03b804_case
		.long   _03b80c_case
		.long   _03b814_case
		.long   _03b81c_case
		.long   _03b824_case




_03b75c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		cmpb   $0x000000,_0cefd9_data
		je     _03b8ed_jump
		testb  $0x000040,_0cefdb_data
		je     _03b8ed_jump
		mov    _0ce4b2_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		add    %edi,%eax
		mov    _0cc300_data,%edi
		shl    $0x000002,%eax
		add    %edi,%eax
		mov    _0ce57c_data,%di
		xor    %esi,%esi
		test   %di,%di
		jle    _03b8ed_jump

	_03b7ab_jump:
		cmpw   $0x00009e,0x000060(%eax)
		jne    _03b8c4_jump
		mov    0x00006c(%eax),%ch
		cmp    $0x00000b,%ch
		ja     _03b82a_jump
		movzbl %ch,%edi
		jmp    *%cs:_03b72c_switch(,%edi,4)

	_03b7ce_case:
		xor    %dh,%dh
		mov    $0x000001,%cl
		xor    %dl,%dl
		jmp    _03b82a_jump

	_03b7d6_case:
		xor    %dh,%dh
		mov    $0x000002,%cl
		xor    %dl,%dl
		jmp    _03b82a_jump

	_03b7de_case:
		mov    $0x000001,%dh
		mov    $0x000002,%cl
		xor    %dl,%dl
		jmp    _03b82a_jump

	_03b7e6_case:
		mov    $0x000001,%dh
		xor    %cl,%cl
		xor    %dl,%dl
		jmp    _03b82a_jump

	_03b7ee_case:
		mov    $0x000002,%dh
		xor    %cl,%cl
		xor    %dl,%dl
		jmp    _03b82a_jump

	_03b7f6_case:
		mov    $0x000002,%dh
		mov    $0x000001,%cl
		xor    %dl,%dl
		jmp    _03b82a_jump

	_03b7fe_case:
		mov    $0x000001,%bl
		xor    %bh,%bh
		jmp    _03b828_jump

	_03b804_case:
		mov    $0x000002,%bl
		mov    $0x000001,%dl
		xor    %bh,%bh
		jmp    _03b82a_jump

	_03b80c_case:
		mov    $0x000002,%bl
		mov    $0x000001,%bh
		mov    %bh,%dl
		jmp    _03b82a_jump

	_03b814_case:
		mov    $0x000001,%bh
		xor    %bl,%bl
		mov    %bh,%dl
		jmp    _03b82a_jump

	_03b81c_case:
		mov    $0x000002,%bh
		mov    $0x000001,%dl
		xor    %bl,%bl
		jmp    _03b82a_jump

	_03b824_case:
		mov    $0x000002,%bh
		mov    $0x000001,%bl

	_03b828_jump:
		mov    %bl,%dl

	_03b82a_jump:
		test   %dl,%dl
		jbe    _03b838_jump
		cmp    $0x000001,%dl
		je     _03b875_jump
		jmp    _03b8b9_jump

	_03b838_jump:
		movzbw _0cdc0c_data,%di
		mov    %edi,0x000008(%esp)
		mov    _0cdbcc_data,%di
		add    0x000008(%esp),%edi
		mov    %edi,0x000004(%esp)
		movzbw 0x000068(%eax),%di
		mov    0x000028(%eax),%ax
		add    %edi,%eax
		mov    0x000004(%esp),%edi
		cmp    %di,%ax
		jge    _03b86d_jump
		mov    %cl,0x00000c(%esp)
		jmp    _03b8b9_jump

	_03b86d_jump:
		jle    _03b8b0_jump
		mov    %dh,0x00000c(%esp)
		jmp    _03b8b9_jump

	_03b875_jump:
		movzbw _0cdc0d_data,%di
		mov    %edi,0x000008(%esp)
		mov    _0cdbd0_data,%di
		add    0x000008(%esp),%edi
		mov    %edi,(%esp)
		movzbw 0x000069(%eax),%di
		mov    0x00002c(%eax),%ax
		add    %edi,%eax
		mov    (%esp),%edi
		cmp    %di,%ax
		jge    _03b8a8_jump
		mov    %bl,0x00000c(%esp)
		jmp    _03b8b9_jump

	_03b8a8_jump:
		jle    _03b8b0_jump
		mov    %bh,0x00000c(%esp)
		jmp    _03b8b9_jump

	_03b8b0_jump:
		mov    _0cefd7_data,%al
		mov    %al,0x00000c(%esp)

	_03b8b9_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		call   _03b58c_func

	_03b8c4_jump:
		inc    %esi
		movswl %si,%eax
		mov    _0ce4b2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%edi
		add    %edi,%eax
		cmp    _0ce57c_data,%si
		jl     _03b7ab_jump

	_03b8ed_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b8f8_func:
		push   %edx
		xor    %edx,%edx
		mov    _0cefd7_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000008,%eax
		mov    $_0c6e98_data,%edx
		add    $_0c7498_data,%eax
		call   _03b460_func
		pop    %edx
		ret    



_03b920_func:
		push   %edx
		xor    %edx,%edx
		mov    _0cefd7_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7498_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03b3e0_func
		pop    %edx
		ret    



_03b948_func:
		push   %edx
		xor    %edx,%edx
		mov    _0cefd7_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7498_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03b438_func
		pop    %edx
		ret    



_03b970_func:
		push   %edx
		xor    %edx,%edx
		mov    _0cefd7_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7498_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03b550_func
		pop    %edx
		ret    



_03b998_func:
		push   %ecx
		push   %esi
		push   %edi
		call   _016dee_func
		cmpb   $0x000001,_095b14_data
		jne    _03b9d2_jump
		call   _03a340_func
		mov    $0x003e80,%ecx
		mov    _0cccb4_data,%edi
		call   _012783_func
		mov    $0x003e80,%ecx
		mov    _0cccb8_data,%edi
		call   _012783_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_03b9d2_jump:
		mov    _095b10_data,%esi
		mov    _0cc644_data,%edi
		call   _014bca_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03b9e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%bl
		xor    %edx,%edx
		xor    %ecx,%ecx

	_03b9f7_jump:
		call   _016ecc_func
		cmpb   $0x000001,_095b14_data
		jne    _03ba2e_jump
		call   _016dee_func
		call   _03a340_func
		call   _016dde_func
		cmp    _0cefa3_data,%cl
		je     _03ba23_jump
		call   _016e51_func
		mov    %eax,%edx

	_03ba23_jump:
		test   %bl,%bl
		jne    _03ba55_jump
		call   _03b8f8_func
		jmp    _03ba55_jump

	_03ba2e_jump:
		call   _016dee_func
		call   _016dde_func
		cmp    _0cefa3_data,%cl
		je     _03ba47_jump
		call   _016e51_func
		mov    %eax,%edx

	_03ba47_jump:
		test   %bl,%bl
		jne    _03ba50_jump
		call   _03b8f8_func

	_03ba50_jump:
		call   _03a340_func

	_03ba55_jump:
		mov    %edx,%eax
		call   *(%esp)
		mov    %cl,%bl
		test   %ax,%ax
		je     _03b9f7_jump
		cmpl   $_0372a0_jump,(%esp)
		je     _03ba72_jump
		xor    %ah,%ah
		mov    %ah,_0cefa5_data

	_03ba72_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03bb78_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    $0x000300,%ecx
		mov    $_0c7498_data,%esi
		mov    _0cefd7_data,%al
		mov    $_0c6298_data,%edi
		mov    %al,_0cefa1_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c7498_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c6e98_data,%edi
		xor    %ah,%ah
		mov    %edx,%esi
		mov    %ah,_0cefd7_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_03bbec_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000300,%ecx
		mov    $_0c6298_data,%esi
		mov    _0cefa1_data,%al
		mov    $_0c7498_data,%edi
		mov    %al,_0cefd7_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03bc1c_func:
		push   %edx
		mov    _0ccd48_data,%eax
		mov    %eax,_0ccd0c_data
		mov    _0ccd3c_data,%eax
		mov    %eax,_0ccd20_data
		mov    _0ccd18_data,%eax
		mov    %eax,_0ccd38_data
		xor    %eax,%eax
		mov    _0cef97_data,%al
		mov    _0cccd0_data(,%eax,4),%edx
		mov    %edx,_0ccd48_data
		mov    _0cccec_data(,%eax,4),%edx
		mov    _0ccd50_data(,%eax,4),%eax
		mov    %edx,_0ccd3c_data
		mov    %eax,_0ccd18_data
		pop    %edx
		ret    



_03bc6c_func:
		mov    _0ccd0c_data,%eax
		mov    %eax,_0ccd48_data
		mov    _0ccd20_data,%eax
		mov    %eax,_0ccd3c_data
		mov    _0ccd38_data,%eax
		mov    %eax,_0ccd18_data
		ret    



_03bc8c_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x00fa00,%ecx
		mov    _0ccd48_data,%esi
		mov    _0cc644_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03bcb4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x000140,%edi
		mov    _0cc5a8_data,%dx
		mov    _0cc5ac_data,%bx
		sub    %edx,%edi
		mov    _095b4b_data,%ah
		add    %ebx,%edi
		test   %ah,%ah
		jne    _03bd01_jump
		mov    $0x00fa00,%ecx
		mov    _0cc638_data,%esi
		mov    _0cccb4_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _03bdfd_jump

	_03bd01_jump:
		mov    _096238_data,%eax
		mov    _0cc5ac_data,%edx
		cmp    %edx,%eax
		je     _03bd44_jump
		jge    _03bd3a_jump
		mov    _0cc5a6_data,%ecx
		mov    _0cc5aa_data,%ebx
		mov    _0cc5ae_data,%edx
		mov    _0cc5b2_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02486c_func

	_03bd3a_jump:
		mov    _0cc5ac_data,%eax
		mov    %eax,_096238_data

	_03bd44_jump:
		mov    _0cc5b4_data,%ebx
		lea    0x000000(,%ebx,4),%eax
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0cccb4_data,%eax
		shl    $0x000006,%ebx
		call   _07c0b0_func
		mov    _0cccb4_data,%edx
		mov    _0cc5ac_data,%ecx
		mov    _0cc5b4_data,%ebx
		add    %ecx,%edx
		lea    0x000000(,%ebx,4),%ecx
		add    %ebx,%ecx
		mov    _0cc5ac_data,%esi
		shl    $0x000006,%ecx
		mov    _0cc638_data,%ebx
		lea    (%edx,%ecx,1),%eax
		add    %esi,%ebx
		mov    _0cc5b4_data,%si
		jmp    _03bdc0_jump

	_03bd9c_jump:
		mov    _0cc5ac_data,%dx
		jmp    _03bdad_jump

	_03bda5_jump:
		inc    %edx
		inc    %eax
		mov    (%ebx),%cl
		inc    %ebx
		mov    %cl,-0x000001(%eax)

	_03bdad_jump:
		mov    _0cc5a8_data,%ebp
		movswl %dx,%ecx
		cmp    %ebp,%ecx
		jl     _03bda5_jump
		movswl %di,%ecx
		inc    %esi
		add    %ecx,%eax

	_03bdc0_jump:
		add    %ecx,%ebx
		mov    _0cc5b0_data,%ebp
		movswl %si,%ecx
		cmp    %ebp,%ecx
		jl     _03bd9c_jump
		mov    $0x0000c8,%ebx
		mov    _0cccb4_data,%edx
		sub    %ebp,%ebx
		lea    0x000000(,%ebp,4),%eax
		lea    0x000000(,%ebx,4),%ecx
		add    %ebp,%eax
		add    %ecx,%ebx
		shl    $0x000006,%eax
		shl    $0x000006,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _07c0b0_func

	_03bdfd_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03be04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		xor    %edx,%edx
		mov    %edx,_0deb10_data
		cmpw   $0x000001,_0cede4_data
		jne    _03be26_jump
		cmpw   $0x000009,_0cedd0_data
		je     _03be56_jump

	_03be26_jump:
		cmpw   $0x000002,_0cede4_data
		jne    _03be3a_jump
		cmpw   $0x000004,_0cedd0_data
		je     _03be56_jump

	_03be3a_jump:
		cmpw   $0x000004,_0cede4_data
		jne    _03c1a3_jump
		cmpw   $0x000009,_0cedd0_data
		jne    _03c1a3_jump

	_03be56_jump:
		xor    %ecx,%ecx
		mov    $0x00003f,%esi
		mov    $0x000003,%edi
		mov    $0x000004,%ebp

	_03be67_jump:
		mov    _0ccd88_data,%eax
		mov    _0c7498_data(%ecx),%dl
		mov    %dl,0x002d00(%ecx,%eax,1)
		mov    _0c7499_data(%ecx),%dl
		mov    %dl,0x002d01(%ecx,%eax,1)
		mov    _0c749a_data(%ecx),%dl
		mov    %dl,0x002d02(%ecx,%eax,1)
		xor    %edx,%edx
		mov    _0c7498_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03beb5_jump
		mov    %ebx,%eax

	_03beb5_jump:
		mov    _0ccd88_data,%edx
		mov    %al,(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7499_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03bee0_jump
		mov    %ebx,%eax

	_03bee0_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x000001(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c749a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03bf0b_jump
		mov    %ebx,%eax

	_03bf0b_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x000002(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7498_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03bf31_jump
		mov    %ebx,%eax

	_03bf31_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x000f00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7499_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03bf5a_jump
		mov    %ebx,%eax

	_03bf5a_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x000f01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c749a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03bf83_jump
		mov    %ebx,%eax

	_03bf83_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x000f02(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7498_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000006,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03bfb1_jump
		mov    %ebx,%eax

	_03bfb1_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x001500(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7499_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000006,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03bfdf_jump
		mov    %ebx,%eax

	_03bfdf_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x001501(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c749a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c008_jump
		mov    %ebx,%eax

	_03c008_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x001502(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7498_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c031_jump
		mov    %ebx,%eax

	_03c031_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x001e00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7499_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c05a_jump
		mov    %ebx,%eax

	_03c05a_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x001e01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c749a_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c083_jump
		mov    %ebx,%eax

	_03c083_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x001e02(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7498_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c0b2_jump
		mov    %ebx,%eax

	_03c0b2_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x002a00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7499_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c0e1_jump
		mov    %ebx,%eax

	_03c0e1_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x002a01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c749a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03c112_jump
		mov    %ebx,%eax

	_03c112_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x0029ff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7495_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7496_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7497_data(%ecx)
		cmp    $0x000300,%ecx
		jne    _03be67_jump
		mov    $0x000005,%edx
		xor    %eax,%eax
		call   _03c3e0_func
		mov    $0x000007,%edx
		mov    $0x000005,%eax
		call   _03c3e0_func
		mov    $0x00000a,%edx
		mov    $0x000007,%eax
		call   _03c3e0_func
		mov    $0x00000e,%edx
		mov    $0x00000a,%eax
		xor    %ecx,%ecx
		call   _03c3e0_func
		mov    $0x0000c8,%eax
		mov    %cx,_0cec98_data
		call   _069140_func
		inc    %eax
		mov    %ax,_0cec9a_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c1a3_jump:
		cmpw   $0x000005,_0cede4_data
		jne    _03c3d6_jump
		cmpw   $0x000004,_0cedd0_data
		jne    _03c3d6_jump
		xor    %ecx,%ecx
		mov    $0x000064,%edi
		mov    $0x00003f,%esi

	_03c1cb_jump:
		mov    _0ccd88_data,%eax
		mov    _0c7498_data(%ecx),%dl
		mov    %dl,0x002d00(%ecx,%eax,1)
		mov    _0c7499_data(%ecx),%dl
		mov    %dl,0x002d01(%ecx,%eax,1)
		mov    _0c749a_data(%ecx),%dl
		xor    %ebx,%ebx
		mov    %dl,0x002d02(%ecx,%eax,1)
		mov    %esi,%eax
		mov    _0c7498_data(%ecx),%bl
		cmp    %ebx,%eax
		jle    _03c207_jump
		mov    %ebx,%eax

	_03c207_jump:
		mov    _0ccd88_data,%edx
		mov    %al,(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7499_data(%ecx),%dl
		imul   $0x00004d,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c22c_jump
		mov    %ebx,%eax

	_03c22c_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x000001(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c749a_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c252_jump
		mov    %ebx,%eax

	_03c252_jump:
		mov    _0ccd88_data,%edx
		xor    %ebx,%ebx
		mov    %al,0x000002(%ecx,%edx,1)
		mov    %esi,%eax
		mov    _0c7498_data(%ecx),%bl
		cmp    %ebx,%eax
		jle    _03c26c_jump
		mov    %ebx,%eax

	_03c26c_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x002a00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7499_data(%ecx),%dl
		imul   $0x00004d,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c295_jump
		mov    %ebx,%eax

	_03c295_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x002a01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c749a_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03c2c1_jump
		mov    %ebx,%eax

	_03c2c1_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x0029ff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7495_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7496_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7497_data(%ecx)
		cmp    $0x0002fd,%ecx
		jne    _03c1cb_jump
		mov    $0x00000e,%edx
		xor    %eax,%eax
		mov    $0x000180,%ecx
		call   _03c3e0_func
		mov    $0x000064,%edi
		mov    $0x00003f,%esi

	_03c313_jump:
		xor    %edx,%edx
		mov    _0c7498_data(%ecx),%dl
		imul   $0x000054,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c32f_jump
		mov    %ebx,%eax

	_03c32f_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x001b00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7499_data(%ecx),%dl
		imul   $0x00003e,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c358_jump
		mov    %ebx,%eax

	_03c358_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x001b01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c749a_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03c384_jump
		mov    %ebx,%eax

	_03c384_jump:
		mov    _0ccd88_data,%edx
		mov    %al,0x001aff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7495_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7496_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7497_data(%ecx)
		cmp    $0x00020d,%ecx
		jne    _03c313_jump
		mov    $0x000009,%edx
		xor    %eax,%eax
		call   _03c3e0_func
		mov    $0x00000e,%edx
		mov    $0x000009,%eax
		call   _03c3e0_func

	_03c3d6_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03c3e0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %ax,0x000020(%esp)
		mov    %dx,0x000028(%esp)
		inc    %eax
		mov    %ax,0x000024(%esp)
		cmp    %dx,%ax
		jge    _03c58c_jump

	_03c401_jump:
		xor    %esi,%esi

	_03c403_jump:
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,(%esp)
		imul   $0x000300,%eax,%ebp
		movswl %si,%ecx
		mov    _0ccd88_data,%ebx
		lea    (%ecx,%ecx,2),%ecx
		lea    (%ebx,%ebp,1),%eax
		mov    (%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    0x000026(%esp),%edx
		mov    %eax,0x000008(%esp)
		mov    0x000022(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %edx,%edi
		mov    %eax,0x000004(%esp)
		sub    %eax,%edi
		mov    0x000008(%esp),%eax
		imul   %edi,%eax
		mov    %eax,0x00000c(%esp)
		imul   $0x000300,%edx,%eax
		add    %eax,%ebx
		mov    %eax,0x000014(%esp)
		xor    %eax,%eax
		mov    (%ecx,%ebx,1),%al
		mov    (%esp),%ebx
		mov    %eax,0x000008(%esp)
		mov    0x000004(%esp),%eax
		sub    %ebx,%eax
		mov    %eax,0x000018(%esp)
		mov    %eax,%ebx
		imul   0x000008(%esp),%ebx
		add    0x00000c(%esp),%ebx
		mov    (%esp),%eax
		sub    %eax,%edx
		mov    %edx,0x000010(%esp)
		mov    %ebx,%eax
		mov    %ebx,%edx
		mov    0x000010(%esp),%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		mov    0x000004(%esp),%edx
		cmp    %ebx,%eax
		jle    _03c4a5_jump
		mov    %ebx,%eax

	_03c4a5_jump:
		mov    %eax,0x00000c(%esp)
		imul   $0x000300,%edx,%eax
		mov    _0ccd88_data,%edx
		mov    %eax,0x00001c(%esp)
		add    %edx,%eax
		mov    0x00000c(%esp),%bl
		mov    %bl,(%ecx,%eax,1)
		lea    (%edx,%ebp,1),%eax
		mov    0x000001(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    %edi,%ebx
		imul   %eax,%ebx
		add    0x000014(%esp),%edx
		mov    0x000001(%ecx,%edx,1),%al
		mov    0x000018(%esp),%edx
		and    $0x0000ff,%eax
		imul   %eax,%edx
		add    %ebx,%edx
		mov    0x000010(%esp),%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		cmp    %ebx,%eax
		jle    _03c503_jump
		mov    %ebx,%eax

	_03c503_jump:
		mov    _0ccd88_data,%edx
		mov    %eax,0x00000c(%esp)
		mov    0x00001c(%esp),%eax
		add    %edx,%eax
		mov    0x00000c(%esp),%bl
		mov    %bl,0x000001(%ecx,%eax,1)
		lea    (%edx,%ebp,1),%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		imul   %eax,%edi
		mov    0x000014(%esp),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000018(%esp),%ebp
		mov    0x000002(%ecx,%eax,1),%dl
		imul   %ebp,%edx
		add    %edi,%edx
		mov    0x000010(%esp),%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		mov    0x00001c(%esp),%edi
		cmp    %ebx,%eax
		jle    _03c55d_jump
		mov    %ebx,%eax

	_03c55d_jump:
		mov    _0ccd88_data,%edx
		add    %edi,%edx
		inc    %esi
		mov    %al,0x000002(%ecx,%edx,1)
		cmp    $0x000100,%si
		jl     _03c403_jump
		mov    0x000024(%esp),%ebx
		inc    %ebx
		mov    0x000028(%esp),%ecx
		mov    %bx,0x000024(%esp)
		cmp    %cx,%bx
		jl     _03c401_jump

	_03c58c_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03c598_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cec98_data,%bx
		testb  $0x000040,_0cefdb_data
		je     _03c732_jump
		cmpw   $0x000005,_0cede4_data
		jne    _03c623_jump
		cmpw   $0x000004,_0cedd0_data
		jne    _03c623_jump
		cmpb   $0x000000,_0cef52_data
		jne    _03c608_jump
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ccd88_data,%esi
		shl    $0x000008,%eax
		add    %eax,%esi
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		mov    _0cec98_data,%bx
		inc    %ebx
		jmp    _03c612_jump

	_03c608_jump:
		test   %bx,%bx
		jne    _03c612_jump
		mov    $0x000001,%ebx

	_03c612_jump:
		cmp    $0x00000f,%bx
		jne    _03c732_jump
		xor    %ebx,%ebx
		jmp    _03c732_jump

	_03c623_jump:
		cmpw   $0x000001,_0cede4_data
		jne    _03c637_jump
		cmpw   $0x000009,_0cedd0_data
		je     _03c667_jump

	_03c637_jump:
		cmpw   $0x000002,_0cede4_data
		jne    _03c64b_jump
		cmpw   $0x000004,_0cedd0_data
		je     _03c667_jump

	_03c64b_jump:
		cmpw   $0x000004,_0cede4_data
		jne    _03c732_jump
		cmpw   $0x000009,_0cedd0_data
		jne    _03c732_jump

	_03c667_jump:
		mov    _0deb10_data,%edx
		mov    _0cec98_data,%eax
		inc    %edx
		sar    $0x000010,%eax
		mov    %edx,_0deb10_data
		cmp    %edx,%eax
		jle    _03c689_jump
		test   %bx,%bx
		je     _03c732_jump

	_03c689_jump:
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ccd88_data,%esi
		shl    $0x000008,%eax
		add    %eax,%esi
		mov    %bx,_0cec98_data
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		mov    _0cec98_data,%bx
		test   %bx,%bx
		jne    _03c6e1_jump
		mov    $0x0000c3,%eax
		call   _06fa90_func
		mov    _0cec98_data,%bx
		inc    %ebx
		jmp    _03c703_jump

	_03c6e1_jump:
		mov    _0deb10_data,%eax
		mov    %eax,%edx
		mov    $0x000002,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    _03c6f9_jump
		inc    %ebx
		jmp    _03c703_jump

	_03c6f9_jump:
		test   %bx,%bx
		jne    _03c703_jump
		mov    $0x000001,%ebx

	_03c703_jump:
		cmp    $0x00000f,%bx
		jne    _03c732_jump
		mov    $0x000190,%eax
		xor    %esi,%esi
		xor    %ebx,%ebx
		mov    %esi,_0deb10_data
		mov    %bx,_0cec98_data
		call   _069140_func
		inc    %eax
		mov    _0cec98_data,%bx
		mov    %ax,_0cec9a_data

	_03c732_jump:
		mov    %bx,_0cec98_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03c740_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %al,%cl
		cmpb   $0x0000ff,_095b14_data
		jne    _03c75b_jump
		call   _01455b_func
		call   _03b164_func

	_03c75b_jump:
		cmpb   $0x000001,_095b14_data
		je     _03c853_jump
		call   _014617_func
		mov    $0x010000,%ebx
		mov    $_0164ad_func,%esi
		mov    $_016633_func,%edi
		mov    _095b10_data,%eax
		xor    %edx,%edx
		mov    $_0167ca_func,%ebp
		call   _07c0b0_func
		xor    %eax,%eax
		mov    $0x000001,%dh
		mov    %cl,%al
		mov    $_01633a_func,%ebx
		call   _03b034_jump
		mov    $_0164b9_func,%ecx
		mov    $_012b6d_func,%eax
		mov    %dh,_095b14_data
		mov    %ebx,_0cc5f0_data
		mov    %esi,_0cc60c_data
		mov    %edi,_0cc5f4_data
		mov    %ebp,_0cc61c_data
		mov    $_016346_func,%edx
		mov    $_012b9e_func,%ebx
		mov    $_012c0e_func,%esi
		mov    $_012c8b_func,%edi
		mov    $_012d40_func,%ebp
		mov    %ecx,_0cc618_data
		mov    %eax,_0cc5f8_data
		mov    $_012bce_func,%ecx
		mov    $_012e13_func,%eax
		mov    %edx,_0cc604_data
		mov    %ebx,_0cc608_data
		mov    %esi,_0cc630_data
		mov    %edi,_0cc62c_data
		mov    %ebp,_0cc614_data
		mov    $_012b3d_func,%edx
		mov    $_012dbc_func,%ebx
		mov    $_012c5b_func,%esi
		mov    %ecx,_0cc600_data
		mov    %eax,_0cc610_data
		mov    $_012d07_func,%ecx
		mov    %edx,_0cc5fc_data
		mov    %ebx,_0cc634_data
		mov    %esi,_0cc5dc_data
		mov    $_012eed_func,%edx
		mov    %ecx,_0cc5e4_data
		mov    %edx,_0cc628_data

	_03c853_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03c85c_func:
		call   _014746_func
		movb   $0x0000ff,_095b14_data
		ret    



_03c86c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %al,%cl
		cmpb   $0x0000ff,_095b14_data
		jne    _03c887_jump
		call   _01455b_func
		call   _03b164_func

	_03c887_jump:
		cmpb   $0x000000,_095b14_data
		je     _03c99a_jump
		call   _0145be_func
		mov    $0x00fa00,%ebx
		mov    _0cc644_data,%eax
		xor    %edx,%edx
		mov    $_016a50_func,%esi
		call   _07c0b0_func
		mov    $0x00fa00,%ebx
		mov    _095b10_data,%eax
		xor    %edx,%edx
		mov    $_016b3e_func,%edi
		call   _07c0b0_func
		mov    _095b10_data,%eax
		mov    $_016bdd_func,%ebp
		call   _014543_func
		xor    %eax,%eax
		mov    $_01696c_func,%ebx
		mov    %cl,%al
		xor    %dh,%dh
		call   _03b034_jump
		mov    $_016a5c_jump,%ecx
		mov    $_015568_func,%eax
		mov    %dh,_095b14_data
		mov    %ebx,_0cc5f0_data
		mov    %esi,_0cc60c_data
		mov    %edi,_0cc5f4_data
		mov    %ebp,_0cc61c_data
		mov    $_016978_jump,%edx
		mov    $_0155cf_func,%ebx
		mov    $_01563b_func,%esi
		mov    $_0156b4_func,%edi
		mov    $_01573e_func,%ebp
		mov    %ecx,_0cc618_data
		mov    %eax,_0cc5f8_data
		mov    $_0155ff_func,%ecx
		mov    $_0157dc_func,%eax
		mov    %edx,_0cc604_data
		mov    %ebx,_0cc608_data
		mov    %esi,_0cc630_data
		mov    %edi,_0cc62c_data
		mov    %ebp,_0cc614_data
		mov    $_01559f_func,%edx
		mov    $_01578f_func,%ebx
		mov    $_015684_func,%esi
		mov    %ecx,_0cc600_data
		mov    %eax,_0cc610_data
		mov    $_015705_func,%ecx
		mov    %edx,_0cc5fc_data
		mov    %ebx,_0cc634_data
		mov    %esi,_0cc5dc_data
		mov    $_015853_func,%edx
		mov    %ecx,_0cc5e4_data
		mov    %edx,_0cc628_data

	_03c99a_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03c9a4_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		test   %eax,%eax
		jle    _03c9bd_jump

	_03c9ae_jump:
		call   _016dee_func
		inc    %edx
		call   _016dde_func
		cmp    %ebx,%edx
		jl     _03c9ae_jump

	_03c9bd_jump:
		pop    %edx
		pop    %ebx
		ret    



_03c9c0_func:
		test   %dl,%dl
		je     _03c9cb_jump
		mov    $0x00004d,%edx
		jmp    _03c9d0_jump

	_03c9cb_jump:
		mov    $0x0000ef,%edx

	_03c9d0_jump:
		mov    %dx,0x000060(%eax)
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		mov    _0930d6_data(,%edx,2),%dx
		mov    %dx,0x00005c(%eax)
		ret    



_03c9e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0ced5e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03ca25_jump
		push   $0xffffffc1
		mov    %eax,%edx
		shl    $0x000005,%eax
		mov    $0xffffffcc,%ecx
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01cd60_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ca25_jump:
		movw   $0x000000,0x000042(%esi)
		mov    0x000042(%esi),%ax
		mov    %ax,0x000040(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ca38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,0x00007f(%eax)
		je     _03ca48_jump
		decb   0x00007f(%ebx)

	_03ca48_jump:
		mov    0x000081(%ebx),%dl
		shl    $0x000004,%dl
		mov    0x000060(%ebx),%cx
		shr    $0x000007,%dl
		cmp    $0x0000ef,%cx
		jne    _03ca68_jump
		mov    %ebx,%eax
		call   _01db14_func
		jmp    _03ca6f_jump

	_03ca68_jump:
		mov    %ebx,%eax
		call   _03c9e8_func

	_03ca6f_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    %eax,%ecx
		xor    %eax,%eax
		shl    $0x000008,%ecx
		mov    0x00006c(%ebx),%al
		and    $0x000001,%dl
		add    %ecx,%eax
		shl    $0x000003,%dl
		cmp    $0x000009,%eax
		jb     _03caeb_jump
		jbe    _03cc19_jump
		cmp    $0x000010,%eax
		jb     _03cace_jump
		jbe    _03cba1_jump
		cmp    $0x000013,%eax
		jb     _03cac0_jump
		jbe    _03cbbf_jump
		cmp    $0x000014,%eax
		jbe    _03cb83_jump
		cmp    $0x000200,%eax
		je     _03cc4c_jump
		jmp    _03cc8f_jump

	_03cac0_jump:
		cmp    $0x000011,%eax
		je     _03cb65_jump
		jmp    _03cc8f_jump

	_03cace_jump:
		cmp    $0x00000b,%eax
		jb     _03cc6e_jump
		jbe    _03cb83_jump
		cmp    $0x00000d,%eax
		je     _03cb55_jump
		jmp    _03cc8f_jump

	_03caeb_jump:
		cmp    $0x000003,%eax
		jb     _03cb15_jump
		jbe    _03cb2b_jump
		cmp    $0x000006,%eax
		jb     _03cb0b_jump
		jbe    _03cbdd_jump
		cmp    $0x000008,%eax
		je     _03cb83_jump
		jmp    _03cc8f_jump

	_03cb0b_jump:
		cmp    $0x000005,%eax
		je     _03cb55_jump
		jmp    _03cc8f_jump

	_03cb15_jump:
		cmp    $0x000001,%eax
		jb     _03cb22_jump
		jbe    _03cc89_jump
		jmp    _03cb3c_jump

	_03cb22_jump:
		test   %eax,%eax
		je     _03cb65_jump
		jmp    _03cc8f_jump

	_03cb2b_jump:
		movw   $0x00fff8,0x000042(%ebx)
		movw   $0x000000,0x000040(%ebx)
		jmp    _03cc8f_jump

	_03cb3c_jump:
		mov    0x000081(%ebx),%cl
		and    $0x0000f7,%cl
		mov    %cl,0x000081(%ebx)
		mov    %cl,%ch
		or     %dl,%ch
		mov    %ch,0x000081(%ebx)

	_03cb55_jump:
		mov    %ebx,%eax
		movb   $0x000032,0x00007f(%ebx)
		call   _03d02c_func
		jmp    _03cc8f_jump

	_03cb65_jump:
		cmpb   $0x000000,_0cdcd2_data
		je     _03cc8f_jump
		mov    $0x00000f,%edx
		mov    %ebx,%eax
		call   _01d364_func
		jmp    _03cc8f_jump

	_03cb83_jump:
		cmpb   $0x000000,_0cdcd2_data
		je     _03cc8f_jump
		mov    $0x000012,%edx
		mov    %ebx,%eax
		call   _01d364_func
		jmp    _03cc8f_jump

	_03cba1_jump:
		cmpb   $0x000000,_0cdcd2_data
		jne    _03cc8f_jump
		mov    $0x000011,%edx
		mov    %ebx,%eax
		call   _01d364_func
		jmp    _03cc8f_jump

	_03cbbf_jump:
		cmpb   $0x000000,_0cdcd2_data
		jne    _03cc8f_jump
		mov    $0x000014,%edx
		mov    %ebx,%eax
		call   _01d364_func
		jmp    _03cc8f_jump

	_03cbdd_jump:
		mov    0x000081(%ebx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dh
		mov    %ah,0x000081(%ebx)
		or     %dl,%dh
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		call   _01cbd0_func
		test   %al,%al
		je     _03cc8f_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _03c9c0_func
		movw   $0x000000,0x000040(%ebx)
		jmp    _03cc8f_jump

	_03cc19_jump:
		mov    0x000081(%ebx),%cl
		and    $0x0000f7,%cl
		mov    %cl,0x000081(%ebx)
		mov    %cl,%ch
		or     %dl,%ch
		mov    %ebx,%eax
		mov    %ch,0x000081(%ebx)
		call   _01cbd0_func
		test   %al,%al
		je     _03cc8f_jump
		mov    %ebx,%eax
		call   _053ce4_func
		movw   $0x00fffd,0x000042(%ebx)
		jmp    _03cc8f_jump

	_03cc4c_jump:
		mov    0x000081(%ebx),%dh
		and    $0x0000f7,%dh
		mov    %dh,%cl
		mov    %dh,0x000081(%ebx)
		or     %dl,%cl
		mov    %ebx,%eax
		mov    %cl,0x000081(%ebx)
		call   _053ce4_func
		jmp    _03cc8f_jump

	_03cc6e_jump:
		mov    0x000081(%ebx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dh
		mov    %ah,0x000081(%ebx)
		or     %dl,%dh
		mov    %dh,0x000081(%ebx)
		jmp    _03cc8f_jump

	_03cc89_jump:
		movw   $0x000064,0x000056(%ebx)

	_03cc8f_jump:
		mov    0x000056(%ebx),%si
		test   %si,%si
		je     _03cc9f_jump
		mov    %esi,%edi
		dec    %edi
		mov    %di,0x000056(%ebx)

	_03cc9f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03cca8_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    (%ecx),%ecx
		mov    0x00006c(%eax),%dl
		testb  $0x000004,0x000007(%ecx,%edx,8)
		je     _03cd1a_jump
		cmpw   $0x00004d,0x000060(%eax)
		jne    _03ccd1_jump
		xor    %ebx,%ebx
		jmp    _03ccd6_jump

	_03ccd1_jump:
		mov    $0x000005,%ebx

	_03ccd6_jump:
		xor    %ecx,%ecx
		mov    0x00006a(%eax),%cl
		lea    0x000000(,%ecx,4),%edx
		sub    %ecx,%edx
		shl    $0x000002,%edx
		mov    0x000004(%eax),%ecx
		add    %ecx,%edx
		mov    0x000008(%edx),%cx
		and    $0x00003f,%ch
		and    $0x00ffff,%ecx
		mov    0x00006b(%eax),%al
		and    $0x0000ff,%eax
		imul   %eax,%ecx
		shl    $0x000002,%ecx
		mov    (%edx),%eax
		add    %eax,%ecx
		movswl %bx,%eax
		cmpb   $0x000000,0x000003(%ecx,%eax,4)
		jne    _03cd1a_jump
		mov    $0xffffffff,%ebx

	_03cd1a_jump:
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03cd20_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%edi
		mov    %edx,0x000008(%esp)
		mov    %bl,0x00001c(%esp)
		mov    %cl,0x000018(%esp)
		call   _03cca8_func
		mov    %eax,%ebx
		cwtl   
		cmp    $0xffffffff,%eax
		je     _03d022_jump
		mov    _0cc300_data,%esi
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _03d022_jump

	_03cd5d_jump:
		cmpw   $0x00004e,0x000060(%esi)
		jne    _03d012_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _03d012_jump
		cmpb   $0x000000,0x00001c(%esp)
		je     _03cd9c_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _03cdc1_jump

	_03cd9c_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%cl
		and    $0x000001,%dl
		and    $0x0000f7,%cl
		shl    $0x000003,%dl
		mov    %cl,(%eax)
		mov    %cl,%ch
		or     %dl,%ch
		mov    %ch,(%eax)

	_03cdc1_jump:
		mov    0x000008(%esp),%eax
		mov    %ax,0x000042(%esi)
		lea    0x000010(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000018(%esp),%eax
		movswl %bx,%edx
		push   %eax
		lea    0x00000c(%esp),%ebx
		mov    %edi,%eax
		call   _01d710_func
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00006c(%edi),%al
		cmp    $0x000005,%al
		jb     _03ce39_jump
		jbe    _03ce91_jump
		cmp    $0x00000d,%al
		jb     _03cf59_jump
		jbe    _03cee5_jump
		cmp    $0x000012,%al
		je     _03ce41_jump
		jmp    _03cf59_jump

	_03ce39_jump:
		cmp    $0x000002,%al
		jne    _03cf59_jump

	_03ce41_jump:
		mov    0x00002c(%esi),%edx
		xor    %eax,%eax
		dec    %edx
		mov    0x00006d(%esi),%al
		mov    %edx,0x00002c(%esi)
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		mov    $0x000030,%ecx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    %cx,0x00000c(%esp)
		mov    0x000005(%edx,%eax,8),%cl
		and    $0x00000f,%cl
		mov    %cl,0x000005(%edx,%eax,8)
		mov    %cl,%ch
		or     $0x0000a0,%ch
		mov    %ch,0x000005(%edx,%eax,8)
		mov    $0x000003,%bh
		movb   $0x000000,0x000071(%esi)
		mov    %bh,0x000020(%esp)
		movb   $0x00000a,0x000072(%esi)
		jmp    _03cf59_jump

	_03ce91_jump:
		lea    0x000018(%edx),%eax
		mov    %eax,0x00002c(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    $0x000020,%ebx
		mov    0x00000c(%esi),%eax
		mov    %bx,0x00000c(%esp)
		lea    (%eax,%edx,1),%ebx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%edx
		mov    $0x000003,%cl
		mov    (%ebx),%eax
		mov    %cl,0x000020(%esp)
		mov    0x000005(%edx,%eax,1),%ch
		and    $0x00000f,%ch
		mov    %ch,%bl
		mov    %ch,0x000005(%edx,%eax,1)
		or     $0x000020,%bl
		mov    %bl,0x000005(%edx,%eax,1)
		movb   $0x000000,0x000071(%esi)
		movb   $0x000000,0x000072(%esi)
		jmp    _03cf59_jump

	_03cee5_jump:
		mov    $0x000020,%eax
		mov    $0x000008,%edx
		call   _069140_func
		sub    %eax,%edx
		mov    %dx,0x00000c(%esp)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _03cf10_jump
		mov    $0x000001,%eax
		jg     _03cf10_jump
		neg    %eax

	_03cf10_jump:
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    %dx,0x00000c(%esp)
		xor    %eax,%eax
		xor    %dh,%dh
		mov    0x00006d(%esi),%al
		mov    %dh,0x000020(%esp)
		shl    $0x000002,%eax
		mov    0x00000c(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x000020,%bh
		mov    %bh,0x000005(%edx,%eax,8)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ebp
		movb   $0x000000,0x000072(%esi)
		sub    $0x000014,%ebp
		mov    %ebp,0x00002c(%esi)

	_03cf59_jump:
		cmpb   $0x000000,0x00001c(%esp)
		jne    _03cf67_jump
		movw   $0x000010,0x00000c(%esp)

	_03cf67_jump:
		testb  $0x000008,0x000081(%edi)
		je     _03cf7a_jump
		mov    0x00000c(%esp),%eax
		mov    %ax,0x000040(%esi)
		jmp    _03cf8a_jump

	_03cf7a_jump:
		mov    0x00000c(%esp),%eax
		mov    %eax,%edx
		mov    %ax,0x000040(%esi)
		neg    %edx
		mov    %dx,0x000040(%esi)

	_03cf8a_jump:
		mov    $0x000004,%cl
		mov    0x000040(%esi),%ax
		xor    %edx,%edx
		test   %ax,%ax
		js     _03cf9c_jump
		sar    %cl,%ax
		jmp    _03cfa5_jump

	_03cf9c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03cfa5_jump:
		mov    0x000020(%esp),%dl
		cwtl   
		imul   %edx,%eax
		mov    0x000028(%esi),%ebx
		add    %eax,%ebx
		mov    0x000081(%esi),%al
		xor    %edx,%edx
		shl    $0x000004,%al
		mov    %ebx,0x000028(%esi)
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _05f030_func
		mov    %esi,%eax
		call   _01db8c_func
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f304_func
		mov    0x000081(%esi),%dh
		mov    0x000018(%esp),%al
		and    $0x0000bf,%dh
		mov    %al,0x00007f(%esi)
		mov    %dh,0x000081(%esi)
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03d012_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _03cd5d_jump

	_03d022_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03d02c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		cmpb   $0x000000,0x00006d(%eax)
		jne    _03d20d_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _03d048_jump
		cmpb   $0x000015,0x00006b(%esi)
		jae    _03d066_jump

	_03d048_jump:
		cmpb   $0x000005,0x00006c(%esi)
		jne    _03d054_jump
		cmpb   $0x000012,0x00006b(%esi)
		jae    _03d066_jump

	_03d054_jump:
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _03d060_jump
		cmpb   $0x000002,0x00006b(%esi)
		jae    _03d066_jump

	_03d060_jump:
		movw   $0x000000,0x000052(%esi)

	_03d066_jump:
		cmpw   $0x000000,0x000052(%esi)
		jne    _03d213_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _03d07d_jump
		cmpb   $0x000015,0x00006b(%esi)
		je     _03d09d_jump

	_03d07d_jump:
		cmpb   $0x000005,0x00006c(%esi)
		jne    _03d089_jump
		cmpb   $0x000012,0x00006b(%esi)
		je     _03d09d_jump

	_03d089_jump:
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _03d213_jump
		cmpb   $0x000002,0x00006b(%esi)
		jne    _03d213_jump

	_03d09d_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _03d213_jump
		mov    0x00006c(%esi),%ch
		cmp    $0x000005,%ch
		jne    _03d0f0_jump
		mov    $0x000028,%ecx
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _03cd20_func
		jmp    _03d202_jump

	_03d0f0_jump:
		cmp    $0x000002,%ch
		jne    _03d116_jump
		mov    $0x000028,%ecx
		mov    $0x000001,%ebx
		mov    $0xffffffff,%edx
		mov    %esi,%eax
		call   _03cd20_func
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d116_jump:
		mov    $0x000064,%ecx
		mov    $0x000001,%ebx
		mov    $0xfffffffd,%edx
		mov    %esi,%eax
		call   _03cd20_func
		mov    0x000081(%esi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		mov    $0x000064,%ecx
		or     %dl,%bh
		mov    $0xfffffffd,%edx
		mov    %bh,(%eax)
		mov    $0x000001,%ebx
		mov    %esi,%eax
		call   _03cd20_func
		mov    0x000081(%esi),%cl
		lea    0x000081(%esi),%eax
		test   $0x000008,%cl
		sete   %dl
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    $0x000001,%ebx
		mov    %ch,%dh
		mov    %ch,(%eax)
		or     %dl,%dh
		mov    $0x000064,%ecx
		mov    %dh,(%eax)
		mov    $0xfffffffd,%edx
		mov    %esi,%eax
		call   _03cd20_func
		mov    0x000081(%esi),%bl
		lea    0x000081(%esi),%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		mov    %bh,(%eax)
		mov    $0x000001,%ebx
		or     %dl,%cl
		mov    $0xfffffffd,%edx
		mov    %cl,(%eax)
		mov    $0x000064,%ecx
		mov    %esi,%eax
		call   _03cd20_func
		mov    0x000081(%esi),%ch
		lea    0x000081(%esi),%eax
		test   $0x000008,%ch
		sete   %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)

	_03d202_jump:
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d20d_jump:
		movw   $0x000000,0x000052(%esi)

	_03d213_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d218_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%al
		testb  $0x000001,0x000007(%ebx,%eax,8)
		je     _03d330_jump
		cmpw   $0x000000,0x000056(%esi)
		jne    _03d330_jump
		cmpw   $0x00004d,0x000060(%esi)
		je     _03d258_jump
		cmp    $0x000003,%dx
		jne    _03d330_jump

	_03d258_jump:
		cmpw   $0x0000ef,0x000060(%esi)
		jne    _03d28e_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _03d28e_jump
		mov    $0x000014,%ecx
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _03cd20_func

	_03d28e_jump:
		movb   $0x000001,_0cdcd3_data
		mov    %esi,%eax
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%esi)
		jne    _03d2ac_jump
		mov    $0x000003,%ebx
		jmp    _03d327_jump

	_03d2ac_jump:
		cmpw   $0x00004d,0x000060(%esi)
		jne    _03d322_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000077(%esi),%dl
		mov    0x000076(%esi),%al
		sub    %eax,%edx
		cmp    $0x000003,%edx
		jl     _03d312_jump
		mov    $0x000006,%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    _0ced5e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03d330_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0cc300_data,%eax
		shl    $0x000002,%esi
		add    %esi,%eax
		call   _05ef90_func
		mov    _0ced5e_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0cc300_data,%eax
		movw   $0x000000,0x000048(%eax,%esi,4)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03d312_jump:
		mov    $0x00000c,%edx
		mov    %esi,%eax
		call   _01d364_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03d322_jump:
		mov    $0x000001,%ebx

	_03d327_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func

	_03d330_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03d334_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    0x00007f(%eax),%ah
		test   %ah,%ah
		jne    _03d3ca_jump
		cmpb   $0x000000,0x00006d(%ebx)
		jne    _03d3ca_jump
		mov    0x00006c(%ebx),%dh
		cmp    $0x00000b,%dh
		jne    _03d35e_jump
		mov    $0x000002,%edx
		jmp    _03d3c3_jump

	_03d35e_jump:
		test   %dh,%dh
		jne    _03d3b9_jump
		mov    _0cdc0c_data,%al
		mov    0x000068(%ebx),%dl
		mov    0x000028(%ebx),%cx
		mov    _0cdbcc_data,%si
		add    %ecx,%edx
		add    %esi,%eax
		sub    %eax,%edx
		mov    %dx,0x00003a(%ebx)
		xor    %edx,%edx
		mov    0x000038(%ebx),%eax
		mov    0x00007a(%ebx),%dl
		sar    $0x000010,%eax
		add    $0x000010,%edx
		test   %eax,%eax
		jge    _03d393_jump
		neg    %eax

	_03d393_jump:
		cmp    %edx,%eax
		jle    _03d3a8_jump
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d364_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d3a8_jump:
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _01d364_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d3b9_jump:
		cmp    $0x000004,%dh
		jne    _03d3ca_jump
		mov    $0x000005,%edx

	_03d3c3_jump:
		mov    %ebx,%eax
		call   _01d364_func

	_03d3ca_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d3d0_func:
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,0x00007f(%eax)
		je     _03d3e7_jump
		cmpb   $0x000000,_0cef4f_data
		je     _03d3f8_jump
		decb   0x00007f(%edx)
		pop    %edx
		ret    

	_03d3e7_jump:
		mov    $0x000093,%eax
		call   _06fa90_func
		mov    %edx,%eax
		call   _077080_func

	_03d3f8_jump:
		pop    %edx
		ret    

_03d400_switch:
		.long   0
		.long   0
		.long   0
		.long   0


	_03d4ec_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		xor    %edi,%edi

	_03d4f5_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _03d9b4_func
		cmp    $0x000020,%si
		jle    _03d4f5_jump

	_03d50b_jump:
		mov    _0dfbb8_data,%eax
		call   _07d6dc_func
		test   %eax,%eax
		jne    _03d50b_jump
		mov    _0dfbbc_data,%eax
		call   _07dc00_func
		xor    %eax,%eax
		call   _07d841_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d530_jump:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x00ff00,%eax
		xor    %edx,%edx
		call   _07d765_func
		push   %ds
		mov    $0x000028,%eax
		push   $_0dfbbc_data
		mov    _096278_data,%cx
		mov    _096274_data,%ebx
		call   _07d87b_func
		test   %eax,%eax
		je     _03d567_jump
		xor    %eax,%eax
		call   _07d841_func

	_03d567_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d56c_func:
		push   %edx
		mov    %eax,%edx
		mov    $0x000003,%eax
		int    $0x000010
		push   %edx
		push   $_0c0834_data
		call   _07bcec_func
		add    $0x000008,%esp
		mov    $0xffffffff,%eax
		call   _07bd0f_func
		pop    %edx
		ret    



_03d590_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		xor    %edx,%edx
		xor    %eax,%eax
		call   _07df1c_func
		test   %eax,%eax
		je     _03d5aa_jump
		mov    $0x000001,%eax
		jmp    _03d5f7_jump

	_03d5aa_jump:
		mov    %esp,%ebx
		mov    $_0dfb4a_data,%eax
		mov    %ds,%ecx
		mov    %ds,%edx
		call   _07e50a_func
		test   %eax,%eax
		je     _03d5cf_jump
		call   _07e066_func
		mov    $0x000002,%eax
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d5cf_jump:
		mov    $_0df330_data,%eax
		mov    %ds,%edx
		call   _07e982_func
		test   %eax,%eax
		je     _03d5f0_jump
		call   _07e066_func
		mov    $0x000003,%eax
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d5f0_jump:
		call   _07e066_func
		xor    %eax,%eax

	_03d5f7_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d600_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _07f191_func
		mov    $0x00ff00,%eax
		xor    %edx,%edx
		call   _07d765_func
		push   %ds
		push   $_0dfbb8_data
		mov    %ds,%ecx
		push   %ds
		mov    $_0df330_data,%ebx
		mov    $0x002710,%edx
		push   $_096258_data
		mov    _0dfbae_data,%eax
		mov    %edx,_096268_data
		call   _07f24a_func
		test   %eax,%eax
		je     _03d65b_jump
		xor    %eax,%eax
		call   _07d841_func
		call   _07f20a_func
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d65b_jump:
		push   %ds
		mov    $0x000028,%eax
		push   $_0dfbbc_data
		mov    _096278_data,%cx
		mov    _096274_data,%ebx
		call   _07d87b_func
		test   %eax,%eax
		je     _03d699_jump
		xor    %eax,%eax
		mov    $0x000001,%ebx
		call   _07d841_func
		mov    _0dfbb8_data,%eax
		mov    %ebx,%edx
		call   _07fb0a_func
		mov    $0x000002,%eax

	_03d699_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d6a0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    %edx,(%esp)
		mov    %ebx,%ebp
		mov    %ecx,0x000008(%esp)
		call   _01cb80_func
		mov    $_0c0858_data,%edx
		mov    $_0c085c_data,%eax
		call   _07d4d0_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _03d6d5_jump
		mov    $_0c0868_data,%eax
		call   _03d56c_func

	_03d6d5_jump:
		mov    %edi,%edx
		shl    $0x000002,%edi
		sub    %edx,%edi
		mov    %esi,%eax
		shl    $0x000002,%edi
		xor    %ebx,%ebx
		mov    _096240_data(%edi),%edx
		mov    %esi,%ecx
		call   _07c8fa_func
		mov    $0x000080,%ebx
		mov    $0x000010,%edx
		mov    %ebp,%eax
		call   _07c6dd_func
		mov    %esi,%eax
		call   _07d584_func
		mov    %edi,%ecx
		mov    %ebp,%eax
		mov    _096249_data(%edi),%dl
		lea    0x000800(%ebp),%esi

	_03d718_jump:
		sub    (%eax),%dl
		mov    (%eax),%bl
		mov    _096248_data(%ecx),%dh
		inc    %eax
		xor    %dh,%bl
		mov    %bl,-0x000001(%eax)
		cmp    %esi,%eax
		jne    _03d718_jump
		test   %dl,%dl
		je     _03d73a_jump
		mov    $_0c0894_data,%eax
		call   _03d56c_func

	_03d73a_jump:
		call   _01cb80_func
		mov    $_0c0858_data,%edx
		mov    $_0c08b0_data,%eax
		call   _07d4d0_func
		mov    %eax,0x00000c(%esp)
		test   %eax,%eax
		jne    _03d760_jump
		mov    $_0c08bc_data,%eax
		call   _03d56c_func

	_03d760_jump:
		mov    (%esp),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _096250_data(,%eax,4),%esi
		mov    0x000008(%esp),%eax
		cmpl   $0x000000,(%eax)
		je     _03d781_jump
		call   _07b83c_func

	_03d781_jump:
		mov    %esi,%eax
		call   _07b824_func
		mov    %eax,%edi
		test   %eax,%eax
		jne    _03d798_jump
		mov    $_0c08d8_data,%eax
		call   _03d56c_func

	_03d798_jump:
		mov    0x000008(%esp),%eax
		mov    (%esp),%edx
		mov    %edi,(%eax)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000004(%esp)
		mov    _09624c_data(%eax),%edx
		mov    0x00000c(%esp),%eax
		mov    0x00000c(%esp),%ecx
		call   _07c8fa_func
		mov    $0x000001,%edx
		mov    %esi,%ebx
		mov    %edi,%eax
		call   _07c6dd_func
		mov    0x00000c(%esp),%eax
		mov    0x000004(%esp),%ebx
		call   _07d584_func
		xor    %edx,%edx
		mov    _096255_data(%ebx),%bl
		test   %esi,%esi
		jbe    _03d804_jump
		mov    0x000004(%esp),%ecx
		mov    %edi,%eax

	_03d7f3_jump:
		sub    (%eax),%bl
		inc    %eax
		mov    _096254_data(%ecx),%bh
		inc    %edx
		xor    %bh,-0x000001(%eax)
		cmp    %esi,%edx
		jb     _03d7f3_jump

	_03d804_jump:
		test   %bl,%bl
		je     _03d812_jump
		mov    $_0c0908_data,%eax
		call   _03d56c_func

	_03d812_jump:
		mov    %ebp,%eax
		lea    0x000800(%ebp),%edx

	_03d81a_jump:
		mov    (%eax),%ebx
		add    $0x000010,%eax
		add    %edi,%ebx
		mov    %ebx,-0x000010(%eax)
		cmp    %edx,%eax
		jne    _03d81a_jump
		xor    %edx,%eax
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03d834_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cef72_data
		je     _03d847_jump
		cmpb   $0x000000,_0cef6e_data

	_03d847_jump:
		mov    $_0962a4_data,%ecx
		mov    $_0deb30_data,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _03d6a0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d860_func:
		xor    %eax,%eax
		ret    



_03d864_func:
		push   %esi
		push   %edi
		sub    $0x00007c,%esp
		mov    %eax,0x000074(%esp)
		mov    %edx,%ebx
		mov    %cx,0x000078(%esp)
		mov    0x000086(%esp),%eax
		mov    $0x00001d,%ecx
		sar    $0x000010,%eax
		mov    %esp,%edi
		mov    %eax,%edx
		mov    $_03d400_switch,%esi
		shl    $0x00000f,%edx
		rep movsl %ds:(%esi),%es:(%edi)
		sub    %eax,%edx
		mov    $0x00007f,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,0x000014(%esp)
		mov    0x00008a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000010,%edx
		sub    %eax,%edx
		mov    $0x00007f,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    0x000028(%esp),%ecx
		mov    %eax,0x000040(%esp)
		mov    0x000076(%esp),%eax
		or     $0x004760,%cx
		sar    $0x000010,%eax
		mov    0x000028(%esp),%edx
		mov    _0962aa_data(,%eax,2),%eax
		mov    0x000074(%esp),%esi
		sar    $0x000010,%eax
		or     $0x000720,%edx
		shl    $0x000008,%eax
		mov    %dx,0x000028(%esp)
		mov    %eax,0x000038(%esp)
		test   %si,%si
		jne    _03d941_jump
		movswl %bx,%edx
		shl    $0x000004,%edx
		mov    _0deb30_data(%edx),%eax
		mov    %ds,0x000004(%esp)
		mov    %eax,(%esp)
		mov    _0deb34_data(%edx),%eax
		mov    _0deb3c_data(%edx),%esi
		mov    %eax,0x000008(%esp)
		test   %esi,%esi
		je     _03d983_jump
		mov    $0xffffffff,%edi
		mov    %ecx,0x000028(%esp)
		mov    _0deb38_data(%edx),%eax
		mov    %esi,0x000034(%esp)
		mov    %eax,0x000030(%esp)
		mov    %edi,0x00000c(%esp)
		jmp    _03d983_jump

	_03d941_jump:
		movswl %bx,%edx
		shl    $0x000004,%edx
		mov    _0df340_data(%edx),%eax
		mov    %ds,0x000004(%esp)
		mov    %eax,(%esp)
		mov    _0df344_data(%edx),%eax
		mov    _0df34c_data(%edx),%ebx
		mov    %eax,0x000008(%esp)
		test   %ebx,%ebx
		je     _03d983_jump
		mov    %ecx,0x000028(%esp)
		mov    %ebx,0x000034(%esp)
		mov    _0df348_data(%edx),%eax
		mov    $0xffffffff,%ecx
		mov    %eax,0x000030(%esp)
		mov    %ecx,0x00000c(%esp)

	_03d983_jump:
		cmpl   $0x000000,0x000008(%esp)
		je     _03d9a6_jump
		mov    %esp,%ebx
		mov    _0dfbb8_data,%eax
		mov    %ds,%ecx
		call   _07ffc4_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _03d9a6_jump
		cmp    $0x000020,%ax
		jl     _03d9ab_jump

	_03d9a6_jump:
		mov    $0xffffffff,%eax

	_03d9ab_jump:
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_03d9b4_func:
		movswl %ax,%edx
		mov    _0dfbb8_data,%eax
		call   _0805dd_func
		ret    $0x000004



_03d9c4_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %ebx,%edi
		movswl %dx,%edx
		mov    %edx,%eax
		shl    $0x00000f,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x00007f,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %cx,%ecx
		mov    _0dfbb8_data,%esi
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _080a58_func
		movswl %di,%edx
		mov    %edx,%eax
		shl    $0x000010,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x00007f,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0dfbb8_data,%esi
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _080cfb_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03da20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		xor    %edi,%edi

	_03da29_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _03d9b4_func
		cmp    $0x000020,%si
		jle    _03da29_jump
		mov    _0dfbbc_data,%eax
		call   _07dc00_func
		xor    %eax,%eax
		mov    $0x000001,%ebx
		call   _07d841_func
		mov    %ebx,%edx
		mov    _0dfbb8_data,%eax
		call   _07fb0a_func
		call   _07f20a_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		nop



_03da6c_func:
		ret    



_03da70_func:
		push   %edx

	_03da71_jump:
		mov    _0dfbbe_data,%edx
		mov    _0dfbb8_data,%eax
		sar    $0x000010,%edx
		call   _0810b0_func
		cmp    $0x000001,%eax
		jne    _03da71_jump
		mov    $_0963ac_data,%eax
		xor    %edx,%edx
		call   _07b83c_func
		mov    %edx,_0963ac_data
		pop    %edx
		ret    



_03daa0_func:
		and    $0x00ffff,%eax
		mov    %eax,_0df330_data
		ret    



_03daac_func:
		mov    %eax,_0df334_data
		ret    



_03dab4_func:
		mov    %eax,_0df338_data
		ret    



_03dabc_func:
		mov    %eax,_0df33c_data
		ret    



_03dac4_func:
		mov    %eax,_0dfbae_data
		ret    



_03dacc_func:
		mov    $_0dfb4a_data,%eax
		ret    



_03dad4_func:
		mov    $_0df330_data,%eax
		ret    



_03dadc_func:
		mov    $_0df334_data,%eax
		ret    



_03dae4_func:
		mov    $_0df338_data,%eax
		ret    



_03db10_func:
		push   %ebx
		push   %edx
		mov    _0cee24_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		orb    $0x000004,0x000081(%edx)
		mov    _0cedf8_data,%eax
		movl   $0x000001,0x000024(%edx)
		sar    $0x000010,%eax
		movl   $0x0000a0,0x000028(%edx)
		sub    $0x000032,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%bl
		call   _0188d0_func
		sub    %ebx,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0cede6_data,%eax
		sar    $0x000010,%eax
		add    $0x000130,%eax
		mov    _0cee10_data,%bx
		mov    %eax,0x000028(%edx)
		xor    %eax,%eax
		add    $0x000140,%ebx
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		sub    $0x00003c,%ebx
		mov    %bx,0x00003c(%edx)
		mov    0x000081(%edx),%bl
		and    $0x0000f7,%bl
		mov    _0cdc30_data,%eax
		mov    %bl,0x000081(%edx)
		mov    _0ced80_data,%bh
		movb   $0x000032,0x00007f(%edx)
		or     $0x000001,%bh
		movb   $0x000008,0x00006e(%eax)
		mov    %bh,_0ced80_data
		pop    %edx
		pop    %ebx
		ret    



_03dbc4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    _0cdbcc_data,%eax
		mov    _0cdc0c_data,%dl
		add    $0x000008,%eax
		lea    (%edx,%eax,1),%ebx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdc0d_data,%dl
		mov    _0cdc18_data,%al
		sub    %eax,%edx
		mov    _0dfc5a_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		sar    %ebx
		add    $0x00005a,%eax
		sub    %ebx,%eax
		mov    %ax,_0dfc5e_data
		mov    _0cee2e_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x000081(%edx),%ah
		movl   $0x0000a0,0x000028(%edx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%edx)
		mov    0x000028(%edx),%eax
		mov    %ax,0x00003c(%edx)
		mov    _0cedf8_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    $0x000110,%ecx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		xor    %ebx,%ebx
		call   _0188d0_func
		mov    0x000068(%edx),%bl
		movw   $0x000000,0x000040(%edx)
		sub    %ebx,%ecx
		mov    _0cedf8_data,%ebx
		movw   $0x000000,0x000042(%edx)
		sar    $0x000010,%ebx
		mov    %ecx,0x000028(%edx)
		sub    $0x0000c8,%ebx
		mov    %cx,0x00003c(%edx)
		mov    %ebx,%ecx
		movl   $0x000001,0x000024(%edx)
		xor    %bl,%cl
		mov    %ebx,0x00002c(%edx)
		mov    %cl,_0dfc68_data
		mov    0x000081(%edx),%ch
		mov    %bx,0x00003e(%edx)
		or     $0x000004,%ch
		mov    %ch,0x000081(%edx)
		xor    %edx,%edx
		mov    _0cdbcc_data,%ecx
		mov    _0cdc0c_data,%dl
		add    $0x000008,%ecx
		lea    (%edx,%ecx,1),%esi
		mov    _0cee0e_data,%ecx
		mov    %ax,_0dfc5c_data
		sar    $0x000010,%ecx
		xor    %edx,%edx
		sub    %ecx,%esi
		xor    %ecx,%ecx
		mov    _0cdc18_data,%dl
		mov    _0cdc0d_data,%cl
		cwtl   
		sub    %edx,%ecx
		sub    %ecx,%eax
		sar    %esi
		sub    $0x000046,%eax
		add    %esi,%eax
		mov    %ax,_0dfc60_data
		mov    _0cee1c_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		movl   $0x000001,0x000024(%edx)
		mov    0x000081(%edx),%al
		mov    %ebx,0x00002c(%edx)
		or     $0x00000c,%al
		mov    %al,0x000081(%edx)
		xor    %eax,%eax
		mov    $0x000020,%ecx
		mov    0x000068(%edx),%al
		mov    %bx,0x00003e(%edx)
		sub    %eax,%ecx
		mov    %ecx,0x000028(%edx)
		mov    %ebx,%eax
		mov    %cx,0x00003c(%edx)
		xor    %bh,%ah
		mov    _0ced80_data,%dl
		mov    %ah,_0dfc69_data
		or     $0x000001,%dl
		mov    _0cdc30_data,%eax
		mov    %dl,_0ced80_data
		movb   $0x000008,0x00006e(%eax)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03dd70_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cee2c_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		testb  $0x000002,_0ced81_data
		jne    _03dda4_jump
		mov    $_0cdba4_data,%eax
		call   _077338_func
		call   _058fac_func

	_03dda4_jump:
		orb    $0x000001,_0ced81_data
		mov    0x000081(%edx),%bh
		mov    _0cee0e_data,%eax
		or     $0x000004,%bh
		sar    $0x000010,%eax
		mov    %bh,0x000081(%edx)
		xor    %ebx,%ebx
		add    $0x0000a0,%eax
		mov    0x000068(%edx),%bl
		sub    %ebx,%eax
		mov    _0ced80_data,%cl
		mov    %eax,0x000028(%edx)
		mov    _0cedf8_data,%ebx
		mov    %ax,0x00003c(%edx)
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000069(%edx),%al
		movl   $0x000001,0x000024(%edx)
		sub    %eax,%ebx
		or     $0x000001,%cl
		mov    %ebx,0x00002c(%edx)
		mov    _0cdc30_data,%eax
		mov    %bx,0x00003e(%edx)
		mov    %cl,_0ced80_data
		movb   $0x000008,0x00006e(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03de10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		movb   $0x000001,_0cefbd_data
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		jb     _03de3d_jump
		jbe    _03de56_jump
		cmp    $0x000014,%al
		jb     _03df6e_jump
		jbe    _03de8f_jump
		cmp    $0x00001e,%al
		je     _03df4f_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03de3d_jump:
		movw   $0x000000,0x000040(%esi)
		xor    %ch,%ch
		movw   $0x00fff8,0x000042(%esi)
		mov    %ch,_0cefbd_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03de56_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _03de62_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _03de69_jump

	_03de62_jump:
		mov    %esi,%eax
		call   _01db14_func

	_03de69_jump:
		mov    $0xffff8300,%edx
		movw   $0x000000,0x000042(%esi)
		mov    %dx,_0ceda4_data
		mov    0x000042(%esi),%ax
		mov    %dx,_0ced9e_data
		mov    %ax,0x000040(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03de8f_jump:
		mov    %esi,%eax
		call   _01db14_func
		xor    %eax,%eax
		mov    _0cdbcc_data,%dx
		mov    _0cdc0c_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %dx,_0ceda4_data
		xor    %edx,%edx
		mov    $_0cdba4_data,%eax
		mov    0x000069(%esi),%dl
		call   _0188d0_func
		sub    %edx,%eax
		add    $0x000010,%eax
		mov    %ax,_0ced9e_data
		mov    0x000056(%esi),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000042(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbl (%edx,%eax,8),%ecx
		mov    _0ceda2_data,%edx
		mov    0x000028(%esi),%ebx
		sar    $0x000010,%edx
		sub    %ebx,%edx
		shl    $0x000012,%edx
		mov    $0x000037,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000001,%bl
		mov    $0x0000ff,%dl
		mov    %eax,_0cdb10_data
		test   %eax,%eax
		jge    _03df2b_jump
		neg    %eax

	_03df2b_jump:
		mov    %eax,_0cdb10_data
		mov    %dl,_0cefb8_data
		xor    %dh,%dh
		mov    %bl,_0cefbf_data
		mov    %dh,0x000071(%esi)
		mov    %dh,_0cefb9_data
		mov    %dh,0x000072(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03df4f_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0cefb9_data,%cl
		mov    _0cefb8_data,%bl
		mov    _0cefbf_data,%dl
		call   _018690_func

	_03df6e_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03df74_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%ecx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%ecx),%al
		testb  $0x000001,0x000007(%ebx,%eax,8)
		je     _03dfe2_jump
		cmp    $0x000003,%dx
		je     _03dfa3_jump
		cmp    $0x000006,%dx
		jne    _03dfe2_jump

	_03dfa3_jump:
		movb   $0x000001,_0cdcd3_data
		mov    %ecx,%eax
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _03dfcb_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _05f030_func
		pop    %ecx
		pop    %ebx
		ret    

	_03dfcb_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05f030_func
		movw   $0x000001,0x000050(%ecx)

	_03dfe2_jump:
		pop    %ecx
		pop    %ebx
		ret    



_03dfe8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cc300_data,%edx
		movw   $0x00ffff,0x000052(%eax)
		mov    _0cc304_data,%ax
		xor    %ebx,%ebx
		test   %ax,%ax
		jle    _03e062_jump

	_03e006_jump:
		cmpw   $0x0000e0,0x000060(%edx)
		jne    _03e056_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03e056_jump
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000040(%edx)
		call   _01db8c_func
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f304_func
		movw   $0x00ffff,0x000046(%edx)
		movw   $0x000000,0x000048(%edx)
		mov    %bx,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e056_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %ax,%bx
		jl     _03e006_jump

	_03e062_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e068_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		movb   $0x000001,_0cefbd_data
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x00006c(%ecx),%al
		add    %edx,%eax
		cmp    $0x000006,%eax
		jb     _03e0cc_jump
		jbe    _03e295_jump
		cmp    $0x00000b,%eax
		jb     _03e0b8_jump
		jbe    _03e27a_jump
		cmp    $0x00000d,%eax
		jb     _03e270_jump
		jbe    _03e270_jump
		cmp    $0x000100,%eax
		je     _03e0f8_jump
		jmp    _03e2b3_jump

	_03e0b8_jump:
		cmp    $0x000008,%eax
		jb     _03e270_jump
		jbe    _03e15d_jump
		jmp    _03e2b3_jump

	_03e0cc_jump:
		cmp    $0x000002,%eax
		jb     _03e0eb_jump
		jbe    _03e22a_jump
		cmp    $0x000004,%eax
		jb     _03e270_jump
		jbe    _03e226_jump
		jmp    _03e2b3_jump

	_03e0eb_jump:
		test   %eax,%eax
		jbe    _03e16f_jump
		jmp    _03e1b1_jump

	_03e0f8_jump:
		mov    0x00003a(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _03e129_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x008300,_0cedb6_data
		jmp    _03e150_jump

	_03e129_jump:
		mov    _0cedba_data,%ax
		mov    _0cdc11_data,%dl
		mov    %ax,_0cedb6_data
		cmp    $0x000003,%dl
		jne    _03e150_jump
		cmpb   $0x000014,_0cdc10_data
		jne    _03e150_jump
		orb    $0x000008,_0cdc25_data

	_03e150_jump:
		mov    %ecx,%eax
		call   _053ce4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e15d_jump:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e16f_jump:
		cmpb   $0x000000,_0cdcd2_data
		jne    _03e181_jump
		cmpb   $0x000002,_0cdc11_data
		jne    _03e18b_jump

	_03e181_jump:
		mov    $0x000005,%edx
		jmp    _03e2ac_jump

	_03e18b_jump:
		mov    0x00007f(%ecx),%ah
		test   %ah,%ah
		je     _03e19f_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,0x00007f(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e19f_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d364_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e1b1_jump:
		cmpb   $0x000000,_0cdcd2_data
		je     _03e20a_jump
		xor    %eax,%eax
		mov    _0cdbd0_data,%si
		mov    _0cdc0d_data,%al
		mov    0x00002c(%ecx),%di
		mov    %eax,%edx
		xor    %eax,%eax
		add    %esi,%edx
		mov    0x000069(%ecx),%al
		sub    %edi,%edx
		sub    %eax,%edx
		movswl %dx,%eax
		test   %eax,%eax
		jge    _03e1e2_jump
		neg    %eax

	_03e1e2_jump:
		cmp    $0x000030,%eax
		jl     _03e1ed_jump
		cmpb   $0x000009,0x00006b(%ecx)
		jbe    _03e181_jump

	_03e1ed_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d364_func
		mov    0x00000c(%ecx),%eax
		mov    (%eax),%eax
		mov    0x000052(%eax),%al
		mov    %al,0x00006a(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e20a_jump:
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _03e2b3_jump
		mov    %ecx,%eax
		call   _03dfe8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e226_jump:
		movb   $0x000032,0x00007f(%ecx)

	_03e22a_jump:
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpw   $0x000000,0x000040(%eax)
		jle    _03e2b3_jump
		mov    0x000028(%eax),%edx
		cmp    0x000028(%ecx),%edx
		jl     _03e2b3_jump
		movw   $0x00ffff,0x000052(%ecx)
		andb   $0x0000fb,0x000081(%eax)
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _01d364_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e270_jump:
		movb   $0x000032,0x00007f(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e27a_jump:
		cmpb   $0x000000,_0cdcd2_data
		jne    _03e2b3_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d364_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e295_jump:
		cmpb   $0x000002,_0cdc11_data
		je     _03e2b3_jump
		cmpb   $0x000000,_0cdcd2_data
		jne    _03e2b3_jump
		mov    $0x000007,%edx

	_03e2ac_jump:
		mov    %ecx,%eax
		call   _01d364_func

	_03e2b3_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e2bc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmp    $0x000006,%dx
		jne    _03e379_jump
		cmpb   $0x000000,_0cdcd1_data
		jne    _03e379_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _03e379_jump
		mov    $0x000001,%ch
		mov    %ebx,%eax
		mov    %ch,_0cdcd3_data
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ebx)
		je     _03e32f_jump
		cmpb   $0x000002,0x00006c(%ebx)
		jne    _03e320_jump
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d364_func
		pop    %ecx
		pop    %ebx
		ret    

	_03e320_jump:
		mov    $0x00000d,%edx
		mov    %ebx,%eax
		call   _01d364_func
		pop    %ecx
		pop    %ebx
		ret    

	_03e32f_jump:
		cmpb   $0x000002,0x00006c(%ebx)
		jne    _03e367_jump
		mov    0x000050(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,4)
		mov    0x000050(%ebx),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		call   _077338_func

	_03e367_jump:
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d364_func
		movw   $0x000001,0x000050(%ebx)

	_03e379_jump:
		pop    %ecx
		pop    %ebx
		ret    



_03e37c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x00006d(%eax)
		jne    _03e397_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _03e732_jump

	_03e397_jump:
		mov    _0cdbcc_data,%eax
		mov    0x000060(%esi),%bx
		add    $0x000008,%eax
		cmp    $0x0000e7,%bx
		jne    _03e52f_jump
		mov    _0dfc68_data,%dl
		test   %dl,%dl
		jne    _03e3fa_jump
		xor    %ebx,%ebx
		mov    _0cdc0c_data,%bl
		lea    (%ebx,%eax,1),%ecx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0cdc0d_data,%bl
		mov    _0cdc18_data,%al
		sub    %eax,%ebx
		mov    _0dfc5a_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		add    $0x00005a,%eax
		sub    %ecx,%eax
		mov    %ax,_0dfc5e_data
		jmp    _03e520_jump

	_03e3fa_jump:
		cmp    $0x000064,%dl
		jne    _03e51a_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%al
		add    %ebx,%eax
		mov    0x00002c(%esi),%edi
		sar    %eax
		add    %edi,%eax
		mov    %eax,%edi
		lea    0x000010(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		mov    $0x000008,%edx
		push   %eax
		lea    0x000010(%esp),%ebx
		mov    _0dfc2c_data,%eax
		call   _01d710_func
		mov    0x000002(%esp),%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _03e46e_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ebp
		mov    0x000074(%esi),%bl
		add    %ebp,%ebx
		sub    $0x00000a,%ebx
		cmp    %ebx,%eax
		jle    _03e46e_jump
		addw   $0x000032,_0dfc5e_data
		jmp    _03e51a_jump

	_03e46e_jump:
		cmp    0x000004(%esp),%di
		jge    _03e49a_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		mov    0x000002(%esp),%ebx
		add    %edx,%eax
		sar    $0x000010,%ebx
		add    $0x00000a,%eax
		cmp    %eax,%ebx
		jge    _03e49a_jump
		subw   $0x000032,_0dfc5e_data
		jmp    _03e51a_jump

	_03e49a_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000074(%esi),%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		sub    $0x00000a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03e4d6_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%bl
		add    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    $0x00000a,%ecx
		add    %ebx,%eax
		cmp    %ecx,%eax
		jge    _03e4d6_jump
		subw   $0x000050,_0dfc5e_data
		jmp    _03e51a_jump

	_03e4d6_jump:
		xor    %eax,%eax
		mov    _0cdbcc_data,%ecx
		mov    _0cdc0c_data,%al
		add    $0x000008,%ecx
		add    %eax,%ecx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0cdc0d_data,%bl
		mov    _0cdc18_data,%al
		sub    %eax,%ebx
		mov    _0dfc5a_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		add    $0x00005a,%eax
		sub    %ecx,%eax
		mov    %ax,_0dfc5e_data

	_03e51a_jump:
		decb   _0dfc68_data

	_03e520_jump:
		mov    0x00002c(%esi),%dx
		mov    _0dfc5e_data,%ax
		jmp    _03e6b6_jump

	_03e52f_jump:
		cmp    $0x0000e8,%bx
		jne    _03e6c0_jump
		mov    _0dfc69_data,%bh
		test   %bh,%bh
		jne    _03e586_jump
		xor    %ebx,%ebx
		mov    _0cdc0c_data,%bl
		lea    (%ebx,%eax,1),%ecx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0cdc0d_data,%bl
		mov    _0cdc18_data,%al
		sub    %eax,%ebx
		mov    _0dfc5a_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		sub    $0x000046,%eax
		add    %ecx,%eax
		mov    %ax,_0dfc60_data
		jmp    _03e6ac_jump

	_03e586_jump:
		cmp    $0x000064,%bh
		jne    _03e6a6_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%al
		add    %ebx,%eax
		mov    0x00002c(%esi),%edx
		sar    %eax
		add    %edx,%eax
		mov    %eax,%edi
		lea    0x000010(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000008,%edx
		mov    _0dfc30_data,%eax
		call   _01d710_func
		mov    0x000002(%esp),%ebx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _03e5fa_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000074(%esi),%bl
		add    %ecx,%ebx
		sub    $0x00000a,%ebx
		cmp    %ebx,%eax
		jle    _03e5fa_jump
		addw   $0x000032,_0dfc60_data
		jmp    _03e6a6_jump

	_03e5fa_jump:
		cmp    0x000004(%esp),%di
		jge    _03e626_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000069(%esi),%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		add    $0x00000a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _03e626_jump
		subw   $0x000032,_0dfc60_data
		jmp    _03e6a6_jump

	_03e626_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000074(%esi),%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		sub    $0x00000a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03e662_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%bl
		add    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    $0x00000a,%ecx
		add    %ebx,%eax
		cmp    %ecx,%eax
		jge    _03e662_jump
		subw   $0x000050,_0dfc60_data
		jmp    _03e6a6_jump

	_03e662_jump:
		xor    %eax,%eax
		mov    _0cdbcc_data,%ecx
		mov    _0cdc0c_data,%al
		add    $0x000008,%ecx
		add    %eax,%ecx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0cdc0d_data,%bl
		mov    _0cdc18_data,%al
		sub    %eax,%ebx
		mov    _0dfc5a_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		sub    $0x000046,%eax
		add    %ecx,%eax
		mov    %ax,_0dfc60_data

	_03e6a6_jump:
		decb   _0dfc69_data

	_03e6ac_jump:
		mov    0x00002c(%esi),%dx
		mov    _0dfc60_data,%ax

	_03e6b6_jump:
		add    $0x000096,%edx
		sub    %edx,%eax
		mov    %eax,%edx

	_03e6c0_jump:
		mov    _0cedf8_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%ebx
		add    $0x000032,%eax
		cmp    %ebx,%eax
		jge    _03e6d7_jump
		test   %dx,%dx
		jg     _03e6f0_jump

	_03e6d7_jump:
		mov    _0cedf8_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%ecx
		sub    $0x000096,%eax
		cmp    %ecx,%eax
		jle    _03e6f6_jump
		test   %dx,%dx
		jge    _03e6f6_jump

	_03e6f0_jump:
		xor    %edx,%edx
		mov    %dx,0x000042(%esi)

	_03e6f6_jump:
		test   %dx,%dx
		je     _03e732_jump
		mov    0x000040(%esi),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		sub    %ebx,%eax
		cmp    $0x000000,%eax
		je     _03e714_jump
		mov    $0x000001,%eax
		jg     _03e714_jump
		neg    %eax

	_03e714_jump:
		add    %eax,%ebx
		mov    $0x000030,%eax
		cmp    %ebx,%eax
		jle    _03e721_jump
		mov    %ebx,%eax

	_03e721_jump:
		mov    %eax,%ebx
		mov    $0xffffffd0,%eax
		cmp    %ebx,%eax
		jge    _03e72e_jump
		mov    %ebx,%eax

	_03e72e_jump:
		mov    %ax,0x000042(%esi)

	_03e732_jump:
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000005,%edx
		mov    $_0cdba4_data,%eax
		call   _01d710_func
		addw   $0x00000f,0x00000c(%esp)
		mov    0x00002c(%esi),%dx
		mov    0x00006c(%esi),%bh
		add    $0x000096,%edx
		test   %bh,%bh
		jne    _03e793_jump
		mov    0x00000a(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		lea    -0x00000f(%eax),%ecx
		cmp    %ecx,%ebx
		jle    _03e793_jump
		add    $0x00000f,%eax
		cmp    %eax,%ebx
		jge    _03e793_jump
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _01d364_func
		jmp    _03e83b_jump

	_03e793_jump:
		mov    0x00006c(%esi),%cl
		cmp    $0x000006,%cl
		je     _03e7a0_jump
		cmp    $0x000004,%cl
		jne    _03e7ce_jump

	_03e7a0_jump:
		mov    0x00000a(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		lea    -0x000014(%eax),%ecx
		cmp    %ecx,%ebx
		jl     _03e7b8_jump
		add    $0x000014,%eax
		cmp    %eax,%ebx
		jle    _03e7ce_jump

	_03e7b8_jump:
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d364_func
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e7ce_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%al
		je     _03e7d9_jump
		cmp    $0x000006,%al
		jne    _03e807_jump

	_03e7d9_jump:
		mov    0x00000a(%esp),%eax
		movswl %dx,%ebx
		sar    $0x000010,%eax
		lea    -0x000007(%ebx),%ecx
		cmp    %ecx,%eax
		jle    _03e807_jump
		add    $0x000007,%ebx
		cmp    %ebx,%eax
		jge    _03e807_jump
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d364_func
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e807_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x000003,%dl
		jne    _03e83b_jump
		cmp    0x00006b(%esi),%dl
		jne    _03e83b_jump
		mov    %esi,%eax
		call   _03e95c_func
		cmpw   $0x0000e7,0x000060(%esi)
		jne    _03e834_jump
		movb   $0x000064,_0dfc69_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e834_jump:
		movb   $0x000064,_0dfc68_data

	_03e83b_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e848_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006c(%eax)
		je     _03e957_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _03e957_jump
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		cmpb   $0x000001,0x00006c(%edx,%eax,4)
		je     _03e957_jump
		decb   0x000076(%ecx)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    0x000076(%ecx),%al
		mov    %al,0x000076(%edx)
		test   %al,%al
		je     _03e8ae_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_03e8ae_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000001,0x000050(%ecx)
		mov    0x000081(%ecx),%ah
		mov    0x000050(%ecx),%edx
		and    $0x0000ef,%ah
		sar    $0x000010,%edx
		mov    %ah,0x000081(%ecx)
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0x000002,%ebx
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		movw   $0x00ff80,0x000042(%ecx)
		add    %edx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000040(%ecx)
		call   _01d374_func
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		movw   $0x00ff80,0x000042(%edx,%eax,4)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movw   $0x000000,0x000040(%edx,%eax,4)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		andb   $0x0000ef,0x000081(%edx,%eax,4)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movw   $0x000001,0x000050(%edx,%eax,4)

	_03e957_jump:
		pop    %ecx
		pop    %ebx
		ret    



_03e95c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cc300_data,%edx
		mov    _0cc304_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _03ea26_jump

	_03e979_jump:
		cmpw   $0x0000e9,0x000060(%edx)
		jne    _03ea16_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03ea16_jump
		movb   $0x000004,0x00007e(%edx)
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		cmpw   $0x0000e7,0x000060(%ecx)
		jne    _03e9cc_jump
		mov    0x000081(%edx),%bl
		movw   $0x00fffb,0x000040(%edx)
		and    $0x0000f7,%bl
		mov    %edx,_0dfc30_data
		mov    %bl,0x000081(%edx)
		jmp    _03e9e7_jump

	_03e9cc_jump:
		mov    0x000081(%edx),%ah
		movw   $0x000005,0x000040(%edx)
		or     $0x000008,%ah
		mov    %edx,_0dfc2c_data
		mov    %ah,0x000081(%edx)

	_03e9e7_jump:
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%edx)
		call   _01f304_func
		mov    0x000052(%ecx),%ax
		mov    %ax,0x000052(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ea16_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _03e979_jump

	_03ea26_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ea2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%edi
		mov    0x000050(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x000060(%eax),%dx
		cmp    $0x0000e7,%dx
		je     _03ea65_jump
		cmp    $0x0000e8,%dx
		jne    _03eb85_jump

	_03ea65_jump:
		mov    0x000050(%edi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%ebp
		shl    $0x000002,%eax
		add    %eax,%ebp
		mov    %ebp,%edx
		mov    %edi,%eax
		call   _03ec54_func
		test   %ax,%ax
		je     _03eb85_jump
		mov    _0cc300_data,%esi
		mov    _0cc304_data,%ax
		xor    %ebx,%ebx
		test   %ax,%ax
		jle    _03eb66_jump

	_03eaa6_jump:
		cmpw   $0x00000b,0x000060(%esi)
		jne    _03eb56_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _03eb56_jump
		lea    0x000010(%esp),%eax
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %edi,%eax
		call   _01d294_func
		lea    0x000014(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000018(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		movb   $0x000000,0x00006b(%esi)
		xor    %eax,%eax
		mov    0x000002(%esp),%edx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		cmpw   $0x000000,0x000040(%edi)
		jle    _03eb12_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ebx
		mov    %ebx,0x000028(%esi)

	_03eb12_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%al
		mov    0x000074(%esi),%dl
		lea    (%eax,%edx,1),%ebx
		mov    0x00000e(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		sar    %ebx
		add    %edx,%eax
		sub    %ebx,%eax
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		call   _01db8c_func
		orb    $0x000004,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f304_func
		jmp    _03eb66_jump

	_03eb56_jump:
		inc    %ebx
		add    $0x000084,%esi
		cmp    %ax,%bx
		jl     _03eaa6_jump

	_03eb66_jump:
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _03e848_func
		mov    0x000081(%edi),%dl
		movl   $0x000000,0x000024(%edi)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%edi)

	_03eb85_jump:
		cmpw   $0x000000,0x000042(%edi)
		jne    _03ec2b_jump
		mov    _0ce4b2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cc300_data,%ebx
		add    %edx,%eax
		mov    _0ce57c_data,%cx
		shl    $0x000002,%eax
		xor    %esi,%esi
		add    %eax,%ebx
		test   %cx,%cx
		jle    _03ec2b_jump

	_03ebbd_jump:
		cmpw   $0x0000e9,0x000060(%ebx)
		jne    _03ec07_jump
		mov    0x000034(%ebx),%ax
		cmp    0x000034(%edi),%ax
		je     _03ec07_jump
		mov    %ebx,%edx
		mov    %edi,%eax
		call   _03ec54_func
		test   %ax,%ax
		je     _03ec07_jump
		movw   $0x000000,0x000040(%ebx)
		movw   $0x000000,0x000040(%edi)
		movw   $0x000003,0x000042(%ebx)
		movw   $0x000003,0x000042(%edi)
		mov    0x000034(%ebx),%ax
		mov    %ax,0x000052(%edi)
		mov    0x000034(%edi),%ax
		mov    %ax,0x000052(%ebx)
		jmp    _03ec2b_jump

	_03ec07_jump:
		inc    %esi
		movswl %si,%ebx
		mov    _0ce4b2_data(,%ebx,2),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0cc300_data,%eax
		add    %eax,%ebx
		cmp    _0ce57c_data,%si
		jl     _03ebbd_jump

	_03ec2b_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ec38_func:
		push   %edx
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    



_03ec54_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,%edi
		xor    %edx,%edx
		call   _02ad18_func
		mov    %eax,%ebp
		mov    %eax,(%esp)
		xor    %edx,%edx
		mov    %edi,%eax
		lea    0x000014(%esp),%ecx
		call   _02ad18_func
		mov    %eax,%esi
		lea    0x00000c(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000007(%ebp),%dl
		mov    0x00000c(%esp),%eax
		call   _01d710_func
		lea    0x00000c(%esp),%eax
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000024(%esp),%ecx
		push   %eax
		mov    %esi,%eax
		xor    %edx,%edx
		lea    0x000018(%esp),%ebx
		mov    0x000007(%eax),%dl
		mov    %edi,%eax
		call   _01d710_func
		mov    0x000004(%esp),%eax
		testb  $0x000008,0x000081(%eax)
		jne    _03ecd7_jump
		mov    0x000018(%esp),%ecx
		mov    0x000000(%ebp),%ax
		add    %eax,%ecx
		mov    %cx,0x000018(%esp)
		jmp    _03ecf3_jump

	_03ecd7_jump:
		xor    %eax,%eax
		mov    0x000000(%ebp),%dx
		mov    0x000004(%ebp),%al
		mov    0x00001c(%esp),%ebx
		add    %edx,%eax
		mov    0x000018(%esp),%edx
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %dx,0x000018(%esp)

	_03ecf3_jump:
		testb  $0x000008,0x000081(%edi)
		jne    _03ed0c_jump
		mov    0x000010(%esp),%ecx
		mov    (%esi),%ax
		add    %eax,%ecx
		mov    %cx,0x000010(%esp)
		jmp    _03ed27_jump

	_03ed0c_jump:
		mov    0x000010(%esp),%edx
		mov    0x000008(%esp),%ebx
		xor    %eax,%eax
		mov    (%esi),%di
		mov    0x000004(%esi),%al
		add    %ebx,%edx
		add    %edi,%eax
		sub    %eax,%edx
		mov    %dx,0x000010(%esp)

	_03ed27_jump:
		mov    (%esp),%eax
		mov    0x000014(%esp),%edi
		mov    0x000002(%eax),%ax
		add    %eax,%edi
		mov    %di,0x000014(%esp)
		mov    0x000020(%esp),%edx
		mov    0x000002(%esi),%ax
		add    %eax,%edx
		mov    %dx,0x000020(%esp)
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		push   %eax
		xor    %eax,%eax
		mov    0x000004(%esi),%al
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		push   %eax
		mov    0x000010(%esp),%eax
		xor    %ebx,%ebx
		mov    0x000022(%esp),%edx
		mov    0x000005(%eax),%cl
		mov    0x000004(%eax),%bl
		mov    0x000026(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03ed90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0cc300_data,%eax
		mov    _0cc304_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _03ee2c_jump

	_03edae_jump:
		cmpw   $0x000020,0x000060(%eax)
		jne    _03ee21_jump
		mov    0x000024(%eax),%esi
		test   %esi,%esi
		jne    _03ee21_jump
		mov    0x000028(%ecx),%edx
		mov    %edx,0x000028(%eax)
		mov    %dx,0x00003c(%eax)
		mov    0x00002c(%ecx),%edx
		movw   $0x000000,0x000040(%eax)
		mov    %edx,0x00002c(%eax)
		mov    %dx,0x00003e(%eax)
		mov    $0x000026,%ebx
		mov    0x000081(%eax),%dl
		movw   $0x000000,0x000042(%eax)
		or     $0x000004,%dl
		xor    %edi,%edi
		mov    %dl,0x000081(%eax)
		xor    %edx,%edx
		movl   $0x000001,0x000024(%eax)
		call   _01d374_func
		mov    %ecx,_0dfbc4_data
		mov    0x000081(%ecx),%dh
		mov    %esi,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %di,_0dfc46_data
		mov    %dh,0x000081(%ecx)
		jmp    _03ee2c_jump

	_03ee21_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %bx,%dx
		jl     _03edae_jump

	_03ee2c_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ee34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cefdc_data
		je     _03ef48_jump
		movb   $0x000001,_094eb8_data
		testb  $0x000080,_0ced88_data
		je     _03ef0e_jump
		cmpb   $0x000000,_0cef99_data
		jne    _03ef48_jump
		cmpw   $0x000000,_0cee1c_data
		jne    _03eebe_jump
		mov    _0cee20_data,%di
		cmp    $0x000042,%di
		jle    _03ee96_jump
		mov    $0x000001,%ecx
		mov    %di,_0cee18_data
		mov    %cx,_0cee1c_data
		jmp    _03ef48_jump

	_03ee96_jump:
		cmp    $0x000028,%di
		jle    _03eead_jump
		mov    %edi,%ebx
		add    $0x000004,%ebx
		mov    %bx,_0cee20_data
		jmp    _03ef48_jump

	_03eead_jump:
		mov    %edi,%edx
		add    $0x000002,%edx
		mov    %dx,_0cee20_data
		jmp    _03ef48_jump

	_03eebe_jump:
		mov    _0cee14_data,%eax
		sar    $0x000010,%eax
		mov    $0x000007,%cl
		mov    _0948fc_data(,%eax,2),%ax
		test   %ax,%ax
		js     _03eeda_jump
		sar    %cl,%ax
		jmp    _03eee3_jump

	_03eeda_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03eee3_jump:
		cmp    $0x0000ff,%ax
		je     _03ef48_jump
		mov    _0cee20_data,%cx
		mov    _0cee16_data,%si
		add    %eax,%ecx
		inc    %esi
		mov    %cx,_0cee20_data
		mov    %si,_0cee16_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ef0e_jump:
		push   $0x000000
		mov    $_0dfbc8_data,%eax
		mov    _0dfc4c_data,%ecx
		mov    _0dfc3e_data,%ebx
		mov    _0dfc3c_data,%edx
		push   $0x000002
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01a5b8_func
		cmpb   $0x000000,_0cefb6_data
		jne    _03ef48_jump
		addw   $0x000003,_0dfc4e_data

	_03ef48_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_03ef50_switch:
		.long   _03f017_case
		.long   _03f051_case
		.long   _03f129_case
		.long   _03f189_case
		.long   _03f1c3_case
		.long   _03f225_case
		.long   _03f2ab_case
		.long   _03f381_case
		.long   _03f3da_case
		.long   _03f420_case
		.long   _03f4ab_case
		.long   _03f506_case




_03ef80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x00006d(%eax),%ah
		test   %ah,%ah
		jne    _03effa_jump
		cmpb   $0x000026,0x00006c(%esi)
		jne    _03effa_jump
		mov    %ah,_0dfc63_data
		mov    %ah,_0dfc67_data
		mov    %ah,_0cefdc_data
		xor    %dh,%dh
		xor    %bl,%bl
		xor    %cl,%cl
		mov    _0ced80_data,%bh
		mov    _0dfbc4_data,%eax
		xor    %dl,%dl
		xor    %ch,%ch
		mov    %dx,_0dfc46_data
		and    $0x0000fe,%bh
		mov    %cx,_0cedba_data
		mov    %dh,_0dfc62_data
		movl   $0x000000,0x000024(%eax)
		mov    %bh,_0ced80_data
		mov    0x000081(%eax),%ch
		xor    %bh,%bh
		and    $0x0000fb,%ch
		mov    %bx,_0cedc8_data
		mov    %ch,0x000081(%eax)

	_03effa_jump:
		mov    _0dfc46_data,%ax
		cmp    $0x00000b,%ax
		ja     _03f645_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_03ef50_switch(,%eax,4)

	_03f017_case:
		mov    _0dfc63_data,%ch
		test   %ch,%ch
		jne    _03f03a_jump
		mov    $0x000001,%ah
		mov    $0x00001e,%edx
		mov    %ah,_0dfc63_data
		mov    %esi,%eax
		call   _01d364_func
		jmp    _03f645_jump

	_03f03a_jump:
		cmp    $0x000002,%ch
		jne    _03f645_jump
		movw   $0x000001,_0dfc46_data
		jmp    _03f645_jump

	_03f051_case:
		mov    _0dfc67_data,%ch
		test   %ch,%ch
		jne    _03f074_jump
		mov    $0x000001,%cl
		mov    $0x00001f,%edx
		mov    %esi,%eax
		mov    %cl,_0dfc67_data
		call   _01d364_func
		jmp    _03f645_jump

	_03f074_jump:
		cmp    $0x000002,%ch
		jne    _03f645_jump
		mov    _0dfc42_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		mov    0x000070(%edx,%eax,4),%bl
		cmp    $0x00001e,%bl
		jne    _03f645_jump
		mov    _0dfc3a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		cmp    0x000070(%edx,%eax,4),%bl
		jne    _03f645_jump
		mov    _0dfc3a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		mov    $0x000002,%ecx
		add    %edx,%eax
		mov    %ecx,%edx
		call   _05f030_func
		mov    _0dfc42_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    $0x000001,%ecx
		add    %ebx,%eax
		mov    _0cc300_data,%ebx
		shl    $0x000002,%eax
		mov    $0x000002,%edx
		add    %ebx,%eax
		mov    %ecx,%ebx
		mov    $0x000002,%ecx
		call   _05f030_func
		mov    %cx,_0dfc46_data
		jmp    _03f645_jump

	_03f129_case:
		mov    _0dfc42_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		mov    0x000070(%edx,%eax,1),%bl
		cmp    $0x00001e,%bl
		jne    _03f645_jump
		mov    _0dfc3a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		cmp    0x000070(%edx,%eax,1),%bl
		jne    _03f645_jump
		mov    $0x000003,%ebx
		xor    %cl,%cl
		mov    %bx,_0dfc46_data
		mov    %cl,_0dfc63_data
		jmp    _03f645_jump

	_03f189_case:
		mov    _0dfc63_data,%bh
		test   %bh,%bh
		jne    _03f1ac_jump
		mov    $0x000001,%ch
		mov    $0x00001e,%edx
		mov    %esi,%eax
		mov    %ch,_0dfc63_data
		call   _01d364_func
		jmp    _03f645_jump

	_03f1ac_jump:
		cmp    $0x000002,%bh
		jne    _03f645_jump
		movw   $0x000004,_0dfc46_data
		jmp    _03f645_jump

	_03f1c3_case:
		mov    _0dfc3a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000003,%edx
		call   _05f030_func
		mov    _0dfc42_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000003,%edx
		call   _05f030_func
		movw   $0x000005,_0dfc46_data
		jmp    _03f645_jump

	_03f225_case:
		mov    _0dfc42_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		mov    _0cc300_data,%ebx
		add    %edi,%eax
		mov    0x000070(%ebx,%eax,4),%cl
		cmp    $0x00001e,%cl
		jne    _03f29f_jump
		mov    _0dfc3a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		cmp    0x000070(%ebx,%eax,4),%cl
		jne    _03f29f_jump
		mov    _0dfc63_data,%ah
		test   %ah,%ah
		jne    _03f27d_jump
		mov    $0x000001,%bl
		mov    $0x00001e,%edx
		mov    %esi,%eax
		mov    %bl,_0dfc63_data
		call   _01d364_func
		jmp    _03f645_jump

	_03f27d_jump:
		cmp    $0x000002,%ah
		jne    _03f645_jump
		mov    $0x000006,%edi
		xor    %dh,%dh
		mov    %di,_0dfc46_data
		mov    %dh,_0dfc63_data
		jmp    _03f645_jump

	_03f29f_jump:
		xor    %al,%al
		mov    %al,_0dfc63_data
		jmp    _03f645_jump

	_03f2ab_case:
		mov    _0dfc63_data,%ch
		test   %ch,%ch
		jne    _03f322_jump
		mov    _0dfc3a_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		add    %edi,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000002,%edx
		call   _05f030_func
		mov    _0dfc42_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		add    %edi,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000002,%edx
		call   _05f030_func
		mov    $0x000001,%bh
		mov    $0x00001e,%edx
		mov    %esi,%eax
		mov    %bh,_0dfc63_data
		call   _01d364_func
		jmp    _03f645_jump

	_03f322_jump:
		cmp    $0x000002,%ch
		jne    _03f645_jump
		mov    _0dfc42_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cc300_data,%ecx
		add    %edx,%eax
		mov    0x000070(%ecx,%eax,4),%dl
		cmp    $0x00001e,%dl
		jne    _03f645_jump
		mov    _0dfc3a_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		cmp    0x000070(%ecx,%eax,4),%dl
		jne    _03f645_jump
		mov    $0x000007,%ecx
		xor    %bl,%bl
		mov    %cx,_0dfc46_data
		mov    %bl,_0dfc63_data
		jmp    _03f645_jump

	_03f381_case:
		cmpb   $0x000021,0x00006c(%esi)
		je     _03f3a8_jump
		mov    $0x000021,%edx
		mov    %esi,%eax
		mov    $0x000001,%bl
		call   _01d364_func
		xor    %dh,%dh
		mov    %bl,_0cefdc_data
		mov    %dh,_0dfc64_data
		jmp    _03f645_jump

	_03f3a8_jump:
		cmpb   $0x000002,_0dfc64_data
		jne    _03f645_jump
		mov    $0x000020,%edx
		mov    %esi,%eax
		mov    $0x000008,%ebx
		call   _01d364_func
		xor    %cl,%cl
		mov    %bx,_0dfc46_data
		mov    %cl,_0cefdc_data
		jmp    _03f645_jump

	_03f3da_case:
		mov    _0dfc42_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000004,%edx
		call   _05f030_func
		mov    $0x000009,%eax
		mov    $0xffffffff,%edx
		mov    %ax,_0dfc46_data
		mov    %dx,_0dfc38_data
		jmp    _03f645_jump

	_03f420_case:
		testb  $0x000001,_0ced80_data
		je     _03f437_jump
		movw   $0x00000a,_0dfc46_data
		jmp    _03f645_jump

	_03f437_jump:
		mov    _0dfc36_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _03f645_jump
		mov    _0dfc42_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    _0cc300_data,%edx
		add    %ebx,%eax
		cmpw   $0x000004,0x000040(%edx,%eax,4)
		jne    _03f645_jump
		call   _03ffe0_func
		mov    _0cdc30_data,%eax
		mov    0x000028(%eax),%dx
		add    $0x000040,%edx
		mov    %dx,_0dfc38_data
		mov    0x00002c(%eax),%dx
		add    $0x000032,%edx
		mov    0x000028(%eax),%ax
		mov    %dx,_0dfc34_data
		add    $0x000030,%eax
		mov    %dx,_0dfc36_data
		mov    %ax,_0dfc3a_data
		jmp    _03f645_jump

	_03f4ab_case:
		mov    _0dfc42_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		mov    $0x000004,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    _0dfc3a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		mov    $0x000004,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x00000b,_0dfc46_data
		jmp    _03f645_jump

	_03f506_case:
		cmpb   $0x000001,_0dfc62_data
		jne    _03f588_jump
		mov    _0cdbf6_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _03f588_jump
		cmpb   $0x000003,_0cdc11_data
		jne    _03f54f_jump
		cmpb   $0x000017,_0cdc10_data
		je     _03f556_jump

	_03f54f_jump:
		mov    $0x000001,%eax
		jmp    _03f558_jump

	_03f556_jump:
		xor    %eax,%eax

	_03f558_jump:
		test   %eax,%eax
		je     _03f588_jump
		mov    $0x000002,%bh
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		mov    %bh,_0dfc62_data
		mov    $0x000017,%ebx
		xor    %edi,%edi
		call   _01d374_func
		mov    %di,_0cdbe4_data
		mov    %di,_0cdbe6_data

	_03f588_jump:
		mov    _0dfc42_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    0x000024(%eax),%edx
		test   %edx,%edx
		jne    _03f617_jump
		jne    _03f617_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _03f5bf_jump
		cmpb   $0x000022,0x00006c(%esi)
		je     _03f5d2_jump

	_03f5bf_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _03f5cb_jump
		cmpb   $0x000001,0x00006c(%esi)
		je     _03f5d2_jump

	_03f5cb_jump:
		mov    $0x000001,%eax
		jmp    _03f5d4_jump

	_03f5d2_jump:
		xor    %eax,%eax

	_03f5d4_jump:
		test   %eax,%eax
		je     _03f617_jump
		cmpb   $0x000003,_0cdc11_data
		jne    _03f5ea_jump
		cmpb   $0x000017,_0cdc10_data
		je     _03f5f1_jump

	_03f5ea_jump:
		mov    $0x000001,%eax
		jmp    _03f5f3_jump

	_03f5f1_jump:
		xor    %eax,%eax

	_03f5f3_jump:
		test   %eax,%eax
		je     _03f617_jump
		cmpb   $0x000002,_0dfc62_data
		jne    _03f617_jump
		mov    $0x000022,%ebx
		xor    %al,%al
		xor    %edx,%edx
		mov    %al,_0dfc62_data
		mov    %esi,%eax
		call   _01d374_func
		jmp    _03f645_jump

	_03f617_jump:
		cmpb   $0x000004,0x00006b(%esi)
		jne    _03f645_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _03f645_jump
		cmpb   $0x000022,0x00006c(%esi)
		jne    _03f645_jump
		mov    $0x00000c,%edx
		mov    _0dfbc4_data,%eax
		movw   $0x00fffc,0x000042(%esi)
		mov    %dx,_0dfc46_data
		call   _0338bc_func

	_03f645_jump:
		mov    0x00006d(%esi),%dl
		test   %dl,%dl
		jne    _03f91d_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00001f,%al
		jb     _03f666_jump
		jbe    _03f673_jump
		cmp    $0x000021,%al
		je     _03f807_jump
		jmp    _03f91d_jump

	_03f666_jump:
		cmp    $0x00001e,%al
		je     _03f71c_jump
		jmp    _03f91d_jump

	_03f673_jump:
		cmpb   $0x000016,0x00006b(%esi)
		jne    _03f91d_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $0x000003,%edx
		push   %eax
		mov    %esi,%eax
		xor    %edi,%edi
		call   _01d710_func
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    $0xfffffff1,%ecx
		add    %edx,%eax
		mov    %di,_0dfc58_data
		sub    $0x000060,%eax
		mov    %di,_0dfc56_data
		mov    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    %cx,_0dfc42_data
		sar    %eax
		mov    %cx,_0dfc5a_data
		add    %ebx,%eax
		mov    $0x000001,%ecx
		sub    $0x000080,%eax
		movswl %dx,%esi
		movswl %ax,%edi
		mov    $0x000025,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _03fcd8_func
		mov    $0x000025,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   _03fcd8_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f71c_jump:
		cmpb   $0x000016,0x00006b(%esi)
		jne    _03f91d_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $0x000003,%edx
		push   %eax
		mov    %esi,%eax
		mov    $0xfffffff0,%edi
		call   _01d710_func
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		mov    $0xffffffb4,%ebx
		mov    $0x000001,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    %di,_0dfc58_data
		add    %edx,%eax
		mov    %bx,_0dfc42_data
		sub    $0x000060,%eax
		mov    $0x000001,%bl
		mov    %ax,_0dfc48_data
		mov    %ax,_0dfc4a_data
		mov    -0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    %bl,_0dfc66_data
		add    %edx,%eax
		mov    $0x000023,%ebx
		sub    $0x000080,%eax
		mov    $0x00004c,%edx
		mov    %ax,_0dfc50_data
		mov    %ax,_0dfc52_data
		mov    %dx,_0dfc5a_data
		xor    %dh,%dh
		mov    _0dfc48_data,%eax
		mov    %dh,_0dfc65_data
		mov    _0dfc50_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    %di,_0dfc56_data
		call   _03fcd8_func
		mov    $0x000023,%ebx
		mov    _0dfc4e_data,%edx
		mov    _0dfc46_data,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03fcd8_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f807_jump:
		mov    _0dfc64_data,%dh
		test   %dh,%dh
		jne    _03f873_jump
		mov    $_0dfbc8_data,%edi
		mov    $0x0000a0,%edx
		mov    $0xfffffff6,%ebx
		mov    _0c2534_data,%esi
		mov    $0x000028,%ecx
		push   %edi

	_03f82c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03f844_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03f82c_jump

	_03f844_jump:
		pop    %edi
		mov    $0x000001,%al
		mov    %dx,_0dfc3e_data
		mov    %bx,_0dfc40_data
		xor    %esi,%esi
		mov    %cx,_0dfc4c_data
		mov    %si,_0dfc4e_data
		mov    %al,_0dfc64_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f873_jump:
		mov    _0dfc3e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffec,%eax
		jge    _03f8c5_jump
		mov    $0x0000a0,%esi
		mov    $0xfffffff6,%edi
		mov    $0x000028,%eax
		xor    %ecx,%ecx
		mov    %dl,_0cefdc_data
		mov    %cx,_0dfc4e_data
		mov    %si,_0dfc3e_data
		mov    %dh,%ch
		mov    %di,_0dfc40_data
		inc    %ch
		mov    %ax,_0dfc4c_data
		mov    %ch,_0dfc64_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f8c5_jump:
		mov    $0x000004,%cl
		mov    _0dfc4c_data,%ax
		test   %ax,%ax
		js     _03f8d7_jump
		sar    %cl,%ax
		jmp    _03f8e0_jump

	_03f8d7_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03f8e0_jump:
		mov    _0dfc40_data,%dx
		mov    _0dfc4c_data,%bx
		add    %eax,%edx
		mov    _0dfc4c_data,%ax
		mov    %dx,_0dfc40_data
		dec    %eax
		test   %bx,%bx
		je     _03f90e_jump
		cmpb   $0x000000,_0cef51_data
		jne    _03f91d_jump
		jmp    _03f917_jump

	_03f90e_jump:
		cmpb   $0x000000,_0cef53_data
		jne    _03f91d_jump

	_03f917_jump:
		mov    %ax,_0dfc4c_data

	_03f91d_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f928_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000076(%eax)
		je     _03fccc_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000023,%dl
		je     _03f94e_jump
		cmp    $0x000024,%dl
		jne    _03fb1b_jump

	_03f94e_jump:
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%edx
		neg    %eax
		cmp    %edx,%eax
		jle    _03f96d_jump
		mov    $0x000002,%ch
		movb   $0x000000,0x000076(%esi)
		mov    %ch,_0dfc63_data
		jmp    _03fccc_jump

	_03f96d_jump:
		cmpw   $0x000000,0x000056(%esi)
		je     _03fa4f_jump
		cmpb   $0x000000,_0dfc65_data
		je     _03f9a2_jump
		mov    _0dfc5a_data,%cx
		add    $0x000003,%ecx
		mov    %cx,_0dfc5a_data
		cmp    $0x00004c,%cx
		jle    _03f9be_jump
		xor    %bh,%bh
		mov    %bh,_0dfc65_data
		jmp    _03f9be_jump

	_03f9a2_jump:
		subw   $0x000003,_0dfc5a_data
		mov    _0dfc58_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffb4,%eax
		jge    _03f9be_jump
		movb   $0x000001,_0dfc65_data

	_03f9be_jump:
		mov    $0x000004,%cl
		mov    _0dfc56_data,%ax
		test   %ax,%ax
		js     _03f9d0_jump
		sar    %cl,%ax
		jmp    _03f9d9_jump

	_03f9d0_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03f9d9_jump:
		mov    _0dfc4a_data,%dx
		mov    $0x000004,%cl
		add    %eax,%edx
		mov    _0dfc5a_data,%ax
		mov    %dx,_0dfc4a_data
		test   %ax,%ax
		js     _03f9fb_jump
		sar    %cl,%ax
		jmp    _03fa04_jump

	_03f9fb_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03fa04_jump:
		mov    _0dfc52_data,%bx
		add    %eax,%ebx
		mov    0x00006b(%esi),%cl
		mov    %bx,_0dfc52_data
		cmp    $0x000001,%cl
		jne    _03fccc_jump
		mov    _0dfc50_data,%edx
		mov    _0dfc48_data,%eax
		mov    0x000054(%esi),%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x00006c(%esi),%bl
		call   _03fcd8_func
		movb   $0x000000,0x000076(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fa4f_jump:
		cmpb   $0x000000,_0dfc66_data
		je     _03fa79_jump
		mov    _0dfc42_data,%bx
		add    $0x000003,%ebx
		mov    %bx,_0dfc42_data
		cmp    $0x00004c,%bx
		jle    _03fa95_jump
		xor    %ah,%ah
		mov    %ah,_0dfc66_data
		jmp    _03fa95_jump

	_03fa79_jump:
		subw   $0x000003,_0dfc42_data
		mov    _0dfc40_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffb4,%eax
		jge    _03fa95_jump
		movb   $0x000001,_0dfc66_data

	_03fa95_jump:
		mov    $0x000004,%cl
		mov    _0dfc58_data,%ax
		test   %ax,%ax
		js     _03faa7_jump
		sar    %cl,%ax
		jmp    _03fab0_jump

	_03faa7_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03fab0_jump:
		mov    _0dfc48_data,%di
		mov    $0x000004,%cl
		add    %eax,%edi
		mov    _0dfc42_data,%ax
		mov    %di,_0dfc48_data
		test   %ax,%ax
		js     _03fad2_jump
		sar    %cl,%ax
		jmp    _03fadb_jump

	_03fad2_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03fadb_jump:
		add    %ax,_0dfc50_data
		cmpb   $0x000001,0x00006b(%esi)
		jne    _03fccc_jump
		mov    _0dfc4e_data,%edx
		mov    _0dfc46_data,%eax
		mov    0x000054(%esi),%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x00006c(%esi),%bl
		call   _03fcd8_func
		movb   $0x000000,0x000076(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fb1b_jump:
		cmp    $0x000025,%dl
		jne    _03fccc_jump
		cmpw   $0x000000,0x000056(%esi)
		je     _03fb3d_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%cx
		mov    0x000068(%esi),%al
		mov    $0x0000f0,%ebx
		add    %ecx,%eax
		jmp    _03fb4d_jump

	_03fb3d_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		mov    $0x000005,%ebx

	_03fb4d_jump:
		sub    %eax,%ebx
		movzbw 0x000069(%esi),%di
		add    0x00002c(%esi),%di
		mov    %esi,%eax
		call   _0188d0_func
		sub    %edi,%eax
		mov    %eax,%edi
		movswl %bx,%eax
		test   %eax,%eax
		jge    _03fb6c_jump
		neg    %eax

	_03fb6c_jump:
		mov    %eax,%edx
		movswl %di,%eax
		test   %eax,%eax
		jge    _03fb77_jump
		neg    %eax

	_03fb77_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		cmp    $0x00000a,%dx
		jge    _03fb9c_jump
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		movb   $0x000000,0x000076(%esi)
		call   _03fe84_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fb9c_jump:
		test   %dx,%dx
		jle    _03fbc8_jump
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    -0x000002(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edi

	_03fbc8_jump:
		cmpb   $0x000001,0x00006b(%esi)
		jne    _03fccc_jump
		cmpw   $0x000000,0x000056(%esi)
		je     _03fc44_jump
		mov    _0dfc54_data,%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _03fbf5_jump
		mov    $0x000001,%eax
		jg     _03fbf5_jump
		neg    %eax

	_03fbf5_jump:
		add    %ax,_0dfc56_data
		mov    _0dfc58_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _03fc18_jump
		mov    $0x000001,%eax
		jg     _03fc18_jump
		neg    %eax

	_03fc18_jump:
		mov    _0dfc5a_data,%bx
		add    %eax,%ebx
		mov    0x000054(%esi),%ecx
		mov    %bx,_0dfc5a_data
		mov    0x00002c(%esi),%dx
		mov    _0dfc5a_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0dfc56_data,%di
		jmp    _03fcae_jump

	_03fc44_jump:
		mov    _0dfc56_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _03fc61_jump
		mov    $0x000001,%eax
		jg     _03fc61_jump
		neg    %eax

	_03fc61_jump:
		add    %ax,_0dfc58_data
		mov    _0dfc40_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _03fc84_jump
		mov    $0x000001,%eax
		jg     _03fc84_jump
		neg    %eax

	_03fc84_jump:
		mov    _0dfc42_data,%bx
		add    %eax,%ebx
		mov    0x000054(%esi),%ecx
		mov    %bx,_0dfc42_data
		mov    0x00002c(%esi),%dx
		mov    _0dfc42_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0dfc58_data,%di

	_03fcae_jump:
		movswl %dx,%eax
		mov    0x000028(%esi),%dx
		xor    %ebx,%ebx
		add    %edi,%edx
		mov    0x00006c(%esi),%bl
		movswl %dx,%edi
		mov    %eax,%edx
		mov    %edi,%eax
		call   _03fcd8_func
		movb   $0x000000,0x000076(%esi)

	_03fccc_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03fcd8_func:
		push   %esi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %dx,(%esp)
		mov    %bx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%bx
		xor    %edx,%edx
		xor    %eax,%eax

	_03fcfd_jump:
		cmpw   $0x000021,0x000060(%ecx)
		jne    _03fd0f_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _03fd0f_jump
		mov    $0x000001,%edx

	_03fd0f_jump:
		add    $0x000084,%ecx
		inc    %eax
		test   %dx,%dx
		jne    _03fd20_jump
		cmp    %bx,%ax
		jl     _03fcfd_jump

	_03fd20_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		je     _03fd98_jump
		mov    %ecx,%ebp
		xor    %edx,%edx

	_03fd33_jump:
		cmpw   $0x000021,0x000060(%ecx)
		jne    _03fd45_jump
		cmpl   $0x000001,0x000024(%ecx)
		jne    _03fd45_jump
		mov    $0x000001,%edx

	_03fd45_jump:
		add    $0x000084,%ecx
		inc    %eax
		test   %dx,%dx
		jne    _03fd56_jump
		cmp    %bx,%ax
		jl     _03fd33_jump

	_03fd56_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		je     _03fd91_jump
		xor    %edx,%edx

	_03fd63_jump:
		cmpw   $0x000021,0x000060(%ecx)
		jne    _03fd75_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _03fd75_jump
		mov    $0x000001,%edx

	_03fd75_jump:
		add    $0x000084,%ecx
		inc    %eax
		test   %dx,%dx
		jne    _03fd86_jump
		cmp    %bx,%ax
		jl     _03fd63_jump

	_03fd86_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		jne    _03fd98_jump

	_03fd91_jump:
		mov    $0x000001,%edx
		mov    %ebp,%ecx

	_03fd98_jump:
		test   %dx,%dx
		je     _03fdf2_jump
		mov    0x000081(%ecx),%ah
		or     $0x000004,%ah
		mov    0x000024(%ecx),%ebp
		mov    %ah,0x000081(%ecx)
		test   %ebp,%ebp
		jne    _03fdba_jump
		mov    %ecx,%eax
		call   _01f304_func

	_03fdba_jump:
		movl   $0x000001,0x000024(%ecx)
		movswl %si,%eax
		movb   $0x000001,0x000076(%ecx)
		mov    %eax,0x000028(%ecx)
		mov    -0x000002(%esp),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    0x000004(%esp),%eax
		mov    0x000008(%esp),%bl
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d374_func

	_03fdf2_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %esi
		ret    



_03fdf8_func:
		push   %ebx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _03fe1d_jump
		cmpb   $0x000005,0x00006c(%eax)
		jne    _03fe1d_jump
		mov    0x000081(%eax),%bl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%eax)
		pop    %ebx
		ret    

	_03fe1d_jump:
		call   _02f088_func
		pop    %ebx
		ret    



_03fe24_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0cdbfa_data,%bx
		cmp    $0x00000a,%bx
		jge    _03fe64_jump
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		jne    _03fe53_jump
		mov    $0x000001,%eax
		call   _02d60c_func
		cmpw   $0x000003,_0cedb4_data
		je     _03fe81_jump
		jmp    _03fe78_jump

	_03fe53_jump:
		xor    %eax,%eax
		call   _02d60c_func
		mov    %bx,_0cdbfa_data
		pop    %edx
		pop    %ebx
		ret    

	_03fe64_jump:
		mov    $0x000001,%eax
		call   _02d60c_func
		cmpw   $0x000003,_0cedb4_data
		je     _03fe81_jump

	_03fe78_jump:
		movw   $0x00000a,_0cdbfa_data

	_03fe81_jump:
		pop    %edx
		pop    %ebx
		ret    



_03fe84_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    _0cc300_data,%edx
		mov    _0cc304_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jle    _03ffdc_jump

	_03fea1_jump:
		test   %bx,%bx
		jne    _03ff36_jump
		cmpw   $0x0000d1,0x000060(%edx)
		jne    _03ff36_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03ff36_jump
		movb   $0x000004,0x00007e(%edx)
		xor    %eax,%eax
		mov    $0x000005,%ebx
		mov    0x000068(%edx),%al
		movl   $0x000064,0x00002c(%edx)
		sub    %eax,%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%edx),%eax
		mov    %bx,0x00003c(%edx)
		xor    %ebx,%ebx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%bl
		call   _0188d0_func
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		cwtl   
		movl   $0x000001,0x000024(%edx)
		sub    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000081(%edx),%bl
		mov    %ax,0x00003e(%edx)
		or     $0x000004,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%edx)
		call   _01f304_func
		mov    0x000034(%edx),%ax
		mov    $0x000002,%bh
		mov    %ax,_0dfc44_data
		mov    %bh,_0dfc67_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ff36_jump:
		cmp    $0x000001,%bx
		jne    _03ffcc_jump
		cmpw   $0x0000d2,0x000060(%edx)
		jne    _03ffcc_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03ffcc_jump
		movb   $0x000004,0x00007e(%edx)
		xor    %eax,%eax
		mov    $0x0000f0,%ebx
		mov    0x000068(%edx),%al
		movl   $0x000064,0x00002c(%edx)
		sub    %eax,%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%edx),%eax
		mov    %bx,0x00003c(%edx)
		xor    %ebx,%ebx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%bl
		call   _0188d0_func
		cwtl   
		movw   $0x000000,0x000040(%edx)
		sub    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000042(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f304_func
		mov    0x000034(%edx),%ax
		mov    $0x000002,%dl
		mov    %ax,_0dfc3c_data
		mov    %dl,_0dfc67_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ffcc_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jl     _03fea1_jump

	_03ffdc_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ffe0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0xffffffff,%ecx
		mov    _0cc300_data,%edx
		mov    _0cc304_data,%si
		xor    %eax,%eax
		xor    %ebx,%ebx
		test   %si,%si
		jle    _04011a_jump

	_040003_jump:
		test   %ax,%ax
		jne    _040078_jump
		cmpw   $0x00006c,0x000060(%edx)
		jne    _040078_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _040078_jump
		movb   $0x000004,0x00007e(%edx)
		movl   $0x000140,0x000028(%edx)
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		movl   $0x000001,0x000024(%edx)
		mov    0x000028(%edx),%eax
		mov    0x000081(%edx),%cl
		mov    %ax,0x00003c(%edx)
		mov    _0cedf8_data,%eax
		or     $0x000004,%cl
		sar    $0x000010,%eax
		mov    %cl,0x000081(%edx)
		add    $0x000064,%eax
		mov    %eax,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    %ebx,%ecx
		call   _01f304_func
		movb   $0x000000,0x000076(%edx)
		mov    $0x000001,%eax
		movw   $0x000000,0x000050(%edx)
		jmp    _04010a_jump

	_040078_jump:
		cmp    $0x000001,%ax
		jne    _04010a_jump
		cmpw   $0x00006c,0x000060(%edx)
		jne    _04010a_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _04010a_jump
		movl   $0xffffffec,0x000028(%edx)
		mov    0x000028(%edx),%eax
		mov    %ax,0x00003c(%edx)
		mov    _0cedf8_data,%eax
		movb   $0x000004,0x00007e(%edx)
		sar    $0x000010,%eax
		movw   $0x000000,0x000040(%edx)
		add    $0x000064,%eax
		mov    %eax,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000042(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f304_func
		movb   $0x000001,0x000076(%edx)
		movw   $0x000000,0x000050(%edx)
		mov    %cx,0x000052(%edx)
		movswl %cx,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		mov    %bx,0x000052(%edx,%eax,1)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04010a_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %si,%bx
		jl     _040003_jump

	_04011a_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040120_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    0x000076(%eax),%ah
		test   %ah,%ah
		jne    _040158_jump
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%cx
		mov    _0dfc38_data,%di
		add    %ecx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		mov    _0dfc34_data,%bx
		add    %edx,%eax
		jmp    _04017e_jump

	_040158_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		mov    _0dfc3a_data,%di
		add    %edx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		mov    _0dfc36_data,%bx

	_04017e_jump:
		sub    %eax,%ebx
		cmpw   $0x000000,0x000050(%esi)
		je     _040317_jump
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    %edx,0x000004(%esp)
		cmpw   $0x000000,0x000050(%eax)
		je     _040317_jump
		cmpl   $0x000000,0x000024(%esi)
		je     _040221_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _040221_jump
		xor    %edx,%edx
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%dl
		mov    0x000028(%eax),%ebp
		add    %ecx,%edx
		mov    0x000068(%eax),%al
		add    %ebp,%edx
		and    $0x0000ff,%eax
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    _0cdc30_data,%edx
		sar    %eax
		mov    0x000068(%edx),%cl
		sub    %ecx,%eax
		mov    %eax,0x000028(%edx)
		mov    0x000050(%esi),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    0x000004(%esp),%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%cl
		add    %ebp,%ecx
		mov    0x00002c(%eax),%ebp
		mov    0x000069(%eax),%al
		add    %ebp,%ecx
		and    $0x0000ff,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		sar    %ecx
		jmp    _0402b8_jump

	_040221_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _040258_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		add    %eax,%ecx
		mov    _0cdc30_data,%eax
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ecx
		mov    %ecx,%edx
		mov    %ecx,0x000028(%eax)
		xor    %ecx,%edx
		mov    0x000069(%esi),%dl
		mov    0x00002c(%esi),%ecx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%ecx
		mov    %ecx,0x00002c(%eax)
		jmp    _0402c0_jump

	_040258_jump:
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _0402c0_jump
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    0x000028(%eax),%eax
		add    %edx,%eax
		mov    _0cdc30_data,%edx
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp
		mov    0x000068(%edx),%al
		sub    %eax,%ebp
		mov    %ebp,0x000028(%edx)
		mov    0x000050(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,(%esp)
		mov    (%esp),%ebp
		shl    $0x000005,%eax
		add    %ebp,%eax
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		mov    0x00002c(%ecx),%ecx
		add    %eax,%ecx
		xor    %eax,%eax

	_0402b8_jump:
		mov    0x000069(%edx),%al
		sub    %eax,%ecx
		mov    %ecx,0x00002c(%edx)

	_0402c0_jump:
		xor    %edx,%edx
		mov    _0cdbcc_data,%eax
		mov    _0cdc0c_data,%dl
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sar    %eax
		lea    (%edx,%eax,1),%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%ecx
		mov    %cx,_0dfc38_data
		xor    %ecx,%ecx
		mov    _0cdc0d_data,%cl
		mov    _0cdbd0_data,%ebp
		sar    %ecx
		add    %ecx,%ebp
		mov    %ebp,(%esp)
		sub    %eax,%edx
		mov    (%esp),%ecx
		mov    %dx,_0dfc3a_data
		mov    %cx,_0dfc34_data
		mov    %cx,_0dfc36_data
		jmp    _040357_jump

	_040317_jump:
		testb  $0x000001,_0ced80_data
		jne    _040357_jump
		mov    _0cdc30_data,%eax
		mov    0x000028(%eax),%dx
		add    $0x000040,%edx
		mov    %dx,_0dfc38_data
		mov    0x00002c(%eax),%dx
		add    $0x000032,%edx
		mov    0x000028(%eax),%ax
		mov    %dx,_0dfc34_data
		add    $0x000030,%eax
		mov    %dx,_0dfc36_data
		mov    %ax,_0dfc3a_data

	_040357_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _040360_jump
		neg    %eax

	_040360_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _04036b_jump
		neg    %eax

	_04036b_jump:
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		cmp    $0x000002,%dx
		jge    _0403a8_jump
		cmpw   $0x000000,0x000050(%esi)
		jne    _0403a8_jump
		movw   $0x000001,0x000050(%esi)
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _0403a8_jump
		movw   $0x000001,0x000050(%eax)

	_0403a8_jump:
		cmpw   $0x000000,0x000008(%esp)
		jle    _0403d7_jump
		mov    $0x000005,%cl
		mov    %edi,%eax
		mov    0x000006(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000005,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_0403d7_jump:
		mov    0x000040(%esi),%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _0403f0_jump
		mov    $0x000001,%eax
		jg     _0403f0_jump
		neg    %eax

	_0403f0_jump:
		lea    (%edx,%eax,1),%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jle    _0403fe_jump
		mov    %ebx,%eax

	_0403fe_jump:
		mov    %eax,%ebx
		mov    $0xffffffd8,%eax
		cmp    %ebx,%eax
		jge    _04040b_jump
		mov    %ebx,%eax

	_04040b_jump:
		mov    0x00003e(%esi),%ebx
		mov    %ax,0x000042(%esi)
		sar    $0x000010,%ebx
		movswl %di,%eax
		sub    %ebx,%eax
		cmp    $0x000000,%eax
		je     _040428_jump
		mov    $0x000001,%eax
		jg     _040428_jump
		neg    %eax

	_040428_jump:
		add    %eax,%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jle    _040435_jump
		mov    %ebx,%eax

	_040435_jump:
		mov    %eax,%ebx
		mov    $0xffffffd8,%eax
		cmp    %ebx,%eax
		jge    _040442_jump
		mov    %ebx,%eax

	_040442_jump:
		mov    %ax,0x000040(%esi)
		test   %ax,%ax
		jle    _040463_jump
		mov    0x000081(%esi),%dh
		test   $0x000008,%dh
		jne    _040463_jump
		mov    %dh,%cl
		or     $0x000008,%cl
		mov    %cl,0x000081(%esi)
		jmp    _040480_jump

	_040463_jump:
		cmpw   $0x000000,0x000040(%esi)
		jge    _040480_jump
		mov    0x000081(%esi),%bl
		test   $0x000008,%bl
		je     _040480_jump
		mov    %bl,%bh
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%esi)

	_040480_jump:
		mov    _0cedf8_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%ebx
		sub    $0x0000c8,%eax
		cmp    %ebx,%eax
		jle    _0404aa_jump
		mov    0x000081(%esi),%ch
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%esi)

	_0404aa_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0404b4_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		cmpw   $0x000000,0x000050(%eax)
		je     _04056e_jump
		mov    0x000050(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc300_data,%ebx
		cmpw   $0x000000,0x000050(%ebx,%eax,4)
		je     _04056e_jump
		movw   $0x000000,0x000050(%edx)
		mov    _0ced80_data,%ah
		mov    0x000050(%edx),%edx
		or     $0x000001,%ah
		sar    $0x000010,%edx
		mov    %ah,_0ced80_data
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    $0x00000a,%esi
		movw   $0x000000,0x000050(%ebx,%eax,4)
		mov    _0cedfa_data,%ax
		mov    $0x00012c,%edi
		sub    $0x0000c8,%eax
		mov    %si,_0dfc38_data
		mov    %ax,_0dfc34_data
		mov    %ax,_0dfc36_data
		mov    _0cdc30_data,%eax
		mov    %di,_0dfc3a_data
		call   _077338_func
		mov    _0cdc30_data,%eax
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		mov    $0x000001,%dh
		movb   $0x000008,0x00006e(%eax)
		mov    %dh,_0dfc62_data

	_04056e_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_040580_switch:
		.long   _0405df_case
		.long   _0405f6_case
		.long   _04060e_case
		.long   _040626_case

_040590_switch:
		.long   _040655_case
		.long   _04066d_case
		.long   _040684_case
		.long   _04069c_case

_0405a0_switch:
		.long   _0406cb_case
		.long   _0406d7_case
		.long   _0406e3_case
		.long   _0406ef_case

_0405b0_switch:
		.long   _040712_case
		.long   _040729_case
		.long   _040741_case
		.long   _040759_case




_0405c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0c4d88_data,%ax
		cmp    $0x000003,%ax
		ja     _04063c_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_040580_switch(,%eax,4)

	_0405df_case:
		mov    $_040974_func,%eax
		mov    $_04078c_jump,%edx
		mov    %eax,_0c4d78_data
		mov    %edx,_0963b0_data
		jmp    _04063c_jump

	_0405f6_case:
		mov    $_040a00_func,%edi
		mov    $_04078c_jump,%ebp
		mov    %edi,_0c4d78_data
		mov    %ebp,_0963b4_data
		jmp    _04063c_jump

	_04060e_case:
		mov    $_040a8c_func,%ecx
		mov    $_04078c_jump,%esi
		mov    %ecx,_0c4d78_data
		mov    %esi,_0963b8_data
		jmp    _04063c_jump

	_040626_case:
		mov    $_040b18_func,%edx
		mov    $_04078c_jump,%ebx
		mov    %edx,_0c4d78_data
		mov    %ebx,_0963bc_data

	_04063c_jump:
		mov    _0c4d8a_data,%ax
		cmp    $0x000003,%ax
		ja     _0406b2_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_040590_switch(,%eax,4)

	_040655_case:
		mov    $_040974_func,%edx
		mov    $_040778_jump,%ebx
		mov    %edx,_0c4d7c_data
		mov    %ebx,_0963b0_data
		jmp    _0406b2_jump

	_04066d_case:
		mov    $_040a00_func,%ebp
		mov    $_040778_jump,%eax
		mov    %ebp,_0c4d7c_data
		mov    %eax,_0963b4_data
		jmp    _0406b2_jump

	_040684_case:
		mov    $_040a8c_func,%esi
		mov    $_040778_jump,%edi
		mov    %esi,_0c4d7c_data
		mov    %edi,_0963b8_data
		jmp    _0406b2_jump

	_04069c_case:
		mov    $_040b18_func,%ebx
		mov    $_040778_jump,%ecx
		mov    %ebx,_0c4d7c_data
		mov    %ecx,_0963bc_data

	_0406b2_jump:
		mov    _0c4d8c_data,%ax
		cmp    $0x000003,%ax
		ja     _0406f9_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0405a0_switch(,%eax,4)

	_0406cb_case:
		movl   $_040974_func,_0c4d80_data
		jmp    _0406f9_jump

	_0406d7_case:
		movl   $_040a00_func,_0c4d80_data
		jmp    _0406f9_jump

	_0406e3_case:
		movl   $_040a8c_func,_0c4d80_data
		jmp    _0406f9_jump

	_0406ef_case:
		movl   $_040b18_func,_0c4d80_data

	_0406f9_jump:
		mov    _0c4d8e_data,%ax
		cmp    $0x000003,%ax
		ja     _04076e_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0405b0_switch(,%eax,4)

	_040712_case:
		mov    $_040974_func,%ebp
		mov    $_0407a0_jump,%eax
		mov    %ebp,_0c4d84_data
		mov    %eax,_0963b0_data
		jmp    _04076e_jump

	_040729_case:
		mov    $_040a00_func,%esi
		mov    $_0407a0_jump,%edi
		mov    %esi,_0c4d84_data
		mov    %edi,_0963b4_data
		jmp    _04076e_jump

	_040741_case:
		mov    $_040a8c_func,%ebx
		mov    $_0407a0_jump,%ecx
		mov    %ebx,_0c4d84_data
		mov    %ecx,_0963b8_data
		jmp    _04076e_jump

	_040759_case:
		mov    $_040b18_func,%eax
		mov    $_0407a0_jump,%edx
		mov    %eax,_0c4d84_data
		mov    %edx,_0963bc_data

	_04076e_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040778_jump:
		xor    %eax,%eax
		mov    _095b24_data,%al
		nop



_040780_func:
		and    $0x0000ff,%eax
		mov    _0dfc70_data(%eax),%al
		ret    

	_04078c_jump:
		xor    %eax,%eax
		mov    _095b25_data,%al
		and    $0x0000ff,%eax
		mov    _0dfc70_data(%eax),%al
		ret    

	_0407a0_jump:
		xor    %eax,%eax
		mov    _095b26_data,%al
		and    $0x0000ff,%eax
		mov    _0dfc70_data(%eax),%al
		ret    



_0407b4_func:
		push   %edx
		mov    _095b9a_data,%ah
		xor    %edx,%edx
		cmp    $0x000002,%ah
		jne    _0407d6_jump
		mov    _0cec9e_data,%ax
		cmp    _0dfcfc_data,%ax
		setle  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_0407d6_jump:
		cmpb   $0x000001,_0cefa4_data
		jne    _04080d_jump
		xor    %eax,%eax
		mov    _095b22_data,%al
		call   _040780_func
		test   %al,%al
		je     _040806_jump
		xor    %eax,%eax
		mov    _095b20_data,%al
		call   _040780_func
		test   %al,%al
		jne    _040806_jump
		mov    $0x000001,%eax
		jmp    _040808_jump

	_040806_jump:
		xor    %eax,%eax

	_040808_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_04080d_jump:
		cmpb   $0x000000,_0ca425_data
		je     _04081d_jump
		mov    _0dfd02_data,%dx

	_04081d_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_040824_func:
		push   %edx
		mov    _095b9a_data,%ah
		xor    %edx,%edx
		cmp    $0x000002,%ah
		jne    _040846_jump
		mov    _0cec9e_data,%ax
		cmp    _0dfd0a_data,%ax
		setge  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_040846_jump:
		cmpb   $0x000001,_0cefa4_data
		jne    _04087d_jump
		xor    %eax,%eax
		mov    _095b20_data,%al
		call   _040780_func
		test   %al,%al
		je     _040876_jump
		xor    %eax,%eax
		mov    _095b22_data,%al
		call   _040780_func
		test   %al,%al
		jne    _040876_jump
		mov    $0x000001,%eax
		jmp    _040878_jump

	_040876_jump:
		xor    %eax,%eax

	_040878_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_04087d_jump:
		cmpb   $0x000000,_0ca425_data
		je     _04088d_jump
		mov    _0dfd10_data,%dx

	_04088d_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_040894_func:
		push   %edx
		mov    _095b9a_data,%ah
		xor    %edx,%edx
		cmp    $0x000002,%ah
		jne    _0408b6_jump
		mov    _0cec9c_data,%ax
		cmp    _0dfd06_data,%ax
		setge  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_0408b6_jump:
		cmpb   $0x000001,_0cefa4_data
		jne    _0408ed_jump
		xor    %eax,%eax
		mov    _095b23_data,%al
		call   _040780_func
		test   %al,%al
		je     _0408e6_jump
		xor    %eax,%eax
		mov    _095b21_data,%al
		call   _040780_func
		test   %al,%al
		jne    _0408e6_jump
		mov    $0x000001,%eax
		jmp    _0408e8_jump

	_0408e6_jump:
		xor    %eax,%eax

	_0408e8_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_0408ed_jump:
		cmpb   $0x000000,_0ca425_data
		je     _0408fd_jump
		mov    _0dfd18_data,%dx

	_0408fd_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_040904_func:
		push   %edx
		mov    _095b9a_data,%ah
		xor    %edx,%edx
		cmp    $0x000002,%ah
		jne    _040926_jump
		mov    _0cec9c_data,%ax
		cmp    _0dfd00_data,%ax
		setle  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_040926_jump:
		cmpb   $0x000001,_0cefa4_data
		jne    _04095d_jump
		xor    %eax,%eax
		mov    _095b21_data,%al
		call   _040780_func
		test   %al,%al
		je     _040956_jump
		xor    %eax,%eax
		mov    _095b23_data,%al
		call   _040780_func
		test   %al,%al
		jne    _040956_jump
		mov    $0x000001,%eax
		jmp    _040958_jump

	_040956_jump:
		xor    %eax,%eax

	_040958_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_04095d_jump:
		cmpb   $0x000000,_0ca425_data
		je     _04096d_jump
		mov    _0dfcfe_data,%dx

	_04096d_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_040974_func:
		push   %edx
		mov    _0cee32_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _0409fb_jump
		cmpb   $0x000000,_095b9a_data
		je     _04099a_jump
		cmpw   $0x000001,_0c8d00_data
		jne    _0409d5_jump

	_04099a_jump:
		cmpb   $0x000001,_0cefa4_data
		jne    _0409b4_jump
		call   *_0963b0_data
		test   %al,%al
		je     _0409b4_jump
		mov    $0x000001,%eax
		jmp    _0409b6_jump

	_0409b4_jump:
		xor    %eax,%eax

	_0409b6_jump:
		cmpb   $0x000000,_0cef89_data
		je     _0409fb_jump
		cmpw   $0x000001,_0ced4a_data
		sete   %dl
		and    $0x0000ff,%edx
		cwtl   
		or     %edx,%eax
		pop    %edx
		ret    

	_0409d5_jump:
		cmpw   $0x000001,_0ced4a_data
		je     _0409f2_jump
		cmpb   $0x000001,_0cefa4_data
		jne    _0409f9_jump
		call   *_0963b0_data
		test   %al,%al
		je     _0409f9_jump

	_0409f2_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_0409f9_jump:
		xor    %eax,%eax

	_0409fb_jump:
		pop    %edx
		ret    



_040a00_func:
		push   %edx
		mov    _0cee32_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _040a87_jump
		cmpb   $0x000000,_095b9a_data
		je     _040a26_jump
		cmpw   $0x000001,_0c8d02_data
		jne    _040a61_jump

	_040a26_jump:
		cmpb   $0x000001,_0cefa4_data
		jne    _040a40_jump
		call   *_0963b4_data
		test   %al,%al
		je     _040a40_jump
		mov    $0x000001,%eax
		jmp    _040a42_jump

	_040a40_jump:
		xor    %eax,%eax

	_040a42_jump:
		cmpb   $0x000000,_0cef89_data
		je     _040a87_jump
		cmpw   $0x000001,_0ced4c_data
		sete   %dl
		and    $0x0000ff,%edx
		cwtl   
		or     %edx,%eax
		pop    %edx
		ret    

	_040a61_jump:
		cmpw   $0x000001,_0ced4c_data
		je     _040a7e_jump
		cmpb   $0x000001,_0cefa4_data
		jne    _040a85_jump
		call   *_0963b4_data
		test   %al,%al
		je     _040a85_jump

	_040a7e_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040a85_jump:
		xor    %eax,%eax

	_040a87_jump:
		pop    %edx
		ret    



_040a8c_func:
		push   %edx
		mov    _0cee32_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _040b13_jump
		cmpb   $0x000000,_095b9a_data
		je     _040ab2_jump
		cmpw   $0x000001,_0c8d04_data
		jne    _040aed_jump

	_040ab2_jump:
		cmpb   $0x000001,_0cefa4_data
		jne    _040acc_jump
		call   *_0963b8_data
		test   %al,%al
		je     _040acc_jump
		mov    $0x000001,%eax
		jmp    _040ace_jump

	_040acc_jump:
		xor    %eax,%eax

	_040ace_jump:
		cmpb   $0x000000,_0cef89_data
		je     _040b13_jump
		cmpw   $0x000001,_0ced44_data
		sete   %dl
		and    $0x0000ff,%edx
		cwtl   
		or     %edx,%eax
		pop    %edx
		ret    

	_040aed_jump:
		cmpw   $0x000001,_0ced44_data
		je     _040b0a_jump
		cmpb   $0x000001,_0cefa4_data
		jne    _040b11_jump
		call   *_0963b8_data
		test   %al,%al
		je     _040b11_jump

	_040b0a_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040b11_jump:
		xor    %eax,%eax

	_040b13_jump:
		pop    %edx
		ret    



_040b18_func:
		push   %edx
		mov    _0cee32_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _040b9f_jump
		cmpb   $0x000000,_095b9a_data
		je     _040b3e_jump
		cmpw   $0x000001,_0c8d06_data
		jne    _040b79_jump

	_040b3e_jump:
		cmpb   $0x000001,_0cefa4_data
		jne    _040b58_jump
		call   *_0963bc_data
		test   %al,%al
		je     _040b58_jump
		mov    $0x000001,%eax
		jmp    _040b5a_jump

	_040b58_jump:
		xor    %eax,%eax

	_040b5a_jump:
		cmpb   $0x000000,_0cef89_data
		je     _040b9f_jump
		cmpw   $0x000001,_0ced4a_data
		sete   %dl
		and    $0x0000ff,%edx
		cwtl   
		or     %edx,%eax
		pop    %edx
		ret    

	_040b79_jump:
		cmpw   $0x000001,_0ced46_data
		je     _040b96_jump
		cmpb   $0x000001,_0cefa4_data
		jne    _040b9d_jump
		call   *_0963bc_data
		test   %al,%al
		je     _040b9d_jump

	_040b96_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040b9d_jump:
		xor    %eax,%eax

	_040b9f_jump:
		pop    %edx
		ret    



_040ba4_func:
		push   %edx
		mov    _0cee32_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _040bd9_jump
		cmpw   $0x000001,_0dfd14_data
		je     _040bd0_jump
		cmpb   $0x000001,_0cefa4_data
		jne    _040bd7_jump
		call   *_0963b8_data
		test   %al,%al
		je     _040bd7_jump

	_040bd0_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040bd7_jump:
		xor    %eax,%eax

	_040bd9_jump:
		pop    %edx
		ret    



_040bdc_func:
		push   %edx
		mov    _0cee32_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _040bf8_jump
		cmpw   $0x000001,_0dfd0e_data
		sete   %al
		xor    %ah,%ah

	_040bf8_jump:
		pop    %edx
		ret    



_040bfc_func:
		mov    %ax,_0dfd04_data
		ret    



_040c04_func:
		call   *_0dfcf0_data
		ret    



_040c0c_func:
		push   %esi
		mov    %eax,%esi
		call   *_0dfcf0_data
		mov    _0cec9e_data,%ax
		cmp    (%edx),%ax
		jge    _040c23_jump
		mov    %ax,(%edx)

	_040c23_jump:
		mov    _0cec9c_data,%dx
		cmp    (%ecx),%dx
		jge    _040c32_jump
		mov    %dx,(%ecx)

	_040c32_jump:
		mov    _0cec9e_data,%dx
		cmp    (%esi),%dx
		jle    _040c41_jump
		mov    %dx,(%esi)

	_040c41_jump:
		mov    _0cec9c_data,%dx
		cmp    (%ebx),%dx
		jle    _040c50_jump
		mov    %dx,(%ebx)

	_040c50_jump:
		pop    %esi
		ret    



_040c54_func:
		push   %ebx
		mov    %eax,%ebx
		cmpb   $0x000000,_095b9a_data
		je     _040c8e_jump
		call   *_0dfcf0_data
		mov    _0cec9e_data,%ax
		mov    %ax,(%ebx)
		mov    _0cec9c_data,%bx
		mov    %ax,_0dfd08_data
		mov    %bx,(%edx)
		mov    $0x000002,%dl
		mov    %bx,_0dfd0c_data
		mov    %dl,_095b9a_data

	_040c8e_jump:
		pop    %ebx
		ret    



_040c90_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    %ebx,%edi
		mov    %ecx,%ebp
		mov    0x000014(%esp),%ecx
		movswl (%ecx),%ecx
		movswl (%edx),%esi
		mov    %ecx,%edx
		mov    _0dfd02_data,%ebx
		sub    %esi,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    %esi,%eax
		mov    (%esp),%esi
		movswl (%esi),%esi
		mov    %esi,%edx
		sub    %ecx,%edx
		mov    %ax,_0dfcfc_data
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    %eax,%esi
		mov    %si,_0dfd0a_data
		mov    0x000018(%esp),%esi
		movswl (%esi),%esi
		movswl 0x000000(%ebp),%ecx
		mov    %esi,%edx
		sub    %ecx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    %ecx,%eax
		movswl (%edi),%ecx
		mov    %ecx,%edx
		sub    %esi,%edx
		mov    %ax,_0dfd00_data
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    %eax,%ecx
		mov    %cx,_0dfd06_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_040d88_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		push   $0x000180
		push   $0x000200
		push   %eax
		call   _07cfcf_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		jne    _040dbd_jump
		push   %ebx
		push   $_0c0924_data
		call   _07bcec_func
		add    $0x000008,%esp
		call   _07c10b_func
		pop    %ecx
		pop    %ebx
		ret    

	_040dbd_jump:
		mov    %ecx,%eax
		call   _08119b_func
		movswl %ax,%ebx
		mov    %ebx,%eax
		call   _07b548_func
		mov    %eax,0x000010(%edx)
		mov    %ebx,0x00000c(%edx)
		mov    %ecx,%eax
		mov    0x000010(%edx),%edx
		call   _0811d8_func
		mov    %ecx,%eax
		call   _07d273_func
		pop    %ecx
		pop    %ebx
		ret    



_040de8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000064,%esp
		mov    %eax,%ebp
		call   _03c85c_func
		push   $_0c0940_data
		call   _07bcec_func
		add    $0x000004,%esp
		mov    $_0c0938_data,%esi
		push   %esi
		push   $_0c0970_data
		xor    %edx,%edx
		call   _07bcec_func
		add    $0x000008,%esp

	_040e1a_jump:
		call   _0812d3_func
		movswl %dx,%ebx
		inc    %edx
		mov    %al,(%esp,%ebx,1)
		cmp    $0x00000d,%al
		je     _040e2e_jump
		cmp    $0x00001b,%al
		jne    _040e1a_jump

	_040e2e_jump:
		dec    %edx
		movswl %dx,%eax
		xor    %dl,%dl
		mov    %dl,(%esp,%eax,1)
		cmpb   $0x000000,(%esp)
		jne    _040e59_jump
		mov    %esp,%edi
		push   %edi

	_040e40_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _040e58_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _040e40_jump

	_040e58_jump:
		pop    %edi

	_040e59_jump:
		mov    $_0c0990_data,%esi
		mov    %esp,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_040e69_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _040e81_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _040e69_jump

	_040e81_jump:
		pop    %edi
		mov    %ebp,%edx
		mov    %esp,%eax
		call   _040d88_func
		xor    %eax,%eax
		mov    $_0c6e98_data,%esi
		mov    _0cef9f_data,%al
		mov    $0x0000ff,%ecx
		call   _03c740_func
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		add    $0x000064,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040ec8_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,_0ced46_data
		mov    %dx,_0ced44_data
		mov    %dx,_0ced4a_data
		test   $0x000001,%al
		je     _040ef0_jump
		movw   $0x000001,_0ced4a_data

	_040ef0_jump:
		test   $0x000002,%al
		je     _040efd_jump
		movw   $0x000001,_0ced44_data

	_040efd_jump:
		test   $0x000004,%al
		je     _040f06_jump
		mov    $0x000001,%ebx

	_040f06_jump:
		test   $0x000008,%al
		je     _040f0f_jump
		mov    $0x000001,%ebx

	_040f0f_jump:
		test   $0x000010,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0dfd02_data
		test   $0x000020,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0dfd10_data
		test   $0x000040,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0dfcfe_data
		test   $0x000080,%al
		setne  %dl
		mov    %dx,_0dfd18_data
		mov    %bx,_0ced4c_data
		pop    %edx
		pop    %ebx
		ret    



_040f50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0ced4a_data,%ax
		mov    %ax,_0dfd16_data
		mov    _0ced4c_data,%ax
		mov    %ax,_0dfd14_data
		mov    _0ced44_data,%ax
		mov    %ax,_0dfd12_data
		mov    _0ced46_data,%ax
		mov    %ax,_0dfd0e_data
		mov    0x000015(%edx),%ah
		mov    (%edx),%ebx
		test   %ah,%ah
		je     _041057_jump
		test   %ebx,%ebx
		jne    _040fe7_jump
		mov    _0cedde_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _040fb4_jump
		cmpb   $0x000000,_0cef89_data
		jne    _040fb4_jump
		mov    %edx,%eax
		call   _040de8_func

	_040fb4_jump:
		mov    %ebx,%ecx
		mov    0x000010(%edx),%eax
		movl   $0x000000,0x000008(%edx)
		inc    %ebx
		mov    (%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _040ec8_func
		mov    0x000010(%edx),%eax
		mov    (%ebx,%eax,1),%al
		movb   $0x000000,0x000016(%edx)
		and    $0x0000ff,%eax
		mov    %ebx,(%edx)
		mov    %eax,0x000004(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040fe7_jump:
		mov    0x000008(%edx),%ecx
		inc    %ecx
		mov    0x000004(%edx),%esi
		mov    %ecx,0x000008(%edx)
		cmp    %esi,%ecx
		jne    _041046_jump
		cmpb   $0x000001,0x000016(%edx)
		je     _041003_jump
		lea    0x000001(%ebx),%eax
		cmp    0x00000c(%edx),%eax
		jb     _04102c_jump

	_041003_jump:
		mov    _0cef89_data,%ch
		movb   $0x000000,0x000015(%edx)
		cmp    $0x000001,%ch
		jne    _041046_jump
		mov    $0x000002,%al
		mov    $0x000001,%ecx
		mov    %al,_0cef89_data
		mov    %cx,_0cedea_data
		call   _03b970_func
		jmp    _041046_jump

	_04102c_jump:
		add    $0x000002,%ebx
		mov    0x000010(%edx),%eax
		movl   $0x000000,0x000008(%edx)
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    %ebx,(%edx)
		mov    %eax,0x000004(%edx)

	_041046_jump:
		mov    0x000010(%edx),%eax
		mov    -0x000001(%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _040ec8_func

	_041057_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04105c_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _07c0a4_func
		cli    
		mov    $0x000060,%edx
		in     $0x000021,%al
		or     $0x000002,%al
		out    %al,$0x000021
		sub    %eax,%eax
		in     (%dx),%al
		mov    %eax,%ebx
		mov    _0cef89_data,%ah
		xor    %cl,%cl
		cmp    $0x000001,%ah
		jne    _0410a6_jump
		testb  $0x000040,_0cefdb_data
		je     _0410a6_jump
		cmp    %ah,%al
		jne    _04109f_jump
		movb   $0x000004,_0cef89_data
		jmp    _0410a6_jump

	_04109f_jump:
		movb   $0x000003,_0cef89_data

	_0410a6_jump:
		mov    _0cef8a_data,%bh
		cmp    $0x000001,%bh
		jne    _0410c5_jump
		testb  $0x000040,_0cefdb_data
		je     _0410c5_jump
		cmp    %bh,%al
		jne    _0410c5_jump
		movb   $0x000003,_0cef8a_data

	_0410c5_jump:
		cmpb   $0x000000,_0cefa8_data
		je     _0410f7_jump
		mov    _0cef83_data,%dh
		xor    %bl,%bl
		and    $0x0000fb,%dh
		mov    %bl,_0cef82_data
		mov    _0cef81_data,%bh
		mov    %dh,_0cef83_data
		cmp    $0x000001,%bh
		jne    _0410f7_jump
		movb   $0x000002,_0cef81_data

	_0410f7_jump:
		mov    _0963c0_data,%bl
		cmp    $0x000001,%bl
		jb     _04110b_jump
		jbe    _041120_jump
		cmp    $0x000002,%bl
		je     _041137_jump
		jmp    _04115f_jump

	_04110b_jump:
		test   %bl,%bl
		jne    _04115f_jump
		cmp    $0x0000e1,%al
		jne    _04111c_jump
		movb   $0x000001,_0963c0_data
		jmp    _041167_jump

	_04111c_jump:
		mov    $0x000001,%cl
		jmp    _041167_jump

	_041120_jump:
		cmp    $0x00001d,%al
		jne    _04112d_jump
		movb   $0x000002,_0963c0_data
		jmp    _041167_jump

	_04112d_jump:
		xor    %bl,%bl
		mov    %bl,_0963c0_data
		jmp    _041167_jump

	_041137_jump:
		cmp    $0x000045,%al
		jne    _041155_jump
		cmpb   $0x000000,_0cefed_data
		je     _041155_jump
		mov    _0cefa5_data,%dl
		test   %dl,%dl
		sete   %bl
		mov    %bl,_0cefa5_data

	_041155_jump:
		xor    %dh,%dh
		mov    %dh,_0963c0_data
		jmp    _041167_jump

	_04115f_jump:
		xor    %ch,%ch
		mov    %ch,_0963c0_data

	_041167_jump:
		test   %cl,%cl
		je     _041180_jump
		mov    %al,%bl
		and    $0x000080,%bl
		and    $0x00007f,%al
		xor    $0x000080,%bl
		and    $0x0000ff,%eax
		mov    %bl,_0dfc70_data(%eax)

	_041180_jump:
		mov    $0x000061,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    %eax,%ebx
		or     $0x000080,%al
		out    %al,(%dx)
		mov    %bl,%al
		out    %al,(%dx)
		mov    $0x000020,%al
		mov    $0x000020,%edx
		out    %al,(%dx)
		in     $0x000021,%al
		and    $0x0000fd,%al
		out    %al,$0x000021
		sti    
		cld    
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   



_0411a8_func:
		push   %edx
		and    $0x0000ff,%eax
		xor    %dl,%dl
		mov    %dl,_0dfc70_data(%eax)
		pop    %edx
		ret    



_0411b8_func:
		push   %edx
		xor    %al,%al

	_0411bb_jump:
		xor    %edx,%edx
		mov    %al,%dl
		xor    %ah,%ah
		mov    %ah,_0dfc70_data(%edx)
		inc    %al
		cmp    $0x000080,%al
		jb     _0411bb_jump
		pop    %edx
		ret    



_0411d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _0411b8_func
		mov    $0x000009,%eax
		call   _07cf19_func
		mov    %eax,_0dfcf4_data
		mov    _0cefa4_data,%ah
		mov    %dx,_0dfcf8_data
		cmp    $0x000001,%ah
		jne    _04120a_jump
		mov    $_04105c_func,%ebx
		mov    $0x000009,%eax
		mov    %cs,%ecx
		call   _07cf4b_func

	_04120a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041210_func:
		push   %ebx
		push   %ecx
		mov    $0x000009,%eax
		mov    _0dfcf8_data,%cx
		mov    _0dfcf4_data,%ebx
		call   _07cf4b_func
		pop    %ecx
		pop    %ebx
		ret    



_04122c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cefa3_data
		je     _041244_jump
		mov    _0cef6c_data,%dl
		test   %dl,%dl
		je     _041261_jump

	_041244_jump:
		xor    %bh,%bh
		mov    $_015ab4_func,%edx
		mov    %bh,_0cef79_data
		xor    %bl,%bl
		mov    %edx,_0dfcf0_data
		mov    %bh,_0cef76_data
		jmp    _041287_jump

	_041261_jump:
		mov    $0x000001,%bh
		mov    $_015ca0_func,%ecx
		mov    %dl,_0cef76_data
		mov    $_0158bc_func,%edx
		mov    %bh,_0cef79_data
		mov    %ecx,_0cc620_data
		mov    %edx,_0dfcf0_data
		xor    %bl,%bl

	_041287_jump:
		call   _015c3e_func
		test   %eax,%eax
		jne    _041329_jump
		call   _015c6f_func
		test   %eax,%eax
		jne    _041329_jump
		mov    _0cef79_data,%bh
		mov    _0dfcf0_data,%edx
		xor    %cl,%cl
		xor    %esi,%esi
		xor    %edi,%edi
		xor    %eax,%eax
		mov    _0cef76_data,%bl
		mov    %cl,_095b9a_data
		mov    %si,_0cec9e_data
		mov    %di,_0ced46_data
		mov    %ax,_0ced44_data
		mov    %si,_0ced4a_data
		mov    %di,_0dfd0e_data
		mov    %ax,_0dfd12_data
		mov    %si,_0dfd16_data
		mov    %di,_0dfd0a_data
		mov    %ax,_0dfcfc_data
		mov    %si,_0dfd00_data
		xor    %ch,%ch
		xor    %al,%al
		mov    %cx,_0cec9c_data
		mov    %cx,_0ced4c_data
		mov    %cx,_0dfd14_data
		mov    %cx,_0dfd06_data
		jmp    _0413a8_jump

	_041329_jump:
		cmpb   $0x000000,_095b9a_data
		jne    _041339_jump
		movb   $0x000001,_095b9a_data

	_041339_jump:
		call   _015c3e_func
		test   %eax,%eax
		je     _041375_jump
		cmpb   $0x000000,_0cefa3_data
		je     _041354_jump
		cmpb   $0x000000,_0cef6c_data
		je     _04135f_jump

	_041354_jump:
		xor    %bh,%bh
		mov    $_015ab4_func,%edx
		xor    %bl,%bl
		jmp    _0413a6_jump

	_04135f_jump:
		mov    $0x000001,%bh
		mov    $_015ca0_func,%edi
		mov    $_0158bc_func,%edx
		mov    %edi,_0cc620_data
		xor    %bl,%bl
		jmp    _0413a6_jump

	_041375_jump:
		cmpb   $0x000000,_0cefa3_data
		je     _041387_jump
		cmpb   $0x000000,_0cef6c_data
		je     _041392_jump

	_041387_jump:
		xor    %bh,%bh
		mov    $_015b72_func,%edx
		mov    $0x000001,%bl
		jmp    _0413a6_jump

	_041392_jump:
		mov    $0x000001,%bh
		mov    $_0159b6_func,%edx
		mov    $_015e8a_func,%esi
		mov    %bh,%bl
		mov    %esi,_0cc620_data

	_0413a6_jump:
		mov    $0x000001,%al

	_0413a8_jump:
		mov    %bh,_0cef79_data
		mov    %bl,_0cef76_data
		mov    %edx,_0dfcf0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0413c0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		mov    %eax,%esi
		mov    %edx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)
		mov    0x000040(%esp),%ecx
		mov    %ebx,%eax
		mov    _0cc5e0_data,%edx
		lea    0x000000(,%edx,4),%ebp
		add    %edx,%ebp
		mov    _0cc5e8_data,%edx
		shl    $0x000006,%ebp
		add    %ebp,%edx
		mov    %edx,0x000018(%esp)
		mov    %esi,%edx
		sub    $0x000070,%edx
		mov    %esi,%ebp
		mov    %edx,0x00001c(%esp)
		mov    0x000008(%esp),%edx
		sub    %ebx,%ebp
		sub    $0x000040,%edx
		sub    %ecx,%ebp
		mov    %edx,0x000010(%esp)
		cmp    %ecx,%ebx
		jle    _041595_jump
		lea    (%ebx,%ecx,1),%eax
		add    %eax,%eax
		mov    %eax,0x000024(%esp)
		test   %ebp,%ebp
		jge    _04142c_jump
		lea    (%eax,%ebp,1),%ecx
		mov    %ecx,0x000024(%esp)
		xor    %ebp,%ebp

	_04142c_jump:
		mov    0x000024(%esp),%eax
		add    %ebp,%eax
		cmp    $0x000140,%eax
		jl     _041445_jump
		mov    $0x000140,%eax
		sub    %ebp,%eax
		dec    %eax
		mov    %eax,0x000024(%esp)

	_041445_jump:
		cmpl   $0x000000,0x000024(%esp)
		jle    _0418a3_jump
		mov    0x000008(%esp),%ecx
		sub    0x000004(%esp),%ecx
		test   %ecx,%ecx
		jl     _0414f5_jump
		cmp    $0x0000c8,%ecx
		jge    _0414f5_jump
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000044(%esp),%edx
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000048(%esp),%ebx
		sub    %eax,%esi
		add    %ebx,%edi
		mov    _0cef84_data,%bh
		add    %edx,%esi
		test   %bh,%bh
		je     _0414e0_jump
		mov    0x000010(%esp),%eax
		mov    %ecx,%edx
		sub    %eax,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    %ebp,%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cc5d0_data,%ebx
		shl    $0x000002,%eax
		mov    0x000024(%esp),%ecx
		add    %eax,%ebx

	_0414cf_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _0414cf_jump
		jmp    _0414f5_jump

	_0414e0_jump:
		mov    0x000024(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0414ee_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0414ee_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_0414f5_jump:
		mov    0x000008(%esp),%esi
		add    0x000004(%esp),%esi
		test   %esi,%esi
		jl     _0418a3_jump
		cmp    $0x0000c8,%esi
		jge    _0418a3_jump
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000018(%esp),%edx
		mov    %edi,%eax
		mov    0x000048(%esp),%ebx
		sub    %edx,%eax
		mov    0x000044(%esp),%edx
		mov    _0cef84_data,%cl
		add    %eax,%edx
		add    %ebx,%edi
		mov    %edx,(%esp)
		test   %cl,%cl
		je     _04158a_jump
		mov    0x000010(%esp),%ecx
		mov    %esi,%edx
		sub    %ecx,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    0x00001c(%esp),%ebp
		mov    _0cc5d0_data,%ebx
		add    %ebp,%eax
		mov    0x000024(%esp),%ecx
		shl    $0x000002,%eax
		mov    (%esp),%esi
		add    %eax,%ebx

	_041576_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _041576_jump
		jmp    _0418a3_jump

	_04158a_jump:
		mov    0x000024(%esp),%ecx
		mov    %edx,%esi
		jmp    _041892_jump

	_041595_jump:
		lea    (%ebx,%ebx,1),%edx
		mov    %edx,0x00002c(%esp)
		test   %ebp,%ebp
		jge    _0415a8_jump
		add    %ebp,%edx
		mov    %edx,0x00002c(%esp)
		xor    %ebp,%ebp

	_0415a8_jump:
		mov    0x00002c(%esp),%edx
		add    %ebp,%edx
		cmp    $0x000140,%edx
		jl     _0415c2_jump
		mov    $0x000140,%edx
		sub    %ebp,%edx
		dec    %edx
		mov    %edx,0x00002c(%esp)

	_0415c2_jump:
		lea    (%eax,%eax,1),%edx
		sub    %eax,%esi
		add    %ecx,%esi
		mov    %edx,0x000028(%esp)
		mov    %esi,0x000020(%esp)
		test   %esi,%esi
		jge    _0415e2_jump
		lea    (%edx,%esi,1),%ecx
		xor    %esi,%esi
		mov    %ecx,0x000028(%esp)
		mov    %esi,0x000020(%esp)

	_0415e2_jump:
		mov    0x000020(%esp),%eax
		add    0x000028(%esp),%eax
		cmp    $0x000140,%eax
		jl     _0415ff_jump
		mov    $0x000140,%eax
		sub    0x000020(%esp),%eax
		dec    %eax
		mov    %eax,0x000028(%esp)

	_0415ff_jump:
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x000014(%esp)
		test   %eax,%eax
		jl     _04174c_jump
		cmp    $0x0000c8,%eax
		jge    _04174c_jump
		cmpl   $0x000000,0x00002c(%esp)
		jle    _0416b2_jump
		mov    %eax,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000048(%esp),%ebx
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000044(%esp),%edx
		sub    %eax,%esi
		add    %ebx,%edi
		mov    _0cef84_data,%ah
		add    %edx,%esi
		test   %ah,%ah
		je     _04169d_jump
		mov    0x000014(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    %ebp,%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cc5d0_data,%ebx
		shl    $0x000002,%eax
		mov    0x00002c(%esp),%ecx
		add    %eax,%ebx

	_04168c_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _04168c_jump
		jmp    _0416b2_jump

	_04169d_jump:
		mov    0x00002c(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0416ab_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0416ab_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_0416b2_jump:
		mov    0x000028(%esp),%ecx
		test   %ecx,%ecx
		jle    _04174c_jump
		mov    0x000014(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    0x000020(%esp),%edi
		shl    $0x000006,%eax
		add    %eax,%edi
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000044(%esp),%edx
		sub    %eax,%esi
		mov    0x000048(%esp),%ebx
		add    %edx,%esi
		mov    _0cef84_data,%dl
		add    %ebx,%edi
		test   %dl,%dl
		je     _04173b_jump
		mov    0x000014(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    0x000020(%esp),%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cc5d0_data,%ebx
		shl    $0x000002,%eax
		mov    0x000028(%esp),%ecx
		add    %eax,%ebx

	_04172a_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _04172a_jump
		jmp    _04174c_jump

	_04173b_jump:
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _041745_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_041745_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_04174c_jump:
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%ecx
		add    %ecx,%eax
		mov    %eax,0x00000c(%esp)
		test   %eax,%eax
		jl     _0418a3_jump
		cmp    $0x0000c8,%eax
		jge    _0418a3_jump
		cmpl   $0x000000,0x00002c(%esp)
		jle    _041801_jump
		mov    0x00000c(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		mov    0x000044(%esp),%ebx
		lea    (%eax,%ebp,1),%edi
		mov    0x000018(%esp),%edx
		mov    %edi,%esi
		mov    0x000048(%esp),%ecx
		sub    %edx,%esi
		add    %ecx,%edi
		mov    _0cef84_data,%dh
		add    %ebx,%esi
		test   %dh,%dh
		je     _0417ec_jump
		mov    0x00000c(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    0x00001c(%esp),%ebp
		add    %ebp,%eax
		mov    _0cc5d0_data,%ebx
		shl    $0x000002,%eax
		mov    0x00002c(%esp),%ecx
		add    %eax,%ebx

	_0417db_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _0417db_jump
		jmp    _041801_jump

	_0417ec_jump:
		mov    0x00002c(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0417fa_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0417fa_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_041801_jump:
		cmpl   $0x000000,0x000028(%esp)
		jle    _0418a3_jump
		mov    0x00000c(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		mov    0x000020(%esp),%edi
		add    %edx,%eax
		mov    0x000018(%esp),%ecx
		shl    $0x000006,%eax
		mov    0x000044(%esp),%ebp
		add    %eax,%edi
		mov    _0cef84_data,%bl
		mov    %edi,%esi
		mov    0x000048(%esp),%eax
		sub    %ecx,%esi
		add    %eax,%edi
		add    %ebp,%esi
		test   %bl,%bl
		je     _04188e_jump
		mov    %edx,%eax
		sub    0x000010(%esp),%eax
		lea    0x000000(,%eax,8),%edx
		sub    %eax,%edx
		shl    $0x000006,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    0x000020(%esp),%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cc5d0_data,%ebx
		shl    $0x000002,%eax
		mov    0x000028(%esp),%ecx
		add    %eax,%ebx

	_041876_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _041876_jump
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c

	_04188e_jump:
		mov    0x000028(%esp),%ecx

	_041892_jump:
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _04189c_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_04189c_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_0418a3_jump:
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_0418ac_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,0x000008(%esp)
		mov    %edx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %ebx,%esi
		xor    %edi,%edi
		xor    %ebp,%ebp
		test   %ebx,%ebx
		jl     _04193c_jump
		mov    $0x000001,%edx
		add    %ebx,%ebx
		sub    %edx,%ebx
		mov    %edx,0x00000c(%esp)
		mov    %ebx,0x000010(%esp)

	_0418d8_jump:
		mov    0x000028(%esp),%ebx
		push   %ebx
		mov    0x000028(%esp),%ecx
		mov    0x000008(%esp),%eax
		push   %ecx
		mov    0x000008(%esp),%edx
		mov    %edi,%ebx
		push   %eax
		mov    %esi,%ecx
		mov    0x000014(%esp),%eax
		call   _0413c0_func
		mov    0x000028(%esp),%edx
		push   %edx
		mov    0x000028(%esp),%ebx
		mov    0x000008(%esp),%ecx
		push   %ebx
		mov    0x000010(%esp),%eax
		mov    0x000008(%esp),%edx
		push   %ecx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _0413c0_func
		mov    0x00000c(%esp),%eax
		add    %eax,%ebp
		lea    0x000002(%eax),%edx
		inc    %edi
		mov    %edx,0x00000c(%esp)
		cmp    %esi,%ebp
		jl     _041938_jump
		mov    0x000010(%esp),%ebx
		sub    %ebx,%ebp
		lea    -0x000002(%ebx),%ecx
		dec    %esi
		mov    %ecx,0x000010(%esp)

	_041938_jump:
		cmp    %esi,%edi
		jle    _0418d8_jump

	_04193c_jump:
		cmpb   $0x000000,_0cef85_data
		je     _04194a_jump
		call   _04228c_func

	_04194a_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_041954_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cef86_data
		je     _041aba_jump
		mov    $0x000004,%edx
		mov    $0x0000a1,%eax
		call   _07b82c_func
		mov    $0x000004,%edx
		mov    %eax,_0dfd38_data
		mov    $0x000041,%eax
		call   _07b82c_func
		mov    $0x000004,%edx
		mov    %eax,_0dfd34_data
		mov    $0x001400,%eax
		call   _07b82c_func
		mov    $0x000004,%edx
		mov    %eax,_0dfd4c_data
		mov    $0x007161,%eax
		call   _07b82c_func
		mov    _0dfd38_data,%edx
		mov    %eax,_0cc5d0_data
		test   %edx,%edx
		je     _0419d6_jump
		cmpl   $0x000000,_0dfd34_data
		je     _0419d6_jump
		cmpl   $0x000000,_0dfd4c_data
		je     _0419d6_jump
		test   %eax,%eax
		jne    _041a39_jump

	_0419d6_jump:
		cmpl   $0x000000,_0dfd38_data
		je     _0419e9_jump
		mov    $_0dfd38_data,%eax
		call   _07b83c_func

	_0419e9_jump:
		cmpl   $0x000000,_0dfd34_data
		je     _0419fc_jump
		mov    $_0dfd34_data,%eax
		call   _07b83c_func

	_0419fc_jump:
		cmpl   $0x000000,_0dfd4c_data
		je     _041a0f_jump
		mov    $_0dfd4c_data,%eax
		call   _07b83c_func

	_041a0f_jump:
		cmpl   $0x000000,_0cc5d0_data
		je     _041a22_jump
		mov    $_0cc5d0_data,%eax
		call   _07b83c_func

	_041a22_jump:
		xor    %dl,%dl
		mov    $_0c0998_data,%eax
		mov    %dl,_0cef86_data
		call   _01f3a4_func
		jmp    _041aba_jump

	_041a39_jump:
		xor    %esi,%esi
		xor    %edi,%edi

	_041a3d_jump:
		mov    %esi,%eax
		imul   %esi,%eax
		mov    _0dfd34_data,%edx
		mov    %eax,(%edx,%edi,1)
		xor    %eax,%eax
		xor    %edx,%edx

	_041a4f_jump:
		mov    %eax,%ebx
		imul   %eax,%ebx
		mov    _0dfd38_data,%ecx
		add    $0x000004,%edx
		inc    %eax
		mov    %ebx,-0x000004(%ecx,%edx,1)
		cmp    $0x0000a0,%eax
		jle    _041a4f_jump
		inc    %esi
		add    $0x000004,%edi
		cmp    $0x000040,%esi
		jle    _041a3d_jump
		xor    %esi,%esi
		xor    %edi,%edi

	_041a76_jump:
		mov    $0x3f500000,%ecx
		mov    %esi,%eax
		add    $0x000004,%edi
		call   _07b952_func
		xor    %ebx,%ebx
		call   _07c6ce_func
		call   _07bb4f_func
		mov    $0x40f00000,%ecx
		xor    %ebx,%ebx
		call   _081302_func
		call   _07bb4f_func
		call   _07c19c_func
		mov    _0dfd4c_data,%edx
		inc    %esi
		mov    %eax,-0x000004(%edx,%edi,1)
		cmp    $0x001400,%esi
		jl     _041a76_jump

	_041aba_jump:
		call   _041ac8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041ac8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cef86_data,%ah
		test   %ah,%ah
		je     _041ae8_jump
		movb   $0x000001,_0cef84_data
		movb   $0x000003,_0cef83_data
		jmp    _041af6_jump

	_041ae8_jump:
		mov    $0x000003,%dh
		mov    %ah,_0cef84_data
		mov    %dh,_0cef83_data

	_041af6_jump:
		mov    $0x000019,%edx
		mov    $0x000057,%ebx
		mov    $0x000032,%ecx
		mov    $0x0000a0,%esi
		mov    $0x000064,%edi
		mov    $0x000a00,%ebp
		mov    $0x000640,%eax
		mov    %edx,_0cc5ec_data
		mov    %ebx,_0cc5c0_data
		mov    %ecx,_0cc5bc_data
		mov    %esi,_0cc5cc_data
		mov    %edi,_0cc5c8_data
		mov    %ebp,_0dfd20_data
		xor    %cl,%cl
		mov    %eax,_0dfd1c_data
		mov    %cl,_0cef82_data
		mov    %cl,_0cef81_data
		call   _04211c_func
		cmpb   $0x000000,_0cef86_data
		je     _041b85_jump
		mov    _0cc5ec_data,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0cc5c4_data
		call   _04228c_func

	_041b85_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041b8c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0cc5ec_data,%ebx
		add    %eax,%ebx
		mov    $0x000040,%eax
		cmp    %ebx,%eax
		jle    _041ba3_jump
		mov    %ebx,%eax

	_041ba3_jump:
		mov    %eax,%ebx
		mov    $0x000019,%eax
		cmp    %ebx,%eax
		jge    _041bb0_jump
		mov    %ebx,%eax

	_041bb0_jump:
		mov    %eax,_0cc5ec_data
		call   _04211c_func
		cmpb   $0x000000,_0cef84_data
		je     _041bd8_jump
		test   %edx,%edx
		jle    _041bce_jump
		mov    $0xffffffbf,%eax
		jmp    _041bd3_jump

	_041bce_jump:
		mov    $0x000041,%eax

	_041bd3_jump:
		call   _0421c0_func

	_041bd8_jump:
		pop    %edx
		pop    %ebx
		ret    



_041bdc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0dfd30_data,%bx
		mov    _0cc5cc_data,%dx
		mov    _0dfd2c_data,%si
		sub    %edx,%ebx
		mov    _0cc5c8_data,%cx
		movswl %bx,%eax
		sub    %ecx,%esi
		test   %eax,%eax
		jge    _041c0a_jump
		neg    %eax

	_041c0a_jump:
		mov    %eax,%edx
		movswl %si,%eax
		mov    %edx,%edi
		test   %eax,%eax
		jge    _041c17_jump
		neg    %eax

	_041c17_jump:
		add    %eax,%edi
		test   %di,%di
		jle    _041c41_jump
		mov    $0x000006,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %di,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		mov    $0x000006,%cl
		mov    %eax,%ebx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%esi

	_041c41_jump:
		mov    _0963c4_data,%edx
		movswl %bx,%eax
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _041c5a_jump
		mov    $0x000001,%eax
		jg     _041c5a_jump
		neg    %eax

	_041c5a_jump:
		add    _0963c4_data,%eax
		mov    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _041c6b_jump
		mov    %ebx,%eax

	_041c6b_jump:
		mov    $0xfffffff0,%ebx
		cmp    %ebx,%eax
		jge    _041c76_jump
		mov    %ebx,%eax

	_041c76_jump:
		mov    _0963c8_data,%ecx
		mov    %eax,_0963c4_data
		movswl %si,%eax
		sub    %ecx,%eax
		cmp    $0x000000,%eax
		je     _041c94_jump
		mov    $0x000001,%eax
		jg     _041c94_jump
		neg    %eax

	_041c94_jump:
		mov    _0963c8_data,%esi
		mov    $0x000010,%ebx
		add    %esi,%eax
		cmp    %ebx,%eax
		jle    _041ca7_jump
		mov    %ebx,%eax

	_041ca7_jump:
		mov    $0xfffffff0,%ebx
		cmp    %ebx,%eax
		jge    _041cb2_jump
		mov    %ebx,%eax

	_041cb2_jump:
		mov    %eax,_0963c8_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041cc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041cd2_jump
		mov    %ebx,%eax

	_041cd2_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _041cdf_jump
		mov    %ebx,%eax

	_041cdf_jump:
		mov    _0cef82_data,%bl
		mov    %eax,%edx
		test   $0x000001,%bl
		je     _041d3a_jump
		mov    _0dfd24_data,%ecx
		mov    _0dfd20_data,%ebx
		and    $0x0000f0,%cl
		and    $0x00000f,%ebx
		or     %ebx,%ecx
		mov    %ecx,_0dfd24_data
		lea    (%ecx,%eax,1),%ebx
		mov    _0cedc6_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _041d1a_jump
		mov    %ebx,%eax

	_041d1a_jump:
		mov    _0cedb8_data,%ecx
		sar    $0x000010,%ecx
		shl    $0x000004,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _041d30_jump
		mov    %ebx,%eax

	_041d30_jump:
		mov    %eax,_0dfd24_data
		sar    $0x000004,%eax
		jmp    _041d69_jump

	_041d3a_jump:
		mov    _0cee0e_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0cedc6_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041d56_jump
		mov    %ebx,%eax

	_041d56_jump:
		mov    _0cedb8_data,%ecx
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _041d69_jump
		mov    %ebx,%eax

	_041d69_jump:
		mov    %ax,_0cee10_data
		mov    _0dfd20_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%eax
		sar    $0x000004,%eax
		mov    %ebx,_0dfd20_data
		mov    %eax,_0cc5cc_data
		call   _04211c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041d90_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041da2_jump
		mov    %ebx,%eax

	_041da2_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _041daf_jump
		mov    %ebx,%eax

	_041daf_jump:
		mov    _0cef82_data,%bl
		mov    %eax,%edx
		test   $0x000001,%bl
		je     _041e0a_jump
		mov    _0dfd28_data,%ecx
		mov    _0dfd1c_data,%ebx
		and    $0x0000f0,%cl
		and    $0x00000f,%ebx
		or     %ebx,%ecx
		mov    %ecx,_0dfd28_data
		lea    (%ecx,%eax,1),%ebx
		mov    _0cedc4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _041dea_jump
		mov    %ebx,%eax

	_041dea_jump:
		mov    _0cedba_data,%ecx
		sar    $0x000010,%ecx
		shl    $0x000004,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _041e00_jump
		mov    %ebx,%eax

	_041e00_jump:
		mov    %eax,_0dfd28_data
		sar    $0x000004,%eax
		jmp    _041e39_jump

	_041e0a_jump:
		mov    _0cedf8_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0cedc4_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041e26_jump
		mov    %ebx,%eax

	_041e26_jump:
		mov    _0cedba_data,%ecx
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _041e39_jump
		mov    %ebx,%eax

	_041e39_jump:
		mov    %ax,_0cedfa_data
		mov    _0dfd1c_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%eax
		sar    $0x000004,%eax
		mov    %ebx,_0dfd1c_data
		mov    %eax,_0cc5c8_data
		call   _04211c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041e60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041e73_jump
		mov    %ebx,%eax

	_041e73_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _041e80_jump
		mov    %ebx,%eax

	_041e80_jump:
		mov    _0cedba_data,%dx
		mov    %eax,%ecx
		mov    _0cee10_data,%ax
		xor    %esi,%esi
		cmp    %dx,%ax
		je     _041e9f_jump
		cmp    _0cedc8_data,%ax
		jne    _041ecd_jump

	_041e9f_jump:
		mov    _0cee10_data,%ax
		cmp    _0cedba_data,%ax
		jne    _041eb2_jump
		test   %ecx,%ecx
		jg     _041ecd_jump

	_041eb2_jump:
		mov    _0cee10_data,%ax
		cmp    _0cedc8_data,%ax
		jne    _041fa3_jump
		test   %ecx,%ecx
		jge    _041fa3_jump

	_041ecd_jump:
		mov    _0cc5ec_data,%eax
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cc5cc_data,%edx
		cmp    %edx,%eax
		jge    _041fa3_jump
		mov    $0x000140,%ebx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _041fa3_jump
		testb  $0x000001,_0cef82_data
		je     _041f4f_jump
		mov    _0dfd24_data,%eax
		mov    _0dfd20_data,%ebx
		and    $0x0000f0,%al
		and    $0x00000f,%ebx
		or     %ebx,%eax
		mov    %eax,_0dfd24_data
		lea    (%eax,%ecx,1),%ebx
		mov    _0cedc6_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _041f2f_jump
		mov    %ebx,%eax

	_041f2f_jump:
		mov    _0cedb8_data,%esi
		sar    $0x000010,%esi
		shl    $0x000004,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _041f45_jump
		mov    %ebx,%eax

	_041f45_jump:
		mov    %eax,_0dfd24_data
		sar    $0x000004,%eax
		jmp    _041f80_jump

	_041f4f_jump:
		mov    %ecx,%eax
		mov    _0cee0e_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0cedc6_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041f6d_jump
		mov    %ebx,%eax

	_041f6d_jump:
		mov    _0cedb8_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _041f80_jump
		mov    %ebx,%eax

	_041f80_jump:
		mov    %ax,_0cee10_data
		mov    _0dfd20_data,%esi
		add    %ecx,%esi
		mov    %esi,%eax
		mov    %esi,_0dfd20_data
		sar    $0x000004,%eax
		mov    $0x000001,%esi
		mov    %eax,_0cc5cc_data

	_041fa3_jump:
		call   _04211c_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041fb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041fc3_jump
		mov    %ebx,%eax

	_041fc3_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _041fd0_jump
		mov    %ebx,%eax

	_041fd0_jump:
		mov    _0cedbc_data,%dx
		mov    %eax,%ecx
		mov    _0cedfa_data,%ax
		xor    %esi,%esi
		cmp    %dx,%ax
		je     _041fef_jump
		cmp    _0cedc6_data,%ax
		jne    _04201d_jump

	_041fef_jump:
		mov    _0cedfa_data,%ax
		cmp    _0cedbc_data,%ax
		jne    _042002_jump
		test   %ecx,%ecx
		jg     _04201d_jump

	_042002_jump:
		mov    _0cedfa_data,%ax
		cmp    _0cedc6_data,%ax
		jne    _0420f3_jump
		test   %ecx,%ecx
		jge    _0420f3_jump

	_04201d_jump:
		mov    _0cc5ec_data,%eax
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cc5c8_data,%edx
		cmp    %edx,%eax
		jge    _0420f3_jump
		mov    $0x0000c8,%ebx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _0420f3_jump
		testb  $0x000001,_0cef82_data
		je     _04209f_jump
		mov    _0dfd28_data,%eax
		mov    _0dfd1c_data,%ebx
		and    $0x0000f0,%al
		and    $0x00000f,%ebx
		or     %ebx,%eax
		mov    %eax,_0dfd28_data
		lea    (%eax,%ecx,1),%ebx
		mov    _0cedc4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _04207f_jump
		mov    %ebx,%eax

	_04207f_jump:
		mov    _0cedba_data,%esi
		sar    $0x000010,%esi
		shl    $0x000004,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _042095_jump
		mov    %ebx,%eax

	_042095_jump:
		mov    %eax,_0dfd28_data
		sar    $0x000004,%eax
		jmp    _0420d0_jump

	_04209f_jump:
		mov    %ecx,%eax
		mov    _0cedf8_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0cedc4_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0420bd_jump
		mov    %ebx,%eax

	_0420bd_jump:
		mov    _0cedba_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _0420d0_jump
		mov    %ebx,%eax

	_0420d0_jump:
		mov    %ax,_0cedfa_data
		mov    _0dfd1c_data,%esi
		add    %ecx,%esi
		mov    %esi,%eax
		mov    %esi,_0dfd1c_data
		sar    $0x000004,%eax
		mov    $0x000001,%esi
		mov    %eax,_0cc5c8_data

	_0420f3_jump:
		call   _04211c_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04211c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cc5ec_data,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		mov    %eax,%ecx
		sar    $0x00001f,%edx
		mov    %eax,_0cc5c0_data
		sub    %edx,%eax
		sar    %eax
		mov    _0cc5ec_data,%esi
		add    %esi,%esi
		mov    %eax,%ebx
		mov    _0cc5cc_data,%eax
		mov    %esi,%edx
		sub    %ebx,%eax
		sar    $0x00001f,%edx
		mov    %eax,_0cc5e8_data
		mov    %esi,%eax
		sub    %edx,%eax
		sar    %eax
		mov    _0cc5c8_data,%edx
		sub    %eax,%edx
		mov    %edx,_0cc5e0_data
		lea    0x000002(%ebx),%edx
		mov    %dx,_0cedba_data
		lea    0x000002(%eax),%edx
		mov    %dx,_0cedbc_data
		xor    %edx,%edx
		mov    _0cecc0_data,%dx
		sub    %ebx,%edx
		sub    $0x000004,%edx
		mov    %dx,_0cedc8_data
		xor    %edx,%edx
		mov    _0cecb8_data,%dx
		sub    %eax,%edx
		sub    $0x000004,%edx
		mov    %esi,_0cc5bc_data
		mov    %dx,_0cedc6_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0421c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cc5ec_data,%edx
		mov    _095b18_data,%ebx
		neg    %edx
		imul   %ebx,%edx
		mov    _095b1c_data,%ecx
		mov    _0cc5c4_data,%esi
		add    %ecx,%edx
		cmp    %esi,%edx
		jne    _0421f8_jump
		testb  $0x000002,_0cef82_data
		je     _042253_jump
		cmp    _0dfd48_data,%esi
		je     _042253_jump

	_0421f8_jump:
		cmpb   $0x000000,_0cef86_data
		je     _042253_jump
		mov    _0cc5ec_data,%edx
		mov    _0cc5c4_data,%ebx
		neg    %edx
		add    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		cmp    %ebx,%eax
		jle    _04222c_jump
		mov    %ebx,%eax

	_04222c_jump:
		mov    %eax,%ebx
		xor    %eax,%eax
		cmp    %ebx,%eax
		jge    _042236_jump
		mov    %ebx,%eax

	_042236_jump:
		mov    %eax,_0cc5c4_data
		mov    $0x000001,%ah
		mov    %ah,_0cef84_data
		mov    %ah,_0cef85_data
		call   _04211c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042253_jump:
		cmpl   $0x000000,_0cc5c4_data
		je     _042279_jump
		cmpb   $0x000000,_0cef86_data
		je     _042279_jump
		mov    $0x000001,%ch
		xor    %al,%al
		mov    %ch,_0cef84_data
		mov    %al,_0cef85_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042279_jump:
		xor    %bh,%bh
		mov    %bh,_0cef84_data
		mov    %bh,_0cef85_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04228c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    _0cc5ec_data,%ebx
		imul   %ebx,%ebx
		mov    $0x200000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000040,%edx
		sub    _0cc5ec_data,%edx
		mov    %eax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		sar    $0x000002,%eax
		mov    _0cc5d0_data,%edi
		shl    $0x000002,%eax
		lea    0x00e100(%edi,%eax,1),%edx
		mov    %edx,0x000014(%esp)
		lea    0x00037c(%edi),%edx
		sub    %eax,%edx
		add    $0x00df00,%edx
		mov    _0cef86_data,%ah
		mov    %edx,0x000018(%esp)
		test   %ah,%ah
		je     _0424d6_jump
		xor    %dl,%dl
		mov    $0x007161,%ecx
		mov    %dl,_0cef85_data
		mov    $0x000000,%eax
		rep stos %eax,%es:(%edi)
		xor    %ecx,%ecx
		mov    %ecx,0x000020(%esp)
		mov    %ecx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)

	_04231b_jump:
		mov    0x000008(%esp),%eax
		mov    0x000014(%esp),%esi
		mov    0x000018(%esp),%ebp
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00001c(%esp)
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    0x00001c(%esp),%ecx
		mov    0x00001c(%esp),%edi
		mov    %eax,0x000010(%esp)
		neg    %edx
		add    %esi,%ecx
		add    %ebp,%edi
		mov    0x000018(%esp),%eax
		mov    %ecx,%esi
		mov    %edi,0x000028(%esp)
		add    %edx,%eax
		mov    0x000014(%esp),%edi
		mov    %eax,0x000030(%esp)
		add    %edi,%edx
		mov    %eax,(%esp)
		mov    %edx,0x00002c(%esp)
		jmp    _042494_jump

	_04236c_jump:
		lea    0x000000(,%ebx,4),%eax
		mov    %eax,0x000024(%esp)
		mov    0x000024(%esp),%edx
		mov    _0dfd38_data,%eax
		mov    0x000010(%esp),%edi
		add    %eax,%edx
		mov    _0dfd34_data,%eax
		add    %eax,%edi
		mov    (%edx),%eax
		mov    (%edi),%edx
		mov    0x00000c(%esp),%edi
		add    %edx,%eax
		imul   %edi,%eax
		cmp    $0x500000,%eax
		jae    _042463_jump
		shr    $0x00000a,%eax
		mov    _0dfd4c_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0cc5c4_data,%eax
		mov    (%edx),%ebp
		mov    %eax,%edx
		imul   %ebp,%edx
		mov    %ebx,%eax
		shr    $0x000010,%edx
		imul   %edx,%eax
		imul   0x000020(%esp),%edx
		add    $0x008000,%edx
		shr    $0x000010,%edx
		imul   $0x000140,%edx,%edx
		add    $0x008000,%eax
		shr    $0x000010,%eax
		test   %ebx,%ebx
		je     _04240b_jump
		mov    0x000014(%esp),%edi
		add    0x000024(%esp),%edi
		sub    0x00001c(%esp),%edi
		mov    %edx,%ebp
		sub    %eax,%ebp
		add    %ebp,(%edi)
		mov    0x000018(%esp),%edi
		sub    0x000024(%esp),%edi
		add    0x00001c(%esp),%edi
		mov    %eax,%ebp
		sub    %edx,%ebp
		add    %ebp,(%edi)

	_04240b_jump:
		cmpl   $0x000000,0x000020(%esp)
		je     _042428_jump
		mov    %eax,%edi
		neg    %edi
		mov    (%esi),%ebp
		sub    %edx,%edi
		add    %edi,%ebp
		lea    (%eax,%edx,1),%edi
		mov    %ebp,(%esi)
		mov    0x000030(%esp),%ebp
		add    %edi,0x000000(%ebp)

	_042428_jump:
		cmp    _0cc5ec_data,%ebx
		ja     _042463_jump
		cmpl   $0x000000,0x000020(%esp)
		je     _04244e_jump
		lea    (%eax,%edx,1),%edi
		mov    0x00002c(%esp),%ebp
		add    %edi,0x000000(%ebp)
		mov    %eax,%edi
		neg    %edi
		sub    %edx,%edi
		mov    0x000028(%esp),%ebp
		add    %edi,0x000000(%ebp)

	_04244e_jump:
		test   %ebx,%ebx
		je     _042463_jump
		mov    %eax,%edi
		mov    (%ecx),%ebp
		sub    %edx,%edi
		add    %edi,%ebp
		sub    %eax,%edx
		mov    (%esp),%eax
		mov    %ebp,(%ecx)
		add    %edx,(%eax)

	_042463_jump:
		mov    0x000030(%esp),%ebp
		mov    0x000028(%esp),%eax
		mov    0x00002c(%esp),%edx
		mov    (%esp),%edi
		add    $0x000004,%esi
		sub    $0x000004,%ecx
		inc    %ebx
		sub    $0x000004,%ebp
		add    $0x000004,%eax
		sub    $0x000004,%edx
		add    $0x000004,%edi
		mov    %ebp,0x000030(%esp)
		mov    %eax,0x000028(%esp)
		mov    %edx,0x00002c(%esp)
		mov    %edi,(%esp)

	_042494_jump:
		mov    _0cc5c0_data,%eax
		sub    _0cc5ec_data,%eax
		cmp    %eax,%ebx
		jb     _04236c_jump
		mov    0x000004(%esp),%edi
		mov    0x000020(%esp),%ebp
		mov    0x000008(%esp),%eax
		mov    _0cc5ec_data,%edx
		add    $0x000004,%edi
		inc    %ebp
		add    $0x0000e0,%eax
		mov    %edi,0x000004(%esp)
		mov    %ebp,0x000020(%esp)
		mov    %eax,0x000008(%esp)
		cmp    %edx,%ebp
		jbe    _04231b_jump

	_0424d6_jump:
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0424e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _092208_data,%si
		mov    _0cee28_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _042635_jump
		mov    _0cc5bc_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		sar    $0x000002,%edx
		mov    _0cdc0d_data,%al
		mov    _0cee08_data,%bx
		sub    %eax,%edx
		cmp    $0x0000ff,%bx
		jne    _042538_jump
		mov    _0cedb2_data,%cx
		test   %cx,%cx
		je     _042607_jump

	_042538_jump:
		mov    _0cdbdc_data,%ax
		sub    %edx,%eax
		mov    $0x000002,%cl
		mov    %eax,%edx
		test   %ax,%ax
		js     _04254e_jump
		sar    %cl,%ax
		jmp    _042557_jump

	_04254e_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_042557_jump:
		mov    %ax,_0cee08_data
		mov    _0cdbe4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04256b_jump
		neg    %eax

	_04256b_jump:
		mov    %eax,%ebx
		mov    _0cee06_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04257b_jump
		neg    %eax

	_04257b_jump:
		cmp    %eax,%ebx
		jg     _042635_jump
		mov    _0cdbe4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _042591_jump
		neg    %eax

	_042591_jump:
		mov    %eax,%ebx
		mov    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _04259e_jump
		mov    %ebx,%eax

	_04259e_jump:
		mov    _0cee08_data,%bx
		test   %bx,%bx
		jle    _0425c6_jump
		movswl %ax,%ebx
		mov    _0cee06_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0425bb_jump
		mov    %ebx,%eax

	_0425bb_jump:
		mov    %ax,_0cee08_data
		jmp    _042635_jump

	_0425c6_jump:
		jge    _0425e3_jump
		movswl %ax,%ebx
		mov    _0cee06_data,%eax
		neg    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _0425db_jump
		mov    %ebx,%eax

	_0425db_jump:
		mov    %ax,_0cee08_data
		jmp    _042635_jump

	_0425e3_jump:
		mov    _092208_data,%si
		test   %dx,%dx
		jle    _0425fa_jump
		movw   $0x000001,_0cee08_data
		jmp    _042635_jump

	_0425fa_jump:
		jge    _042635_jump
		movw   $0x00ffff,_0cee08_data
		jmp    _042635_jump

	_042607_jump:
		cmpb   $0x000001,_0cdc11_data
		je     _042635_jump
		mov    _0cdbda_data,%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		add    $0x000030,%eax
		cmp    %eax,%ebx
		jge    _04262e_jump
		movw   $0x00fffc,_0cee08_data
		jmp    _042635_jump

	_04262e_jump:
		mov    %cx,_0cee08_data

	_042635_jump:
		mov    _0cee26_data,%eax
		sar    $0x000010,%eax
		mov    _092208_data,%si
		cmp    $0xffffffff,%eax
		jne    _04283c_jump
		mov    _0cc5c0_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		xor    %ecx,%ecx
		mov    _0cdc0c_data,%cl
		sub    %ecx,%eax
		mov    _0cc5c0_data,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		sub    %ecx,%eax
		mov    _0cedb2_data,%cx
		mov    %eax,%edx
		test   %cx,%cx
		jg     _0426ad_jump
		mov    _0cdbe4_data,%di
		test   %di,%di
		jle    _0426ed_jump

	_0426ad_jump:
		mov    _0cdbda_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		mov    %si,_092208_data
		test   %ax,%ax
		js     _0426c8_jump
		sar    %cl,%ax
		jmp    _0426d1_jump

	_0426c8_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0426d1_jump:
		mov    _092208_data,%si
		cmp    %ax,%si
		jg     _0427a4_jump
		jge    _0427a5_jump
		inc    %esi
		jmp    _0427a5_jump

	_0426ed_jump:
		test   %cx,%cx
		jl     _0426f7_jump
		test   %di,%di
		jge    _042738_jump

	_0426f7_jump:
		mov    _0cdbda_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		mov    %si,_092208_data
		test   %ax,%ax
		js     _042712_jump
		sar    %cl,%ax
		jmp    _04271b_jump

	_042712_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04271b_jump:
		mov    _092208_data,%si
		cmp    %ax,%si
		jge    _04272d_jump
		inc    %esi
		jmp    _0427a5_jump

	_04272d_jump:
		jle    _0427a5_jump
		jmp    _0427a4_jump

	_042738_jump:
		mov    _0cdc25_data,%cl
		test   $0x000008,%cl
		je     _042771_jump
		mov    _0cdbda_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _042757_jump
		sar    %cl,%ax
		jmp    _042760_jump

	_042757_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_042760_jump:
		mov    _092208_data,%si
		cmp    %ax,%si
		jg     _0427a4_jump
		jge    _0427a5_jump
		inc    %esi
		jmp    _0427a5_jump

	_042771_jump:
		test   $0x000008,%cl
		jne    _0427a5_jump
		mov    _0cdbda_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _04278a_jump
		sar    %cl,%ax
		jmp    _042793_jump

	_04278a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_042793_jump:
		mov    _092208_data,%si
		cmp    %ax,%si
		jge    _0427a2_jump
		inc    %esi
		jmp    _0427a5_jump

	_0427a2_jump:
		jle    _0427a5_jump

	_0427a4_jump:
		dec    %esi

	_0427a5_jump:
		movswl %si,%eax
		mov    %si,_092208_data
		test   %eax,%eax
		jge    _0427b5_jump
		neg    %eax

	_0427b5_jump:
		mov    _092208_data,%si
		cmp    $0x000004,%eax
		jle    _0427d2_jump
		test   %si,%si
		jle    _0427cd_jump
		mov    $0x000004,%esi
		jmp    _0427d2_jump

	_0427cd_jump:
		mov    $0xfffffffc,%esi

	_0427d2_jump:
		mov    $0x000002,%cl
		mov    %esi,%eax
		mov    %si,_092208_data
		test   %ax,%ax
		js     _0427e7_jump
		sar    %cl,%ax
		jmp    _0427f0_jump

	_0427e7_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0427f0_jump:
		mov    _0cee06_data,%di
		mov    _092208_data,%si
		add    %eax,%edi
		mov    _0cdbda_data,%ax
		mov    %di,_0cee06_data
		cmp    %ax,%dx
		jle    _04281c_jump
		cmpw   $0x000000,_0cdbe4_data
		jl     _04282f_jump

	_04281c_jump:
		cmp    _0cdbda_data,%bx
		jge    _04283c_jump
		cmpw   $0x000000,_0cdbe4_data
		jle    _04283c_jump

	_04282f_jump:
		mov    _0cdbe4_data,%ax
		add    %ax,_0cee06_data

	_04283c_jump:
		mov    %si,_092208_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04284c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cc5c0_data,%edi
		mov    _0cc5bc_data,%esi
		xor    %ecx,%ecx
		xor    %eax,%eax
		add    $0x000002,%esi
		add    $0x000002,%edi
		mov    %esi,%edx
		mov    %edi,%ebx
		call   _01614e_func
		push   %esi
		xor    %eax,%eax
		push   %edi
		mov    _0cecc0_data,%ax
		push   %eax
		mov    _0cc5bc_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0cedf8_data,%ebx
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		mov    _0cc5c0_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0cee0e_data,%esi
		xor    %ecx,%ecx
		sar    $0x000010,%esi
		mov    _0cc638_data,%edi
		sub    %eax,%esi
		xor    %edx,%edx
		mov    %esi,%eax
		mov    _0ccd44_data,%esi
		call   _014b78_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0428cc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0cc5ec_data,%esi
		mov    %ax,0x000004(%esp)
		mov    %edx,%edi
		mov    $0x000001,%bl
		xor    %ecx,%ecx
		mov    %bl,0x000008(%esp)
		mov    _0cef83_data,%bh
		xor    %edx,%edx
		cmp    $0x000004,%bh
		je     _042b03_jump
		cmpw   $0x000000,_0cdbe4_data
		jne    _042942_jump
		cmpw   $0x000000,_0cdbe6_data
		jne    _042942_jump
		mov    $0x0000a0,%edx
		mov    $0x000064,%ecx
		mov    _0cc5cc_data,%ebp
		mov    %ecx,_0dfd2c_data
		mov    %edx,%ecx
		sub    %ebp,%ecx
		shl    $0x000004,%ecx
		mov    %edx,_0dfd30_data
		mov    %ecx,%eax
		mov    $0x000064,%edx
		call   _041cc0_func
		jmp    _042a15_jump

	_042942_jump:
		mov    _0cdbcc_data,%edx
		xor    %eax,%eax
		mov    _0cedb8_data,%ecx
		mov    _0cdc0c_data,%al
		sar    $0x000010,%ecx
		add    %eax,%edx
		cmp    %ecx,%edx
		jle    _042998_jump
		mov    _0cedc6_data,%ecx
		sar    $0x000010,%ecx
		cmp    %ecx,%edx
		jge    _042998_jump
		mov    _0cdbd8_data,%ecx
		sar    $0x000010,%ecx
		add    %eax,%ecx
		mov    _0cc5c0_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %eax,%ecx
		shl    $0x000004,%ecx
		mov    %ecx,%eax
		call   _041e60_func
		test   %eax,%eax
		je     _0429ad_jump
		xor    %bl,%bl
		jmp    _0429ad_jump

	_042998_jump:
		mov    $0x0000a0,%ecx
		sub    _0cc5cc_data,%ecx
		shl    $0x000004,%ecx
		mov    %ecx,%eax
		call   _041cc0_func

	_0429ad_jump:
		mov    _0cdbd0_data,%eax
		xor    %edx,%edx
		mov    _0cedba_data,%ebp
		mov    _0cdc0d_data,%dl
		sar    $0x000010,%ebp
		add    %edx,%eax
		cmp    %ebp,%eax
		jle    _042a10_jump
		mov    _0cedc4_data,%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%eax
		jge    _042a10_jump
		mov    _0cdbda_data,%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    _0cc5bc_data,%edx
		mov    %eax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		sar    $0x000002,%eax
		sub    %eax,%edx
		shl    $0x000004,%edx
		mov    %edx,%eax
		call   _041fb0_func
		test   %eax,%eax
		je     _042a25_jump
		xor    %al,%al
		mov    %al,0x000008(%esp)
		jmp    _042a25_jump

	_042a10_jump:
		mov    $0x000064,%edx

	_042a15_jump:
		sub    _0cc5c8_data,%edx
		shl    $0x000004,%edx
		mov    %edx,%eax
		call   _041d90_func

	_042a25_jump:
		test   %bl,%bl
		je     _042a4f_jump
		mov    0x000002(%esp),%ebx
		mov    $0x000001,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _042a3b_jump
		mov    %ebx,%eax

	_042a3b_jump:
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		cmp    %ebx,%eax
		jge    _042a48_jump
		mov    %ebx,%eax

	_042a48_jump:
		add    %ax,_0cee10_data

	_042a4f_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _042a78_jump
		mov    $0x000001,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jle    _042a64_jump
		mov    %ebx,%eax

	_042a64_jump:
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		cmp    %ebx,%eax
		jge    _042a71_jump
		mov    %ebx,%eax

	_042a71_jump:
		add    %ax,_0cedfa_data

	_042a78_jump:
		mov    _0cee10_data,%ax
		mov    _0cedba_data,%bx
		mov    _0cc5ec_data,%esi
		cmp    %bx,%ax
		jl     _042a9c_jump
		mov    _0cedc8_data,%bx
	_042a98_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		cmp    %bx,%ax
		jle    _042ab4_jump

	_042a9c_jump:
		mov    %ebx,%eax
		mov    %bx,_0cee10_data
		xor    %ebx,%eax
	_042aa8_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		xor    %ebx,%ebx
		mov    %ax,_092208_data
		mov    %bx,0x000004(%esp)

	_042ab4_jump:
		mov    _0cedfa_data,%ax
		mov    _0cedbc_data,%bx
		cmp    %bx,%ax
		jge    _042ae1_jump
		mov    %ebx,%eax
		mov    %bx,_0cedfa_data
		mov    %esi,_0cc5ec_data
		xor    %ebx,%eax
		xor    %edi,%edi
		mov    %ax,_09220a_data
		jmp    _042b03_jump

	_042ae1_jump:
		mov    _0cedc6_data,%bx
		mov    %esi,_0cc5ec_data
		cmp    %bx,%ax
		jle    _042b03_jump
		xor    %edi,%edi
		mov    %bx,_0cedfa_data
		mov    %di,_09220a_data

	_042b03_jump:
		mov    $_0cdba4_data,%eax
		call   _042f64_func
		test   %di,%di
		jne    _042b19_jump
		andb   $0x0000fe,_0cef83_data

	_042b19_jump:
		mov    0x000004(%esp),%ebx
		mov    _0cc5ec_data,%esi
		test   %bx,%bx
		jne    _042b2f_jump
		andb   $0x0000fd,_0cef83_data

	_042b2f_jump:
		test   %ecx,%ecx
		jne    _042c40_jump
		test   %edx,%edx
		jne    _042c40_jump
		cmpw   $0x000000,_0cdbe6_data
		jne    _042c40_jump
		cmpw   $0x000000,_0cdbe4_data
		jne    _042c40_jump
		testb  $0x0000fb,_0cef83_data
		jne    _042c40_jump
		mov    %esi,_0cc5ec_data
		cmp    $0x000040,%esi
		jge    _042b86_jump
		cmpb   $0x000000,_0cef82_data
		jne    _042b86_jump
		mov    $0x000001,%eax
		call   _041b8c_func

	_042b86_jump:
		mov    _0cc5ec_data,%esi
		mov    %esi,%eax
		mov    _095b18_data,%edx
		neg    %eax
		imul   %edx,%eax
		mov    _095b1c_data,%ebx
		mov    _0cc5c4_data,%ecx
		add    %ebx,%eax
		cmp    %ecx,%eax
		jae    _042bbb_jump
		cmpb   $0x000000,_0cef82_data
		jne    _042bbb_jump
		mov    $0xfffffed4,%eax
		jmp    _042bee_jump

	_042bbb_jump:
		mov    _0cc5ec_data,%esi
		mov    %esi,%eax
		mov    _095b18_data,%edi
		neg    %eax
		imul   %edi,%eax
		mov    _095b1c_data,%ebp
		mov    _0cc5c4_data,%edx
		add    %ebp,%eax
		cmp    %edx,%eax
		jbe    _042bf3_jump
		cmpb   $0x000000,_0cef82_data
		jne    _042bf3_jump
		mov    $0x00012c,%eax

	_042bee_jump:
		call   _0421c0_func

	_042bf3_jump:
		mov    _0cc5ec_data,%esi
		mov    %esi,%eax
		mov    _095b18_data,%ebx
		neg    %eax
		imul   %ebx,%eax
		mov    _095b1c_data,%ecx
		mov    _0cc5c4_data,%edi
		add    %ecx,%eax
		cmp    %edi,%eax
		jne    _042c5b_jump
		cmp    $0x000040,%esi
		jne    _042c5b_jump
		cmpb   $0x000000,_0cef83_data
		jne    _042c5b_jump
		xor    %bl,%bl
		xor    %ebp,%ebp
		mov    %bl,_0cef82_data
		mov    $0x000004,%bh
		mov    %ebp,_0dfd44_data
		mov    %bh,_0cef83_data
		jmp    _042c5b_jump

	_042c40_jump:
		cmpw   $0x000000,_0cdbe4_data
		jne    _042c54_jump
		cmpw   $0x000000,_0cdbe6_data
		je     _042c5b_jump

	_042c54_jump:
		andb   $0x0000fb,_0cef83_data

	_042c5b_jump:
		mov    _0cef83_data,%cl
		cmp    $0x000004,%cl
		jne    _042f54_jump
		mov    _0dfd44_data,%eax
		inc    %eax
		mov    %eax,_0dfd44_data
		cmp    $0x000726,%eax
		jne    _042c9a_jump
		mov    _0cef82_data,%dh
		mov    $0x000019,%edi
		or     %cl,%dh
		mov    %edi,_0dfd50_data
		mov    %dh,_0cef82_data
		jmp    _042dd7_jump

	_042c9a_jump:
		cmp    $0x000708,%eax
		jne    _042ccb_jump
		orb    $0x000002,_0cef82_data
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0dfd48_data
		jmp    _042dd7_jump

	_042ccb_jump:
		mov    _0cef82_data,%ch
		test   %ch,%ch
		je     _042dd7_jump
		test   $0x000001,%ch
		jne    _042dd7_jump
		cmp    $0x000019,%esi
		jne    _042dd7_jump
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		mov    _0cc5c4_data,%ecx
		add    $0x007d96,%eax
		cmp    %ecx,%eax
		jne    _042dd7_jump
		mov    $0x000003,%ebx
		mov    _0cef82_data,%ah
		mov    %esi,%edx
		or     $0x000001,%ah
		sar    $0x00001f,%edx
		mov    %ah,_0cef82_data
		mov    %esi,%eax
		idiv   %ebx
		lea    0x000140(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		mov    %esi,_0cc5ec_data
		call   _069140_func
		mov    _0cc5ec_data,%esi
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    (%eax,%ecx,1),%edx
		mov    %edx,_0dfd3c_data
		lea    0x0000c8(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _069140_func
		mov    _0cc5ec_data,%esi
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    %ecx,%eax
		mov    %eax,_0dfd40_data
		mov    _0dfd3c_data,%eax
		mov    %eax,_0dfd30_data
		mov    _0dfd40_data,%eax
		mov    %eax,_0dfd2c_data
		mov    _0cee0e_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %eax,_0dfd24_data
		mov    _0cedf8_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %eax,_0dfd28_data
		mov    _0cc5cc_data,%eax
		shl    $0x000004,%eax
		mov    %eax,_0dfd20_data
		mov    _0cc5c8_data,%eax
		shl    $0x000004,%eax
		mov    %eax,_0dfd1c_data

	_042dd7_jump:
		mov    _0cef82_data,%bl
		mov    %esi,_0cc5ec_data
		test   $0x000001,%bl
		je     _042ea8_jump
		call   _041bdc_func
		mov    _0963c4_data,%eax
		call   _041cc0_func
		mov    _0963c8_data,%eax
		call   _041d90_func
		mov    _0cc5cc_data,%eax
		cmp    _0dfd3c_data,%eax
		jne    _042ea8_jump
		mov    _0cc5c8_data,%eax
		cmp    _0dfd40_data,%eax
		jne    _042ea8_jump
		mov    _0cc5ec_data,%esi
		mov    $0x000003,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    0x000140(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _069140_func
		mov    _0cc5ec_data,%esi
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    (%eax,%ecx,1),%edx
		mov    %edx,_0dfd3c_data
		lea    0x0000c8(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		mov    $0x000003,%ecx
		call   _069140_func
		mov    _0cc5ec_data,%esi
		movswl %ax,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		mov    %eax,_0dfd40_data
		mov    _0dfd3c_data,%eax
		mov    %eax,_0dfd30_data
		mov    _0dfd40_data,%eax
		mov    %eax,_0dfd2c_data

	_042ea8_jump:
		testb  $0x000002,_0cef82_data
		je     _042f02_jump
		mov    _0cc5c4_data,%eax
		mov    _0dfd48_data,%ebx
		cmp    %ebx,%eax
		jae    _042ee1_jump
		mov    $0x00012c,%eax
		call   _0421c0_func
		mov    _0cc5c4_data,%eax
		mov    _0dfd48_data,%ebp
		cmp    %ebp,%eax
		jbe    _042f02_jump
		mov    %ebp,_0cc5c4_data
		jmp    _042f02_jump

	_042ee1_jump:
		jbe    _042f02_jump
		mov    $0xfffffed4,%eax
		call   _0421c0_func
		mov    _0cc5c4_data,%eax
		mov    _0dfd48_data,%edi
		cmp    %edi,%eax
		jae    _042f02_jump
		mov    %edi,_0cc5c4_data

	_042f02_jump:
		mov    _0cef82_data,%cl
		mov    _0cc5ec_data,%esi
		test   $0x000004,%cl
		je     _042f54_jump
		mov    _0dfd50_data,%edx
		cmp    %edx,%esi
		jae    _042f24_jump
		mov    $0x000001,%eax
		jmp    _042f2b_jump

	_042f24_jump:
		jbe    _042f54_jump
		mov    $0xffffffff,%eax

	_042f2b_jump:
		call   _041b8c_func
		mov    _0cc5ec_data,%esi
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0dfd48_data

	_042f54_jump:
		mov    %esi,_0cc5ec_data
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_042f64_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cee10_data,%bx
		mov    0x000028(%eax),%dx
		sub    %ebx,%edx
		mov    _0cc5cc_data,%bx
		add    $0x000008,%edx
		add    %edx,%ebx
		mov    _0cc5e8_data,%dx
		mov    _0cedfa_data,%cx
		sub    %edx,%ebx
		mov    0x00002c(%eax),%dx
		mov    %bx,0x000036(%eax)
		mov    _0cc5c8_data,%bx
		sub    %ecx,%edx
		add    %edx,%ebx
		mov    _0cc5e0_data,%dx
		sub    %edx,%ebx
		mov    %bx,0x000038(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_042fb4_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0cdbe2_data,%eax
		mov    %dx,_0cee06_data
		mov    %dx,_0cee08_data
		sar    $0x000010,%eax
		mov    _0cdbcc_data,%edx
		add    %eax,%edx
		mov    _0cdbe4_data,%ax
		mov    %ax,_0cedb2_data
		mov    _0cdbe4_data,%eax
		mov    _0cdbd0_data,%ebx
		sar    $0x000010,%eax
		add    %eax,%ebx
		mov    %edx,_0cdbcc_data
		mov    %ebx,_0cdbd0_data
		pop    %edx
		pop    %ebx
		ret    

_043010_switch:
		.long   _04310a_case
		.long   _04310a_case
		.long   _0430e8_case
		.long   _04310a_case
		.long   _04310a_case
		.long   _04310a_case
		.long   _0430e8_case
		.long   _04310a_case
		.long   _043102_case
		.long   _04310a_case
		.long   _0430e8_case
		.long   _0430f0_case




_043040_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%eax
		mov    _0dfd54_data,%ecx
		mov    0x00000c(%ecx),%edx
		movw   $0x000000,0x000002(%ecx)
		test   %ax,%ax
		jl     _04306e_jump
		movswl %ax,%ebx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _04306c_jump
		mov    %ebx,%eax

	_04306c_jump:
		jmp    _043080_jump

	_04306e_jump:
		movswl %ax,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _04307e_jump
		mov    %ebx,%eax

	_04307e_jump:
		neg    %eax

	_043080_jump:
		xor    %ebx,%ebx
		mov    %ax,0x000006(%ecx)
		mov    (%esp),%bl
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _043094_jump
		mov    %ebx,%eax

	_043094_jump:
		mov    $0x00000c,%ebx
		cmp    %ebx,%eax
		jle    _04309f_jump
		mov    %ebx,%eax

	_04309f_jump:
		mov    %al,0x000008(%ecx)
		mov    (%ecx),%ah
		xor    %bl,%bl
		test   %ah,%ah
		jbe    _0430d2_jump

	_0430aa_jump:
		xor    %eax,%eax
		movw   $0x000000,0x000008(%edx)
		mov    %bl,%al
		mov    %ax,0x000006(%edx)
		mov    0x000008(%edx),%ax
		mov    %ax,0x000002(%edx)
		mov    %ax,(%edx)
		inc    %bl
		mov    %ax,0x000004(%edx)
		mov    (%ecx),%bh
		add    $0x00000a,%edx
		cmp    %bh,%bl
		jb     _0430aa_jump

	_0430d2_jump:
		mov    0x000008(%ecx),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _04310a_case
		and    $0x0000ff,%eax
		jmp    *%cs:_043010_switch(,%eax,4)

	_0430e8_case:
		movw   $0x000140,0x000004(%ecx)
		jmp    _043110_jump

	_0430f0_case:
		mov    0x000006(%ecx),%dx
		movw   $0x000140,0x000004(%ecx)
		neg    %edx
		mov    %dx,0x000006(%ecx)
		jmp    _043110_jump

	_043102_case:
		movw   $0x000064,0x000004(%ecx)
		jmp    _043110_jump

	_04310a_case:
		movw   $0x0000c8,0x000004(%ecx)

	_043110_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx

	_043115_jump:
		ret    

	_043118_case:
		mov    _0dfd54_data,%eax
		test   %eax,%eax
		je     _043115_jump
		cmpl   $0x000000,0x00000c(%eax)
		je     _04312f_jump
		add    $0x00000c,%eax
		call   _07b83c_func

	_04312f_jump:
		cmpl   $0x000000,_0dfd54_data
		je     _043115_jump
		mov    $_0dfd54_data,%eax
		jmp    _07b83c_func



_043144_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %al,0x000008(%esp)
		mov    %dx,(%esp)
		mov    %ecx,%ebp
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		test   %ebx,%ebx
		je     _0431c3_jump
		test   %ecx,%ecx
		je     _0431c3_jump
		mov    $0x000018,%eax
		call   _07b824_func
		mov    %eax,%edx
		mov    %eax,_0dfd54_data
		test   %eax,%eax
		je     _0431c3_jump
		mov    $0x00fa00,%ecx
		mov    _0cc638_data,%edi
		mov    %ebx,%esi
		movb   $0x0000c8,(%eax)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _043191_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_043191_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %ebx,%ebx
		mov    _0cc638_data,%eax
		mov    (%edx),%bl
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    %ebp,0x000014(%edx)
		call   _07b824_func
		mov    %eax,0x00000c(%edx)
		test   %eax,%eax
		je     _0431c3_jump
		movb   $0x000001,0x000004(%esp)

	_0431c3_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _0431de_jump
		xor    %eax,%eax
		mov    -0x000002(%esp),%edx
		mov    0x000008(%esp),%al
		sar    $0x000010,%edx
		call   _043040_func
		jmp    _0431e3_jump

	_0431de_jump:
		call   _043118_case

	_0431e3_jump:
		mov    0x000004(%esp),%al
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0431f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0dfd54_data,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    %edx,0x000004(%esp)
		mov    0x00000c(%eax),%ebp
		jmp    _0432e5_jump

	_043210_jump:
		mov    0x000006(%ebp),%ecx
		mov    0x000004(%ebp),%esi
		mov    0x000000(%ebp),%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ebx
		test   %ecx,%ecx
		jle    _0432d9_jump
		test   %ebx,%ebx
		jl     _0432d9_jump
		cmp    $0x0000c8,%ebx
		jge    _0432d9_jump
		test   %esi,%esi
		jl     _0432d9_jump
		cmp    $0x0000c8,%esi
		jge    _0432d9_jump
		movswl 0x000000(%ebp),%eax
		test   %eax,%eax
		jge    _04325e_jump
		add    %eax,%ecx
		xor    %eax,%eax

	_04325e_jump:
		lea    (%eax,%ecx,1),%edx
		cmp    $0x000140,%edx
		jle    _043270_jump
		mov    $0x000140,%ecx
		sub    %eax,%ecx

	_043270_jump:
		test   %ecx,%ecx
		jle    _0432d9_jump
		mov    0x000002(%ebp),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jge    _043282_jump
		add    %edx,%ecx
		xor    %edx,%edx

	_043282_jump:
		lea    (%edx,%ecx,1),%edi
		cmp    $0x000140,%edi
		jle    _043294_jump
		mov    $0x000140,%ecx
		sub    %edx,%ecx

	_043294_jump:
		test   %ecx,%ecx
		jle    _0432d9_jump
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000008(%esp),%ebx
		mov    0x000010(%ebx),%ebx
		add    %eax,%ebx
		mov    %ebx,(%esp)
		mov    %edx,%eax
		mov    %esi,%ebx
		mov    0x000008(%esp),%edi
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000014(%edi),%edi
		mov    (%esp),%esi
		add    %eax,%edi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0432d2_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0432d2_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_0432d9_jump:
		mov    0x000004(%esp),%eax
		inc    %eax
		add    $0x00000a,%ebp
		mov    %eax,0x000004(%esp)

	_0432e5_jump:
		mov    0x000008(%esp),%edx
		xor    %eax,%eax
		mov    0x000004(%esp),%ebx
		mov    (%edx),%al
		cmp    %ebx,%eax
		jg     _043210_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_043304_switch:
		.long   _043377_case
		.long   _043377_case
		.long   _043377_case
		.long   _043377_case
		.long   _043377_case
		.long   _043377_case
		.long   _043377_case
		.long   _043377_case
		.long   _043539_case
		.long   _043427_case
		.long   _0434b8_case
		.long   _04374f_case




_043334_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000048,%esp
		mov    _0dfd54_data,%ebp
		mov    0x000006(%ebp),%dx
		mov    0x00000c(%ebp),%esi
		test   %dx,%dx
		jl     _043359_jump
		mov    0x000004(%ebp),%bx
		sub    0x000002(%ebp),%bx
		jmp    _04335d_jump

	_043359_jump:
		mov    0x000002(%ebp),%bx

	_04335d_jump:
		mov    0x000008(%ebp),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _0437b5_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_043304_switch(,%eax,4)

	_043377_case:
		mov    0x000008(%ebp),%ah
		cmp    $0x000001,%ah
		je     _043389_jump
		cmp    $0x000002,%ah
		je     _043389_jump
		cmp    $0x000008,%ah
		jne    _04338d_jump

	_043389_jump:
		mov    %ebx,%eax
		jmp    _04338f_jump

	_04338d_jump:
		xor    %eax,%eax

	_04338f_jump:
		mov    0x000008(%ebp),%cl
		cmp    $0x000005,%cl
		je     _0433a1_jump
		cmp    $0x000004,%cl
		je     _0433a1_jump
		cmp    $0x000006,%cl
		jne    _0433a5_jump

	_0433a1_jump:
		mov    %ebx,%eax
		neg    %eax

	_0433a5_jump:
		mov    0x000008(%ebp),%dh
		mov    %eax,0x000014(%esp)
		cmp    $0x000003,%dh
		je     _0433bb_jump
		cmp    $0x000002,%dh
		je     _0433bb_jump
		cmp    $0x000004,%dh
		jne    _0433bf_jump

	_0433bb_jump:
		mov    %ebx,%esi
		jmp    _0433c1_jump

	_0433bf_jump:
		xor    %esi,%esi

	_0433c1_jump:
		mov    0x000008(%ebp),%al
		cmp    $0x000007,%al
		je     _0433d0_jump
		cmp    $0x000008,%al
		je     _0433d0_jump
		cmp    $0x000006,%al
		jne    _0433d4_jump

	_0433d0_jump:
		mov    %ebx,%eax
		jmp    _0433d6_jump

	_0433d4_jump:
		xor    %eax,%eax

	_0433d6_jump:
		mov    0x000008(%ebp),%dh
		mov    %eax,0x000010(%esp)
		cmp    $0x000001,%dh
		je     _0433e7_jump
		cmp    $0x000005,%dh
		jne    _0433eb_jump

	_0433e7_jump:
		xor    %ebx,%ebx
		jmp    _0433ed_jump

	_0433eb_jump:
		neg    %ebx

	_0433ed_jump:
		add    $0x000140,%ebx
		mov    0x00000c(%ebp),%eax
		xor    %ecx,%ecx

	_0433f8_jump:
		add    $0x00000a,%eax
		mov    %si,-0x000006(%eax)
		mov    0x000010(%esp),%edx
		mov    %cx,-0x000004(%eax)
		mov    %dx,-0x00000a(%eax)
		mov    0x000014(%esp),%edx
		mov    %bx,-0x000002(%eax)
		add    %ecx,%edx
		inc    %ecx
		mov    %dx,-0x000008(%eax)
		cmp    $0x0000c8,%cx
		jge    _0437e5_jump
		jmp    _0433f8_jump

	_043427_case:
		mov    %ebx,%eax
		mov    %ebx,0x00001c(%esp)
		xor    %ecx,%ecx
		neg    %eax
		mov    $0x000001,%ebx
		mov    %eax,0x000004(%esp)

	_04343a_jump:
		movswl %bx,%eax
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,(%esi,%eax,1)
		mov    (%esi,%eax,1),%dx
		mov    %edx,(%esp)
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		mov    (%esp),%edi
		mov    %di,(%edx,%esi,1)
		mov    %di,0x000004(%esi,%eax,1)
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    0x00001c(%esp),%edi
		mov    %bx,0x000006(%esi,%eax,1)
		mov    %di,0x000002(%edx,%esi,1)
		mov    0x000004(%esp),%edi
		movw   $0x000140,0x000008(%esi,%eax,1)
		mov    %di,0x000002(%esi,%eax,1)
		add    $0x000002,%ecx
		mov    0x000008(%esi,%eax,1),%ax
		add    $0x000002,%ebx
		mov    %ax,0x000008(%edx,%esi,1)
		mov    %edi,%edx
		mov    0x00001c(%esp),%edi
		add    $0x000002,%edx
		add    $0x000002,%edi
		mov    %edx,0x000004(%esp)
		mov    %edi,0x00001c(%esp)
		cmp    $0x0000c8,%cx
		jge    _0437e5_jump
		jmp    _04343a_jump

	_0434b8_case:
		mov    $0x000140,%eax
		mov    $0x000001,%edi
		xor    %ecx,%ecx
		sub    %ebx,%eax
		mov    %di,0x000034(%esp)
		mov    %eax,0x000008(%esp)

	_0434cf_jump:
		mov    0x000032(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		movw   $0x000000,(%esi,%eax,1)
		mov    (%esi,%eax,1),%di
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000002(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    %bx,0x000004(%esi,%eax,1)
		mov    0x000008(%esp),%edi
		mov    %bx,(%edx,%esi,1)
		mov    %di,0x000008(%esi,%eax,1)
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x000034(%esp),%edx
		mov    %dx,0x000002(%esi,%eax,1)
		mov    %dx,0x000006(%esi,%eax,1)
		mov    %edx,%eax
		add    $0x000002,%eax
		add    $0x000002,%ecx
		mov    %ax,0x000034(%esp)
		cmp    $0x0000c8,%cx
		jge    _0437e5_jump
		jmp    _0434cf_jump

	_043539_case:
		mov    0x00000c(%ebp),%eax
		xor    %ecx,%ecx

	_04353e_jump:
		add    $0x00000a,%eax
		inc    %ecx
		movw   $0x000000,-0x000002(%eax)
		cmp    $0x0000c8,%cx
		jl     _04353e_jump
		movw   $0x0000c7,0x000040(%esp)
		mov    %ebx,%eax
		add    %ebx,%eax
		neg    %eax
		add    $0x000140,%eax
		mov    %eax,0x00002c(%esp)
		mov    %ebx,%eax
		neg    %eax
		mov    0x00000c(%ebp),%esi
		add    $0x0000c7,%eax
		xor    %ecx,%ecx
		mov    %eax,0x000020(%esp)
		jmp    _0435eb_jump

	_043579_jump:
		imul   $0x00000a,%edx,%edx
		mov    %ecx,%eax
		add    %ebx,%eax
		mov    %eax,0x000044(%esp)
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		mov    0x000044(%esp),%edi
		mov    %di,(%esi,%eax,1)
		mov    %di,0x000004(%esi,%eax,1)
		mov    %di,0x000002(%edx,%esi,1)
		mov    %di,(%edx,%esi,1)
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    0x000040(%esp),%edi
		mov    %di,0x000006(%esi,%eax,1)
		mov    0x000020(%esp),%edi
		mov    %di,0x000002(%esi,%eax,1)
		mov    0x00002c(%esp),%edi
		inc    %ecx
		mov    %di,0x000008(%esi,%eax,1)
		mov    %edi,%eax
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x000040(%esp),%edi
		mov    0x000020(%esp),%edx
		sub    $0x000002,%eax
		dec    %edi
		mov    %eax,0x00002c(%esp)
		dec    %edx
		mov    %di,0x000040(%esp)
		mov    %edx,0x000020(%esp)

	_0435eb_jump:
		mov    $0x000064,%edx
		movswl %bx,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %cx,%edx
		cmp    %eax,%edx
		jl     _043579_jump
		call   _0431f0_func
		mov    $0x0000c7,%edx
		mov    %ebx,%eax
		xor    %ecx,%ecx
		neg    %eax
		mov    %dx,0x00003c(%esp)
		mov    %eax,0x000028(%esp)

	_04361b_jump:
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,0x000004(%esi,%eax,1)
		mov    0x000004(%esi,%eax,1),%dx
		mov    %edx,0x000044(%esp)
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		mov    0x000044(%esp),%edi
		mov    %di,0x000004(%edx,%esi,1)
		mov    %bx,(%esi,%eax,1)
		mov    %bx,(%edx,%esi,1)
		mov    %cx,0x000002(%edx,%esi,1)
		mov    0x000028(%esp),%edi
		mov    %cx,0x000006(%edx,%esi,1)
		mov    %di,0x000008(%esi,%eax,1)
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x00003c(%esp),%edx
		inc    %ecx
		mov    %dx,0x000002(%esi,%eax,1)
		mov    %edx,%edi
		mov    %dx,0x000006(%esi,%eax,1)
		mov    0x000028(%esp),%eax
		dec    %edi
		inc    %eax
		mov    %di,0x00003c(%esp)
		mov    %eax,0x000028(%esp)
		cmp    $0x000064,%cx
		jl     _04361b_jump
		call   _0431f0_func
		mov    $0x0000c7,%edx
		mov    $0x0000c8,%edi
		mov    $0x000140,%eax
		xor    %ecx,%ecx
		mov    %eax,0x000030(%esp)
		mov    %ebx,%eax
		mov    %dx,0x000038(%esp)
		add    $0x000140,%eax
		mov    %edi,0x000018(%esp)
		mov    %eax,0x000024(%esp)

	_0436b8_jump:
		mov    %ecx,%eax
		sub    %ebx,%eax
		mov    %eax,0x000044(%esp)
		mov    0x000036(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		mov    0x000024(%esp),%edx
		mov    %edx,(%esp)
		mov    %dx,0x000004(%esi,%eax,1)
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		mov    (%esp),%edi
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000002(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    0x000038(%esp),%edi
		mov    %di,0x000006(%esi,%eax,1)
		mov    0x000030(%esp),%edi
		mov    %di,(%esi,%eax,1)
		mov    %di,(%edx,%esi,1)
		mov    0x000018(%esp),%edi
		mov    %di,0x000002(%esi,%eax,1)
		mov    0x000044(%esp),%edi
		inc    %ecx
		mov    %di,0x000008(%esi,%eax,1)
		mov    0x000030(%esp),%eax
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x000038(%esp),%edx
		mov    0x000018(%esp),%edi
		dec    %eax
		dec    %edx
		dec    %edi
		mov    %dx,0x000038(%esp)
		mov    0x000024(%esp),%edx
		mov    %eax,0x000030(%esp)
		dec    %edx
		mov    %edi,0x000018(%esp)
		mov    %edx,0x000024(%esp)
		cmp    $0x000064,%cx
		jge    _0437e5_jump
		jmp    _0436b8_jump

	_04374f_case:
		mov    $0x0000c8,%esi
		movswl %bx,%edx
		sub    %edx,%esi
		sar    %esi
		mov    %esi,%ecx
		mov    $0x000140,%esi
		sub    %edx,%esi
		mov    %esi,%edx
		sar    %edx
		mov    0x00000c(%ebp),%eax
		mov    %edx,0x00000c(%esp)
		xor    %edx,%edx

	_043771_jump:
		mov    %dx,0x000002(%eax)
		mov    0x00000c(%esp),%esi
		mov    %dx,0x000006(%eax)
		mov    %si,(%eax)
		mov    %si,0x000004(%eax)
		cmp    %cx,%dx
		jl     _0437a2_jump
		mov    $0x0000c8,%edi
		movswl %cx,%esi
		sub    %esi,%edi
		mov    %edi,%esi
		movswl %dx,%edi
		cmp    %edi,%esi
		jl     _0437a2_jump
		mov    %bx,0x000008(%eax)
		jmp    _0437a8_jump

	_0437a2_jump:
		movw   $0x000000,0x000008(%eax)

	_0437a8_jump:
		inc    %edx
		add    $0x00000a,%eax
		cmp    $0x0000c8,%dx
		jge    _0437e5_jump
		jmp    _043771_jump

	_0437b5_jump:
		mov    0x00000c(%ebp),%eax
		xor    %ecx,%ecx
		jmp    _0437db_jump

	_0437bc_jump:
		movw   $0x000000,(%eax)
		add    $0x00000a,%eax
		movw   $0x000140,-0x000002(%eax)
		mov    %cx,-0x000008(%eax)
		mov    %cx,-0x000004(%eax)
		mov    -0x00000a(%eax),%dx
		inc    %ecx
		mov    %dx,-0x000006(%eax)

	_0437db_jump:
		xor    %edx,%edx
		mov    0x000000(%ebp),%dl
		cmp    %dx,%cx
		jl     _0437bc_jump

	_0437e5_jump:
		mov    0x000004(%ebp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0437f1_jump
		neg    %eax

	_0437f1_jump:
		mov    0x000002(%ebp),%bx
		add    %eax,%ebx
		mov    0x000004(%ebp),%cx
		mov    %bx,0x000002(%ebp)
		cmp    %cx,%bx
		jbe    _04380a_jump
		movw   $0x000000,0x000002(%ebp)

	_04380a_jump:
		mov    0x000002(%ebp),%ax
		add    $0x000048,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043820_func:
		push   $0x000075
		outsb  %ds:(%esi),(%dx)
		insb   (%dx),%es:(%di)
		add    %al,%gs:(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %ch,0x000075(%ebp)
		jae    _04389a_jump
		arpl   %ax,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %ch,0x00006f(%ebp)
		jne    _0438ac_jump
		je     _0438a1_jump
		imul   $0x000000,0x000000(%esi),%ebp
		imul   $0x006567,0x000061(%ebp),%ebp
		add    %al,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		arpl   %sp,0x000076(%ecx)
		add    %al,%gs:(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %ah,0x000061(%ebx)
		imul   $0x000000,0x000000(%ebp),%esp
		add    %al,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)


_043870_func:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %cl,0x575651c0(%ebx)
		push   %ebp
		sub    $0x00005c,%esp
		mov    %eax,0x000028(%esp)
		mov    %edx,0x000014(%esp)
		mov    $0x000064,%eax
		call   _07b548_func
		mov    %eax,0x000004(%esp)
		call   _01cb80_func
		cmpb   $0x000001,_095b15_data
	_04389a_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		jne    _0438b0_jump
		mov    $0x011800,%edx
		mov    0x000028(%esp),%eax
		call   _07b220_func
		mov    %eax,_0ccd70_data
		jmp    _0438b8_jump

	_0438b0_jump:
		xor    %edx,%edx
		mov    %edx,_0ccd70_data

	_0438b8_jump:
		mov    $0x0000ff,%dl
		xor    %eax,%eax

	_0438bc_jump:
		inc    %eax
		mov    %dl,_0ce49f_data(%eax)
		cmp    $0x00000a,%eax
		jl     _0438bc_jump
		cmpw   $0x000000,_0cee48_data
		je     _0438df_jump
		mov    0x000004(%esp),%edx
		mov    _0c09a8_data,%eax
		mov    %eax,(%edx)
		jmp    _0438e6_jump

	_0438df_jump:
		mov    0x000004(%esp),%eax
		movb   $0x000000,(%eax)

	_0438e6_jump:
		mov    $_0c09ac_data,%esi
		mov    0x000004(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0438f8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _043910_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0438f8_jump

	_043910_jump:
		pop    %edi
		mov    $_0c09b4_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04391f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _043937_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04391f_jump

	_043937_jump:
		pop    %edi
		mov    %ebx,%esi
		mov    $_0c09b8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_043948_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _043960_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _043948_jump

	_043960_jump:
		pop    %edi
		mov    %edi,%eax
		call   _07d4d0_func
		mov    %eax,%edi
		mov    %eax,%esi
		test   %eax,%eax
		jne    _0439a2_jump
		mov    $0x0000c8,%eax
		mov    0x000004(%esp),%ebx
		call   _07b548_func
		push   %ebx
		push   $_0c09bc_data
		push   %eax
		mov    %eax,%edx
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func
		jmp    _044018_jump

	_0439a2_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %eax,%ecx
		lea    0x000030(%esp),%eax
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x00003c(%esp),%eax
		mov    %edi,%ecx
		call   _07c6dd_func
		cmpb   $0x000000,_095b15_data
		jne    _0439ed_jump
		mov    0x000030(%esp),%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		add    %eax,%eax
		mov    0x00003c(%esp),%bx
		mov    %ax,%dx
		mov    0x000028(%esp),%eax
		jmp    _043a08_jump

	_0439ed_jump:
		cmpb   $0x000000,_0cef74_data
		je     _043a12_jump
		mov    0x000028(%esp),%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00003c(%esp),%bx
		mov    0x000030(%esp),%dx

	_043a08_jump:
		call   _045f18_func
		mov    %eax,_0ccd2c_data

	_043a12_jump:
		mov    $0x000001,%ebx
		lea    0x000050(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $_0cef7f_data,%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $_0cef7c_data,%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		xor    %edi,%edi
		call   _07c6dd_func
		mov    $0x000001,%ebp
		jmp    _043a74_jump

	_043a53_jump:
		lea    0x000058(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%ebx
		mov    %ebp,%edx
		call   _07c6dd_func
		mov    0x000058(%esp),%bh
		xor    $0x000015,%bh
		inc    %edi
		mov    %bh,0x000058(%esp)
		mov    %bh,_0ce49f_data(%edi)

	_043a74_jump:
		xor    %eax,%eax
		mov    0x000050(%esp),%al
		cmp    %eax,%edi
		jl     _043a53_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_092204_data,%eax
		mov    %esi,%ecx
		call   _07c6dd_func
		mov    _092204_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000010(%esp)
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		lea    0x000028(%edx),%eax
		add    $_0dfd58_data,%eax
		mov    %eax,0x000008(%esp)
		lea    0x000080(%edx),%eax
		add    $_0dfd58_data,%eax
		mov    %eax,0x00001c(%esp)
		lea    0x000044(%edx),%eax
		add    $_0dfd58_data,%eax
		mov    %eax,0x00000c(%esp)
		jmp    _043ec2_jump

	_043ad6_jump:
		imul   $0x000084,0x000010(%esp),%ebp
		mov    $0x000001,%ebx
		lea    0x000048(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    0x000008(%esp),%eax
		mov    %esi,%ecx
		call   _07c6dd_func
		mov    $_0dfd58_data,%edi
		mov    0x000048(%esp),%cl
		add    %ebp,%edi
		test   %cl,%cl
		jne    _043b21_jump
		cmpb   $0x000000,_0cef73_data
		je     _043d58_jump

	_043b21_jump:
		imul   $0x000084,0x000010(%esp),%edi
		mov    0x000014(%esp),%eax
		mov    _0dfd80_data(%edi),%edx
		call   _07b220_func
		mov    %esi,%ecx
		mov    $0x000001,%edx
		mov    _0dfd80_data(%edi),%ebx
		mov    %eax,_0dfd60_data(%edi)
		call   _07c6dd_func
		mov    $0x000001,%ebx
		lea    0x00004c(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		mov    %edi,%ebx
		mov    _0dfd80_data(%edi),%ebp
		xor    %edx,%edx
		test   %ebp,%ebp
		jle    _043b8a_jump

	_043b70_jump:
		mov    _0dfd60_data(%ebx),%edi
		mov    (%edx,%edi,1),%al
		sub    %al,0x00004c(%esp)
		xorb   $0x00008f,(%edx,%edi,1)
		inc    %edx
		cmp    _0dfd80_data(%ebx),%edx
		jl     _043b70_jump

	_043b8a_jump:
		cmpb   $0x000000,0x00004c(%esp)
		je     _043bbe_jump
		mov    $0x0000c8,%eax
		mov    0x000004(%esp),%edi
		call   _07b548_func
		push   %edi
		push   $_0c09e0_data
		push   %eax
		mov    %eax,%edx
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func

	_043bbe_jump:
		imul   $0x000084,0x000010(%esp),%ebp
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%ecx
		mov    0x00000c(%esp),%eax
		call   _07c6dd_func
		xor    %edx,%edx
		mov    _0dfd9c_data(%ebp),%dx
		imul   $0x00000c,%edx,%edx
		mov    0x000028(%esp),%eax
		mov    %esi,%ecx
		xor    %ebx,%ebx
		call   _07b220_func
		mov    $0x00000c,%edx
		mov    _0dfd9c_data(%ebp),%bx
		mov    %eax,_0dfd58_data(%ebp)
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    0x00001c(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		mov    _0dfdd8_data(%ebp),%al
		test   %al,%al
		je     _043e79_jump
		xor    %edx,%edx
		mov    %al,%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000028(%esp),%eax
		xor    %edi,%edi
		call   _07b220_func
		xor    %edx,%edx
		mov    %eax,_0dfd5c_data(%ebp)
		mov    %edx,0x00002c(%esp)
		jmp    _043d3f_jump

	_043c4e_jump:
		mov    $0x000001,%ebx
		mov    _0dfd5c_data(%ebp),%eax
		mov    $0x000002,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000008,%eax
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    _0dfd5c_data(%ebp),%eax
		mov    $0x000002,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x00000a,%eax
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    _0dfd5c_data(%ebp),%eax
		mov    $0x000004,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000004,%eax
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000040(%esp),%eax
		mov    %esi,%ecx
		call   _07c6dd_func
		xor    %edx,%edx
		mov    0x000028(%esp),%eax
		mov    0x000040(%esp),%dx
		call   _07b220_func
		mov    _0dfd5c_data(%ebp),%edx
		mov    %esi,%ecx
		mov    %eax,(%edx,%edi,1)
		xor    %ebx,%ebx
		mov    _0dfd5c_data(%ebp),%eax
		mov    0x000040(%esp),%bx
		mov    $0x000001,%edx
		mov    (%edi,%eax,1),%eax
		call   _07c6dd_func
		mov    _0dfd5c_data(%ebp),%eax
		add    %edi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _043d33_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    0x000028(%esp),%eax
		shl    $0x000002,%edx
		call   _07b220_func
		mov    _0dfd5c_data(%ebp),%edx
		mov    %eax,0x000004(%edx,%edi,1)
		mov    %esi,%ecx
		mov    _0dfd5c_data(%ebp),%eax
		xor    %ebx,%ebx
		mov    $0x000004,%edx
		mov    0x00000a(%edi,%eax,1),%bx
		mov    0x000004(%edi,%eax,1),%eax
		call   _07c6dd_func

	_043d33_jump:
		mov    0x00002c(%esp),%eax
		inc    %eax
		add    $0x00000c,%edi
		mov    %eax,0x00002c(%esp)

	_043d3f_jump:
		xor    %eax,%eax
		mov    0x00002c(%esp),%ebx
		mov    _0dfdd8_data(%ebp),%al
		cmp    %ebx,%eax
		jle    _043e8f_jump
		jmp    _043c4e_jump

	_043d58_jump:
		mov    $0x000001,%ebx
		xor    %eax,%eax
		mov    _0dfd80_data(%ebp),%edx
		mov    %eax,_0dfd60_data(%ebp)
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _07c8fa_func
		mov    $0x000001,%ebx
		lea    0x00004c(%esp),%eax
		mov    %ebx,%edx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000044(%edi),%eax
		mov    %esi,%ecx
		call   _07c6dd_func
		xor    %edx,%edx
		mov    %edx,_0dfd58_data(%ebp)
		mov    _0dfd9c_data(%ebp),%dx
		imul   $0x00000c,%edx,%edx
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _07c8fa_func
		mov    $0x000001,%ebx
		lea    0x000080(%edi),%eax
		mov    %ebx,%edx
		call   _07c6dd_func
		cmpb   $0x000000,_0dfdd8_data(%ebp)
		je     _043e79_jump
		xor    %ebx,%ebx
		xor    %edi,%edi
		mov    %ebx,_0dfd5c_data(%ebp)
		jmp    _043e68_jump

	_043de6_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000034(%esp),%eax
		mov    %esi,%ecx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000038(%esp),%eax
		mov    %esi,%ecx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esp,%eax
		mov    %esi,%ecx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000040(%esp),%eax
		mov    %esi,%ecx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		mov    0x000040(%esp),%dx
		call   _07c8fa_func
		cmpl   $0xffffffff,(%esp)
		je     _043e67_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000038(%esp),%dx
		mov    %esi,%eax
		shl    $0x000002,%edx
		call   _07c8fa_func

	_043e67_jump:
		inc    %edi

	_043e68_jump:
		xor    %eax,%eax
		mov    _0dfdd8_data(%ebp),%al
		cmp    %eax,%edi
		jge    _043e8f_jump
		jmp    _043de6_jump

	_043e79_jump:
		mov    _0dfd5c_data,%eax
		mov    %eax,_0dfd5c_data(%ebp)
		mov    _0dfdd8_data,%al
		mov    %al,_0dfdd8_data(%ebp)

	_043e8f_jump:
		mov    0x000008(%esp),%edx
		mov    0x00001c(%esp),%ebx
		mov    0x00000c(%esp),%ecx
		mov    0x000010(%esp),%edi
		add    $0x000084,%edx
		add    $0x000084,%ebx
		add    $0x000084,%ecx
		inc    %edi
		mov    %edx,0x000008(%esp)
		mov    %ebx,0x00001c(%esp)
		mov    %ecx,0x00000c(%esp)
		mov    %edi,0x000010(%esp)

	_043ec2_jump:
		mov    _092202_data,%edx
		mov    _092204_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x000010(%esp),%ecx
		add    %edx,%eax
		cmp    %ecx,%eax
		jg     _043ad6_jump
		mov    _092206_data,%ax
		mov    _092204_data,%bx
		add    %eax,%ebx
		mov    %esi,%ecx
		mov    %bx,_092204_data
		mov    $0x000001,%ebx
		mov    $_0ceff0_data,%eax
		mov    %ebx,%edx
		call   _07c6dd_func
		xor    %eax,%eax
		mov    _0cefef_data,%al
		mov    %eax,0x000020(%esp)
		shl    $0x000002,%eax
		mov    %eax,0x000024(%esp)
		jmp    _043fcd_jump

	_043f21_jump:
		mov    $0x000001,%ebx
		lea    0x000044(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		xor    %edx,%edx
		mov    0x000044(%esp),%dl
		mov    0x000028(%esp),%eax
		shl    $0x000002,%edx
		xor    %ebp,%ebp
		call   _07b220_func
		mov    0x000024(%esp),%edx
		xor    %edi,%edi
		mov    %edx,0x000018(%esp)
		mov    %eax,_0cc318_data(%edx)
		jmp    _043faf_jump

	_043f59_jump:
		mov    $0x000001,%ebx
		lea    0x000054(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		xor    %edx,%edx
		mov    0x000054(%esp),%dl
		mov    0x000028(%esp),%eax
		shl    $0x000003,%edx
		call   _07b220_func
		mov    0x000018(%esp),%edx
		add    $0x000004,%edi
		mov    _0cc318_data(%edx),%edx
		mov    %eax,-0x000004(%edx,%edi,1)
		mov    0x000018(%esp),%eax
		mov    %esi,%ecx
		xor    %ebx,%ebx
		mov    _0cc318_data(%eax),%eax
		mov    0x000054(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%edi,%eax,1),%eax
		inc    %ebp
		call   _07c6dd_func

	_043faf_jump:
		xor    %eax,%eax
		mov    0x000044(%esp),%al
		cmp    %eax,%ebp
		jl     _043f59_jump
		mov    0x000024(%esp),%eax
		mov    0x000020(%esp),%edx
		add    $0x000004,%eax
		inc    %edx
		mov    %eax,0x000024(%esp)
		mov    %edx,0x000020(%esp)

	_043fcd_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0ceff0_data,%dl
		mov    _0cefef_data,%al
		mov    0x000020(%esp),%ebp
		add    %edx,%eax
		cmp    %ebp,%eax
		jg     _043f21_jump
		mov    _0cefef_data,%al
		mov    %dl,%ah
		add    %al,%ah
		mov    _0cef74_data,%dl
		mov    %ah,_0ceff0_data
		cmp    $0x000002,%dl
		je     _044011_jump
		mov    _0ce49d_data,%eax
		sar    $0x000018,%eax
		call   _045934_func

	_044011_jump:
		mov    %esi,%eax
		call   _07d584_func

	_044018_jump:
		mov    0x000004(%esp),%eax
		call   _07b6e0_func
		add    $0x00005c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04402c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000080,%esp
		mov    %eax,0x000068(%esp)
		mov    $0x000013,%ecx
		mov    %esp,%edi
		mov    $_043820_func,%esi
		mov    $0x000064,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   _07b548_func
		mov    %eax,%edx
		mov    %eax,0x000064(%esp)
		call   _01cb80_func
		cmpw   $0x000000,_0cee48_data
		je     _044072_jump
		mov    _0c09a8_data,%eax
		mov    %eax,(%edx)
		jmp    _044075_jump

	_044072_jump:
		movb   $0x000000,(%edx)

	_044075_jump:
		mov    $_0c09ac_data,%esi
		mov    0x000064(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044087_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04409f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044087_jump

	_04409f_jump:
		pop    %edi
		mov    $_0c09b4_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0440ae_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0440c6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0440ae_jump

	_0440c6_jump:
		pop    %edi
		mov    _0cede2_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    %esp,%esi
		add    %edx,%eax
		add    %eax,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0440ec_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044104_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0440ec_jump

	_044104_jump:
		pop    %edi
		mov    $_0c09b4_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044113_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04412b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044113_jump

	_04412b_jump:
		pop    %edi
		mov    %ebx,%esi
		mov    $_0c09b8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04413c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044154_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04413c_jump

	_044154_jump:
		pop    %edi
		mov    %edi,%eax
		call   _07d4d0_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _044190_jump
		mov    $0x0000c8,%eax
		call   _07b548_func
		push   %edi
		push   $_0c09fc_data
		push   %eax
		mov    %eax,%edx
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func
		jmp    _044863_jump

	_044190_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %eax,%ecx
		lea    0x000050(%esp),%eax
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000060(%esp),%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0cdb98_data,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0cdb9a_data,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    $0x000900,%ebx
		mov    $0x000001,%edx
		mov    $_0c7498_data,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $_0cefd9_data,%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    _0cefd9_data,%dl
		mov    %ah,_0cefd7_data
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7498_data,%esi
		sub    %edx,%eax
		mov    $_0c6e98_data,%edi
		shl    $0x000008,%eax
		mov    $0x000300,%ecx
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cdb98_data,%eax
		mov    _0cdb96_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    %edx,_0cdb9c_data
		mov    %edx,%eax
		shl    $0x000002,%edx
		sub    %eax,%edx
		mov    0x000068(%esp),%eax
		add    %edx,%edx
		mov    %ebp,%ecx
		call   _07b220_func
		mov    $0x000006,%edx
		mov    _0cdb9c_data,%ebx
		mov    %eax,_0cdba0_data
		call   _07c6dd_func
		mov    $0x000001,%ebx
		lea    0x00007c(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		lea    0x000074(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce298_data,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    _0ce298_data,%ebx
		cmp    $0xffffffff,%ebx
		jne    _0442de_jump
		xor    %ecx,%ecx
		mov    %ecx,_0ce298_data
		jmp    _044310_jump

	_0442de_jump:
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    $_0dfd58_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %edx,_0ce298_data
		cmpb   $0x000000,_095b15_data
		jne    _044310_jump
		cmpb   $0x000000,_0cef6b_data
		je     _044310_jump
		mov    0x000068(%esp),%eax
		call   _05af84_func

	_044310_jump:
		mov    _095b15_data,%bl
		cmp    $0x000001,%bl
		je     _044325_jump
		mov    _0cef6b_data,%bh
		test   %bh,%bh
		jne    _04432b_jump

	_044325_jump:
		mov    0x00007c(%esp),%al
		jmp    _044337_jump

	_04432b_jump:
		test   %bl,%bl
		jne    _04433c_jump
		test   %bh,%bh
		je     _04433c_jump
		mov    0x000074(%esp),%al

	_044337_jump:
		mov    %al,_0cef70_data

	_04433c_jump:
		mov    _095b15_data,%al
		cmp    $0x000001,%al
		jne    _044545_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000058(%esp),%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000054(%esp),%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    0x000058(%esp),%edi
		test   %edi,%edi
		je     _044390_jump
		mov    %edi,%edx
		mov    0x000068(%esp),%eax
		shl    $0x000008,%edx
		call   _07b220_func
		mov    %eax,_0ccd4c_data
		jmp    _044396_jump

	_044390_jump:
		mov    %edi,_0ccd4c_data

	_044396_jump:
		mov    0x000054(%esp),%edx
		test   %edx,%edx
		je     _0443ae_jump
		mov    0x000068(%esp),%eax
		call   _07b220_func
		mov    %eax,_0ccd14_data
		jmp    _0443b4_jump

	_0443ae_jump:
		mov    %edx,_0ccd14_data

	_0443b4_jump:
		mov    0x000058(%esp),%ebx
		mov    $0x000001,%edx
		mov    _0ccd4c_data,%eax
		mov    %ebp,%ecx
		shl    $0x000008,%ebx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		xor    %edx,%edx
		jmp    _0443fa_jump

	_0443e2_jump:
		mov    _0ccd4c_data,%esi
		mov    (%edx,%esi,1),%al
		sub    %al,0x000078(%esp)
		mov    (%edx,%esi,1),%bl
		inc    %edx
		xor    $0x00007d,%bl
		mov    %bl,-0x000001(%edx,%esi,1)

	_0443fa_jump:
		mov    0x000058(%esp),%eax
		shl    $0x000008,%eax
		cmp    %eax,%edx
		jb     _0443e2_jump
		cmpb   $0x000000,0x000078(%esp)
		je     _044439_jump
		mov    $0x0000c8,%eax
		call   _07b548_func
		mov    %eax,%edx
		mov    0x000064(%esp),%eax
		push   %eax
		push   $_0c09e0_data
		push   %edx
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func

	_044439_jump:
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0c27d8_data,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    _0ccd4c_data,%edx
		xor    %eax,%eax

	_044457_jump:
		mov    _0c27d8_data(%eax),%ebx
		add    $0x000004,%eax
		add    %edx,%ebx
		mov    %ebx,_0c27d4_data(%eax)
		cmp    $0x0012c0,%eax
		jne    _044457_jump
		mov    0x000054(%esp),%ebx
		mov    $0x000001,%edx
		mov    _0ccd14_data,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		mov    0x000054(%esp),%ecx
		xor    %edx,%edx
		test   %ecx,%ecx
		jbe    _0444be_jump

	_0444a0_jump:
		mov    _0ccd14_data,%esi
		mov    0x000078(%esp),%bh
		mov    (%edx,%esi,1),%al
		sub    %al,%bh
		mov    %bh,0x000078(%esp)
		xorb   $0x0000f3,(%edx,%esi,1)
		inc    %edx
		cmp    0x000054(%esp),%edx
		jb     _0444a0_jump

	_0444be_jump:
		cmpb   $0x000000,0x000078(%esp)
		je     _0444f2_jump
		mov    $0x0000c8,%eax
		mov    0x000064(%esp),%edi
		call   _07b548_func
		push   %edi
		push   $_0c09e0_data
		push   %eax
		mov    %eax,%edx
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func

	_0444f2_jump:
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0c3a98_data,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		xor    %eax,%eax

	_04450a_jump:
		cmpl   $0xffffffff,_0c3a98_data(%eax)
		je     _044521_jump
		mov    _0ccd14_data,%edx
		add    %edx,_0c3a98_data(%eax)
		jmp    _044529_jump

	_044521_jump:
		xor    %ebx,%ebx
		mov    %ebx,_0c3a98_data(%eax)

	_044529_jump:
		add    $0x000004,%eax
		cmp    $0x0012c0,%eax
		jne    _04450a_jump
		mov    0x000050(%esp),%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _07c8fa_func
		jmp    _044655_jump

	_044545_jump:
		test   %al,%al
		jne    _044655_jump
		mov    0x000060(%esp),%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _07c8fa_func
		mov    %ebp,%ecx
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0c3a98_data,%eax
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cc568_data,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cc564_data,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x00005c(%esp),%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    0x00005c(%esp),%edx
		mov    0x000068(%esp),%eax
		mov    $0x000001,%ebx
		call   _07b220_func
		mov    %ebp,%ecx
		mov    0x00005c(%esp),%edx
		mov    %eax,_0ccda4_data
		call   _07c6dd_func
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		mov    0x00005c(%esp),%esi
		xor    %edx,%edx
		test   %esi,%esi
		jle    _04460d_jump

	_0445ef_jump:
		mov    _0ccda4_data,%esi
		mov    0x000078(%esp),%bl
		mov    (%edx,%esi,1),%al
		sub    %al,%bl
		mov    %bl,0x000078(%esp)
		xorb   $0x0000ff,(%edx,%esi,1)
		inc    %edx
		cmp    0x00005c(%esp),%edx
		jl     _0445ef_jump

	_04460d_jump:
		cmpb   $0x000000,0x000078(%esp)
		je     _044641_jump
		mov    $0x0000c8,%eax
		mov    0x000064(%esp),%edi
		call   _07b548_func
		push   %edi
		push   $_0c0a20_data
		push   %eax
		mov    %eax,%edx
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func

	_044641_jump:
		mov    $_0c1b10_data,%edx
		mov    0x000068(%esp),%eax
		mov    _0ccda4_data,%ebx
		call   _05a68c_func

	_044655_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0cc304_data,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    _0cc302_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    0x000068(%esp),%eax
		shl    $0x000002,%edx
		call   _07b220_func
		mov    %eax,_0cc300_data
		mov    _0cc302_data,%edx
		sar    $0x000010,%edx
		mov    0x000068(%esp),%eax
		add    %edx,%edx
		call   _07b220_func
		mov    _0cc302_data,%edx
		mov    %eax,_0cc308_data
		sar    $0x000010,%edx
		mov    0x000068(%esp),%eax
		add    %edx,%edx
		call   _07b220_func
		mov    %eax,_0cc2f8_data
		mov    _0cc302_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ebx
		shl    $0x000005,%ebx
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0cc300_data,%eax
		shl    $0x000002,%ebx
		call   _07c0b0_func
		mov    _0cc302_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		lea    0x000001(%eax),%edx
		xor    %edi,%edi
		mov    0x000068(%esp),%eax
		mov    %ebp,%ecx
		call   _07b220_func
		mov    _0cc302_data,%ebx
		mov    $0x000002,%edx
		sar    $0x000010,%ebx
		mov    %eax,_0ce434_data
		call   _07c6dd_func
		mov    $0x000084,%edx
		mov    _0cc302_data,%ebx
		mov    _0cc300_data,%eax
		mov    %ebp,%ecx
		sar    $0x000010,%ebx
		xor    %esi,%esi
		call   _07c6dd_func
		jmp    _04484c_jump

	_04472e_jump:
		mov    _0cc300_data,%eax
		movswl (%esi,%eax,1),%edx
		imul   $0x000084,%edx,%edx
		mov    _0dfd58_data(%edx),%edx
		mov    %edx,(%esi,%eax,1)
		mov    0x000002(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0dfd5c_data(%edx),%edx
		mov    %edx,0x000004(%esi,%eax,1)
		mov    0x000006(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0dfd60_data(%edx),%edx
		mov    %edx,0x000008(%esi,%eax,1)
		mov    0x00000a(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		mov    _0cc318_data(,%edx,4),%edx
		mov    %ebp,%ecx
		mov    %edx,0x00000c(%esi,%eax,1)
		mov    $0x000002,%edx
		lea    0x000070(%esp),%eax
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x00006c(%esp),%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    0x000070(%esp),%eax
		test   %ax,%ax
		je     _0447ec_jump
		xor    %edx,%edx
		mov    %ax,%dx
		mov    0x000068(%esp),%eax
		call   _07b220_func
		mov    _0cc300_data,%edx
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000010(%edx,%esi,1)
		mov    %edx,%eax
		mov    0x000070(%esp),%bx
		mov    $0x000001,%edx
		mov    0x000010(%esi,%eax,1),%eax
		call   _07c6dd_func
		jmp    _0447f9_jump

	_0447ec_jump:
		mov    _0cc300_data,%eax
		movl   $0x000000,0x000010(%esi,%eax,1)

	_0447f9_jump:
		cmpw   $0x000000,0x00006c(%esp)
		je     _044838_jump
		xor    %edx,%edx
		mov    0x00006c(%esp),%dx
		mov    0x000068(%esp),%eax
		add    %edx,%edx
		call   _07b220_func
		mov    _0cc300_data,%edx
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000014(%edx,%esi,1)
		mov    %edx,%eax
		mov    0x00006c(%esp),%bx
		mov    $0x000002,%edx
		mov    0x000014(%esi,%eax,1),%eax
		call   _07c6dd_func
		jmp    _044845_jump

	_044838_jump:
		mov    _0cc300_data,%eax
		movl   $0x000000,0x000014(%esi,%eax,1)

	_044845_jump:
		add    $0x000084,%esi
		inc    %edi

	_04484c_jump:
		mov    _0cc302_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jl     _04472e_jump
		mov    %ebp,%eax
		call   _07d584_func

	_044863_jump:
		mov    0x000064(%esp),%eax
		call   _07b6e0_func
		add    $0x000080,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_044878_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,0x000018(%esp)
		mov    $0x000064,%eax
		mov    $_0c09ac_data,%esi
		call   _07b548_func
		mov    %eax,%ebx
		mov    %eax,(%esp)
		mov    %ebx,%edi
		movb   $0x000000,(%eax)
		call   _01cb80_func
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    $_0c09b4_data,%esi
		mov    %ebx,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0448b6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0448ce_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0448b6_jump

	_0448ce_jump:
		pop    %edi
		mov    $_0c0a4c_data,%esi
		mov    $_0c09b8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0448e2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0448fa_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0448e2_jump

	_0448fa_jump:
		pop    %edi
		mov    %ebx,%eax
		call   _07d4d0_func
		mov    %eax,%esi
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _044938_jump
		mov    $0x0000c8,%eax
		call   _07b548_func
		push   %ebx
		push   $_0c0a58_data
		push   %eax
		mov    %eax,%edx
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func
		jmp    _044c9b_jump

	_044938_jump:
		mov    _092202_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		mov    $0x000001,%ebx
		shl    $0x000005,%edi
		mov    %eax,0x000008(%esp)
		add    %eax,%edi
		mov    $_0dfd58_data,%eax
		shl    $0x000002,%edi
		mov    $0x000004,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000028,%eax
		call   _07c6dd_func
		mov    0x000018(%esp),%eax
		mov    _0dfd80_data(%edi),%edx
		call   _07b220_func
		mov    %esi,%ecx
		mov    $0x000001,%edx
		mov    _0dfd80_data(%edi),%ebx
		mov    %eax,_0dfd60_data(%edi)
		call   _07c6dd_func
		mov    %edi,%esi
		mov    _0dfd80_data(%edi),%edx
		xor    %eax,%eax
		test   %edx,%edx
		jle    _0449b1_jump

	_04499e_jump:
		mov    _0dfd60_data(%esi),%edx
		xorb   $0x00008f,(%edx,%eax,1)
		inc    %eax
		cmp    _0dfd80_data(%esi),%eax
		jl     _04499e_jump

	_0449b1_jump:
		mov    $_0dfd58_data,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		add    %esi,%edi
		mov    %ebp,%ecx
		lea    0x000044(%edi),%eax
		call   _07c6dd_func
		xor    %edx,%edx
		mov    _0dfd9c_data(%esi),%dx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    0x000018(%esp),%eax
		xor    %ebx,%ebx
		call   _07b220_func
		mov    $0x00000c,%edx
		mov    _0dfd9c_data(%esi),%bx
		mov    %eax,_0dfd58_data(%esi)
		call   _07c6dd_func
		mov    $0x000001,%ebx
		lea    0x000080(%edi),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		xor    %edx,%edx
		mov    _0dfdd8_data(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000018(%esp),%eax
		call   _07b220_func
		mov    %eax,_0dfd5c_data(%esi)
		mov    0x000008(%esp),%eax
		mov    %eax,%edi
		xor    %ecx,%ecx
		shl    $0x000005,%edi
		mov    %ecx,0x00000c(%esp)
		add    %eax,%edi
		xor    %esi,%esi
		shl    $0x000002,%edi
		jmp    _044b50_jump

	_044a5f_jump:
		mov    $0x000001,%ebx
		mov    _0dfd5c_data(%edi),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000008,%eax
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    _0dfd5c_data(%edi),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x00000a,%eax
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    _0dfd5c_data(%edi),%eax
		mov    $0x000004,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000004,%eax
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x00001c(%esp),%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		xor    %edx,%edx
		mov    0x000018(%esp),%eax
		mov    0x00001c(%esp),%dx
		call   _07b220_func
		mov    _0dfd5c_data(%edi),%edx
		mov    %ebp,%ecx
		mov    %eax,(%edx,%esi,1)
		xor    %ebx,%ebx
		mov    _0dfd5c_data(%edi),%eax
		mov    0x00001c(%esp),%bx
		mov    $0x000001,%edx
		mov    (%esi,%eax,1),%eax
		call   _07c6dd_func
		mov    _0dfd5c_data(%edi),%eax
		add    %esi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _044b44_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    0x000018(%esp),%eax
		shl    $0x000002,%edx
		call   _07b220_func
		mov    _0dfd5c_data(%edi),%edx
		mov    %eax,0x000004(%edx,%esi,1)
		mov    %ebp,%ecx
		mov    _0dfd5c_data(%edi),%eax
		xor    %ebx,%ebx
		mov    $0x000004,%edx
		mov    0x00000a(%esi,%eax,1),%bx
		mov    0x000004(%esi,%eax,1),%eax
		call   _07c6dd_func

	_044b44_jump:
		mov    0x00000c(%esp),%ebx
		inc    %ebx
		add    $0x00000c,%esi
		mov    %ebx,0x00000c(%esp)

	_044b50_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%edx
		mov    _0dfdd8_data(%edi),%al
		cmp    %edx,%eax
		jg     _044a5f_jump
		mov    $0x000001,%ebx
		mov    $_0ceff0_data,%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		xor    %ebx,%ebx
		mov    %ebx,0x000010(%esp)
		mov    %ebx,0x000014(%esp)
		jmp    _044c32_jump

	_044b86_jump:
		mov    $0x000001,%ebx
		lea    0x000024(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		xor    %edx,%edx
		mov    0x000024(%esp),%dl
		mov    0x000018(%esp),%eax
		shl    $0x000002,%edx
		xor    %edi,%edi
		call   _07b220_func
		mov    0x000014(%esp),%edx
		xor    %esi,%esi
		mov    %edx,0x000004(%esp)
		mov    %eax,_0cc318_data(%edx)
		jmp    _044c14_jump

	_044bbe_jump:
		mov    $0x000001,%ebx
		lea    0x000020(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		mov    0x000018(%esp),%eax
		shl    $0x000003,%edx
		call   _07b220_func
		mov    0x000004(%esp),%edx
		add    $0x000004,%esi
		mov    _0cc318_data(%edx),%edx
		mov    %eax,-0x000004(%edx,%esi,1)
		mov    0x000004(%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    _0cc318_data(%eax),%eax
		mov    0x000020(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%esi,%eax,1),%eax
		inc    %edi
		call   _07c6dd_func

	_044c14_jump:
		xor    %eax,%eax
		mov    0x000024(%esp),%al
		cmp    %eax,%edi
		jl     _044bbe_jump
		mov    0x000014(%esp),%esi
		mov    0x000010(%esp),%edi
		add    $0x000004,%esi
		inc    %edi
		mov    %esi,0x000014(%esp)
		mov    %edi,0x000010(%esp)

	_044c32_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%ecx
		mov    _0ceff0_data,%al
		cmp    %ecx,%eax
		jg     _044b86_jump
		mov    _092202_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		mov    $_0dfd58_data,%esi
		shl    $0x000005,%eax
		mov    $0x000084,%ecx
		add    %edx,%eax
		mov    $_0cdcd8_data,%edi
		shl    $0x000002,%eax
		mov    _0cc318_data,%edx
		add    %eax,%esi
		mov    %edx,_0dfd64_data(%eax)
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _092204_data,%dx
		inc    %edx
		mov    %ebp,%eax
		mov    %dx,_092204_data
		call   _07d584_func

	_044c9b_jump:
		mov    (%esp),%eax
		call   _07b6e0_func
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044cb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		call   _01cb80_func
		mov    $0x000064,%eax
		call   _07b548_func
		mov    _0ccdf4_data,%edx
		mov    %eax,%ebx
		mov    %eax,0x00000c(%esp)
		mov    $_0ccdb8_data,%eax
		call   _07b440_func
		mov    $_0ccda8_data,%eax
		mov    _0ccdf0_data,%edx
		call   _07b440_func
		mov    $_0ccdd8_data,%eax
		mov    _0ccdfc_data,%edx
		call   _07b440_func
		mov    $_0ccdcc_data,%eax
		mov    _0ccdf8_data,%edx
		call   _07b440_func
		cmpw   $0x000000,_0cee48_data
		je     _044d21_jump
		mov    _0c09a8_data,%eax
		mov    %eax,(%ebx)
		jmp    _044d24_jump

	_044d21_jump:
		movb   $0x000000,(%ebx)

	_044d24_jump:
		mov    $_0c09ac_data,%esi
		mov    0x00000c(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044d36_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044d4e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044d36_jump

	_044d4e_jump:
		pop    %edi
		mov    $_0c09b4_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044d5d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044d75_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044d5d_jump

	_044d75_jump:
		pop    %edi
		mov    $_0c0a80_data,%esi
		mov    $_0c09b8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044d89_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044da1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044d89_jump

	_044da1_jump:
		pop    %edi
		mov    %edi,%eax
		call   _07d4d0_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _044ddd_jump
		mov    $0x0000c8,%eax
		call   _07b548_func
		push   %edi
		push   $_0c0a8c_data
		push   %eax
		mov    %eax,%edx
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func
		jmp    _04548d_jump

	_044ddd_jump:
		mov    $0x000001,%ebx
		mov    %eax,%ecx
		mov    $_0ceff0_data,%eax
		mov    %ebx,%edx
		call   _07c6dd_func
		mov    _0ceff0_data,%al
		xor    %edx,%edx
		mov    %al,_0cefef_data
		mov    %edx,(%esp)
		jmp    _044e9c_jump

	_044e04_jump:
		mov    $0x000001,%ebx
		lea    0x00001c(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		mov    $_0ccdcc_data,%eax
		shl    $0x000002,%edx
		call   _07b220_func
		mov    (%esp),%edx
		xor    %edi,%edi
		xor    %esi,%esi
		mov    %eax,_0cc318_data(,%edx,4)
		jmp    _044e8f_jump

	_044e39_jump:
		mov    $0x000001,%ebx
		lea    0x000014(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		xor    %edx,%edx
		mov    0x000014(%esp),%dl
		mov    $_0ccdcc_data,%eax
		shl    $0x000003,%edx
		call   _07b220_func
		mov    (%esp),%edx
		mov    _0cc318_data(,%edx,4),%edx
		mov    %eax,(%edx,%esi,1)
		add    $0x000004,%esi
		mov    (%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    _0cc318_data(,%eax,4),%eax
		mov    0x000014(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%esi,%eax,1),%eax
		inc    %edi
		call   _07c6dd_func

	_044e8f_jump:
		xor    %eax,%eax
		mov    0x00001c(%esp),%al
		cmp    %eax,%edi
		jl     _044e39_jump
		incl   (%esp)

	_044e9c_jump:
		xor    %eax,%eax
		mov    (%esp),%ecx
		mov    _0ceff0_data,%al
		cmp    %ecx,%eax
		jg     _044e04_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_092204_data,%eax
		mov    %ebp,%ecx
		mov    $0x000001,%esi
		call   _07c6dd_func
		mov    _092204_data,%ax
		mov    %esi,(%esp)
		mov    %ax,_092206_data
		jmp    _045240_jump

	_044edd_jump:
		imul   $0x000084,%edx,%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0dfd58_data,%eax
		mov    $0x000004,%edx
		add    $0x00000c,%eax
		call   _07c6dd_func
		imul   $0x000084,(%esp),%eax
		mov    _0dfd64_data(%eax),%esi
		cmp    $0xffffffff,%esi
		jne    _044f18_jump
		xor    %edi,%edi
		mov    %edi,_0dfd64_data(%eax)
		jmp    _044f25_jump

	_044f18_jump:
		mov    _0cc318_data(,%esi,4),%edx
		mov    %edx,_0dfd64_data(%eax)

	_044f25_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cc56c_data,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cc578_data,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0dfd58_data,%eax
		mov    $0x000004,%edx
		add    $0x000028,%eax
		call   _07c6dd_func
		imul   $0x000084,(%esp),%edx
		mov    $_0ccdb8_data,%eax
		mov    _0dfd80_data(%edx),%edx
		call   _07b220_func
		mov    (%esp),%ecx
		mov    %eax,%edx
		imul   $0x000084,%ecx,%eax
		mov    %ebp,%ecx
		mov    _0dfd80_data(%eax),%ebx
		mov    %edx,_0dfd60_data(%eax)
		mov    %edx,%eax
		mov    $0x000001,%edx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		lea    0x000018(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c6dd_func
		xor    %edx,%edx
		jmp    _044fe1_jump

	_044fc3_jump:
		mov    _0dfd60_data(%eax),%esi
		mov    0x000018(%esp),%bl
		mov    (%edx,%esi,1),%al
		sub    %al,%bl
		mov    %bl,0x000018(%esp)
		mov    (%edx,%esi,1),%bh
		inc    %edx
		xor    $0x00008f,%bh
		mov    %bh,-0x000001(%edx,%esi,1)

	_044fe1_jump:
		imul   $0x000084,(%esp),%eax
		cmp    _0dfd80_data(%eax),%edx
		jl     _044fc3_jump
		cmpb   $0x000000,0x000018(%esp)
		je     _045024_jump
		mov    $0x0000c8,%eax
		call   _07b548_func
		mov    %eax,%edx
		mov    0x00000c(%esp),%eax
		push   %eax
		push   $_0c09e0_data
		push   %edx
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func

	_045024_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cc570_data,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0dfd58_data,%eax
		mov    $0x000002,%edx
		add    $0x000044,%eax
		call   _07c6dd_func
		imul   $0x000084,(%esp),%edx
		mov    _0dfd9c_data(%edx),%dx
		and    $0x00ffff,%edx
		imul   $0x00000c,%edx,%edx
		mov    $_0ccdcc_data,%eax
		call   _07b220_func
		mov    (%esp),%ecx
		mov    %eax,%edx
		imul   $0x000084,%ecx,%eax
		xor    %ebx,%ebx
		mov    %ebp,%ecx
		mov    _0dfd9c_data(%eax),%bx
		mov    %edx,_0dfd58_data(%eax)
		mov    %edx,%eax
		mov    $0x00000c,%edx
		call   _07c6dd_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0dfd58_data,%eax
		mov    %ebx,%edx
		add    $0x000080,%eax
		call   _07c6dd_func
		imul   $0x000084,(%esp),%eax
		cmpb   $0x000000,_0dfdd8_data(%eax)
		je     _045235_jump
		xor    %edx,%edx
		mov    _0dfdd8_data(%eax),%dl
		imul   $0x00000c,%edx,%edx
		mov    $_0ccdcc_data,%eax
		call   _07b220_func
		imul   $0x000084,(%esp),%edx
		xor    %edi,%edi
		xor    %esi,%esi
		mov    %eax,_0dfd5c_data(%edx)
		jmp    _04521d_jump

	_045101_jump:
		mov    $0x000001,%ebx
		mov    _0dfd5c_data(%eax),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000008,%eax
		call   _07c6dd_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    _0dfd5c_data(%eax),%eax
		mov    %ebp,%ecx
		add    %esi,%eax
		mov    $0x000002,%edx
		add    $0x00000a,%eax
		call   _07c6dd_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000004,%edx
		mov    _0dfd5c_data(%eax),%eax
		mov    %ebp,%ecx
		add    %esi,%eax
		mov    $0x000001,%ebx
		add    $0x000004,%eax
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000010(%esp),%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		xor    %edx,%edx
		mov    $_0ccdcc_data,%eax
		mov    0x000010(%esp),%dx
		call   _07b220_func
		imul   $0x000084,(%esp),%edx
		mov    _0dfd5c_data(%edx),%edx
		mov    %eax,(%edx,%esi,1)
		imul   $0x000084,(%esp),%eax
		xor    %ebx,%ebx
		mov    %ebp,%ecx
		mov    _0dfd5c_data(%eax),%eax
		mov    0x000010(%esp),%bx
		mov    $0x000001,%edx
		mov    (%esi,%eax,1),%eax
		call   _07c6dd_func
		imul   $0x000084,(%esp),%eax
		mov    _0dfd5c_data(%eax),%eax
		add    %esi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _045219_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    $_0ccdcc_data,%eax
		shl    $0x000002,%edx
		call   _07b220_func
		imul   $0x000084,(%esp),%edx
		mov    _0dfd5c_data(%edx),%edx
		mov    %eax,0x000004(%edx,%esi,1)
		imul   $0x000084,(%esp),%eax
		xor    %ebx,%ebx
		mov    _0dfd5c_data(%eax),%eax
		mov    $0x000004,%edx
		mov    %ebp,%ecx
		mov    0x00000a(%esi,%eax,1),%bx
		mov    0x000004(%esi,%eax,1),%eax
		call   _07c6dd_func

	_045219_jump:
		add    $0x00000c,%esi
		inc    %edi

	_04521d_jump:
		imul   $0x000084,(%esp),%eax
		xor    %edx,%edx
		mov    _0dfdd8_data(%eax),%dl
		cmp    %edx,%edi
		jge    _04523d_jump
		jmp    _045101_jump

	_045235_jump:
		xor    %edx,%edx
		mov    %edx,_0dfd5c_data(%eax)

	_04523d_jump:
		incl   (%esp)

	_045240_jump:
		mov    _092202_data,%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _044edd_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cc574_data,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    (%esp),%edx
		mov    %edx,%eax
		mov    $_0dfd58_data,%esi
		shl    $0x000005,%eax
		mov    $_0cdba4_data,%edi
		add    %edx,%eax
		mov    $0x000084,%ecx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%esi
		mov    $0x000004,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0dfd58_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0cdc34_data
		mov    _0dfd60_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0cdc38_data
		mov    _0dfd9c_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0cdc3c_data
		mov    %esp,%eax
		call   _07c6dd_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0dfd58_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0ce320_data
		mov    _0dfd60_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0ce324_data
		mov    _0dfd9c_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0ce328_data
		mov    %esp,%eax
		call   _07c6dd_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0dfd58_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0cdd5c_data
		mov    _0dfd60_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0cdd64_data
		mov    _0dfd9c_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0cdda0_data
		mov    %esp,%eax
		call   _07c6dd_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0dfd58_data(,%eax,4),%edx
		mov    _0dfd5c_data(,%eax,4),%ebx
		mov    _0dfdd8_data(,%eax,4),%cl
		mov    %edx,0x000008(%esp)
		mov    _0dfd60_data(,%eax,4),%edx
		mov    _0dfd64_data(,%eax,4),%esi
		mov    %edx,0x000004(%esp)
		mov    _0dfd9c_data(,%eax,4),%dx
		xor    %eax,%eax

	_0453cb_jump:
		add    $0x000084,%eax
		mov    %ebx,_0ccdac_data(%eax)
		mov    %dx,_0ccdec_data(%eax)
		mov    %cl,_0cce28_data(%eax)
		mov    0x000008(%esp),%edi
		mov    %esi,_0ccdb4_data(%eax)
		mov    %edi,_0ccda8_data(%eax)
		mov    0x000004(%esp),%edi
		mov    %edi,_0ccdb0_data(%eax)
		cmp    $0x000c60,%eax
		jne    _0453cb_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    (%esp),%edx
		mov    %edx,%eax
		mov    $_0dfd58_data,%esi
		shl    $0x000005,%eax
		mov    $_0ce29c_data,%edi
		add    %edx,%eax
		mov    $0x000084,%ecx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%esi
		mov    $0x000004,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _07c6dd_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $_0dfd58_data,%esi
		add    %edx,%eax
		mov    $_0cdc40_data,%edi
		shl    $0x000002,%eax
		mov    $0x000084,%ecx
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %ebp,%eax
		call   _07d584_func

	_04548d_jump:
		mov    $0x0004b0,%edx
		mov    $_0ccdcc_data,%eax
		call   _07b220_func
		mov    %eax,_0ccd08_data
		mov    $_0ccdb8_data,%eax
		call   _07b7b8_func
		mov    0x00000c(%esp),%eax
		call   _07b6e0_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0454c0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000ac,%esp
		mov    %eax,0x00008c(%esp)
		mov    %edx,0x000090(%esp)
		mov    %ebx,%ebp
		mov    %ecx,0x000084(%esp)
		call   _01cb80_func
		mov    $0x000064,%eax
		call   _07b548_func
		mov    _0cee48_data,%dx
		mov    %eax,0x000094(%esp)
		test   %dx,%dx
		je     _04550c_jump
		mov    _0c09a8_data,%edx
		mov    %edx,(%eax)
		jmp    _04550f_jump

	_04550c_jump:
		movb   $0x000000,(%eax)

	_04550f_jump:
		mov    $_0c0ab4_data,%esi
		mov    0x000094(%esp),%edi
		mov    $_0c09b8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_045529_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _045541_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _045529_jump

	_045541_jump:
		pop    %edi
		mov    %edi,%eax
		call   _07d4d0_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _045578_jump
		mov    $0x0000c8,%eax
		call   _07b548_func
		push   %edi
		push   $_0c0ac0_data
		push   %eax
		mov    %eax,%edx
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func

	_045578_jump:
		mov    0x000090(%esp),%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000002,%edi
		mov    _092165_data(%edi),%al
		mov    %al,0x0000a4(%esp)
		mov    _092160_data(%edi),%eax
		xor    %ebx,%ebx
		sub    $0x000080,%eax
		mov    _09215c_data(%edi),%edx
		mov    %eax,0x000080(%esp)
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _07c8fa_func
		mov    $0x000001,%ebx
		mov    $0x000080,%edx
		mov    %esp,%eax
		call   _07c6dd_func
		mov    %edi,%ebx
		xor    %eax,%eax

	_0455d0_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000a4(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000a4(%esp)
		mov    _092164_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _0455d0_jump
		mov    0x000008(%esp),%eax
		sub    0x000004(%esp),%eax
		inc    %eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000a(%esp),%eax
		sub    0x000006(%esp),%eax
		mov    0x000084(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x000084(%esp),%ebx
		mov    0x000042(%esp),%eax
		xor    %edx,%edx
		mov    %eax,0x0000a0(%esp)
		xor    %eax,%eax
		mov    (%ebx),%dx
		mov    0x000000(%ebp),%ax
		imul   %eax,%edx
		mov    %esi,%ecx
		mov    0x00008c(%esp),%eax
		mov    0x000080(%esp),%ebx
		call   _07b220_func
		mov    %eax,%edi
		mov    0x000080(%esp),%eax
		mov    $0x000001,%edx
		call   _07b548_func
		mov    %eax,0x000098(%esp)
		mov    %eax,0x000088(%esp)
		call   _07c6dd_func
		mov    %esi,%eax
		mov    0x000080(%esp),%ecx
		call   _07d584_func
		test   %ecx,%ecx
		jbe    _0456c6_jump
		mov    0x000090(%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    0x000098(%esp),%eax
		shl    $0x000002,%ebx
		lea    (%eax,%ecx,1),%esi

	_0456a4_jump:
		mov    0x0000a4(%esp),%ch
		sub    (%eax),%ch
		mov    _092164_data(%ebx),%dl
		mov    (%eax),%dh
		inc    %eax
		xor    %dl,%dh
		mov    %ch,0x0000a4(%esp)
		mov    %dh,-0x000001(%eax)
		cmp    %esi,%eax
		jb     _0456a4_jump

	_0456c6_jump:
		cmpb   $0x000000,0x0000a4(%esp)
		je     _045708_jump
		mov    $0x0000c8,%eax
		mov    0x000090(%esp),%esi
		call   _07b548_func
		push   %esi
		mov    %eax,%edx
		mov    0x000098(%esp),%eax
		push   %eax
		push   $_0c0ad4_data
		push   %edx
		call   _07c0db_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func

	_045708_jump:
		test   %edi,%edi
		je     _0457f2_jump
		cmpl   $0x000000,0x000088(%esp)
		je     _0457f2_jump
		xor    %ebx,%ebx
		xor    %esi,%esi
		mov    %ebx,0x00009c(%esp)
		jmp    _0457d0_jump

	_04572e_jump:
		xor    %eax,%eax

	_045730_jump:
		mov    0x00009c(%esp),%edx
		mov    0x000088(%esp),%ecx
		lea    0x000001(%edx),%ebx
		add    %ecx,%edx
		mov    (%edx),%dl
		mov    %dl,0x0000a8(%esp)
		and    $0x0000c0,%dl
		mov    %ebx,0x00009c(%esp)
		cmp    $0x0000c0,%dl
		jne    _0457a5_jump
		mov    0x0000a8(%esp),%dl
		and    $0x00003f,%dl
		lea    0x000001(%ebx),%ecx
		mov    %ecx,0x00009c(%esp)
		add    0x000088(%esp),%ebx
		mov    (%ebx),%bl
		and    $0x0000ff,%edx
		mov    %bl,0x0000a8(%esp)

	_045785_jump:
		dec    %edx
		cmp    $0xffffffff,%edx
		je     _0457bd_jump
		xor    %ebx,%ebx
		mov    0x000000(%ebp),%bx
		imul   %esi,%ebx
		mov    %eax,%ecx
		add    %ecx,%ebx
		mov    0x0000a8(%esp),%cl
		inc    %eax
		mov    %cl,(%edi,%ebx,1)
		jmp    _045785_jump

	_0457a5_jump:
		xor    %edx,%edx
		mov    0x000000(%ebp),%dx
		imul   %esi,%edx
		mov    %eax,%ebx
		add    %ebx,%edx
		mov    0x0000a8(%esp),%bl
		inc    %eax
		mov    %bl,(%edx,%edi,1)

	_0457bd_jump:
		xor    %edx,%edx
		mov    0x0000a0(%esp),%dx
		cmp    %edx,%eax
		jb     _045730_jump
		inc    %esi

	_0457d0_jump:
		mov    0x000084(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%ax
		cmp    %eax,%esi
		jb     _04572e_jump
		mov    0x000088(%esp),%eax
		call   _07b6e0_func
		jmp    _0457fc_jump

	_0457f2_jump:
		mov    $_0c0af8_data,%eax
		call   _01f3a4_func

	_0457fc_jump:
		mov    0x000094(%esp),%eax
		call   _07b6e0_func
		mov    %edi,%eax
		add    $0x0000ac,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_045814_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    %edx,(%esp)
		call   _01cb80_func
		mov    $0x000064,%eax
		call   _07b548_func
		mov    _0cee48_data,%dx
		mov    %eax,%ebp
		test   %dx,%dx
		je     _045848_jump
		mov    _0c09a8_data,%edx
		mov    %edx,(%eax)
		jmp    _04584b_jump

	_045848_jump:
		movb   $0x000000,(%eax)

	_04584b_jump:
		mov    $_0c0ab4_data,%esi
		mov    %ebp,%edi
		mov    $_0c09b8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_045860_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _045878_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _045860_jump

	_045878_jump:
		pop    %edi
		mov    %ebp,%eax
		call   _07d4d0_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _0458af_jump
		mov    $0x0000c8,%eax
		call   _07b548_func
		push   %ebp
		push   $_0c0ac0_data
		push   %eax
		mov    %eax,%edx
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func

	_0458af_jump:
		lea    0x000000(,%ebx,4),%edi
		sub    %ebx,%edi
		shl    $0x000002,%edi
		mov    _09215c_data(%edi),%eax
		add    _092160_data(%edi),%eax
		lea    -0x000300(%eax),%edx
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _07c8fa_func
		mov    $0x000001,%ebx
		mov    $0x000300,%edx
		mov    (%esp),%eax
		call   _07c6dd_func
		mov    %esi,%eax
		mov    (%esp),%ebx
		call   _07d584_func
		mov    %edi,%esi
		lea    0x000300(%ebx),%ecx

	_0458fc_jump:
		mov    _092164_data(%esi),%dl
		mov    (%ebx),%ah
		xor    %dl,%ah
		xor    %edx,%edx
		mov    %ah,%dl
		mov    %ah,(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		inc    %ebx
		mov    %al,-0x000001(%ebx)
		cmp    %ecx,%ebx
		jne    _0458fc_jump
		mov    %ebp,%eax
		call   _07b6e0_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_045934_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000c0,%esp
		mov    %eax,0x000080(%esp)
		cmpb   $0x000000,_0cef74_data
		je     _045f0b_jump
		call   _01cb80_func
		mov    $0x000064,%eax
		xor    %dl,%dl
		call   _07b548_func
		mov    %dl,0x0000b4(%esp)
		mov    _0cee48_data,%dx
		mov    %eax,0x000084(%esp)
		test   %dx,%dx
		je     _045989_jump
		mov    _0c09a8_data,%edx
		mov    %edx,(%eax)
		jmp    _04598c_jump

	_045989_jump:
		movb   $0x000000,(%eax)

	_04598c_jump:
		mov    $_0c0ab4_data,%esi
		mov    0x000084(%esp),%edi
		mov    $_0c09b8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0459a6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0459be_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0459a6_jump

	_0459be_jump:
		pop    %edi
		mov    %edi,%eax
		call   _07d4d0_func
		mov    %eax,0x0000a0(%esp)
		test   %eax,%eax
		jne    _0459fa_jump
		mov    $0x0000c8,%eax
		call   _07b548_func
		push   %edi
		push   $_0c0ac0_data
		push   %eax
		mov    %eax,%edx
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func

	_0459fa_jump:
		mov    0x000080(%esp),%edx
		lea    0x000000(,%edx,4),%esi
		sub    %edx,%esi
		mov    0x0000a0(%esp),%ecx
		shl    $0x000002,%esi
		xor    %ebx,%ebx
		mov    _092165_data(%esi),%al
		mov    _09215c_data(%esi),%edx
		mov    %al,0x0000b8(%esp)
		mov    0x0000a0(%esp),%eax
		mov    _092160_data(%esi),%ebp
		call   _07c8fa_func
		mov    $0x000001,%ebx
		mov    $0x000080,%edx
		mov    %esp,%eax
		sub    $0x000080,%ebp
		call   _07c6dd_func
		mov    %esi,%ebx
		xor    %eax,%eax

	_045a56_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000b8(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000b8(%esp)
		mov    _092164_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _045a56_jump
		mov    0x000008(%esp),%edi
		mov    0x00000a(%esp),%eax
		mov    0x000006(%esp),%ecx
		mov    0x000004(%esp),%ebx
		sub    %ecx,%eax
		sub    %ebx,%edi
		inc    %eax
		mov    _0cef74_data,%ch
		mov    %eax,0x0000b0(%esp)
		mov    0x000042(%esp),%eax
		inc    %edi
		mov    %eax,0x0000ac(%esp)
		cmp    $0x000002,%ch
		jne    _045add_jump
		mov    _0cc638_data,%eax
		mov    _0cc644_data,%esi
		mov    %eax,0x000088(%esp)
		cmp    $0x01f400,%ebp
		jle    _045af1_jump
		mov    $0x000001,%al
		mov    $0x01f400,%ebp
		mov    %al,0x0000b4(%esp)
		jmp    _045af1_jump

	_045add_jump:
		mov    %ebp,%eax
		call   _07b548_func
		mov    _0ccd2c_data,%esi
		mov    %eax,0x000088(%esp)

	_045af1_jump:
		mov    0x0000a0(%esp),%ecx
		mov    $0x000001,%edx
		mov    0x000088(%esp),%eax
		mov    %ebp,%ebx
		call   _07c6dd_func
		mov    0x0000a0(%esp),%eax
		call   _07d584_func
		xor    %edx,%edx
		test   %ebp,%ebp
		jle    _045b53_jump
		mov    0x000080(%esp),%eax
		lea    0x000000(,%eax,4),%ecx
		sub    %eax,%ecx
		mov    0x000088(%esp),%eax
		shl    $0x000002,%ecx

	_045b37_jump:
		mov    (%eax),%bl
		sub    %bl,0x0000b8(%esp)
		mov    _092164_data(%ecx),%bl
		mov    (%eax),%bh
		inc    %eax
		xor    %bl,%bh
		inc    %edx
		mov    %bh,-0x000001(%eax)
		cmp    %ebp,%edx
		jl     _045b37_jump

	_045b53_jump:
		cmpb   $0x000000,0x0000b4(%esp)
		jne    _045b9f_jump
		cmpb   $0x000000,0x0000b8(%esp)
		je     _045b9f_jump
		mov    $0x0000c8,%eax
		mov    0x000080(%esp),%ecx
		call   _07b548_func
		push   %ecx
		mov    0x000088(%esp),%ebp
		push   %ebp
		push   $_0c0b24_data
		push   %eax
		mov    %eax,%edx
		call   _07c0db_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func

	_045b9f_jump:
		mov    0x000084(%esp),%eax
		call   _07b6e0_func
		test   %esi,%esi
		je     _045ebd_jump
		cmpl   $0x000000,0x000088(%esp)
		je     _045ebd_jump
		cmpb   $0x000002,_0cef74_data
		je     _045bd7_jump
		cmpb   $0x000001,_0cef6d_data
		jne    _045d52_jump

	_045bd7_jump:
		xor    %ecx,%ecx
		mov    0x0000b0(%esp),%eax
		mov    %ecx,0x000094(%esp)
		mov    %ecx,0x00009c(%esp)
		cmp    $0x0000c8,%ax
		jbe    _045c28_jump
		xor    %eax,%eax
		mov    0x0000b0(%esp),%ax
		mov    $0x0000c8,%edx
		sub    $0x0000c8,%eax
		mov    %edx,0x0000b0(%esp)
		mov    0x0000b4(%esp),%dl
		mov    %eax,0x000094(%esp)
		test   %dl,%dl
		je     _045c28_jump
		mov    %ecx,0x000094(%esp)

	_045c28_jump:
		cmp    $0x000140,%di
		jbe    _045c34_jump
		mov    $0x000140,%edi

	_045c34_jump:
		xor    %edx,%edx
		mov    %edx,0x0000a4(%esp)
		jmp    _045d12_jump

	_045c42_jump:
		mov    0x000094(%esp),%ecx
		mov    %ebx,%edx
		xor    %eax,%eax
		sub    %ecx,%edx

	_045c4f_jump:
		mov    0x00009c(%esp),%ebx
		mov    0x000088(%esp),%ecx
		lea    0x000001(%ebx),%ebp
		add    %ecx,%ebx
		mov    (%ebx),%bl
		mov    %bl,0x0000bc(%esp)
		and    $0x0000c0,%bl
		mov    %ebp,0x00009c(%esp)
		cmp    $0x0000c0,%bl
		jne    _045cd4_jump
		mov    0x0000bc(%esp),%bl
		and    $0x00003f,%bl
		mov    %ebp,%ecx
		inc    %ebp
		mov    %ebp,0x00009c(%esp)
		add    0x000088(%esp),%ecx
		mov    (%ecx),%cl
		and    $0x0000ff,%ebx
		mov    %cl,0x0000bc(%esp)

	_045ca4_jump:
		dec    %ebx
		cmp    $0xffffffff,%ebx
		je     _045cf9_jump
		xor    %ecx,%ecx
		mov    %di,%cx
		cmp    %ecx,%eax
		jge    _045cd1_jump
		test   %edx,%edx
		jl     _045cd1_jump
		cmp    $0x0000c8,%edx
		jge    _045cd1_jump
		imul   %edx,%ecx
		add    %eax,%ecx
		lea    (%esi,%ecx,1),%ebp
		mov    0x0000bc(%esp),%cl
		mov    %cl,0x000000(%ebp)

	_045cd1_jump:
		inc    %eax
		jmp    _045ca4_jump

	_045cd4_jump:
		xor    %ebx,%ebx
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _045cf8_jump
		test   %edx,%edx
		jl     _045cf8_jump
		cmp    $0x0000c8,%edx
		jge    _045cf8_jump
		imul   %edx,%ebx
		add    %eax,%ebx
		mov    0x0000bc(%esp),%cl
		mov    %cl,(%esi,%ebx,1)

	_045cf8_jump:
		inc    %eax

	_045cf9_jump:
		xor    %ebx,%ebx
		mov    0x0000ac(%esp),%bx
		cmp    %ebx,%eax
		jl     _045c4f_jump
		incl   0x0000a4(%esp)

	_045d12_jump:
		xor    %eax,%eax
		mov    0x000094(%esp),%edx
		mov    0x0000b0(%esp),%ax
		mov    0x0000a4(%esp),%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jg     _045c42_jump
		cmpb   $0x000002,_0cef74_data
		je     _045ec7_jump
		mov    0x000088(%esp),%eax
		call   _07b6e0_func
		jmp    _045ec7_jump

	_045d52_jump:
		xor    %edx,%edx
		mov    %edx,0x000098(%esp)
		mov    %edx,0x0000a8(%esp)
		jmp    _045e96_jump

	_045d67_jump:
		xor    %eax,%eax

	_045d69_jump:
		mov    0x000098(%esp),%edx
		mov    0x000088(%esp),%ebp
		lea    0x000001(%edx),%ecx
		add    %ebp,%edx
		mov    (%edx),%dl
		mov    %dl,%dh
		and    $0x0000c0,%dh
		mov    %ecx,0x000098(%esp)
		cmp    $0x0000c0,%dh
		jne    _045e2d_jump
		and    $0x00003f,%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %ecx,%edx
		inc    %ecx
		add    %ebp,%edx
		mov    %ecx,0x000098(%esp)
		mov    (%edx),%dl

	_045da8_jump:
		dec    %ebx
		cmp    $0xffffffff,%ebx
		je     _045e7d_jump
		mov    _095b15_data,%dh
		lea    0x000001(%eax),%ecx
		test   %dh,%dh
		jne    _045e08_jump
		movzwl %di,%ebp
		mov    %ebp,0x00008c(%esp)
		add    %ebp,%ebp
		imul   0x0000a8(%esp),%ebp
		mov    %ebp,0x000090(%esp)
		add    %eax,%ebp
		add    %esi,%ebp
		mov    %dl,0x000000(%ebp)
		mov    0x000090(%esp),%ebp
		add    0x00008c(%esp),%ebp
		mov    %ebp,0x000090(%esp)
		mov    %eax,%ebp
		mov    %ecx,%eax
		mov    0x000090(%esp),%ecx
		add    %ebp,%ecx
		mov    %dl,(%ecx,%esi,1)
		jmp    _045da8_jump

	_045e08_jump:
		movzwl %di,%ebp
		imul   0x0000a8(%esp),%ebp
		mov    %ebp,0x000090(%esp)
		mov    %eax,%ebp
		mov    %ecx,%eax
		add    0x000090(%esp),%ebp
		mov    %dl,(%esi,%ebp,1)
		jmp    _045da8_jump

	_045e2d_jump:
		mov    _095b15_data,%dh
		lea    0x000001(%eax),%ecx
		test   %dh,%dh
		jne    _045e65_jump
		xor    %ebx,%ebx
		mov    %di,%bx
		mov    0x0000a8(%esp),%ebp
		mov    %ebx,0x000090(%esp)
		add    %ebx,%ebx
		imul   %ebp,%ebx
		lea    (%ebx,%eax,1),%ebp
		add    %esi,%ebp
		mov    %dl,0x000000(%ebp)
		add    0x000090(%esp),%ebx
		mov    %eax,%ebp
		jmp    _045e76_jump

	_045e65_jump:
		xor    %ebx,%ebx
		mov    0x0000a8(%esp),%ebp
		mov    %di,%bx
		imul   %ebx,%ebp
		mov    %eax,%ebx

	_045e76_jump:
		add    %ebp,%ebx
		mov    %ecx,%eax
		mov    %dl,(%esi,%ebx,1)

	_045e7d_jump:
		xor    %edx,%edx
		mov    0x0000ac(%esp),%dx
		cmp    %edx,%eax
		jl     _045d69_jump
		incl   0x0000a8(%esp)

	_045e96_jump:
		xor    %eax,%eax
		mov    0x0000a8(%esp),%ebx
		mov    0x0000b0(%esp),%ax
		cmp    %ebx,%eax
		jg     _045d67_jump
		mov    0x000088(%esp),%eax
		call   _07b6e0_func
		jmp    _045ec7_jump

	_045ebd_jump:
		mov    $_0c0b48_data,%eax
		call   _01f3a4_func

	_045ec7_jump:
		cmpb   $0x000000,_095b15_data
		jne    _045ef2_jump
		mov    _0ccd40_data,%eax
		add    %edi,%edi
		mov    %eax,_0ccd2c_data
		mov    0x0000b0(%esp),%eax
		mov    %di,_0ced36_data
		mov    %ax,_0ced3a_data
		jmp    _045f0b_jump

	_045ef2_jump:
		mov    _0ccd2c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x0000b0(%esp),%bx
		mov    %di,%dx
		call   _045f78_func

	_045f0b_jump:
		add    $0x0000c0,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_045f18_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %ebx,%esi
		cmpb   $0x000002,_0cef74_data
		jne    _045f36_jump
		mov    _0cc644_data,%esi
		mov    _0cc638_data,%edx
		jmp    _045f6a_jump

	_045f36_jump:
		xor    %ebx,%ebx
		xor    %edi,%edi
		mov    %dx,%bx
		mov    %si,%di
		mov    %ebx,%edx
		imul   %edi,%edx
		mov    %ecx,%eax
		call   _07b220_func
		lea    0x000000(,%ebx,2),%edx
		imul   %edx,%edi
		mov    %eax,%esi
		lea    0x000000(,%ebx,8),%edx
		mov    %ecx,%eax
		add    %edi,%edx
		call   _07b220_func
		mov    %eax,%edx

	_045f6a_jump:
		mov    %edx,_0ccd40_data
		mov    %esi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_045f78_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%esi
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x000018(%esp)
		xor    %eax,%eax
		mov    %dx,_0ced36_data
		mov    %dx,%ax
		xor    %edx,%edx
		mov    %bx,%dx
		mov    %eax,_0ccd1c_data
		imul   %edx,%eax
		mov    %bx,_0ced3a_data
		mov    %esi,0x000004(%esp)
		mov    _0ccd40_data,%esi
		mov    %eax,_0ccd34_data
		test   %esi,%esi
		jne    _045fc6_jump
		mov    $_0c0b6c_data,%eax
		call   _01f3a4_func

	_045fc6_jump:
		xor    %edi,%edi
		jmp    _046073_jump

	_045fcd_jump:
		mov    _0ccd1c_data,%edx
		xor    %eax,%eax
		test   %edx,%edx
		jbe    _046072_jump

	_045fdd_jump:
		mov    %eax,%edx
		mov    _0ccd34_data,%ebx
		and    $0x000003,%edx
		shr    %ebx
		imul   %ebx,%edx
		mov    %ebx,0x00000c(%esp)
		mov    %eax,%ebx
		shr    $0x000002,%ebx
		mov    %ebx,0x000010(%esp)
		add    %edx,%ebx
		mov    _0ccd1c_data,%edx
		mov    %edi,%ebp
		shr    %edx
		imul   %edx,%ebp
		mov    %ebp,0x000008(%esp)
		lea    (%ebx,%ebp,1),%edx
		xor    %ebx,%ebx
		mov    0x000014(%esp),%bx
		imul   %edi,%ebx
		mov    0x000004(%esp),%ebp
		add    %eax,%ebx
		add    %ebp,%ebx
		mov    _0ccd1c_data,%ebp
		mov    (%ebx),%cl
		shr    $0x000002,%ebp
		mov    %cl,(%edx,%esi,1)
		add    %ebp,%edx
		mov    %ebp,(%esp)
		lea    (%esi,%edx,1),%ebp
		mov    %cl,0x000000(%ebp)
		cmp    $0x000010,%edi
		jae    _046063_jump
		mov    0x00000c(%esp),%edx
		mov    0x000010(%esp),%ebp
		shl    $0x000002,%edx
		mov    0x000008(%esp),%ecx
		add    %ebp,%edx
		add    %ecx,%edx
		mov    (%ebx),%cl
		mov    (%esp),%ebp
		mov    %cl,(%edx,%esi,1)
		add    %ebp,%edx
		lea    (%esi,%edx,1),%ebp
		mov    %cl,0x000000(%ebp)

	_046063_jump:
		mov    _0ccd1c_data,%ebx
		inc    %eax
		cmp    %ebx,%eax
		jb     _045fdd_jump

	_046072_jump:
		inc    %edi

	_046073_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		cmp    %eax,%edi
		jb     _045fcd_jump
		mov    _0ccd1c_data,%eax
		mov    _0ccd34_data,%edx
		shr    %eax
		add    %edx,%edx
		mov    %eax,_0ccd1c_data
		mov    %edx,_0ccd34_data
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0460a4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		call   _01cb80_func
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		mov    %edi,%eax
		call   _0454c0_func
		mov    $_0c6e98_data,%edx
		mov    $0x000300,%ecx
		mov    $_0c6598_data,%edi
		mov    %eax,_0ccd30_data
		mov    %esi,%eax
		mov    $_0c6e98_data,%esi
		call   _045814_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		mov    0x000004(%esp),%ax
		mov    %eax,_0ccd10_data
		mov    %eax,_0ccd28_data
		xor    %eax,%eax
		mov    _0ccd28_data,%esi
		mov    (%esp),%ax
		imul   %eax,%esi
		mov    _0ccd28_data,%edx
		shr    $0x000002,%edx
		mov    %ax,_0ced38_data
		mov    %edx,_0ccd28_data
		mov    _0ccd30_data,%eax
		mov    %esi,_0ccd24_data
		mov    %eax,_0ccd44_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_046140_func:
		push   %ebx
		push   %ecx
		cmpb   $0x00002c,(%eax)
		je     _046165_jump

	_046147_jump:
		mov    (%eax),%cl
		cmp    $0x00002a,%cl
		je     _046165_jump
		lea    0x000001(%eax),%ebx
		cmp    $0x000020,%cl
		jb     _04615e_jump
		inc    %edx
		mov    %ebx,%eax
		mov    %cl,-0x000001(%edx)
		jmp    _046160_jump

	_04615e_jump:
		mov    %ebx,%eax

	_046160_jump:
		cmpb   $0x00002c,(%eax)
		jne    _046147_jump

	_046165_jump:
		cmpb   $0x00002a,(%eax)
		jne    _04616f_jump
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_04616f_jump:
		inc    %eax
		movb   $0x000000,(%edx)
		pop    %ecx
		pop    %ebx
		ret    



_046178_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ebx
		mov    %edx,0x000008(%esp)
		call   _01cb80_func
		mov    $0x000064,%eax
		mov    $_0c09b8_data,%edx
		mov    $_0c0b9c_data,%esi
		call   _07b548_func
		mov    %eax,%edi
		mov    %eax,%ecx
		mov    %eax,0x000004(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   _07d4d0_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _0461dd_jump
		mov    $0x0000c8,%eax
		call   _07b548_func
		push   %ecx
		push   $_0c0ac0_data
		push   %eax
		mov    %eax,%edx
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func

	_0461dd_jump:
		mov    0x000008(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _092201_data(,%eax,4),%dl
		mov    _0921fc_data(,%eax,4),%eax
		mov    %dl,0x000014(%esp)
		mov    %eax,0x000010(%esp)
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _07b220_func
		mov    %eax,%edx
		mov    %eax,%esi
		mov    $0x000190,%eax
		call   _07b548_func
		mov    %eax,%edi
		mov    %eax,(%esp)
		test   %edx,%edx
		je     _046224_jump
		test   %eax,%eax
		jne    _04622e_jump

	_046224_jump:
		mov    $_0c0ba4_data,%eax
		call   _01f3a4_func

	_04622e_jump:
		mov    0x000008(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%esp)
		mov    _0921f8_data(%eax),%edx
		mov    %ebp,%eax
		mov    %ebp,%ecx
		call   _07c8fa_func
		mov    0x000010(%esp),%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _07c6dd_func
		mov    %ebp,%eax
		mov    0x000010(%esp),%edx
		call   _07d584_func
		test   %edx,%edx
		jbe    _046296_jump
		mov    0x00000c(%esp),%edx
		mov    0x000010(%esp),%ecx
		mov    %esi,%eax
		add    %esi,%ecx

	_04627e_jump:
		mov    (%eax),%bl
		sub    %bl,0x000014(%esp)
		mov    _092200_data(%edx),%bl
		mov    (%eax),%bh
		inc    %eax
		xor    %bl,%bh
		mov    %bh,-0x000001(%eax)
		cmp    %ecx,%eax
		jb     _04627e_jump

	_046296_jump:
		cmpb   $0x000000,0x000014(%esp)
		je     _0462ca_jump
		mov    $0x0000c8,%eax
		mov    0x000004(%esp),%ebx
		call   _07b548_func
		push   %ebx
		push   $_0c09e0_data
		push   %eax
		mov    %eax,%edx
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func

	_0462ca_jump:
		mov    %esi,%ecx
		xor    %ebx,%ebx

	_0462ce_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		call   _046140_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _0462f3_jump
		xor    %edx,%edx
		mov    %bx,%dx
		inc    %ebx
		mov    %ecx,_0c23b8_data(,%edx,4)
		lea    0x000002(%eax),%ecx
		movb   $0x000000,-0x000001(%eax)
		jmp    _0462ce_jump

	_0462f3_jump:
		mov    (%esp),%eax
		call   _07b6e0_func
		mov    0x000004(%esp),%eax
		call   _07b6e0_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_046310_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000a8,%esp
		mov    %eax,%ebp
		mov    %edx,0x000080(%esp)
		mov    %ebx,0x000094(%esp)
		mov    %ecx,0x000088(%esp)
		call   _01cb80_func
		mov    $0x000064,%eax
		call   _07b548_func
		mov    _0cee48_data,%dx
		mov    %eax,0x000084(%esp)
		test   %dx,%dx
		je     _04635c_jump
		mov    _0c09a8_data,%edx
		mov    %edx,(%eax)
		jmp    _04635f_jump

	_04635c_jump:
		movb   $0x000000,(%eax)

	_04635f_jump:
		mov    $_0c0ab4_data,%esi
		mov    0x000084(%esp),%edi
		mov    $_0c09b8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_046379_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _046391_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _046379_jump

	_046391_jump:
		pop    %edi
		mov    %edi,%eax
		call   _07d4d0_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _0463c8_jump
		mov    $0x0000c8,%eax
		call   _07b548_func
		push   %edi
		push   $_0c0ac0_data
		push   %eax
		mov    %eax,%edx
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func

	_0463c8_jump:
		mov    0x000080(%esp),%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000002,%edi
		mov    _092165_data(%edi),%al
		mov    %al,0x0000a0(%esp)
		mov    _092160_data(%edi),%eax
		xor    %ebx,%ebx
		sub    $0x000080,%eax
		mov    _09215c_data(%edi),%edx
		mov    %eax,0x000090(%esp)
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _07c8fa_func
		mov    $0x000001,%ebx
		mov    $0x000080,%edx
		mov    %esp,%eax
		call   _07c6dd_func
		mov    %edi,%ebx
		xor    %eax,%eax

	_046420_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000a0(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000a0(%esp)
		mov    _092164_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _046420_jump
		mov    0x000008(%esp),%eax
		sub    0x000004(%esp),%eax
		mov    0x000094(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x00000a(%esp),%eax
		sub    0x000006(%esp),%eax
		mov    0x000088(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x000090(%esp),%ebx
		mov    0x000042(%esp),%eax
		mov    %esi,%ecx
		mov    %eax,0x00009c(%esp)
		mov    0x000090(%esp),%eax
		mov    $0x000001,%edx
		call   _07b548_func
		mov    %eax,%edi
		mov    %eax,0x00008c(%esp)
		call   _07c6dd_func
		mov    %esi,%eax
		mov    0x000090(%esp),%ecx
		call   _07d584_func
		test   %ecx,%ecx
		jbe    _0464ef_jump
		mov    0x000080(%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		lea    (%ecx,%edi,1),%esi
		shl    $0x000002,%ebx
		mov    %edi,%eax

	_0464cd_jump:
		mov    0x0000a0(%esp),%ch
		sub    (%eax),%ch
		mov    _092164_data(%ebx),%dl
		mov    (%eax),%dh
		inc    %eax
		xor    %dl,%dh
		mov    %ch,0x0000a0(%esp)
		mov    %dh,-0x000001(%eax)
		cmp    %esi,%eax
		jb     _0464cd_jump

	_0464ef_jump:
		cmpb   $0x000000,0x0000a0(%esp)
		je     _046531_jump
		mov    $0x0000c8,%eax
		mov    0x000080(%esp),%esi
		call   _07b548_func
		push   %esi
		mov    0x000088(%esp),%edi
		push   %edi
		push   $_0c0bc4_data
		push   %eax
		mov    %eax,%edx
		call   _07c0db_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b6e0_func

	_046531_jump:
		test   %ebp,%ebp
		je     _046624_jump
		cmpl   $0x000000,0x00008c(%esp)
		je     _046624_jump
		xor    %edx,%edx
		xor    %esi,%esi
		mov    %edx,0x000098(%esp)
		jmp    _046602_jump

	_046557_jump:
		xor    %eax,%eax

	_046559_jump:
		mov    0x000098(%esp),%edx
		mov    0x00008c(%esp),%ecx
		lea    0x000001(%edx),%ebx
		add    %ecx,%edx
		mov    (%edx),%dl
		mov    %dl,0x0000a4(%esp)
		and    $0x0000c0,%dl
		mov    %ebx,0x000098(%esp)
		cmp    $0x0000c0,%dl
		jne    _0465d1_jump
		mov    0x0000a4(%esp),%dl
		and    $0x00003f,%dl
		lea    0x000001(%ebx),%edi
		add    %ecx,%ebx
		and    $0x0000ff,%edx
		mov    (%ebx),%bl
		mov    %edi,0x000098(%esp)
		mov    %bl,0x0000a4(%esp)

	_0465a9_jump:
		dec    %edx
		cmp    $0xffffffff,%edx
		je     _0465ef_jump
		mov    0x000094(%esp),%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%bx
		mov    %ebx,%ecx
		imul   %esi,%ecx
		mov    %eax,%ebx
		add    %ecx,%ebx
		mov    0x0000a4(%esp),%cl
		inc    %eax
		mov    %cl,(%ebx,%ebp,1)
		jmp    _0465a9_jump

	_0465d1_jump:
		mov    0x000094(%esp),%ebx
		xor    %edx,%edx
		mov    (%ebx),%dx
		imul   %esi,%edx
		mov    %eax,%ebx
		add    %ebx,%edx
		mov    0x0000a4(%esp),%bl
		inc    %eax
		mov    %bl,(%edx,%ebp,1)

	_0465ef_jump:
		xor    %edx,%edx
		mov    0x00009c(%esp),%dx
		cmp    %edx,%eax
		jb     _046559_jump
		inc    %esi

	_046602_jump:
		mov    0x000088(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%ax
		cmp    %eax,%esi
		jb     _046557_jump
		mov    0x00008c(%esp),%eax
		call   _07b6e0_func
		jmp    _04662e_jump

	_046624_jump:
		mov    $_0c0be8_data,%eax
		call   _01f3a4_func

	_04662e_jump:
		mov    0x000084(%esp),%eax
		call   _07b6e0_func
		mov    %ebp,%eax
		add    $0x0000a8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_046650_func:
		push   %ebx
		push   %ecx
		push   %edx
		testb  $0x000004,_0ced81_data
		je     _0466c4_jump
		mov    _0cc5b4_data,%eax
		mov    %eax,_0cc580_data
		mov    _0cc5b0_data,%eax
		mov    %eax,_0cc57c_data
		mov    _0cc5ac_data,%eax
		mov    %eax,_0cc588_data
		mov    _0cc5a8_data,%eax
		mov    %eax,_0cc584_data
		mov    _0cc590_data,%eax
		mov    %eax,_0cc5b4_data
		mov    _0cc58c_data,%eax
		mov    %eax,_0cc5b0_data
		mov    _0cc5a0_data,%eax
		mov    _0cc5b4_data,%ecx
		mov    %eax,_0cc5ac_data
		mov    _0cc594_data,%eax
		mov    _0cc5b0_data,%edx
		mov    %eax,_0cc5a8_data
		mov    %eax,%ebx
		mov    _0cc5ac_data,%eax
		call   _01614e_func

	_0466c4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0466c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		testb  $0x000004,_0ced81_data
		je     _046736_jump
		mov    $0x000023,%ebx
		mov    _0ced86_data,%dx
		mov    $0x00004d,%eax
		test   %dx,%dx
		je     _0466fd_jump
		mov    $0x000055,%eax
		xor    %ecx,%ecx
		mov    $0x000041,%ebx
		mov    %cx,_0ced86_data

	_0466fd_jump:
		push   $0x000000
		movswl %bx,%ecx
		xor    %edx,%edx
		push   $0x0000ff
		movswl %ax,%ebx
		mov    $0x00000d,%eax
		call   _019f4c_func
		push   $0x000000
		mov    $0x000017,%ecx
		mov    $0x000044,%ebx
		push   $0x0000ff
		mov    $0x000004,%edx
		mov    $0x0000f1,%eax
		call   _019f4c_func

	_046736_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04673c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cc584_data,%edi
		mov    _0cc580_data,%ebp
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    _0ced18_data,%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		mov    %ecx,%esi
		sub    %eax,%edx
		add    %eax,%ebx
		sub    %eax,%esi
		add    %eax,%ecx
		cmp    %ebp,%esi
		jge    _04676b_jump
		mov    %ebp,%esi

	_04676b_jump:
		cmp    _0cc57c_data,%esi
		jle    _046779_jump
		mov    _0cc57c_data,%esi

	_046779_jump:
		cmp    _0cc588_data,%edx
		jge    _046787_jump
		mov    _0cc588_data,%edx

	_046787_jump:
		cmp    %edi,%edx
		jle    _04678d_jump
		mov    %edi,%edx

	_04678d_jump:
		cmp    _0cc57c_data,%ecx
		jle    _04679b_jump
		mov    _0cc57c_data,%ecx

	_04679b_jump:
		cmp    %ebp,%ecx
		jge    _0467a1_jump
		mov    %ebp,%ecx

	_0467a1_jump:
		cmp    %edi,%ebx
		jle    _0467a7_jump
		mov    %edi,%ebx

	_0467a7_jump:
		cmp    _0cc588_data,%ebx
		jge    _0467b5_jump
		mov    _0cc588_data,%ebx

	_0467b5_jump:
		mov    %ebp,_0cc580_data
		mov    %edi,_0cc584_data
		mov    %esi,_0cc590_data
		mov    %ecx,_0cc58c_data
		mov    %ebx,_0cc594_data
		mov    %edx,_0cc5a0_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0467e0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000005,%ecx
		xor    %ebx,%ebx
		mov    $0x00000f,%esi
		mov    %bx,_0ced34_data
		mov    _0cc5b4_data,%ebx
		xor    %edi,%edi
		mov    %ebx,_0cc580_data
		mov    _0cc5b0_data,%ebx
		mov    %cx,_0ced24_data
		mov    %ebx,_0cc57c_data
		mov    _0cc5ac_data,%ebx
		mov    %si,_0ced22_data
		mov    %ebx,_0cc588_data
		mov    _0cc5a8_data,%ebx
		mov    %di,_0ced1a_data
		mov    %ebx,_0cc584_data
		call   _04673c_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_046848_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%ebp
		mov    %ecx,%esi
		mov    _0ced18_data,%ecx
		mov    _0ced20_data,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		add    %edx,%ecx
		mov    %eax,%edx
		sub    %ecx,%edx
		mov    %edx,0x000008(%esp)
		add    %eax,%ecx
		mov    %eax,%edx
		mov    0x000008(%esp),%edi
		sub    %ebx,%edx
		cmp    _0cc588_data,%edi
		jge    _04688a_jump
		mov    _0cc588_data,%edi
		mov    %edi,0x000008(%esp)

	_04688a_jump:
		mov    _0cc584_data,%edi
		cmp    %edi,%edx
		jl     _046896_jump
		mov    %edi,%edx

	_046896_jump:
		mov    0x000008(%esp),%edi
		sub    %edi,%edx
		mov    %edx,0x000004(%esp)
		lea    (%eax,%ebx,1),%edx
		mov    _0cc584_data,%eax
		cmp    %eax,%ecx
		jl     _0468ae_jump
		mov    %eax,%ecx

	_0468ae_jump:
		mov    _0cc588_data,%ebx
		cmp    %ebx,%edx
		jge    _0468ba_jump
		mov    %ebx,%edx

	_0468ba_jump:
		sub    %edx,%ecx
		mov    %ecx,(%esp)
		cmpl   $0x000000,0x000004(%esp)
		jle    _046953_jump
		mov    %ebp,%eax
		mov    _0cc580_data,%edi
		sub    %esi,%eax
		cmp    %edi,%eax
		jl     _04690f_jump
		cmp    _0cc57c_data,%eax
		jge    _04690f_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000008(%esp),%edi
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %ecx,%edi
		mov    0x000004(%esp),%ecx
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _046906_jump
		rep stos %al,%es:(%edi)

	_046906_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _04690f_jump
		rep stos %eax,%es:(%edi)

	_04690f_jump:
		mov    _0cc580_data,%edi
		lea    (%esi,%ebp,1),%eax
		cmp    %edi,%eax
		jl     _046953_jump
		cmp    _0cc57c_data,%eax
		jge    _046953_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000008(%esp),%edi
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %ecx,%edi
		mov    0x000004(%esp),%ecx
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _04694a_jump
		rep stos %al,%es:(%edi)

	_04694a_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _046953_jump
		rep stos %eax,%es:(%edi)

	_046953_jump:
		cmpl   $0x000000,(%esp)
		jle    _0469dd_jump
		mov    %ebp,%eax
		mov    _0cc580_data,%ebx
		sub    %esi,%eax
		cmp    %ebx,%eax
		jl     _04699d_jump
		cmp    _0cc57c_data,%eax
		jge    _04699d_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax
		mov    (%esp),%ecx
		add    %eax,%edi
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _046994_jump
		rep stos %al,%es:(%edi)

	_046994_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _04699d_jump
		rep stos %eax,%es:(%edi)

	_04699d_jump:
		mov    _0cc580_data,%edi
		add    %ebp,%esi
		cmp    %edi,%esi
		jl     _0469dd_jump
		cmp    _0cc57c_data,%esi
		jge    _0469dd_jump
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax
		mov    (%esp),%ecx
		add    %eax,%edi
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _0469d4_jump
		rep stos %al,%es:(%edi)

	_0469d4_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _0469dd_jump
		rep stos %eax,%es:(%edi)

	_0469dd_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_0469e8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,0x000010(%esp)
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %ebx,%esi
		xor    %edi,%edi
		jmp    _046a17_jump

	_046a01_jump:
		mov    0x000004(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%edx
		inc    %edi
		xor    %ebx,%ebx
		push   %eax
		mov    0x000014(%esp),%eax
		inc    %esi
		call   _046848_func

	_046a17_jump:
		mov    _0ced20_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jle    _046a01_jump
		xor    %edi,%edi
		mov    (%esp),%esi
		mov    %edi,0x000014(%esp)
		test   %esi,%esi
		jl     _046a9a_jump
		mov    $0x000001,%edx
		lea    (%esi,%esi,1),%eax
		sub    %edx,%eax
		mov    %edx,0x000008(%esp)
		mov    %eax,0x00000c(%esp)

	_046a42_jump:
		mov    0x000004(%esp),%ebx
		mov    0x000010(%esp),%eax
		mov    %esi,%ecx
		push   %ebx
		mov    %ebp,%edx
		mov    %edi,%ebx
		call   _046848_func
		mov    0x000004(%esp),%ecx
		mov    0x000010(%esp),%eax
		mov    %esi,%ebx
		push   %ecx
		mov    %ebp,%edx
		mov    %edi,%ecx
		call   _046848_func
		mov    0x000008(%esp),%eax
		mov    0x000014(%esp),%edx
		inc    %edi
		add    %eax,%edx
		lea    0x000002(%eax),%ebx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x000008(%esp)
		cmp    %edx,%esi
		jg     _046a96_jump
		mov    0x00000c(%esp),%eax
		dec    %esi
		sub    %eax,%edx
		lea    -0x000002(%eax),%ebx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x00000c(%esp)

	_046a96_jump:
		cmp    %esi,%edi
		jle    _046a42_jump

	_046a9a_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_046aa4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		testb  $0x000004,_0ced81_data
		je     _046b61_jump
		mov    _0ced16_data,%edx
		mov    _0ced1a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _046ad1_jump
		neg    %eax

	_046ad1_jump:
		mov    _0ced1e_data,%edx
		mov    %eax,%ebx
		mov    _0ced1c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _046aee_jump
		neg    %eax

	_046aee_jump:
		cmp    %ebx,%eax
		jge    _046af4_jump
		mov    %ebx,%eax

	_046af4_jump:
		mov    _0ced18_data,%ebx
		add    $0x000006,%eax
		mov    _0ced1a_data,%edx
		mov    %ax,_0ced22_data
		mov    _0ced1e_data,%ax
		sar    $0x000010,%ebx
		mov    %ax,_0ced20_data
		mov    _0ced1c_data,%ax
		sar    $0x000010,%edx
		mov    %ax,_0ced18_data
		mov    _0ced1c_data,%eax
		sub    $0x000004,%ebx
		sar    $0x000010,%eax
		call   _0469e8_func
		mov    _0cc580_data,%eax
		mov    %eax,_0cc5b4_data
		mov    _0cc57c_data,%eax
		mov    %eax,_0cc5b0_data
		mov    _0cc588_data,%eax
		mov    %eax,_0cc5ac_data
		mov    _0cc584_data,%eax
		mov    %eax,_0cc5a8_data

	_046b61_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_046b68_func:
		testb  $0x000004,_0ced81_data
		je     _046b99_jump
		mov    _0cc580_data,%eax
		mov    %eax,_0cc5b4_data
		mov    _0cc57c_data,%eax
		mov    %eax,_0cc5b0_data
		mov    _0cc588_data,%eax
		mov    %eax,_0cc5ac_data
		mov    _0cc584_data,%eax
		mov    %eax,_0cc5a8_data

	_046b99_jump:
		ret    



_046b9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cdbcc_data,%cx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cdc18_data,%al
		mov    _0cdc0c_data,%dl
		mov    %eax,%esi
		add    %edx,%ecx
		mov    _0cdbd0_data,%dx
		mov    _0cee10_data,%ax
		add    %edx,%esi
		mov    %ecx,%edx
		sub    %eax,%edx
		sub    $0x000010,%esi
		add    $0x000008,%edx
		mov    %esi,%eax
		mov    %dx,_0ced1e_data
		sub    _0cedfa_data,%ax
		xor    %ebx,%ebx
		mov    %ax,_0ced1c_data
		mov    _0ced1e_data,%ax
		mov    %bx,_0ced2a_data
		mov    %ax,_0ced20_data
		mov    _0ced1c_data,%ax
		mov    %bx,_0ced2e_data
		mov    %ax,_0ced18_data
		xor    %al,%al

	_046c13_jump:
		xor    %edx,%edx
		mov    %al,%dl
		inc    %al
		mov    %cx,_0c27d0_data(,%edx,2)
		mov    %si,_0c27c8_data(,%edx,2)
		cmp    $0x000004,%al
		jb     _046c13_jump
		mov    _095b15_data,%ah
		mov    %cx,_0ced28_data
		xor    %ebx,%ebx
		mov    %si,_0ced26_data
		mov    %bx,_0ced2c_data
		test   %ah,%ah
		jne    _046c64_jump
		mov    _0ced1a_data,%edx
		mov    _0ced1c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0467e0_func

	_046c64_jump:
		mov    _0ced28_data,%cx
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_046c70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		cmpw   $0x000003,_0cedb4_data
		je     _046f20_jump
		cmpb   $0x000002,_0cdc11_data
		jne    _046c98_jump
		cmpb   $0x000009,_0cdc10_data
		je     _046c9f_jump

	_046c98_jump:
		mov    $0x000001,%eax
		jmp    _046ca1_jump

	_046c9f_jump:
		xor    %eax,%eax

	_046ca1_jump:
		test   %eax,%eax
		je     _046f20_jump
		cmpb   $0x000003,_0cdc11_data
		jne    _046cc2_jump
		mov    _0cdc10_data,%bl
		cmp    $0x000016,%bl
		je     _046cc9_jump
		cmp    $0x000020,%bl
		je     _046cc9_jump

	_046cc2_jump:
		mov    $0x000001,%eax
		jmp    _046ccb_jump

	_046cc9_jump:
		xor    %eax,%eax

	_046ccb_jump:
		test   %eax,%eax
		je     _046f20_jump
		cmpw   $0x000036,_0ced1a_data
		jge    _046d32_jump
		cmpw   $0x000000,_0cee32_data
		jne    _046d32_jump
		mov    _0ced32_data,%eax
		sar    $0x000010,%eax
		mov    $0x000200,%edx
		call   _05be00_func
		cwtl   
		sub    %eax,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		add    %eax,%eax
		sar    $0x000009,%eax
		mov    _0ced34_data,%di
		mov    %ax,_0ced1a_data
		cmp    $0x000080,%di
		jge    _046d4f_jump
		mov    %edi,%eax
		add    $0x000002,%eax
		mov    %ax,_0ced34_data
		jmp    _046d4f_jump

	_046d32_jump:
		mov    _0cef4f_data,%ch
		cmp    $0x000001,%ch
		jb     _046d46_jump
		decw   _0ced1a_data
		jmp    _046d4f_jump

	_046d46_jump:
		jae    _046d4f_jump
		incw   _0ced1a_data

	_046d4f_jump:
		mov    _0ced2a_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		mov    _0cdcd2_data,%dl
		mov    _0c27d0_data(%eax),%di
		mov    _0c27c8_data(%eax),%si
		test   %dl,%dl
		je     _046da0_jump
		mov    _0cdc30_data,%edx
		xor    %ebx,%ebx
		mov    0x000068(%edx),%bl
		mov    0x000028(%edx),%cx
		add    %ecx,%ebx
		mov    %bx,_0c27d0_data(%eax)
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%cx
		mov    0x000069(%edx),%bl
		add    %ecx,%ebx
		mov    %bx,_0c27c8_data(%eax)
		jmp    _046e41_jump

	_046da0_jump:
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _01d710_func
		mov    _0cdbcc_data,%bx
		xor    %edx,%edx
		mov    _0ced2a_data,%eax
		mov    _0cdc0c_data,%dl
		sar    $0x000010,%eax
		add    %ebx,%edx
		mov    %dx,_0c27d0_data(,%eax,2)
		xor    %edx,%edx
		mov    _0cdbd0_data,%cx
		mov    _0cdc18_data,%dl
		add    %ecx,%edx
		sub    $0x000004,%edx
		mov    %dx,_0c27c8_data(,%eax,2)
		cmpw   $0x000001,0x000008(%esp)
		setg   %al
		mov    (%esp),%edx
		xor    %ah,%ah
		add    %eax,%edx
		mov    _0ced2a_data,%eax
		sar    $0x000010,%eax
		mov    0x000004(%esp),%ebx
		mov    %dx,_0c27d0_data(,%eax,2)
		cmp    $0x000001,%bx
		setg   %al
		mov    0x00000c(%esp),%edx
		xor    %ah,%ah
		add    %eax,%edx
		mov    _0ced2a_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0c27c8_data(,%eax,2)

	_046e41_jump:
		mov    _0ced2c_data,%ax
		inc    %eax
		mov    %eax,%edx
		xor    %ah,%dh
		mov    %ax,_0ced2c_data
		and    $0x000003,%dl
		mov    _0ced28_data,%bx
		mov    %dx,_0ced2c_data
		mov    %edi,%edx
		mov    _0ced2a_data,%cx
		sub    %ebx,%edx
		sub    %cx,%dx
		je     _046e84_jump
		test   %dx,%dx
		jle    _046e7f_jump
		mov    $0x000001,%edx
		jmp    _046e84_jump

	_046e7f_jump:
		mov    $0xffffffff,%edx

	_046e84_jump:
		mov    _0ced26_data,%di
		mov    %esi,%eax
		mov    _0ced2e_data,%bx
		sub    %edi,%eax
		sub    %bx,%ax
		je     _046eac_jump
		test   %ax,%ax
		jle    _046ea7_jump
		mov    $0x000001,%eax
		jmp    _046eac_jump

	_046ea7_jump:
		mov    $0xffffffff,%eax

	_046eac_jump:
		mov    _0ced2a_data,%cx
		add    %edx,%ecx
		mov    %cx,_0ced2a_data
		cmp    $0x000008,%cx
		jle    _046ecb_jump
		movw   $0x000008,_0ced2a_data

	_046ecb_jump:
		mov    _0ced28_data,%edx
		sar    $0x000010,%edx
		cmp    $0xfffffff8,%edx
		jge    _046ee2_jump
		movw   $0x00fff8,_0ced2a_data

	_046ee2_jump:
		mov    _0ced2e_data,%bx
		add    %eax,%ebx
		mov    %bx,_0ced2e_data
		cmp    $0x000008,%bx
		jle    _046f01_jump
		movw   $0x000008,_0ced2e_data

	_046f01_jump:
		mov    _0ced2c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff8,%eax
		jge    _047000_jump
		movw   $0x00fff8,_0ced2e_data
		jmp    _047000_jump

	_046f20_jump:
		cmpw   $0x000036,_0ced1a_data
		jl     _046f4b_jump
		mov    $0x000200,%eax
		call   _069140_func
		mov    _0ced1a_data,%cx
		sub    $0x000002,%ecx
		mov    %ax,_0ced34_data
		mov    %cx,_0ced1a_data

	_046f4b_jump:
		mov    _0ced32_data,%eax
		sar    $0x000010,%eax
		call   _05be00_func
		movswl %ax,%edx
		mov    _0ced22_data,%eax
		sar    $0x000010,%eax
		imul   %edx,%eax
		sar    $0x000009,%eax
		mov    %ax,_0ced2a_data
		mov    _0ced32_data,%eax
		sar    $0x000010,%eax
		call   _05be40_func
		mov    _0ced22_data,%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %edx,%eax
		sar    $0x000009,%eax
		mov    _0cef4f_data,%cl
		mov    %ax,_0ced2e_data
		test   %cl,%cl
		je     _046fb8_jump
		mov    _0ced1a_data,%si
		dec    %esi
		mov    %si,_0ced1a_data
		test   %si,%si
		jge    _046fb8_jump
		xor    %eax,%eax
		mov    %ax,_0ced1a_data

	_046fb8_jump:
		mov    $0x000036,%eax
		call   _069140_func
		mov    _0ced34_data,%dx
		add    %eax,%edx
		mov    %dx,_0ced34_data
		cmp    $0x000200,%dx
		jle    _047000_jump
		mov    _0ced24_data,%si
		xor    %ecx,%ecx
		inc    %esi
		mov    %cx,_0ced34_data
		mov    %si,_0ced24_data
		cmp    $0x00000a,%si
		jle    _047000_jump
		movw   $0x00000a,_0ced24_data

	_047000_jump:
		mov    _0ced2a_data,%ax
		mov    _0ced28_data,%dx
		mov    _0ced26_data,%bx
		add    %eax,%edx
		mov    _0ced2e_data,%ax
		mov    _0cee10_data,%cx
		add    %eax,%ebx
		mov    %edx,%eax
		sub    %ecx,%eax
		mov    _0cedfa_data,%si
		add    $0x000008,%eax
		mov    %dx,_0ced28_data
		mov    %ax,_0ced1e_data
		mov    %ebx,%eax
		mov    %bx,_0ced26_data
		sub    %esi,%eax
		mov    _095b15_data,%dh
		mov    %ax,_0ced1c_data
		test   %dh,%dh
		jne    _047073_jump
		mov    _0ced1a_data,%edx
		mov    _0ced1c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _04673c_func

	_047073_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_047080_switch:
		.long   _0470d9_case
		.long   _0470d9_case
		.long   _0470d9_case
		.long   _0470d9_case
		.long   _0470d9_case
		.long   _0470d9_case




_047098_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cef6d_data,%eax
		sar    $0x000018,%eax
		mov    _0ce49d_data(%eax),%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		je     _0470b6_jump
		call   _045934_func

	_0470b6_jump:
		cmpb   $0x000000,_095b15_data
		jne    _047104_jump
		mov    _0cede4_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _0470d9_case
		and    $0x00ffff,%eax
		jmp    *%cs:_047080_switch(,%eax,4)

	_0470d9_case:
		mov    _0cc644_data,%edx
		mov    _0ccd40_data,%ecx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    _0ced3a_data,%bx
		push   %edx
		xor    %edx,%edx
		mov    _0cef70_data,%al
		mov    _0ced36_data,%dx
		call   _073600_func

	_047104_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_047108_switch:
		.long   _0472a2_case
		.long   _0472d7_case
		.long   _0472f7_case
		.long   _04730d_case
		.long   _047323_case
		.long   _047339_case

_047120_switch:
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _0472bc_case
		.long   _0472c7_case
		.long   _047351_case
		.long   _0472bc_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _0472ce_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _0472ce_case

_047178_switch:
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _0472f1_case
		.long   _0472f1_case
		.long   _0472f1_case
		.long   _0472f1_case
		.long   _0472f1_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _0472f1_case

_0471c0_switch:
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _0472f1_case
		.long   _047351_case
		.long   _047351_case
		.long   _0472d0_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case

_0471f4_switch:
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _0472ce_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _0472ce_case
		.long   _047351_case
		.long   _047351_case

_047228_switch:
		.long   _047351_case
		.long   _047351_case
		.long   _0472ce_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _047351_case
		.long   _0472ce_case
		.long   _047351_case




_047258_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cedd0_data,%cx
		mov    _0cdb98_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _0ced3a_data,%ax
		shl    $0x000004,%edx
		xor    %bl,%bl
		cmp    %eax,%edx
		jge    _047280_jump
		mov    $0x000003,%dl
		jmp    _047282_jump

	_047280_jump:
		xor    %dl,%dl

	_047282_jump:
		mov    _0cede4_data,%ax
		dec    %eax
		xor    %dh,%dh
		cmp    $0x000005,%ax
		ja     _047351_case
		and    $0x00ffff,%eax
		jmp    *%cs:_047108_switch(,%eax,4)

	_0472a2_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x000015,%ax
		ja     _047351_case
		and    $0x00ffff,%eax
		jmp    *%cs:_047120_switch(,%eax,4)

	_0472bc_case:
		mov    $0x000001,%dh
		mov    $0x000002,%bl
		mov    %dh,%dl
		jmp    _047351_case

	_0472c7_case:
		mov    $0x000003,%dl
		jmp    _047351_case

	_0472ce_case:
		mov    $0x000001,%dh

	_0472d0_case:
		mov    $0x000003,%dl
		jmp    _047351_case

	_0472d7_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x000011,%ax
		ja     _047351_case
		and    $0x00ffff,%eax
		jmp    *%cs:_047178_switch(,%eax,4)

	_0472f1_case:
		mov    $0x000001,%dl
		mov    $0x000004,%bl
		jmp    _047351_case

	_0472f7_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x00000c,%ax
		ja     _047351_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0471c0_switch(,%eax,4)

	_04730d_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x00000c,%ax
		ja     _047351_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0471f4_switch(,%eax,4)

	_047323_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x00000b,%ax
		ja     _047351_case
		and    $0x00ffff,%eax
		jmp    *%cs:_047228_switch(,%eax,4)

	_047339_case:
		mov    %ecx,%eax
		cmp    $0x000001,%cx
		jb     _047351_case
		cmp    $0x000003,%cx
		jbe    _047351_case
		cmp    $0x000004,%cx
		jne    _047351_case
		mov    $0x000001,%dh
		mov    $0x000003,%dl

	_047351_case:
		cmpb   $0x000000,_095b15_data
		jne    _04735c_jump
		xor    %dh,%dh

	_04735c_jump:
		mov    %dl,_0cef6f_data
		mov    %dh,_0cef71_data
		mov    %bl,_0e30e9_data
		mov    %cx,_0cedd0_data
		call   _047098_func
		mov    _0cef6f_data,%dl
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_047384_switch:
		.long   _0473b9_case
		.long   _0473ef_case
		.long   _047424_case
		.long   _047431_case




_047394_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ced3e_data,%cx
		mov    _0cef6f_data,%dl
		cmp    $0x000003,%dl
		ja     _04743e_jump
		xor    %eax,%eax
		mov    %dl,%al
		jmp    *%cs:_047384_switch(,%eax,4)

	_0473b9_case:
		xor    %eax,%eax
		mov    _0cedf8_data,%edx
		mov    _0ced3a_data,%ax
		sar    $0x000010,%edx
		sub    $0x0000d8,%eax
		imul   %eax,%edx
		mov    _0cedd8_data,%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		mov    %cx,_0ced3e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0473ef_case:
		mov    _0cedf8_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    _0e30e9_data,%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %eax,%edx
		mov    _0ced3a_data,%bx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %edx,%ecx
		mov    %cx,_0ced3e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047424_case:
		xor    %ecx,%ecx
		mov    %cx,_0ced3e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047431_case:
		mov    _0ced3a_data,%cx
		sub    $0x0000d8,%ecx

	_04743e_jump:
		mov    %cx,_0ced3e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_047450_switch:
		.long   0




_047454_func:
		add    $0x5050505,%eax
		add    $0x6f000003,%eax
		outsb  %ds:(%esi),(%dx)
	_047460_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %ch,0x000066(%edi)
	_047464_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		data16 add %ch,0x00006e(%edi)
	_047467_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %ch,0x000066(%edi)
		data16 add %al,0x5050505
		add    $0x030505,%eax

	_047475_jump:
		add    $0x3050505,%eax

	_04747a_jump:
		add    $0x3050505,%eax

	_04747f_jump:
		add    $0x5050505,%eax
		add    (%eax),%eax
		add    %al,(%eax)

_047488_switch:
		.long   _0c0cec_case
		.long   _0c0cf0_case
		.long   _0c0cf4_case
		.long   _0c0cf8_case




_047498_func:
		add    $0x5050505,%eax
		add    $0x6e6f0305,%eax
	_0474a3_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %ch,0x000066(%edi)
	_0474a7_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		data16 add %ch,0x000061(%ebp)
		js     _0474ab_jump

	_0474ab_jump:
		xor    %al,%ss:(%eax)

	_0474ae_jump:
		xor    $0x000030,%eax
		.byte 0x000000

_0474b4_switch:
		.long   _0c0cfc_case
		.long   _0c0d04_case
		.long   _0c0d0c_case




_0474c0_func:
		add    $0x5030505,%eax
		add    $0x51530305,%eax
		push   %edx
		push   %esi
		call   _071540_func
		test   %al,%al
		je     _0475bc_jump
		xor    %edx,%edx
		mov    $_0ccdcc_data,%eax
		mov    _0cef88_data,%dl
		call   _046178_func
		cmpw   $0x000080,_095b58_data
		jl     _047512_jump
		mov    _0cec9e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _047512_jump
		movb   $0x000001,_095b15_data
		xor    %bh,%bh
		mov    %bh,_0cef6d_data

	_047512_jump:
		cmpb   $0x000002,_0cef74_data
		jne    _047529_jump
		mov    $0x000001,%ch
		mov    %ch,_095b15_data
		mov    %ch,_0cef6d_data

	_047529_jump:
		call   _0405c0_func
		cmpl   $0x0003e7,_0cc554_data
		je     _0475a5_jump
		cmpb   $0x000000,_0cef72_data
		je     _0475a5_jump
		xor    %eax,%eax
		mov    _0cc550_data,%ax
		call   _03daa0_func
		mov    _0cc558_data,%eax
		call   _03daac_func
		mov    _0cc560_data,%eax
		call   _03dab4_func
		mov    _0cc55c_data,%eax
		call   _03dabc_func
		mov    _0cc554_data,%eax
		call   _03dac4_func
		call   _03d600_func
		test   %eax,%eax
		je     _04758e_jump
		xor    %bl,%bl
		mov    %bl,_0cef72_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04758e_jump:
		mov    $0x000001,%dh
		call   _03d834_func
		mov    %dh,_0cef72_data
		call   _06eed8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0475a5_jump:
		mov    _0cc554_data,%eax
		xor    %dl,%dl
		call   _03dac4_func
		mov    %dl,_0cef72_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0475bc_jump:
		cmpb   $0x000000,_0cef72_data
		je     _0475cf_jump
		call   _03d834_func
		call   _06eed8_func

	_0475cf_jump:
		xor    %dl,%dl
		mov    $_0ccdcc_data,%eax
		mov    %dl,_0cef88_data
		xor    %edx,%edx
		call   _046178_func
		call   _04122c_func
		test   %al,%al
		je     _047607_jump
		movl   $_03637c_func,_0e3d10_data
		call   _0239d0_func
		call   _03b970_func
		call   _04c94c_func
		jmp    _047610_jump

	_047607_jump:
		movw   $0x00fffe,_0ceca0_data

	_047610_jump:
		mov    $0x00000d,%ebx
		mov    $0x000012,%ecx
		mov    $0x000001,%esi
		mov    $0x000002,%edx
		xor    %eax,%eax
		mov    %bx,_0c4d90_data
		mov    %cx,_0c4d92_data
		mov    %si,_0c4d94_data
		mov    %si,_0c4d88_data
		mov    %ax,_0c4d8a_data
		mov    %dx,_0c4d8e_data
		mov    $0x000012,%eax
		xor    %dh,%dh
		call   _06eeb0_func
		mov    %dh,_095b15_data
		call   _0405c0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04766c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmp    $0x000002,%al
		jb     _047697_jump
		jbe    _0476d3_jump
		cmp    $0x000050,%al
		jb     _04768e_jump
		jbe    _047708_jump
		cmp    $0x000064,%al
		je     _04772e_jump
		jmp    _047749_jump

	_04768e_jump:
		cmp    $0x000046,%al
		je     _0476e2_jump
		jmp    _047749_jump

	_047697_jump:
		test   %al,%al
		ja     _0476bb_jump
		mov    $0x000001,%cl
		mov    $0x00003c,%eax
		xor    %edi,%edi
		mov    %cl,_0cefa2_data
		call   _03b034_jump
		mov    %di,_0ced3c_data
		jmp    _047749_jump

	_0476bb_jump:
		mov    $0x000001,%bh
		mov    $0x000032,%eax
		xor    %esi,%esi
		mov    %bh,_0cefa2_data
		mov    %si,_0ced3c_data
		jmp    _047744_jump

	_0476d3_jump:
		xor    %bl,%bl
		mov    $0x00003c,%eax
		mov    %bl,_0cefa2_data
		jmp    _047744_jump

	_0476e2_jump:
		mov    $0x000001,%dh
		mov    $0x000046,%eax
		xor    %ecx,%ecx
		mov    %dh,_0cefa2_data
		mov    %cx,_0ced3c_data
		call   _03b034_jump
		call   _035a70_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047708_jump:
		mov    $0x000001,%dl
		mov    $0x000050,%eax
		xor    %ebx,%ebx
		mov    %dl,_0cefa2_data
		mov    %bx,_0ced3c_data
		call   _03b034_jump
		call   _035a70_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04772e_jump:
		mov    $0x000001,%ah
		xor    %edx,%edx
		mov    %ah,_0cefa2_data
		mov    $0x000064,%eax
		mov    %dx,_0ced3c_data

	_047744_jump:
		call   _03b034_jump

	_047749_jump:
		call   _035a70_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_047754_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpb   $0x000000,_095b15_data
		jne    _047835_jump
		cmpb   $0x000000,_0cefac_data
		jne    _04778b_jump
		cmpw   $0x000006,_0cede4_data
		jne    _047782_jump
		cmpw   $0x000004,_0cedd0_data
		je     _04778b_jump

	_047782_jump:
		call   _0264c0_func
		test   %al,%al
		je     _0477d4_jump

	_04778b_jump:
		mov    _096456_data,%ecx
		mov    _09644e_data,%ebx
		mov    _096446_data,%edx
		mov    _09643e_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05ac68_func
		mov    _0cc5b0_data,%edx
		mov    _0cc5b4_data,%ecx
		mov    _0cc5a8_data,%ebx
		mov    _0cc5ac_data,%eax
		call   _01614e_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0477d4_jump:
		mov    _095b50_data,%eax
		sar    $0x000010,%eax
		mov    _096456_data(,%eax,2),%ecx
		mov    _09644e_data(,%eax,2),%ebx
		mov    _096446_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09643e_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05ac68_func
		mov    _0cc5b0_data,%edx
		mov    _0cc5b4_data,%ecx
		mov    _0cc5a8_data,%ebx
		mov    _0cc5ac_data,%eax
		call   _01614e_func
		mov    _0cc644_data,%edi
		call   _014bed_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047835_jump:
		call   _0160e8_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_047840_func:
		push   %ebx
		push   %edx
		mov    _0cede4_data,%dx
		mov    _0cedd0_data,%bx
		cmp    $0x000001,%dx
		jne    _04785c_jump
		cmp    $0x000010,%bx
		je     _047894_jump

	_04785c_jump:
		cmp    $0x000002,%dx
		jne    _047868_jump
		cmp    $0x000010,%bx
		je     _047894_jump

	_047868_jump:
		cmp    $0x000004,%dx
		jne    _047873_jump
		cmp    %dx,%bx
		je     _047894_jump

	_047873_jump:
		cmp    $0x000004,%dx
		jne    _04787f_jump
		cmp    $0x00000b,%bx
		je     _047894_jump

	_04787f_jump:
		cmp    $0x000005,%dx
		jne    _04788b_jump
		cmp    $0x000003,%bx
		je     _047894_jump

	_04788b_jump:
		cmpb   $0x000000,_095b55_data
		je     _047898_jump

	_047894_jump:
		mov    $0x000001,%al
		jmp    _04789a_jump

	_047898_jump:
		xor    %al,%al

	_04789a_jump:
		mov    %bx,_0cedd0_data
		mov    %dx,_0cede4_data
		pop    %edx
		pop    %ebx
		ret    



_0478ac_func:
		push   %edx
		mov    _0e3cf0_data,%eax
		mov    _0c2708_data,%edx
		mov    %edx,0x000038(%eax)
		mov    _0c270c_data,%edx
		mov    %edx,0x00003c(%eax)
		mov    _0c2710_data,%edx
		mov    %edx,0x000070(%eax)
		mov    _0c2700_data,%edx
		mov    %edx,0x000074(%eax)
		mov    _0c2704_data,%edx
		mov    %edx,0x0000e0(%eax)
		mov    _0c26fc_data,%edx
		mov    %edx,0x0000e4(%eax)
		mov    _0c2714_data,%edx
		mov    %edx,0x0000e8(%eax)
		mov    _0c2718_data,%edx
		mov    %edx,0x00011c(%eax)
		mov    _0c26ec_data,%edx
		mov    %edx,0x000120(%eax)
		mov    _0c271c_data,%edx
		mov    %edx,0x000124(%eax)
		mov    _0c26e8_data,%edx
		mov    %edx,0x00012c(%eax)
		mov    _0c26f0_data,%edx
		mov    %edx,0x000134(%eax)
		mov    _0c2720_data,%edx
		mov    %edx,0x00013c(%eax)
		mov    _0c26f4_data,%edx
		mov    %edx,0x000140(%eax)
		mov    _0c2724_data,%edx
		mov    %edx,0x000144(%eax)
		mov    _0c2728_data,%edx
		mov    %edx,0x000148(%eax)
		mov    _0c272c_data,%edx
		mov    %edx,0x00014c(%eax)
		pop    %edx
		ret    

_047974_switch:
		.long   _047a6f_case
		.long   _047b32_case
		.long   _047b32_case
		.long   _047a8f_case
		.long   _047ab8_case
		.long   _047b32_case
		.long   _047b32_case
		.long   _047aea_case
		.long   _047af1_case
		.long   _047b05_case
		.long   _047b1a_case


	_047a17_jump:
		mov    _0cefd1_data,%ch
		test   %ch,%ch
		jne    _047b5b_jump
		test   %dx,%dx
		jne    _047b5b_jump
		mov    _0c4d90_data,%eax
		sar    $0x000010,%eax
		call   _06eeb0_func
		mov    _0c4d92_data,%eax
		sar    $0x000010,%eax
		call   _06eed4_func
		mov    _0c4d8e_data,%eax
		sar    $0x000010,%eax
		call   _06eed0_func
		mov    _0cef8c_data,%al
		cmp    $0x00000a,%al
		ja     _047b32_case
		and    $0x0000ff,%eax
		jmp    *%cs:_047974_switch(,%eax,4)

	_047a6f_case:
		mov    $_047ea0_func,%ebx
		mov    $_036368_jump,%ecx
		mov    %ebx,_0e3cfc_data
		mov    %ecx,_0e3d10_data
		call   _03b920_func
		jmp    _047b2d_jump

	_047a8f_case:
		call   _033ef0_func
		cmpb   $0x000000,_0cef8e_data
		jne    _047b32_case
		mov    $0x000001,%edx
		mov    %ch,_0cefd1_data
		mov    %dx,_0cedea_data
		jmp    _047b32_case

	_047ab8_case:
		mov    $_0483a8_func,%esi
		mov    _0e3d10_data,%edi
		mov    %esi,_0e3cfc_data
		test   %edi,%edi
		je     _047ae0_jump
		movb   $0x000001,_0e3d3d_data
		movl   $_03637c_func,_0e3d10_data
		jmp    _047b2d_jump

	_047ae0_jump:
		xor    %ebp,%ebp
		mov    %ebp,_0e3d10_data
		jmp    _047b2d_jump

	_047aea_case:
		mov    $_049310_func,%ebx
		jmp    _047b1f_jump

	_047af1_case:
		mov    $_04a2e8_func,%ebp
		xor    %eax,%eax
		mov    %ebp,_0e3cfc_data
		mov    %eax,_0e3d10_data
		jmp    _047b2d_jump

	_047b05_case:
		mov    $_04aef8_func,%esi
		xor    %edi,%edi
		mov    %esi,_0e3cfc_data
		mov    %edi,_0e3d10_data
		jmp    _047b2d_jump

	_047b1a_case:
		mov    $_04bf04_func,%ebx

	_047b1f_jump:
		xor    %ecx,%ecx
		mov    %ebx,_0e3cfc_data
		mov    %ecx,_0e3d10_data

	_047b2d_jump:
		call   _04d0f4_func

	_047b32_case:
		call   _0411b8_func
		cmpb   $0x000000,_0cef8e_data
		je     _047b4e_jump
		xor    %cl,%cl
		mov    %cl,_0cef8c_data
		mov    %cl,_0cef8e_data

	_047b4e_jump:
		cmpb   $0x000000,_0cef89_data
		je     _047a17_jump

	_047b5b_jump:
		call   _04d2c4_func
		call   _071540_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_047b6c_switch:
		.long   _047d1c_case
		.long   _047d6f_case
		.long   _047d6f_case
		.long   _047d34_case
		.long   _047d45_case
		.long   _047d57_case


	_047ccc_jump:
		cmp    _0cef8c_data,%dl
		je     _047d7f_jump
		mov    _0c4d90_data,%eax
		sar    $0x000010,%eax
		call   _06eeb0_func
		mov    _0c4d92_data,%eax
		sar    $0x000010,%eax
		call   _06eed4_func
		mov    _0c4d8e_data,%eax
		sar    $0x000010,%eax
		call   _06eed0_func
		call   _0411b8_func
		mov    _0cef8c_data,%al
		sub    $0x000004,%al
		cmp    $0x000005,%al
		ja     _047d6f_case
		and    $0x0000ff,%eax
		jmp    *%cs:_047b6c_switch(,%eax,4)

	_047d1c_case:
		mov    _0cef8e_data,%ah
		mov    %ebp,_0e3cfc_data
		mov    %edx,_0e3d10_data
		cmp    %ah,%dl
		je     _047d6f_case
		jmp    _047d69_jump

	_047d34_case:
		mov    _0cef8e_data,%al
		mov    %edi,_0e3cfc_data
		cmp    %al,%dl
		je     _047d6f_case
		jmp    _047d69_jump

	_047d45_case:
		mov    _0cef8e_data,%ch
		mov    %esi,_0e3cfc_data
		cmp    %ch,%dl
		je     _047d6f_case
		jmp    _047d69_jump

	_047d57_case:
		movl   $_04aef8_func,_0e3cfc_data
		cmp    _0cef8e_data,%dl
		je     _047d6f_case

	_047d69_jump:
		mov    %bl,_0cef8c_data

	_047d6f_case:
		call   _04d0f4_func
		mov    %dl,_0cef8e_data
		jmp    _047ccc_jump

	_047d7f_jump:
		xor    %al,%al
		mov    %al,_095b4b_data
		call   _04d2c4_func
		cmpb   $0x000000,_095b15_data
		jne    _047df2_jump
		mov    _095b50_data,%eax
		sar    $0x000010,%eax
		mov    _096456_data(,%eax,2),%ecx
		mov    _09644e_data(,%eax,2),%ebx
		mov    _096446_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09643e_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05ac68_func
		mov    _0cc5b0_data,%edx
		mov    _0cc5b4_data,%ecx
		mov    _0cc5a8_data,%ebx
		mov    _0cc5ac_data,%eax
		call   _01614e_func
		mov    _0cc644_data,%edi
		call   _014bed_func
		jmp    _047e15_jump

	_047df2_jump:
		cmpb   $0x000001,_0cef6d_data
		jne    _047e15_jump
		mov    _0ccd34_data,%edx
		mov    _0ccd1c_data,%ebx
		mov    _0ccd40_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func

	_047e15_jump:
		cmpb   $0x000000,_0cef72_data
		je     _047e23_jump
		call   _0702a8_func

	_047e23_jump:
		mov    $0x000001,%esi
		mov    _0cede4_data,%ax
		xor    %bl,%bl
		xor    %edi,%edi
		mov    %bl,_0cefa5_data
		mov    %si,_0cec9a_data
		xor    %ebx,%ebx
		mov    %di,_0cec98_data
		mov    %ebx,_0cc4e8_data
		cmp    $0x000006,%ax
		jne    _047e5e_jump
		cmpw   $0x000004,_0cedd0_data
		je     _047e67_jump

	_047e5e_jump:
		cmpb   $0x000000,_0cefac_data
		je     _047e73_jump

	_047e67_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		mov    %ax,_095b52_data

	_047e73_jump:
		mov    _0cefd4_data,%al
		mov    %al,_096478_data
		mov    (%esp),%al
		mov    %al,_0cefd3_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_047e90_switch:
		.long   _047f66_case
		.long   _047f94_case
		.long   _047fc2_case
		.long   _047fed_case




_047ea0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    $_0480b8_func,%ecx
		mov    $_048154_func,%esi
		mov    $_048330_func,%edi
		mov    $0x000003,%ebx
		mov    _047450_switch,%eax
		xor    %edx,%edx
		mov    %eax,(%esp)
		mov    %edx,_0e3cf8_data
		mov    %edx,_0e3cf4_data
		mov    %ecx,_0e3d08_data
		mov    %esi,_0e3d04_data
		mov    %edi,_0e3d0c_data
		mov    %bx,_0cecac_data
		mov    $0x000004,%edx
		mov    $0x0000a0,%ecx
		xor    %bl,%bl
		xor    %ah,%ah
		mov    $0x000001,%bh
		mov    %dx,_0cecf0_data
		mov    %ah,_096475_data
		mov    %cx,_0cecc4_data
		jmp    _04804f_jump

	_047f15_jump:
		movzbl %bl,%ebp
		imul   $0x0000d8,%ebp,%ecx
		mov    $_0ca7f8_data,%edx
		add    %ecx,%edx
		mov    _0c26b0_data(,%ebp,4),%esi
		mov    %edx,%edi
		push   %edi

	_047f2f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _047f47_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _047f2f_jump

	_047f47_jump:
		pop    %edi
		mov    (%esp,%ebp,1),%al
		mov    %al,_0ca8cf_data(%ecx)
		cmp    $0x000003,%bl
		ja     _048016_jump
		xor    %eax,%eax
		mov    %bl,%al
		jmp    *%cs:_047e90_switch(,%eax,4)

	_047f66_case:
		mov    _0c256c_data,%esi
		push   %edi

	_047f6d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _047f85_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _047f6d_jump

	_047f85_jump:
		pop    %edi
		movw   $0x00001e,_0ca8ca_data(%ecx)
		jmp    _048016_jump

	_047f94_case:
		mov    _0c268c_data,%esi
		mov    $0x00003c,%edx
		push   %edi

	_047fa0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _047fb8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _047fa0_jump

	_047fb8_jump:
		pop    %edi
		mov    %dx,_0ca8ca_data(%ecx)
		jmp    _048016_jump

	_047fc2_case:
		mov    _0c2570_data,%esi
		push   %edi

	_047fc9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _047fe1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _047fc9_jump

	_047fe1_jump:
		pop    %edi
		movw   $0x00009b,_0ca8ca_data(%ecx)
		jmp    _048016_jump

	_047fed_case:
		mov    _0c2620_data,%esi
		push   %edi

	_047ff4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04800c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _047ff4_jump

	_04800c_jump:
		pop    %edi
		movw   $0x0000b9,_0ca8ca_data(%ecx)

	_048016_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		imul   $0x0000d8,%edx,%edx
		mov    _0cecc4_data,%ax
		mov    %ax,_0ca8c8_data(%edx)
		mov    %bh,_0ca8cc_data(%edx)
		xor    %ch,%ch
		mov    %bh,_0ca8ce_data(%edx)
		mov    $_0ca7f8_data,%eax
		mov    %ch,_0ca8cd_data(%edx)
		add    %edx,%eax
		add    %bh,%bl
		call   _01ec48_func

	_04804f_jump:
		xor    %eax,%eax
		mov    _0cecf0_data,%si
		mov    %bl,%al
		cmp    %si,%ax
		jl     _047f15_jump
		mov    $0x000001,%al
		mov    $0x000064,%edx
		mov    $0x00000c,%ebx
		xor    %edi,%edi
		mov    $0x000006,%ecx
		mov    %di,_0ced0e_data
		mov    %al,_0cefd3_data
		mov    %di,_0ced04_data
		mov    %dx,_0ced0a_data
		mov    %bx,_0cece6_data
		mov    %cx,_0cecd4_data
		mov    %di,_0cecf8_data
		mov    %di,_0cecde_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0480b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		call   _03bcb4_func
		xor    %ah,%ah
		mov    %ah,(%esp)
		jmp    _04812a_jump

	_0480ca_jump:
		cmp    _0ced0e_data,%ax
		jne    _0480ef_jump
		xor    %eax,%eax
		mov    (%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    $0x000001,%edx
		add    $_0ca7f8_data,%eax
		call   _04d608_func
		jmp    _048127_jump

	_0480ef_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		imul   $0x0000d8,%eax,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    _0ca8cf_data(%eax),%dl
		mov    _0ca8cc_data(%eax),%cl
		mov    _0ca8c8_data(%eax),%ebx
		push   %edx
		mov    _0ca8c6_data(%eax),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    $_0ca7f8_data,%eax
		call   _01a178_func

	_048127_jump:
		incb   (%esp)

	_04812a_jump:
		xor    %eax,%eax
		mov    _0cecf0_data,%dx
		mov    (%esp),%al
		cmp    %dx,%ax
		jl     _0480ca_jump
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_048144_switch:
		.long   _0482d5_case
		.long   _0482f1_case
		.long   _048321_case
		.long   _04830f_case




_048154_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		call   _04d544_func
		mov    _0cc640_data,%ebx
		xor    %edx,%edx
		inc    %ebx
		mov    _0cecbc_data,%dx
		mov    %ebx,_0cc640_data
		cmp    %ebx,%edx
		jg     _048187_jump
		cmpb   $0x000000,_0cefd1_data
		jne    _048187_jump
		call   _03524c_func

	_048187_jump:
		call   _036944_func
		test   %al,%al
		je     _0481ac_jump
		mov    $0x000001,%eax
		call   _0411a8_func
		xor    %eax,%eax
		call   _04d99c_func
		test   %al,%al
		je     _0481ac_jump
		movb   $0x000001,_0cef8e_data

	_0481ac_jump:
		call   _040904_func
		test   %ax,%ax
		je     _04822c_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _0481ef_jump
		mov    _0ced04_data,%ax
		cmp    _0cece6_data,%ax
		jle    _04822c_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04822c_jump

	_0481ef_jump:
		mov    $0x000044,%eax
		call   _06fa90_func
		xor    %eax,%eax
		mov    _0ced0e_data,%bx
		mov    _096475_data,%al
		cmp    %bx,%ax
		jge    _048218_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0ced0e_data
		jmp    _048224_jump

	_048218_jump:
		mov    _0cecac_data,%ax
		mov    %ax,_0ced0e_data

	_048224_jump:
		xor    %esi,%esi
		mov    %esi,_0cc640_data

	_04822c_jump:
		call   _040894_func
		test   %ax,%ax
		je     _04829c_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _04826b_jump
		mov    _0ced04_data,%ax
		cmp    _0cece6_data,%ax
		jle    _04829c_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04829c_jump

	_04826b_jump:
		mov    $0x000044,%eax
		call   _06fa90_func
		mov    _0ced0e_data,%ax
		cmp    _0cecac_data,%ax
		jge    _048287_jump
		inc    %eax
		jmp    _04828e_jump

	_048287_jump:
		xor    %eax,%eax
		mov    _096475_data,%al

	_04828e_jump:
		mov    %ax,_0ced0e_data
		xor    %edi,%edi
		mov    %edi,_0cc640_data

	_04829c_jump:
		call   _036820_func
		test   %al,%al
		je     _048321_case
		cmpb   $0x000000,_0cefd3_data
		je     _048321_case
		mov    $0x000045,%eax
		call   _06fa90_func
		mov    _0ced0e_data,%ax
		cmp    $0x000003,%ax
		ja     _048321_case
		xor    %edx,%edx
		mov    %ax,%dx
		jmp    *%cs:_048144_switch(,%edx,4)

	_0482d5_case:
		xor    %eax,%eax
		mov    $0x000001,%ebx
		mov    %eax,_0cc640_data
		mov    $0x000003,%al
		mov    %bx,_0cecde_data
		mov    %al,_0cef8c_data
		jmp    _048321_case

	_0482f1_case:
		mov    $0x000001,%edx
		xor    %ebp,%ebp
		mov    $0x000004,%ch
		mov    %ebp,_0cc640_data
		mov    %dx,_0cecde_data
		mov    %ch,_0cef8c_data
		jmp    _048321_case

	_04830f_case:
		xor    %eax,%eax
		call   _04d99c_func
		test   %al,%al
		je     _048321_case
		movb   $0x000001,_0cef8e_data

	_048321_case:
		call   _04d588_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_048330_func:
		push   %ebx
		push   %edx
		mov    _0cef8e_data,%ah
		test   %ah,%ah
		je     _048376_jump
		mov    $0x000001,%bh
		mov    _0e3d08_data,%edx
		mov    %bh,_0cefd1_data
		mov    %bh,_0cefcf_data
		test   %edx,%edx
		je     _0483a2_jump
		call   *_0e3d08_data
		call   _016dee_func
		call   _016dde_func
		mov    $0x000001,%eax
		call   _023a7c_func
		call   _03a340_func
		pop    %edx
		pop    %ebx
		ret    

	_048376_jump:
		mov    _0cef89_data,%dl
		test   %dl,%dl
		jne    _0483a2_jump
		xor    %dh,%dh
		mov    %dx,_0cecbc_data
		cmpb   $0x000002,_0cef92_data
		jne    _048398_jump
		mov    %ah,_0cef92_data

	_048398_jump:
		call   _03b970_func
		call   _03b920_func

	_0483a2_jump:
		pop    %edx
		pop    %ebx
		ret    



_0483a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_04854c_func,%edx
		mov    $_048a58_func,%ebx
		mov    $_048e4c_func,%ecx
		mov    $_049258_func,%esi
		mov    $0x000001,%ah
		mov    $0x00000c,%edi
		mov    %edx,_0e3cf8_data
		mov    %ebx,_0e3d08_data
		mov    %ecx,_0e3d04_data
		mov    %esi,_0e3d0c_data
		mov    %ah,_0cefd3_data
		mov    %di,_0cece6_data
		mov    $0x000014,%edx
		mov    $0x000004,%ebx
		mov    $0x000064,%esi
		mov    $0x000006,%eax
		xor    %ecx,%ecx
		mov    %dx,_0ced0c_data
		mov    %bx,_0cece8_data
		mov    %cx,_0ced04_data
		mov    %si,_0ced0a_data
		mov    %ax,_0cecd4_data
		mov    $0x000008,%edx
		mov    $0x000003,%ebx
		mov    _0cef88_data,%al
		mov    %dx,_0cecd0_data
		mov    %bx,_0cece2_data
		cmp    $0x000001,%al
		jb     _04844e_jump
		jbe    _04845b_jump
		cmp    $0x000002,%al
		je     _04845b_jump
		jmp    _048462_jump

	_04844e_jump:
		test   %al,%al
		jne    _048462_jump
		movb   $0x00004b,_0e3d3c_data
		jmp    _048462_jump

	_04845b_jump:
		movb   $0x00005a,_0e3d3c_data

	_048462_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0e3d3c_data,%al
		sub    %eax,%edx
		mov    _095b4b_data,%bh
		mov    %dx,_0cecc4_data
		test   %bh,%bh
		je     _0484a2_jump
		mov    $0x000006,%eax
		xor    %ch,%ch
		mov    %ax,_0ced06_data
		mov    %ax,_0cecac_data
		mov    %ch,_096475_data
		mov    %ax,_0cecf0_data
		jmp    _0484c2_jump

	_0484a2_jump:
		mov    $0x000005,%ecx
		mov    %bh,_096475_data
		mov    %cx,_0ced06_data
		mov    %cx,_0cecac_data
		mov    %cx,_0cecf0_data

	_0484c2_jump:
		mov    $0x000005,%ebx
		mov    $0x00003c,%edx
		mov    $0x000014,%eax
		call   _04d470_func
		cmpb   $0x000000,_096477_data
		je     _048503_jump
		xor    %eax,%eax
		mov    _0e3d19_data,%al
		mov    %ax,_0cccbe_data
		xor    %eax,%eax
		mov    _0e3d18_data,%al
		mov    %ax,_0cccbc_data
		xor    %ah,%ah
		mov    %ah,_096477_data
		jmp    _04851b_jump

	_048503_jump:
		mov    _0c4d90_data,%ax
		mov    %ax,_0cccbc_data
		mov    _0c4d92_data,%ax
		mov    %ax,_0cccbe_data

	_04851b_jump:
		xor    %dl,%dl
		xor    %ecx,%ecx
		mov    %dl,_095b98_data
		mov    %cx,_0cecde_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_048534_switch:
		.long   _048671_case
		.long   _0486db_case
		.long   _04872d_case
		.long   _04872d_case
		.long   _04872d_case
		.long   _04872d_case




_04854c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    %esp,%edi
		mov    $_047454_func,%esi
		mov    _047460_jump,%eax
		mov    $0x000001,%dl
		mov    %eax,0x000010(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %dl,_0cb066_data
		lea    0x00002c(%esp),%edi
		mov    $0x000002,%ah
		mov    $_04745d_jump,%esi
		xor    %dh,%dh
		mov    %ah,_0cb064_data
		mov    %dh,_0cb065_data
		xor    %eax,%eax
		mov    %dl,_0cb067_data
		mov    _096475_data,%al
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %ax,0x000030(%esp)
		jmp    _048793_jump

	_0485a3_jump:
		imul   $0x0000d8,%eax,%ebp
		mov    $0x000002,%bl
		mov    $_0ca7f8_data,%edx
		mov    _0cecac_data,%si
		xor    %cl,%cl
		mov    %bl,_0ca8cc_data(%ebp)
		add    %ebp,%edx
		mov    %cl,_0ca8cd_data(%ebp)
		mov    $0x000001,%bh
		mov    %edx,0x00001c(%esp)
		mov    0x000030(%esp),%edx
		mov    %bh,_0ca8ce_data(%ebp)
		cmp    %si,%dx
		jne    _048628_jump
		mov    0x00001c(%esp),%edi
		mov    _0c2620_data,%esi
		mov    $0x0000a0,%ecx
		push   %edi

	_0485ec_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _048604_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0485ec_jump

	_048604_jump:
		pop    %edi
		mov    _0cecfe_data,%ax
		mov    %cx,_0ca8c8_data(%ebp)
		mov    %ax,_0ca8ca_data(%ebp)
		mov    0x000006(%esp),%al
		mov    %al,_0ca8cf_data(%ebp)
		jmp    _048772_jump

	_048628_jump:
		mov    0x00001c(%esp),%edi
		mov    (%esp,%eax,1),%dl
		mov    _0c26b0_data(,%eax,4),%esi
		mov    %dl,_0ca8cf_data(%ebp)
		push   %edi

	_04863d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _048655_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04863d_jump

	_048655_jump:
		pop    %edi
		mov    0x000030(%esp),%edi
		cmp    $0x000005,%di
		ja     _048743_jump
		xor    %eax,%eax
		mov    %di,%ax
		jmp    *%cs:_048534_switch(,%eax,4)

	_048671_case:
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    0x000020(%esp),%eax
		call   _01ebec_func
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    %eax,%esi
		lea    0x000030(%esp),%eax
		add    $0x000010,%esi
		call   _01ebec_func
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		add    %eax,%esi
		lea    0x000014(%esp),%eax
		call   _01ebec_func
		add    %esi,%eax
		cwtl   
		mov    $0x0000a0,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,_0ca8c8_data(%ebp)
		jmp    _048743_jump

	_0486db_case:
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    0x000020(%esp),%eax
		call   _01ebec_func
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    %eax,%esi
		mov    $_0c0d14_data,%eax
		call   _01ebec_func
		imul   $0x000014,%eax,%eax
		add    $0x000010,%esi
		add    %esi,%eax
		cwtl   
		mov    $0x0000a0,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,_0ca8c8_data(%ebp)
		jmp    _048743_jump

	_04872d_case:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		movw   $0x0000a0,_0ca8c8_data(%eax)

	_048743_jump:
		mov    _0ced00_data,%ax
		mov    0x000030(%esp),%ebx
		add    $0x00000f,%eax
		imul   %ebx,%eax
		mov    _0ced14_data,%si
		add    %eax,%esi
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    %si,_0ca8ca_data(%eax)

	_048772_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    0x000030(%esp),%esi
		inc    %esi
		add    $_0ca7f8_data,%eax
		mov    %si,0x000030(%esp)
		call   _01ec48_func

	_048793_jump:
		xor    %eax,%eax
		mov    _0cecee_data,%esi
		mov    _096475_data,%al
		sar    $0x000010,%esi
		add    %eax,%esi
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		cmp    %esi,%eax
		jle    _0485a3_jump
		mov    $_0ca648_data,%edi
		mov    $0x0000a0,%edx
		mov    _0c25d8_data,%esi
		mov    $0x000064,%ebx
		push   %edi

	_0487ca_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0487e2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0487ca_jump

	_0487e2_jump:
		pop    %edi
		xor    %ch,%ch
		mov    $0x000064,%esi
		mov    %dx,_0ca718_data
		mov    %bx,_0ca71a_data
		mov    %ch,_0ca71d_data
		mov    $0x000002,%bh
		mov    %edi,%eax
		mov    %bh,_0ca71c_data
		mov    %bh,_0ca71e_data
		call   _01ec48_func
		mov    %dx,_0ca7f0_data
		mov    %si,_0ca7f2_data
		mov    %bh,_0ca7f4_data
		mov    %bh,_0ca7f6_data
		mov    %ch,_0ca7f5_data
		mov    _0cecf6_data,%bx
		mov    _0e3d3d_data,%dh
		sub    $0x000019,%ebx
		test   %dh,%dh
		je     _0488e7_jump
		cmpb   $0x000000,_095b4b_data
		je     _048a44_jump
		mov    _0cecc4_data,%ax
		mov    %ax,_0e3d2c_data
		xor    %eax,%eax
		mov    _0e3d3c_data,%al
		mov    _0cecaa_data,%esi
		add    %eax,%eax
		sar    $0x000010,%esi
		mov    %ax,_0e3d34_data
		lea    0x000000(,%esi,8),%eax
		sub    %esi,%eax
		shl    $0x000002,%eax
		push   $0x000000
		sub    %esi,%eax
		mov    _0cecf6_data,%cx
		mov    %bx,_0e3d30_data
		mov    _0ca8ca_data(,%eax,8),%ax
		movswl %bx,%edx
		sub    %ecx,%eax
		mov    _0e3d2a_data,%esi
		add    $0x000023,%eax
		sar    $0x000010,%esi
		mov    %ax,_0e3d2e_data
		mov    _0e3d32_data,%eax
		mov    _0e3d2c_data,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _04e104_func
		xor    %ch,%ch
		mov    %ch,_0e3d3d_data
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0488e7_jump:
		mov    _0cecaa_data,%ebp
		sar    $0x000010,%ebp
		lea    0x000000(,%ebp,8),%eax
		sub    %ebp,%eax
		shl    $0x000002,%eax
		mov    _0cecc4_data,%dx
		sub    %ebp,%eax
		mov    %ebx,%esi
		mov    _0cecf6_data,%bx
		mov    _0ca8ca_data(,%eax,8),%ax
		movzbw _0e3d3c_data,%di
		sub    %ebx,%eax
		mov    _0e3d2c_data,%cx
		add    $0x000023,%eax
		add    %edi,%edi
		mov    %ax,0x000038(%esp)
		cmp    %cx,%dx
		jge    _04893c_jump
		mov    %edx,%eax
		jmp    _04893e_jump

	_04893c_jump:
		mov    %ecx,%eax

	_04893e_jump:
		mov    _0e3d30_data,%bx
		cmp    %bx,%si
		jge    _04894c_jump
		mov    %esi,%ebx

	_04894c_jump:
		mov    _0e3d32_data,%ebp
		mov    _0e3d2a_data,%ecx
		sar    $0x000010,%ebp
		sar    $0x000010,%ecx
		add    %ecx,%ebp
		movswl %dx,%ecx
		mov    %ecx,0x000024(%esp)
		mov    %ebp,0x000014(%esp)
		mov    0x000024(%esp),%ebp
		movswl %di,%ecx
		add    %ebp,%ecx
		mov    0x000014(%esp),%ebp
		cmp    %ebp,%ecx
		jge    _048987_jump
		movswl %ax,%ecx
		sub    %ecx,%ebp
		mov    %ebp,0x000018(%esp)
		jmp    _048990_jump

	_048987_jump:
		movswl %ax,%ebp
		sub    %ebp,%ecx
		mov    %ecx,0x000018(%esp)

	_048990_jump:
		mov    0x000018(%esp),%ecx
		mov    %cx,0x000034(%esp)
		mov    _0e3d2c_data,%ecx
		mov    _0e3d2e_data,%ebp
		sar    $0x000010,%ecx
		sar    $0x000010,%ebp
		add    %ecx,%ebp
		movswl %si,%ecx
		mov    %ecx,0x00000c(%esp)
		mov    0x000036(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,0x000028(%esp)
		mov    0x00000c(%esp),%ecx
		add    0x000028(%esp),%ecx
		mov    %ecx,0x000020(%esp)
		cmp    %ecx,%ebp
		jg     _0489d3_jump
		mov    0x000020(%esp),%ebp

	_0489d3_jump:
		movswl %bx,%ecx
		sub    %ecx,%ebp
		mov    %ebp,%ecx
		mov    %dx,_0e3d2c_data
		mov    0x000038(%esp),%edx
		mov    %si,_0e3d30_data
		mov    %dx,_0e3d2e_data
		mov    _095b4b_data,%dl
		mov    %di,_0e3d34_data
		test   %dl,%dl
		je     _048a2d_jump
		push   $0x000001
		mov    0x000036(%esp),%esi
		movswl %cx,%ecx
		movswl %bx,%edx
		sar    $0x000010,%esi
		cwtl   
		mov    %esi,%ebx
		call   _04e104_func
		xor    %ch,%ch
		mov    %ch,_0e3d3d_data
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048a2d_jump:
		mov    0x000032(%esp),%edx
		movswl %cx,%ecx
		movswl %bx,%esi
		sar    $0x000010,%edx
		cwtl   
		mov    %edx,%ebx
		mov    %esi,%edx
		call   _04e914_func

	_048a44_jump:
		xor    %ch,%ch
		mov    %ch,_0e3d3d_data
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_048a58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		lea    0x000004(%esp),%edi
		mov    _047467_jump,%eax
		mov    $_047464_jump,%esi
		mov    %eax,(%esp)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   _03bcb4_func
		cmpb   $0x000000,_095b4b_data
		je     _048aab_jump
		mov    _0e3d2c_data,%ecx
		mov    _0e3d32_data,%ebx
		mov    _0e3d2e_data,%edx
		mov    _0e3d2a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024538_func

	_048aab_jump:
		push   $0x000001
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cecf4_data,%ebx
		mov    _0c268c_data,%eax
		sar    $0x000010,%ebx
		call   _01a178_func
		mov    _096475_data,%al
		mov    %al,0x000020(%esp)
		jmp    _048e1f_jump

	_048ad8_jump:
		imul   $0x0000d8,%edx,%eax
		mov    _0ca8ca_data(%eax),%bx
		mov    %bx,0x000014(%esp)
		xor    %ebx,%ebx
		mov    _0ced06_data,%cx
		mov    %dl,%bl
		mov    _0ca8c8_data(%eax),%si
		cmp    %cx,%bx
		je     _048b5c_jump
		cmp    _0cecac_data,%bx
		jne    _048b31_jump
		mov    _0ca8cf_data(%eax),%al
		mov    0x000012(%esp),%ebx
		mov    $0x000002,%ecx
		and    $0x0000ff,%eax
		movswl %si,%edx
		push   %eax
		sar    $0x000010,%ebx
		mov    _0c2620_data,%eax
		call   _01a178_func
		jmp    _048b6b_jump

	_048b31_jump:
		mov    _0ca8cf_data(%eax),%al
		mov    0x000012(%esp),%ebx
		mov    $0x000002,%ecx
		and    $0x0000ff,%eax
		movswl %si,%edi
		push   %eax
		sar    $0x000010,%ebx
		mov    _0c26b0_data(,%edx,4),%eax
		mov    %edi,%edx
		call   _01a178_func
		jmp    _048b6b_jump

	_048b5c_jump:
		mov    $0x000001,%edx
		add    $_0ca7f8_data,%eax
		call   _04d608_func

	_048b6b_jump:
		mov    0x000020(%esp),%dl
		test   %dl,%dl
		jne    _048cb9_jump
		movzbl %dl,%edi
		imul   $0x0000d8,%edi,%eax
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		add    $_0ca7f8_data,%eax
		call   _01ebec_func
		lea    0x000000(,%edi,2),%edx
		mov    %esi,%edi
		add    %eax,%edi
		mov    %ax,0x000018(%esp)
		mov    %edi,%eax
		add    $0x000010,%eax
		mov    _0cccbc_data(%edx),%bx
		mov    %eax,0x000008(%esp)
		test   %bx,%bx
		je     _048bf4_jump
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		lea    0x000008(%esp),%eax
		call   _01ebec_func
		add    %edi,%eax
		add    $0x000020,%eax
		mov    %esp,%ebp
		mov    %ax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		lea    0x000004(%esp),%esi
		jmp    _048c20_jump

	_048bf4_jump:
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    %ax,0x000010(%esp)
		lea    0x000008(%esp),%eax
		call   _01ebec_func
		add    %edi,%eax
		lea    0x000004(%esp),%ebp
		add    $0x000020,%eax
		mov    %esp,%esi

	_048c20_jump:
		mov    %ax,0x000010(%esp)
		push   $0x000005
		mov    0x000016(%esp),%edi
		mov    0x00000e(%esp),%edx
		mov    $0x000002,%ecx
		mov    %ebp,%eax
		sar    $0x000010,%edi
		sar    $0x000010,%edx
		mov    %edi,%ebx
		call   _01a178_func
		xor    %eax,%eax
		mov    _0ced06_data,%cx
		mov    0x000020(%esp),%al
		cmp    %cx,%ax
		jne    _048c9d_jump
		mov    $_0caf90_data,%edi
		push   %edi

	_048c5b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _048c73_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _048c5b_jump

	_048c73_jump:
		pop    %edi
		mov    0x000010(%esp),%eax
		mov    %ax,_0cb060_data
		mov    0x000014(%esp),%eax
		mov    %ax,_0cb062_data
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01ec48_func
		mov    %edi,%eax
		call   _04d608_func
		jmp    _048e1b_jump

	_048c9d_jump:
		push   $0x000001
		mov    0x000012(%esp),%edx
		mov    $0x000002,%ecx
		mov    %edi,%ebx
		mov    %esi,%eax
		sar    $0x000010,%edx
		call   _01a178_func
		jmp    _048e1b_jump

	_048cb9_jump:
		cmp    $0x000001,%dl
		jne    _048e1b_jump
		xor    %eax,%eax
		mov    %dl,%al
		imul   $0x0000d8,%eax,%eax
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		add    $_0ca7f8_data,%eax
		call   _01ebec_func
		mov    _0cece8_data,%dx
		mov    %eax,%edi
		imul   $0x000014,%edx,%eax
		inc    %eax
		movswl %ax,%ebx
		mov    0x000014(%esp),%eax
		sub    $0x00000e,%eax
		add    $0x000010,%edi
		movswl %ax,%edx
		mov    %esi,%eax
		push   $0x000001
		add    %edi,%eax
		mov    $0x00000f,%ecx
		cwtl   
		call   _024620_func
		xor    %bl,%bl
		mov    $_0c0d14_data,%ebp
		mov    %bl,0x00001c(%esp)
		jmp    _048e05_jump

	_048d25_jump:
		mov    _0ced0a_data,%ebx
		sar    $0x000010,%ebx
		mov    $0x000003,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		xor    %ecx,%ecx
		mov    0x00001c(%esp),%cl
		cmp    %eax,%ecx
		jge    _048d52_jump
		movw   $0x000005,0x000018(%esp)
		jmp    _048dc0_jump

	_048d52_jump:
		lea    0x000000(,%ebx,2),%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    %eax,%ecx
		jge    _048d86_jump
		mov    _0ced14_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    %eax,%ecx
		jl     _048d86_jump
		movw   $0x000003,0x000018(%esp)
		jmp    _048dc0_jump

	_048d86_jump:
		xor    %eax,%eax
		mov    _0ced0c_data,%bx
		mov    0x00001c(%esp),%al
		cmp    %bx,%ax
		jge    _048dc0_jump
		mov    _0ced14_data,%edx
		sar    $0x000010,%edx
		add    %edx,%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		cmp    %eax,%edx
		jl     _048dc0_jump
		movw   $0x000001,0x000018(%esp)

	_048dc0_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		push   %eax
		mov    _0ced00_data,%ax
		mov    _0ced14_data,%bx
		add    $0x00000f,%eax
		add    %ebx,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    _0cece8_data,%cx
		mov    0x000020(%esp),%al
		imul   %ecx,%eax
		add    %esi,%eax
		add    %edi,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    %ebp,%eax
		call   _01a178_func
		incb   0x00001c(%esp)

	_048e05_jump:
		xor    %eax,%eax
		mov    _0cccbe_data,%dx
		mov    0x00001c(%esp),%al
		cmp    %dx,%ax
		jl     _048d25_jump

	_048e1b_jump:
		incb   0x000020(%esp)

	_048e1f_jump:
		xor    %eax,%eax
		mov    _0cecee_data,%edx
		mov    _096475_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		cmp    %eax,%edx
		jle    _048ad8_jump
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_048e4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		call   _04d544_func
		call   _036944_func
		test   %al,%al
		je     _048e65_jump
		movb   $0x000001,_0cef8e_data

	_048e65_jump:
		call   _040904_func
		test   %ax,%ax
		je     _048ef5_jump
		call   _040824_func
		test   %ax,%ax
		jne    _048ef5_jump
		call   _0407b4_func
		test   %ax,%ax
		jne    _048ef5_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _048ec0_jump
		mov    _0ced04_data,%ax
		cmp    _0cece6_data,%ax
		jle    _048ef5_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _048ef5_jump

	_048ec0_jump:
		mov    $0x000044,%eax
		call   _06fa90_func
		xor    %eax,%eax
		mov    _0ced06_data,%bx
		mov    _096475_data,%al
		cmp    %bx,%ax
		jne    _048eeb_jump
		mov    _0cecac_data,%ax
		mov    %ax,_0ced06_data
		jmp    _048ef5_jump

	_048eeb_jump:
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0ced06_data

	_048ef5_jump:
		call   _040894_func
		test   %ax,%ax
		je     _048f7c_jump
		call   _040824_func
		test   %ax,%ax
		jne    _048f7c_jump
		call   _0407b4_func
		test   %ax,%ax
		jne    _048f7c_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _048f50_jump
		mov    _0ced04_data,%ax
		cmp    _0cece6_data,%ax
		jle    _048f7c_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _048f7c_jump

	_048f50_jump:
		mov    $0x000044,%eax
		call   _06fa90_func
		mov    _0ced06_data,%ax
		mov    _0cecac_data,%di
		cmp    %di,%ax
		jne    _048f75_jump
		xor    %edi,%eax
		mov    _096475_data,%al
		jmp    _048f76_jump

	_048f75_jump:
		inc    %eax

	_048f76_jump:
		mov    %ax,_0ced06_data

	_048f7c_jump:
		cmpw   $0x000000,_0ced06_data
		jne    _04901e_jump
		cmpb   $0x000000,_0cefd3_data
		je     _04901e_jump
		call   _036820_func
		test   %al,%al
		jne    _048fb4_jump
		call   _040824_func
		test   %ax,%ax
		jne    _048fb4_jump
		call   _0407b4_func
		test   %ax,%ax
		je     _04901e_jump

	_048fb4_jump:
		mov    _0ced04_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000000,_0cccbc_data(,%eax,2)
		sete   %al
		xor    %ah,%ah
		mov    %eax,%edx
		mov    _0ced04_data,%eax
		sar    $0x000010,%eax
		mov    %edx,%ecx
		mov    %dx,_0cccbc_data(,%eax,2)
		test   %cx,%cx
		je     _049003_jump
		call   _01cb30_func
		xor    %edx,%edx
		mov    _095b9e_data,%ch
		mov    %edx,_0cce0c_data
		test   %ch,%ch
		je     _04901e_jump
		movb   $0x000001,_0cefa7_data
		jmp    _04901e_jump

	_049003_jump:
		call   _01cb30_func
		call   _01cb80_func
		cmpb   $0x000000,_095b9e_data
		je     _04901e_jump
		xor    %cl,%cl
		mov    %cl,_0cefa7_data

	_04901e_jump:
		cmpw   $0x000001,_0ced06_data
		jne    _049098_jump
		call   _040824_func
		test   %ax,%ax
		je     _049098_jump
		mov    _0cccbe_data,%ax
		cmp    _0ced0c_data,%ax
		jge    _049098_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _04907a_jump
		mov    _0ced04_data,%ax
		cmp    _0cece6_data,%ax
		jle    _049098_jump
		mov    _0ced02_data,%edx
		mov    _0cece0_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _049098_jump

	_04907a_jump:
		mov    $0x000044,%eax
		call   _06fa90_func
		incw   _0cccbe_data
		mov    _0cccbc_data,%eax
		sar    $0x000010,%eax
		call   _06eeb0_func

	_049098_jump:
		cmpw   $0x000001,_0ced06_data
		jne    _049109_jump
		call   _0407b4_func
		test   %ax,%ax
		je     _049109_jump
		cmpw   $0x000000,_0cccbe_data
		jle    _049109_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _0490eb_jump
		mov    _0ced04_data,%ax
		cmp    _0cece6_data,%ax
		jle    _049109_jump
		mov    _0ced02_data,%edx
		mov    _0cece0_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _049109_jump

	_0490eb_jump:
		mov    $0x000044,%eax
		call   _06fa90_func
		decw   _0cccbe_data
		mov    _0cccbc_data,%eax
		sar    $0x000010,%eax
		call   _06eeb0_func

	_049109_jump:
		cmpw   $0x000003,_0ced06_data
		jne    _049169_jump
		call   _036820_func
		test   %al,%al
		je     _049169_jump
		call   _04122c_func
		test   %al,%al
		je     _04915a_jump
		mov    $0x000001,%dh
		mov    _0cccbe_data,%al
		mov    $0x000008,%bl
		mov    %al,_0e3d19_data
		mov    %dh,_096477_data
		mov    %bl,_0cef8c_data
		mov    _0cccbc_data,%al
		mov    $0x000001,%ebx
		mov    %al,_0e3d18_data
		mov    %bx,_0cecde_data
		jmp    _04924b_jump

	_04915a_jump:
		mov    $_0ca648_data,%eax
		call   _04d70c_func
		jmp    _04924b_jump

	_049169_jump:
		cmpw   $0x000002,_0ced06_data
		jne    _0491b6_jump
		call   _036820_func
		test   %al,%al
		je     _0491b6_jump
		mov    _0cccbe_data,%al
		mov    $0x000007,%dl
		mov    %al,_0e3d19_data
		mov    %dl,_0cef8c_data
		mov    _0cccbc_data,%al
		mov    $0x000001,%edx
		mov    %al,_0e3d18_data
		mov    $0x000001,%ah
		mov    %dx,_0cecde_data
		mov    %ah,_096477_data
		call   _04d588_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0491b6_jump:
		cmpw   $0x000004,_0ced06_data
		jne    _049201_jump
		call   _036820_func
		test   %al,%al
		je     _049201_jump
		mov    _0cccbe_data,%al
		mov    %al,_0e3d19_data
		mov    _0cccbc_data,%al
		mov    %al,_0e3d18_data
		mov    $0x000009,%al
		mov    $0x000001,%ch
		mov    %al,_0cef8c_data
		mov    $0x000001,%eax
		mov    %ch,_096477_data
		mov    %ax,_0cecde_data
		call   _04d588_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049201_jump:
		cmpw   $0x000005,_0ced06_data
		jne    _04924b_jump
		call   _036820_func
		test   %al,%al
		je     _04924b_jump
		cmpb   $0x000000,_0cefd3_data
		je     _04924b_jump
		cmpb   $0x000000,_095b4b_data
		je     _04924b_jump
		xor    %eax,%eax
		call   _04d99c_func
		test   %al,%al
		je     _04924b_jump
		mov    $0x000001,%bh
		mov    $0x000001,%edi
		mov    %bh,_095b98_data
		mov    %bh,_0cefd1_data
		mov    %di,_0cedea_data

	_04924b_jump:
		call   _04d588_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049258_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ced06_data,%ax
		cmp    _0cecac_data,%ax
		jne    _049273_jump
		cmpb   $0x000001,_0cef8e_data
		jne    _04927c_jump

	_049273_jump:
		cmpb   $0x000000,_0cefd1_data
		je     _049294_jump

	_04927c_jump:
		mov    _0cccbc_data,%ax
		mov    %ax,_0c4d90_data
		mov    _0cccbe_data,%ax
		mov    %ax,_0c4d92_data

	_049294_jump:
		mov    _0ced06_data,%ax
		cmp    _0cecac_data,%ax
		je     _0492b5_jump
		cmpb   $0x000001,_0cef8e_data
		je     _0492b5_jump
		cmpb   $0x000000,_0cefd1_data
		je     _04930c_jump

	_0492b5_jump:
		cmpb   $0x000000,_095b9e_data
		je     _0492c8_jump
		mov    _0c4d90_data,%al
		mov    %al,_0cefa7_data

	_0492c8_jump:
		xor    %cl,%cl
		mov    %cl,_0cef8c_data
		cmpb   $0x000000,_095b4b_data
		je     _049307_jump
		push   $0x000002
		mov    _0e3d2c_data,%ecx
		mov    _0e3d32_data,%ebx
		mov    _0e3d2e_data,%edx
		mov    _0e3d2a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _04e104_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049307_jump:
		call   _03b970_func

	_04930c_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049310_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpb   $0x000001,_0cef88_data
		jne    _04932b_jump
		movl   $_09647c_data,_0e3cf0_data
		jmp    _049335_jump

	_04932b_jump:
		movl   $_09667c_data,_0e3cf0_data

	_049335_jump:
		call   _0478ac_func
		mov    $_049438_func,%ecx
		mov    $_0497c8_func,%esi
		mov    $_0499f0_func,%edi
		mov    $_049c78_func,%ebp
		mov    $0x000008,%edx
		mov    %ecx,_0e3cf8_data
		mov    %esi,_0e3d08_data
		mov    %edi,_0e3d04_data
		mov    %ebp,_0e3d0c_data
		mov    %dx,_0ced06_data
		mov    %dx,_0cecf0_data
		mov    %dx,_0cecac_data
		xor    %edx,%edx
		jmp    _049395_jump

	_049384_jump:
		xor    %ebx,%ebx
		mov    _095b44_data(%eax),%bl
		inc    %edx
		mov    %bx,_0cccbc_data(,%eax,2)

	_049395_jump:
		movswl %dx,%eax
		cmp    $0x000007,%eax
		jl     _049384_jump
		mov    $0x000064,%edi
		mov    $0x00000c,%eax
		xor    %dl,%dl
		xor    %esi,%esi
		mov    %dl,_0e3d3f_data
		mov    %si,_0ced04_data
		mov    %di,_0ced0a_data
		mov    $0x000001,%dh
		mov    %ax,_0cece6_data
		mov    %dh,_0cefd3_data
		mov    $0x000006,%edx
		mov    _0cef88_data,%al
		mov    %dx,_0cecd4_data
		cmp    $0x000001,%al
		jb     _0493ea_jump
		jbe    _0493f7_jump
		cmp    $0x000002,%al
		je     _049400_jump
		jmp    _049407_jump

	_0493ea_jump:
		test   %al,%al
		jne    _049407_jump
		movb   $0x00005a,_0e3d3c_data
		jmp    _049407_jump

	_0493f7_jump:
		movb   $0x000069,_0e3d3c_data
		jmp    _049407_jump

	_049400_jump:
		movb   $0x000078,_0e3d3c_data

	_049407_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0e3d3c_data,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x00000f,%eax
		mov    %dx,_0cecc4_data
		mov    $0x000044,%edx
		call   _04d470_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049438_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %esp,%edi
		mov    $_04746b_jump,%esi
		mov    _0cef88_data,%al
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		cmp    $0x000001,%al
		jb     _04945d_jump
		jbe    _049468_jump
		cmp    $0x000002,%al
		je     _04946f_jump
		jmp    _049474_jump

	_04945d_jump:
		test   %al,%al
		jne    _049474_jump
		movb   $0x000014,0x000018(%esp)
		jmp    _049474_jump

	_049468_jump:
		movb   $0x000019,0x000018(%esp)
		jmp    _049474_jump

	_04946f_jump:
		movb   $0x00002d,0x000018(%esp)

	_049474_jump:
		mov    $_0963cd_data,%edi
		mov    _0c26b8_data,%esi
		push   %edi

	_049480_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049498_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049480_jump

	_049498_jump:
		pop    %edi
		mov    _0c26b8_data,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,%ebx
		inc    %ebx
		movswl %bx,%eax
		movb   $0x00002f,_0963cc_data(%eax)
		xor    %bh,%bh
		mov    _0cecf0_data,%dx
		mov    %bh,_0963cd_data(%eax)
		xor    %bl,%bl
		test   %dx,%dx
		jl     _049617_jump

	_0494d0_jump:
		movswl %bx,%ecx
		imul   $0x0000d8,%ecx,%edx
		mov    $_0ca7f8_data,%edi
		mov    (%esp,%ecx,1),%al
		add    %edx,%edi
		mov    %al,_0ca8cf_data(%edx)
		cmp    $0x000008,%bx
		jne    _049536_jump
		mov    _0c2620_data,%esi
		push   %edi

	_0494f6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04950e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0494f6_jump

	_04950e_jump:
		pop    %edi
		mov    $0x0000a0,%esi
		mov    _0cecfe_data,%ax
		mov    %si,_0ca8c8_data(%edx)
		mov    %ax,_0ca8ca_data(%edx)
		mov    (%esp,%ecx,1),%al
		mov    %al,_0ca8cf_data(%edx)
		jmp    _0495dc_jump

	_049536_jump:
		lea    0x000000(,%ecx,4),%esi
		cmp    $0x000007,%bx
		jne    _049588_jump
		mov    _0c2690_data(%esi),%esi
		push   %edi

	_04954a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049562_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04954a_jump

	_049562_jump:
		pop    %edi
		mov    _0ced00_data,%ax
		add    $0x00000f,%eax
		imul   %ebx,%eax
		mov    $0x0000a0,%edi
		mov    _0ced14_data,%cx
		mov    %di,_0ca8c8_data(%edx)
		add    %ecx,%eax
		jmp    _0495d5_jump

	_049588_jump:
		mov    _0c2690_data(%esi),%esi
		push   %edi

	_04958f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0495a7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04958f_jump

	_0495a7_jump:
		pop    %edi
		xor    %eax,%eax
		mov    _0cecc4_data,%cx
		mov    0x000018(%esp),%al
		add    %ecx,%eax
		mov    %ax,_0ca8c8_data(%edx)
		mov    _0ced00_data,%ax
		add    $0x00000f,%eax
		imul   %ebx,%eax
		mov    _0ced14_data,%si
		add    %esi,%eax

	_0495d5_jump:
		mov    %ax,_0ca8ca_data(%edx)

	_0495dc_jump:
		movswl %bx,%edx
		imul   $0x0000d8,%edx,%edx
		mov    $0x000002,%cl
		xor    %al,%al
		mov    %cl,_0ca8cc_data(%edx)
		inc    %ebx
		mov    %al,_0ca8cd_data(%edx)
		mov    $_0ca7f8_data,%eax
		mov    $0x000001,%ch
		add    %edx,%eax
		mov    %ch,_0ca8ce_data(%edx)
		call   _01ec48_func
		cmp    _0cecf0_data,%bx
		jle    _0494d0_jump

	_049617_jump:
		mov    $0x000001,%dl
		mov    $_0ca648_data,%edi
		mov    $0x000002,%bl
		mov    _0cecc4_data,%ax
		mov    _0c2730_data,%esi
		add    $0x000050,%eax
		mov    %dl,_0cb066_data
		mov    %ax,_0cb060_data
		xor    %dh,%dh
		mov    $0x000002,%ah
		mov    %dh,_0cb065_data
		mov    %ah,_0cb064_data
		push   %edi

	_04964e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049666_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04964e_jump

	_049666_jump:
		pop    %edi
		mov    $0x0000a0,%esi
		mov    $0x000064,%edi
		mov    $_0ca648_data,%eax
		mov    %bl,_0ca71c_data
		mov    %bl,_0ca71e_data
		mov    %dh,_0ca71d_data
		mov    %si,_0ca718_data
		mov    %di,_0ca71a_data
		call   _01ec48_func
		xor    %eax,%eax
		mov    _0cecc4_data,%bx
		mov    _0e3d3c_data,%al
		mov    _0cecf6_data,%cx
		add    %eax,%eax
		mov    _0cecf6_data,%dx
		mov    %ax,0x000010(%esp)
		mov    _0caf8a_data,%ax
		mov    _0e3d2c_data,%si
		sub    %edx,%eax
		sub    $0x000002,%ebx
		add    $0x000023,%eax
		sub    $0x000019,%ecx
		mov    %ax,0x000014(%esp)
		cmp    %si,%bx
		jge    _0496e6_jump
		mov    %ebx,%edx
		jmp    _0496e8_jump

	_0496e6_jump:
		mov    %esi,%edx

	_0496e8_jump:
		mov    _0e3d30_data,%di
		cmp    %di,%cx
		jge    _0496f8_jump
		mov    %ecx,%eax
		jmp    _0496fa_jump

	_0496f8_jump:
		mov    %edi,%eax

	_0496fa_jump:
		mov    0x00000e(%esp),%ebp
		mov    _0e3d2a_data,%esi
		mov    _0e3d32_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		sar    $0x000010,%ebp
		add    %edi,%esi
		movswl %bx,%edi
		add    %ebp,%edi
		cmp    %edi,%esi
		jle    _049727_jump
		movswl %dx,%edi
		sub    %edi,%esi
		mov    %esi,%edi
		jmp    _04972c_jump

	_049727_jump:
		movswl %dx,%esi
		sub    %esi,%edi

	_04972c_jump:
		mov    _0e3d2c_data,%ebp
		mov    _0e3d2e_data,%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		add    %esi,%ebp
		mov    %ebp,0x00000c(%esp)
		mov    0x000012(%esp),%ebp
		sar    $0x000010,%ebp
		movswl %cx,%esi
		add    %ebp,%esi
		mov    0x00000c(%esp),%ebp
		cmp    %ebp,%esi
		jge    _049761_jump
		movswl %ax,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi
		jmp    _049766_jump

	_049761_jump:
		movswl %ax,%ebp
		sub    %ebp,%esi

	_049766_jump:
		mov    %bx,_0e3d2c_data
		mov    0x000010(%esp),%ebx
		mov    %cx,_0e3d30_data
		mov    %bx,_0e3d34_data
		mov    0x000014(%esp),%ebx
		mov    _095b4b_data,%ch
		mov    %bx,_0e3d2e_data
		test   %ch,%ch
		je     _0497ab_jump
		push   $0x000001
		movswl %si,%ecx
		movswl %di,%ebx
		cwtl   
		movswl %dx,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _04e104_func
		jmp    _0497be_jump

	_0497ab_jump:
		movswl %si,%ecx
		movswl %di,%ebx
		cwtl   
		movswl %dx,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _04e914_func

	_0497be_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0497c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0cef88_data,%al
		cmp    $0x000001,%al
		jb     _0497e2_jump
		jbe    _0497ed_jump
		cmp    $0x000002,%al
		je     _0497f4_jump
		jmp    _0497f9_jump

	_0497e2_jump:
		test   %al,%al
		jne    _0497f9_jump
		movb   $0x00003e,0x000004(%esp)
		jmp    _0497f9_jump

	_0497ed_jump:
		movb   $0x000046,0x000004(%esp)
		jmp    _0497f9_jump

	_0497f4_jump:
		movb   $0x00004b,0x000004(%esp)

	_0497f9_jump:
		call   _03bcb4_func
		cmpb   $0x000000,_095b4b_data
		je     _04982f_jump
		mov    _0e3d2c_data,%ecx
		mov    _0e3d32_data,%ebx
		mov    _0e3d2e_data,%edx
		mov    _0e3d2a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024538_func

	_04982f_jump:
		push   $0x000001
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cecf4_data,%ebx
		mov    $_0963cc_data,%eax
		sar    $0x000010,%ebx
		call   _01a178_func
		xor    %bh,%bh
		mov    $_0caf90_data,%ebp
		mov    %bh,0x000008(%esp)
		jmp    _0499ce_jump

	_04985e_jump:
		xor    %eax,%eax
		mov    %dl,%al
		imul   $0x0000d8,%eax,%eax
		mov    _0ca8c8_data(%eax),%bx
		mov    _0ced06_data,%cx
		mov    %bx,(%esp)
		mov    _0ca8ca_data(%eax),%bx
		cmp    %cx,%dx
		je     _0498aa_jump
		xor    %edx,%edx
		mov    $0x000002,%ecx
		mov    _0ca8cf_data(%eax),%dl
		movswl %bx,%ebx
		push   %edx
		mov    0x000002(%esp),%edx
		add    $_0ca7f8_data,%eax
		sar    $0x000010,%edx
		call   _01a178_func
		jmp    _0498c7_jump

	_0498aa_jump:
		mov    _0ced04_data,%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    $0x000001,%edx
		add    $_0ca7f8_data,%eax
		call   _04d608_func

	_0498c7_jump:
		mov    _0cecee_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000008(%esp),%dl
		dec    %eax
		cmp    %eax,%edx
		jge    _0499ca_jump
		cmpb   $0x000000,_0e3d3f_data
		je     _049981_jump
		xor    %eax,%eax
		mov    _0ced06_data,%si
		mov    %dl,%al
		cmp    %si,%ax
		jne    _049981_jump
		mov    _0ced04_data,%eax
		sar    $0x000010,%eax
		mov    _0cccba_data(,%eax,2),%eax
		mov    _0e3cf0_data,%esi
		sar    $0x000010,%eax
		mov    %ebp,%edi
		mov    (%esi,%eax,4),%esi
		push   %edi

	_04991d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049935_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04991d_jump

	_049935_jump:
		pop    %edi
		mov    _0ced04_data,%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    _0ca8cf_data(%eax),%dl
		mov    %dl,_0cb067_data
		mov    _0ca8ca_data(%eax),%ax
		mov    %ax,_0cb062_data
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000004(%esp),%al
		add    %eax,%edx
		mov    %ebp,%eax
		mov    %dx,_0cb060_data
		call   _01ec48_func
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _04d608_func
		jmp    _0499ca_jump

	_049981_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		imul   $0x0000d8,%eax,%ebx
		mov    (%esp),%edi
		mov    $0x000002,%ecx
		xor    %edx,%edx
		mov    _0e3cf0_data,%esi
		mov    _0ca8cf_data(%ebx),%dl
		mov    _0cccba_data(,%eax,2),%eax
		push   %edx
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    _0ca8c8_data(%ebx),%ebx
		mov    0x000008(%esp),%dl
		sar    $0x000010,%ebx
		add    %edi,%edx
		mov    (%esi,%eax,4),%eax
		movswl %dx,%edx
		call   _01a178_func

	_0499ca_jump:
		incb   0x000008(%esp)

	_0499ce_jump:
		xor    %edx,%edx
		mov    _0cecf0_data,%bx
		mov    0x000008(%esp),%dl
		cmp    %bx,%dx
		jle    _04985e_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0499f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cecf0_data,%si
		call   _04d544_func
		cmpb   $0x000000,_0e3d3f_data
		jne    _049c22_jump
		call   _036944_func
		test   %al,%al
		je     _049a1e_jump
		movb   $0x000001,_0cef8e_data

	_049a1e_jump:
		call   _040824_func
		test   %ax,%ax
		jne    _049ae3_jump
		call   _0407b4_func
		test   %ax,%ax
		jne    _049ae3_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _049a77_jump
		mov    _0ced04_data,%ax
		cmp    _0cece6_data,%ax
		jle    _049ae3_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _049ae3_jump

	_049a77_jump:
		call   _040904_func
		test   %ax,%ax
		je     _049aad_jump
		mov    $0x000044,%eax
		call   _06fa90_func
		mov    _0ced06_data,%ax
		test   %ax,%ax
		jne    _049aa1_jump
		movw   $0x000008,_0ced06_data
		jmp    _049ae3_jump

	_049aa1_jump:
		mov    %eax,%edx
		dec    %edx
		mov    %dx,_0ced06_data
		jmp    _049ae3_jump

	_049aad_jump:
		call   _040894_func
		test   %ax,%ax
		je     _049ae3_jump
		mov    $0x000044,%eax
		call   _06fa90_func
		mov    _0ced06_data,%bx
		cmp    $0x000008,%bx
		jne    _049ad9_jump
		xor    %edi,%edi
		mov    %di,_0ced06_data
		jmp    _049ae3_jump

	_049ad9_jump:
		mov    %ebx,%ecx
		inc    %ecx
		mov    %cx,_0ced06_data

	_049ae3_jump:
		cmpw   $0x000007,_0ced06_data
		jne    _049b57_jump
		call   _036820_func
		test   %al,%al
		je     _049b57_jump
		cmpb   $0x000000,_0cefd3_data
		je     _049b57_jump
		mov    $0x00004b,%ebx
		mov    $0x000048,%ecx
		mov    $0x00004d,%edi
		mov    $0x000050,%eax
		mov    $0x000038,%edx
		mov    %bx,_0cccbc_data
		mov    %cx,_0cccbe_data
		mov    %di,_0cccc0_data
		mov    %ax,_0cccc2_data
		mov    %dx,_0cccc4_data
		mov    $0x000039,%ebx
		mov    $0x00001d,%ecx
		mov    %bx,_0cccc6_data
		mov    %cx,_0cccc8_data
		jmp    _049c64_jump

	_049b57_jump:
		mov    _0ced06_data,%di
		test   %di,%di
		jl     _049b99_jump
		cmp    $0x000006,%di
		jg     _049b99_jump
		call   _036820_func
		test   %al,%al
		je     _049b99_jump
		cmpb   $0x000000,_0cefd3_data
		je     _049b99_jump
		movb   $0x000001,_0e3d3f_data
		call   _0411b8_func
		call   _04d588_func
		mov    _0cecf0_data,%si
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049b99_jump:
		cmpw   $0x000008,_0ced06_data
		jne    _049c64_jump
		call   _036820_func
		test   %al,%al
		je     _049c64_jump
		mov    _0cecf0_data,%si
		mov    $0x000001,%ecx
		mov    %esi,%eax
		cmp    %cx,%si
		jg     _049bf5_jump
		jmp    _049bfa_jump

	_049bc9_jump:
		mov    %ecx,%eax

	_049bcb_jump:
		inc    %eax
		movswl %cx,%edx
		lea    0x000000(,%edx,2),%ebx
		movswl %ax,%edx
		mov    _0cccbc_data(%ebx),%bx
		cmp    _0cccbc_data(,%edx,2),%bx
		je     _049bef_jump
		cmp    %si,%ax
		jl     _049bcb_jump

	_049bef_jump:
		inc    %ecx
		cmp    %si,%cx
		jge    _049bfa_jump

	_049bf5_jump:
		cmp    %si,%ax
		je     _049bc9_jump

	_049bfa_jump:
		mov    %si,_0cecf0_data
		cmp    %si,%ax
		jge    _049c64_jump
		mov    $_0ca648_data,%eax
		call   _04d70c_func
		call   _04d588_func
		mov    _0cecf0_data,%si
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049c22_jump:
		xor    %ecx,%ecx
		xor    %ebx,%ebx

	_049c26_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _040780_func
		test   %al,%al
		je     _049c5c_jump
		mov    _0e3cf0_data,%edx
		movswl %cx,%eax
		cmp    (%edx,%eax,4),%ebx
		je     _049c5c_jump
		mov    _0ced04_data,%eax
		sar    $0x000010,%eax
		mov    %bl,_0e3d3f_data
		mov    %cx,_0cccbc_data(,%eax,2)
		call   _0411b8_func

	_049c5c_jump:
		inc    %ecx
		cmp    $0x000080,%cx
		jl     _049c26_jump

	_049c64_jump:
		call   _04d588_func
		mov    _0cecf0_data,%si
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049c78_func:
		push   %ebx
		push   %edx
		mov    $0x000004,%ah
		mov    _0cef8e_data,%dl
		mov    %ah,_0cef8c_data
		test   %dl,%dl
		jne    _049cb2_jump
		xor    %dh,%dh
		jmp    _049c9e_jump

	_049c90_jump:
		mov    _0cccbc_data(,%eax,2),%bl
		inc    %edx
		mov    %bl,_095b44_data(%eax)

	_049c9e_jump:
		mov    _0cecee_data,%ebx
		sar    $0x000010,%ebx
		movswl %dx,%eax
		dec    %ebx
		cmp    %ebx,%eax
		jl     _049c90_jump
		pop    %edx
		pop    %ebx
		ret    

	_049cb2_jump:
		xor    %dh,%dh
		mov    _095b4b_data,%bl
		mov    %dh,_096477_data
		test   %bl,%bl
		jne    _049cc9_jump
		call   _03b970_func

	_049cc9_jump:
		pop    %edx
		pop    %ebx
		ret    



_049ccc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_049ccc_func,%edx
		mov    $_049d2c_func,%ebx
		mov    $_049e88_func,%ecx
		mov    $_04a060_func,%esi
		mov    $_04a2a8_func,%edi
		mov    %edx,_0e3cfc_data
		mov    %ebx,_0e3cf8_data
		mov    %ecx,_0e3d08_data
		mov    %esi,_0e3d04_data
		xor    %edx,%edx
		mov    %edi,_0e3d0c_data
		mov    %dx,_0c8d06_data
		mov    %dx,_0c8d04_data
		mov    %dx,_0c8d02_data
		mov    %dx,_0c8d00_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049d2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		xor    %edx,%edx
		mov    $0x00000c,%ecx
		mov    %dx,_0ced04_data
		mov    %cx,_0cece6_data
		mov    %dx,_0ced06_data
		xor    %dl,%dl
		xor    %ecx,%ecx
		mov    %dl,_096475_data
		imul   $0x000014,%ecx,%edx
		mov    %esp,%edi
		mov    $0x000001,%ah
		mov    $0x000064,%ebx
		mov    $_047475_jump,%esi
		xor    %ebp,%ebp
		mov    %ah,_0cefd3_data
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %bx,_0ced0a_data
		mov    $0x000006,%esi
		mov    $0x000004,%eax
		mov    $_0ca7f8_data,%ebx
		mov    %si,_0cecd4_data
		mov    %ax,_0cecf0_data
		add    $0x000046,%edx
		mov    %ax,_0cecac_data
		mov    %edx,0x000008(%esp)

	_049da6_jump:
		xor    %dh,%dh
		mov    %dh,_0e3d36_data(%ecx)
		imul   $0x0000d8,%ecx,%edx
		movb   $0x000002,_0ca8cc_data(%edx)
		movb   $0x000001,_0ca8ce_data(%edx)
		xor    %al,%al
		mov    %al,_0ca8cd_data(%edx)
		cmp    $0x000004,%ecx
		jne    _049e15_jump
		mov    $0x0000a0,%eax
		mov    $0x00009b,%esi
		mov    %ebx,%edi
		mov    %si,_0ca8ca_data(%edx)
		mov    _0c2620_data,%esi
		mov    %ax,_0ca8c8_data(%edx)
		push   %edi

	_049df0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049e08_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049df0_jump

	_049e08_jump:
		pop    %edi
		mov    0x000004(%esp),%al
		mov    %al,_0ca8cf_data(%edx)
		jmp    _049e57_jump

	_049e15_jump:
		mov    $0x000078,%edi
		mov    _0c2740_data(%ebp),%esi
		mov    %di,_0ca8c8_data(%edx)
		mov    %ebx,%edi
		push   %edi

	_049e2a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049e42_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049e2a_jump

	_049e42_jump:
		pop    %edi
		mov    (%esp,%ecx,1),%al
		mov    0x000008(%esp),%esi
		mov    %al,_0ca8cf_data(%edx)
		mov    %si,_0ca8ca_data(%edx)

	_049e57_jump:
		mov    %ebx,%eax
		mov    0x000008(%esp),%esi
		call   _01ec48_func
		add    $0x000004,%ebp
		inc    %ecx
		add    $0x000014,%esi
		add    $0x0000d8,%ebx
		mov    %esi,0x000008(%esp)
		cmp    $0x000004,%ecx
		jle    _049da6_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049e88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %esp,%edi
		mov    $_04747a_jump,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   _03bcb4_func
		cmpb   $0x000000,_095b4b_data
		je     _049ed0_jump
		mov    _0e3d2c_data,%ecx
		mov    _0e3d32_data,%ebx
		mov    _0e3d2e_data,%edx
		mov    _0e3d2a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024538_func

	_049ed0_jump:
		mov    $0x000001,%edx
		mov    $_0cc220_data,%eax
		call   _04d608_func
		xor    %dl,%dl
		mov    %dl,0x00000c(%esp)
		mov    $0x000028,%ebp

	_049eea_jump:
		xor    %edx,%edx
		mov    0x00000c(%esp),%dl
		imul   $0x0000d8,%edx,%eax
		mov    _0ca8c8_data(%eax),%bx
		mov    _0ca8ca_data(%eax),%si
		mov    %bx,0x000008(%esp)
		cmp    $0x000004,%dl
		jae    _049fbb_jump
		cmpb   $0x000000,_0e3d36_data(%edx)
		je     _049f40_jump
		xor    %eax,%eax
		mov    %dl,%al
		imul   $0x000014,%eax,%eax
		push   $0x000000
		mov    $0x000009,%ecx
		add    $0x00003b,%eax
		mov    $0x000022,%ebx
		movswl %ax,%edx
		mov    $0x0000c0,%eax
		call   _023c9c_func

	_049f40_jump:
		movzbl 0x00000c(%esp),%edi
		cmpw   $0x000002,_0c8d00_data(,%edi,2)
		jne    _049f95_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   $0x000014,%eax,%eax
		push   $0x000002
		mov    $0x000010,%ecx
		mov    %ebp,%ebx
		add    $0x000037,%eax
		push   $0x000000
		movswl %ax,%edx
		mov    $0x0000bc,%eax
		call   _019f4c_func
		xor    %eax,%eax
		mov    $0x000002,%ecx
		mov    (%esp,%edi,1),%al
		mov    $0x0000e9,%edx
		push   %eax
		movswl %si,%ebx
		mov    $_0c0d18_data,%eax
		call   _01a178_func
		jmp    _049fbb_jump

	_049f95_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   $0x000014,%eax,%eax
		push   $0x000001
		mov    $0x000010,%ecx
		mov    %ebp,%ebx
		add    $0x000037,%eax
		push   $0x000000
		movswl %ax,%edx
		mov    $0x0000bc,%eax
		call   _019f4c_func

	_049fbb_jump:
		xor    %eax,%eax
		mov    _0ced06_data,%bx
		mov    0x00000c(%esp),%al
		cmp    %bx,%ax
		je     _049ffa_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		xor    %edx,%edx
		mov    (%esp,%eax,1),%dl
		imul   $0x0000d8,%eax,%eax
		mov    $0x000002,%ecx
		push   %edx
		mov    0x00000a(%esp),%edx
		movswl %si,%ebx
		sar    $0x000010,%edx
		add    $_0ca7f8_data,%eax
		call   _01a178_func
		jmp    _04a025_jump

	_049ffa_jump:
		xor    %edx,%edx
		mov    0x00000c(%esp),%dl
		imul   $0x0000d8,%edx,%ebx
		mov    (%esp,%edx,1),%al
		mov    %al,_0ca8cf_data(%ebx)
		add    $_0ca7f8_data,%ebx
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _01ec48_func
		mov    %ebx,%eax
		call   _04d608_func

	_04a025_jump:
		mov    0x00000c(%esp),%dh
		inc    %dh
		mov    %dh,0x00000c(%esp)
		cmp    $0x000004,%dh
		jbe    _049eea_jump
		push   $0x000005
		mov    $0x000002,%ecx
		mov    $0x0000af,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2750_data,%eax
		call   _01a178_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a060_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _04d544_func
		cmpw   $0x000001,_0ced4a_data
		jne    _04a095_jump
		mov    _0c8d00_data,%bx
		test   %bx,%bx
		jne    _04a095_jump
		mov    _0ced06_data,%ax
		cmp    _0cecac_data,%ax
		jne    _04a095_jump
		mov    %bx,_0ced4a_data

	_04a095_jump:
		call   _036944_func
		test   %al,%al
		je     _04a0a5_jump
		movb   $0x000001,_0cef8e_data

	_04a0a5_jump:
		cmpb   $0x000000,_0cefd3_data
		jne    _04a0e2_jump
		mov    _0ced04_data,%ax
		cmp    _0cece6_data,%ax
		jle    _04a162_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04a162_jump

	_04a0e2_jump:
		call   _040904_func
		test   %ax,%ax
		je     _04a123_jump
		mov    $0x000044,%eax
		call   _06fa90_func
		xor    %eax,%eax
		mov    _0ced06_data,%cx
		mov    _096475_data,%al
		cmp    %cx,%ax
		jne    _04a117_jump
		mov    _0cecac_data,%ax
		mov    %ax,_0ced06_data
		jmp    _04a162_jump

	_04a117_jump:
		mov    %ecx,%esi
		dec    %esi
		mov    %si,_0ced06_data
		jmp    _04a162_jump

	_04a123_jump:
		call   _040894_func
		test   %ax,%ax
		je     _04a162_jump
		mov    $0x000044,%eax
		call   _06fa90_func
		mov    _0ced06_data,%ax
		mov    _0cecac_data,%dx
		cmp    %dx,%ax
		jne    _04a158_jump
		xor    %edx,%eax
		mov    _096475_data,%al
		mov    %ax,_0ced06_data
		jmp    _04a162_jump

	_04a158_jump:
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,_0ced06_data

	_04a162_jump:
		call   _040974_func
		test   %ax,%ax
		je     _04a197_jump
		mov    _0ced06_data,%ax
		cmp    _0cecac_data,%ax
		je     _04a197_jump
		cmpb   $0x000000,_0e3d36_data
		jne    _04a18e_jump
		mov    $0x000044,%eax
		call   _06fa90_func

	_04a18e_jump:
		movb   $0x000001,_0e3d36_data
		jmp    _04a1b1_jump

	_04a197_jump:
		cmpb   $0x000000,_0e3d36_data
		je     _04a1a9_jump
		movw   $0x000002,_0c8d00_data

	_04a1a9_jump:
		xor    %bl,%bl
		mov    %bl,_0e3d36_data

	_04a1b1_jump:
		call   _040a00_func
		test   %ax,%ax
		je     _04a1e6_jump
		mov    _0ced06_data,%ax
		cmp    _0cecac_data,%ax
		je     _04a1e6_jump
		cmpb   $0x000000,_0e3d37_data
		jne    _04a1dd_jump
		mov    $0x000044,%eax
		call   _06fa90_func

	_04a1dd_jump:
		movb   $0x000001,_0e3d37_data
		jmp    _04a1ff_jump

	_04a1e6_jump:
		cmpb   $0x000000,_0e3d37_data
		je     _04a1f8_jump
		movw   $0x000002,_0c8d02_data

	_04a1f8_jump:
		xor    %al,%al
		mov    %al,_0e3d37_data

	_04a1ff_jump:
		call   _040a8c_func
		test   %ax,%ax
		je     _04a234_jump
		mov    _0ced06_data,%ax
		cmp    _0cecac_data,%ax
		je     _04a234_jump
		cmpb   $0x000000,_0e3d38_data
		jne    _04a22b_jump
		mov    $0x000044,%eax
		call   _06fa90_func

	_04a22b_jump:
		movb   $0x000001,_0e3d38_data
		jmp    _04a24e_jump

	_04a234_jump:
		cmpb   $0x000000,_0e3d38_data
		je     _04a246_jump
		movw   $0x000002,_0c8d04_data

	_04a246_jump:
		xor    %bl,%bl
		mov    %bl,_0e3d38_data

	_04a24e_jump:
		call   _040b18_func
		test   %ax,%ax
		je     _04a283_jump
		mov    _0ced06_data,%ax
		cmp    _0cecac_data,%ax
		je     _04a283_jump
		cmpb   $0x000000,_0e3d39_data
		jne    _04a27a_jump
		mov    $0x000044,%eax
		call   _06fa90_func

	_04a27a_jump:
		movb   $0x000001,_0e3d39_data
		jmp    _04a29c_jump

	_04a283_jump:
		cmpb   $0x000000,_0e3d39_data
		je     _04a295_jump
		movw   $0x000002,_0c8d06_data

	_04a295_jump:
		xor    %al,%al
		mov    %al,_0e3d39_data

	_04a29c_jump:
		call   _04d588_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a2a8_func:
		push   %ebx
		push   %edx
		push   %esi
		xor    %eax,%eax

	_04a2ad_jump:
		movswl %ax,%edx
		cmpw   $0x000000,_0c8d00_data(,%edx,2)
		sete   %bl
		xor    %bh,%bh
		inc    %eax
		mov    %bx,_0c8d00_data(,%edx,2)
		cmp    $0x000004,%ax
		jl     _04a2ad_jump
		mov    %bh,_0cef8e_data
		xor    %esi,%esi
		xor    %edx,%edx
		mov    %si,_0cecde_data
		mov    %edx,_0e3d0c_data
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_04a2e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_04a3e8_func,%edx
		mov    $_04a76c_func,%ebx
		mov    $_04a8f0_func,%ecx
		mov    $_04ab9c_func,%esi
		mov    $0x000064,%edi
		mov    _0c4d88_data,%ax
		mov    %edx,_0e3cf8_data
		mov    %ebx,_0e3d08_data
		mov    %ecx,_0e3d04_data
		mov    %esi,_0e3d0c_data
		mov    %ax,_0cccbe_data
		mov    %di,_0ced0a_data
		mov    $0x000005,%edx
		mov    _0c4d8a_data,%ax
		xor    %esi,%esi
		mov    %ax,_0cccc0_data
		mov    %dx,_0ced06_data
		mov    %dx,_0cecf0_data
		mov    %dx,_0cecac_data
		mov    %si,_0ced04_data
		mov    _0c4d8e_data,%ax
		mov    $0x000001,%dl
		mov    %ax,_0cccc2_data
		xor    %ah,%ah
		mov    %dl,_0cefd3_data
		mov    %ah,_096475_data
		mov    $0x00000c,%eax
		mov    $0x000006,%edx
		mov    %ax,_0cece6_data
		mov    _0cef88_data,%al
		mov    %dx,_0cecd4_data
		cmp    $0x000001,%al
		jb     _04a3a4_jump
		jbe    _04a3b1_jump
		cmp    $0x000002,%al
		je     _04a3b1_jump
		jmp    _04a3b8_jump

	_04a3a4_jump:
		test   %al,%al
		jne    _04a3b8_jump
		movb   $0x000041,_0e3d3c_data
		jmp    _04a3b8_jump

	_04a3b1_jump:
		movb   $0x000069,_0e3d3c_data

	_04a3b8_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0e3d3c_data,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x000014,%eax
		mov    %dx,_0cecc4_data
		mov    $0x00003c,%edx
		call   _04d470_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a3e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    %esp,%edi
		mov    $_04747f_jump,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    $_0963cc_data,%edi
		mov    _0c26bc_data,%esi
		push   %edi

	_04a407_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a41f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a407_jump

	_04a41f_jump:
		pop    %edi
		mov    _096475_data,%al
		mov    %al,0x000030(%esp)
		jmp    _04a5d0_jump

	_04a42e_jump:
		mov    %eax,%ebx
		imul   $0x0000d8,%eax,%ebp
		sub    %edx,%ebx
		mov    (%esp,%ebx,1),%dl
		movzbw %al,%si
		mov    %dl,_0ca8cf_data(%ebp)
		xor    %edx,%edx
		mov    %esi,%ebx
		mov    _096475_data,%dl
		sub    %edx,%ebx
		mov    %ebx,%edx
		mov    _0ced00_data,%bx
		add    $0x00000f,%ebx
		imul   %ebx,%edx
		add    _0ced14_data,%dx
		mov    $0x000001,%bl
		mov    %dx,_0ca8ca_data(%ebp)
		mov    $0x000002,%dh
		mov    %bl,_0ca8ce_data(%ebp)
		mov    _0cecac_data,%cx
		mov    %dh,_0ca8cc_data(%ebp)
		mov    $_0ca7f8_data,%edx
		xor    %bh,%bh
		add    %ebp,%edx
		mov    %bh,_0ca8cd_data(%ebp)
		cmp    %cx,%si
		jne    _04a4d6_jump
		mov    _0c2620_data,%esi
		mov    %edx,%edi
		push   %edi

	_04a4a2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a4ba_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a4a2_jump

	_04a4ba_jump:
		pop    %edi
		movw   $0x0000a0,_0ca8c8_data(%ebp)
		mov    _0cecfe_data,%ax
		mov    %ax,_0ca8ca_data(%ebp)
		jmp    _04a5b6_jump

	_04a4d6_jump:
		test   %al,%al
		jne    _04a50d_jump
		mov    $0x0000a0,%edi
		mov    _0c26f8_data,%esi
		mov    %di,_0ca8c8_data(%ebp)
		mov    %edx,%edi
		push   %edi

	_04a4ef_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a507_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a4ef_jump

	_04a507_jump:
		pop    %edi
		jmp    _04a5b6_jump

	_04a50d_jump:
		mov    0x000030(%esp),%ch
		shl    $0x000002,%eax
		cmp    $0x000004,%ch
		jne    _04a549_jump
		mov    $0x0000a0,%esi
		mov    %edx,%edi
		mov    %si,_0ca8c8_data(%ebp)
		mov    _0c269c_data(%eax),%esi
		push   %edi

	_04a52e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a546_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a52e_jump

	_04a546_jump:
		pop    %edi
		jmp    _04a5b6_jump

	_04a549_jump:
		mov    $0x000001,%ecx
		mov    %edx,%edi
		mov    _0c269c_data(%eax),%esi
		mov    $0x000008,%ebx
		push   %edi

	_04a55c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a574_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a55c_jump

	_04a574_jump:
		pop    %edi
		push   $0x000002
		mov    $0xffffffff,%edx
		mov    %edi,%eax
		call   _01ebec_func
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    %eax,%esi
		mov    $_0c0c78_data,%eax
		add    $0x000010,%esi
		call   _01ebec_func
		add    %esi,%eax
		cwtl   
		mov    $0x0000a0,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,_0ca8c8_data(%ebp)

	_04a5b6_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x0000d8,%eax,%eax
		add    $_0ca7f8_data,%eax
		call   _01ec48_func
		incb   0x000030(%esp)

	_04a5d0_jump:
		mov    _0cecee_data,%esi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _096475_data,%dl
		sar    $0x000010,%esi
		mov    0x000030(%esp),%al
		add    %edx,%esi
		cmp    %esi,%eax
		jle    _04a42e_jump
		xor    %eax,%eax
		mov    _0e3d3c_data,%al
		mov    _0cecaa_data,%esi
		add    %eax,%eax
		sar    $0x000010,%esi
		mov    %ax,0x000028(%esp)
		lea    0x000000(,%esi,8),%eax
		sub    %esi,%eax
		shl    $0x000002,%eax
		sub    %esi,%eax
		mov    _0cecc4_data,%dx
		mov    _0cecf6_data,%bx
		mov    _0ca8ca_data(,%eax,8),%ax
		mov    _0cecf6_data,%cx
		mov    %eax,%edi
		sub    $0x000019,%ebx
		sub    %ecx,%edi
		mov    _0e3d2c_data,%si
		add    $0x000023,%edi
		cmp    %si,%dx
		jge    _04a64d_jump
		mov    %edx,%ecx
		jmp    _04a64f_jump

	_04a64d_jump:
		mov    %esi,%ecx

	_04a64f_jump:
		mov    _0e3d30_data,%ax
		cmp    %ax,%bx
		jge    _04a65c_jump
		mov    %ebx,%eax

	_04a65c_jump:
		mov    _0e3d2a_data,%esi
		sar    $0x000010,%esi
		mov    %esi,0x000020(%esp)
		mov    _0e3d32_data,%esi
		mov    0x000020(%esp),%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		movswl %dx,%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x000026(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,0x00001c(%esp)
		mov    0x000008(%esp),%ebp
		add    0x00001c(%esp),%ebp
		cmp    %ebp,%esi
		jle    _04a6a1_jump
		movswl %cx,%ebp
		sub    %ebp,%esi
		mov    %esi,0x000024(%esp)
		jmp    _04a6aa_jump

	_04a6a1_jump:
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,0x000024(%esp)

	_04a6aa_jump:
		mov    0x000024(%esp),%esi
		mov    %si,0x00002c(%esp)
		mov    _0e3d2e_data,%esi
		sar    $0x000010,%esi
		mov    %esi,0x000018(%esp)
		mov    _0e3d2c_data,%esi
		mov    0x000018(%esp),%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		movswl %bx,%ebp
		mov    %ebp,0x000010(%esp)
		movswl %di,%ebp
		mov    %ebp,0x00000c(%esp)
		mov    0x000010(%esp),%ebp
		add    0x00000c(%esp),%ebp
		cmp    %ebp,%esi
		jle    _04a6f4_jump
		movswl %ax,%ebp
		sub    %ebp,%esi
		mov    %esi,0x000014(%esp)
		jmp    _04a6fd_jump

	_04a6f4_jump:
		movswl %ax,%esi
		sub    %esi,%ebp
		mov    %ebp,0x000014(%esp)

	_04a6fd_jump:
		mov    0x000014(%esp),%esi
		mov    %dx,_0e3d2c_data
		mov    0x000028(%esp),%edx
		mov    %bx,_0e3d30_data
		mov    %dx,_0e3d34_data
		mov    _095b4b_data,%dl
		mov    %di,_0e3d2e_data
		test   %dl,%dl
		je     _04a748_jump
		push   $0x000001
		mov    0x00002e(%esp),%ebx
		movswl %si,%edx
		cwtl   
		sar    $0x000010,%ebx
		movswl %cx,%esi
		mov    %edx,%ecx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _04e104_func
		jmp    _04a75f_jump

	_04a748_jump:
		mov    0x00002a(%esp),%ebx
		movswl %si,%esi
		movswl %ax,%edx
		sar    $0x000010,%ebx
		movswl %cx,%eax
		mov    %esi,%ecx
		call   _04e914_func

	_04a75f_jump:
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a76c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %esp,%edi
		mov    $_047488_switch,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   _03bcb4_func
		cmpb   $0x000000,_095b4b_data
		je     _04a7b6_jump
		mov    _0e3d2c_data,%ecx
		mov    _0e3d32_data,%ebx
		mov    _0e3d2e_data,%edx
		mov    _0e3d2a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024538_func

	_04a7b6_jump:
		push   $0x000001
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cecf4_data,%ebx
		mov    $_0963cc_data,%eax
		sar    $0x000010,%ebx
		call   _01a178_func
		mov    _096475_data,%al
		mov    %al,0x000018(%esp)
		mov    $0x000002,%ebp
		jmp    _04a8c3_jump

	_04a7e8_jump:
		imul   $0x0000d8,%eax,%eax
		mov    _0ca8c8_data(%eax),%dx
		mov    %dx,0x000010(%esp)
		mov    _0ca8ca_data(%eax),%dx
		mov    %dx,0x000014(%esp)
		xor    %edx,%edx
		mov    _0ced06_data,%bx
		mov    0x000018(%esp),%dl
		cmp    %bx,%dx
		je     _04a83d_jump
		mov    0x000012(%esp),%ebx
		xor    %edx,%edx
		mov    %ebp,%ecx
		mov    _0ca8cf_data(%eax),%dl
		sar    $0x000010,%ebx
		push   %edx
		mov    0x000012(%esp),%edx
		add    $_0ca7f8_data,%eax
		sar    $0x000010,%edx
		call   _01a178_func
		jmp    _04a85a_jump

	_04a83d_jump:
		mov    _0ced04_data,%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    $0x000001,%edx
		add    $_0ca7f8_data,%eax
		call   _04d608_func

	_04a85a_jump:
		mov    0x000018(%esp),%dl
		test   %dl,%dl
		jbe    _04a8bf_jump
		cmp    $0x000004,%dl
		jae    _04a8bf_jump
		movzbl %dl,%edi
		imul   $0x0000d8,%edi,%esi
		mov    $_0ca7f8_data,%eax
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		push   %ebp
		mov    $0xffffffff,%edx
		add    %esi,%eax
		call   _01ebec_func
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0ca8cf_data(%esi),%al
		add    $0x000010,%edx
		push   %eax
		mov    0x000014(%esp),%eax
		add    %edx,%eax
		mov    0x000016(%esp),%ebx
		movswl %ax,%edx
		mov    _0cccba_data(,%edi,2),%eax
		mov    %ebp,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    0x000004(%esp,%eax,4),%eax
		call   _01a178_func

	_04a8bf_jump:
		incb   0x000018(%esp)

	_04a8c3_jump:
		xor    %eax,%eax
		mov    _0cecee_data,%edx
		mov    _096475_data,%al
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		cmp    %edx,%eax
		jle    _04a7e8_jump
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a8f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _04d544_func
		call   _036944_func
		mov    $0x000004,%cl
		test   %al,%al
		je     _04a90c_jump
		movb   $0x000001,_0cef8e_data

	_04a90c_jump:
		cmpb   $0x000000,_0cefd3_data
		jne    _04a949_jump
		mov    _0ced04_data,%ax
		cmp    _0cece6_data,%ax
		jle    _04a9c8_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04a9c8_jump

	_04a949_jump:
		call   _040904_func
		test   %ax,%ax
		je     _04a989_jump
		mov    $0x000044,%eax
		call   _06fa90_func
		xor    %eax,%eax
		mov    _0ced06_data,%di
		mov    _096475_data,%al
		cmp    %di,%ax
		jne    _04a97e_jump
		mov    _0cecac_data,%ax
		mov    %ax,_0ced06_data
		jmp    _04a9c8_jump

	_04a97e_jump:
		mov    %edi,%eax
		dec    %eax
		mov    %ax,_0ced06_data
		jmp    _04a9c8_jump

	_04a989_jump:
		call   _040894_func
		test   %ax,%ax
		je     _04a9c8_jump
		mov    $0x000044,%eax
		call   _06fa90_func
		mov    _0ced06_data,%ax
		mov    _0cecac_data,%bx
		cmp    %bx,%ax
		jne    _04a9be_jump
		xor    %ebx,%eax
		mov    _096475_data,%al
		mov    %ax,_0ced06_data
		jmp    _04a9c8_jump

	_04a9be_jump:
		mov    %eax,%esi
		inc    %esi
		mov    %si,_0ced06_data

	_04a9c8_jump:
		cmpw   $0x000000,_0ced06_data
		jne    _04aa07_jump
		call   _036820_func
		test   %al,%al
		je     _04aa07_jump
		xor    %cl,%cl
		mov    %cl,_0cefa4_data
		cmpb   $0x000000,_095b4b_data
		jne    _04a9f1_jump
		call   _03b970_func

	_04a9f1_jump:
		call   _04c94c_func
		movb   $0x000001,_0cefa4_data
		call   _040c04_func
		jmp    _04ab90_jump

	_04aa07_jump:
		mov    _0ced06_data,%bx
		cmp    $0x000001,%bx
		jl     _04ab54_jump
		cmp    $0x000003,%bx
		jg     _04ab54_jump
		cmpb   $0x000000,_0cefd3_data
		je     _04ab54_jump
		xor    %bh,%bh
		mov    %bh,_0cefa4_data
		call   _040a00_func
		test   %ax,%ax
		je     _04aa5b_jump
		mov    _0ced04_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000001,_0cccbc_data(,%eax,2)
		je     _04aa5b_jump
		mov    $0x000001,%cl
		jmp    _04aabc_jump

	_04aa5b_jump:
		call   _040974_func
		test   %ax,%ax
		je     _04aa7c_jump
		mov    _0ced04_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000000,_0cccbc_data(,%eax,2)
		je     _04aa7c_jump
		xor    %cl,%cl
		jmp    _04aabc_jump

	_04aa7c_jump:
		call   _040a8c_func
		test   %ax,%ax
		je     _04aa9d_jump
		mov    _0ced04_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000002,_0cccbc_data(,%eax,2)
		je     _04aa9d_jump
		mov    $0x000002,%cl
		jmp    _04aabc_jump

	_04aa9d_jump:
		call   _040b18_func
		test   %ax,%ax
		je     _04aabc_jump
		mov    _0ced04_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000003,_0cccbc_data(,%eax,2)
		je     _04aabc_jump
		mov    $0x000003,%cl

	_04aabc_jump:
		cmp    $0x000004,%cl
		je     _04ab42_jump
		xor    %eax,%eax
		mov    _0cccbe_data,%si
		mov    %cl,%al
		cmp    %si,%ax
		je     _04aaf2_jump
		cmp    _0cccc0_data,%ax
		je     _04aaf2_jump
		cmp    _0cccc2_data,%ax
		je     _04aaf2_jump
		mov    _0ced04_data,%edx
		sar    $0x000010,%edx
		jmp    _04ab3a_jump

	_04aaf2_jump:
		mov    $0x000044,%eax
		call   _06fa90_func
		mov    $0x000001,%al
		jmp    _04ab02_jump

	_04ab00_jump:
		inc    %al

	_04ab02_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %al,%dl
		mov    %cl,%bl
		cmp    _0cccbc_data(,%edx,2),%bx
		je     _04ab18_jump
		cmp    $0x000003,%al
		jbe    _04ab00_jump

	_04ab18_jump:
		mov    _0ced04_data,%edx
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		mov    _0cccbc_data(,%edx,2),%bx
		mov    %bx,_0cccbc_data(,%eax,2)
		xor    %eax,%eax
		mov    %cl,%al

	_04ab3a_jump:
		mov    %ax,_0cccbc_data(,%edx,2)

	_04ab42_jump:
		movb   $0x000001,_0cefa4_data
		call   _04d588_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04ab54_jump:
		cmpw   $0x000004,_0ced06_data
		jne    _04ab90_jump
		call   _036820_func
		test   %al,%al
		je     _04ab90_jump
		cmpb   $0x000000,_0cefd3_data
		je     _04ab90_jump
		mov    $0x000001,%eax
		mov    $0x000002,%ebx
		xor    %edx,%edx
		mov    %ax,_0cccbe_data
		mov    %dx,_0cccc0_data
		mov    %bx,_0cccc2_data

	_04ab90_jump:
		call   _04d588_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ab9c_func:
		push   %ebx
		push   %edx
		mov    $0x000004,%ah
		mov    _0cef8e_data,%dl
		mov    %ah,_0cef8c_data
		test   %dl,%dl
		jne    _04abdc_jump
		mov    _0cccbe_data,%ax
		mov    %ax,_0c4d88_data
		mov    _0cccc0_data,%ax
		mov    %ax,_0c4d8a_data
		mov    _0cccc2_data,%ax
		mov    %ax,_0c4d8e_data
		call   _0405c0_func
		pop    %edx
		pop    %ebx
		ret    

	_04abdc_jump:
		xor    %dh,%dh
		mov    _095b4b_data,%bl
		mov    %dh,_096477_data
		test   %bl,%bl
		jne    _04abf3_jump
		call   _03b970_func

	_04abf3_jump:
		pop    %edx
		pop    %ebx
		ret    



_04abf8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e3d3c_data,%cl
		mov    $0x000001,%ah
		mov    $0x000064,%ebx
		mov    $0x00000c,%esi
		mov    $0x000006,%edi
		xor    %edx,%edx
		mov    %ah,_0cefd3_data
		mov    %dx,_0ced04_data
		mov    %bx,_0ced0a_data
		mov    %si,_0cece6_data
		mov    _0cccbe_data,%ax
		mov    %di,_0cecd4_data
		test   %ax,%ax
		jne    _04adc1_jump
		cmpb   $0x000000,_0cef87_data
		je     _04adc1_jump
		cmpb   $0x000000,_095b4b_data
		je     _04ad3a_jump
		cmpw   $0x000006,_0cede4_data
		jne    _04ac75_jump
		cmpw   $0x000004,_0cedd0_data
		je     _04aca6_jump

	_04ac75_jump:
		cmpb   $0x000000,_0cefac_data
		jne    _04aca6_jump
		mov    $0x000005,%edi
		mov    $0x000004,%eax
		mov    $0x000002,%ch
		mov    %di,_0ced06_data
		mov    %ax,_0cecf0_data
		mov    %ch,_096475_data
		mov    %di,_0cecac_data
		jmp    _04acd2_jump

	_04aca6_jump:
		mov    $0x000004,%edx
		mov    $0x000003,%ebx
		mov    $0x000005,%esi
		mov    %dx,_0ced06_data
		mov    %bx,_0cecf0_data
		mov    $0x000003,%bh
		mov    %si,_0cecac_data
		mov    %bh,_096475_data

	_04acd2_jump:
		mov    _0cef88_data,%al
		cmp    $0x000001,%al
		jb     _04ace3_jump
		jbe    _04ace7_jump
		cmp    $0x000002,%al
		je     _04aceb_jump
		jmp    _04aced_jump

	_04ace3_jump:
		test   %al,%al
		jne    _04aced_jump

	_04ace7_jump:
		mov    $0x00006e,%cl
		jmp    _04aced_jump

	_04aceb_jump:
		mov    $0x000078,%cl

	_04aced_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    %cl,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x000014,%eax
		mov    %dx,_0cecc4_data
		mov    $0x00003c,%edx
		mov    %cl,_0e3d3c_data
		call   _04d470_func
		mov    _0cecf0_data,%bx
		dec    %ebx
		mov    _0e3d3c_data,%cl
		mov    %bx,_0cecf0_data
		mov    %cl,_0e3d3c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04ad3a_jump:
		mov    $0x000007,%eax
		mov    $0x000001,%dh
		mov    %ax,_0ced06_data
		mov    %ax,_0cecf0_data
		mov    %ax,_0cecac_data
		mov    _0cef88_data,%al
		mov    %dh,_096475_data
		cmp    %dh,%al
		jb     _04ad6a_jump
		jbe    _04ad6e_jump
		cmp    $0x000002,%al
		je     _04ad72_jump
		jmp    _04ad74_jump

	_04ad6a_jump:
		test   %al,%al
		jne    _04ad74_jump

	_04ad6e_jump:
		mov    $0x000078,%cl
		jmp    _04ad74_jump

	_04ad72_jump:
		mov    $0x00007d,%cl

	_04ad74_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    %cl,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x00000f,%eax
		mov    %dx,_0cecc4_data
		mov    $0x000046,%edx
		mov    %cl,_0e3d3c_data
		call   _04d470_func
		mov    _0cecf0_data,%si
		dec    %esi
		mov    _0e3d3c_data,%cl
		mov    %si,_0cecf0_data
		mov    %cl,_0e3d3c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04adc1_jump:
		mov    _0cef74_data,%dh
		cmp    $0x000001,%dh
		jne    _04ae6a_jump
		cmpb   $0x000000,_095b4b_data
		je     _04ae28_jump
		mov    $0x000005,%ebx
		mov    $0x000004,%esi
		mov    $0x000003,%ah
		mov    $0x000006,%edi
		mov    %bx,_0ced06_data
		mov    %si,_0cecf0_data
		mov    %ah,_096475_data
		mov    _0cef88_data,%al
		mov    %di,_0cecac_data
		cmp    %dh,%al
		jb     _04ae19_jump
		jbe    _04ae21_jump
		cmp    $0x000002,%al
		je     _04ae66_jump
		jmp    _04aeba_jump

	_04ae19_jump:
		test   %al,%al
		jne    _04aeba_jump

	_04ae21_jump:
		mov    $0x00006e,%cl
		jmp    _04aeba_jump

	_04ae28_jump:
		mov    $0x000005,%edi
		mov    _0cef88_data,%al
		mov    %dh,_096475_data
		mov    $0x000006,%edx
		mov    %di,_0ced06_data
		mov    %di,_0cecf0_data
		mov    %dx,_0cecac_data
		cmp    $0x000001,%al
		jb     _04ae5e_jump
		jbe    _04ae62_jump
		cmp    $0x000002,%al
		je     _04ae66_jump
		jmp    _04aeba_jump

	_04ae5e_jump:
		test   %al,%al
		jne    _04aeba_jump

	_04ae62_jump:
		mov    $0x00006e,%cl
		jmp    _04aeba_jump

	_04ae66_jump:
		mov    $0x000078,%cl
		jmp    _04aeba_jump

	_04ae6a_jump:
		cmp    $0x000002,%dh
		jne    _04aeec_jump
		mov    $0x000005,%edx
		mov    $0x000004,%ebx
		mov    $0x000006,%esi
		mov    _0cef88_data,%al
		mov    %dx,_0ced06_data
		mov    %bx,_0cecf0_data
		mov    $0x000003,%bh
		mov    %si,_0cecac_data
		mov    %bh,_096475_data
		cmp    $0x000001,%al
		jb     _04aeb0_jump
		jbe    _04aeb4_jump
		cmp    $0x000002,%al
		je     _04aeb8_jump
		jmp    _04aeba_jump

	_04aeb0_jump:
		test   %al,%al
		jne    _04aeba_jump

	_04aeb4_jump:
		mov    $0x00006e,%cl
		jmp    _04aeba_jump

	_04aeb8_jump:
		mov    $0x000078,%cl

	_04aeba_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    %cl,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x000014,%eax
		mov    %dx,_0cecc4_data
		mov    $0x00003c,%edx
		mov    %cl,_0e3d3c_data
		call   _04d470_func
		mov    _0e3d3c_data,%cl

	_04aeec_jump:
		mov    %cl,_0e3d3c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04aef8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_04aef8_func,%edx
		mov    $_04afdc_func,%ebx
		mov    $_04b3c0_func,%ecx
		mov    $_04b8f0_func,%esi
		mov    $_04bdec_func,%edi
		mov    _095b15_data,%ah
		mov    %edx,_0e3cfc_data
		mov    %ebx,_0e3cf8_data
		mov    %ecx,_0e3d08_data
		mov    %esi,_0e3d04_data
		mov    %edi,_0e3d0c_data
		test   %ah,%ah
		jne    _04af50_jump
		movb   $0x000002,_0e3d3e_data
		xor    %ecx,%ecx
		mov    %cx,_0cccbe_data
		jmp    _04af86_jump

	_04af50_jump:
		cmp    $0x000001,%ah
		jne    _04af72_jump
		cmpb   $0x000000,_0cef6d_data
		jne    _04af72_jump
		mov    $0x000001,%ebx
		mov    %ah,_0e3d3e_data
		mov    %bx,_0cccbe_data
		jmp    _04af86_jump

	_04af72_jump:
		mov    $0x000001,%bl
		mov    $0x000002,%edx
		mov    %bl,_0e3d3e_data
		mov    %dx,_0cccbe_data

	_04af86_jump:
		mov    _095b52_data,%ax
		mov    %ax,_0cccc0_data
		xor    %eax,%eax
		mov    _095b54_data,%al
		mov    %ax,_0cccc2_data
		mov    _095b4e_data,%ax
		mov    %ax,_0cccc4_data
		xor    %eax,%eax
		mov    _095b55_data,%al
		mov    %ax,_0cccc6_data
		xor    %eax,%eax
		mov    _0cef6b_data,%al
		mov    %ax,_0cccc8_data
		call   _04d2e4_func
		mov    %ax,_0e3d32_data
		call   _04abf8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04afdc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %esp,%edi
		mov    $0x000001,%dl
		mov    $_0ca7f8_data,%ebp
		mov    $_047498_func,%esi
		mov    _0ced14_data,%ax
		xor    %bh,%bh
		mov    %ax,_0ca8ca_data
		mov    %dl,_0cb067_data
		mov    %dl,_0cb066_data
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    %bh,_0cb065_data
		mov    (%esp),%al
		mov    $_0963cc_data,%edi
		mov    %al,_0ca8cf_data
		mov    $0x000002,%ah
		mov    _0c26c0_data,%esi
		mov    %ah,_0ca8cc_data
		mov    %ah,_0cb064_data
		push   %edi

	_04b037_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b04f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b037_jump

	_04b04f_jump:
		pop    %edi
		mov    _096475_data,%bl
		jmp    _04b1dc_jump

	_04b05b_jump:
		imul   $0x0000d8,%eax,%edx
		movb   $0x000002,_0ca8cc_data(%edx)
		movb   $0x000001,_0ca8ce_data(%edx)
		xor    %cl,%cl
		mov    %cl,_0ca8cd_data(%edx)
		mov    _0cecac_data,%cx
		lea    (%edx,%ebp,1),%edi
		cmp    %cx,%bx
		jne    _04b0ce_jump
		mov    _0c2620_data,%esi
		push   %edi

	_04b08d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b0a5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b08d_jump

	_04b0a5_jump:
		pop    %edi
		mov    $0x0000a0,%edi
		mov    _0cecfe_data,%ax
		mov    %di,_0ca8c8_data(%edx)
		mov    %ax,_0ca8ca_data(%edx)
		mov    0x000007(%esp),%al
		mov    %al,_0ca8cf_data(%edx)
		jmp    _04b1cb_jump

	_04b0ce_jump:
		mov    _0cecc4_data,%si
		add    $0x00000a,%esi
		mov    (%esp,%eax,1),%cl
		mov    %si,_0ca8c8_data(%edx)
		mov    _0c26c8_data(,%eax,4),%esi
		mov    %cl,_0ca8cf_data(%edx)
		push   %edi

	_04b0f0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b108_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b0f0_jump

	_04b108_jump:
		pop    %edi
		mov    _0ced00_data,%ax
		mov    _0cccbe_data,%si
		add    $0x00000f,%eax
		test   %si,%si
		jne    _04b140_jump
		movzbw _096475_data,%si
		mov    %ebx,%ecx
		sub    %esi,%ecx
		mov    %ecx,%esi
		inc    %esi
		imul   %esi,%eax
		mov    _0ced14_data,%si
		add    %esi,%eax
		jmp    _04b1c4_jump

	_04b140_jump:
		cmp    $0x000001,%bx
		jne    _04b164_jump
		movzbw _096475_data,%si
		mov    %ebx,%ecx
		sub    %esi,%ecx
		mov    %ecx,%esi
		add    %ebx,%esi
		imul   %esi,%eax
		mov    _0ced14_data,%cx
		add    %ecx,%eax
		jmp    _04b1c4_jump

	_04b164_jump:
		cmpb   $0x000000,_095b4b_data
		jne    _04b176_jump
		cmpb   $0x000002,_0cef74_data
		jne    _04b1ac_jump

	_04b176_jump:
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    _096475_data,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    _0ced00_data,%dx
		inc    %eax
		add    $0x00000f,%edx
		imul   %edx,%eax
		mov    _0ced14_data,%dx
		add    %eax,%edx
		movswl %bx,%eax
		imul   $0x0000d8,%eax,%eax
		mov    %dx,_0ca8ca_data(%eax)
		jmp    _04b1cb_jump

	_04b1ac_jump:
		movzbw _096475_data,%si
		mov    %ebx,%ecx
		sub    %esi,%ecx
		imul   %ecx,%eax
		mov    _0ced14_data,%di
		add    %edi,%eax

	_04b1c4_jump:
		mov    %ax,_0ca8ca_data(%edx)

	_04b1cb_jump:
		movswl %bx,%eax
		imul   $0x0000d8,%eax,%eax
		add    %ebp,%eax
		inc    %ebx
		call   _01ec48_func

	_04b1dc_jump:
		xor    %edx,%edx
		mov    _0cecee_data,%eax
		mov    _096475_data,%dl
		sar    $0x000010,%eax
		add    %eax,%edx
		movswl %bx,%eax
		cmp    %edx,%eax
		jle    _04b05b_jump
		mov    _0cecf6_data,%bx
		mov    _095b15_data,%cl
		sub    $0x000019,%ebx
		test   %cl,%cl
		jne    _04b23e_jump
		mov    _0cecaa_data,%edi
		sar    $0x000010,%edi
		lea    0x000000(,%edi,8),%eax
		sub    %edi,%eax
		shl    $0x000002,%eax
		sub    %edi,%eax
		mov    _0cecf6_data,%di
		mov    _0ca8ca_data(,%eax,8),%ax
		mov    _0cecc4_data,%dx
		sub    %edi,%eax
		jmp    _04b26d_jump

	_04b23e_jump:
		mov    _0cecaa_data,%edi
		sar    $0x000010,%edi
		lea    0x000000(,%edi,8),%eax
		sub    %edi,%eax
		shl    $0x000002,%eax
		sub    %edi,%eax
		mov    _0cecf6_data,%cx
		mov    _0ca8ca_data(,%eax,8),%ax
		mov    _0cecc4_data,%dx
		sub    %ecx,%eax

	_04b26d_jump:
		movzbw _0e3d3c_data,%si
		add    $0x000023,%eax
		add    %esi,%esi
		mov    %ax,0x000020(%esp)
		mov    _0e3d2c_data,%ax
		cmp    %ax,%dx
		jge    _04b290_jump
		mov    %edx,%ecx
		jmp    _04b292_jump

	_04b290_jump:
		mov    %eax,%ecx

	_04b292_jump:
		mov    _0e3d30_data,%di
		cmp    %di,%bx
		jge    _04b2a2_jump
		mov    %ebx,%eax
		jmp    _04b2a4_jump

	_04b2a2_jump:
		mov    %edi,%eax

	_04b2a4_jump:
		mov    _0e3d32_data,%ebp
		mov    _0e3d2a_data,%edi
		sar    $0x000010,%ebp
		sar    $0x000010,%edi
		add    %ebp,%edi
		movswl %dx,%ebp
		mov    %ebp,0x000008(%esp)
		movswl %si,%ebp
		mov    %ebp,0x00000c(%esp)
		mov    0x000008(%esp),%ebp
		add    0x00000c(%esp),%ebp
		cmp    %ebp,%edi
		jle    _04b2dd_jump
		movswl %cx,%ebp
		sub    %ebp,%edi
		mov    %edi,0x000018(%esp)
		jmp    _04b2e6_jump

	_04b2dd_jump:
		movswl %cx,%edi
		sub    %edi,%ebp
		mov    %ebp,0x000018(%esp)

	_04b2e6_jump:
		mov    0x000018(%esp),%edi
		mov    %di,0x000024(%esp)
		mov    _0e3d2e_data,%edi
		sar    $0x000010,%edi
		mov    %edi,0x000010(%esp)
		mov    _0e3d2c_data,%edi
		mov    0x000010(%esp),%ebp
		sar    $0x000010,%edi
		add    %edi,%ebp
		mov    %ebp,0x00001c(%esp)
		mov    0x00001e(%esp),%ebp
		sar    $0x000010,%ebp
		movswl %bx,%edi
		add    %ebp,%edi
		mov    0x00001c(%esp),%ebp
		cmp    %ebp,%edi
		jge    _04b32e_jump
		movswl %ax,%edi
		sub    %edi,%ebp
		mov    %ebp,0x000014(%esp)
		jmp    _04b337_jump

	_04b32e_jump:
		movswl %ax,%ebp
		sub    %ebp,%edi
		mov    %edi,0x000014(%esp)

	_04b337_jump:
		mov    0x000014(%esp),%edi
		mov    %dx,_0e3d2c_data
		mov    0x000020(%esp),%edx
		mov    %bx,_0e3d30_data
		mov    %dx,_0e3d2e_data
		mov    _095b4b_data,%dl
		mov    %si,_0e3d34_data
		test   %dl,%dl
		je     _04b382_jump
		push   $0x000001
		mov    0x000026(%esp),%esi
		movswl %di,%ebx
		movswl %ax,%edx
		sar    $0x000010,%esi
		movswl %cx,%eax
		mov    %ebx,%ecx
		mov    %esi,%ebx
		call   _04e104_func
		jmp    _04b39b_jump

	_04b382_jump:
		mov    0x000022(%esp),%ebx
		movswl %di,%edx
		movswl %ax,%esi
		sar    $0x000010,%ebx
		movswl %cx,%eax
		mov    %edx,%ecx
		mov    %esi,%edx
		call   _04e914_func

	_04b39b_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04b3a8_switch:
		.long   _04b589_case
		.long   _04b5cd_case
		.long   _04b618_case
		.long   _04b7e2_case
		.long   _04b7be_case
		.long   _04b795_case




_04b3c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		lea    0x00001c(%esp),%edi
		mov    $_0474a0_jump,%esi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		lea    0x000018(%esp),%edi
		mov    $_0474ab_jump,%esi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    _0474a3_jump,%eax
		lea    0x000014(%esp),%edi
		mov    $_0474ae_jump,%esi
		mov    %eax,0x000010(%esp)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    _0474a7_jump,%eax
		mov    %esp,%edi
		mov    $_0474b4_switch,%esi
		mov    %eax,0x00000c(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   _03bcb4_func
		cmpb   $0x000000,_095b4b_data
		je     _04b43f_jump
		mov    _0e3d2c_data,%ecx
		mov    _0e3d32_data,%ebx
		mov    _0e3d2e_data,%edx
		mov    _0e3d2a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024538_func

	_04b43f_jump:
		push   $0x000001
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cecf4_data,%ebx
		mov    $_0963cc_data,%eax
		sar    $0x000010,%ebx
		call   _01a178_func
		xor    %eax,%eax
		mov    _0ca8cf_data,%al
		mov    $0x000002,%ecx
		push   %eax
		mov    _0cecc4_data,%ax
		mov    _0ca8c8_data,%ebx
		add    $0x00000a,%eax
		sar    $0x000010,%ebx
		movswl %ax,%edx
		mov    _0c26c8_data,%eax
		call   _01a178_func
		mov    _0e3d30_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0ca8ca_data,%ax
		sub    $0x00000c,%eax
		push   $0x000100
		movswl %ax,%edx
		xor    %eax,%eax
		mov    $0x00000c,%ecx
		mov    _0e3d3c_data,%al
		push   $0x000080
		add    $0x000016,%eax
		mov    $0x000080,%ebx
		cwtl   
		call   _0246f4_func
		mov    _096475_data,%al
		mov    %al,0x000034(%esp)
		dec    %al
		mov    %al,0x000030(%esp)
		jmp    _04b8ce_jump

	_04b4db_jump:
		cmpw   $0x000000,_0cccbe_data
		je     _04b4ed_jump
		cmp    $0x000002,%al
		je     _04b8ba_jump

	_04b4ed_jump:
		cmpb   $0x000000,_095b4b_data
		je     _04b50b_jump
		cmpw   $0x000000,_0cccbe_data
		jne    _04b50b_jump
		cmpb   $0x000006,0x000034(%esp)
		je     _04b8ba_jump

	_04b50b_jump:
		xor    %edx,%edx
		mov    0x000034(%esp),%dl
		imul   $0x0000d8,%edx,%edx
		mov    _0ced06_data,%di
		xor    %ebx,%ebx
		mov    _0ca8ca_data(%edx),%ax
		mov    0x000034(%esp),%bl
		mov    %ax,0x00002c(%esp)
		mov    $_0ca7f8_data,%eax
		mov    _0ca8c8_data(%edx),%si
		add    %edx,%eax
		cmp    %di,%bx
		je     _04b566_jump
		mov    _0ca8cf_data(%edx),%dl
		mov    0x00002a(%esp),%ebx
		and    $0x0000ff,%edx
		mov    $0x000002,%ecx
		push   %edx
		sar    $0x000010,%ebx
		movswl %si,%edx
		call   _01a178_func
		jmp    _04b570_jump

	_04b566_jump:
		mov    $0x000001,%edx
		call   _04d608_func

	_04b570_jump:
		mov    0x000030(%esp),%bh
		cmp    $0x000005,%bh
		ja     _04b8ba_jump
		xor    %eax,%eax
		mov    %bh,%al
		jmp    *%cs:_04b3a8_switch(,%eax,4)

	_04b589_case:
		xor    %eax,%eax
		mov    0x000034(%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    _0ca8cf_data(%eax),%al
		and    $0x0000ff,%eax
		push   %eax
		xor    %eax,%eax
		mov    _0e3d3c_data,%al
		add    $0x000076,%eax
		mov    0x00002e(%esp),%ebx
		movswl %ax,%edx
		mov    _0cccbc_data,%eax
		mov    $0x000002,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    0x000004(%esp,%eax,4),%eax
		jmp    _04b8b5_jump

	_04b5cd_case:
		cmpw   $0x000000,_0cccbe_data
		jne    _04b8ba_jump
		mov    $0x000003,%eax
		sub    _0cccc0_data,%ax
		cwtl   
		push   %eax
		mov    0x000030(%esp),%eax
		sub    $0x00000c,%eax
		push   $0x000003
		movswl %ax,%edx
		xor    %eax,%eax
		mov    $0x00000c,%ecx
		mov    _0e3d3c_data,%al
		push   $0x000000
		add    $0x000046,%eax
		mov    $0x000050,%ebx
		cwtl   
		call   _0246f4_func
		jmp    _04b8ba_jump

	_04b618_case:
		cmpw   $0x000000,_0cccc2_data
		jne    _04b62b_jump
		cmpb   $0x000000,_095b15_data
		je     _04b652_jump

	_04b62b_jump:
		mov    _0cccc2_data,%cx
		test   %cx,%cx
		je     _04b649_jump
		cmp    $0x000046,%cx
		je     _04b649_jump
		cmp    $0x000050,%cx
		je     _04b649_jump
		cmp    $0x000064,%cx
		jne    _04b682_jump

	_04b649_jump:
		cmpb   $0x000001,_095b15_data
		jne    _04b682_jump

	_04b652_jump:
		lea    0x000014(%esp),%eax
		xor    %edx,%edx
		lea    0x000018(%esp),%esi
		mov    _0e3d3c_data,%dl
		lea    0x00000c(%esp),%edi
		mov    %edx,%ebx
		mov    %edx,%ecx
		add    $0x000086,%ebx
		add    $0x000066,%ecx
		add    $0x000036,%edx
		mov    %cx,0x000028(%esp)
		mov    %dx,0x000020(%esp)
		jmp    _04b6e9_jump

	_04b682_jump:
		cmpw   $0x000001,_0cccc2_data
		jne    _04b6bb_jump
		xor    %edx,%edx
		lea    0x000014(%esp),%esi
		mov    _0e3d3c_data,%dl
		lea    0x00000c(%esp),%edi
		mov    %edx,%eax
		mov    %edx,%ebx
		add    $0x000086,%eax
		add    $0x000066,%ebx
		add    $0x000036,%edx
		mov    %ax,0x000028(%esp)
		mov    %dx,0x000020(%esp)
		lea    0x000018(%esp),%eax
		jmp    _04b6e9_jump

	_04b6bb_jump:
		lea    0x000014(%esp),%eax
		xor    %edx,%edx
		lea    0x000018(%esp),%edi
		mov    _0e3d3c_data,%dl
		lea    0x00000c(%esp),%esi
		mov    %edx,%ebx
		mov    %edx,%ecx
		add    $0x000086,%ebx
		add    $0x000066,%ecx
		add    $0x000036,%edx
		mov    %cx,0x000020(%esp)
		mov    %dx,0x000028(%esp)

	_04b6e9_jump:
		push   $0x000005
		mov    0x00002e(%esp),%ebp
		mov    $0x000002,%ecx
		sar    $0x000010,%ebp
		movswl %bx,%edx
		mov    %ebp,%ebx
		call   _01a178_func
		cmpw   $0x000000,_0cccbe_data
		jne    _04b722_jump
		push   $0x000005
		mov    0x000022(%esp),%edx
		mov    $0x000002,%ecx
		mov    %ebp,%ebx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01a178_func

	_04b722_jump:
		xor    %eax,%eax
		mov    _0ced06_data,%cx
		mov    0x000034(%esp),%al
		cmp    %cx,%ax
		jne    _04b77c_jump
		mov    $_0caf90_data,%edi
		push   %edi

	_04b73a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b752_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b73a_jump

	_04b752_jump:
		pop    %edi
		mov    0x000028(%esp),%eax
		mov    %ax,_0cb060_data
		mov    0x00002c(%esp),%eax
		mov    %ax,_0cb062_data
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01ec48_func
		mov    %edi,%eax
		call   _04d608_func
		jmp    _04b8ba_jump

	_04b77c_jump:
		push   $0x000001
		mov    0x00002e(%esp),%ebx
		mov    0x00002a(%esp),%edx
		mov    $0x000002,%ecx
		mov    %esi,%eax
		sar    $0x000010,%ebx
		jmp    _04b8b2_jump

	_04b795_case:
		cmpb   $0x000000,_095b4b_data
		jne    _04b8ba_jump
		cmpw   $0x000000,_0cccc6_data
		je     _04b8ba_jump
		cmpw   $0x000000,_0cccbe_data
		jne    _04b8ba_jump

	_04b7be_case:
		cmpb   $0x000000,_095b4b_data
		je     _04b7d5_jump
		cmpw   $0x000000,_0cccbe_data
		je     _04b8ba_jump

	_04b7d5_jump:
		cmpb   $0x000000,_0cef74_data
		je     _04b8ba_jump

	_04b7e2_case:
		xor    %eax,%eax
		mov    0x000034(%esp),%al
		cmpw   $0x000000,_0cccbc_data(,%eax,2)
		je     _04b815_jump
		xor    %edx,%edx
		lea    0x000010(%esp),%eax
		mov    _0e3d3c_data,%dl
		lea    0x00001c(%esp),%esi
		mov    %edx,%ebx
		add    $0x000066,%edx
		add    $0x000086,%ebx
		mov    %dx,0x000024(%esp)
		jmp    _04b834_jump

	_04b815_jump:
		xor    %ebx,%ebx
		mov    _0e3d3c_data,%bl
		mov    %ebx,%eax
		lea    0x000010(%esp),%esi
		add    $0x000086,%eax
		add    $0x000066,%ebx
		mov    %ax,0x000024(%esp)
		lea    0x00001c(%esp),%eax

	_04b834_jump:
		push   $0x000005
		mov    0x00002e(%esp),%edi
		mov    $0x000002,%ecx
		sar    $0x000010,%edi
		movswl %bx,%edx
		mov    %edi,%ebx
		call   _01a178_func
		xor    %eax,%eax
		mov    _0ced06_data,%dx
		mov    0x000034(%esp),%al
		cmp    %dx,%ax
		jne    _04b8a3_jump
		mov    $_0caf90_data,%edi
		push   %edi

	_04b864_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b87c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b864_jump

	_04b87c_jump:
		pop    %edi
		mov    0x000024(%esp),%eax
		mov    %ax,_0cb060_data
		mov    0x00002c(%esp),%eax
		mov    %ax,_0cb062_data
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01ec48_func
		mov    %edi,%eax
		call   _04d608_func
		jmp    _04b8ba_jump

	_04b8a3_jump:
		push   $0x000001
		mov    0x000026(%esp),%edx
		mov    $0x000002,%ecx
		mov    %edi,%ebx
		mov    %esi,%eax

	_04b8b2_jump:
		sar    $0x000010,%edx

	_04b8b5_jump:
		call   _01a178_func

	_04b8ba_jump:
		mov    0x000030(%esp),%dh
		mov    0x000034(%esp),%bl
		inc    %dh
		inc    %bl
		mov    %dh,0x000030(%esp)
		mov    %bl,0x000034(%esp)

	_04b8ce_jump:
		xor    %eax,%eax
		mov    _0cecac_data,%dx
		mov    0x000034(%esp),%al
		cmp    %dx,%ax
		jle    _04b4db_jump
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04b8f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		call   _04d544_func
		xor    %bl,%bl
		mov    $0x000004,%dl
		mov    %bl,(%esp)
		mov    %dl,_0cef8c_data
		call   _036944_func
		test   %al,%al
		je     _04b91a_jump
		movb   $0x000001,_0cef8e_data

	_04b91a_jump:
		cmpb   $0x000000,_0cefd3_data
		jne    _04b957_jump
		mov    _0ced04_data,%ax
		cmp    _0cece6_data,%ax
		jle    _04ba10_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    _04ba10_jump

	_04b957_jump:
		call   _040904_func
		test   %ax,%ax
		je     _04b9b6_jump
		mov    $0x000044,%eax
		call   _06fa90_func
		xor    %eax,%eax
		mov    _0ced06_data,%cx
		mov    _096475_data,%al
		cmp    %cx,%ax
		jne    _04b98f_jump
		mov    _0cecac_data,%ax
		mov    %ax,_0ced06_data
		jmp    _04ba10_jump

	_04b98f_jump:
		cmpw   $0x000000,_0cccbe_data
		je     _04b9ad_jump
		cmp    $0x000003,%cx
		jne    _04b9ad_jump
		mov    %ecx,%edx
		sub    $0x000002,%edx
		mov    %dx,_0ced06_data
		jmp    _04ba10_jump

	_04b9ad_jump:
		decw   _0ced06_data
		jmp    _04ba10_jump

	_04b9b6_jump:
		call   _040894_func
		test   %ax,%ax
		je     _04ba10_jump
		mov    $0x000044,%eax
		call   _06fa90_func
		mov    _0ced06_data,%ax
		mov    _0cecac_data,%cx
		cmp    %cx,%ax
		jne    _04b9eb_jump
		xor    %ecx,%eax
		mov    _096475_data,%al
		mov    %ax,_0ced06_data
		jmp    _04ba10_jump

	_04b9eb_jump:
		cmpw   $0x000000,_0cccbe_data
		je     _04ba09_jump
		cmp    $0x000001,%ax
		jne    _04ba09_jump
		mov    %eax,%edx
		add    $0x000002,%edx
		mov    %dx,_0ced06_data
		jmp    _04ba10_jump

	_04ba09_jump:
		incw   _0ced06_data

	_04ba10_jump:
		cmpw   $0x000000,_0cccbe_data
		jne    _04bb3e_jump
		cmpw   $0x000002,_0ced06_data
		jne    _04baee_jump
		call   _040894_func
		test   %ax,%ax
		jne    _04baee_jump
		call   _040904_func
		test   %ax,%ax
		jne    _04baee_jump
		cmpb   $0x000000,_0cefd3_data
		je     _04baee_jump
		call   _0407b4_func
		test   %ax,%ax
		je     _04ba82_jump
		mov    _0cccc0_data,%di
		cmp    $0x000003,%di
		jge    _04ba78_jump
		mov    %edi,%edx
		inc    %edx
		mov    %dx,_0cccc0_data
		jmp    _04baad_jump

	_04ba78_jump:
		xor    %eax,%eax
		mov    %ax,_0cccc0_data
		jmp    _04baad_jump

	_04ba82_jump:
		call   _040824_func
		test   %ax,%ax
		je     _04baaf_jump
		mov    _0cccc0_data,%bx
		test   %bx,%bx
		jle    _04baa4_jump
		mov    %ebx,%esi
		dec    %esi
		mov    %si,_0cccc0_data
		jmp    _04baad_jump

	_04baa4_jump:
		movw   $0x000003,_0cccc0_data

	_04baad_jump:
		mov    $0x000001,%bl

	_04baaf_jump:
		test   %bl,%bl
		je     _04bb3e_jump
		mov    _0cccbe_data,%eax
		sar    $0x000010,%eax
		mov    _096456_data(,%eax,2),%ecx
		mov    _09644e_data(,%eax,2),%ebx
		mov    _096446_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09643e_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05ac68_func
		jmp    _04bb3a_jump

	_04baee_jump:
		cmpw   $0x000006,_0ced06_data
		jne    _04bb3e_jump
		cmpb   $0x000000,_095b4b_data
		jne    _04bb3e_jump
		cmpb   $0x000000,_0cefd3_data
		je     _04bb3e_jump
		call   _036820_func
		test   %al,%al
		jne    _04bb27_jump
		call   _040824_func
		test   %ax,%ax
		jne    _04bb27_jump
		call   _0407b4_func
		test   %ax,%ax
		je     _04bb3e_jump

	_04bb27_jump:
		cmpw   $0x000000,_0cccc8_data
		sete   %al
		xor    %ah,%ah
		mov    %ax,_0cccc8_data

	_04bb3a_jump:
		movb   $0x000001,(%esp)

	_04bb3e_jump:
		cmpw   $0x000003,_0ced06_data
		jne    _04bc4f_jump
		call   _040894_func
		test   %ax,%ax
		jne    _04bc4f_jump
		call   _040904_func
		test   %ax,%ax
		jne    _04bc4f_jump
		cmpb   $0x000000,_0cefd3_data
		je     _04bc4f_jump
		cmpb   $0x000001,_095b15_data
		jne    _04bb93_jump
		mov    _0e3d3e_data,%al
		cmp    _0cccc2_data,%ax
		jge    _04bb93_jump
		dec    %eax
		mov    %ax,_0cccc2_data

	_04bb93_jump:
		call   _036820_func
		test   %al,%al
		jne    _04bba6_jump
		call   _040824_func
		test   %ax,%ax
		je     _04bbe3_jump

	_04bba6_jump:
		xor    %eax,%eax
		mov    _0cccc2_data,%si
		mov    _0e3d3e_data,%al
		cmp    %si,%ax
		jle    _04bbc4_jump
		mov    %esi,%eax
		inc    %eax
		mov    %ax,_0cccc2_data
		jmp    _04bbcd_jump

	_04bbc4_jump:
		xor    %edi,%edi
		mov    %di,_0cccc2_data

	_04bbcd_jump:
		xor    %eax,%eax
		mov    _0cccc2_data,%al
		mov    $0x000001,%cl
		call   _04766c_func
		mov    %cl,(%esp)
		jmp    _04bdcc_jump

	_04bbe3_jump:
		call   _0407b4_func
		test   %ax,%ax
		je     _04bdcc_jump
		cmpb   $0x000001,_095b15_data
		jne    _04bc14_jump
		xor    %eax,%eax
		mov    _0cccc2_data,%dx
		mov    _0e3d3e_data,%al
		cmp    %dx,%ax
		jge    _04bc14_jump
		dec    %eax
		mov    %ax,_0cccc2_data

	_04bc14_jump:
		mov    _0cccc2_data,%bx
		test   %bx,%bx
		jle    _04bc2c_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0cccc2_data
		jmp    _04bc39_jump

	_04bc2c_jump:
		xor    %eax,%eax
		mov    _0e3d3e_data,%al
		mov    %ax,_0cccc2_data

	_04bc39_jump:
		xor    %eax,%eax
		mov    _0cccc2_data,%al
		mov    $0x000001,%bh
		call   _04766c_func
		mov    %bh,(%esp)
		jmp    _04bdcc_jump

	_04bc4f_jump:
		mov    _0ced06_data,%cx
		cmp    $0x000004,%cx
		jl     _04bd9c_jump
		cmp    _0cecac_data,%cx
		jge    _04bd9c_jump
		cmp    $0x000006,%cx
		je     _04bd9c_jump
		cmpb   $0x000000,_0cefd3_data
		je     _04bd9c_jump
		call   _036820_func
		test   %al,%al
		jne    _04bca5_jump
		call   _040824_func
		test   %ax,%ax
		jne    _04bca5_jump
		call   _0407b4_func
		test   %ax,%ax
		je     _04bd9c_jump

	_04bca5_jump:
		mov    _0ced04_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000000,_0cccbc_data(,%eax,2)
		sete   %al
		xor    %ah,%ah
		mov    $0x000001,%ch
		mov    %eax,%edx
		mov    _0ced04_data,%eax
		mov    %ch,(%esp)
		sar    $0x000010,%eax
		mov    _0ced06_data,%cx
		mov    %dx,_0cccbc_data(,%eax,2)
		cmp    $0x000005,%cx
		jne    _04bdcc_jump
		cmpb   $0x000000,_095b4b_data
		jne    _04bdcc_jump
		mov    _0cccc6_data,%si
		test   %si,%si
		jne    _04bdcc_jump
		cmpw   $0x000000,_0cccbe_data
		jne    _04bdcc_jump
		mov    $0x000001,%eax
		mov    $0x000001,%dl
		mov    %ax,_0cccbe_data
		mov    %dl,_0e3d3e_data
		xor    %ah,%ah
		mov    _0cccc2_data,%dx
		mov    %ah,_0cef6d_data
		cmp    $0x000002,%dx
		jne    _04bd3d_jump
		mov    %si,_0cccc2_data

	_04bd3d_jump:
		mov    $0x000005,%ecx
		call   _04abf8_func
		mov    %cx,_0ced06_data
		call   _04afdc_func
		mov    _0cecaa_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0cecf6_data,%si
		mov    _0ca8ca_data(,%eax,8),%ax
		sub    %esi,%eax
		sub    $0x000024,%eax
		movswl %ax,%ecx
		mov    %esi,%eax
		add    $0x00000e,%eax
		mov    $0x00010e,%ebx
		movswl %ax,%edx
		mov    $0x000012,%eax
		call   _04e914_func
		jmp    _04bdcc_jump

	_04bd9c_jump:
		cmpw   $0x000001,_0ced06_data
		jne    _04bdcc_jump
		call   _036820_func
		test   %al,%al
		je     _04bdcc_jump
		cmpb   $0x000000,_0cefd3_data
		je     _04bdcc_jump
		mov    $0x00000a,%cl
		mov    $0x000001,%edx
		mov    %cl,_0cef8c_data
		mov    %dx,_0cecde_data

	_04bdcc_jump:
		cmpb   $0x000000,(%esp)
		je     _04bddd_jump
		call   _04d2e4_func
		mov    %ax,_0e3d32_data

	_04bddd_jump:
		call   _04d588_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04bdec_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cef8e_data
		jne    _04be94_jump
		mov    _0cccc0_data,%ax
		mov    %ax,_095b52_data
		mov    _0cccc2_data,%al
		mov    %al,_095b54_data
		mov    _0cccc4_data,%ax
		mov    %ax,_095b4e_data
		mov    _0cccc6_data,%al
		mov    %al,_095b55_data
		call   _047840_func
		mov    %al,_095b56_data
		mov    _0cccc8_data,%al
		mov    %al,_0cef6b_data
		mov    _0cccbe_data,%ax
		cmp    $0x000001,%ax
		jb     _04be54_jump
		jbe    _04be6f_jump
		cmp    $0x000002,%ax
		je     _04be82_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04be54_jump:
		test   %ax,%ax
		jne    _04befe_jump
		xor    %ah,%ah
		mov    %ah,_095b15_data
		mov    %ah,_0cef6d_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04be6f_jump:
		mov    $0x000001,%ch
		xor    %al,%al
		mov    %ch,_095b15_data
		mov    %al,_0cef6d_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04be82_jump:
		mov    $0x000001,%bh
		mov    %bh,_095b15_data
		mov    %bh,_0cef6d_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04be94_jump:
		xor    %dl,%dl
		mov    %dl,_096477_data
		cmpb   $0x000000,_095b15_data
		jne    _04beda_jump
		mov    _095b50_data,%eax
		sar    $0x000010,%eax
		mov    _096456_data(,%eax,2),%ecx
		mov    _09644e_data(,%eax,2),%ebx
		mov    _096446_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09643e_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05ac68_func

	_04beda_jump:
		mov    $0x000019,%eax
		call   _03c9a4_func
		xor    %eax,%eax
		mov    _095b54_data,%al
		call   _04766c_func
		cmpb   $0x000000,_095b4b_data
		jne    _04befe_jump
		call   _03b970_func

	_04befe_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04bf04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_04bf04_func,%edx
		mov    $_04c030_func,%ebx
		mov    $_04c2d4_func,%ecx
		mov    $_04c3d8_func,%esi
		mov    $_04c56c_func,%edi
		mov    $0x000001,%ah
		mov    %edx,_0e3cfc_data
		mov    %ebx,_0e3cf8_data
		mov    %ecx,_0e3d08_data
		mov    %esi,_0e3d04_data
		mov    %edi,_0e3d0c_data
		mov    %ah,_0cefd3_data
		mov    $0x000064,%ebx
		mov    $0x00000c,%ecx
		mov    $0x000006,%esi
		mov    $0x000003,%edi
		xor    %edx,%edx
		mov    $0x00000f,%eax
		mov    %dx,_0ced04_data
		mov    %bx,_0ced0a_data
		mov    %cx,_0cece6_data
		mov    %si,_0cecd4_data
		mov    %di,_0ced06_data
		mov    %di,_0cecf0_data
		xor    %dl,%dl
		mov    $0x000005,%ebx
		mov    %dl,_096475_data
		mov    $0x000044,%edx
		mov    %di,_0cecac_data
		call   _04d470_func
		xor    %ebx,%ebx
		mov    _095b15_data,%dh
		mov    %bx,_0cccbc_data
		mov    %bx,_0cccbe_data
		mov    %bx,_0cccc0_data
		test   %dh,%dh
		jne    _04bfd7_jump
		movw   $0x000001,_0cccbc_data
		jmp    _04bff9_jump

	_04bfd7_jump:
		cmp    $0x000001,%dh
		jne    _04bff0_jump
		cmpb   $0x000000,_0cef6d_data
		jne    _04bff0_jump
		movw   $0x000001,_0cccbe_data
		jmp    _04bff9_jump

	_04bff0_jump:
		movw   $0x000001,_0cccc0_data

	_04bff9_jump:
		mov    _0cef88_data,%al
		cmp    $0x000001,%al
		jb     _04c00a_jump
		jbe    _04c00e_jump
		cmp    $0x000002,%al
		je     _04c00e_jump
		jmp    _04c015_jump

	_04c00a_jump:
		test   %al,%al
		jne    _04c015_jump

	_04c00e_jump:
		movb   $0x00008c,_0e3d3c_data

	_04c015_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0e3d3c_data,%al
		sub    %eax,%edx
		mov    %dx,_0cecc4_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c030_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    $0x000002,%dl
		mov    $_0963cc_data,%edi
		mov    $_0ca7f8_data,%ebp
		mov    _0474c0_func,%eax
		mov    _0c26e4_data,%esi
		xor    %bl,%bl
		mov    %eax,0x000004(%esp)
		mov    %dl,_0cb064_data
		mov    %bl,_0cb065_data
		mov    $0x000001,%ah
		xor    %bh,%bh
		mov    %ah,_0cb067_data
		mov    %ah,_0cb066_data
		push   %edi

	_04c073_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c08b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04c073_jump

	_04c08b_jump:
		pop    %edi
		mov    _096475_data,%bl
		jmp    _04c16b_jump

	_04c097_jump:
		imul   $0x0000d8,%ecx,%edx
		movw   $0x0000a0,_0ca8c8_data(%edx)
		movb   $0x000002,_0ca8cc_data(%edx)
		mov    $0x000001,%ah
		mov    _0cecac_data,%si
		mov    %ah,_0ca8ce_data(%edx)
		xor    %al,%al
		lea    (%edx,%ebp,1),%edi
		mov    %al,_0ca8cd_data(%edx)
		cmp    %si,%bx
		jne    _04c105_jump
		mov    _0c2620_data,%esi
		push   %edi

	_04c0d3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c0eb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04c0d3_jump

	_04c0eb_jump:
		pop    %edi
		mov    _0cecfe_data,%ax
		mov    %ax,_0ca8ca_data(%edx)
		mov    0x000007(%esp),%al
		mov    %al,_0ca8cf_data(%edx)
		jmp    _04c15a_jump

	_04c105_jump:
		mov    _0c2734_data(,%ecx,4),%esi
		push   %edi

	_04c10d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c125_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04c10d_jump

	_04c125_jump:
		pop    %edi
		mov    0x000004(%esp,%ecx,1),%al
		mov    %al,_0ca8cf_data(%edx)
		xor    %eax,%eax
		mov    %ebx,%ecx
		mov    _096475_data,%al
		sub    %eax,%ecx
		mov    %ecx,%eax
		mov    _0ced00_data,%cx
		add    $0x00000f,%ecx
		imul   %ecx,%eax
		mov    _0ced14_data,%di
		add    %edi,%eax
		mov    %ax,_0ca8ca_data(%edx)

	_04c15a_jump:
		movswl %bx,%eax
		imul   $0x0000d8,%eax,%eax
		add    %ebp,%eax
		inc    %ebx
		call   _01ec48_func

	_04c16b_jump:
		xor    %eax,%eax
		mov    _0cecee_data,%edx
		mov    _096475_data,%al
		sar    $0x000010,%edx
		movswl %bx,%ecx
		add    %edx,%eax
		cmp    %eax,%ecx
		jle    _04c097_jump
		xor    %eax,%eax
		mov    _0e3d3c_data,%al
		mov    _0cecaa_data,%ecx
		add    %eax,%eax
		sar    $0x000010,%ecx
		mov    %ax,0x00000c(%esp)
		lea    0x000000(,%ecx,8),%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		sub    %ecx,%eax
		mov    _0cecc4_data,%dx
		mov    _0cecf6_data,%cx
		mov    _0ca8ca_data(,%eax,8),%ax
		mov    _0cecf6_data,%bx
		sub    %ecx,%eax
		mov    _0e3d2c_data,%si
		add    $0x000023,%eax
		sub    $0x000019,%ebx
		mov    %ax,0x000010(%esp)
		cmp    %si,%dx
		jge    _04c1e9_jump
		mov    %edx,%eax
		jmp    _04c1eb_jump

	_04c1e9_jump:
		mov    %esi,%eax

	_04c1eb_jump:
		mov    _0e3d30_data,%di
		cmp    %di,%bx
		jge    _04c1fb_jump
		mov    %ebx,%ecx
		jmp    _04c1fd_jump

	_04c1fb_jump:
		mov    %edi,%ecx

	_04c1fd_jump:
		mov    _0e3d2a_data,%esi
		mov    _0e3d32_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		add    %esi,%edi
		movswl %dx,%esi
		mov    %esi,(%esp)
		mov    0x00000a(%esp),%esi
		mov    (%esp),%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		cmp    %esi,%edi
		jle    _04c230_jump
		movswl %ax,%esi
		sub    %esi,%edi
		mov    %edi,%esi
		jmp    _04c235_jump

	_04c230_jump:
		movswl %ax,%edi
		sub    %edi,%esi

	_04c235_jump:
		mov    _0e3d2c_data,%ebp
		mov    %esi,%edi
		mov    _0e3d2e_data,%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		add    %esi,%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x00000e(%esp),%ebp
		sar    $0x000010,%ebp
		movswl %bx,%esi
		add    %ebp,%esi
		mov    0x000008(%esp),%ebp
		cmp    %ebp,%esi
		jge    _04c26c_jump
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi
		jmp    _04c271_jump

	_04c26c_jump:
		movswl %cx,%ebp
		sub    %ebp,%esi

	_04c271_jump:
		mov    %dx,_0e3d2c_data
		mov    0x00000c(%esp),%edx
		mov    %bx,_0e3d30_data
		mov    %dx,_0e3d34_data
		mov    0x000010(%esp),%edx
		mov    _095b4b_data,%bh
		mov    %dx,_0e3d2e_data
		test   %bh,%bh
		je     _04c2b6_jump
		push   $0x000001
		movswl %si,%edx
		movswl %di,%ebx
		cwtl   
		movswl %cx,%esi
		mov    %edx,%ecx
		mov    %esi,%edx
		call   _04e104_func
		jmp    _04c2c9_jump

	_04c2b6_jump:
		movswl %si,%edx
		movswl %di,%ebx
		cwtl   
		movswl %cx,%esi
		mov    %edx,%ecx
		mov    %esi,%edx
		call   _04e914_func

	_04c2c9_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c2d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		sub    $0x000008,%esp
		mov    $0x000001,%ecx
		mov    _0474c4_jump,%eax
		mov    $0x0000a0,%edx
		mov    %eax,(%esp)
		call   _03bcb4_func
		push   $0x000001
		mov    _0cecf4_data,%ebx
		mov    $_0963cc_data,%eax
		sar    $0x000010,%ebx
		call   _01a178_func
		mov    _096475_data,%al
		mov    %al,0x000004(%esp)
		jmp    _04c3b0_jump

	_04c315_jump:
		imul   $0x0000d8,%ebx,%eax
		mov    _0ca8c8_data(%eax),%dx
		mov    _0ca8ca_data(%eax),%cx
		cmp    $0x000003,%bl
		jae    _04c33d_jump
		cmpw   $0x000000,_0cccbc_data(,%ebx,2)
		je     _04c33d_jump
		mov    $0x000001,%bl
		jmp    _04c346_jump

	_04c33d_jump:
		xor    %ebx,%ebx
		mov    0x000004(%esp),%bl
		mov    (%esp,%ebx,1),%bl

	_04c346_jump:
		xor    %eax,%eax
		mov    _0ced06_data,%di
		mov    0x000004(%esp),%al
		cmp    %di,%ax
		je     _04c380_jump
		xor    %eax,%eax
		mov    %bl,%al
		push   %eax
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		imul   $0x0000d8,%eax,%eax
		movswl %dx,%edx
		movswl %cx,%ebx
		mov    $0x000002,%ecx
		add    $_0ca7f8_data,%eax
		call   _01a178_func
		jmp    _04c3ac_jump

	_04c380_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    %bl,_0ca8cf_data(%eax)
		mov    $_0ca7f8_data,%ebx
		add    %eax,%ebx
		mov    %ebx,%eax
		mov    $0x000001,%edx
		call   _01ec48_func
		mov    %ebx,%eax
		call   _04d608_func

	_04c3ac_jump:
		incb   0x000004(%esp)

	_04c3b0_jump:
		mov    _0cecee_data,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _096475_data,%al
		sar    $0x000010,%edx
		mov    0x000004(%esp),%bl
		add    %edx,%eax
		cmp    %eax,%ebx
		jle    _04c315_jump
		add    $0x000008,%esp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c3d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _04d544_func
		call   _036944_func
		test   %al,%al
		je     _04c3f2_jump
		movb   $0x000001,_0cef8e_data

	_04c3f2_jump:
		cmpb   $0x000000,_0cefd3_data
		jne    _04c42f_jump
		mov    _0ced04_data,%ax
		cmp    _0cece6_data,%ax
		jle    _04c4af_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04c4af_jump

	_04c42f_jump:
		call   _040904_func
		test   %ax,%ax
		je     _04c470_jump
		mov    $0x000044,%eax
		call   _06fa90_func
		xor    %eax,%eax
		mov    _0ced06_data,%si
		mov    _096475_data,%al
		cmp    %si,%ax
		jne    _04c464_jump
		mov    _0cecac_data,%ax
		mov    %ax,_0ced06_data
		jmp    _04c4af_jump

	_04c464_jump:
		mov    %esi,%edi
		dec    %edi
		mov    %di,_0ced06_data
		jmp    _04c4af_jump

	_04c470_jump:
		call   _040894_func
		test   %ax,%ax
		je     _04c4af_jump
		mov    $0x000044,%eax
		call   _06fa90_func
		mov    _0ced06_data,%ax
		mov    _0cecac_data,%bx
		cmp    %bx,%ax
		jne    _04c4a5_jump
		xor    %ebx,%eax
		mov    _096475_data,%al
		mov    %ax,_0ced06_data
		jmp    _04c4af_jump

	_04c4a5_jump:
		mov    %eax,%ecx
		inc    %ecx
		mov    %cx,_0ced06_data

	_04c4af_jump:
		mov    _0ced06_data,%ax
		test   %ax,%ax
		jl     _04c561_jump
		cmp    $0x000002,%ax
		jg     _04c561_jump
		cmpb   $0x000000,_0cefd3_data
		je     _04c561_jump
		call   _036820_func
		test   %al,%al
		jne    _04c4f2_jump
		call   _040824_func
		test   %ax,%ax
		jne    _04c4f2_jump
		call   _0407b4_func
		test   %ax,%ax
		je     _04c561_jump

	_04c4f2_jump:
		xor    %al,%al
		jmp    _04c4f8_jump

	_04c4f6_jump:
		inc    %al

	_04c4f8_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmpw   $0x000000,_0cccbc_data(,%edx,2)
		je     _04c4f6_jump
		xor    %edx,%edx
		mov    _0ced06_data,%cx
		mov    %al,%dl
		cmp    %cx,%dx
		je     _04c561_jump
		mov    _0ced04_data,%edx
		sar    $0x000010,%edx
		cmpw   $0x000000,_0cccbc_data(,%edx,2)
		sete   %dl
		xor    %dh,%dh
		mov    %edx,%ebx
		mov    _0ced04_data,%edx
		sar    $0x000010,%edx
		mov    %bx,_0cccbc_data(,%edx,2)
		xor    %edx,%edx
		mov    %al,%dl
		cmpw   $0x000000,_0cccbc_data(,%edx,2)
		sete   %dl
		xor    %dh,%dh
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %bx,_0cccbc_data(,%edx,2)

	_04c561_jump:
		call   _04d588_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c56c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cef8e_data,%ah
		test   %ah,%ah
		jne    _04c5e6_jump
		cmpw   $0x000000,_0cccbc_data
		je     _04c59d_jump
		mov    $0x000001,%bl
		mov    %ah,_095b15_data
		mov    %ah,_0cef6d_data
		mov    %bl,_095b55_data
		jmp    _04c5e6_jump

	_04c59d_jump:
		cmpw   $0x000000,_0cccbe_data
		je     _04c5c0_jump
		mov    $0x000001,%cl
		mov    %ah,_0cef6d_data
		mov    _095b54_data,%al
		mov    %cl,_095b15_data
		cmp    $0x000002,%al
		jne    _04c5e6_jump
		jmp    _04c5d9_jump

	_04c5c0_jump:
		mov    $0x000001,%dl
		mov    _095b54_data,%bl
		mov    %dl,_095b15_data
		mov    %dl,_0cef6d_data
		cmp    $0x000002,%bl
		jne    _04c5e6_jump

	_04c5d9_jump:
		mov    %ah,_095b54_data
		xor    %eax,%eax
		call   _04766c_func

	_04c5e6_jump:
		movb   $0x000009,_0cef8c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c5f4_func:
		push   %esi
		push   %edi
		movw   $0x0000c8,(%eax)
		mov    $_0cc220_data,%edi
		movw   $0x000000,(%edx)
		mov    _0c26f8_data,%esi
		movw   $0x0000c8,(%ebx)
		mov    $0x0000a0,%edx
		movw   $0x000000,(%ecx)
		mov    $0x000046,%ecx
		mov    $0x000024,%ebx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000001,%ah
		mov    %dx,_0cc2f0_data
		mov    %bx,_0cc2f2_data
		mov    %ah,_0cc2f4_data
		xor    %dl,%dl
		mov    %ah,_0cc2f6_data
		mov    %dl,_0cc2f5_data
		mov    %edi,%eax
		mov    %dl,_0cc2f7_data
		call   _01ec48_func
		pop    %edi
		pop    %esi
		ret    



_04c668_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		call   _03bcb4_func
		cmpb   $0x000000,_095b4b_data
		je     _04c6a4_jump
		mov    _0e3d2c_data,%ecx
		mov    _0e3d32_data,%ebx
		mov    _0e3d2e_data,%edx
		mov    _0e3d2a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024538_func

	_04c6a4_jump:
		mov    $0x000001,%edx
		mov    $_0cc220_data,%eax
		mov    $0x000001,%ecx
		mov    $0x000062,%ebx
		call   _04d608_func
		push   $0x000005
		mov    $0x00009b,%edx
		mov    $_0c0d1c_data,%eax
		call   _01a178_func
		xor    %dl,%dl
		mov    %dl,0x00000c(%esp)

	_04c6d4_jump:
		xor    %ebx,%ebx
		push   $0x000005
		mov    0x000010(%esp),%bl
		mov    $0x000001,%ecx
		shl    $0x000003,%ebx
		mov    $0x000096,%edx
		add    $0x00004a,%ebx
		mov    $_0c0ce4_data,%eax
		movswl %bx,%ebx
		call   _01a178_func
		mov    0x00000c(%esp),%dh
		inc    %dh
		mov    %dh,0x00000c(%esp)
		cmp    $0x000007,%dh
		jb     _04c6d4_jump
		mov    _0cec9e_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esp,%edx
		mov    $0x000002,%ecx
		call   _07ce3e_func
		push   $0x000005
		mov    $0x000062,%ebx
		mov    $0x0000c6,%edx
		lea    0x000004(%esp),%eax
		call   _01a178_func
		mov    _0ceca6_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esp,%edx
		mov    $0x000002,%ecx
		call   _07ce3e_func
		push   $0x000005
		mov    $0x000062,%ebx
		mov    $0x000069,%edx
		lea    0x000004(%esp),%eax
		call   _01a178_func
		mov    _0ceca8_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esp,%edx
		mov    $0x000002,%ecx
		call   _07ce3e_func
		push   $0x000005
		mov    $0x000040,%ebx
		mov    $0x000096,%edx
		lea    0x000004(%esp),%eax
		call   _01a178_func
		mov    _0ceca0_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esp,%edx
		mov    $0x000002,%ecx
		call   _07ce3e_func
		push   $0x000005
		mov    $0x00008a,%ebx
		mov    $0x000096,%edx
		lea    0x000004(%esp),%eax
		call   _01a178_func
		push   $0x000005
		mov    $0x000002,%ecx
		mov    $0x0000a0,%ebx
		mov    _0c25d0_data,%eax
		mov    %ebx,%edx
		call   _01a178_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c800_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $_0cecaa_data,%ecx
		mov    $_0ceca2_data,%ebx
		mov    $_0ceca8_data,%edx
		mov    $_0ceca0_data,%eax
		call   _040c0c_func
		call   _04c668_func
		call   _036820_func
		xor    %ah,%ah
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c82c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		call   _03bcb4_func
		cmpb   $0x000000,_095b4b_data
		je     _04c868_jump
		mov    _0e3d2c_data,%ecx
		mov    _0e3d32_data,%ebx
		mov    _0e3d2e_data,%edx
		mov    _0e3d2a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024538_func

	_04c868_jump:
		mov    $0x000001,%edx
		mov    $_0cc220_data,%eax
		mov    $0x000002,%ecx
		mov    $0x000064,%ebx
		call   _04d608_func
		push   $0x000005
		mov    $0x0000a0,%edx
		mov    _0c25cc_data,%eax
		call   _01a178_func
		mov    _0ceca4_data,%edx
		sar    $0x000010,%edx
		mov    $0x000014,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00000a,%ebx
		mov    %esp,%edx
		add    %eax,%eax
		mov    $0x000002,%ecx
		call   _07ce3e_func
		push   $0x000005
		mov    $0x000078,%ebx
		mov    $0x000082,%edx
		lea    0x000004(%esp),%eax
		call   _01a178_func
		mov    _0ceca2_data,%edx
		sar    $0x000010,%edx
		mov    $0x000014,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00000a,%ebx
		mov    %esp,%edx
		add    %eax,%eax
		mov    $0x000002,%ecx
		call   _07ce3e_func
		push   $0x000005
		mov    $0x000078,%ebx
		mov    $0x0000b4,%edx
		lea    0x000004(%esp),%eax
		call   _01a178_func
		push   $0x000005
		mov    $0x000002,%ecx
		mov    $0x0000a0,%ebx
		mov    _0c25d4_data,%eax
		mov    %ebx,%edx
		call   _01a178_func
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c92c_func:
		push   %edx
		mov    $_0ceca4_data,%edx
		mov    $_0ceca6_data,%eax
		call   _040c54_func
		call   _04c82c_func
		call   _036820_func
		xor    %ah,%ah
		pop    %edx
		ret    



_04c94c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		cmpl   $0x000000,_0e3d10_data
		je     _04c9d5_jump
		xor    %edx,%edx
		call   *_0e3d10_data
		mov    _0cefd7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7498_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e33ec_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cefd7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7498_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0c7198_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		call   _023a7c_func

	_04c9d5_jump:
		mov    $_0ceca2_data,%ecx
		mov    $_0cecaa_data,%ebx
		mov    $_0ceca0_data,%edx
		mov    $_0ceca8_data,%eax
		call   _04c5f4_func
		cmpb   $0x000000,_095b4b_data
		jne    _04ca01_jump
		call   _03b920_func
		jmp    _04cb6d_jump

	_04ca01_jump:
		mov    _0cef88_data,%al
		cmp    $0x000001,%al
		jb     _04ca15_jump
		jbe    _04ca46_jump
		cmp    $0x000002,%al
		je     _04ca6f_jump
		jmp    _04ca96_jump

	_04ca15_jump:
		test   %al,%al
		jne    _04ca96_jump
		mov    $0x000046,%ecx
		mov    $0x000008,%esi
		mov    $0x0000b0,%edi
		mov    $0x0000be,%eax
		mov    %cx,(%esp)
		mov    %si,0x00000c(%esp)
		mov    %di,0x000008(%esp)
		mov    %ax,0x000004(%esp)
		jmp    _04ca96_jump

	_04ca46_jump:
		mov    $0x000039,%edi
		mov    $0x000008,%eax
		mov    $0x0000c8,%edx
		mov    $0x0000be,%ebx
		mov    %di,(%esp)
		mov    %ax,0x00000c(%esp)
		mov    %dx,0x000008(%esp)
		mov    %bx,0x000004(%esp)
		jmp    _04ca96_jump

	_04ca6f_jump:
		mov    $0x000032,%edx
		mov    $0x000008,%ebx
		mov    $0x0000d8,%ecx
		mov    $0x0000be,%esi
		mov    %dx,(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000008(%esp)
		mov    %si,0x000004(%esp)

	_04ca96_jump:
		mov    (%esp),%edx
		mov    _0e3d2c_data,%ax
		cmp    %dx,%ax
		jle    _04caa6_jump
		mov    %edx,%eax

	_04caa6_jump:
		mov    0x00000c(%esp),%ebx
		mov    _0e3d30_data,%dx
		cmp    %bx,%dx
		jle    _04cab8_jump
		mov    %ebx,%edx

	_04cab8_jump:
		mov    _0e3d2a_data,%ecx
		mov    _0e3d32_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x000006(%esp),%esi
		add    %ecx,%ebx
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		add    %esi,%ecx
		cmp    %ecx,%ebx
		jle    _04cae9_jump
		movswl %ax,%ecx
		sub    %ecx,%ebx
		mov    %ebx,%ecx
		jmp    _04caee_jump

	_04cae9_jump:
		movswl %ax,%ebx
		sub    %ebx,%ecx

	_04caee_jump:
		mov    _0e3d2c_data,%ebx
		mov    %ecx,%esi
		mov    _0e3d2e_data,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%ecx
		mov    0x000002(%esp),%edi
		add    %ebx,%ecx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%edi
		sar    $0x000010,%ebx
		add    %edi,%ebx
		cmp    %ebx,%ecx
		jle    _04cb21_jump
		movswl %dx,%ebx
		sub    %ebx,%ecx
		mov    %ecx,%ebx
		jmp    _04cb26_jump

	_04cb21_jump:
		movswl %dx,%ecx
		sub    %ecx,%ebx

	_04cb26_jump:
		mov    (%esp),%ecx
		mov    %cx,_0e3d2c_data
		mov    0x00000c(%esp),%ecx
		mov    %cx,_0e3d30_data
		mov    0x000008(%esp),%ecx
		push   $0x000001
		mov    %cx,_0e3d34_data
		mov    0x000008(%esp),%ecx
		movswl %dx,%edx
		mov    %cx,_0e3d2e_data
		mov    $_04c668_func,%ecx
		cwtl   
		mov    %ecx,_0e3d08_data
		movswl %bx,%ecx
		movswl %si,%ebx
		call   _04e104_func

	_04cb6d_jump:
		mov    $_04c800_func,%eax
		call   _03b9e8_func
		cmpb   $0x000000,_095b4b_data
		jne    _04cb8f_jump
		call   _03b970_func
		call   _03b920_func
		jmp    _04ccfb_jump

	_04cb8f_jump:
		mov    _0cef88_data,%al
		cmp    $0x000001,%al
		jb     _04cba3_jump
		jbe    _04cbd4_jump
		cmp    $0x000002,%al
		je     _04cbfd_jump
		jmp    _04cc24_jump

	_04cba3_jump:
		test   %al,%al
		jne    _04cc24_jump
		mov    $0x000046,%edi
		mov    $0x000008,%eax
		mov    $0x0000b0,%edx
		mov    $0x0000af,%ebx
		mov    %di,(%esp)
		mov    %ax,0x00000c(%esp)
		mov    %dx,0x000008(%esp)
		mov    %bx,0x000004(%esp)
		jmp    _04cc24_jump

	_04cbd4_jump:
		mov    $0x00003d,%edx
		mov    $0x000008,%ebx
		mov    $0x0000c2,%ecx
		mov    $0x0000af,%esi
		mov    %dx,(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000008(%esp)
		mov    %si,0x000004(%esp)
		jmp    _04cc24_jump

	_04cbfd_jump:
		mov    $0x000032,%ecx
		mov    $0x000008,%esi
		mov    $0x0000d7,%edi
		mov    $0x0000af,%eax
		mov    %cx,(%esp)
		mov    %si,0x00000c(%esp)
		mov    %di,0x000008(%esp)
		mov    %ax,0x000004(%esp)

	_04cc24_jump:
		mov    (%esp),%ecx
		mov    _0e3d2c_data,%ax
		cmp    %cx,%ax
		jle    _04cc34_jump
		mov    %ecx,%eax

	_04cc34_jump:
		mov    0x00000c(%esp),%esi
		mov    _0e3d30_data,%dx
		cmp    %si,%dx
		jle    _04cc46_jump
		mov    %esi,%edx

	_04cc46_jump:
		mov    _0e3d2a_data,%ecx
		mov    _0e3d32_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    -0x000002(%esp),%esi
		add    %ebx,%ecx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%esi
		sar    $0x000010,%ebx
		add    %esi,%ebx
		cmp    %ebx,%ecx
		jle    _04cc77_jump
		movswl %ax,%ebx
		sub    %ebx,%ecx
		mov    %ecx,%ebx
		jmp    _04cc7c_jump

	_04cc77_jump:
		movswl %ax,%ecx
		sub    %ecx,%ebx

	_04cc7c_jump:
		mov    _0e3d2c_data,%ecx
		mov    %ebx,%esi
		mov    _0e3d2e_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x00000a(%esp),%edi
		add    %ecx,%ebx
		mov    0x000002(%esp),%ecx
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		add    %edi,%ecx
		cmp    %ecx,%ebx
		jle    _04ccad_jump
		movswl %dx,%ecx
		sub    %ecx,%ebx
		jmp    _04ccb4_jump

	_04ccad_jump:
		movswl %dx,%ebx
		sub    %ebx,%ecx
		mov    %ecx,%ebx

	_04ccb4_jump:
		mov    (%esp),%ecx
		mov    $_04c82c_func,%edi
		mov    %cx,_0e3d2c_data
		mov    0x00000c(%esp),%ecx
		push   $0x000001
		mov    %cx,_0e3d30_data
		mov    0x00000c(%esp),%ecx
		movswl %dx,%edx
		mov    %cx,_0e3d34_data
		mov    0x000008(%esp),%ecx
		cwtl   
		mov    %cx,_0e3d2e_data
		movswl %bx,%ecx
		movswl %si,%ebx
		mov    %edi,_0e3d08_data
		call   _04e104_func

	_04ccfb_jump:
		mov    $_04c92c_func,%eax
		call   _03b9e8_func
		cmpb   $0x000000,_095b4b_data
		jne    _04cd1d_jump
		call   _03b970_func
		call   _03b920_func
		jmp    _04ce91_jump

	_04cd1d_jump:
		mov    _0cef88_data,%al
		cmp    $0x000001,%al
		jb     _04cd31_jump
		jbe    _04cd62_jump
		cmp    $0x000002,%al
		je     _04cd8b_jump
		jmp    _04cdb2_jump

	_04cd31_jump:
		test   %al,%al
		jne    _04cdb2_jump
		mov    $0x00003c,%edx
		mov    $0x000008,%ebx
		mov    $0x0000c0,%ecx
		mov    $0x0000bb,%esi
		mov    %dx,(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000008(%esp)
		mov    %si,0x000004(%esp)
		jmp    _04cdb2_jump

	_04cd62_jump:
		mov    $0x00003c,%ecx
		mov    $0x000008,%esi
		mov    $0x0000c0,%edi
		mov    $0x0000bb,%eax
		mov    %cx,(%esp)
		mov    %si,0x00000c(%esp)
		mov    %di,0x000008(%esp)
		mov    %ax,0x000004(%esp)
		jmp    _04cdb2_jump

	_04cd8b_jump:
		mov    $0x000032,%edi
		mov    $0x000008,%eax
		mov    $0x0000d6,%edx
		mov    $0x0000be,%ebx
		mov    %di,(%esp)
		mov    %ax,0x00000c(%esp)
		mov    %dx,0x000008(%esp)
		mov    %bx,0x000004(%esp)

	_04cdb2_jump:
		mov    (%esp),%edi
		mov    _0e3d2c_data,%ax
		cmp    %di,%ax
		jle    _04cdc4_jump
		mov    %edi,%ebx
		jmp    _04cdc6_jump

	_04cdc4_jump:
		mov    %eax,%ebx

	_04cdc6_jump:
		mov    0x00000c(%esp),%edx
		mov    _0e3d30_data,%ax
		cmp    %dx,%ax
		jg     _04cdd7_jump
		mov    %eax,%edx

	_04cdd7_jump:
		mov    _0e3d2a_data,%ecx
		mov    _0e3d32_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		mov    0x000006(%esp),%esi
		add    %ecx,%eax
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		add    %esi,%ecx
		cmp    %ecx,%eax
		jle    _04ce07_jump
		movswl %bx,%ecx
		sub    %ecx,%eax
		mov    %eax,%ecx
		jmp    _04ce0c_jump

	_04ce07_jump:
		movswl %bx,%eax
		sub    %eax,%ecx

	_04ce0c_jump:
		mov    _0e3d2c_data,%eax
		mov    %ecx,%esi
		mov    _0e3d2e_data,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		mov    0x000002(%esp),%edi
		add    %ecx,%eax
		mov    0x00000a(%esp),%ecx
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		add    %edi,%ecx
		cmp    %ecx,%eax
		jle    _04ce3e_jump
		movswl %dx,%ecx
		sub    %ecx,%eax
		mov    %eax,%ecx
		jmp    _04ce43_jump

	_04ce3e_jump:
		movswl %dx,%eax
		sub    %eax,%ecx

	_04ce43_jump:
		mov    (%esp),%eax
		mov    %ax,_0e3d2c_data
		mov    0x00000c(%esp),%eax
		mov    $_049e88_func,%ebp
		mov    %ax,_0e3d30_data
		mov    0x000008(%esp),%eax
		movswl %cx,%ecx
		mov    %ax,_0e3d34_data
		mov    0x000004(%esp),%eax
		movswl %dx,%edx
		mov    %ax,_0e3d2e_data
		call   _049d2c_func
		push   $0x000001
		movswl %si,%eax
		movswl %bx,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		mov    %ebp,_0e3d08_data
		call   _04e104_func

	_04ce91_jump:
		push   $_0ceca4_data
		mov    $_0cecaa_data,%ecx
		mov    $_0ceca2_data,%ebx
		mov    $_0ceca8_data,%edx
		mov    _0e3d0c_data,%eax
		push   $_0ceca6_data
		mov    %eax,_0e3d00_data
		mov    $_0ceca0_data,%eax
		call   _040c90_func
		mov    $_049ccc_func,%eax
		mov    _095b4b_data,%bl
		mov    %eax,_0e3cfc_data
		test   %bl,%bl
		jne    _04ced9_jump
		call   _04d0f4_func
		jmp    _04cede_jump

	_04ced9_jump:
		call   _04d0bc_func

	_04cede_jump:
		mov    _0e3d00_data,%eax
		mov    _095b4b_data,%bh
		mov    %eax,_0e3d0c_data
		test   %bh,%bh
		jne    _04cf08_jump
		call   _03b970_func
		call   _04a2e8_func
		call   _04a3e8_func
		call   _03b920_func
		jmp    _04cf12_jump

	_04cf08_jump:
		call   _04a2e8_func
		call   _04a3e8_func

	_04cf12_jump:
		cmpl   $0x000000,_0e3d10_data
		je     _04cf50_jump
		xor    %edx,%edx
		mov    _0cefd7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7498_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e33ec_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_04cf50_jump:
		call   _03636c_jump
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04cf60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _040c04_func
		cmpb   $0x000000,_095b9a_data
		je     _04cfc6_jump
		mov    _0cec9e_data,%ax
		cmp    _0ceca8_data,%ax
		jge    _04cf8b_jump
		mov    $0x000001,%dl
		mov    %ax,_0ceca8_data
		jmp    _04cf9c_jump

	_04cf8b_jump:
		cmp    _0ceca0_data,%ax
		jle    _04cf9c_jump
		mov    $0x000001,%dl
		mov    %ax,_0ceca0_data

	_04cf9c_jump:
		mov    _0cec9c_data,%ax
		cmp    _0cecaa_data,%ax
		jge    _04cfb5_jump
		mov    $0x000001,%dl
		mov    %ax,_0cecaa_data
		jmp    _04cfc6_jump

	_04cfb5_jump:
		cmp    _0ceca2_data,%ax
		jle    _04cfc6_jump
		mov    $0x000001,%dl
		mov    %ax,_0ceca2_data

	_04cfc6_jump:
		test   %dl,%dl
		je     _04cfed_jump
		push   $_0ceca4_data
		mov    $_0cecaa_data,%ecx
		mov    $_0ceca2_data,%ebx
		push   $_0ceca6_data
		mov    $_0ceca8_data,%edx
		mov    $_0ceca0_data,%eax
		call   _040c90_func

	_04cfed_jump:
		cmpl   $0x000000,_0e3d08_data
		je     _04cffc_jump
		call   *_0e3d08_data

	_04cffc_jump:
		cmpb   $0x000000,_095b99_data
		je     _04d026_jump
		xor    %dh,%dh
		mov    %dh,_095b99_data
		call   _016dee_func
		call   _016dde_func
		mov    $0x000001,%eax
		call   _023a7c_func
		call   _03a340_func

	_04d026_jump:
		cmpb   $0x000000,_0cefd1_data
		jne    _04d04c_jump
		mov    _0cecde_data,%ax
		test   %ax,%ax
		jne    _04d04c_jump
		cmpb   $0x000000,_0cef8e_data
		jne    _04d04c_jump
		cmpb   $0x000000,_0cef89_data
		je     _04d051_jump

	_04d04c_jump:
		mov    $0x000001,%eax

	_04d051_jump:
		mov    %eax,%edx
		test   %ax,%ax
		jne    _04d0b4_jump
		cmpl   $0x000000,_0e3d04_data
		je     _04d071_jump
		cmpw   $0x000000,_0cee32_data
		jne    _04d071_jump
		call   *_0e3d04_data

	_04d071_jump:
		call   _036820_func
		test   %al,%al
		je     _04d09f_jump
		mov    _0ced06_data,%ax
		cmp    _0cecac_data,%ax
		jne    _04d09f_jump
		mov    $0x000001,%esi
		mov    $0x000045,%eax
		mov    %si,_0cecde_data
		call   _06fa90_func

	_04d09f_jump:
		cmpb   $0x000000,_0cef8e_data
		je     _04d0b2_jump
		mov    $0x00004d,%eax
		call   _06fa90_func

	_04d0b2_jump:
		mov    %edx,%eax

	_04d0b4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04d0bc_func:
		cmpl   $0x000000,_0e3cfc_data
		je     _04d0cb_jump
		call   *_0e3cfc_data

	_04d0cb_jump:
		cmpl   $0x000000,_0e3cf8_data
		je     _04d0da_jump
		call   *_0e3cf8_data

	_04d0da_jump:
		mov    $_04cf60_func,%eax
		call   _03b9e8_func
		cmpl   $0x000000,_0e3d0c_data
		je     _04d0f3_jump
		call   *_0e3d0c_data

	_04d0f3_jump:
		ret    



_04d0f4_func:
		push   %ecx
		push   %esi
		push   %edi
		cmpl   $0x000000,_0e3cfc_data
		je     _04d106_jump
		call   *_0e3cfc_data

	_04d106_jump:
		cmpl   $0x000000,_0e3cf8_data
		je     _04d115_jump
		call   *_0e3cf8_data

	_04d115_jump:
		cmpl   $0x000000,_0e3d10_data
		je     _04d124_jump
		call   *_0e3d10_data

	_04d124_jump:
		cmpw   $0x000001,_0cede4_data
		jne    _04d138_jump
		cmpw   $0x000009,_0cedd0_data
		je     _04d174_jump

	_04d138_jump:
		cmpw   $0x000002,_0cede4_data
		jne    _04d14c_jump
		cmpw   $0x000004,_0cedd0_data
		je     _04d174_jump

	_04d14c_jump:
		cmpw   $0x000004,_0cede4_data
		jne    _04d160_jump
		cmpw   $0x000009,_0cedd0_data
		je     _04d174_jump

	_04d160_jump:
		cmpw   $0x000005,_0cede4_data
		jne    _04d19d_jump
		cmpw   $0x000004,_0cedd0_data
		jne    _04d19d_jump

	_04d174_jump:
		mov    _0cec96_data,%esi
		sar    $0x000010,%esi
		lea    0x000000(,%esi,4),%eax
		mov    $0x000300,%ecx
		sub    %esi,%eax
		mov    _0ccd88_data,%esi
		shl    $0x000008,%eax
		mov    $_0e33ec_data,%edi
		add    %eax,%esi
		jmp    _04d1f5_jump

	_04d19d_jump:
		movzbl _0cefd7_data,%esi
		lea    0x000000(,%esi,4),%eax
		mov    $0x000300,%ecx
		sub    %esi,%eax
		mov    $_0c7498_data,%esi
		shl    $0x000008,%eax
		mov    $_0e33ec_data,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		movzbl _0cefd7_data,%esi
		lea    0x000000(,%esi,4),%eax
		mov    $_0c7498_data,%edi
		sub    %esi,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0c7198_data,%esi
		add    %eax,%edi

	_04d1f5_jump:
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _024690_func
		xor    %eax,%eax
		call   _023a7c_func
		mov    $_04cf60_func,%eax
		call   _03b9e8_func
		cmpl   $0x000000,_0e3d0c_data
		je     _04d22a_jump
		call   *_0e3d0c_data

	_04d22a_jump:
		movzbl _0cefd7_data,%esi
		lea    0x000000(,%esi,4),%eax
		mov    $_0c7498_data,%edi
		sub    %esi,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e33ec_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04d264_func:
		push   %ebx
		push   %edx
		xor    %eax,%eax

	_04d268_jump:
		movswl %ax,%edx
		mov    _095b28_data(,%edx,4),%ebx
		mov    (%ebx),%bl
		inc    %eax
		mov    %bl,_095b44_data(%edx)
		cmp    $0x000007,%ax
		jl     _04d268_jump
		mov    _095b28_data,%edx
		movb   $0x00004b,(%edx)
		mov    _095b2c_data,%edx
		movb   $0x000048,(%edx)
		mov    _095b30_data,%edx
		movb   $0x00004d,(%edx)
		mov    _095b34_data,%edx
		movb   $0x000050,(%edx)
		mov    _095b38_data,%edx
		movb   $0x00001d,(%edx)
		mov    _095b3c_data,%edx
		movb   $0x000038,(%edx)
		mov    _095b40_data,%edx
		movb   $0x000032,(%edx)
		pop    %edx
		pop    %ebx
		ret    



_04d2c4_func:
		push   %ebx
		push   %edx
		xor    %eax,%eax

	_04d2c8_jump:
		movswl %ax,%edx
		mov    _095b28_data(,%edx,4),%ebx
		mov    _095b44_data(%edx),%dl
		inc    %eax
		mov    %dl,(%ebx)
		cmp    $0x000007,%ax
		jl     _04d2c8_jump
		pop    %edx
		pop    %ebx
		ret    



_04d2e4_func:
		push   %ebx
		push   %edx
		push   %edi
		cmpw   $0x000000,_0cccbe_data
		jne    _04d39f_jump
		cmpw   $0x000002,_0cccc2_data
		jne    _04d306_jump
		xor    %eax,%eax
		jmp    _04d438_jump

	_04d306_jump:
		mov    _0cccc0_data,%edx
		sar    $0x000010,%edx
		mov    _0cccc4_data,%di
		mov    _095b88_data(,%edx,2),%ax
		shl    $0x000003,%edx
		test   %di,%di
		je     _04d339_jump
		mov    _0cccbe_data,%ebx
		sar    $0x000010,%ebx
		add    _095b58_data(%edx,%ebx,2),%ax
		jmp    _04d34a_jump

	_04d339_jump:
		mov    _0cccbe_data,%ebx
		sar    $0x000010,%ebx
		add    _095b68_data(%edx,%ebx,2),%ax

	_04d34a_jump:
		cmpw   $0x000000,_0cccc8_data
		je     _04d37e_jump
		mov    _0cccc0_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,8),%ebx
		mov    _0cccbe_data,%edx
		sar    $0x000010,%edx
		mov    _095b78_data(%ebx,%edx,2),%dx
		add    %edx,%edx
		add    %edx,%eax
		jmp    _04d438_jump

	_04d37e_jump:
		mov    _0cccbe_data,%ebx
		mov    _0cccc0_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %ebx,%ebx
		add    _095b78_data(%ebx,%edx,8),%ax
		jmp    _04d438_jump

	_04d39f_jump:
		cmpb   $0x000000,_0cef6d_data
		jne    _04d3f2_jump
		mov    _0cccc0_data,%eax
		sar    $0x000010,%eax
		mov    _095b92_data(,%eax,2),%edx
		sar    $0x000010,%edx
		mov    %edx,%ebx
		sar    %ebx
		movswl %bx,%eax
		mov    _0cccc4_data,%di
		add    %ebx,%eax
		test   %di,%di
		je     _04d3d5_jump
		sar    $0x000003,%edx
		cwtl   
		add    %edx,%eax

	_04d3d5_jump:
		cmpw   $0x000000,_0cccc6_data
		je     _04d438_jump
		mov    _0cccc0_data,%edx
		sar    $0x000010,%edx
		add    _095b8c_data(,%edx,2),%ax
		jmp    _04d438_jump

	_04d3f2_jump:
		mov    _0cccc0_data,%eax
		sar    $0x000010,%eax
		mov    _095b92_data(,%eax,2),%edx
		sar    $0x000010,%edx
		mov    %edx,%ebx
		sar    %ebx
		movswl %bx,%eax
		add    %ebx,%eax
		cmpw   $0x000000,_0cccc4_data
		je     _04d41d_jump
		sar    $0x000003,%edx
		cwtl   
		add    %edx,%eax

	_04d41d_jump:
		cmpw   $0x000000,_0cccc6_data
		je     _04d438_jump
		mov    _0cccc0_data,%edx
		sar    $0x000010,%edx
		add    _095b90_data(,%edx,2),%ax

	_04d438_jump:
		cmpw   $0x000100,_0e3d32_data
		jle    _04d44c_jump
		mov    $0x000080,%eax
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    

	_04d44c_jump:
		cmp    $0x000080,%ax
		jge    _04d45b_jump
		mov    $0x000100,%eax
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    

	_04d45b_jump:
		mov    $0x000100,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		add    $0x000080,%eax
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    



_04d470_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		mov    %ebx,%edi
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000064,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		mov    %eax,%ebx
		sub    %edx,%eax
		sar    %eax
		add    $0x00000b,%eax
		movswl %cx,%edx
		mov    %ax,_0cecf6_data
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000064,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    _0cecee_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ecx
		mov    %esi,%eax
		shl    $0x000004,%eax
		mov    %ecx,%edx
		sub    %esi,%eax
		sub    %eax,%edx
		inc    %esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%esi
		mov    %ax,_0ced00_data
		cwtl   
		add    $0x00000f,%eax
		add    %ebx,%eax
		movswl %di,%edx
		mov    %ax,_0ced14_data
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000064,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		add    $0x00000b,%eax
		add    %ebx,%eax
		xor    %edx,%edx
		add    %eax,%ecx
		mov    %dx,_0cecde_data
		mov    %cx,_0cecfe_data
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04d544_func:
		push   %edx
		mov    _0ced04_data,%dx
		cmp    _0ced0a_data,%dx
		jge    _04d561_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _04d561_jump
		inc    %edx
		jmp    _04d57d_jump

	_04d561_jump:
		cmpb   $0x000000,_0cefd3_data
		jne    _04d57b_jump
		mov    _0cece6_data,%dx
		inc    %edx
		mov    %dx,_0ced04_data
		pop    %edx
		ret    

	_04d57b_jump:
		xor    %edx,%edx

	_04d57d_jump:
		mov    %dx,_0ced04_data
		pop    %edx
		ret    



_04d588_func:
		push   %edx
		call   _040904_func
		test   %ax,%ax
		jne    _04d5fc_jump
		call   _040894_func
		test   %ax,%ax
		jne    _04d5fc_jump
		call   _040824_func
		test   %ax,%ax
		jne    _04d5fc_jump
		call   _0407b4_func
		test   %ax,%ax
		jne    _04d5fc_jump
		call   _040974_func
		test   %ax,%ax
		jne    _04d5e4_jump
		call   _040a00_func
		test   %ax,%ax
		jne    _04d5e4_jump
		call   _040a8c_func
		test   %ax,%ax
		jne    _04d5e4_jump
		call   _040b18_func
		test   %ax,%ax
		jne    _04d5e4_jump
		mov    $0x000001,%eax
		jmp    _04d5e6_jump

	_04d5e4_jump:
		xor    %eax,%eax

	_04d5e6_jump:
		test   %eax,%eax
		je     _04d5fc_jump
		movb   $0x000001,_0cefd3_data
		xor    %edx,%edx
		mov    %dx,_0ced04_data
		pop    %edx
		ret    

	_04d5fc_jump:
		xor    %ah,%ah
		mov    %ah,_0cefd3_data
		pop    %edx
		ret    



_04d608_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		cmpb   $0x000000,_096474_data
		jne    _04d64f_jump
		mov    0x0000cc(%esi),%ecx
		xor    %eax,%eax
		mov    0x0000ca(%esi),%ebx
		mov    %dl,%al
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		mov    0x0000c8(%esi),%edx
		mov    0x0000c6(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _023c9c_func
		mov    %esi,%eax
		call   _01a830_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_04d64f_jump:
		mov    0x0000d0(%esi),%ebx
		mov    0x0000ce(%esi),%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x0000d7(%esi),%al
		sar    $0x000010,%edx
		push   %eax
		mov    0x0000d4(%esi),%cl
		mov    %esi,%eax
		call   _01a178_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04d680_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x0000cc(%eax),%ecx
		mov    0x0000ca(%eax),%ebx
		mov    0x0000c8(%eax),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x0000c6(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0241d8_func
		mov    %esi,%eax
		call   _01a830_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04d6bc_jump:
		xor    %ah,%ah
		mov    %ah,_096476_data
		call   _040c04_func
		cmpl   $0x000000,_0e3d08_data
		je     _04d6d8_jump
		call   *_0e3d08_data

	_04d6d8_jump:
		mov    _0e3cec_data,%eax
		call   _04d680_func
		cmpl   $0x000000,_0e3d14_data
		je     _04d6f1_jump
		call   *_0e3d14_data

	_04d6f1_jump:
		call   _036944_func
		test   %al,%al
		jne    _04d703_jump
		cmpb   $0x000000,_096476_data
		je     _04d709_jump

	_04d703_jump:
		mov    $0x000001,%eax
		ret    

	_04d709_jump:
		xor    %ah,%ah
		ret    



_04d70c_func:
		push   %ebx
		push   %edx
		mov    _0e3d08_data,%edx
		mov    %eax,_0e3cec_data
		test   %edx,%edx
		je     _04d723_jump
		call   *_0e3d08_data

	_04d723_jump:
		call   _016dee_func
		call   _016dde_func
		call   _023e80_func
		call   _03a340_func
		mov    $0x000001,%ah
		xor    %ebx,%ebx
		xor    %dl,%dl
		mov    %ah,_096474_data
		mov    $_04d6bc_jump,%eax
		mov    %ebx,_0e3d14_data
		call   _03b9e8_func
		mov    %dl,_096474_data
		movb   $0x000001,_095b99_data
		call   _0411b8_func
		pop    %edx
		pop    %ebx
		ret    



_04d768_func:
		push   %ebx
		mov    %eax,_0e3cec_data
		mov    %edx,_0e3d14_data
		mov    $0x000001,%ah
		xor    %edx,%edx
		mov    %ah,_096474_data
		call   _016dee_func
		call   _016dde_func
		call   _023e80_func

	_04d78d_jump:
		cmp    _0e3d08_data,%edx
		je     _04d79b_jump
		call   *_0e3d08_data

	_04d79b_jump:
		mov    _0e3cec_data,%eax
		call   _04d680_func
		call   _04d7f8_func
		call   _016dee_func
		call   _016dde_func
		call   _03b8f8_func
		call   _03a340_func
		call   _040c04_func
		call   _036820_func
		test   %al,%al
		jne    _04d78d_jump
		mov    _0cee32_data,%bx
		cmp    %bx,%dx
		jne    _04d78d_jump
		mov    $_04d6bc_jump,%eax
		xor    %bl,%dl
		call   _03b9e8_func
		mov    %dl,_096474_data
		movb   $0x000001,_095b99_data
		call   _0411b8_func
		pop    %ebx
		ret    



_04d7f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cefa6_data
		jne    _04d85b_jump
		mov    _0e3cec_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		push   $0x000001
		sub    $0x000019,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    _0c2604_data,%eax
		call   _01a178_func
		mov    _0e3cec_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		push   $0x000000
		jmp    _04d8b0_jump

	_04d85b_jump:
		mov    _0e3cec_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		push   $0x000000
		sub    $0x000019,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    _0c2604_data,%eax
		call   _01a178_func
		mov    _0e3cec_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		push   $0x000001

	_04d8b0_jump:
		add    $0x000023,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    _0c2608_data,%eax
		call   _01a178_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04d8cc_func:
		push   %ebx
		push   %edx
		call   _04d544_func
		call   _0407b4_func
		test   %ax,%ax
		jne    _04d8e7_jump
		call   _040824_func
		test   %ax,%ax
		je     _04d94a_jump

	_04d8e7_jump:
		call   _040894_func
		test   %ax,%ax
		jne    _04d94a_jump
		call   _040904_func
		test   %ax,%ax
		jne    _04d94a_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _04d930_jump
		mov    _0ced04_data,%ax
		cmp    _0cece6_data,%ax
		jle    _04d94a_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04d94a_jump

	_04d930_jump:
		mov    _0cefa6_data,%dl
		test   %dl,%dl
		sete   %al
		mov    %al,_0cefa6_data
		mov    $0x000044,%eax
		call   _06fa90_func

	_04d94a_jump:
		call   _04d7f8_func
		call   _036944_func
		test   %al,%al
		je     _04d966_jump
		mov    $0x000001,%dh
		mov    %dh,_0cefa6_data
		mov    %dh,_096476_data

	_04d966_jump:
		call   _036820_func
		test   %al,%al
		je     _04d97f_jump
		cmpb   $0x000000,_0cefd3_data
		je     _04d97f_jump
		movb   $0x000001,_096476_data

	_04d97f_jump:
		call   _04d588_func
		pop    %edx
		pop    %ebx
		ret    

_04d988_switch:
		.long   _04d9e4_case
		.long   _04da51_case
		.long   _04daab_case
		.long   _04db06_case
		.long   _04dbf2_case




_04d99c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0000a0,%edx
		mov    $0x000064,%ebx
		mov    $0x000002,%ah
		mov    %dx,_0ca7f0_data
		mov    %bx,_0ca7f2_data
		mov    %ah,_0ca7f4_data
		xor    %dh,%dh
		mov    %ah,_0ca7f6_data
		mov    %dh,_0ca7f5_data
		cmp    $0x000004,%al
		ja     _04dce6_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_04d988_switch(,%eax,4)

	_04d9e4_case:
		mov    $0x000001,%ah
		mov    _095b4b_data,%dl
		mov    %ah,_0cefa6_data
		test   %dl,%dl
		je     _04da03_jump
		mov    $_0ca720_data,%edi
		mov    _0c25c4_data,%esi
		jmp    _04da0e_jump

	_04da03_jump:
		mov    $_0ca720_data,%edi
		mov    _0c25c8_data,%esi

	_04da0e_jump:
		push   %edi

	_04da0f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04da27_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04da0f_jump

	_04da27_jump:
		pop    %edi
		mov    $_0ca720_data,%eax
		mov    $_04d8cc_func,%edx
		call   _01ec48_func
		mov    $_0ca720_data,%eax
		call   _04d768_func
		cmpb   $0x000000,_0cefa6_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04da51_case:
		mov    $0x000001,%al
		mov    $_033f84_func,%esi
		mov    $_0ca720_data,%edi
		mov    %esi,_0e3d08_data
		mov    _0c25bc_data,%esi
		mov    %al,_0cefa6_data
		push   %edi

	_04da6f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04da87_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04da6f_jump

	_04da87_jump:
		pop    %edi
		mov    %edi,%eax
		mov    $_04d8cc_func,%edx
		call   _01ec48_func
		mov    %edi,%eax
		call   _04d768_func
		cmpb   $0x000000,_0cefa6_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04daab_case:
		mov    $0x000001,%ch
		mov    $_0ca720_data,%edi
		mov    %ch,_0cefa6_data
		mov    $_033f84_func,%ecx
		mov    _0c25c0_data,%esi
		mov    %ecx,_0e3d08_data
		push   %edi

	_04daca_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04dae2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04daca_jump

	_04dae2_jump:
		pop    %edi
		mov    %edi,%eax
		mov    $_04d8cc_func,%edx
		call   _01ec48_func
		mov    %edi,%eax
		call   _04d768_func
		cmpb   $0x000000,_0cefa6_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04db06_case:
		call   _04d264_func
		mov    $0x000001,%cl
		mov    $_0c7498_data,%esi
		mov    $_0e39ec_data,%edi
		mov    $0x000001,%edx
		mov    %cl,_0cefa6_data
		mov    $0x000300,%ecx
		mov    $_03bcb4_func,%ebx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _02423c_func
		mov    _0cccb8_data,%eax
		mov    $_0dd444_data,%esi
		call   _0243ec_func
		call   _03b970_func
		mov    _0cccb8_data,%edi
		mov    $_04d8cc_func,%edx
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    $0x000300,%ecx
		mov    $_0c7498_data,%edi
		call   _03b920_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_0ca720_data,%edi
		mov    _0c25c0_data,%esi
		mov    %ebx,_0e3d08_data
		push   %edi

	_04db9d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04dbb5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04db9d_jump

	_04dbb5_jump:
		pop    %edi
		mov    %edi,%eax
		mov    $0x000300,%ecx
		call   _01ec48_func
		mov    %edi,%eax
		mov    $_0e39ec_data,%esi
		call   _04d768_func
		mov    $_0c7498_data,%edi
		call   _03b970_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03b920_func
		jmp    _04dce1_jump

	_04dbf2_case:
		call   _04d264_func
		mov    $0x000001,%bl
		mov    $0x000300,%ecx
		mov    $_0c7498_data,%esi
		mov    $_0e39ec_data,%edi
		mov    $0x000001,%edx
		mov    %bl,_0cefa6_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _02423c_func
		mov    _0cccb8_data,%eax
		mov    $_0dd444_data,%esi
		call   _0243ec_func
		call   _03b970_func
		xor    %bh,%bh
		mov    _0cccb8_data,%edi
		mov    $_03bcb4_func,%edx
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    $0x000300,%ecx
		mov    $_0c7498_data,%edi
		call   _03b920_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_0ca720_data,%edi
		mov    $0x000300,%ecx
		mov    _0c25c4_data,%esi
		mov    %edx,_0e3d08_data
		push   %edi

	_04dc8b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04dca3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04dc8b_jump

	_04dca3_jump:
		pop    %edi
		mov    %edi,%eax
		mov    $_04d8cc_func,%edx
		call   _01ec48_func
		mov    %edi,%eax
		mov    $_0e39ec_data,%esi
		call   _04d768_func
		mov    $_0c7498_data,%edi
		call   _03b970_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03b920_func
		mov    %bh,_095b99_data

	_04dce1_jump:
		call   _04d2c4_func

	_04dce6_jump:
		cmpb   $0x000000,_0cefa6_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04dcf8_func:
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,(%esp)

	_04dd01_jump:
		call   _016dee_func
		call   _016dde_func
		mov    $_0e30ec_data,%esi
		mov    $0x0000ff,%ecx
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		call   _03a340_func
		call   *(%esp)
		test   %ax,%ax
		je     _04dd01_jump
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_04dd44_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0e3d22_data,%di
		mov    _0cc5a8_data,%ebp
		mov    $0x000140,%eax
		sub    %edi,%eax
		mov    %ax,(%esp)
		call   _01cb68_func
		call   _03bcb4_func
		mov    _0cc638_data,%edx
		mov    _0e3d24_data,%eax
		add    $0x00fa00,%edx
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ecx
		mov    _0e3d26_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _0e3d22_data,%edx
		sar    $0x000010,%edx
		shl    $0x000006,%eax
		neg    %edx
		add    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0e3d22_data,%di
		mov    %ax,0x000004(%esp)
		jmp    _04de5e_jump

	_04ddc2_jump:
		mov    0x000004(%esp),%eax
		imul   _0e3d2a_data,%ax
		add    $0x000064,%eax
		cwtl   
		imul   $0x000140,%eax,%esi
		mov    _0cc644_data,%edx
		mov    _0cc5b4_data,%ebx
		add    %edx,%esi
		cmp    %ebx,%eax
		jle    _04de48_jump
		cmp    _0cc5b0_data,%eax
		jge    _04de48_jump
		movswl %di,%edx
		neg    %edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%ebx
		jmp    _04de2a_jump

	_04de06_jump:
		mov    _0e3d2a_data,%ax
		imul   %ebx,%eax
		add    $0x0000a0,%eax
		movswl %ax,%edx
		cmp    _0cc5ac_data,%edx
		jle    _04de28_jump
		cmp    %ebp,%edx
		jge    _04de28_jump
		mov    (%ecx),%al
		mov    %al,(%edx,%esi,1)

	_04de28_jump:
		inc    %ebx
		inc    %ecx

	_04de2a_jump:
		movswl %di,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %bx,%edx
		cmp    %eax,%edx
		jl     _04de06_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    %eax,%ecx
		jmp    _04de4e_jump

	_04de48_jump:
		add    $0x000140,%ecx

	_04de4e_jump:
		mov    0x000004(%esp),%esi
		inc    %esi
		mov    %ebp,_0cc5a8_data
		mov    %si,0x000004(%esp)

	_04de5e_jump:
		mov    _0e3d22_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    _0cc5a8_data,%ebp
		cmp    %eax,%edx
		jl     _04ddc2_jump
		cmpb   $0x000000,_0e3d3b_data
		je     _04dea8_jump
		mov    _0e3d2a_data,%si
		dec    %esi
		mov    %si,_0e3d2a_data
		cmp    $0x000001,%si
		sete   %bl
		xor    %bh,%bh
		jmp    _04dee8_jump

	_04dea8_jump:
		mov    _0e3d2a_data,%dx
		mov    %di,_0e3d22_data
		cmp    $0x000010,%dx
		jne    _04dec1_jump
		call   _03b948_func

	_04dec1_jump:
		mov    _0e3d2a_data,%bx
		mov    _0cc5a8_data,%ebp
		inc    %ebx
		mov    _0e3d22_data,%di
		mov    %bx,_0e3d2a_data
		cmp    $0x000020,%bx
		sete   %al
		xor    %ah,%ah
		mov    %eax,%ebx

	_04dee8_jump:
		mov    %ebx,%eax
		mov    %ebp,_0cc5a8_data
		mov    %di,_0e3d22_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04df04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    $0x000140,%eax
		mov    _0e3d22_data,%dx
		mov    _0e3d26_data,%ebx
		mov    _0cc644_data,%ecx
		sar    $0x000010,%ebx
		sub    %edx,%eax
		mov    _0e3d24_data,%edx
		mov    %eax,(%esp)
		lea    0x000000(,%ebx,4),%eax
		sar    $0x000010,%edx
		add    %ebx,%eax
		add    %edx,%ecx
		shl    $0x000006,%eax
		lea    (%ecx,%eax,1),%ebx
		mov    _0cc638_data,%ecx
		mov    $0x000011,%ebp
		add    $0x00fa00,%ecx
		xor    %esi,%esi
		add    %edx,%ecx
		mov    %esi,0x000004(%esp)
		jmp    _04dfb9_jump

	_04df62_jump:
		xor    %esi,%esi
		jmp    _04df97_jump

	_04df66_jump:
		mov    (%ebx),%al
		cmp    (%ecx),%al
		je     _04df94_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0e3d28_data,%eax
		mov    $0x000010,%edi
		sar    $0x000010,%eax
		sub    %eax,%edi
		imul   %edi,%edx
		movzbl (%ecx),%edi
		add    %edi,%edx
		mov    %ebp,%edi
		sub    %eax,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %al,(%ebx)

	_04df94_jump:
		inc    %esi
		inc    %ebx
		inc    %ecx

	_04df97_jump:
		xor    %edx,%edx
		mov    _0e3d20_data,%eax
		mov    %si,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _04df66_jump
		mov    0x000004(%esp),%edi
		xor    %eax,%eax
		inc    %edi
		mov    (%esp),%ax
		mov    %edi,0x000004(%esp)
		add    %eax,%ebx

	_04dfb9_jump:
		add    %eax,%ecx
		xor    %eax,%eax
		mov    _0e3d22_data,%edx
		mov    0x000004(%esp),%ax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jl     _04df62_jump
		mov    _0e3d2a_data,%ax
		inc    %eax
		mov    %ax,_0e3d2a_data
		cmp    $0x000010,%ax
		sete   %al
		xor    %ah,%ah
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04dff0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000001,%ebx
		xor    %edx,%edx

	_04dffc_jump:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    _0e30ec_data(%eax),%cl
		mov    _0e39ec_data(%eax),%ch
		cmp    %ch,%cl
		je     _04e04b_jump
		movzbl %ch,%esi
		xor    %ecx,%ecx
		lea    0x000002(%esi),%edi
		mov    _0e30ec_data(%eax),%cl
		xor    %ebx,%ebx
		cmp    %edi,%ecx
		jle    _04e033_jump
		mov    %cl,%ch
		sub    $0x000002,%ch
		mov    %ch,_0e30ec_data(%eax)
		jmp    _04e04b_jump

	_04e033_jump:
		sub    $0x000002,%esi
		cmp    %esi,%ecx
		jge    _04e03f_jump
		add    $0x000002,%cl
		jmp    _04e045_jump

	_04e03f_jump:
		mov    _0e39ec_data(%eax),%cl

	_04e045_jump:
		mov    %cl,_0e30ec_data(%eax)

	_04e04b_jump:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    _0e39ed_data(%eax),%cl
		cmp    _0e30ed_data(%eax),%cl
		je     _04e09c_jump
		xor    %ecx,%ecx
		mov    _0e39ed_data(%eax),%cl
		movzbl _0e30ed_data(%eax),%esi
		lea    0x000002(%ecx),%edi
		xor    %ebx,%ebx
		cmp    %edi,%esi
		jle    _04e080_jump
		subb   $0x000002,_0e30ed_data(%eax)
		jmp    _04e09c_jump

	_04e080_jump:
		sub    $0x000002,%ecx
		cmp    %ecx,%esi
		jge    _04e090_jump
		addb   $0x000002,_0e30ed_data(%eax)
		jmp    _04e09c_jump

	_04e090_jump:
		mov    _0e39ed_data(%eax),%cl
		mov    %cl,_0e30ed_data(%eax)

	_04e09c_jump:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    _0e30ee_data(%eax),%cl
		cmp    _0e39ee_data(%eax),%cl
		je     _04e0ed_jump
		xor    %ecx,%ecx
		mov    _0e39ee_data(%eax),%cl
		movzbl _0e30ee_data(%eax),%esi
		lea    0x000002(%ecx),%edi
		xor    %ebx,%ebx
		cmp    %edi,%esi
		jle    _04e0d1_jump
		subb   $0x000002,_0e30ee_data(%eax)
		jmp    _04e0ed_jump

	_04e0d1_jump:
		sub    $0x000002,%ecx
		cmp    %ecx,%esi
		jge    _04e0e1_jump
		addb   $0x000002,_0e30ee_data(%eax)
		jmp    _04e0ed_jump

	_04e0e1_jump:
		mov    _0e39ee_data(%eax),%cl
		mov    %cl,_0e30ee_data(%eax)

	_04e0ed_jump:
		inc    %edx
		cmp    $0x000100,%dx
		jl     _04dffc_jump
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e104_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %ecx,%esi
		mov    0x000014(%esp),%cl
		cmp    $0x000001,%cl
		jb     _04e11e_jump
		jbe    _04e134_jump
		cmp    $0x000002,%cl
		je     _04e13f_jump
		jmp    _04e150_jump

	_04e11e_jump:
		test   %cl,%cl
		jne    _04e150_jump
		movw   $0x000020,_0e3d2a_data
		movb   $0x000001,_0e3d3b_data
		jmp    _04e150_jump

	_04e134_jump:
		xor    %edi,%edi
		mov    %di,_0e3d2a_data
		jmp    _04e150_jump

	_04e13f_jump:
		movw   $0x000001,_0e3d2a_data
		xor    %ch,%ch
		mov    %ch,_0e3d3b_data

	_04e150_jump:
		mov    %eax,%ecx
		xor    %ah,%ch
		mov    $0x000004,%edi
		and    $0x000003,%cl
		sub    %ecx,%edi
		add    %edi,%eax
		mov    %ax,_0e3d26_data
		mov    %ebx,%eax
		mov    %dx,_0e3d28_data
		xor    %bh,%ah
		mov    $0x000004,%edx
		and    $0x000003,%al
		sub    %eax,%edx
		mov    %edx,%eax
		add    %ebx,%eax
		add    $0x000002,%esi
		add    $0x000002,%eax
		mov    %si,_0e3d24_data
		mov    %ax,_0e3d22_data
		mov    $0x000140,%eax
		mov    _0e3d22_data,%si
		sub    %esi,%eax
		mov    %eax,(%esp)
		mov    0x000014(%esp),%al
		test   %al,%al
		jne    _04e331_jump
		cmpb   $0x000000,_095b15_data
		jne    _04e260_jump
		mov    $0x000001,%edx
		mov    _0cccb4_data,%eax
		call   _0243ec_func
		testb  $0x000004,_0ced81_data
		je     _04e219_jump
		mov    _096456_data,%ecx
		mov    _09644e_data,%ebx
		mov    _096446_data,%edx
		mov    _09643e_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05ac68_func
		mov    _0cc5b0_data,%edx
		mov    _0cc5b4_data,%ecx
		mov    _0cc5a8_data,%ebx
		mov    _0cc5ac_data,%eax
		call   _01614e_func

	_04e219_jump:
		call   _03b970_func
		mov    _095b50_data,%eax
		sar    $0x000010,%eax
		mov    _096456_data(,%eax,2),%ecx
		mov    _09644e_data(,%eax,2),%ebx
		mov    _096446_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09643e_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05ac68_func
		mov    _0cc644_data,%edi
		call   _014bed_func
		jmp    _04e28c_jump

	_04e260_jump:
		mov    $0x000001,%edx
		mov    _0cccb8_data,%eax
		call   _0243ec_func
		call   _03b970_func
		xor    %eax,%eax
		mov    _0cef9f_data,%al
		call   _03c86c_func
		xor    %eax,%eax
		mov    _095b54_data,%al
		call   _04766c_func

	_04e28c_jump:
		cmpw   $0x000001,_0cede4_data
		jne    _04e2a0_jump
		cmpw   $0x000009,_0cedd0_data
		je     _04e2dc_jump

	_04e2a0_jump:
		cmpw   $0x000002,_0cede4_data
		jne    _04e2b4_jump
		cmpw   $0x000004,_0cedd0_data
		je     _04e2dc_jump

	_04e2b4_jump:
		cmpw   $0x000004,_0cede4_data
		jne    _04e2c8_jump
		cmpw   $0x000009,_0cedd0_data
		je     _04e2dc_jump

	_04e2c8_jump:
		cmpw   $0x000005,_0cede4_data
		jne    _04e318_jump
		cmpw   $0x000004,_0cedd0_data
		jne    _04e318_jump

	_04e2dc_jump:
		xor    %edx,%edx
		mov    _0cefd7_data,%dl
		mov    $_0c7498_data,%edi
		lea    0x000000(,%edx,4),%eax
		mov    $0x000300,%ecx
		sub    %edx,%eax
		mov    _0ccd88_data,%esi
		shl    $0x000008,%eax
		add    $0x002d00,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_04e318_jump:
		call   _02423c_func
		mov    _0cc644_data,%eax
		mov    %eax,_0cccb4_data
		call   _03bcb4_func
		jmp    _04e465_jump

	_04e331_jump:
		cmp    $0x000001,%al
		jne    _04e465_jump
		mov    $0x000003,%esi
		xor    %ecx,%ecx

	_04e340_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		lea    (%ebx,%ebx,2),%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0dd445_data(%ebx),%al
		mov    _0dd444_data(%ebx),%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0dd446_data(%ebx),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		and    $0x0000ff,%eax
		add    $0x000080,%eax
		imul   %esi,%eax
		mov    _0dd444_data(%eax),%dl
		mov    %dl,_0e39ec_data(%ebx)
		mov    _0dd445_data(%eax),%dl
		mov    _0dd446_data(%eax),%al
		mov    %dl,_0e39ed_data(%ebx)
		inc    %ecx
		mov    %al,_0e39ee_data(%ebx)
		cmp    $0x000100,%cx
		jb     _04e340_jump
		mov    $0x000300,%ecx
		mov    $_0dd444_data,%esi
		mov    $_0e30ec_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_04dff0_func,%eax
		call   _04dcf8_func
		mov    _0e3d24_data,%ebx
		mov    _0cc644_data,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		mov    _0e3d26_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		xor    %edi,%edi
		jmp    _04e452_jump

	_04e3f7_jump:
		xor    %ecx,%ecx
		jmp    _04e439_jump

	_04e3fb_jump:
		mov    (%ebx),%al
		xor    %edx,%edx
		mov    %al,%dl
		lea    (%edx,%edx,2),%edx
		xor    %eax,%eax
		movzbl _0dd445_data(%edx),%esi
		mov    _0dd444_data(%edx),%al
		mov    _0dd446_data(%edx),%dl
		add    %esi,%eax
		and    $0x0000ff,%edx
		add    %eax,%edx
		mov    $0x000003,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		inc    %ebx
		add    $0x000080,%eax
		inc    %ecx
		mov    %al,-0x000001(%ebx)

	_04e439_jump:
		xor    %eax,%eax
		mov    _0e3d20_data,%edx
		mov    %cx,%ax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jl     _04e3fb_jump
		xor    %eax,%eax
		mov    (%esp),%ax
		inc    %edi

	_04e452_jump:
		add    %eax,%ebx
		xor    %edx,%edx
		mov    _0e3d22_data,%eax
		mov    %di,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _04e3f7_jump

	_04e465_jump:
		mov    _0cc638_data,%eax
		add    $0x00fa00,%eax
		mov    %eax,_0cccb4_data
		call   *_0e3d08_data
		mov    _0cc644_data,%eax
		mov    0x000014(%esp),%bl
		mov    %eax,_0cccb4_data
		cmp    $0x000001,%bl
		jne    _04e530_jump
		mov    _0cc638_data,%edx
		mov    _0e3d24_data,%eax
		add    $0x00fa00,%edx
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ebx
		mov    _0e3d26_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		xor    %edi,%edi
		add    %eax,%ebx
		mov    $0x000003,%ebp
		jmp    _04e51f_jump

	_04e4c8_jump:
		xor    %ecx,%ecx
		jmp    _04e505_jump

	_04e4cc_jump:
		mov    (%ebx),%al
		xor    %edx,%edx
		mov    %al,%dl
		lea    (%edx,%edx,2),%edx
		xor    %eax,%eax
		mov    _0dd445_data(%edx),%al
		movzbl _0dd444_data(%edx),%esi
		mov    _0dd446_data(%edx),%dl
		add    %esi,%eax
		and    $0x0000ff,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		inc    %ebx
		add    $0x000080,%eax
		inc    %ecx
		mov    %al,-0x000001(%ebx)

	_04e505_jump:
		xor    %edx,%edx
		mov    _0e3d20_data,%eax
		mov    %cx,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _04e4cc_jump
		xor    %eax,%eax
		mov    (%esp),%ax
		inc    %edi
		add    %eax,%ebx

	_04e51f_jump:
		xor    %edx,%edx
		mov    _0e3d22_data,%eax
		mov    %di,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _04e4c8_jump

	_04e530_jump:
		mov    0x000014(%esp),%bh
		test   %bh,%bh
		jne    _04e5f3_jump
		xor    %edx,%edx
		mov    _0cefd7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7498_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e39ec_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cefd7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7498_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0dd444_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03b920_func
		mov    $_04dd44_func,%eax
		xor    %edx,%edx
		call   _03b9e8_func
		mov    _0cefd7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7498_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e39ec_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_04e5f3_jump:
		cmp    $0x000001,%bh
		jne    _04e6a9_jump
		mov    $_04df04_func,%eax
		mov    $0x000003,%esi
		call   _03b9e8_func
		xor    %ecx,%ecx

	_04e60d_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		lea    (%ebx,%ebx,2),%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0dd445_data(%ebx),%al
		mov    _0dd444_data(%ebx),%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0dd446_data(%ebx),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		and    $0x0000ff,%eax
		add    $0x000080,%eax
		imul   %esi,%eax
		mov    _0dd444_data(%eax),%dl
		mov    %dl,_0e30ec_data(%ebx)
		mov    _0dd445_data(%eax),%dl
		mov    _0dd446_data(%eax),%al
		mov    %dl,_0e30ed_data(%ebx)
		inc    %ecx
		mov    %al,_0e30ee_data(%ebx)
		cmp    $0x000100,%cx
		jb     _04e60d_jump
		mov    $0x000300,%ecx
		mov    $_0dd444_data,%esi
		mov    $_0e39ec_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   *_0e3d08_data
		mov    $_04dff0_func,%eax
		call   _04dcf8_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_04e6a9_jump:
		cmp    $0x000002,%bh
		jne    _04e836_jump
		xor    %edx,%edx
		mov    _0cefd7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7498_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e39ec_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cefd7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7498_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0dd444_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_04dd44_func,%eax
		call   _03b9e8_func
		cmpb   $0x000001,_095b15_data
		jne    _04e747_jump
		xor    %eax,%eax
		mov    _0cef9f_data,%al
		call   _03c740_func
		xor    %eax,%eax
		mov    _095b54_data,%al
		call   _04766c_func

	_04e747_jump:
		cmpw   $0x000001,_0cede4_data
		jne    _04e75b_jump
		cmpw   $0x000009,_0cedd0_data
		je     _04e797_jump

	_04e75b_jump:
		cmpw   $0x000002,_0cede4_data
		jne    _04e76f_jump
		cmpw   $0x000004,_0cedd0_data
		je     _04e797_jump

	_04e76f_jump:
		cmpw   $0x000004,_0cede4_data
		jne    _04e783_jump
		cmpw   $0x000009,_0cedd0_data
		je     _04e797_jump

	_04e783_jump:
		cmpw   $0x000005,_0cede4_data
		jne    _04e7d4_jump
		cmpw   $0x000004,_0cedd0_data
		jne    _04e7d4_jump

	_04e797_jump:
		mov    _0cec96_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0ccd88_data,%esi
		sub    %edx,%eax
		xor    %edx,%edx
		shl    $0x000008,%eax
		mov    _0cefd7_data,%dl
		add    %eax,%esi
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7498_data,%edi
		shl    $0x000008,%eax
		mov    $0x000300,%ecx
		jmp    _04e7f7_jump

	_04e7d4_jump:
		xor    %edx,%edx
		mov    _0cefd7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7498_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e39ec_data,%esi

	_04e7f7_jump:
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,_0cefd7_data
		je     _04e831_jump
		mov    $0x000300,%ecx
		mov    $_0e36ec_data,%esi
		mov    $_0c7498_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_04e831_jump:
		call   _03b920_func

	_04e836_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_04e840_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    $0x000140,%eax
		mov    _0e3d22_data,%dx
		mov    _0e3d26_data,%esi
		mov    _0cc644_data,%edi
		sar    $0x000010,%esi
		sub    %edx,%eax
		mov    _0e3d24_data,%edx
		mov    %eax,(%esp)
		lea    0x000000(,%esi,4),%eax
		sar    $0x000010,%edx
		add    %eax,%esi
		add    %edx,%edi
		shl    $0x000006,%esi
		lea    (%edi,%esi,1),%eax
		mov    _0cc638_data,%edi
		add    $0x00fa00,%edi
		xor    %ebx,%ebx
		add    %edi,%edx
		mov    %ebx,0x000004(%esp)
		jmp    _04e8e1_jump

	_04e898_jump:
		xor    %ecx,%ecx
		jmp    _04e8be_jump

	_04e89c_jump:
		xor    %edi,%edi
		mov    _0e3d28_data,%esi
		mov    %bx,%di
		sar    $0x000010,%esi
		cmp    %esi,%edi
		jne    _04e8ba_jump
		mov    (%eax),%bl
		mov    (%edx),%bh
		cmp    %bh,%bl
		je     _04e8b8_jump
		mov    %bh,(%eax)

	_04e8b8_jump:
		xor    %ebx,%ebx

	_04e8ba_jump:
		inc    %ecx
		inc    %eax
		inc    %edx
		inc    %ebx

	_04e8be_jump:
		xor    %esi,%esi
		mov    _0e3d20_data,%edi
		mov    %cx,%si
		sar    $0x000010,%edi
		cmp    %edi,%esi
		jl     _04e89c_jump
		mov    0x000004(%esp),%edi
		xor    %esi,%esi
		inc    %edi
		mov    (%esp),%si
		mov    %edi,0x000004(%esp)
		add    %esi,%eax

	_04e8e1_jump:
		add    %esi,%edx
		xor    %esi,%esi
		mov    _0e3d22_data,%edi
		mov    0x000004(%esp),%si
		sar    $0x000010,%edi
		cmp    %edi,%esi
		jl     _04e898_jump
		mov    _0e3d2a_data,%ax
		dec    %ax
		mov    %ax,_0e3d2a_data
		sete   %al
		xor    %ah,%ah
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e914_func:
		mov    %ax,_0e3d26_data
		mov    %dx,_0e3d28_data
		mov    %bx,_0e3d22_data
		mov    %cx,_0e3d24_data
		mov    _0cc638_data,%eax
		mov    $0x000010,%edx
		add    $0x00fa00,%eax
		mov    %dx,_0e3d2a_data
		mov    %eax,_0cccb4_data
		call   *_0e3d08_data
		mov    _0cc644_data,%eax
		mov    %eax,_0cccb4_data
		mov    $_04e840_func,%eax
		jmp    _03b9e8_func



_04e970_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xffffffff,%ecx
		mov    _0cc300_data,%edx
		mov    _0cc304_data,%bx
		xor    %eax,%eax
		mov    %ecx,%esi
		test   %bx,%bx
		jle    _04e9b3_jump

	_04e990_jump:
		mov    0x000060(%edx),%di
		cmp    $0x0000cb,%di
		jne    _04e99f_jump
		mov    %eax,%ecx
		jmp    _04e9a7_jump

	_04e99f_jump:
		cmp    $0x000070,%di
		jne    _04e9a7_jump
		mov    %eax,%esi

	_04e9a7_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _04e990_jump

	_04e9b3_jump:
		mov    %si,_0e3dcc_data
		mov    %cx,_0e3dd0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e9c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,_0cefbd_data
		jne    _04ea8b_jump
		mov    _0cedc0_data,%ecx
		mov    _0cee04_data,%eax
		mov    _0cedbe_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _04ea0f_jump
		cmp    %ecx,%eax
		jg     _04ea0f_jump
		mov    $0x000001,%eax
		jmp    _04ea11_jump

	_04ea0f_jump:
		xor    %eax,%eax

	_04ea11_jump:
		test   %eax,%eax
		je     _04ea54_jump
		mov    _0cedc2_data,%ecx
		mov    _0cee06_data,%eax
		mov    _0cedbc_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0cedf8_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _04ea4a_jump
		cmp    %ecx,%eax
		jg     _04ea4a_jump
		mov    $0x000001,%eax
		jmp    _04ea4c_jump

	_04ea4a_jump:
		xor    %eax,%eax

	_04ea4c_jump:
		test   %eax,%eax
		je     _04ea54_jump
		mov    $0x000001,%al
		jmp    _04ea56_jump

	_04ea54_jump:
		xor    %al,%al

	_04ea56_jump:
		mov    %al,_0cefbd_data
		test   %al,%al
		je     _04eabb_jump
		mov    _0cee10_data,%ax
		mov    %ax,_0cedc8_data
		mov    %ax,_0cedba_data
		mov    _0cedbe_data,%ax
		mov    %ax,_0cedbc_data
		mov    _0cedc4_data,%ax
		mov    %ax,_0cedc6_data
		jmp    _04eabb_jump

	_04ea8b_jump:
		mov    0x00007f(%edx),%bl
		test   %bl,%bl
		je     _04eaa2_jump
		cmpb   $0x000000,_0cef4f_data
		jne    _04eaa2_jump
		mov    %bl,%cl
		dec    %cl
		mov    %cl,0x00007f(%edx)

	_04eaa2_jump:
		mov    _0cedbc_data,%ax
		mov    _0cedfa_data,%bx
		cmp    %bx,%ax
		jge    _04eabb_jump
		mov    %bx,_0cedbc_data

	_04eabb_jump:
		cmpb   $0x000000,_0cefbd_data
		je     _04ead0_jump
		cmpb   $0x000000,0x00007f(%edx)
		jne    _04ead0_jump
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04ead0_jump:
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ead8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		test   %dl,%dl
		jbe    _04eaea_jump
		cmp    $0x000001,%dl
		je     _04eb15_jump
		jmp    _04eb42_jump

	_04eaea_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0cedb8_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dh
		mov    %eax,0x000028(%ebx)
		or     $0x000008,%dh
		mov    $0xffffffff,%eax
		mov    %dh,0x000081(%ebx)
		jmp    _04ebab_jump

	_04eb15_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0cedc6_data,%eax
		sar    $0x000010,%eax
		add    $0x000130,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dl
		mov    %eax,0x000028(%ebx)
		and    $0x0000f7,%dl
		mov    $0x000001,%eax
		mov    %dl,0x000081(%ebx)
		jmp    _04ebab_jump

	_04eb42_jump:
		mov    _0cedb8_data,%esi
		mov    _0cedc6_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		lea    0x000140(%esi,%edi,1),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x000068(%ebx),%cl
		add    %ecx,%ebp
		sub    %eax,%ebp
		mov    %ebp,%eax
		test   %ax,%ax
		jle    _04eb97_jump
		add    $0x000130,%edi
		sub    %ecx,%edi
		mov    0x000081(%ebx),%ch
		mov    %edi,0x000028(%ebx)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%ebx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_04eb97_jump:
		sub    %ecx,%esi
		mov    0x000081(%ebx),%cl
		mov    %esi,0x000028(%ebx)
		or     $0x000008,%cl
		mov    %cl,0x000081(%ebx)

	_04ebab_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04ebb4_func:
		push   %edx
		mov    _0e3dd4_data,%eax
		sar    $0x000010,%eax
		call   _05be40_func
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000009,%edx
		sbb    %edx,%eax
		sar    $0x000009,%eax
		mov    _0e3dd0_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    %ax,_0ceda4_data
		mov    _0e3dd4_data,%eax
		sar    $0x000010,%eax
		call   _05be00_func
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000009,%edx
		sbb    %edx,%eax
		sar    $0x000009,%eax
		mov    _0e3dd2_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    _0e3dd6_data,%dx
		add    $0x000004,%edx
		mov    %ax,_0ced9e_data
		mov    %dx,_0e3dd6_data
		cmp    $0x000200,%dx
		jle    _04ec4d_jump
		movw   $0x008300,_0e3dd6_data

	_04ec4d_jump:
		pop    %edx
		ret    

_04ec50_switch:
		.long   _04ecaf_case
		.long   _04ecf8_case
		.long   _04ecbd_case
		.long   _04ecf8_case
		.long   _04ecbd_case
		.long   _04ecf8_case
		.long   _04ece0_case




_04ec6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,(%esp)

	_04ec7b_jump:
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%di
		xor    %eax,%eax
		test   %di,%di
		jle    _04edd8_jump
		mov    0x00006c(%esi),%dl
		dec    %dl

	_04ec98_jump:
		xor    %bl,%bl
		mov    %bl,0x000004(%esp)
		cmp    $0x000006,%dl
		ja     _04ecf8_case
		xor    %ebx,%ebx
		mov    %dl,%bl
		jmp    *%cs:_04ec50_switch(,%ebx,4)

	_04ecaf_case:
		xor    %bh,%bh
		mov    $0x000001,%dh
		mov    %bh,0x000008(%esp)
		mov    %dh,0x00000c(%esp)
		jmp    _04ecf8_case

	_04ecbd_case:
		testb  $0x000008,0x000081(%esi)
		je     _04ecd4_jump
		mov    $0x000004,%dh
		mov    $0x000005,%bl
		mov    %dh,0x000008(%esp)
		mov    %bl,0x00000c(%esp)
		jmp    _04ecf8_case

	_04ecd4_jump:
		movb   $0x000002,0x000008(%esp)
		movb   $0x000003,0x00000c(%esp)
		jmp    _04ecf8_case

	_04ece0_case:
		testb  $0x000008,0x000081(%esi)
		je     _04ecee_jump
		movb   $0x000001,0x000004(%esp)

	_04ecee_jump:
		movb   $0x000006,0x000008(%esp)
		movb   $0x000007,0x00000c(%esp)

	_04ecf8_case:
		cmpw   $0x0000c2,0x000060(%ecx)
		jne    _04edc8_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _04edc8_jump
		mov    0x000008(%esp),%bl
		mov    0x00006c(%ecx),%dh
		cmp    %bl,%dh
		je     _04ed23_jump
		cmp    0x00000c(%esp),%dh
		jne    _04edc8_jump

	_04ed23_jump:
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f304_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    (%esp),%bl
		mov    %eax,0x00002c(%ecx)
		test   %bl,%bl
		je     _04ed7a_jump
		mov    0x00000c(%esp),%al
		jmp    _04ed7e_jump

	_04ed7a_jump:
		mov    0x000008(%esp),%al

	_04ed7e_jump:
		xor    %ebx,%ebx
		mov    $0x000001,%edx
		mov    %al,%bl
		mov    %ecx,%eax
		call   _01d374_func
		mov    %ecx,%eax
		mov    0x000004(%esp),%bh
		call   _01db8c_func
		mov    $0x000001,%eax
		test   %bh,%bh
		je     _04edaf_jump
		cmpb   $0x000000,(%esp)
		sete   %dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		jmp    _04edb9_jump

	_04edaf_jump:
		mov    (%esp),%dh
		xor    %ebx,%ebx
		test   %dh,%dh
		setne  %bl

	_04edb9_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    %eax,%ebx
		mov    %ecx,%eax
		call   _05f030_func
		jmp    _04edd8_jump

	_04edc8_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %di,%ax
		jl     _04ec98_jump

	_04edd8_jump:
		mov    (%esp),%dl
		add    $0x000002,%dl
		mov    %dl,(%esp)
		cmp    $0x000002,%dl
		jbe    _04ec7b_jump
		mov    %esi,%eax
		call   _076fac_func
		mov    0x000032(%esi),%edx
		mov    $0x0000dc,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		mov    0x000081(%esi),%bh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ee20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		mov    $0xffffffff,%edi

	_04ee2c_jump:
		xor    %eax,%eax

	_04ee2e_jump:
		movswl %si,%edx
		movswl %ax,%ebx
		shl    $0x000004,%edx
		add    %ebx,%ebx
		add    %edx,%ebx
		mov    _0e3d3e_data(%ebx),%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _04ee61_jump
		imul   $0x000084,%edx,%edx
		mov    _0cc300_data,%ecx
		movb   $0x000046,0x00007f(%ecx,%edx,1)
		mov    %di,_0e3d40_data(%ebx)

	_04ee61_jump:
		inc    %eax
		cmp    $0x000008,%ax
		jl     _04ee2e_jump
		inc    %esi
		cmp    $0x000008,%si
		jl     _04ee2c_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04ee78_switch:
		.long   _04f0a3_case
		.long   _04f0b2_case
		.long   _04f0ca_case
		.long   _04f0f8_case
		.long   _04f0a3_case
		.long   _04f0b2_case
		.long   _04f0e2_case
		.long   _04f0f8_case
		.long   _04f10f_case




_04ee9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		cmpb   $0x0000fe,_0e3ddc_data
		jne    _04efc9_jump
		mov    _0e3dcc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		jne    _04efc9_jump
		mov    _0cdbcc_data,%dx
		movzbw 0x000068(%edi),%si
		mov    0x000028(%edi),%bx
		xor    %eax,%eax
		add    %ebx,%esi
		mov    _0cdc0c_data,%al
		movswl %si,%ebx
		add    %edx,%eax
		lea    0x000008(%ebx),%ecx
		cwtl   
		sub    $0x000008,%ebx
		cmp    %ebx,%eax
		jl     _04eefb_jump
		cmp    %ecx,%eax
		jg     _04eefb_jump
		mov    $0x000001,%eax
		jmp    _04eefd_jump

	_04eefb_jump:
		xor    %eax,%eax

	_04eefd_jump:
		test   %eax,%eax
		je     _04f274_jump
		mov    _0cc300_data,%ebx
		mov    _0cc304_data,%ax
		xor    %edx,%edx
		test   %ax,%ax
		jle    _04efb0_jump

	_04ef1c_jump:
		cmpw   $0x0000c1,0x000060(%ebx)
		jne    _04efa0_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _04efa0_jump
		andb   $0x0000f7,0x000081(%ebx)
		xor    %edx,%edx
		movswl %si,%eax
		mov    0x000068(%ebx),%dl
		movb   $0x000000,0x00006c(%ebx)
		sub    %edx,%eax
		mov    %eax,0x000028(%ebx)
		xor    %eax,%eax
		mov    $0x000012,%ecx
		mov    0x000069(%edi),%al
		mov    0x00002c(%edi),%edi
		mov    _0cc5b4_data,%ebp
		add    %eax,%edi
		xor    %eax,%eax
		mov    _0cc5b0_data,%edx
		mov    0x000069(%ebx),%al
		sub    %ebp,%edx
		sub    %eax,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		movl   $0x000001,0x000024(%ebx)
		mov    %eax,%edx
		mov    0x000081(%ebx),%cl
		shl    $0x000002,%eax
		or     $0x000004,%cl
		sub    %edx,%eax
		mov    %cl,0x000081(%ebx)
		sub    %eax,%edi
		mov    %ebx,%eax
		mov    %edi,0x00002c(%ebx)
		call   _01f304_func
		movb   $0x000032,0x00007f(%ebx)
		jmp    _04efb0_jump

	_04efa0_jump:
		inc    %edx
		add    $0x000084,%ebx
		cmp    %ax,%dx
		jl     _04ef1c_jump

	_04efb0_jump:
		mov    $0x0000ff,%ch
		mov    %si,_0e3dce_data
		mov    %ch,_0e3ddc_data
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04efc9_jump:
		xor    %dl,%dl
		mov    %dl,0x000010(%esp)

	_04efcf_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		cmpb   $0x000007,_0e3dc0_data(%edx)
		jne    _04effc_jump
		mov    $0x0000ff,%al
		mov    $0xffff8300,%ebx
		mov    %al,_0e3ddc_data
		mov    %bx,_0e3dce_data
		mov    %al,_0e3dc0_data(%edx)
		jmp    _04f261_jump

	_04effc_jump:
		xor    %eax,%eax
		mov    0x000028(%edi),%dx
		mov    0x000068(%edi),%al
		add    %eax,%edx
		mov    0x000010(%esp),%ah
		mov    %dx,0x000008(%esp)
		test   %ah,%ah
		jne    _04f04f_jump
		mov    _0cc5a8_data,%edx
		sub    _0cc5ac_data,%edx
		mov    $0x000009,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000006(%esp),%ebx
		mov    %eax,%edx
		mov    _0e3dcc_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %eax,%eax
		jge    _04f047_jump
		neg    %eax

	_04f047_jump:
		cmp    %edx,%eax
		jl     _04f274_jump

	_04f04f_jump:
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0e3ddc_data,%al
		mov    0x000010(%esp),%bl
		lea    0x000000(,%eax,4),%edx
		mov    _0e3dc0_data(%ebx),%cl
		lea    0x000000(,%ebx,4),%eax
		mov    _096a1c_data(%edx),%edx
		inc    %cl
		add    %edx,%eax
		xor    %edx,%edx
		mov    %cl,_0e3dc0_data(%ebx)
		mov    %cl,%dl
		mov    (%eax),%eax
		add    %edx,%edx
		mov    (%edx,%eax,1),%ax
		cmp    $0x000008,%ax
		ja     _04f126_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_04ee78_switch(,%eax,4)

	_04f0a3_case:
		xor    %cl,%cl
		mov    %cl,0x000014(%esp)
		mov    %cl,0x00000c(%esp)
		jmp    _04f126_jump

	_04f0b2_case:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		mov    $0x000002,%bh
		shr    $0x000007,%al
		mov    %bh,0x000014(%esp)
		mov    %al,0x00000c(%esp)
		jmp    _04f126_jump

	_04f0ca_case:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		mov    $0x000006,%bl
		shr    $0x000007,%al
		mov    %bl,0x000014(%esp)
		mov    %al,0x00000c(%esp)
		jmp    _04f126_jump

	_04f0e2_case:
		mov    $0x000006,%ch
		mov    0x000081(%edi),%ah
		mov    %ch,0x000014(%esp)
		test   $0x000008,%ah
		sete   0x00000c(%esp)
		jmp    _04f126_jump

	_04f0f8_case:
		movb   $0x000004,0x000014(%esp)
		mov    0x000081(%edi),%dh
		test   $0x000008,%dh
		sete   %al
		mov    %al,0x00000c(%esp)
		jmp    _04f126_jump

	_04f10f_case:
		mov    $0xffffffff,%esi
		xor    %eax,%eax
		shl    $0x000004,%ebx
		mov    %ax,0x000008(%esp)
		mov    %si,_0e3d40_data(%edx,%ebx,1)

	_04f126_jump:
		cmpw   $0x000000,0x000008(%esp)
		je     _04f250_jump
		mov    _0cc300_data,%ebx
		mov    _0cc304_data,%si
		xor    %ecx,%ecx
		test   %si,%si
		jle    _04f230_jump

	_04f14a_jump:
		cmpw   $0x0000c1,0x000060(%ebx)
		jne    _04f220_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _04f220_jump
		mov    0x000081(%ebx),%dl
		mov    0x000014(%esp),%al
		and    $0x0000f7,%dl
		mov    %al,0x00006c(%ebx)
		mov    0x00000c(%esp),%al
		mov    %dl,0x000081(%ebx)
		and    $0x000001,%al
		mov    %dl,%dh
		shl    $0x000003,%al
		movzbl 0x000010(%esp),%ebp
		or     %al,%dh
		xor    %eax,%eax
		mov    %dh,0x000081(%ebx)
		mov    %ebp,%edx
		mov    _0e3dc0_data(%ebp),%al
		shl    $0x000004,%edx
		add    %eax,%eax
		add    %edx,%eax
		mov    %cx,_0e3d40_data(%eax)
		xor    %eax,%eax
		mov    0x000068(%ebx),%al
		mov    %eax,0x000004(%esp)
		mov    0x000006(%esp),%eax
		mov    0x000004(%esp),%edx
		sar    $0x000010,%eax
		movb   $0x000000,0x00006b(%ebx)
		sub    %edx,%eax
		mov    %eax,0x000028(%ebx)
		xor    %eax,%eax
		mov    0x00002c(%edi),%edx
		mov    0x000069(%edi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%ebx),%dl
		sub    %edx,%eax
		mov    _0cc5b0_data,%edx
		mov    %eax,0x000004(%esp)
		sub    _0cc5b4_data,%edx
		movl   $0x000012,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		sub    $0x000006,%ebp
		imul   %ebp,%eax
		mov    0x000004(%esp),%edx
		add    %eax,%edx
		mov    0x000081(%ebx),%al
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%al
		mov    %al,0x000081(%ebx)
		mov    %ebx,%eax
		mov    %edx,0x00002c(%ebx)
		call   _01f304_func
		jmp    _04f230_jump

	_04f220_jump:
		inc    %ecx
		add    $0x000084,%ebx
		cmp    %si,%cx
		jl     _04f14a_jump

	_04f230_jump:
		cmp    %si,%cx
		jl     _04f250_jump
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		xor    %eax,%eax
		mov    _0e3dc0_data(%edx),%al
		shl    $0x000004,%edx
		movw   $0x00ffff,_0e3d40_data(%edx,%eax,2)

	_04f250_jump:
		xor    %eax,%eax
		mov    0x000028(%edi),%dx
		mov    0x000068(%edi),%al
		add    %edx,%eax
		mov    %ax,_0e3dce_data

	_04f261_jump:
		mov    0x000010(%esp),%ah
		inc    %ah
		mov    %ah,0x000010(%esp)
		cmp    $0x000008,%ah
		jb     _04efcf_jump

	_04f274_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f280_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		movzbl %dl,%esi
		mov    %esi,%ebx
		xor    %edx,%edx
		call   _01d374_func
		mov    0x00000c(%ecx),%eax
		lea    0x000000(,%esi,8),%edx
		movb   $0x000000,0x00006b(%ecx)
		mov    (%eax),%esi
		mov    0x000002(%edx,%esi,1),%dl
		mov    %dl,0x00006a(%ecx)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04f2ac_func:
		test   %dl,%dl
		je     _04f2b8_jump
		movw   $0x0000d5,0x000060(%eax)
		jmp    _04f2be_jump

	_04f2b8_jump:
		movw   $0x000062,0x000060(%eax)

	_04f2be_jump:
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		mov    _0930d6_data(,%edx,2),%dx
		mov    %dx,0x00005c(%eax)
		ret    

_04f2d4_switch:
		.long   _04f45f_case
		.long   _04f465_case
		.long   _04f476_case
		.long   _04f415_case
		.long   _04f415_case
		.long   _04f6cd_case
		.long   _04f415_case
		.long   _04f749_case
		.long   _04f816_case
		.long   _04f415_case
		.long   _04f415_case
		.long   _04f415_case
		.long   _04f88d_case
		.long   _04f985_case
		.long   _04f9d1_case
		.long   _04fa8d_case
		.long   _04fad4_case
		.long   _04f415_case
		.long   _04fbe1_case
		.long   _04fda7_case
		.long   _04f415_case
		.long   _04fdd9_case
		.long   _04fe7c_case
		.long   _04ff48_case
		.long   _0500b5_case
		.long   _04ff41_case
		.long   _04fbaf_case
		.long   _05017f_case
		.long   _050204_case
		.long   _05039a_case
		.long   _04ff1d_case
		.long   _050138_case
		.long   _04fce1_case
		.long   _04fce1_case
		.long   _04fc23_case
		.long   _04fc6b_case
		.long   _04fa12_case
		.long   _0500ee_case
		.long   _04f905_case
		.long   _04fe0b_case
		.long   _04f5d9_case
		.long   _04f6f1_case
		.long   _04f4f6_case
		.long   _04fce1_case
		.long   _04f531_case
		.long   _04ff48_case
		.long   _04f4ab_case

_04f390_switch:
		.long   _04f54b_case
		.long   _04f54b_case
		.long   _04f54b_case
		.long   _04f54b_case
		.long   _04f54b_case
		.long   _04f5a7_case

_04f3a8_switch:
		.long   _04fc94_case
		.long   _04fcac_case
		.long   _04fc94_case
		.long   _04fc81_case
		.long   _04fc94_case




_04f3bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    _0e3dce_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cc300_data,%edi
		add    %edx,%eax
		mov    _0e3dca_data,%edx
		shl    $0x000002,%eax
		sar    $0x000010,%edx
		lea    (%edi,%eax,1),%ebp
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edi
		mov    _0e3dd4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		jne    _0503f0_jump
		mov    %esi,%eax
		add    $0x000081,%eax
		mov    %eax,(%esp)

	_04f415_case:
		cmpb   $0x000000,_0cefc1_data
		je     _0503f0_jump
		xor    %eax,%eax
		mov    _0cefc3_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cefc4_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096aec_data(%edx),%edx
		mov    %al,_0cefc4_data
		mov    (%edx,%ebx,1),%al
		mov    %al,0x000004(%esp)
		cmp    $0x00002e,%al
		ja     _04f415_case
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		jmp    *%cs:_04f2d4_switch(,%eax,4)

	_04f45f_case:
		incb   _0cefc3_data

	_04f465_case:
		xor    %ch,%ch
		mov    $0x000001,%al
		mov    %ch,_0cefc4_data
		mov    %al,_0cefc1_data
		jmp    _04f415_case

	_04f476_case:
		mov    _0cefbe_data,%al
		mov    %al,_0cefc3_data
		mov    _0cefbc_data,%al
		mov    %al,_0cefc4_data
		cmp    $0x0000ff,%al
		jne    _04f498_jump
		mov    %al,%dh
		inc    %dh
		mov    %dh,_0cefc4_data

	_04f498_jump:
		movb   $0x000001,_0cefc1_data
		movb   $0x0000ff,_0cefbe_data
		jmp    _04f415_case

	_04f4ab_case:
		mov    $0xffff8300,%edx
		mov    $0x000007,%ebx
		mov    $_0cdba4_data,%eax
		mov    %dx,_0cedb6_data
		mov    $0x000003,%edx
		call   _01d374_func
		mov    $0x000001,%dh
		mov    $_0cdba4_data,%eax
		mov    %dh,_0cefc8_data
		mov    $0x000001,%edx
		xor    %bl,%bl
		call   _01d224_func
		sub    $0x000003,%eax
		mov    %bl,_0cefc1_data
		mov    %ax,0x000048(%esi)
		jmp    _04f415_case

	_04f4f6_case:
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    _0cdbcc_data,%ax
		xor    %edx,%edx
		mov    %ax,_0cedb6_data
		mov    %esi,%eax
		call   _05f030_func
		mov    $0x000001,%dh
		movw   $0x000000,0x000048(%esi)
		mov    %dh,_0cefc1_data
		jmp    _04f415_case

	_04f531_case:
		mov    0x00006c(%edi),%al
		sub    $0x000025,%al
		cmp    $0x000005,%al
		ja     _04f5cd_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_04f390_switch(,%eax,4)

	_04f54b_case:
		mov    $0x000010,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x00002b,%edx
		mov    %ebp,%eax
		call   _04f280_func
		mov    0x00006c(%edi),%al
		xor    %edx,%edx
		inc    %al
		mov    %al,%dl
		mov    %edi,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%edi)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%edi)
		xor    %ah,%ah
		movb   $0x000000,0x00006b(%edi)
		mov    %ah,_0cefc1_data
		movb   $0x0000ff,_0cefc2_data
		jmp    _04f415_case

	_04f5a7_case:
		mov    $0x000006,%cl
		mov    0x000081(%ebp),%bh
		mov    $0x000001,%al
		and    $0x0000fb,%bh
		mov    %cl,_0cefc3_data
		mov    %al,_0cefc1_data
		xor    %ch,%ch
		mov    %bh,0x000081(%ebp)
		mov    %ch,_0cefc4_data

	_04f5cd_jump:
		movb   $0x0000ff,_0cefc2_data
		jmp    _04f415_case

	_04f5d9_case:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x00002c(%esi),%ax
		mov    %ax,_0ced9e_data
		mov    _0cdc30_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		je     _04f6b2_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		mov    0x00000c(%esi),%eax
		mov    (%eax),%eax
		mov    0x000046(%esi),%edx
		mov    0x00000d(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %ax,_0ceda4_data
		mov    _0cdc30_data,%eax
		mov    0x000040(%eax),%cx
		test   %cx,%cx
		jge    _04f65a_jump
		mov    _0ceda4_data,%cx
		mov    0x000028(%esi),%ax
		add    %eax,%ecx
		mov    %cx,_0ceda4_data
		jmp    _04f66f_jump

	_04f65a_jump:
		jle    _04f66f_jump
		mov    _0ceda4_data,%bx
		mov    0x000028(%esi),%ax
		sub    %ebx,%eax
		mov    %ax,_0ceda4_data

	_04f66f_jump:
		mov    $0x0000ff,%cl
		mov    $0x000001,%al
		mov    $0x000001,%edx
		mov    %cl,_0cefb8_data
		mov    %cl,_0cefb9_data
		mov    %al,_0cefbf_data
		mov    $0x0000ff,%ecx
		mov    %esi,%eax
		mov    %ecx,%ebx
		call   _018690_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		xor    %ah,%ah
		mov    %ah,_0cefc1_data
		jmp    _04f415_case

	_04f6b2_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		xor    %ah,%ah
		mov    %ah,_0cefc1_data
		jmp    _04f415_case

	_04f6cd_case:
		mov    %esi,%eax
		call   _076184_func
		movw   $0x000001,_0cedd4_data
		orb    $0x000020,_0ced88_data
		xor    %ah,%ah
		mov    %ah,_0cefc1_data
		jmp    _04f415_case

	_04f6f1_case:
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		call   _01db14_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _04f73d_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		xor    %bh,%bh
		mov    %bh,_0cefc1_data
		jmp    _04f415_case

	_04f73d_jump:
		movb   $0x000001,_0cefc1_data
		jmp    _04f415_case

	_04f749_case:
		mov    $0x000001,%edx
		xor    %ah,%ah
		mov    $0x00002c,%ebx
		mov    %ah,_0e3dda_data
		mov    %ah,_0e3ddb_data
		mov    %esi,%eax
		movb   $0x000003,0x00007e(%esi)
		call   _04f2ac_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _04ead8_func
		mov    0x000081(%esi),%dh
		mov    0x000028(%esi),%eax
		and    $0x0000f7,%dh
		sub    $0x000090,%eax
		mov    %dh,0x000081(%esi)
		mov    %eax,0x000028(%esi)
		mov    _0ced70_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%dl
		mov    $0x0000ff,%ecx
		sub    %edx,%eax
		mov    $0x000001,%bl
		sub    $0x000020,%eax
		mov    %bl,_0cefbf_data
		mov    %eax,0x00002c(%esi)
		xor    %eax,%eax
		mov    _0cedba_data,%dx
		mov    0x000068(%esi),%al
		mov    $0x0000ff,%bh
		sub    %eax,%edx
		mov    %bh,_0cefb8_data
		mov    %edx,%eax
		mov    %bh,_0cefb9_data
		add    $0x000032,%eax
		mov    %ecx,%ebx
		mov    %ax,_0ceda4_data
		mov    0x00002c(%esi),%ax
		mov    $0x000001,%edx
		mov    %ax,_0ced9e_data
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _05f030_func
		mov    %ch,_0cefc1_data
		jmp    _04f415_case

	_04f816_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000004,%ecx
		call   _04f2ac_func
		mov    $0x000001,%edx
		mov    0x000028(%esi),%ax
		mov    %cx,_0e3dd6_data
		mov    %ax,_0e3dd2_data
		mov    0x00002c(%esi),%ax
		mov    $0x0000ff,%ecx
		sub    $0x00003c,%eax
		mov    %ecx,%ebx
		mov    %ax,_0e3dd4_data
		call   _04ebb4_func
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%bh
		mov    $0x0000ff,%cl
		mov    %esi,%eax
		mov    %bh,_0cefbf_data
		mov    $0x000001,%ebx
		mov    %cl,_0cefb8_data
		mov    %ebx,%edx
		mov    %cl,_0cefb9_data
		call   _05f030_func
		xor    %al,%al
		mov    %al,_0cefc1_data
		jmp    _04f415_case

	_04f88d_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _04f2ac_func
		mov    0x000028(%esi),%ax
		add    $0x00006e,%eax
		mov    %ax,_0ceda4_data
		xor    %eax,%eax
		mov    _0ced72_data,%dx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    $0x0000ff,%ecx
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x00007c,%eax
		mov    $0x0000ff,%dl
		mov    %ax,_0ced9e_data
		mov    %dl,_0cefb8_data
		mov    %dl,_0cefb9_data
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ah,_0cefbf_data
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		xor    %bl,%bl
		mov    %bl,_0cefc1_data
		jmp    _04f415_case

	_04f905_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _04f2ac_func
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   _01d374_func
		mov    $0x0000ff,%bl
		xor    %edx,%edx
		mov    _0ced72_data,%ax
		mov    0x000069(%esi),%dl
		mov    %bl,_0cefb8_data
		sub    %edx,%eax
		xor    %bh,%bh
		mov    $0x000001,%dh
		mov    %ax,_0ced9e_data
		mov    %bh,_0cefb9_data
		mov    $0x0000ff,%ebx
		mov    %dh,_0cefbf_data
		mov    0x000028(%esi),%ax
		mov    $0x000001,%edx
		mov    %ax,_0ceda4_data
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %cl,%cl
		call   _05f030_func
		mov    %cl,_0cefc1_data
		jmp    _04f415_case

	_04f985_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x00000a,%ebx
		call   _04f2ac_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ebp)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ebp)
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%edi)
		mov    $0x000001,%ebx
		mov    0x00002c(%esi),%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%edi)
		mov    %esi,%eax
		call   _05f030_func
		xor    %al,%al
		mov    %al,_0cefc1_data
		jmp    _04f415_case

	_04f9d1_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000025,%ebx
		call   _04f2ac_func
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%edi),%cl
		or     $0x000004,%cl
		mov    %edi,%eax
		mov    %cl,0x000081(%edi)
		call   _01f304_func
		mov    %edi,%eax
		mov    $0x000001,%ch
		call   _01db8c_func
		mov    %ch,_0cefc1_data
		jmp    _04f415_case

	_04fa12_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _04f2ac_func
		testb  $0x000004,0x000081(%edi)
		jne    _04fa2e_jump
		mov    %edi,%eax
		call   _01f304_func

	_04fa2e_jump:
		orb    $0x000004,0x000081(%edi)
		movb   $0x000006,0x00007e(%esi)
		testb  $0x000004,0x000081(%ebp)
		jne    _04fa49_jump
		mov    %ebp,%eax
		call   _01f304_func

	_04fa49_jump:
		mov    0x000081(%ebp),%bh
		mov    %esi,%eax
		or     $0x000004,%bh
		xor    %edx,%edx
		mov    %bh,0x000081(%ebp)
		mov    $0x000013,%ebx
		call   _01d374_func
		mov    $0x000024,%edx
		mov    %ebp,%eax
		mov    $0x000001,%ebx
		call   _04f280_func
		mov    %esi,%eax
		xor    %edx,%edx
		xor    %cl,%cl
		call   _05f030_func
		mov    %cl,_0cefc1_data
		jmp    _04f415_case

	_04fa8d_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _04f2ac_func
		mov    $0x000001,%eax
		call   _069140_func
		test   %ax,%ax
		je     _04faab_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		jmp    _04fab2_jump

	_04faab_jump:
		mov    $0x000009,%ebx
		mov    %esi,%eax

	_04fab2_jump:
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		xor    %bh,%bh
		mov    %bh,_0cefc1_data
		jmp    _04f415_case

	_04fad4_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000001,%ebx
		call   _04f2ac_func
		mov    _0e3dda_data,%ch
		mov    %ebx,%edx
		inc    %ch
		mov    %esi,%eax
		mov    %ch,_0e3dda_data
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		mov    0x00002c(%esi),%ax
		mov    %ax,_0ced9e_data
		mov    0x00000c(%esi),%eax
		mov    0x000004(%eax),%eax
		mov    0x000046(%esi),%edx
		mov    0x000005(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %ax,_0ceda4_data
		testb  $0x000008,0x000081(%esi)
		je     _04fb58_jump
		mov    _0ceda4_data,%bx
		mov    0x000028(%esi),%ax
		add    %eax,%ebx
		mov    %bx,_0ceda4_data
		jmp    _04fb6b_jump

	_04fb58_jump:
		mov    _0ceda4_data,%dx
		mov    0x000028(%esi),%ax
		sub    %edx,%eax
		mov    %ax,_0ceda4_data

	_04fb6b_jump:
		mov    $0x000001,%ah
		mov    $0x0000ff,%dl
		mov    $0x0000ff,%ecx
		mov    %ah,_0cefbf_data
		mov    %dl,_0cefb8_data
		mov    %dl,_0cefb9_data
		mov    %ecx,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		xor    %bl,%bl
		mov    %bl,_0cefc1_data
		jmp    _04f415_case

	_04fbaf_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000005,%ebx
		call   _04f2ac_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		xor    %ah,%ah
		mov    %ah,_0cefc1_data
		jmp    _04f415_case

	_04fbe1_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000005,%bl
		call   _04f2ac_func
		mov    %bl,_0cefc2_data
		mov    %esi,%eax
		mov    $0x000004,%bh
		xor    %edx,%edx
		mov    %bh,_0e3dd9_data
		mov    $0x000007,%ebx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		xor    %cl,%cl
		call   _05f030_func
		mov    %cl,_0cefc1_data
		jmp    _04f415_case

	_04fc23_case:
		mov    0x00006c(%esi),%al
		cmp    $0x000015,%al
		jb     _04fc3f_jump
		jbe    _04fc58_jump
		cmp    $0x00001f,%al
		jb     _04fcac_case
		jbe    _04fc58_jump
		cmp    $0x000022,%al
		je     _04fc45_jump
		jmp    _04fcac_case

	_04fc3f_jump:
		cmp    $0x000013,%al
		je     _04fc58_jump
		jmp    _04fcac_case

	_04fc45_jump:
		mov    $0x00001f,%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    $0x000021,%edx
		jmp    _04fca5_jump

	_04fc58_jump:
		mov    $0x000018,%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    $0x000019,%edx
		jmp    _04fca5_jump

	_04fc6b_case:
		mov    0x00006c(%esi),%al
		sub    $0x000013,%al
		cmp    $0x000004,%al
		ja     _04fcac_case
		and    $0x0000ff,%eax
		jmp    *%cs:_04f3a8_switch(,%eax,4)

	_04fc81_case:
		mov    $0x000017,%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    $0x00001a,%edx
		jmp    _04fca5_jump

	_04fc94_case:
		mov    $0x00001e,%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    $0x000020,%edx

	_04fca5_jump:
		mov    %ebp,%eax
		call   _04f280_func

	_04fcac_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _04f2ac_func
		mov    0x000081(%ebp),%ch
		mov    %esi,%eax
		or     $0x000004,%ch
		xor    %edx,%edx
		mov    %ch,0x000081(%ebp)
		call   _05f030_func
		xor    %al,%al
		mov    %al,_0cefc1_data
		jmp    _04f415_case

	_04fce1_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _04f2ac_func
		movb   $0x000008,_0cefc2_data
		xor    %eax,%eax
		mov    _0cefc3_data,%al
		lea    0x000000(,%eax,4),%ebx
		xor    %edx,%edx
		mov    _0cefc4_data,%al
		mov    %al,%dl
		inc    %al
		mov    _096aec_data(%ebx),%ebx
		mov    %al,_0cefc4_data
		mov    (%edx,%ebx,1),%al
		mov    0x000004(%esp),%dl
		mov    %al,_0e3dd9_data
		cmp    $0x000021,%dl
		jb     _04fd32_jump
		jbe    _04fd39_jump
		cmp    $0x00002b,%dl
		je     _04fd63_jump
		jmp    _04fd7d_jump

	_04fd32_jump:
		cmp    $0x000020,%dl
		je     _04fd4e_jump
		jmp    _04fd7d_jump

	_04fd39_jump:
		mov    $0x000016,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000012,%edx
		jmp    _04fd76_jump

	_04fd4e_jump:
		mov    $0x000015,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000011,%edx
		jmp    _04fd76_jump

	_04fd63_jump:
		mov    $0x000022,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000023,%edx

	_04fd76_jump:
		mov    %ebp,%eax
		call   _04f280_func

	_04fd7d_jump:
		mov    $0x000001,%ebx
		mov    0x000081(%ebp),%cl
		mov    %esi,%eax
		or     $0x000004,%cl
		xor    %edx,%edx
		mov    %cl,0x000081(%ebp)
		xor    %ch,%ch
		call   _05f030_func
		mov    %ch,_0cefc1_data
		jmp    _04f415_case

	_04fda7_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000008,%ebx
		call   _04f2ac_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		xor    %dh,%dh
		mov    %dh,_0cefc1_data
		jmp    _04f415_case

	_04fdd9_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000b,%ebx
		call   _04f2ac_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		xor    %dl,%dl
		mov    %dl,_0cefc1_data
		jmp    _04f415_case

	_04fe0b_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _04f2ac_func
		mov    0x000081(%edi),%dl
		mov    $0x000001,%ebx
		or     $0x000004,%dl
		mov    %edi,%eax
		mov    %dl,0x000081(%edi)
		call   _01f304_func
		mov    $0x000002,%edx
		movb   $0x000003,0x00007e(%esi)
		mov    %edi,%eax
		movw   $0x00fffa,0x000042(%edi)
		call   _01d374_func
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%edi),%al
		movsbw (%edx,%eax,8),%ax
		mov    $0x00000e,%ebx
		mov    %ax,0x000040(%edi)
		neg    %eax
		xor    %edx,%edx
		mov    %ax,0x000040(%edi)
		mov    %esi,%eax
		call   _01d374_func
		addl   $0x000064,0x000028(%esi)
		jmp    _04fe93_jump

	_04fe7c_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000d,%ebx
		call   _04f2ac_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func

	_04fe93_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,_0ceda4_data
		xor    %eax,%eax
		mov    _0cedc6_data,%dx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    $0x0000ff,%ecx
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x000010,%eax
		mov    $0x000001,%edx
		mov    %ax,_0ced9e_data
		mov    %esi,%eax
		call   _018690_func
		cmpb   $0x000016,0x000004(%esp)
		jne    _04ff02_jump
		mov    $0x000020,%bh
		mov    $0x000002,%ch
		mov    0x000081(%esi),%al
		mov    %bh,_0cefb8_data
		mov    %bh,_0cefb9_data
		mov    %ch,_0cefbf_data
		test   $0x000008,%al
		je     _04fefa_jump
		addw   $0x000050,_0ceda4_data
		jmp    _04ff02_jump

	_04fefa_jump:
		subw   $0x000050,_0ceda4_data

	_04ff02_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		xor    %ah,%ah
		mov    %ah,_0cefc1_data
		jmp    _04f415_case

	_04ff1d_case:
		mov    0x000081(%esi),%dh
		mov    (%esp),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)
		jmp    _04ff48_case

	_04ff41_case:
		orb    $0x000008,0x000081(%esi)

	_04ff48_case:
		mov    $0x00003c,%ecx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    %ecx,_0e3dc8_data
		call   _04f2ac_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		mov    %esi,%eax
		mov    0x000004(%esp),%bl
		call   _04ead8_func
		cmp    $0x00002d,%bl
		jne    _04ffa8_jump
		mov    _0cdbcc_data,%bx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0cdc0c_data,%dl
		mov    0x000068(%esi),%al
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %dx,_0ceda4_data
		mov    _0ceda2_data,%eax
		sar    $0x000010,%eax
		jmp    _05002f_jump

	_04ffa8_jump:
		cmp    $0x000019,%bl
		jne    _04ffde_jump
		mov    _0e3dca_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%edx
		mov    0x000028(%edx,%eax,1),%ax
		add    $0x000064,%eax
		mov    %ax,_0ceda4_data
		mov    _0ceda2_data,%eax
		sar    $0x000010,%eax
		add    $0x000050,%eax
		jmp    _05002f_jump

	_04ffde_jump:
		testb  $0x000008,0x000081(%esi)
		je     _050003_jump
		mov    0x000028(%esi),%ax
		add    $0x000030,%eax
		mov    %ax,_0ceda4_data
		mov    _0ceda2_data,%eax
		sar    $0x000010,%eax
		add    $0x000050,%eax
		jmp    _05002f_jump

	_050003_jump:
		mov    0x000028(%esi),%ax
		sub    $0x0000a0,%eax
		mov    %ax,_0ceda4_data
		cmp    $0x000019,%bl
		jne    _050024_jump
		mov    %eax,%edx
		add    $0x000070,%edx
		mov    %dx,_0ceda4_data

	_050024_jump:
		mov    _0ceda2_data,%eax
		sar    $0x000010,%eax
		sub    $0x000050,%eax

	_05002f_jump:
		mov    %eax,0x000028(%esi)
		mov    _0cedc4_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		sub    $0x000010,%edx
		mov    $0x0000ff,%ecx
		mov    %edx,0x00002c(%esi)
		mov    %ecx,%ebx
		mov    0x00002c(%esi),%ax
		mov    $0x000001,%dl
		mov    %ax,_0ced9e_data
		mov    %dl,_0cefbf_data
		mov    $0x000018,%al
		mov    $0x000001,%edx
		mov    %al,_0cefb8_data
		mov    %al,_0cefb9_data
		mov    %esi,%eax
		call   _018690_func
		xor    %edx,%edx
		mov    _0ced72_data,%ax
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    $0x00000e,%ebx
		mov    %ax,_0ced9e_data
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		xor    %dh,%dh
		mov    %dh,_0cefc1_data
		jmp    _04f415_case

	_0500b5_case:
		mov    %esi,%eax
		call   _01db14_func
		xor    %edx,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _04f2ac_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		xor    %dh,%dh
		mov    %dh,_0cefc1_data
		jmp    _04f415_case

	_0500ee_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _04f2ac_func
		andb   $0x0000fb,0x000081(%ebp)
		mov    0x000081(%edi),%al
		mov    $0x000006,%ebx
		and    $0x0000fb,%al
		xor    %edx,%edx
		mov    %al,0x000081(%edi)
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		xor    %ah,%ah
		mov    %ah,_0cefc1_data
		jmp    _04f415_case

	_050138_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _04f2ac_func
		subl   $0x000064,0x000028(%esi)
		mov    0x000081(%edi),%al
		xor    %edx,%edx
		and    $0x0000fb,%al
		mov    $0x000014,%ebx
		mov    %al,0x000081(%edi)
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		xor    %ah,%ah
		mov    %ah,_0cefc1_data
		jmp    _04f415_case

	_05017f_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000f,%ebx
		call   _04f2ac_func
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000001,%cl
		call   _01d374_func
		mov    $0x0000ff,%bl
		mov    _0cedc6_data,%dx
		mov    0x000028(%esi),%ax
		mov    %cl,_0cefbf_data
		mov    %ax,_0ceda4_data
		xor    %eax,%eax
		mov    $0x0000ff,%ecx
		mov    0x000069(%esi),%al
		mov    %bl,_0cefb8_data
		sub    %eax,%edx
		mov    %bl,_0cefb9_data
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x000010,%eax
		mov    $0x000001,%edx
		mov    %ax,_0ced9e_data
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _05f030_func
		mov    $0x0000ff,%al
		mov    %ch,_0cefc1_data
		mov    %al,_0e3ddc_data
		jmp    _04f415_case

	_050204_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _04f2ac_func
		mov    0x000081(%esi),%bh
		xor    %edx,%edx
		test   $0x000008,%bh
		sete   %dl
		mov    %esi,%eax
		call   _04ead8_func
		testb  $0x000008,0x000081(%esi)
		je     _050263_jump
		mov    $0x000090,%eax
		mov    _0cc5b4_data,%edx
		mov    0x000028(%esi),%ebx
		sub    %edx,%eax
		mov    _0cedc8_data,%dx
		sub    %eax,%ebx
		xor    %eax,%eax
		add    $0x000140,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		add    $0x000090,%edx
		mov    %ebx,0x000028(%esi)
		mov    %dx,_0ceda4_data
		jmp    _05028b_jump

	_050263_jump:
		xor    %eax,%eax
		mov    _0cedba_data,%dx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000028(%esi),%ecx
		mov    %edx,%eax
		add    $0x000088,%ecx
		sub    $0x000090,%eax
		mov    %ecx,0x000028(%esi)
		mov    %ax,_0ceda4_data

	_05028b_jump:
		xor    %eax,%eax
		mov    _0cefc3_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cefc4_data,%al
		mov    _096aec_data(%edx),%edx
		mov    %al,%bl
		inc    %al
		mov    (%edx,%ebx,1),%dl
		mov    %al,_0cefc4_data
		mov    _0ced70_data,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%bl
		sub    %ebx,%eax
		and    $0x0000ff,%edx
		sub    $0x000020,%eax
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    $0x00000f,%ebx
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %ax,_0ced9e_data
		mov    %esi,%eax
		mov    $0x0000ff,%ch
		call   _01d374_func
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ch,_0cefb8_data
		mov    %ch,_0cefb9_data
		mov    $0x0000ff,%ecx
		mov    %ah,_0cefbf_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		xor    %eax,%eax
		mov    $0x000029,%dl
		mov    _0cefc3_data,%al
		mov    %dl,_0e3dd8_data
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cefc4_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096aec_data(%edx),%edx
		mov    %al,_0cefc4_data
		mov    (%edx,%ebx,1),%al
		mov    %al,_0e3ddc_data
		cmp    $0x0000ff,%al
		jne    _05036d_jump

	_050356_jump:
		mov    $0x000006,%eax
		call   _069140_func
		mov    %al,_0e3ddc_data
		cmp    $0x000001,%al
		je     _050356_jump
		cmp    $0x000006,%al
		je     _050356_jump

	_05036d_jump:
		mov    $0x0000ff,%bl
		xor    %edx,%edx

	_050371_jump:
		movswl %dx,%eax
		inc    %edx
		mov    %bl,_0e3dc0_data(%eax)
		cmp    $0x000008,%dx
		jl     _050371_jump
		mov    $0xffff8300,%edx
		xor    %bh,%bh
		mov    %dx,_0e3dce_data
		mov    %bh,_0cefc1_data
		jmp    _04f415_case

	_05039a_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _04f2ac_func
		mov    0x000081(%esi),%cl
		mov    (%esp),%eax
		test   $0x000008,%cl
		sete   %dl
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    %ch,%dh
		mov    %ch,(%eax)
		or     %dl,%dh
		xor    %ebx,%ebx
		mov    %dh,(%eax)
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		xor    %bl,%bl
		call   _04ee20_func
		mov    %bl,_0cefc1_data
		jmp    _04f415_case

	_0503f0_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0503fc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dl,0x000010(%esp)
		mov    0x000048(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%edi
		shl    $0x000005,%edi
		add    %edx,%edi
		mov    _0cc300_data,%eax
		shl    $0x000002,%edi
		mov    %esp,%ecx
		add    %eax,%edi
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		mov    0x000050(%esi),%edx
		push   %eax
		sar    $0x000010,%edx
		mov    %edi,%eax
		call   _01d710_func
		cmpb   $0x000000,0x000010(%esp)
		je     _0504c9_jump
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		mov    (%eax),%eax
		shl    $0x000003,%edx
		add    %eax,%edx
		mov    0x00006c(%edi),%al
		cmp    $0x000012,%al
		jb     _050470_jump
		jbe    _050480_jump
		cmp    $0x000023,%al
		je     _05047a_jump
		jmp    _050484_jump

	_050470_jump:
		cmp    $0x000011,%al
		jne    _050484_jump
		movb   $0x00002f,0x000002(%edx)
		jmp    _050484_jump

	_05047a_jump:
		movb   $0x000030,0x000002(%edx)
		jmp    _050484_jump

	_050480_jump:
		movb   $0x00002e,0x000002(%edx)

	_050484_jump:
		mov    0x000002(%edx),%al
		mov    %al,0x00006a(%edi)
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _0504bc_jump
		movb   $0x000001,0x000070(%esi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000028(%esi),%ebx
		sub    $0x000005,%eax
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		jmp    _0504c9_jump

	_0504bc_jump:
		mov    0x000028(%esi),%edx
		movb   $0x000000,0x000070(%esi)
		add    $0x000005,%edx
		mov    %edx,0x000028(%esi)

	_0504c9_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%al
		mov    0x000074(%esi),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movw   $0x000000,0x000042(%esi)
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		mov    -0x000002(%esp),%edx
		sar    %ebx
		sar    $0x000010,%edx
		add    %ebx,%edx
		sub    %eax,%edx
		add    $0x000002,%edx
		mov    %edx,0x00002c(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_050508_switch:
		.long   _050539_case
		.long   _050546_case
		.long   _050553_case
		.long   _050560_case




_050518_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    _0e3dd9_data,%al
		dec    %al
		cmp    $0x000003,%al
		ja     _05056b_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_050508_switch(,%edx,4)

	_050539_case:
		mov    $0x000003,%ch
		mov    $0x0000c0,%al
		mov    %ch,0x000004(%esp)
		mov    %al,(%esp)
		jmp    _05056b_jump

	_050546_case:
		mov    $0x000004,%bh
		mov    $0x0000c0,%cl
		mov    %bh,0x000004(%esp)
		mov    %cl,(%esp)
		jmp    _05056b_jump

	_050553_case:
		mov    $0x000002,%dh
		mov    $0x0000c0,%bl
		mov    %dh,0x000004(%esp)
		mov    %bl,(%esp)
		jmp    _05056b_jump

	_050560_case:
		mov    $0x000004,%ah
		mov    $0x0000f4,%dl
		mov    %ah,0x000004(%esp)
		mov    %dl,(%esp)

	_05056b_jump:
		mov    _0cc300_data,%ebx
		mov    _0cc304_data,%si
		xor    %eax,%eax
		test   %si,%si
		jle    _050657_jump

	_050583_jump:
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    (%esp),%cl
		mov    0x000060(%ebx),%dx
		cmp    %ecx,%edx
		jne    _050647_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _050647_jump
		cmpw   $0x0000d5,0x000060(%edi)
		jne    _0505c3_jump
		mov    _0e3dce_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0cc300_data,%edi
		shl    $0x000002,%edx
		add    %edx,%edi

	_0505c3_jump:
		mov    0x000034(%edi),%ax
		mov    %ax,0x00004a(%ebx)
		xor    %eax,%eax
		mov    _0cefc2_data,%al
		mov    %ax,0x000052(%ebx)
		mov    0x000081(%ebx),%ah
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%ebx)
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    %ah,%dl
		and    $0x0000f7,%dl
		mov    %dl,0x000081(%ebx)
		mov    %dl,%dh
		movb   $0x000000,0x00006b(%ebx)
		or     %al,%dh
		mov    0x000004(%esp),%al
		mov    %dh,0x000081(%ebx)
		mov    %al,0x00006c(%ebx)
		mov    0x000034(%ebx),%ax
		mov    $0x000001,%edx
		mov    %ax,0x00004a(%edi)
		mov    %ebx,%eax
		call   _0503fc_func
		mov    0x000081(%ebx),%cl
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%cl
		mov    %ebx,%eax
		mov    %cl,0x000081(%ebx)
		call   _01f304_func
		mov    %ebx,%eax
		call   _01db8c_func
		jmp    _050657_jump

	_050647_jump:
		inc    %eax
		add    $0x000084,%ebx
		cmp    %si,%ax
		jl     _050583_jump

	_050657_jump:
		mov    $0x0000ff,%ch
		xor    %al,%al
		mov    %ch,_0cefc2_data
		mov    %al,_0e3dd9_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050670_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0e3dc8_data,%edx
		test   %edx,%edx
		je     _05068e_jump
		lea    -0x000001(%edx),%ebx
		mov    %ebx,_0e3dc8_data
		jmp    _050785_jump

	_05068e_jump:
		call   _04e9c8_func
		test   %al,%al
		je     _050785_jump
		mov    _0cefc0_data,%ah
		test   %ah,%ah
		je     _0506af_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0cefc0_data

	_0506af_jump:
		testb  $0x000001,0x000081(%esi)
		jne    _05077e_jump
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		jne    _0506fe_jump
		cmpb   $0x0000ff,_0cefc2_data
		je     _0506d3_jump
		mov    %esi,%eax
		call   _050518_func

	_0506d3_jump:
		movw   $0x000000,0x000040(%esi)
		mov    $0xffff8300,%edx
		movw   $0x000000,0x000042(%esi)
		mov    %dx,_0ceda4_data
		mov    %dx,_0ced9e_data
		mov    %dx,_0e3dd6_data
		jmp    _050777_jump

	_0506fe_jump:
		mov    _0e3dd4_data,%edx
		mov    $0x0000ff,%bl
		sar    $0x000010,%edx
		mov    %bl,_0cefc2_data
		cmp    $0xffff8300,%edx
		je     _05071e_jump
		call   _04ebb4_func
		jmp    _050758_jump

	_05071e_jump:
		cmpb   $0x000000,_0e3dd8_data
		jne    _050744_jump
		cmp    _0e3ddc_data,%bl
		je     _050744_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _050744_jump
		cmpb   $0x00000f,0x00006c(%esi)
		jne    _050744_jump
		mov    %esi,%eax
		call   _04ee9c_func
		jmp    _050758_jump

	_050744_jump:
		mov    _0e3dd8_data,%ah
		test   %ah,%ah
		je     _050758_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0e3dd8_data

	_050758_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0cefb9_data,%cl
		mov    _0cefb8_data,%bl
		mov    _0cefbf_data,%dl
		call   _018690_func

	_050777_jump:
		mov    %esi,%eax
		call   _018864_func

	_05077e_jump:
		mov    %esi,%eax
		call   _04f3bc_func

	_050785_jump:
		andb   $0x0000fe,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_050794_switch:
		.long   _0507e8_case
		.long   _050807_case
		.long   _050813_case
		.long   _050813_case
		.long   _050813_case




_0507a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cefc3_data,%ah
		cmp    $0x000008,%ah
		je     _0507bb_jump
		cmp    $0x000009,%ah
		jne    _0507c7_jump

	_0507bb_jump:
		mov    $_0cefbe_data,%eax
		mov    $_0cefbc_data,%ebx
		jmp    _0507d1_jump

	_0507c7_jump:
		mov    $_0cefc3_data,%eax
		mov    $_0cefc4_data,%ebx

	_0507d1_jump:
		mov    (%eax),%dh
		mov    %dh,%dl
		dec    %dl
		cmp    $0x000004,%dl
		ja     _050813_case
		xor    %ecx,%ecx
		mov    %dl,%cl
		jmp    *%cs:_050794_switch(,%ecx,4)

	_0507e8_case:
		cmpb   $0x000002,_0e3ddb_data
		jb     _050813_case
		cmpb   $0x000002,_0e3dda_data
		jbe    _050813_case
		xor    %cl,%cl
		movb   $0x000002,(%eax)
		mov    %cl,_0e3dda_data
		jmp    _050813_case

	_050807_case:
		cmpb   $0x000003,_0e3ddb_data
		jb     _050813_case
		movb   $0x000003,(%eax)

	_050813_case:
		cmp    (%eax),%dh
		je     _050821_jump
		xor    %al,%al
		movb   $0x000000,(%ebx)
		mov    %al,_0e3ddb_data

	_050821_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050828_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cefc4_data,%dl
		mov    _0cefc3_data,%dh

	_050837_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %dh,%bl
		mov    %dl,%cl
		mov    _096aec_data(,%ebx,4),%ebx
		xor    %ah,%ah
		mov    (%ecx,%ebx,1),%al
		cmp    $0x000018,%al
		jb     _05088d_jump
		jbe    _0508b9_jump
		cmp    $0x00001d,%al
		jb     _05087d_jump
		jbe    _0508c2_jump
		cmp    $0x000022,%al
		jb     _050874_jump
		cmp    $0x000024,%al
		jbe    _0508b9_jump
		cmp    $0x00002b,%al
		je     _0508b7_jump
		jmp    _0508ce_jump

	_050874_jump:
		cmp    $0x000021,%al
		je     _0508b7_jump
		jmp    _0508ce_jump

	_05087d_jump:
		cmp    $0x00001a,%al
		jb     _0508ce_jump
		jbe    _0508b9_jump
		cmp    $0x00001c,%al
		je     _0508bf_jump
		jmp    _0508ce_jump

	_05088d_jump:
		cmp    $0x00000f,%al
		jb     _0508a1_jump
		jbe    _0508b9_jump
		cmp    $0x000012,%al
		jb     _0508ce_jump
		cmp    $0x000013,%al
		jbe    _0508b9_jump
		cmp    $0x000016,%al
		je     _0508c6_jump
		jmp    _0508ce_jump

	_0508a1_jump:
		test   %al,%al
		jbe    _0508af_jump
		cmp    $0x000001,%al
		jne    _0508ce_jump
		mov    %al,%ah
		xor    %dl,%dl
		jmp    _0508ce_jump

	_0508af_jump:
		mov    $0x000001,%ah
		xor    %dl,%dl
		add    %ah,%dh
		jmp    _0508ce_jump

	_0508b7_jump:
		inc    %dl

	_0508b9_jump:
		mov    $0x000001,%ah
		add    %ah,%dl
		jmp    _0508ce_jump

	_0508bf_jump:
		add    $0x000002,%dl

	_0508c2_jump:
		mov    $0x000001,%ah
		jmp    _0508ce_jump

	_0508c6_jump:
		test   %dl,%dl
		je     _0508ce_jump
		mov    $0x000001,%ah
		sub    %ah,%dl

	_0508ce_jump:
		test   %ah,%ah
		jne    _050837_jump
		mov    %dl,_0cefbc_data
		mov    %dh,_0cefbe_data
		mov    %dh,_0cefc3_data
		mov    %dl,_0cefc4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0508f4_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		xor    %ecx,%ecx
		mov    0x00006d(%eax),%cl
		mov    0x00000c(%ebx),%esi
		lea    0x000000(,%ecx,4),%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    (%esi),%esi
		mov    0x00006c(%ebx),%al
		testb  $0x000001,0x000007(%esi,%eax,8)
		je     _050a40_jump
		cmpb   $0x000000,_0cefc0_data
		jne    _050a40_jump
		shl    $0x000008,%ecx
		add    %ecx,%eax
		cmp    $0x000013,%eax
		jb     _05097b_jump
		jbe    _0509a1_jump
		cmp    $0x000022,%eax
		jb     _050961_jump
		jbe    _0509a1_jump
		cmp    $0x000025,%eax
		jb     _0509af_jump
		jbe    _0509a8_jump
		cmp    $0x00002c,%eax
		je     _0509a8_jump
		jmp    _0509af_jump

	_050961_jump:
		cmp    $0x000015,%eax
		jb     _0509af_jump
		cmp    $0x000018,%eax
		jbe    _0509a1_jump
		cmp    $0x00001e,%eax
		jb     _0509af_jump
		cmp    $0x00001f,%eax
		jbe    _0509a1_jump
		jmp    _0509af_jump

	_05097b_jump:
		cmp    $0x00000a,%eax
		jb     _050993_jump
		cmp    $0x00000b,%eax
		jbe    _0509a8_jump
		cmp    $0x00000d,%eax
		jb     _0509af_jump
		jbe    _0509a8_jump
		cmp    $0x00000f,%eax
		je     _0509a8_jump
		jmp    _0509af_jump

	_050993_jump:
		cmp    $0x000002,%eax
		jb     _0509af_jump
		jbe    _0509a8_jump
		cmp    $0x000006,%eax
		je     _0509a8_jump
		jmp    _0509af_jump

	_0509a1_jump:
		mov    $0x0000ff,%eax
		jmp    _0509b4_jump

	_0509a8_jump:
		mov    $0xffffffff,%eax
		jmp    _0509b4_jump

	_0509af_jump:
		mov    $0x000001,%eax

	_0509b4_jump:
		cmp    %dx,%ax
		jne    _050a40_jump
		cmp    $0x000001,%dx
		jne    _0509dc_jump
		movb   $0x000001,_0cdcd3_data
		mov    %ebx,%eax
		call   _01e6dc_func
		incb   _0e3ddb_data
		call   _0507a8_func

	_0509dc_jump:
		cmpb   $0x000000,0x000076(%ebx)
		je     _050a0d_jump
		mov    _0cefc3_data,%al
		cmp    $0x000008,%al
		je     _050a1b_jump
		cmp    $0x000009,%al
		je     _050a1b_jump
		call   _050828_func
		cmpw   $0x000062,0x000060(%ebx)
		jne    _050a04_jump
		movb   $0x000008,_0cefc3_data
		jmp    _050a1b_jump

	_050a04_jump:
		movb   $0x000009,_0cefc3_data
		jmp    _050a1b_jump

	_050a0d_jump:
		movb   $0x00000a,_0cefc3_data
		movb   $0x000001,_0cefca_data

	_050a1b_jump:
		xor    %cl,%cl
		mov    $0x000001,%al
		mov    %cl,_0cefc4_data
		mov    %al,_0cefc1_data
		mov    0x000081(%ebx),%ah
		mov    $0x0000ff,%ch
		or     %al,%ah
		mov    %ch,_0cefc0_data
		mov    %ah,0x000081(%ebx)

	_050a40_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_050a44_switch:
		.long   _050a77_case
		.long   _050a6f_case
		.long   _050a73_case
		.long   _050a6f_case




_050a54_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x00006c(%eax),%al
		sub    $0x000002,%al
		cmp    $0x000003,%al
		ja     _050a79_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_050a44_switch(,%eax,4)

	_050a6f_case:
		xor    %dl,%dl
		jmp    _050a79_jump

	_050a73_case:
		mov    $0x000007,%dl
		jmp    _050a79_jump

	_050a77_case:
		mov    $0x00000e,%dl

	_050a79_jump:
		cmp    0x00006b(%ebx),%dl
		jb     _050a8c_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _0503fc_func
		jmp    _050b05_jump

	_050a8c_jump:
		mov    0x000048(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x000034(%ebx),%cx
		cmp    0x00004a(%eax),%cx
		jne    _050b05_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		mov    (%ecx),%ecx
		shl    $0x000003,%edx
		mov    0x00006a(%eax),%al
		add    %ecx,%edx
		cmp    $0x00002f,%al
		jb     _050adf_jump
		jbe    _050af2_jump
		cmp    $0x000030,%al
		je     _050b01_jump
		mov    %ebx,%eax
		call   _053ce4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050adf_jump:
		cmp    $0x00002e,%al
		jne    _050b05_jump
		movb   $0x000001,0x000002(%edx)
		mov    %ebx,%eax
		call   _053ce4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050af2_jump:
		movb   $0x000000,0x000002(%edx)
		mov    %ebx,%eax
		call   _053ce4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050b01_jump:
		movb   $0x00001c,0x000002(%edx)

	_050b05_jump:
		mov    %ebx,%eax
		call   _053ce4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050b10_func:
		push   %edx
		mov    0x00007f(%eax),%dl
		test   %dl,%dl
		je     _050b26_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x00007f(%eax)
		jne    _050b26_jump
		call   _04ec6c_func

	_050b26_jump:
		pop    %edx
		ret    



_050b30_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%ebx
		mov    _0cdc30_data,%edx
		cmpl   $0x000000,0x000024(%edx)
		jne    _050b7f_jump
		xor    %ecx,%ecx
		mov    _0cdbcc_data,%di
		mov    _0cdc0c_data,%cl
		movzbl _0cdc18_data,%esi
		add    %edi,%ecx
		movzbl _0cdc0d_data,%edi
		add    %edi,%esi
		mov    _0cdbd0_data,%ebp
		sar    %esi
		movw   $0x000000,0x000040(%edx)
		add    %ebp,%esi
		movw   $0x000000,0x000042(%edx)
		sub    $0x00000a,%esi
		jmp    _050b9c_jump

	_050b7f_jump:
		xor    %ecx,%ecx
		mov    0x000028(%edx),%si
		mov    0x000068(%edx),%cl
		movzbl 0x000069(%edx),%edi
		add    %esi,%ecx
		movzbl 0x000074(%edx),%esi
		add    %edi,%esi
		sar    %esi
		add    0x00002c(%edx),%esi
		sub    $0x000003,%esi

	_050b9c_jump:
		xor    %edx,%edx
		movzbl 0x000074(%eax),%edi
		mov    0x000069(%eax),%dl
		add    %edi,%edx
		sar    %edx
		mov    0x00002c(%eax),%edi
		add    %edx,%edi
		movswl %si,%edx
		mov    0x000028(%eax),%si
		sub    %esi,%ecx
		mov    %ecx,%esi
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		sub    %edx,%edi
		sub    %ecx,%esi
		mov    %edi,%edx
		mov    %si,(%ebx)
		test   %di,%di
		jge    _050c13_jump
		mov    _0cdc30_data,%ebx
		cmpw   $0x000000,0x000042(%ebx)
		jle    _050bfd_jump
		movswl %dx,%edx
		cmp    $0xffffffe2,%edx
		jle    _050beb_jump
		addw   $0x000002,0x000042(%eax)
		jmp    _050c5c_jump

	_050beb_jump:
		cmp    $0xffffffd0,%edx
		jle    _050c5c_jump
		incw   0x000042(%eax)
		jmp    _050c5c_jump

	_050bfd_jump:
		movswl %dx,%edx
		cmp    $0xffffffe2,%edx
		jle    _050c0c_jump
		subw   $0x000002,0x000042(%eax)
		jmp    _050c5c_jump

	_050c0c_jump:
		cmp    $0xffffffd0,%edx
		jle    _050c5c_jump
		jmp    _050c58_jump

	_050c13_jump:
		mov    _0cdc30_data,%ebx
		cmpw   $0x000000,0x000042(%ebx)
		jl     _050c41_jump
		cmp    $0x00001e,%dx
		jge    _050c31_jump
		addw   $0x000002,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_050c31_jump:
		cmp    $0x000030,%dx
		jge    _050c5c_jump
		incw   0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_050c41_jump:
		cmp    $0x00001e,%dx
		jge    _050c52_jump
		subw   $0x000002,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_050c52_jump:
		cmp    $0x000030,%dx
		jge    _050c5c_jump

	_050c58_jump:
		decw   0x000042(%eax)

	_050c5c_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_050c64_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    0x00006d(%eax),%dl
		xor    %cl,%cl
		cmp    $0x000002,%dl
		je     _050c9e_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%eax),%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000001,0x000007(%ebx,%edx,8)
		je     _050cc7_jump
		mov    $0x000001,%ebx
		mov    %ebx,%edx
		call   _05f030_func
		jmp    _050cc7_jump

	_050c9e_jump:
		cmp    %dl,%dl
		jne    _050cc5_jump
		cmpb   $0x000001,0x00006c(%eax)
		jne    _050cc5_jump
		cmpb   $0x000000,0x00006b(%eax)
		jne    _050cc5_jump
		movw   $0x00fffb,0x000042(%eax)
		mov    %cl,0x000071(%eax)
		mov    0x00002c(%eax),%edx
		mov    %cl,0x000072(%eax)
		sub    $0x00000e,%edx
		mov    %edx,0x00002c(%eax)
		jmp    _050cc7_jump

	_050cc5_jump:
		mov    $0x000001,%cl

	_050cc7_jump:
		mov    %cl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050cd0_func:
		testb  $0x000008,0x000081(%eax)
		jne    _050cde_jump
		test   %dx,%dx
		jg     _050cec_jump

	_050cde_jump:
		testb  $0x000008,0x000081(%eax)
		je     _050cef_jump
		test   %dx,%dx
		jge    _050cef_jump

	_050cec_jump:
		mov    $0x000001,%al
		ret    

	_050cef_jump:
		xor    %al,%al
		ret    



_050cf4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000002,0x00006d(%eax)
		je     _050d0a_jump
		cmpb   $0x000001,0x00006d(%ebx)
		jne    _050e5b_jump

	_050d0a_jump:
		movswl %dx,%edx
		mov    %ebx,%eax
		call   _050cd0_func
		test   %al,%al
		je     _050d62_jump
		cmpb   $0x000002,0x00006d(%ebx)
		jne    _050d3d_jump
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _050d3d_jump
		cmpb   $0x000000,0x00006c(%ebx)
		setne  %al
		and    $0x0000ff,%eax
		je     _050d3d_jump
		incw   0x000042(%ebx)
		jmp    _050d44_jump

	_050d3d_jump:
		mov    %ebx,%eax
		call   _050c64_func

	_050d44_jump:
		testb  $0x000008,0x000081(%ebx)
		jne    _050d54_jump
		mov    $0x000004,%eax
		jmp    _050d59_jump

	_050d54_jump:
		mov    $0xfffffffc,%eax

	_050d59_jump:
		mov    %ax,0x000040(%ebx)
		jmp    _050dd2_jump

	_050d62_jump:
		mov    _0cdbe4_data,%ax
		mov    %eax,%edx
		mov    %ax,0x000040(%ebx)
		neg    %edx
		mov    0x00003a(%ebx),%eax
		mov    %dx,0x000040(%ebx)
		sar    $0x000010,%eax
		cmp    0x000028(%ebx),%eax
		jle    _050da3_jump
		testb  $0x000008,0x000081(%ebx)
		je     _050da3_jump
		mov    0x000040(%ebx),%di
		test   %di,%di
		jge    _050d99_jump
		movw   $0x000000,0x000040(%ebx)
		jmp    _050dd2_jump

	_050d99_jump:
		mov    %edi,%eax
		add    %edi,%eax
		mov    %ax,0x000040(%ebx)
		jmp    _050dd2_jump

	_050da3_jump:
		mov    0x00003a(%ebx),%eax
		mov    0x000028(%ebx),%ecx
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		jge    _050dd2_jump
		testb  $0x000008,0x000081(%ebx)
		jne    _050dd2_jump
		mov    0x000040(%ebx),%cx
		test   %cx,%cx
		jle    _050dca_jump
		movw   $0x000000,0x000040(%ebx)
		jmp    _050dd2_jump

	_050dca_jump:
		mov    %ecx,%esi
		add    %ecx,%esi
		mov    %si,0x000040(%ebx)

	_050dd2_jump:
		mov    0x00006d(%ebx),%cl
		cmp    $0x000001,%cl
		jne    _050e33_jump
		xor    %eax,%eax
		mov    %cl,%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    0x000081(%ebx),%ch
		add    $0x000007,%eax
		test   $0x000008,%ch
		jne    _050e07_jump
		cmpw   $0x000000,0x000040(%ebx)
		jg     _050e17_jump

	_050e07_jump:
		testb  $0x000008,0x000081(%ebx)
		je     _050e1e_jump
		cmpw   $0x000000,0x000040(%ebx)
		jge    _050e1e_jump

	_050e17_jump:
		mov    $0x000001,%edx
		jmp    _050e20_jump

	_050e1e_jump:
		xor    %edx,%edx

	_050e20_jump:
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		mov    %dh,(%eax)
		shl    $0x000004,%dl
		mov    %dh,%cl
		or     %dl,%cl
		mov    %cl,(%eax)

	_050e33_jump:
		cmpw   $0x000004,0x000040(%ebx)
		jle    _050e45_jump
		movw   $0x000004,0x000040(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_050e45_jump:
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffc,%eax
		jge    _050e62_jump
		movw   $0x00fffc,0x000040(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_050e5b_jump:
		mov    %ebx,%eax
		call   _053ce4_func

	_050e62_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_050e68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _050e9a_jump
		cmpb   $0x00000a,0x00006c(%ebx)
		jne    _050e9a_jump
		mov    0x00004a(%ebx),%cx
		cmp    $0x000032,%cx
		jle    _051114_jump
		mov    %ecx,%esi
		sub    $0x000032,%esi
		mov    %si,0x00004a(%ebx)
		jmp    _051114_jump

	_050e9a_jump:
		mov    %ebx,%eax
		call   _050c64_func
		test   %al,%al
		je     _051114_jump
		cmpb   $0x000001,0x00006c(%ebx)
		setne  %al
		and    $0x0000ff,%eax
		je     _050eef_jump
		cmpw   $0x0001f4,0x00004a(%ebx)
		jne    _050eef_jump
		movb   $0x00008c,0x00007d(%ebx)
		mov    0x00004a(%ebx),%dx
		mov    0x000028(%ebx),%ax
		inc    %edx
		mov    %ax,0x00004e(%ebx)
		mov    %ebx,%eax
		mov    %dx,0x00004a(%ebx)
		mov    $0x000003,%edx
		movw   $0x000000,0x000042(%ebx)
		call   _01d364_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050eef_jump:
		mov    0x00006c(%ebx),%cl
		cmp    $0x000003,%cl
		jne    _050f1e_jump
		cmpb   $0x000000,0x000072(%ebx)
		je     _051114_jump
		mov    0x000042(%ebx),%di
		test   %di,%di
		jl     _051114_jump
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x000042(%ebx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050f1e_jump:
		cmp    $0x000004,%cl
		jne    _051114_jump
		mov    0x00004c(%ebx),%eax
		mov    0x000028(%ebx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _050f3a_jump
		neg    %eax

	_050f3a_jump:
		mov    %eax,%edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    _0cdbcc_data,%esi
		mov    _0cdc0c_data,%al
		add    %eax,%esi
		mov    0x00004c(%ebx),%eax
		sar    $0x000010,%eax
		sub    %eax,%esi
		mov    %esi,%eax
		movzbl 0x000068(%ebx),%esi
		sub    %esi,%eax
		sub    $0x00000a,%eax
		test   %eax,%eax
		jge    _050f66_jump
		neg    %eax

	_050f66_jump:
		movzbw 0x00007d(%ebx),%si
		mov    %ax,(%esp)
		cmp    %si,%dx
		jg     _050f7f_jump
		cmp    %ax,%dx
		jle    _050fce_jump
		cmpb   $0x00008c,0x00007d(%ebx)
		jne    _050fce_jump

	_050f7f_jump:
		cmpb   $0x00008c,0x00007d(%ebx)
		jne    _050f93_jump
		cmpw   $0x00008c,(%esp)
		jge    _050f93_jump
		mov    (%esp),%al
		mov    %al,0x00007d(%ebx)

	_050f93_jump:
		cmpb   $0x000001,0x000072(%ebx)
		jne    _050fac_jump
		testb  $0x000008,0x000081(%ebx)
		jne    _050fa8_jump
		incw   0x000040(%ebx)
		jmp    _050fac_jump

	_050fa8_jump:
		decw   0x000040(%ebx)

	_050fac_jump:
		cmpb   $0x000001,0x000071(%ebx)
		jne    _0510e6_jump
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jle    _0510e6_jump
		decw   0x000042(%ebx)
		jmp    _0510e6_jump

	_050fce_jump:
		xor    %eax,%eax
		mov    _0cdbd0_data,%di
		mov    0x000069(%ebx),%al
		mov    0x00002c(%ebx),%si
		mov    %eax,%edx
		xor    %eax,%eax
		add    %esi,%edx
		mov    _0cdc0d_data,%al
		sub    %edi,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		cmpw   $0x000000,0x000040(%ebx)
		jg     _050fff_jump
		testb  $0x000008,0x000081(%ebx)
		je     _05100f_jump

	_050fff_jump:
		cmpw   $0x000000,0x000040(%ebx)
		jl     _051063_jump
		testb  $0x000008,0x000081(%ebx)
		je     _051063_jump

	_05100f_jump:
		testb  $0x000008,0x000081(%ebx)
		jne    _051020_jump
		movw   $0x00fffc,0x000040(%ebx)
		jmp    _051026_jump

	_051020_jump:
		movw   $0x000004,0x000040(%ebx)

	_051026_jump:
		cmp    $0x00000a,%ax
		jle    _051037_jump
		movw   $0x00ffff,0x000042(%ebx)
		jmp    _0510e6_jump

	_051037_jump:
		cwtl   
		cmp    $0xffffffec,%eax
		jge    _051048_jump
		movw   $0x000002,0x000042(%ebx)
		jmp    _0510e6_jump

	_051048_jump:
		cmp    $0xfffffff6,%eax
		jge    _051058_jump
		movw   $0x000001,0x000042(%ebx)
		jmp    _0510e6_jump

	_051058_jump:
		movw   $0x000000,0x000042(%ebx)
		jmp    _0510e6_jump

	_051063_jump:
		cwtl   
		cmp    $0xfffffff6,%eax
		jle    _05107a_jump
		cmpb   $0x000000,_0cdc11_data
		jne    _05107a_jump
		movw   $0x000000,0x000042(%ebx)
		jmp    _051080_jump

	_05107a_jump:
		movw   $0x000001,0x000042(%ebx)

	_051080_jump:
		cmp    $0x000008,%cx
		jge    _05108f_jump
		testb  $0x000008,0x000081(%ebx)
		je     _05109e_jump

	_05108f_jump:
		cmp    $0x000008,%cx
		jle    _0510b5_jump
		testb  $0x000008,0x000081(%ebx)
		je     _0510b5_jump

	_05109e_jump:
		decw   0x000040(%ebx)
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffc,%eax
		jge    _0510ca_jump
		movw   $0x00fffc,0x000040(%ebx)
		jmp    _0510ca_jump

	_0510b5_jump:
		mov    0x000040(%ebx),%di
		inc    %edi
		mov    %di,0x000040(%ebx)
		cmp    $0x000004,%di
		jle    _0510ca_jump
		movw   $0x000004,0x000040(%ebx)

	_0510ca_jump:
		mov    0x000040(%ebx),%si
		test   %si,%si
		jne    _0510e6_jump
		cmp    $0x000008,%cx
		jge    _0510e6_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		mov    %si,0x00004a(%ebx)
		call   _01d364_func

	_0510e6_jump:
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _051114_jump
		cmpw   $0x000000,0x000040(%ebx)
		jle    _05110b_jump
		mov    $0xffffffff,%eax
		jmp    _051110_jump

	_05110b_jump:
		mov    $0x000001,%eax

	_051110_jump:
		mov    %ax,0x000040(%ebx)

	_051114_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051120_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00006d(%eax),%ah
		xor    %bl,%bl
		test   %ah,%ah
		jne    _051156_jump
		cmpb   $0x000003,0x00006c(%edx)
		jne    _051156_jump
		movw   $0x00fffc,0x000042(%edx)
		mov    0x000081(%edx),%cl
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%cl
		mov    $0x000001,%bl
		mov    %cl,0x000081(%edx)
		jmp    _051216_jump

	_051156_jump:
		cmpb   $0x000001,0x00006d(%edx)
		jne    _051162_jump
		cmpb   $0x000002,0x00006c(%edx)
		je     _05118a_jump

	_051162_jump:
		cmpb   $0x000000,0x00006d(%edx)
		jne    _051175_jump
		mov    0x00006c(%edx),%ah
		cmp    $0x000002,%ah
		je     _05118a_jump
		cmp    $0x000004,%ah
		je     _05118a_jump

	_051175_jump:
		mov    0x00006d(%edx),%cl
		cmp    $0x000002,%cl
		jne    _051216_jump
		cmp    0x00006c(%edx),%cl
		jne    _051216_jump

	_05118a_jump:
		mov    %edx,%eax
		mov    $0x000001,%bl
		call   _01cbd0_func
		test   %al,%al
		je     _0511a3_jump
		movw   $0x000000,0x00004a(%edx)
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0511a3_jump:
		cmpb   $0x000002,0x00006d(%edx)
		je     _0511b6_jump
		mov    %edx,%eax
		call   _053ce4_func
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0511b6_jump:
		mov    0x00004a(%edx),%cx
		movw   $0x000000,0x000042(%edx)
		cmp    $0x0001f4,%cx
		jl     _051216_jump
		mov    0x00004c(%edx),%eax
		mov    0x000028(%edx),%ecx
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _0511da_jump
		neg    %eax

	_0511da_jump:
		cmp    $0x000008,%ax
		jge    _0511fd_jump
		testb  $0x000008,0x000081(%edx)
		jne    _0511f3_jump
		decw   0x000040(%edx)
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0511f3_jump:
		incw   0x000040(%edx)
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0511fd_jump:
		testb  $0x000008,0x000081(%edx)
		jne    _05120d_jump
		mov    $0x000004,%eax
		jmp    _051212_jump

	_05120d_jump:
		mov    $0xfffffffc,%eax

	_051212_jump:
		mov    %ax,0x000040(%edx)

	_051216_jump:
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05121c_switch:
		.long   _051428_case
		.long   _051453_case
		.long   _0514c8_case
		.long   _051428_case




_05122c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		mov    (%edx),%ebp
		shl    $0x000003,%eax
		add    %eax,%ebp
		mov    %ecx,%eax
		call   _051120_func
		test   %al,%al
		jne    _05162d_jump
		cmpw   $0x0001f4,0x00004a(%ecx)
		jl     _051277_jump
		mov    %ecx,%eax
		call   _050e68_func
		jmp    _05162d_jump

	_051277_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _051287_jump
		cmpb   $0x000007,0x00006c(%ecx)
		je     _05162d_jump

	_051287_jump:
		mov    0x000070(%ecx),%dh
		test   %dh,%dh
		jne    _051297_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _0512a3_jump

	_051297_jump:
		cmp    $0x000001,%dh
		jne    _0512a3_jump
		orb    $0x000008,0x000081(%ecx)

	_0512a3_jump:
		cmpb   $0x000000,0x00007b(%ecx)
		je     _051589_jump
		xor    %eax,%eax
		mov    _0cdbcc_data,%bx
		mov    _0cdc0c_data,%al
		mov    0x000028(%ecx),%si
		add    %ebx,%eax
		sub    %esi,%eax
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%esi
		movswl %si,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _0512d7_jump
		neg    %eax

	_0512d7_jump:
		sar    %eax
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%ecx),%bx
		mov    0x000069(%ecx),%al
		add    %ebx,%eax
		mov    _0cdbd0_data,%bx
		sub    %ebx,%eax
		mov    %eax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%ebx
		mov    _0cdc0d_data,%al
		sub    %eax,%ebx
		incw   0x00004a(%ecx)
		mov    %ecx,%eax
		mov    %ebx,0x000008(%esp)
		call   _050cd0_func
		test   %al,%al
		je     _05133c_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _051330_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _051330_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d364_func
		jmp    _051505_jump

	_051330_jump:
		mov    %ecx,%eax
		call   _050c64_func
		jmp    _051505_jump

	_05133c_jump:
		cmpb   $0x000000,_0cdcd2_data
		jne    _051352_jump
		cmpb   $0x000000,_0cdcd4_data
		je     _05140e_jump

	_051352_jump:
		mov    %esp,%edx
		mov    %ecx,%eax
		call   _050b30_func
		testb  $0x000008,0x000081(%ecx)
		jne    _051388_jump
		movswl %si,%eax
		cmp    $0xfffffff6,%eax
		jge    _051388_jump
		movswl %di,%eax
		mov    -0x000002(%esp),%edx
		neg    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _0513a9_jump
		mov    _0cdc30_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jge    _0513a9_jump

	_051388_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _0513cf_jump
		cmp    $0x00000a,%si
		jle    _0513cf_jump
		cmp    (%esp),%di
		jg     _0513a9_jump
		mov    _0cdc30_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jg     _0513cf_jump

	_0513a9_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _0513b9_jump
		mov    %ecx,%eax
		call   _050c64_func
		jmp    _0513e7_jump

	_0513b9_jump:
		testb  $0x000004,0x000007(%ebp)
		je     _0513e7_jump
		mov    $0x000009,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _0513e7_jump

	_0513cf_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0513e7_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _0513e7_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d364_func

	_0513e7_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _0513f8_jump
		movw   $0x00fffd,0x000042(%ecx)

	_0513f8_jump:
		cmpw   $0x000003,0x000042(%ecx)
		jle    _051505_jump
		movw   $0x000003,0x000042(%ecx)
		jmp    _051505_jump

	_05140e_jump:
		mov    _0cdc11_data,%al
		cmp    $0x000003,%al
		ja     _051505_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05121c_switch(,%eax,4)

	_051428_case:
		mov    0x00006d(%ecx),%dl
		cmp    $0x000001,%dl
		je     _05143a_jump
		test   %dl,%dl
		jne    _051448_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _051448_jump

	_05143a_jump:
		mov    $0x000008,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func

	_051448_jump:
		movw   $0x000000,0x000040(%ecx)
		jmp    _051505_jump

	_051453_case:
		cmpb   $0x000002,0x00006d(%ecx)
		setne  %al
		and    $0x0000ff,%eax
		je     _051505_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _051471_jump
		cmpb   $0x000009,0x00006c(%ecx)
		je     _051478_jump

	_051471_jump:
		mov    $0x000001,%edx
		jmp    _05147a_jump

	_051478_jump:
		xor    %edx,%edx

	_05147a_jump:
		test   %edx,%edx
		je     _051505_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _05148e_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		je     _051495_jump

	_05148e_jump:
		mov    $0x000001,%edx
		jmp    _051497_jump

	_051495_jump:
		xor    %edx,%edx

	_051497_jump:
		test   %edx,%edx
		je     _051505_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0514ab_jump
		cmpb   $0x00000b,0x00006c(%ecx)
		je     _0514b2_jump

	_0514ab_jump:
		mov    $0x000001,%eax
		jmp    _0514b4_jump

	_0514b2_jump:
		xor    %eax,%eax

	_0514b4_jump:
		test   %eax,%eax
		je     _051505_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		jmp    _051505_jump

	_0514c8_case:
		mov    %ecx,%eax
		call   _050c64_func
		test   %al,%al
		je     _051505_jump
		cmpw   $0x000000,0x000008(%esp)
		jle    _0514f8_jump
		cmpb   $0x000001,0x000071(%ecx)
		jne    _051505_jump
		decw   0x000042(%ecx)
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _051505_jump
		movw   $0x00fffd,0x000042(%ecx)
		jmp    _051505_jump

	_0514f8_jump:
		cmpw   $0x000001,0x000042(%ecx)
		jle    _051505_jump
		movw   $0x000001,0x000042(%ecx)

	_051505_jump:
		cmp    $0x000028,%di
		jge    _051545_jump
		cmpw   $0x00000a,0x000008(%esp)
		jge    _051545_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _051545_jump
		testb  $0x000002,0x000007(%ebp)
		je     _051545_jump
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _05152f_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d36c_func

	_05152f_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _01d364_func
		movw   $0x000001,0x000052(%ecx)
		movb   $0x000000,0x00007f(%ecx)

	_051545_jump:
		cmpw   $0x000001,0x000052(%ecx)
		jne    _05155f_jump
		mov    0x00007f(%ecx),%dl
		inc    %dl
		mov    %dl,0x00007f(%ecx)
		cmp    $0x000028,%dl
		jbe    _05155f_jump
		movw   $0x000000,0x000052(%ecx)

	_05155f_jump:
		mov    _0cedf8_data,%eax
		mov    0x00002c(%ecx),%ebx
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000074(%ecx),%dl
		sub    $0x000032,%eax
		add    %ebx,%edx
		cmp    %eax,%edx
		jge    _05157d_jump
		addw   $0x000002,0x000042(%ecx)

	_05157d_jump:
		movswl %si,%edx
		mov    %ecx,%eax
		call   _050cf4_func
		jmp    _0515ef_jump

	_051589_jump:
		mov    0x00006d(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x000002,%dl
		je     _0515ef_jump
		cmp    $0x000001,%dl
		jne    _0515bb_jump
		mov    $0x000008,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _05f030_func

	_0515bb_jump:
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01db14_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _0515ef_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05f030_func

	_0515ef_jump:
		xor    %eax,%eax
		mov    0x000065(%ecx),%al
		testb  $0x000001,_092224_data(%eax)
		je     _051603_jump
		movw   $0x000000,0x000042(%ecx)

	_051603_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _051620_jump
		movw   $0x000000,0x000040(%ecx)

	_051620_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		je     _05162d_jump
		mov    %ecx,%eax
		call   _0252c0_func

	_05162d_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051638_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x000001,%dx
		jne    _051676_jump
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _051661_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _05f030_func
		pop    %ecx
		pop    %ebx
		ret    

	_051661_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		andb   $0x0000ef,0x000081(%ecx)

	_051676_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05167c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0516ae_jump
		cmpb   $0x000003,0x00006c(%ecx)
		jne    _0516ae_jump
		movw   $0x000000,0x000040(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x00fff8,0x000042(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0516ae_jump:
		mov    %ecx,%eax
		call   _051868_func
		cmpw   $0x000000,0x00004a(%ecx)
		je     _0516de_jump
		mov    %ecx,%eax
		call   _050c64_func
		test   %al,%al
		je     _0516de_jump
		testb  $0x000008,0x000081(%ecx)
		je     _0516d8_jump
		movw   $0x000002,0x000040(%ecx)
		jmp    _0516de_jump

	_0516d8_jump:
		movw   $0x00fffe,0x000040(%ecx)

	_0516de_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		je     _05171a_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _05170c_jump
		movw   $0x0001f6,0x00004a(%ecx)
		movw   $0x000000,0x000040(%ecx)

	_05170c_jump:
		mov    %ecx,%eax
		call   _053ce4_func
		mov    %ecx,%eax
		call   _0252c0_func

	_05171a_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024c98_func
		mov    0x00006d(%ecx),%bh
		movzbw %al,%si
		cmp    $0x000002,%bh
		jne    _05176f_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000074(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _05179c_jump
		cmpw   $0x000000,0x000042(%ecx)
		jge    _05179c_jump
		movw   $0x000001,0x000042(%ecx)
		jmp    _05179c_jump

	_05176f_jump:
		xor    %eax,%eax
		mov    0x000066(%ecx),%al
		testb  $0x000002,_092224_data(%eax)
		jne    _05179c_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _05f030_func

	_05179c_jump:
		movswl %si,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _0517fc_jump
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _0517ba_jump
		mov    %ecx,%eax
		call   _01dbb8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0517ba_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		and    $0x000001,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    0x000040(%ecx),%si
		mov    %ah,0x000081(%ecx)
		shl    $0x000003,%al
		neg    %esi
		mov    %ah,%dl
		mov    %si,0x000040(%ecx)
		or     %al,%dl
		mov    %dl,0x000081(%ecx)

	_0517fc_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051804_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x000001,%dx
		jne    _051864_jump
		mov    _0cdc30_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _051825_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _05182e_jump

	_051825_jump:
		jge    _05182e_jump
		orb    $0x000008,0x000081(%ecx)

	_05182e_jump:
		mov    %ecx,%eax
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _05184f_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _05f030_func
		pop    %ecx
		pop    %ebx
		ret    

	_05184f_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		andb   $0x0000ef,0x000081(%ecx)

	_051864_jump:
		pop    %ecx
		pop    %ebx
		ret    



_051868_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		cmpb   $0x000000,_0cdcd2_data
		jne    _051887_jump
		cmpb   $0x000000,_0cdcd4_data
		je     _05197e_jump

	_051887_jump:
		lea    0x000008(%esp),%ecx
		mov    %esp,%ebx
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _077950_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0518a5_jump
		neg    %eax

	_0518a5_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jg     _0519ad_jump
		cmpw   $0x000023,(%esp)
		jge    _0519ad_jump
		cmpb   $0x000001,0x00006d(%esi)
		jne    _0519ad_jump
		testb  $0x000008,0x000081(%esi)
		jne    _0518da_jump
		cmpw   $0x000000,0x000004(%esp)
		jl     _0518f3_jump

	_0518da_jump:
		testb  $0x000008,0x000081(%esi)
		je     _0519ad_jump
		cmpw   $0x000000,0x000004(%esp)
		jle    _0519ad_jump

	_0518f3_jump:
		mov    _0cdc30_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _05190c_jump
		mov    $0x000001,%eax
		jg     _05190c_jump
		neg    %eax

	_05190c_jump:
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		neg    %edx
		cmp    $0x000000,%eax
		je     _051924_jump
		mov    $0x000001,%eax
		jg     _051924_jump
		neg    %eax

	_051924_jump:
		cmp    %edx,%eax
		jne    _0519ad_jump
		movw   $0x000000,0x000040(%esi)
		mov    _0cdc11_data,%al
		movw   $0x000000,0x000042(%esi)
		cmp    $0x000002,%al
		je     _051949_jump
		movw   $0x0001f5,0x00004a(%esi)
		jmp    _0519ad_jump

	_051949_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _0519ad_jump
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _0519a6_jump

	_05197e_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0519ad_jump
		cmpb   $0x00000a,0x00006c(%esi)
		jne    _0519ad_jump
		mov    $0x00000c,%edx
		mov    $0x000001,%ebx
		mov    %esi,%eax
		movw   $0x000000,0x00004a(%esi)
		call   _01d364_func
		mov    $0x000008,%edx

	_0519a6_jump:
		mov    %esi,%eax
		call   _05f030_func

	_0519ad_jump:
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0519c0_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cedae_data,%ecx
		mov    _0cedaa_data,%esi
		sar    $0x000010,%ecx
		sar    $0x000010,%esi
		sar    %ecx
		add    %esi,%ecx
		mov    %ecx,%esi
		mov    _0cedc8_data,%ecx
		mov    _0cedac_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%edi
		sar    %ecx
		add    %edi,%ecx
		mov    %ecx,(%esp)
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		sub    %ecx,%esi
		mov    %si,(%edx)
		testb  $0x000008,0x000081(%eax)
		je     _051a12_jump
		sub    $0x000030,%esi
		mov    %si,(%edx)
		jmp    _051a1a_jump

	_051a12_jump:
		mov    %esi,%ecx
		add    $0x000030,%ecx
		mov    %cx,(%edx)

	_051a1a_jump:
		mov    (%esp),%eax
		sub    $0x000070,%eax
		mov    %ax,(%ebx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_051a2c_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    %ebx,%edi
		lea    0x000004(%esp),%ebx
		mov    %esp,%edx
		call   _0519c0_func
		mov    (%esp),%edx
		mov    0x000028(%ecx),%ax
		sub    %eax,%edx
		mov    %dx,(%esp)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _051a5d_jump
		neg    %eax

	_051a5d_jump:
		mov    %ax,(%esp)
		mov    0x000004(%esp),%ebx
		mov    0x00002c(%ecx),%ax
		sub    %eax,%ebx
		mov    %bx,0x000004(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		test   %eax,%eax
		jge    _051a7f_jump
		neg    %eax

	_051a7f_jump:
		mov    -0x000002(%esp),%ebx
		mov    %si,%dx
		sar    $0x000010,%ebx
		mov    %ax,0x000004(%esp)
		cmp    %edx,%ebx
		jge    _051aa2_jump
		movswl %ax,%edx
		xor    %eax,%eax
		mov    %di,%ax
		cmp    %eax,%edx
		jge    _051aa2_jump
		mov    $0x000001,%al
		jmp    _051aa4_jump

	_051aa2_jump:
		xor    %al,%al

	_051aa4_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_051aac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		cmpb   $0x000000,_0cefbd_data
		jne    _051b70_jump
		mov    _0cedc0_data,%ecx
		mov    _0cee04_data,%eax
		mov    _0cedbe_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _051af4_jump
		cmp    %ecx,%eax
		jg     _051af4_jump
		mov    $0x000001,%eax
		jmp    _051af6_jump

	_051af4_jump:
		xor    %eax,%eax

	_051af6_jump:
		test   %eax,%eax
		je     _051b39_jump
		mov    _0cedc2_data,%ecx
		mov    _0cee06_data,%eax
		mov    _0cedbc_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0cedf8_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _051b2f_jump
		cmp    %ecx,%eax
		jg     _051b2f_jump
		mov    $0x000001,%eax
		jmp    _051b31_jump

	_051b2f_jump:
		xor    %eax,%eax

	_051b31_jump:
		test   %eax,%eax
		je     _051b39_jump
		mov    $0x000001,%al
		jmp    _051b3b_jump

	_051b39_jump:
		xor    %al,%al

	_051b3b_jump:
		mov    %al,_0cefbd_data
		test   %al,%al
		je     _051ba7_jump
		mov    _0cee10_data,%ax
		mov    %ax,_0cedc8_data
		mov    %ax,_0cedba_data
		mov    _0cedbe_data,%ax
		mov    %ax,_0cedbc_data
		mov    _0cedc4_data,%ax
		mov    %ax,_0cedc6_data
		jmp    _051ba7_jump

	_051b70_jump:
		mov    _0cedbc_data,%ax
		mov    _0cedfa_data,%bx
		cmp    %bx,%ax
		jge    _051b89_jump
		mov    %bx,_0cedbc_data

	_051b89_jump:
		mov    0x00007f(%edx),%bl
		test   %bl,%bl
		je     _051b97_jump
		mov    %bl,%bh
		dec    %bh
		mov    %bh,0x00007f(%edx)

	_051b97_jump:
		mov    0x00005a(%edx),%cx
		test   %cx,%cx
		je     _051ba7_jump
		mov    %ecx,%esi
		dec    %esi
		mov    %si,0x00005a(%edx)

	_051ba7_jump:
		cmpb   $0x000000,_0cefbd_data
		je     _051bbd_jump
		cmpb   $0x000000,0x00007f(%edx)
		jne    _051bbd_jump
		mov    $0x000001,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_051bbd_jump:
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051bc4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		test   %dl,%dl
		jbe    _051bd6_jump
		cmp    $0x000001,%dl
		je     _051c01_jump
		jmp    _051c2e_jump

	_051bd6_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0cedb8_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dh
		mov    %eax,0x000028(%ebx)
		and    $0x0000f7,%dh
		mov    $0xffffffff,%eax
		mov    %dh,0x000081(%ebx)
		jmp    _051c97_jump

	_051c01_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0cedc6_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dl
		mov    %eax,0x000028(%ebx)
		or     $0x000008,%dl
		mov    $0x000001,%eax
		mov    %dl,0x000081(%ebx)
		jmp    _051c97_jump

	_051c2e_jump:
		mov    _0cedb8_data,%esi
		mov    _0cedc6_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		lea    0x000140(%esi,%edi,1),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x000068(%ebx),%cl
		add    %ecx,%ebp
		sub    %eax,%ebp
		mov    %ebp,%eax
		test   %ax,%ax
		jle    _051c83_jump
		add    $0x000140,%edi
		sub    %ecx,%edi
		mov    0x000081(%ebx),%ch
		mov    %edi,0x000028(%ebx)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%ebx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_051c83_jump:
		sub    %ecx,%esi
		mov    0x000081(%ebx),%cl
		mov    %esi,0x000028(%ebx)
		or     $0x000008,%cl
		mov    %cl,0x000081(%ebx)

	_051c97_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_051ca0_switch:
		.long   _051d91_case
		.long   _051d8b_case
		.long   _0522d1_case
		.long   _051da5_case
		.long   _052174_case
		.long   _0524d3_case
		.long   _0524e1_case
		.long   _0525f4_case
		.long   _0523b0_case
		.long   _0522a1_case
		.long   _051ecd_case
		.long   _052417_case
		.long   _052387_case
		.long   _05235e_case
		.long   _05214b_case
		.long   _0520c3_case
		.long   _052704_case
		.long   _052704_case
		.long   _052813_case
		.long   _0527bd_case
		.long   _051f6a_case
		.long   _052266_case
		.long   _052027_case
		.long   _051efe_case
		.long   _05219d_case




_051d04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    _0cedb8_data,%edx
		mov    _0cedc6_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		lea    0x000140(%eax),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edi
		cmpb   $0x000000,_0cefc1_data
		je     _0528e2_jump

	_051d40_jump:
		xor    %eax,%eax
		mov    _0cefc3_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cefc4_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096ba8_data(%edx),%edx
		mov    %al,_0cefc4_data
		mov    (%edx,%ebx,1),%al
		mov    %al,_0e3de0_data
		xor    %ebx,%ebx
		sub    $0x000002,%al
		mov    %ebx,_0cdb18_data
		cmp    $0x000018,%al
		ja     _0528d5_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_051ca0_switch(,%eax,4)

	_051d8b_case:
		incb   _0cefc3_data

	_051d91_case:
		xor    %dl,%dl
		mov    %dl,_0cefc4_data
		movb   $0x000001,_0cefc1_data
		jmp    _0528d5_jump

	_051da5_case:
		mov    _0cefbe_data,%al
		mov    %al,_0cefc3_data
		mov    _0cefbc_data,%al
		mov    %al,_0cefc4_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cefc3_data,%al
		mov    _0cefc4_data,%dl
		mov    _096ba8_data(,%eax,4),%eax
		mov    (%edx,%eax,1),%al
		mov    %al,_0e3de0_data
		cmp    $0x00001a,%al
		je     _051ddf_jump
		cmp    $0x00000e,%al
		jne    _051e1d_jump

	_051ddf_jump:
		mov    _0e3de0_data,%bl
		cmp    $0x00001a,%bl
		je     _051df3_jump
		cmp    $0x00000e,%bl
		jne    _051eb1_jump

	_051df3_jump:
		mov    _0cefc4_data,%cl
		xor    %eax,%eax
		xor    %edx,%edx
		inc    %cl
		mov    _0cefc3_data,%al
		mov    %cl,%dl
		mov    _096ba8_data(,%eax,4),%eax
		mov    (%edx,%eax,1),%al
		mov    %cl,_0cefc4_data
		mov    %al,_0e3de0_data
		jmp    _051ddf_jump

	_051e1d_jump:
		cmp    $0x000014,%al
		jne    _051e30_jump
		mov    %dl,%dh
		inc    %dh
		mov    %dh,_0cefc4_data
		jmp    _051eb1_jump

	_051e30_jump:
		cmp    $0x000012,%al
		je     _051e40_jump
		cmp    $0x000013,%al
		je     _051e40_jump
		cmp    $0x000015,%al
		jne    _051eb1_jump

	_051e40_jump:
		cmpb   $0x000015,_0e3de0_data
		jne    _051e4f_jump
		incb   _0cefc4_data

	_051e4f_jump:
		mov    _0cefc4_data,%dl
		xor    %eax,%eax
		inc    %dl
		mov    _0cefc3_data,%al
		mov    %dl,_0cefc4_data

	_051e64_jump:
		xor    %edx,%edx
		mov    _096ba8_data(,%eax,4),%eax
		mov    _0cefc4_data,%dl
		mov    (%edx,%eax,1),%al
		mov    %al,_0e3de0_data
		mov    _0e3de0_data,%ch
		cmp    $0x000015,%ch
		je     _051e8b_jump
		cmp    $0x000014,%ch
		jne    _051eb1_jump

	_051e8b_jump:
		cmpb   $0x000015,_0e3de0_data
		jne    _051e9a_jump
		incb   _0cefc4_data

	_051e9a_jump:
		mov    _0cefc4_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    _0cefc3_data,%al
		mov    %dh,_0cefc4_data
		jmp    _051e64_jump

	_051eb1_jump:
		mov    $0x000001,%al
		mov    $0x0000ff,%ch
		mov    %al,_0cefc1_data
		xor    %ah,%ah
		mov    %ch,_0cefbe_data
		mov    %ah,_0e3de2_data
		jmp    _0528d5_jump

	_051ecd_case:
		mov    _0cefc4_data,%al
		xor    %cl,%cl
		and    $0x0000ff,%eax
		mov    %cl,_0cefc4_data
		mov    (%edx,%eax,1),%al
		cmp    _0cefc3_data,%al
		jne    _051eec_jump
		inc    %al

	_051eec_jump:
		mov    %al,_0cefc3_data
		xor    %ah,%ah
		mov    %ah,_0cefc1_data
		jmp    _0528d5_jump

	_051efe_case:
		cmpb   $0x000005,0x000077(%esi)
		jne    _051f12_jump
		call   _077ca0_func
		orb    $0x000001,_0ced88_data
		jmp    _051f5d_jump

	_051f12_jump:
		mov    $0xffff8300,%ebx
		mov    _0ced88_data,%dl
		mov    $_0cdba4_data,%eax
		or     $0x000002,%dl
		mov    %bx,_0cedb6_data
		mov    $0x000007,%ebx
		mov    %dl,_0ced88_data
		mov    $0x000003,%edx
		call   _01d374_func
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		call   _01d224_func
		mov    $0x000001,%dh
		inc    %eax
		mov    %dh,_0cefc8_data
		mov    %ax,0x000048(%esi)

	_051f5d_jump:
		xor    %bh,%bh
		mov    %bh,_0cefc1_data
		jmp    _0528d5_jump

	_051f6a_case:
		cmpb   $0x00000c,0x000077(%esi)
		jne    _051f83_jump
		mov    $0x000013,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _051fff_jump

	_051f83_jump:
		mov    _0cc300_data,%eax
		mov    _0cc304_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jle    _051fff_jump

	_051f96_jump:
		cmpw   $0x0000ab,0x000060(%eax)
		jne    _051ff4_jump
		mov    (%eax),%edx
		mov    %edx,(%esi)
		mov    0x000004(%eax),%edx
		mov    %edx,0x000004(%esi)
		mov    0x000008(%eax),%edx
		mov    %edx,0x000008(%esi)
		mov    0x00000c(%eax),%edx
		mov    %edx,0x00000c(%esi)
		mov    0x000044(%eax),%dx
		mov    %dx,0x000044(%esi)
		mov    0x00006d(%eax),%dl
		mov    %dl,0x00006d(%esi)
		mov    0x00006c(%eax),%dl
		mov    0x000069(%esi),%bl
		mov    %dl,0x00006c(%esi)
		add    $0x000004,%bl
		mov    0x00006a(%eax),%al
		movb   $0x000000,0x00006b(%esi)
		mov    %bl,0x000069(%esi)
		mov    0x000081(%esi),%bh
		mov    %al,0x00006a(%esi)
		and    $0x0000f7,%bh
		xor    %ecx,%ecx
		mov    %bh,0x000081(%esi)
		mov    %ecx,_0cdbc8_data
		jmp    _051fff_jump

	_051ff4_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %dx,%bx
		jl     _051f96_jump

	_051fff_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		mov    0x000048(%esi),%ax
		xor    %cl,%cl
		add    $0x000080,%eax
		mov    %cl,_0cefc1_data
		mov    %ax,0x000048(%esi)
		jmp    _0528d5_jump

	_052027_case:
		cmpb   $0x00000c,0x000077(%esi)
		jne    _052031_jump
		subb   $0x000010,0x000069(%esi)

	_052031_jump:
		mov    0x000081(%esi),%al
		and    $0x0000f7,%al
		mov    _0cedba_data,%dx
		mov    %al,0x000081(%esi)
		xor    %eax,%eax
		add    $0x0000a0,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %dx,_0ceda4_data
		mov    _0ceda2_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		xor    %eax,%eax
		mov    _0ced72_data,%dx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    $0x000001,%ebx
		mov    %dx,_0ced9e_data
		mov    %esi,%eax
		mov    $0x000002,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		movb   $0x000002,0x000072(%esi)
		call   _05f030_func
		xor    %dl,%dl
		mov    $0x0000ff,%ah
		mov    %dl,_0cefb9_data
		mov    $0x000001,%dh
		mov    %ah,_0cefb8_data
		mov    %dh,_0cefbf_data
		mov    %dl,_0cefc1_data
		jmp    _0528d5_jump

	_0520c3_case:
		mov    _0cedba_data,%ax
		xor    %edx,%edx
		add    $0x0000a0,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %ax,_0ceda4_data
		mov    _0ced72_data,%ax
		mov    _0cc5b4_data,%dx
		sub    $0x0000e6,%eax
		add    %edx,%eax
		mov    $0x000006,%ebx
		mov    %ax,_0ced9e_data
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		mov    $0x0000ff,%ch
		call   _05f030_func
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ch,_0cefb8_data
		mov    %ch,_0cefb9_data
		mov    $0x0000ff,%ecx
		mov    %ah,_0cefbf_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018690_func
		xor    %dl,%dl
		mov    %dl,_0cefc1_data
		jmp    _0528d5_jump

	_05214b_case:
		mov    $0x000005,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		xor    %dh,%dh
		mov    %dh,_0cefc1_data
		jmp    _0528d5_jump

	_052174_case:
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		xor    %ah,%ah
		mov    %ah,_0cefc1_data
		jmp    _0528d5_jump

	_05219d_case:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0521d5_jump
		cmpb   $0x000014,0x00006c(%esi)
		jne    _0521d5_jump
		mov    %esi,%eax
		call   _01db14_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		xor    %al,%al
		mov    %al,_0cefc1_data
		jmp    _0528d5_jump

	_0521d5_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		mov    %esi,%eax
		call   _01db14_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _0528d5_jump
		mov    %dl,%al
		mov    0x000081(%esi),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		xor    %edx,%edx
		shl    $0x000003,%al
		mov    %bh,%cl
		mov    %bh,0x000081(%esi)
		or     %al,%cl
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    %cl,0x000081(%esi)
		call   _01d374_func
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01d224_func
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		mov    0x000048(%esi),%dx
		add    %ecx,%edx
		xor    %ch,%ch
		mov    %dx,0x000048(%esi)
		jmp    _0528cf_jump

	_052266_case:
		mov    _0cedba_data,%dx
		xor    %eax,%eax
		add    $0x0000a0,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		sub    $0x000030,%edx
		mov    _0cdbcc_data,%bh
		mov    %dx,_0cedb6_data
		test   $0x000001,%bh
		je     _052298_jump
		orb    $0x000001,_0cedb6_data
		jmp    _0522d1_case

	_052298_jump:
		andb   $0x0000fe,_0cedb6_data
		jmp    _0522d1_case

	_0522a1_case:
		xor    %dl,%dl
		mov    %dl,_0cefc0_data
		mov    _0e3de2_data,%dh
		movb   $0x000003,0x00007e(%esi)
		test   %dh,%dh
		jne    _0522c3_jump
		movb   $0x000001,_0cefc1_data
		jmp    _0528d5_jump

	_0522c3_jump:
		mov    $0x000004,%bh
		mov    %dl,_0e3de2_data
		mov    %bh,_0e3de0_data

	_0522d1_case:
		mov    _0cedbc_data,%dx
		mov    _0cc5b4_data,%cx
		mov    _0e3de0_data,%bl
		add    %ecx,%edx
		mov    0x000028(%esi),%ax
		sub    $0x000080,%edx
		mov    %ax,_0ceda4_data
		mov    %dx,_0ced9e_data
		cmp    $0x000004,%bl
		jne    _05230a_jump
		mov    $0x000008,%ebx
		jmp    _05230f_jump

	_05230a_jump:
		mov    $0x000006,%ebx

	_05230f_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x0000ff,%bh
		mov    $0x000001,%ch
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    %bh,_0cefb8_data
		mov    %ch,_0cefbf_data
		mov    $0x0000ff,%ecx
		mov    %bh,_0cefb9_data
		mov    %ecx,%ebx
		call   _018690_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _05f030_func
		xor    %al,%al
		mov    %al,_0cefc1_data
		jmp    _0528d5_jump

	_05235e_case:
		mov    $0x000014,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		xor    %bl,%bl
		mov    %bl,_0cefc1_data
		jmp    _0528d5_jump

	_052387_case:
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		xor    %bh,%bh
		mov    %bh,_0cefc1_data
		jmp    _0528d5_jump

	_0523b0_case:
		mov    %esi,%eax
		call   _01db14_func
		mov    0x000081(%esi),%ch
		xor    %edx,%edx
		test   $0x000008,%ch
		sete   %dl
		mov    %esi,%eax
		call   _051bc4_func
		mov    _0cedba_data,%eax
		sar    $0x000010,%eax
		sub    $0x000080,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000081(%esi)
		je     _0523ff_jump
		mov    0x000028(%esi),%ecx
		mov    0x000081(%esi),%dl
		sub    $0x000030,%ecx
		and    $0x0000f7,%dl
		mov    %ecx,0x000028(%esi)
		mov    %dl,0x000081(%esi)
		jmp    _052417_case

	_0523ff_jump:
		mov    0x000028(%esi),%ebx
		mov    0x000081(%esi),%ah
		add    $0x000030,%ebx
		or     $0x000008,%ah
		mov    %ebx,0x000028(%esi)
		mov    %ah,0x000081(%esi)

	_052417_case:
		mov    0x000081(%esi),%al
		mov    $_0ced9e_data,%ebx
		shl    $0x000004,%al
		xor    %dh,%dh
		shr    $0x000007,%al
		mov    %dh,_0e3de1_data
		mov    %al,(%esp)
		mov    %esi,%eax
		mov    $_0ceda4_data,%edx
		call   _01db14_func
		mov    %esi,%eax
		call   _0519c0_func
		mov    $0x000008,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000002,%cl
		call   _01d374_func
		mov    $0x000010,%bl
		mov    $0x000001,%edx
		mov    %cl,_0cefbf_data
		mov    %esi,%eax
		mov    $0x0000ff,%ecx
		mov    %bl,_0cefb8_data
		mov    %bl,_0cefb9_data
		mov    %ecx,%ebx
		call   _018690_func
		cmpb   $0x00000d,_0e3de0_data
		jne    _05248e_jump
		movw   $0x00ffc0,0x000042(%esi)
		jmp    _052494_jump

	_05248e_jump:
		movw   $0x000000,0x000040(%esi)

	_052494_jump:
		mov    (%esp),%al
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%esi)
		shl    $0x000003,%al
		mov    %ah,%dl
		mov    $0x000001,%ebx
		or     %al,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		mov    $0x000002,%edx
		call   _05f030_func
		xor    %dh,%dh
		mov    %dh,_0cefc1_data
		jmp    _0528d5_jump

	_0524d3_case:
		mov    $0x00000c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func

	_0524e1_case:
		cmpb   $0x000008,_0e3de0_data
		jne    _0524f8_jump
		mov    $0x00000b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func

	_0524f8_jump:
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _051bc4_func
		test   %ax,%ax
		jle    _052536_jump
		mov    _0cedba_data,%dx
		mov    0x000081(%esi),%bl
		xor    %eax,%eax
		and    $0x0000f7,%bl
		mov    0x000068(%esi),%al
		mov    %bl,0x000081(%esi)
		sub    %eax,%edx
		mov    0x000028(%esi),%ebx
		mov    %edx,%eax
		add    $0x000030,%ebx
		sub    $0x000030,%eax
		mov    %ebx,0x000028(%esi)
		jmp    _05255d_jump

	_052536_jump:
		orb    $0x000008,0x000081(%esi)
		mov    0x000028(%esi),%edx
		sub    $0x000030,%edx
		mov    _0cedc8_data,%ax
		mov    %edx,0x000028(%esi)
		xor    %edx,%edx
		add    $0x000140,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		add    $0x000030,%eax

	_05255d_jump:
		mov    %ax,_0ceda4_data
		mov    _0ced70_data,%eax
		sar    $0x000010,%eax
		sub    $0x0000e6,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,_0ced9e_data
		xor    %eax,%eax
		mov    _0cefc3_data,%al
		mov    $0x000001,%ch
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cefc4_data,%al
		mov    %ch,_0cefbf_data
		mov    %al,%bl
		inc    %al
		mov    _096ba8_data(%edx),%edx
		mov    %al,_0cefc4_data
		xor    %eax,%eax
		mov    $0x0000ff,%ecx
		mov    (%edx,%ebx,1),%al
		mov    $0x0000ff,%bh
		shl    $0x00000a,%eax
		mov    $0x000001,%edx
		mov    %eax,_0cdb18_data
		mov    %bh,_0cefb8_data
		mov    %bh,_0cefb9_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _05f030_func
		xor    %al,%al
		mov    %al,_0cefc1_data
		jmp    _0528d5_jump

	_0525f4_case:
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _051bc4_func
		test   %ax,%ax
		jle    _05263b_jump
		addl   $0x000050,0x000028(%esi)
		xor    %eax,%eax
		mov    _0cedba_data,%dx
		mov    0x000068(%esi),%al
		mov    0x000081(%esi),%bh
		sub    %eax,%edx
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%esi)
		sub    $0x000050,%eax
		jmp    _05266a_jump

	_05263b_jump:
		mov    _0cedc8_data,%ax
		mov    0x000081(%esi),%bl
		mov    0x000028(%esi),%ebp
		xor    %edx,%edx
		or     $0x000008,%bl
		sub    $0x000060,%ebp
		add    $0x000140,%eax
		mov    0x000068(%esi),%dl
		mov    %bl,0x000081(%esi)
		sub    %edx,%eax
		mov    %ebp,0x000028(%esi)
		add    $0x000040,%eax

	_05266a_jump:
		mov    %ax,_0ceda4_data
		mov    _0ced70_data,%eax
		sar    $0x000010,%eax
		sub    $0x0000b4,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,_0ced9e_data
		xor    %eax,%eax
		mov    _0cefc3_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cefc4_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096ba8_data(%edx),%edx
		mov    %al,_0cefc4_data
		mov    (%edx,%ebx,1),%al
		mov    $0x0000ff,%cl
		and    $0x0000ff,%eax
		mov    $0x000001,%edx
		shl    $0x00000a,%eax
		mov    %cl,_0cefb8_data
		mov    %cl,_0cefb9_data
		mov    $0x0000ff,%ecx
		mov    %eax,_0cdb18_data
		mov    $0x000001,%al
		mov    %ecx,%ebx
		mov    %al,_0cefbf_data
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _05f030_func
		xor    %ah,%ah
		mov    %ah,_0cefc1_data
		jmp    _0528d5_jump

	_052704_case:
		mov    _0ced70_data,%eax
		sar    $0x000010,%eax
		sub    $0x000048,%eax
		mov    %eax,0x00002c(%esi)
		cmpb   $0x000013,_0e3de0_data
		jne    _05271f_jump
		subl   $0x000030,0x00002c(%esi)

	_05271f_jump:
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _051bc4_func
		test   %ax,%ax
		jle    _052744_jump
		andb   $0x0000f7,0x000081(%esi)
		addl   $0x000044,0x000028(%esi)
		mov    0x000028(%esi),%ax
		sub    $0x000018,%eax
		jmp    _052758_jump

	_052744_jump:
		orb    $0x000008,0x000081(%esi)
		subl   $0x00004c,0x000028(%esi)
		mov    0x000028(%esi),%ax
		add    $0x000010,%eax

	_052758_jump:
		mov    %ax,_0ceda4_data
		mov    $0x00000e,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x0000ff,%ecx
		call   _01d374_func
		mov    $0x0000ff,%dh
		mov    0x00002c(%esi),%ax
		mov    $0x000001,%bh
		mov    %ax,_0ced9e_data
		mov    %dh,_0cefb8_data
		mov    %dh,_0cefb9_data
		mov    %bh,_0cefbf_data
		mov    $0x000001,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %cl,%cl
		call   _05f030_func
		mov    %cl,_0cefc1_data
		jmp    _0528d5_jump

	_0527bd_case:
		mov    $0x00000e,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		mov    _0cefc4_data,%al
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    _0cefc3_data,%dl
		mov    %al,%bl
		inc    %al
		mov    _096ba8_data(,%edx,4),%edx
		mov    %al,_0cefc4_data
		mov    (%edx,%ebx,1),%al
		mov    0x000048(%esi),%dx
		xor    %ah,%ah
		imul   %eax,%edx
		mov    %ah,_0cefc1_data
		mov    %dx,0x000048(%esi)
		jmp    _0528d5_jump

	_052813_case:
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		movswl %di,%edx
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _05284e_jump
		mov    0x000081(%esi),%dh
		xor    %eax,%eax
		and    $0x0000f7,%dh
		mov    0x000068(%esi),%al
		mov    %dh,0x000081(%esi)
		mov    _0cedba_data,%dx
		sub    %eax,%edx
		mov    %edx,%eax
		sub    $0x000038,%eax
		mov    %ax,_0ceda4_data
		jmp    _05287b_jump

	_05284e_jump:
		mov    0x000081(%esi),%dl
		or     $0x000008,%dl
		xor    %eax,%eax
		mov    %dl,0x000081(%esi)
		mov    _0cedc8_data,%dx
		mov    0x000068(%esi),%al
		add    $0x000140,%edx
		sub    %eax,%edx
		add    $0x000030,%edx
		mov    %dx,_0ceda4_data

	_05287b_jump:
		mov    $0x000004,%ebx
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %ax,_0ced9e_data
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		mov    $0x000001,%cl
		call   _05f030_func
		mov    $0x0000ff,%bl
		mov    $0x000001,%edx
		mov    %cl,_0cefbf_data
		mov    %esi,%eax
		mov    $0x0000ff,%ecx
		mov    %bl,_0cefb8_data
		mov    %bl,_0cefb9_data
		mov    %ecx,%ebx
		call   _018690_func
		xor    %ch,%ch

	_0528cf_jump:
		mov    %ch,_0cefc1_data

	_0528d5_jump:
		cmpb   $0x000000,_0cefc1_data
		jne    _051d40_jump

	_0528e2_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0528ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		mov    0x00006c(%eax),%al
		xor    %ebp,%ebp
		cmp    $0x00000b,%al
		jb     _052920_jump
		jbe    _052914_jump
		cmp    $0x00000c,%al
		jne    _052920_jump
		mov    $0x000003,%ah
		mov    $0x000033,%dl
		mov    %ah,0x000014(%esp)
		mov    %dl,0x000010(%esp)
		jmp    _052920_jump

	_052914_jump:
		mov    $0x000003,%dh
		mov    $0x000034,%bl
		mov    %dh,0x000014(%esp)
		mov    %bl,0x000010(%esp)

	_052920_jump:
		mov    _0cc300_data,%esi
		mov    _0cc304_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jle    _052a8f_jump

	_052938_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000010(%esp),%dl
		mov    0x000060(%esi),%bx
		cmp    %edx,%ebx
		jne    _052a7f_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _052a7f_jump
		lea    0x000004(%esp),%edx
		lea    0x00000c(%esp),%ecx
		mov    0x000081(%esi),%bh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f304_func
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		xor    %edx,%edx
		mov    %edi,%eax
		mov    0x00001c(%esp),%dl
		call   _01d710_func
		mov    -0x000002(%esp),%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sar    %edx
		add    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		xor    %edx,%edx
		mov    0x00000a(%esp),%ebx
		mov    0x000074(%esi),%dl
		mov    0x000028(%esi),%ax
		sar    $0x000010,%ebx
		mov    %ax,0x00003c(%esi)
		sub    %edx,%ebx
		mov    %ebx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    0x000010(%esp),%cl
		mov    %ax,0x00003e(%esi)
		cmp    $0x000033,%cl
		jb     _0529ff_jump
		jbe    _0529e3_jump
		cmp    $0x000034,%cl
		je     _0529f1_jump
		jmp    _0529ff_jump

	_0529e3_jump:
		movw   $0x000001,0x000050(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _0529ff_jump

	_0529f1_jump:
		movw   $0x000003,0x000050(%esi)
		mov    0x000040(%edi),%ax
		mov    %ax,0x000040(%esi)

	_0529ff_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		movw   $0x000000,0x000042(%esi)
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		mov    0x000002(%ebx,%edx,8),%al
		mov    %al,0x00006a(%esi)
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01db8c_func
		movb   $0x000000,0x000071(%esi)
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		mov    0x000081(%esi),%dl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%dl
		and    $0x000008,%al
		mov    %dl,0x000081(%esi)
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,%bl
		mov    %dh,0x000081(%esi)
		and    $0x0000bf,%bl
		mov    %esi,%ebp
		mov    %bl,0x000081(%esi)
		mov    %ebp,%eax
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_052a7f_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %cx,%ax
		jl     _052938_jump

	_052a8f_jump:
		mov    %ebp,%eax
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052a9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		movzbw 0x000068(%eax),%di
		add    0x000028(%eax),%di
		mov    0x00006c(%eax),%al
		mov    %di,0x000008(%esp)
		cmp    $0x00000b,%al
		jb     _052b15_jump
		jbe    _052af6_jump
		cmp    $0x00000c,%al
		jne    _052b15_jump
		mov    0x00003e(%esi),%eax
		mov    _0cdbe2_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		add    %eax,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %di,%edi
		sub    %eax,%edi
		jmp    _052b15_jump

	_052af6_jump:
		mov    0x00003e(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %eax,%ebx

	_052b15_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _052b1e_jump
		neg    %eax

	_052b1e_jump:
		mov    %ax,0x000004(%esp)
		test   %bx,%bx
		jge    _052b2a_jump
		add    %ebx,%edi

	_052b2a_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		mov    _0cedbc_data,%bx
		add    %eax,%edx
		mov    _0cedc6_data,%ax
		sub    %ebx,%eax
		mov    _0cedc6_data,%ecx
		add    $0x0000c8,%eax
		mov    %dx,0x000010(%esp)
		mov    %ax,(%esp)
		mov    _0cedae_data,%eax
		mov    _0cedaa_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		sar    $0x000010,%ecx
		add    %eax,%edx
		mov    _0cedc8_data,%eax
		mov    _0cedac_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    $0x000130,%ecx
		add    %ebx,%eax
		mov    _0cedb8_data,%ebx
		mov    %ax,0x00000c(%esp)
		mov    0x000006(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _052baf_jump
		cmp    %ecx,%eax
		jg     _052baf_jump
		mov    $0x000001,%eax
		jmp    _052bb1_jump

	_052baf_jump:
		xor    %eax,%eax

	_052bb1_jump:
		test   %eax,%eax
		je     _052c10_jump
		cmp    %di,%dx
		jl     _052c10_jump
		mov    0x00000c(%esp),%eax
		cmp    0x000010(%esp),%ax
		jl     _052c10_jump
		mov    0x000002(%esp),%eax
		movswl %di,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		add    %ebx,%eax
		cmp    %eax,%edx
		jg     _052c10_jump
		mov    0x00000e(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _052c10_jump
		mov    %esi,%eax
		mov    $0x000010,%ebx
		call   _0528ec_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d374_func
		subw   $0x000040,_0ced9e_data

	_052c10_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052c1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		call   _051aac_func
		test   %al,%al
		je     _052e08_jump
		mov    0x00005a(%esi),%dx
		test   %dx,%dx
		je     _052c3f_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x00005a(%esi)

	_052c3f_jump:
		mov    _0cefc0_data,%ah
		test   %ah,%ah
		je     _052c53_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0cefc0_data

	_052c53_jump:
		mov    0x000081(%esi),%dh
		test   $0x000001,%dh
		jne    _052e01_jump
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		jne    _052cbc_jump
		cmpw   $0x00000e,_096bd0_data
		jne    _052c98_jump
		cmpb   $0x00000f,0x00006a(%esi)
		jne    _052c98_jump
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)

	_052c98_jump:
		mov    $0xffff8300,%ecx
		mov    %cx,_0ceda4_data
		mov    %cx,_0ced9e_data
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		jmp    _052dfa_jump

	_052cbc_jump:
		mov    _0e3de0_data,%al
		cmp    $0x00000a,%al
		jb     _052cd0_jump
		jbe    _052cd9_jump
		cmp    $0x00000d,%al
		je     _052cd9_jump
		jmp    _052dc1_jump

	_052cd0_jump:
		cmp    $0x000004,%al
		je     _052d0a_jump
		jmp    _052dc1_jump

	_052cd9_jump:
		mov    $_0ced9e_data,%ebx
		mov    %esi,%eax
		mov    $_0ceda4_data,%edx
		call   _01db14_func
		mov    %esi,%eax
		call   _0519c0_func
		mov    $0x000018,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _051a2c_func
		test   %al,%al
		je     _052d0a_jump
		movb   $0x000001,_0cefc1_data

	_052d0a_jump:
		cmpb   $0x000002,0x000076(%esi)
		jae    _052dc1_jump
		cmpb   $0x000000,_0cdcd2_data
		je     _052dc1_jump
		cmpb   $0x000000,_0e3de1_data
		jne    _052dc1_jump
		cmpb   $0x000000,_0cef89_data
		jne    _052dc1_jump
		cmpb   $0x000000,_0ca424_data
		jne    _052dc1_jump
		mov    $0x000001,%dl
		xor    %eax,%eax
		mov    %dl,_0e3de1_data
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    0x000069(%esi),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00002c(%esi),%ecx
		mov    _0cdc30_data,%ebx
		add    %eax,%ecx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%ebx),%dl
		mov    0x000074(%ebx),%al
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		add    0x00002c(%ebx),%eax
		cmp    %eax,%ecx
		jle    _052d93_jump
		addw   $0x000050,0x000042(%esi)
		jmp    _052d98_jump

	_052d93_jump:
		subw   $0x000050,0x000042(%esi)

	_052d98_jump:
		xor    %edx,%edx
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%dl
		mov    _0cdc30_data,%eax
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000028(%eax),%ecx
		mov    0x000068(%eax),%bl
		add    %ecx,%ebx
		cmp    %ebx,%edx
		jle    _052dbc_jump
		addw   $0x000050,0x000040(%esi)
		jmp    _052dc1_jump

	_052dbc_jump:
		subw   $0x000050,0x000040(%esi)

	_052dc1_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0cefb9_data,%cl
		mov    _0cefb8_data,%bl
		mov    _0cefbf_data,%dl
		call   _018690_func
		cmpb   $0x000000,0x00006d(%esi)
		jne    _052dfa_jump
		mov    0x00006c(%esi),%bl
		cmp    $0x00000c,%bl
		je     _052df3_jump
		cmp    $0x00000b,%bl
		jne    _052dfa_jump

	_052df3_jump:
		mov    %esi,%eax
		call   _052a9c_func

	_052dfa_jump:
		mov    %esi,%eax
		call   _018864_func

	_052e01_jump:
		mov    %esi,%eax
		call   _051d04_func

	_052e08_jump:
		xor    %eax,%eax
		mov    0x000081(%esi),%bh
		mov    0x00006a(%esi),%al
		and    $0x0000fe,%bh
		mov    %ax,_096bd0_data
		mov    %bh,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_052e28_switch:
		.long   _052e9f_case
		.long   _052ea5_case
		.long   _052eca_case
		.long   _052eb2_case
		.long   _052eca_case
		.long   _052eca_case
		.long   _052eca_case
		.long   _052eca_case
		.long   _052eca_case
		.long   _052eca_case
		.long   _052ebb_case




_052e54_func:
		push   %ebx
		push   %edx
		mov    _0cefc3_data,%bl
		cmp    $0x000008,%bl
		je     _052e6f_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %bl,%al
		mov    _0cefc4_data,%dl
		jmp    _052e7e_jump

	_052e6f_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cefbe_data,%al
		mov    _0cefbc_data,%dl

	_052e7e_jump:
		mov    _096ba8_data(,%eax,4),%eax
		add    %edx,%eax
		mov    (%eax),%dl
		sub    $0x000002,%dl
		cmp    $0x00000a,%dl
		ja     _052eca_case
		and    $0x0000ff,%edx
		jmp    *%cs:_052e28_switch(,%edx,4)

	_052e9f_case:
		xor    %eax,%eax
		mov    %bl,%al
		jmp    _052ec3_jump

	_052ea5_case:
		xor    %eax,%eax
		mov    %bl,%al
		mov    _096bac_data(,%eax,4),%eax
		jmp    _052eca_case

	_052eb2_case:
		xor    %eax,%eax
		mov    _0cefbe_data,%al
		jmp    _052ec3_jump

	_052ebb_case:
		mov    0x000001(%eax),%al
		and    $0x0000ff,%eax

	_052ec3_jump:
		mov    _096ba8_data(,%eax,4),%eax

	_052eca_case:
		mov    (%eax),%al
		mov    %bl,_0cefc3_data
		pop    %edx
		pop    %ebx
		ret    



_052ed8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000008,_0cefc3_data
		jne    _052ef2_jump
		mov    $_0cefbe_data,%eax
		mov    $_0cefbc_data,%ebx
		jmp    _052efc_jump

	_052ef2_jump:
		mov    $_0cefc3_data,%eax
		mov    $_0cefc4_data,%ebx

	_052efc_jump:
		mov    (%eax),%cl
		cmpb   $0x00000c,0x000077(%edx)
		jne    _052f40_jump
		mov    0x000076(%edx),%ch
		cmp    $0x000009,%ch
		jbe    _052f11_jump
		movb   $0x000003,(%eax)
		jmp    _052f39_jump

	_052f11_jump:
		cmp    $0x000007,%ch
		jbe    _052f1b_jump
		movb   $0x000005,(%eax)
		jmp    _052f39_jump

	_052f1b_jump:
		cmp    $0x000004,%ch
		jbe    _052f25_jump
		movb   $0x000006,(%eax)
		jmp    _052f39_jump

	_052f25_jump:
		test   %ch,%ch
		jbe    _052f2e_jump
		movb   $0x000007,(%eax)
		jmp    _052f39_jump

	_052f2e_jump:
		xor    %dl,%dl
		movb   $0x000009,(%eax)
		mov    %dl,_0cefc0_data

	_052f39_jump:
		cmp    (%eax),%cl
		je     _052f40_jump
		movb   $0x000000,(%ebx)

	_052f40_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052f44_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmpb   $0x000000,_0cefc0_data
		jne    _05302a_jump
		mov    $0x000001,%dl
		mov    %ebx,%eax
		mov    %dl,_0cdcd3_data
		call   _01e6dc_func
		mov    $0x0000ff,%dh
		mov    0x000081(%ebx),%cl
		mov    %ebx,%eax
		or     %dl,%cl
		mov    %dh,_0cefc0_data
		mov    %cl,0x000081(%ebx)
		call   _052ed8_func
		call   _052e54_func
		cmp    $0x000007,%al
		jb     _052f9d_jump
		cmp    $0x00000a,%al
		jbe    _052f96_jump
		cmp    $0x000012,%al
		jb     _052f9d_jump
		cmp    $0x000015,%al
		ja     _052f9d_jump

	_052f96_jump:
		movb   $0x000001,_0e3de2_data

	_052f9d_jump:
		mov    0x000076(%ebx),%al
		test   %al,%al
		je     _052fff_jump
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    %al,%cl
		mov    0x000077(%ebx),%dl
		add    %edx,%ecx
		lea    0x000000(,%edx,4),%ebx
		sub    %edx,%ebx
		mov    %ebx,%edx
		shl    $0x00000e,%edx
		mov    $0x00000c,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x004000,%eax
		mov    _0cefc3_data,%dh
		mov    %eax,_0cdb10_data
		cmp    $0x000008,%dh
		je     _05301a_jump
		mov    $0x000008,%bl
		mov    _0cefc4_data,%al
		mov    %dh,_0cefbe_data
		mov    %al,_0cefbc_data
		mov    %bl,_0cefc3_data
		jmp    _05301a_jump

	_052fff_jump:
		mov    $0x004000,%edx
		mov    $0x000009,%ah
		mov    %edx,_0cdb10_data
		mov    $0x000001,%dl
		mov    %ah,_0cefc3_data
		mov    %dl,_0cefca_data

	_05301a_jump:
		xor    %bh,%bh
		mov    $0x000001,%cl
		mov    %bh,_0cefc4_data
		mov    %cl,_0cefc1_data

	_05302a_jump:
		pop    %ecx
		pop    %ebx
		ret    



_053030_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpb   $0x000000,0x000076(%eax)
		jne    _0531c2_jump
		mov    0x00007f(%eax),%cl
		cmp    $0x000001,%cl
		jb     _053058_jump
		jbe    _053085_jump
		cmp    $0x000002,%cl
		je     _0530c8_jump
		jmp    _0530f7_jump

	_053058_jump:
		test   %cl,%cl
		jne    _0530f7_jump
		mov    _0cdbcc_data,%dx
		sub    $0x000032,%edx
		mov    %dx,0x00004a(%eax)
		mov    _0cdbd0_data,%dx
		sub    $0x000050,%edx
		mov    $0x000001,%ebx
		mov    %dx,0x000056(%eax)
		mov    %ebx,%edx
		jmp    _0530f7_jump

	_053085_jump:
		cmpw   $0x000000,_0cedb4_data
		jg     _053093_jump
		movb   $0x000002,0x00007f(%eax)

	_053093_jump:
		mov    _0cee10_data,%dx
		add    0x000050(%eax),%dx
		sub    $0x000064,%edx
		mov    0x000052(%eax),%cx
		mov    %dx,0x00004a(%eax)
		mov    _0cedfa_data,%dx
		add    %ecx,%edx
		mov    _0cee06_data,%bx
		sub    $0x00000a,%edx
		inc    %ebx
		mov    %dx,0x000056(%eax)
		mov    $0x000002,%edx
		jmp    _0530f7_jump

	_0530c8_jump:
		mov    _0cee10_data,%dx
		add    $0x0003e8,%edx
		mov    %dx,0x00004a(%eax)
		mov    _0cdbd0_data,%dx
		movw   $0x0001f4,0x000050(%eax)
		sub    $0x00007d,%edx
		mov    $0x000003,%ebx
		mov    %dx,0x000056(%eax)
		mov    $0x000001,%edx

	_0530f7_jump:
		mov    _0cee26_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _05310f_jump
		cmpb   $0x000002,0x00007f(%eax)
		je     _05310f_jump
		movb   $0x000001,0x00007f(%eax)

	_05310f_jump:
		cmpb   $0x000000,_0cef52_data
		je     _0531c2_jump
		mov    0x000048(%eax),%ecx
		mov    0x000028(%eax),%esi
		sar    $0x000010,%ecx
		cmp    %esi,%ecx
		jle    _053157_jump
		mov    0x000040(%eax),%di
		inc    %edi
		mov    %di,0x000040(%eax)
		cmp    %di,%bx
		jge    _05313b_jump
		mov    %bx,0x000040(%eax)

	_05313b_jump:
		mov    0x00003e(%eax),%esi
		mov    0x000028(%eax),%edi
		mov    0x000048(%eax),%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		add    %edi,%esi
		cmp    %ecx,%esi
		jle    _05316c_jump
		dec    %ebx
		mov    %bx,0x000040(%eax)
		jmp    _05316c_jump

	_053157_jump:
		decw   0x000040(%eax)
		mov    0x00003e(%eax),%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jge    _05316c_jump
		movw   $0x00ffff,0x000040(%eax)

	_05316c_jump:
		mov    0x000040(%eax),%ebx
		mov    0x00002c(%eax),%ebp
		mov    0x000054(%eax),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		add    %ebp,%ebx
		cmp    %ebx,%esi
		jle    _053195_jump
		mov    0x000042(%eax),%bx
		inc    %ebx
		mov    %bx,0x000042(%eax)
		cmp    %bx,%dx
		jge    _0531c2_jump
		mov    %dx,0x000042(%eax)
		jmp    _0531c2_jump

	_053195_jump:
		movswl %dx,%ecx
		sub    %ecx,%ebx
		cmp    %ebx,%esi
		jge    _0531bc_jump
		decw   0x000042(%eax)
		mov    0x000040(%eax),%ebx
		neg    %ecx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jge    _0531c2_jump
		mov    %edx,%edi
		mov    %dx,0x000042(%eax)
		neg    %edi
		mov    %di,0x000042(%eax)
		jmp    _0531c2_jump

	_0531bc_jump:
		movw   $0x000000,0x000042(%eax)

	_0531c2_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0531cc_switch:
		.long   _05321f_case
		.long   _053228_case
		.long   _053231_case
		.long   _05323a_case
		.long   _053243_case




_0531e0_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    _0cedca_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpw   $0x0001f4,0x000050(%eax)
		je     _053249_jump
		mov    0x000076(%ebx),%dl
		dec    %dl
		cmp    $0x000004,%dl
		ja     _053249_jump
		and    $0x0000ff,%edx
		jmp    *%cs:_0531cc_switch(,%edx,4)

	_05321f_case:
		movw   $0x000064,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_053228_case:
		movw   $0x000000,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_053231_case:
		movw   $0x00ffb0,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_05323a_case:
		movw   $0x00ff9c,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_053243_case:
		movw   $0x000000,0x000052(%eax)

	_053249_jump:
		pop    %edx
		pop    %ebx
		ret    



_05324c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		je     _053275_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _053275_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000001,0x000050(%ecx)
		call   _05f030_func
		movb   $0x000004,0x000072(%ecx)

	_053275_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053280_func:
		push   %ecx
		push   %edx
		mov    $0x000019,%ecx
		mov    $_0cef4d_data,%eax
		xor    %edx,%edx
		call   _081540_func
		pop    %edx
		pop    %ecx
		ret    



_053298_func:
		push   %ebx
		push   %edx
		mov    %al,%bl
		xor    %eax,%eax

	_05329e_jump:
		incb   _0cef4d_data(%eax)
		xor    %edx,%edx
		mov    _0cef4d_data(%eax),%dl
		cmp    %eax,%edx
		jl     _0532b8_jump
		xor    %dh,%dh
		mov    %dh,_0cef4d_data(%eax)

	_0532b8_jump:
		inc    %eax
		cmp    $0x000019,%eax
		jl     _05329e_jump
		xor    %eax,%eax
		mov    _0cce24_data,%edx
		mov    %bl,%al
		add    %eax,%edx
		mov    %edx,_0cce24_data
		pop    %edx
		pop    %ebx
		ret    

_0532d4_switch:
		.long   _053321_case
		.long   _053414_case
		.long   _053505_case
		.long   _0535f6_case
		.long   _0536e7_case
		.long   _0537d7_case




_0532ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		mov    $0xfffffffe,%edi

	_0532fc_jump:
		movswl %bx,%eax
		mov    %edx,%ecx
		add    %eax,%eax
		dec    %ecx
		add    $_0ca498_data,%eax
		cmp    $0x000005,%cx
		ja     _0538b3_jump
		and    $0x00ffff,%ecx
		jmp    *%cs:_0532d4_switch(,%ecx,4)

	_053321_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x00001e,(%eax)
		add    $0x000002,%eax
		movw   $0x00002d,(%eax)
		add    $0x000002,%eax
		movw   $0x000023,(%eax)
		add    $0x000002,%eax
		movw   $0x000019,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0532fc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053414_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x000028,(%eax)
		add    $0x000002,%eax
		movw   $0x000019,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0532fc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053505_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x00002d,(%eax)
		add    $0x000002,%eax
		movw   $0x000014,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0532fc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0535f6_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x000023,(%eax)
		add    $0x000002,%eax
		movw   $0x000032,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0532fc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0536e7_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x000023,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000024(%eax)
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0532fc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0537d7_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x00003e(%eax)
		mov    %di,-0x00003c(%eax)
		mov    %di,-0x00003a(%eax)
		mov    %di,-0x000038(%eax)
		mov    %di,-0x000036(%eax)
		mov    %di,-0x000034(%eax)
		mov    %di,-0x000032(%eax)
		mov    %di,-0x000030(%eax)
		mov    %di,-0x00002e(%eax)
		mov    %di,-0x00002c(%eax)
		mov    %di,-0x00002a(%eax)
		mov    %di,-0x000028(%eax)
		mov    %di,-0x000026(%eax)
		mov    %di,-0x000024(%eax)
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)

	_0538b3_jump:
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0532fc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0538c8_func:
		push   %ebx
		push   %ecx
		cmpl   $0x000000,_0cce24_data
		jne    _0538d8_jump
		call   _03b920_func

	_0538d8_jump:
		mov    $0x000020,%ebx
		mov    _0ced3a_data,%ecx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    _0cefd4_data,%al
		add    $0x000021,%ecx
		cmp    %ebx,%eax
		jl     _0538ff_jump
		cmp    %ecx,%eax
		jg     _0538ff_jump
		mov    $0x000001,%eax
		jmp    _053901_jump

	_0538ff_jump:
		xor    %eax,%eax

	_053901_jump:
		test   %eax,%eax
		je     _053913_jump
		cmpb   $0x000041,_0cefdb_data
		jne    _053913_jump
		call   _03b948_func

	_053913_jump:
		testb  $0x000040,_0cefdb_data
		jne    _053921_jump
		call   _03b8f8_func

	_053921_jump:
		pop    %ecx
		pop    %ebx
		ret    



_053924_func:
		push   %ecx
		cwtl   
		mov    $0x000007,%cl
		mov    _0948fc_data(,%eax,2),%ax
		test   %ax,%ax
		js     _05393a_jump
		sar    %cl,%ax
		jmp    _053943_jump

	_05393a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_053943_jump:
		pop    %ecx
		ret    



_053948_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpw   $0x000000,_0ceda6_data
		je     _05398b_jump
		mov    _0ceda4_data,%eax
		sar    $0x000010,%eax
		call   _053924_func
		mov    _0ceda6_data,%bx
		inc    %ebx
		mov    %eax,%edx
		mov    %bx,_0ceda6_data
		cmp    $0x0000ff,%ax
		jne    _053984_jump
		xor    %ecx,%ecx
		xor    %eax,%edx
		mov    %cx,_0ceda6_data

	_053984_jump:
		add    %dx,_0cedfa_data

	_05398b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053990_func:
		push   %ebx
		push   %edx
		mov    _0ceda0_data,%dx
		movswl %dx,%eax
		mov    _09497a_data(,%eax,2),%ax
		cmp    $0x0000ff,%ax
		je     _0539bd_jump
		mov    _0cedfa_data,%bx
		add    %eax,%ebx
		inc    %edx
		mov    %bx,_0cedfa_data
		jmp    _0539bf_jump

	_0539bd_jump:
		xor    %edx,%edx

	_0539bf_jump:
		mov    %dx,_0ceda0_data
		pop    %edx
		pop    %ebx
		ret    



_0539cc_func:
		push   %ebx
		push   %edx
		mov    _0ceda2_data,%dx
		movswl %dx,%eax
		mov    _09497a_data(,%eax,2),%ax
		cmp    $0x0000ff,%ax
		je     _0539f9_jump
		mov    _0cee10_data,%bx
		add    %eax,%ebx
		inc    %edx
		mov    %bx,_0cee10_data
		jmp    _0539fb_jump

	_0539f9_jump:
		xor    %edx,%edx

	_0539fb_jump:
		mov    %dx,_0ceda2_data
		pop    %edx
		pop    %ebx
		ret    



_053a08_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    _0cedfa_data,%cx
		mov    _0cee10_data,%si
		mov    %eax,%ebx
		cmpw   $0x0000ff,(%edx)
		jne    _053a28_jump
		movw   $0x000000,(%edx)

	_053a28_jump:
		cmpw   $0x000006,_0cede4_data
		jne    _053a41_jump
		cmpw   $0x000004,_0cedd0_data
		jne    _053a41_jump
		movw   $0x000000,(%ebx)

	_053a41_jump:
		cmpw   $0x000005,_0cede4_data
		jne    _053a5a_jump
		cmpw   $0x00000b,_0cedd0_data
		jne    _053a5a_jump
		movw   $0x000000,(%ebx)

	_053a5a_jump:
		mov    _0cede4_data,%ax
		mov    %cx,_0cedfa_data
		mov    %si,_0cee10_data
		cmp    $0x000005,%ax
		jne    _053a88_jump
		cmpw   $0x000003,_0cedd0_data
		jne    _053a88_jump
		movw   $0x000000,(%ebx)
		movw   $0x000000,(%edx)

	_053a88_jump:
		call   _053948_func
		cmpw   $0x000000,_0ceda2_data
		jle    _053a9c_jump
		call   _0539cc_func

	_053a9c_jump:
		cmpw   $0x000000,_0ceda0_data
		jle    _053aab_jump
		call   _053990_func

	_053aab_jump:
		mov    _0cedfa_data,%cx
		mov    (%edx),%ax
		mov    _0cee10_data,%si
		add    %eax,%ecx
		mov    (%ebx),%ax
		mov    _0cedba_data,%di
		add    %eax,%esi
		cmp    %di,%si
		jge    _053ae3_jump
		mov    %edi,%eax
		sub    %esi,%eax
		add    %ax,(%ebx)
		mov    %edi,%esi
		xor    %edi,%edi
		mov    %di,_092208_data
		jmp    _053b05_jump

	_053ae3_jump:
		mov    _0cedc8_data,%di
		cmp    %di,%si
		jle    _053b05_jump
		mov    %esi,%eax
		mov    %edi,%esi
		sub    %edi,%eax
		mov    (%ebx),%di
		sub    %eax,%edi
		xor    %eax,%eax
		mov    %di,(%ebx)
		mov    %ax,_092208_data

	_053b05_jump:
		mov    _0cedbc_data,%bx
		cmp    %bx,%cx
		jge    _053b2f_jump
		mov    %ebx,%eax
		xor    %edi,%edi
		mov    (%edx),%bx
		sub    %ecx,%eax
		mov    %di,_09220a_data
		add    %eax,%ebx
		mov    _0cedbc_data,%cx
		mov    %bx,(%edx)
		jmp    _053b52_jump

	_053b2f_jump:
		mov    _0cedc6_data,%di
		cmp    %di,%cx
		jle    _053b52_jump
		mov    %ecx,%eax
		mov    (%edx),%cx
		sub    %edi,%eax
		sub    %eax,%ecx
		mov    %cx,(%edx)
		mov    %edi,%ecx
		xor    %edi,%edi
		mov    %di,_09220a_data

	_053b52_jump:
		mov    $_0cdba4_data,%eax
		mov    %cx,_0cedfa_data
		mov    %si,_0cee10_data
		call   _01db8c_func
		mov    _0cedfa_data,%cx
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_053b78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edi
		xor    %esi,%esi

	_053b81_jump:
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _053c4b_jump

	_053b99_jump:
		cmpw   $0x0000d0,0x000060(%ecx)
		jne    _053c3b_jump
		mov    0x000024(%ecx),%ebx
		test   %ebx,%ebx
		jne    _053c3b_jump
		mov    0x000081(%ecx),%ah
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01f304_func
		movw   $0x000000,0x00005e(%ecx)
		mov    %ecx,%eax
		mov    %ebx,0x000030(%ecx)
		test   %si,%si
		setne  %bl
		call   _01d374_func
		xor    %ebx,%ebx
		mov    0x000028(%edi),%eax
		mov    0x000068(%edi),%bl
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    0x000069(%edi),%bl
		mov    0x00002c(%edi),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		sub    %ebx,%eax
		mov    %eax,0x00002c(%ecx)
		test   %si,%si
		je     _053c19_jump
		mov    $0x000002,%ebx
		jmp    _053c1e_jump

	_053c19_jump:
		mov    $0x000007,%ebx

	_053c1e_jump:
		mov    %ecx,%eax
		mov    %bl,0x00007e(%ecx)
		call   _01db8c_func
		add    $0x000002,%esi
		cmp    $0x000002,%si
		jle    _053b81_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053c3b_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _053b99_jump

	_053c4b_jump:
		add    $0x000002,%esi
		cmp    $0x000002,%si
		jle    _053b81_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053c60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edx
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _053c74_jump
		sar    %cl,%ax
		jmp    _053c7d_jump

	_053c74_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_053c7d_jump:
		movswl %dx,%edx
		movswl %ax,%ebx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _053c8b_jump
		neg    %eax

	_053c8b_jump:
		mov    %eax,%esi
		and    $0x00000f,%esi
		je     _053cda_jump
		mov    _0cce24_data,%edi
		imul   %esi,%edi
		mov    $0x000004,%cl
		mov    %edi,%eax
		test   %eax,%eax
		je     _053ca7_jump
		sar    %cl,%eax
		jmp    _053cad_jump

	_053ca7_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_053cad_jump:
		mov    %eax,%ebp
		mov    %edi,%eax
		mov    $0x000004,%cl
		sub    %esi,%eax
		test   %eax,%eax
		je     _053cbd_jump
		sar    %cl,%eax
		jmp    _053cc3_jump

	_053cbd_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_053cc3_jump:
		sub    %eax,%ebp
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _053cd5_jump
		mov    $0x000001,%eax
		jg     _053cd5_jump
		neg    %eax

	_053cd5_jump:
		imul   %ebp,%eax
		add    %eax,%ebx

	_053cda_jump:
		mov    %ebx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053ce4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ecx,%ecx
		mov    0x00006a(%eax),%cl
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    0x000004(%edx),%ecx
		mov    0x000008(%ecx,%eax,4),%ax
		xor    %al,%al
		and    $0x0000c0,%ah
		and    $0x00ffff,%eax
		sar    $0x00000e,%eax
		xor    %ecx,%ecx
		inc    %eax
		mov    %al,%cl
		cmpb   $0x000000,_0cef4d_data(%ecx)
		jne    _053d67_jump
		xor    %ecx,%ecx
		mov    0x00006d(%edx),%cl
		mov    0x000081(%edx),%ah
		lea    0x000000(,%ecx,4),%esi
		shl    $0x000004,%ah
		mov    0x00000c(%edx),%ecx
		add    %esi,%ecx
		movzbl 0x00006c(%edx),%esi
		mov    (%ecx),%ecx
		shl    $0x000003,%esi
		shr    $0x000007,%ah
		add    %esi,%ecx
		test   %ah,%ah
		jbe    _053d4e_jump
		cmp    $0x000001,%ah
		je     _053d5a_jump
		jmp    _053d69_jump

	_053d4e_jump:
		movsbw 0x000001(%ecx),%bx
		xor    %ah,%ah
		imul   %eax,%ebx
		jmp    _053d69_jump

	_053d5a_jump:
		xor    %ebx,%ebx
		movsbw (%ecx),%cx
		mov    %al,%bl
		imul   %ecx,%ebx
		jmp    _053d69_jump

	_053d67_jump:
		xor    %ebx,%ebx

	_053d69_jump:
		cmpw   $0x000017,0x000060(%edx)
		jne    _053d92_jump
		testb  $0x000002,_0ced81_data
		je     _053d92_jump
		mov    $0x000001,%cl
		mov    %ebx,%eax
		test   %ax,%ax
		js     _053d87_jump
		sar    %cl,%ax
		jmp    _053d90_jump

	_053d87_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_053d90_jump:
		mov    %eax,%ebx

	_053d92_jump:
		mov    %bx,0x000040(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_053d9a_jump:
		ret    



_053d9c_func:
		movl   $0x000001,0x000024(%eax)
		movl   $0x000001,0x00001c(%eax)
		movl   $0x000000,0x000030(%eax)
		test   %dl,%dl
		je     _053d9a_jump
		jmp    _077338_func



_053dbc_func:
		testb  $0x000004,0x000081(%eax)
		je     _053d9a_jump
		movl   $0x000001,0x000024(%eax)
		movl   $0x000001,0x00001c(%eax)
		movl   $0x000000,0x000030(%eax)
		test   %dl,%dl
		je     _053d9a_jump
		jmp    _077338_func



_053de4_func:
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dx,0x000008(%esp)
		mov    %ebx,%edi
		mov    %cl,0x000010(%esp)
		xor    %edx,%edx
		mov    _0e3de4_data,%dx
		xor    %ecx,%ecx
		mov    _09288a_data(,%edx,2),%ax
		mov    _09267e_data(,%edx,2),%bx
		mov    %ax,0x000004(%esp)
		mov    0x000068(%edi),%al
		shl    $0x000002,%edx
		mov    %al,0x00000c(%esp)
		mov    _092264_data(%edx),%ah
		mov    %bx,(%esp)
		test   $0x000010,%ah
		je     _053ffd_jump
		test   $0x000080,%ah
		je     _053e4b_jump
		cmpb   $0x000000,_0cefeb_data
		je     _053e4b_jump

	_053e41_jump:
		mov    $0x000001,%ecx
		jmp    _053ffd_jump

	_053e4b_jump:
		mov    _0e3de4_data,%ax
		cmp    $0x00009d,%ax
		jb     _053ebb_jump
		jbe    _053fb3_jump
		cmp    $0x0000d7,%ax
		jb     _053e8f_jump
		jbe    _053e41_jump
		cmp    $0x0000dc,%ax
		jb     _053e80_jump
		jbe    _053f35_jump
		cmp    $0x0000f4,%ax
		je     _053ff8_jump
		jmp    _053ffd_jump

	_053e80_jump:
		cmp    $0x0000db,%ax
		je     _053f8f_jump
		jmp    _053ffd_jump

	_053e8f_jump:
		cmp    $0x0000c0,%ax
		jb     _053eb0_jump
		jbe    _053ff8_jump
		cmp    $0x0000cc,%ax
		jb     _053ffd_jump
		cmp    $0x0000cd,%ax
		jbe    _053e41_jump
		jmp    _053ffd_jump

	_053eb0_jump:
		cmp    $0x0000be,%ax
		je     _053e41_jump
		jmp    _053ffd_jump

	_053ebb_jump:
		cmp    $0x000078,%ax
		jb     _053ef1_jump
		jbe    _053e41_jump
		cmp    $0x00008f,%ax
		jb     _053ee2_jump
		jbe    _053e41_jump
		cmp    $0x000099,%ax
		je     _053e41_jump
		jmp    _053ffd_jump

	_053ee2_jump:
		cmp    $0x00007a,%ax
		je     _053fcb_jump
		jmp    _053ffd_jump

	_053ef1_jump:
		cmp    $0x00005e,%ax
		jb     _053f08_jump
		jbe    _053e41_jump
		cmp    $0x000061,%ax
		je     _053f12_jump
		jmp    _053ffd_jump

	_053f08_jump:
		cmp    $0x00000a,%ax
		jne    _053ffd_jump

	_053f12_jump:
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _053ffd_jump
		cmp    $0x0001bc,%si
		jge    _053ffd_jump
		mov    $0x000001,%ecx
		jmp    _053ffd_jump

	_053f35_jump:
		mov    0x000006(%esp),%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		cmp    $0xffffffce,%eax
		jle    _053f8f_jump
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _053f8f_jump
		cmp    $0x0001f4,%si
		jge    _053f8f_jump
		mov    _0cede4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpb   $0x000000,0x000076(%eax)
		jne    _053f8f_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movb   $0x00000a,0x000076(%eax)
		call   _01d374_func

	_053f8f_jump:
		mov    _0cede4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		cmpb   $0x000000,0x000076(%edx,%eax,4)
		jbe    _053ffd_jump
		mov    $0x000001,%ecx
		jmp    _053ffd_jump

	_053fb3_jump:
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _053ffd_jump
		cmp    $0x0001f4,%si
		jge    _053ffd_jump
		mov    $0x000001,%ecx
		jmp    _053ffd_jump

	_053fcb_jump:
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _053ffd_jump
		cmp    $0x0001bc,%si
		jge    _053ffd_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff9c,%eax
		jle    _053ffd_jump
		cmpw   $0x0000fa,0x000008(%esp)
		jge    _053ffd_jump
		mov    $0x000001,%ecx
		jmp    _053ffd_jump

	_053ff8_jump:
		movb   $0x000080,0x00000c(%esp)

	_053ffd_jump:
		test   %cx,%cx
		jne    _0540b1_jump
		cmpb   $0x000000,0x000010(%esp)
		je     _054023_jump
		mov    (%esp),%ebx
		mov    0x000004(%esp),%ecx
		add    $0x00003c,%ebx
		add    $0x00003c,%ecx
		mov    %bx,(%esp)
		mov    %cx,0x000004(%esp)

	_054023_jump:
		mov    -0x000002(%esp),%eax
		mov    $0xfffffee4,%ebx
		sar    $0x000010,%eax
		movswl %si,%edx
		sub    %eax,%ebx
		cmp    %ebx,%edx
		jl     _0540a8_jump
		add    $0x0001bc,%eax
		cmp    %eax,%edx
		jg     _0540a8_jump
		mov    0x000002(%esp),%eax
		mov    $0xffffff70,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %eax,%ebx
		cmp    %ebx,%edx
		jl     _0540a8_jump
		add    $0x000130,%eax
		cmp    %eax,%edx
		jg     _0540a8_jump
		xor    %eax,%eax
		mov    0x00002c(%edi),%edx
		mov    0x000069(%edi),%al
		add    %edx,%eax
		cmp    $0xffffffe2,%eax
		jl     _0540a8_jump
		mov    _0cdb98_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		add    $0x00001e,%eax
		cmp    %edx,%eax
		jl     _0540a8_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		mov    0x000028(%edi),%ecx
		add    %eax,%eax
		add    %ecx,%eax
		test   %eax,%eax
		jl     _0540a8_jump
		mov    _0cdb96_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ecx,%eax
		jge    _0540ac_jump

	_0540a8_jump:
		xor    %ecx,%ecx
		jmp    _0540b1_jump

	_0540ac_jump:
		mov    $0x000001,%ecx

	_0540b1_jump:
		cmp    $0x000001,%cx
		jne    _0540fe_jump
		xor    %eax,%eax
		mov    _0e3de4_data,%ax
		testb  $0x000080,_092264_data(,%eax,4)
		je     _0540fe_jump
		mov    $0x000001,%dh
		mov    _0cefc5_data,%bl
		mov    %dh,_0cefeb_data
		test   %bl,%bl
		jne    _0540ea_jump
		cmpb   $0x000000,0x000076(%edi)
		je     _0540ea_jump
		cmpb   $0x000000,_0cefbd_data
		jne    _0540f9_jump

	_0540ea_jump:
		cmpb   $0x000000,_0cefc5_data
		je     _0540fe_jump
		cmpb   $0x000000,0x000076(%edi)
		jne    _0540fe_jump

	_0540f9_jump:
		call   _01f2c0_func

	_0540fe_jump:
		cmp    $0x000001,%cx
		sete   %al
		xor    %ah,%ah
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		ret    



_054110_func:
		push   %edx
		movl   $0xffff8300,0x000028(%eax)
		movl   $0xffff8300,0x00002c(%eax)
		mov    0x000081(%eax),%dl
		movl   $0x000001,0x000030(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    



_054138_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %ebx,%esi
		mov    0x000060(%ebx),%bx
		mov    %bx,_0e3de4_data
		mov    0x000024(%esi),%bl
		mov    %bl,(%esp)
		mov    0x000081(%esi),%bl
		movl   $0x000000,0x000024(%esi)
		test   $0x000004,%bl
		je     _054399_jump
		movswl %dx,%edx
		cwtl   
		xor    %ecx,%ecx
		mov    %esi,%ebx
		mov    (%esp),%cl
		call   _053de4_func
		test   %ax,%ax
		je     _054281_jump
		cmpw   $0x000000,0x00005e(%esi)
		jne    _054265_jump
		xor    %eax,%eax
		mov    _0e3de4_data,%ax
		testb  $0x000001,_092265_data(,%eax,4)
		jne    _0541b6_jump
		mov    0x000030(%esi),%edx
		cmp    $0x000002,%edx
		jl     _0541b6_jump
		je     _054265_jump
		cmp    $0x00000a,%ax
		jne    _054265_jump

	_0541b6_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		mov    %eax,0x000024(%esi)
		xor    %eax,%eax
		mov    _0e3de4_data,%ax
		shl    $0x000002,%eax
		testb  $0x000001,_092264_data(%eax)
		jne    _0541db_jump
		testb  $0x000040,_092267_data(%eax)
		je     _054209_jump

	_0541db_jump:
		cmpl   $0x000000,0x000024(%esi)
		jne    _0541f7_jump
		xor    %eax,%eax
		mov    _0e3de4_data,%ax
		testb  $0x000001,_092265_data(,%eax,4)
		je     _0541f7_jump
		mov    $0x000001,%al
		jmp    _0541f9_jump

	_0541f7_jump:
		xor    %al,%al

	_0541f9_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _053d9c_func
		jmp    _054399_jump

	_054209_jump:
		mov    0x000034(%esi),%ax
		xor    %ecx,%ecx

	_05420f_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%ebx
		add    %eax,%ebx
		cmp    0x000024(%ebx),%ecx
		jne    _054237_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000001,_092265_data(,%eax,4)
		je     _054237_jump
		mov    $0x000001,%al
		jmp    _054239_jump

	_054237_jump:
		mov    %cl,%al

	_054239_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebx,%eax
		call   _053dbc_func
		mov    0x000032(%ebx),%eax
		mov    _0ce434_data,%edx
		sar    $0x000010,%eax
		mov    0x000034(%esi),%di
		mov    (%edx,%eax,2),%ax
		cmp    %di,%ax
		jne    _05420f_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_054265_jump:
		mov    0x00005e(%esi),%di
		test   %di,%di
		jle    _054399_jump
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x00005e(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_054281_jump:
		mov    0x000030(%esi),%ax
		cmp    $0x000001,%ax
		je     _054399_jump
		xor    %edx,%edx
		mov    _0e3de4_data,%dx
		movw   $0x000000,0x00005e(%esi)
		testb  $0x000020,_092266_data(,%edx,4)
		je     _0542b7_jump
		mov    %esi,%eax
		call   _054110_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0542b7_jump:
		cmp    $0x000002,%ax
		jne    _0542cc_jump
		movl   $0x000001,0x000030(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0542cc_jump:
		test   %ax,%ax
		je     _0542db_jump
		cmp    $0x000004,%ax
		jne    _054399_jump

	_0542db_jump:
		xor    %eax,%eax
		mov    _0e3de4_data,%ax
		testb  $0x000001,_092264_data(,%eax,4)
		je     _0542fc_jump
		mov    %esi,%eax
		call   _05e09c_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0542fc_jump:
		movl   $0x000004,0x000030(%esi)
		mov    _0e3de4_data,%dx
		mov    0x000034(%esi),%ax
		movl   $0x000001,0x000024(%esi)
		xor    %bl,%bl
		cmp    $0x00000a,%dx
		je     _05434c_jump

	_05431d_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%edx
		add    %edx,%eax
		cmpl   $0x000004,0x000030(%eax)
		je     _054336_jump
		mov    $0x000001,%bl
		jmp    _05434c_jump

	_054336_jump:
		mov    0x000032(%eax),%eax
		mov    _0ce434_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%esi),%ax
		jne    _05431d_jump

	_05434c_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%al
		add    %ebp,%eax
		cmp    $0xffffffe2,%eax
		jge    _054362_jump
		movl   $0x000000,0x000024(%esi)

	_054362_jump:
		test   %bl,%bl
		jne    _054399_jump
		mov    0x000034(%esi),%ax

	_05436a_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%ebx
		add    %eax,%ebx
		mov    %ebx,%eax
		call   _05e09c_func
		mov    0x000032(%ebx),%eax
		mov    _0ce434_data,%edx
		sar    $0x000010,%eax
		mov    0x000034(%esi),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _05436a_jump

	_054399_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_0543a4_switch:
		.long   _054467_case
		.long   _05447d_case
		.long   _054493_case
		.long   _0544b4_case
		.long   _0544cf_case
		.long   _05444e_case
		.long   _054511_case
		.long   _054511_case
		.long   _054511_case
		.long   _0544dc_case
		.long   _0544f6_case




_0543d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ecx,%ecx
		mov    0x00006d(%edx),%cl
		mov    0x00000c(%edx),%esi
		shl    $0x000002,%ecx
		add    %esi,%ecx
		movzbl 0x00006c(%edx),%esi
		mov    (%ecx),%ecx
		mov    0x000005(%ecx,%esi,8),%cl
		xor    %ebx,%ebx
		shr    $0x000004,%cl
		xor    %eax,%eax
		test   %cl,%cl
		je     _05452a_jump
		mov    0x000060(%edx),%si
		cmp    $0x000057,%si
		je     _05440c_jump
		cmp    $0x000058,%si
		jne    _054435_jump

	_05440c_jump:
		mov    0x00007d(%edx),%cl
		test   %cl,%cl
		jbe    _05441d_jump
		dec    %cl
		mov    %cl,0x00007d(%edx)
		jmp    _054511_case

	_05441d_jump:
		cmpb   $0x000000,0x000071(%edx)
		jne    _054511_case
		mov    $0x000001,%ebx
		add    %bx,0x000042(%edx)
		jmp    _054511_case

	_054435_jump:
		dec    %cl
		cmp    $0x00000a,%cl
		ja     _054511_case
		and    $0x0000ff,%ecx
		jmp    *%cs:_0543a4_switch(,%ecx,4)

	_05444e_case:
		cmpb   $0x000000,_0cef4f_data
		jne    _054511_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _054511_case

	_054467_case:
		cmpb   $0x000000,0x000071(%edx)
		jne    _054511_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _054511_case

	_05447d_case:
		cmpb   $0x000000,0x000072(%edx)
		jne    _054511_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _054511_case

	_054493_case:
		mov    0x000042(%edx),%cx
		cmp    $0x000001,%cx
		jge    _0544a7_jump
		mov    $0x000001,%eax
		jmp    _054511_case

	_0544a7_jump:
		jle    _054511_case
		mov    $0xffffffff,%eax
		jmp    _054511_case

	_0544b4_case:
		mov    0x000040(%edx),%ecx
		sar    $0x000010,%ecx
		cmp    $0xfffffffe,%ecx
		jle    _0544c6_jump
		mov    $0xffffffff,%eax
		jmp    _054511_case

	_0544c6_jump:
		jge    _054511_case
		mov    $0x000001,%eax
		jmp    _054511_case

	_0544cf_case:
		cmpb   $0x000000,0x000071(%edx)
		jne    _054511_case
		mov    $0xffffffff,%eax
		jmp    _054511_case

	_0544dc_case:
		mov    0x000071(%edx),%cl
		inc    %cl
		mov    %cl,0x000071(%edx)
		cmp    0x000072(%edx),%cl
		jb     _054511_case
		mov    $0x000001,%eax
		movb   $0x000000,0x000071(%edx)
		mov    %eax,%ebx
		jmp    _054511_case

	_0544f6_case:
		mov    0x000071(%edx),%cl
		inc    %cl
		mov    %cl,0x000071(%edx)
		cmp    0x000072(%edx),%cl
		jb     _054511_case
		mov    $0xffffffff,%eax
		mov    $0x000001,%ebx
		movb   $0x000000,0x000071(%edx)

	_054511_case:
		xor    %ecx,%ecx
		mov    0x000060(%edx),%cx
		testb  $0x000020,_092265_data(,%ecx,4)
		je     _054526_jump
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax

	_054526_jump:
		add    %ax,0x000042(%edx)

	_05452a_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054534_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%ecx),%ebx
		mov    0x00000a(%ebx,%eax,4),%ax
		dec    %eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%ecx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%ebx,%eax,8)
		je     _054591_jump
		xor    %ebx,%ebx
		mov    -0x000002(%esp),%eax
		mov    %dl,%bl
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _054586_jump
		mov    %ebx,%eax

	_054586_jump:
		mov    (%esp),%ah
		sub    %al,%ah
		mov    %ah,%al
		inc    %al
		jmp    _0545a2_jump

	_054591_jump:
		xor    %ebx,%ebx
		mov    -0x000002(%esp),%eax
		mov    %dl,%bl
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0545a2_jump
		mov    %ebx,%eax

	_0545a2_jump:
		mov    %al,0x00006b(%ecx)
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_0545ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		mov    %eax,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    (%edx),%ebx
		shl    $0x000003,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		lea    0x000000(,%eax,4),%edi
		sub    %eax,%edi
		mov    0x000004(%esi),%ebp
		shl    $0x000002,%edi
		mov    0x000005(%ebx),%al
		add    %edi,%ebp
		and    $0x00000f,%al
		je     _054623_jump
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _054623_jump
		mov    0x000007(%ebx),%al
		shl    $0x000003,%al
		shr    $0x000007,%al
		test   %al,%al
		jne    _054620_jump
		incb   0x00006b(%esi)
		jmp    _054623_jump

	_054620_jump:
		decb   0x00006b(%esi)

	_054623_jump:
		mov    0x000002(%ebx),%al
		mov    %al,0x00006a(%esi)
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		lea    0x000000(,%eax,4),%edi
		sub    %eax,%edi
		shl    $0x000002,%edi
		mov    0x000004(%esi),%eax
		add    %eax,%edi
		mov    0x000073(%esi),%al
		cmp    $0x000001,%al
		jb     _0546cb_jump
		jbe    _054655_jump
		cmp    $0x000002,%al
		je     _05467f_jump
		jmp    _0546cb_jump

	_054655_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x00006a(%esi),%al
		cmp    %dx,%ax
		je     _054677_jump
		testb  $0x000010,0x000007(%ebx)
		jne    _05466f_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _054677_jump

	_05466f_jump:
		mov    0x00000a(%edi),%al
		dec    %al
		mov    %al,0x00006b(%esi)

	_054677_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _0546cb_jump
		jmp    _054699_jump

	_05467f_jump:
		testb  $0x000010,0x000007(%ebx)
		jne    _05468b_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _054693_jump

	_05468b_jump:
		mov    0x00000a(%edi),%al
		dec    %al
		mov    %al,0x00006b(%esi)

	_054693_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _0546cb_jump

	_054699_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%ecx),%eax
		mov    (%esp),%ecx
		mov    0x000032(%esi),%edx
		add    %ecx,%eax
		sar    $0x000010,%edx
		mov    0x000006(%eax),%al
		and    $0x0000ff,%eax
		call   _06f3bc_func

	_0546cb_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00006b(%esi),%dl
		mov    0x00000a(%edi),%ax
		cmp    %eax,%edx
		jge    _0546e3_jump
		cmp    $0x0000ff,%dl
		jne    _0547d0_jump

	_0546e3_jump:
		mov    0x000004(%ebx),%al
		mov    %al,0x00006c(%esi)
		mov    0x000003(%ebx),%al
		mov    %al,0x00006d(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		xor    %ebx,%ebx
		lea    0x000000(,%eax,4),%edx
		mov    0x00006c(%esi),%bl
		mov    0x00000c(%esi),%eax
		shl    $0x000003,%ebx
		mov    (%edx,%eax,1),%eax
		add    %eax,%ebx
		mov    0x000002(%ebx),%al
		mov    %al,0x00006a(%esi)
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		lea    0x000000(,%eax,4),%edi
		sub    %eax,%edi
		lea    0x000000(,%edi,4),%eax
		mov    0x000004(%esi),%edi
		mov    0x000060(%esi),%cx
		add    %eax,%edi
		cmp    $0x000017,%cx
		jne    _054758_jump
		cmpw   $0x000008,_0cee2c_data
		jne    _054758_jump
		mov    _0cee1a_data,%dx
		cmp    $0x000002,%dx
		je     _054752_jump
		cmp    $0x000006,%dx
		jne    _054758_jump

	_054752_jump:
		cmpb   $0x000008,0x00006c(%esi)
		jne    _054772_jump

	_054758_jump:
		cmpw   $0x00003d,_0cee2c_data
		jne    _05478e_jump
		cmpw   $0x000000,_0cee1a_data
		jne    _05478e_jump
		cmpb   $0x00003d,0x00006c(%esi)
		je     _05478e_jump

	_054772_jump:
		cmpw   $0x00003c,_0cdbfa_data
		jle    _05478e_jump
		testb  $0x000080,_0ced81_data
		jne    _05478e_jump
		movw   $0x00003c,_0cdbfa_data

	_05478e_jump:
		testb  $0x000010,0x000007(%ebx)
		je     _05479d_jump
		xor    %eax,%eax
		mov    0x00000a(%edi),%ax
		dec    %eax
		jmp    _05479f_jump

	_05479d_jump:
		xor    %eax,%eax

	_05479f_jump:
		mov    %al,0x00006b(%esi)
		cmpl   $0x000000,0x000024(%esi)
		je     _0547d0_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000032(%esi),%edx
		xor    %ebx,%ebx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%bl
		sar    $0x000010,%edx
		mov    0x000006(%eax,%ebx,8),%al
		and    $0x0000ff,%eax
		call   _06f3bc_func

	_0547d0_jump:
		mov    0x000081(%esi),%al
		movb   $0x000000,0x000073(%esi)
		test   $0x000020,%al
		je     _0547f0_jump
		mov    0x000002(%esp),%ecx
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		sar    $0x000010,%ecx
		call   _01d660_func

	_0547f0_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x00006b(%esi),%al
		lea    0x000081(%esi),%ebx
		cmp    %dx,%ax
		jne    _054812_jump
		xor    %edx,%eax
		mov    0x000008(%esp),%ecx
		mov    0x00006a(%esi),%al
		cmp    %cx,%ax
		je     _054819_jump

	_054812_jump:
		mov    $0x000001,%eax
		jmp    _05481b_jump

	_054819_jump:
		xor    %eax,%eax

	_05481b_jump:
		and    $0x000001,%al
		mov    (%ebx),%ah
		and    $0x00007f,%ah
		mov    %ah,(%ebx)
		shl    $0x000007,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,(%ebx)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054838_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		mov    0x00002c(%eax),%ax
		add    %edx,%eax
		xor    %ah,%ah
		and    $0x00000f,%al
		pop    %edx
		ret    



_05484c_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %dl,(%esp)
		cmpw   $0x000001,0x000042(%eax)
		jg     _05488a_jump
		movw   $0x000000,0x000042(%eax)
		xor    %edx,%edx
		and    $0x0000ff,%ebx
		mov    (%esp),%dl
		call   _01d374_func
		cmpb   $0x000002,(%esp)
		je     _0549bd_jump
		mov    %ecx,%eax
		call   _0255d0_func
		jmp    _0549bd_jump

	_05488a_jump:
		cmpb   $0x000000,_0cef4f_data
		jne    _0549ad_jump
		mov    0x000062(%ecx),%al
		cmp    $0x00000c,%al
		jb     _0548ea_jump
		jbe    _0549ad_jump
		cmp    $0x000014,%al
		jb     _0548cd_jump
		cmp    $0x000015,%al
		jbe    _05495a_jump
		cmp    $0x000018,%al
		jb     _054979_jump
		cmp    $0x000019,%al
		jbe    _0549ad_jump
		cmp    $0x00001e,%al
		je     _054993_jump
		jmp    _0549ad_jump

	_0548cd_jump:
		cmp    $0x000012,%al
		jb     _0548d5_jump
		jbe    _054917_jump
		jmp    _05493a_jump

	_0548d5_jump:
		cmp    $0x00000e,%al
		jb     _0549ad_jump
		cmp    $0x00000f,%al
		jbe    _054993_jump
		jmp    _0549ad_jump

	_0548ea_jump:
		cmp    $0x000004,%al
		jb     _05490d_jump
		cmp    $0x000005,%al
		jbe    _05495a_jump
		cmp    $0x000008,%al
		jb     _054979_jump
		jbe    _0549ad_jump
		cmp    $0x000009,%al
		je     _05499c_jump
		jmp    _0549ad_jump

	_05490d_jump:
		cmp    $0x000002,%al
		jb     _0549ad_jump
		ja     _05493a_jump

	_054917_jump:
		mov    $0x000001,%ebx
		mov    0x000040(%ecx),%edx
		mov    0x000040(%ecx),%ax
		sar    $0x000010,%edx
		sub    $0x000002,%eax
		sar    %edx
		mov    %ax,0x000040(%ecx)
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		jmp    _0549ad_jump

	_05493a_jump:
		mov    $0x000001,%ebx
		mov    0x000040(%ecx),%edx
		mov    0x000040(%ecx),%di
		sar    $0x000010,%edx
		add    $0x000002,%edi
		sar    %edx
		mov    %di,0x000040(%ecx)
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		jmp    _0549ad_jump

	_05495a_jump:
		mov    0x000040(%ecx),%edx
		mov    $0x000001,%ebx
		sar    $0x000010,%edx
		mov    0x000040(%ecx),%si
		inc    %edx
		dec    %esi
		sar    %edx
		mov    %si,0x000040(%ecx)
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		jmp    _0549ad_jump

	_054979_jump:
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		inc    %edx
		mov    $0x000001,%ebx
		sar    %edx
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		incw   0x000040(%ecx)
		jmp    _0549ad_jump

	_054993_jump:
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		inc    %edx
		jmp    _0549a5_jump

	_05499c_jump:
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		add    $0x000003,%edx

	_0549a5_jump:
		sar    %edx
		neg    %edx
		mov    %dx,0x000042(%ecx)

	_0549ad_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _0549bd_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d364_func

	_0549bd_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0549c4_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000062(%eax),%dl
		testb  $0x000001,_092224_data(%edx)
		je     _0549e8_jump
		mov    0x000065(%eax),%al
		and    $0x0000ff,%eax
		testb  $0x000040,_092224_data(%eax)
		je     _0549e8_jump
		mov    $0x000001,%al
		pop    %edx
		ret    

	_0549e8_jump:
		xor    %al,%al
		pop    %edx
		ret    



_0549ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    0x000060(%eax),%si
		cmp    $0x00002f,%si
		jne    _054a08_jump
		mov    $0x000020,%ecx
		mov    $0xfffffffc,%ebx
		jmp    _054a18_jump

	_054a08_jump:
		cmp    $0x000045,%si
		jne    _054a18_jump
		mov    $0x000030,%ecx
		mov    $0xfffffffa,%ebx

	_054a18_jump:
		mov    %edx,%eax
		call   _0549c4_func
		test   %al,%al
		je     _054a29_jump
		mov    0x000065(%edx),%al
		mov    %al,0x000062(%edx)

	_054a29_jump:
		mov    0x000062(%edx),%al
		cmp    $0x00000e,%al
		jb     _054a5d_jump
		cmp    $0x00000f,%al
		jbe    _054ac6_jump
		cmp    $0x000014,%al
		jb     _054a51_jump
		cmp    $0x000015,%al
		jbe    _054a77_jump
		cmp    $0x000017,%al
		jbe    _054a8f_jump
		cmp    $0x00001e,%al
		je     _054ac6_jump
		jmp    _054aca_jump

	_054a51_jump:
		cmp    $0x000012,%al
		jb     _054aca_jump
		jbe    _054aa4_jump
		jmp    _054a89_jump

	_054a5d_jump:
		cmp    $0x000004,%al
		jb     _054a6f_jump
		cmp    $0x000005,%al
		jbe    _054a77_jump
		cmp    $0x000007,%al
		jbe    _054a8f_jump
		cmp    $0x000009,%al
		je     _054ac3_jump
		jmp    _054aca_jump

	_054a6f_jump:
		cmp    $0x000002,%al
		jb     _054aca_jump
		jbe    _054aa4_jump
		jmp    _054a89_jump

	_054a77_jump:
		mov    %bx,0x000042(%edx)
		mov    %ecx,%eax
		mov    %cx,0x000040(%edx)
		neg    %eax
		mov    %ax,0x000040(%edx)
		jmp    _054aca_jump

	_054a89_jump:
		add    $0x000002,%ebx
		add    $0x000010,%ecx

	_054a8f_jump:
		mov    %bx,0x000042(%edx)
		mov    %cx,0x000040(%edx)
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054aa4_jump:
		add    $0x000002,%ebx
		mov    %bx,0x000042(%edx)
		mov    $0xfffffff0,%ebx
		sub    %ecx,%ebx
		mov    %bx,0x000040(%edx)
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054ac3_jump:
		sub    $0x000003,%ebx

	_054ac6_jump:
		mov    %bx,0x000042(%edx)

	_054aca_jump:
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054ad8_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%edi
		mov    $0x000005,%esi
		mov    0x00006d(%eax),%ah
		mov    $0x000003,%edx
		cmp    $0x000002,%ah
		jne    _054b07_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _054b07_jump
		mov    $0xffffffff,%edx
		mov    %ecx,%eax
		call   _07912c_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_054b07_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _054b2c_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _054b2c_jump
		mov    %ecx,%eax
		mov    0x000060(%ecx),%dx
		movw   $0x00002f,0x000060(%ecx)
		call   _0549ec_func
		mov    %dx,0x000060(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_054b2c_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jl     _054ccd_jump
		mov    %ecx,%eax
		call   _0549c4_func
		mov    %al,%ah
		test   %al,%al
		je     _054b49_jump
		mov    0x000065(%ecx),%al
		jmp    _054b4c_jump

	_054b49_jump:
		mov    0x000062(%ecx),%al

	_054b4c_jump:
		cmp    $0x00000c,%al
		jb     _054b7b_jump
		jbe    _054c24_jump
		cmp    $0x000014,%al
		jb     _054b6f_jump
		cmp    $0x000015,%al
		jbe    _054bde_jump
		cmp    $0x000018,%al
		jb     _054bf9_jump
		jmp    _054c24_jump

	_054b6f_jump:
		cmp    $0x000012,%al
		jb     _054c24_jump
		jbe    _054ba8_jump
		jmp    _054bc3_jump

	_054b7b_jump:
		cmp    $0x000004,%al
		jb     _054b9e_jump
		cmp    $0x000005,%al
		jbe    _054bde_jump
		cmp    $0x000008,%al
		jb     _054bf9_jump
		jbe    _054c24_jump
		cmp    $0x000009,%al
		je     _054c14_jump
		jmp    _054c24_jump

	_054b9e_jump:
		cmp    $0x000002,%al
		jb     _054c24_jump
		ja     _054bc3_jump

	_054ba8_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _054bb8_jump
		mov    $0x000001,%edx
		mov    %dx,0x000042(%ecx)

	_054bb8_jump:
		imul   0x000042(%ecx),%si
		sub    %si,0x000040(%ecx)
		jmp    _054c24_jump

	_054bc3_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _054bd3_jump
		mov    $0x000001,%edx
		mov    %dx,0x000042(%ecx)

	_054bd3_jump:
		imul   0x000042(%ecx),%si
		add    %si,0x000040(%ecx)
		jmp    _054c24_jump

	_054bde_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _054bee_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_054bee_jump:
		imul   0x000042(%ecx),%dx
		sub    %dx,0x000040(%ecx)
		jmp    _054c24_jump

	_054bf9_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _054c09_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_054c09_jump:
		imul   0x000042(%ecx),%dx
		add    %dx,0x000040(%ecx)
		jmp    _054c24_jump

	_054c14_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _054c24_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_054c24_jump:
		test   %bx,%bx
		jle    _054c4d_jump
		mov    0x000042(%ecx),%si
		cmp    $0x000001,%si
		jle    _054c45_jump
		sub    %esi,%ebx
		mov    %bx,0x000042(%ecx)
		test   %di,%di
		je     _054c53_jump
		inc    %ebx
		mov    %bx,0x000042(%ecx)
		jmp    _054c53_jump

	_054c45_jump:
		movw   $0x000000,0x000042(%ecx)
		jmp    _054c53_jump

	_054c4d_jump:
		movw   $0x00fffd,0x000042(%ecx)

	_054c53_jump:
		test   %ah,%ah
		je     _054c94_jump

	_054c57_jump:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		cmp    0x000062(%ecx),%al
		jne    _054c84_jump
		decl   0x00002c(%ecx)
		jmp    _054c57_jump

	_054c84_jump:
		mov    %ecx,%eax
		call   _0255d0_func
		mov    %ecx,%eax
		call   _01e2ec_func
		jmp    _054ccd_jump

	_054c94_jump:
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000001,_092224_data(%eax)
		je     _054cc6_jump
		mov    %ecx,%eax
		call   _054838_func
		cmp    $0x000004,%ax
		jl     _054cc6_jump
		mov    0x000042(%ecx),%si
		cmp    $0x000002,%si
		jg     _054cc6_jump
		test   %si,%si
		jne    _054ccd_jump
		movw   $0x000001,0x000042(%ecx)
		jmp    _054ccd_jump

	_054cc6_jump:
		mov    %ecx,%eax
		call   _0255d0_func

	_054ccd_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %edx,%eax
		movb   $0x000000,0x000071(%ecx)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		shr    $0x000004,%al
		cmp    $0x00000b,%al
		je     _054cfc_jump
		cmp    $0x00000a,%al
		je     _054cfc_jump
		movb   $0x000000,0x000072(%ecx)

	_054cfc_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_054d00_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,0x000004(%esp)
		cmpw   $0x000026,0x000060(%eax)
		jne    _054d2b_jump
		mov    $0x000001,%eax
		mov    $0x000002,%edi
		mov    %eax,%ebx
		mov    %eax,%edx
		mov    %ax,0x000008(%esp)
		jmp    _054d46_jump

	_054d2b_jump:
		mov    $0x000005,%eax
		mov    $0x000004,%ebx
		mov    $0x000003,%ecx
		mov    $0x000001,%edi
		mov    %eax,%edx
		mov    %cx,0x000008(%esp)

	_054d46_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _054fd3_jump
		mov    0x000040(%esi),%cx
		test   %cx,%cx
		jle    _054d5e_jump
		sub    %eax,%ecx
		jmp    _054d62_jump

	_054d5e_jump:
		jge    _054d66_jump
		add    %eax,%ecx

	_054d62_jump:
		mov    %cx,0x000040(%esi)

	_054d66_jump:
		movswl %bx,%ecx
		mov    0x00003e(%esi),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jl     _054d82_jump
		cmp    %ecx,%eax
		jg     _054d82_jump
		mov    $0x000001,%eax
		jmp    _054d84_jump

	_054d82_jump:
		xor    %eax,%eax

	_054d84_jump:
		test   %eax,%eax
		je     _054d8e_jump
		movw   $0x000000,0x000040(%esi)

	_054d8e_jump:
		mov    %esi,%eax
		call   _0549c4_func
		mov    %al,%cl
		test   %al,%al
		je     _054da0_jump
		mov    0x000065(%esi),%al
		jmp    _054da3_jump

	_054da0_jump:
		mov    0x000062(%esi),%al

	_054da3_jump:
		cmp    $0x00000c,%al
		jb     _054dd2_jump
		jbe    _054ebf_jump
		cmp    $0x000014,%al
		jb     _054dc6_jump
		cmp    $0x000015,%al
		jbe    _054e3b_jump
		cmp    $0x000018,%al
		jb     _054e75_jump
		jmp    _054ebf_jump

	_054dc6_jump:
		cmp    $0x000012,%al
		jb     _054ebf_jump
		jbe    _054dff_jump
		jmp    _054e1d_jump

	_054dd2_jump:
		cmp    $0x000004,%al
		jb     _054df5_jump
		cmp    $0x000005,%al
		jbe    _054e3b_jump
		cmp    $0x000008,%al
		jb     _054e75_jump
		jbe    _054ebf_jump
		cmp    $0x000009,%al
		je     _054eaf_jump
		jmp    _054ebf_jump

	_054df5_jump:
		cmp    $0x000002,%al
		jb     _054ebf_jump
		ja     _054e1d_jump

	_054dff_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _054e0f_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%esi)

	_054e0f_jump:
		imul   0x000042(%esi),%dx
		sub    %dx,0x000040(%esi)
		jmp    _054ebf_jump

	_054e1d_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _054e2d_jump
		mov    $0x000001,%edi
		mov    %di,0x000042(%esi)

	_054e2d_jump:
		imul   0x000042(%esi),%dx
		add    %dx,0x000040(%esi)
		jmp    _054ebf_jump

	_054e3b_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _054e4b_jump
		mov    $0x000001,%edx
		mov    %dx,0x000042(%esi)

	_054e4b_jump:
		mov    0x000040(%esi),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %di,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000040(%esi)
		jmp    _054ebf_jump

	_054e75_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _054e85_jump
		mov    $0x000001,%ebx
		mov    %bx,0x000042(%esi)

	_054e85_jump:
		mov    0x000040(%esi),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %di,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000040(%esi)
		jmp    _054ebf_jump

	_054eaf_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _054ebf_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%esi)

	_054ebf_jump:
		mov    0x000004(%esp),%eax
		test   %ax,%ax
		jle    _054efd_jump
		mov    0x000042(%esi),%dx
		cmp    $0x000001,%dx
		jle    _054eee_jump
		sub    %edx,%eax
		mov    (%esp),%edi
		mov    %ax,0x000042(%esi)
		test   %di,%di
		je     _054f60_jump
		inc    %eax
		mov    %ax,0x000042(%esi)
		jmp    _054f60_jump

	_054eee_jump:
		movw   $0x000000,0x000042(%esi)
		movb   $0x000002,0x000076(%esi)
		jmp    _054f60_jump

	_054efd_jump:
		mov    0x000060(%esi),%dx
		cmp    $0x000008,%dx
		je     _054f22_jump
		cmp    $0x000086,%dx
		je     _054f22_jump
		cmp    $0x0000a7,%dx
		je     _054f22_jump
		cmp    $0x0000b1,%dx
		je     _054f22_jump
		cmp    $0x000006,%dx
		jne    _054f5a_jump

	_054f22_jump:
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _054f47_jump
		testb  $0x000002,_0ced81_data
		je     _054f3f_jump
		movw   $0x00fffc,0x000042(%esi)
		jmp    _054f4d_jump

	_054f3f_jump:
		movw   $0x00fffd,0x000042(%esi)
		jmp    _054f4d_jump

	_054f47_jump:
		movw   $0x00fffb,0x000042(%esi)

	_054f4d_jump:
		cmpw   $0x000006,0x000060(%esi)
		jne    _054f60_jump
		incw   0x000042(%esi)
		jmp    _054f60_jump

	_054f5a_jump:
		movw   $0x00fffd,0x000042(%esi)

	_054f60_jump:
		test   %cl,%cl
		je     _054f9a_jump

	_054f64_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		cmp    0x000062(%esi),%al
		jne    _054f91_jump
		decl   0x00002c(%esi)
		jmp    _054f64_jump

	_054f91_jump:
		mov    %esi,%eax
		call   _01e2ec_func
		jmp    _054fcc_jump

	_054f9a_jump:
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000001,_092224_data(%eax)
		je     _054fcc_jump
		mov    %esi,%eax
		call   _054838_func
		cmp    $0x000004,%ax
		jl     _054fcc_jump
		mov    0x000042(%esi),%dx
		cmp    $0x000002,%dx
		jg     _054fcc_jump
		test   %dx,%dx
		jne    _054fd3_jump
		movw   $0x000001,0x000042(%esi)
		jmp    _054fd3_jump

	_054fcc_jump:
		mov    %esi,%eax
		call   _0255d0_func

	_054fd3_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %edx,%eax
		movb   $0x000000,0x000071(%esi)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		shr    $0x000004,%al
		cmp    $0x00000b,%al
		je     _055002_jump
		cmp    $0x00000a,%al
		je     _055002_jump
		movb   $0x000000,0x000072(%esi)

	_055002_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05500c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		call   _01d374_func
		movw   $0x000000,0x000042(%ecx)
		movw   $0x000000,0x000040(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055030_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _0255d0_func
		mov    0x000076(%ecx),%dl
		cmp    0x000077(%ecx),%dl
		je     _05507b_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%bl
		testb  $0x000040,0x000007(%edx,%ebx,8)
		je     _055064_jump
		mov    $0x000002,%edx
		jmp    _055069_jump

	_055064_jump:
		mov    $0x00000b,%edx

	_055069_jump:
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %dl,%bl
		mov    $0x000001,%edx
		call   _01d374_func
		jmp    _055090_jump

	_05507b_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		orb    $0x000010,0x000081(%ecx)

	_055090_jump:
		mov    %ecx,%eax
		call   _01db14_func
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		test   $0x000008,%ah
		setne  %dl
		and    $0x0000ff,%edx
		add    $0x000002,%edx
		and    $0x0000ff,%edx
		mov    %ecx,%eax
		call   _05f030_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0550c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpw   $0x000000,0x000042(%eax)
		jle    _0550f4_jump
		call   _0255d0_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05f030_func
		cmpw   $0x0001f4,0x00004a(%ecx)
		jle    _0550f4_jump
		movw   $0x000000,0x00004a(%ecx)

	_0550f4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0550f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,_0cefcd_data
		je     _05511e_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _05511e_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _05484c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05511e_jump:
		cmpb   $0x000000,0x00006c(%ecx)
		je     _05513f_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _05f030_func
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _0255d0_func

	_05513f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055144_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006c(%eax)
		jne    _055167_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _05f030_func
		mov    %ecx,%eax
		call   _0255d0_func

	_055167_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05516c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %edx,%eax
		lea    -0x000002(%eax),%ebx
		lea    0x000002(%eax),%esi
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edi
		mov    0x000069(%ecx),%al
		mov    _0cdb96_data,%edx
		add    %edi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %eax,%edx
		sar    $0x000004,%ebx
		add    %edx,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0cdba0_data,%ebx
		sar    $0x000004,%esi
		mov    0x000002(%ebx,%eax,2),%al
		xor    %ah,%ah
		add    %esi,%edx
		mov    %ax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    0x000002(%ebx,%eax,2),%dl
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _0552ab_jump
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000002,_092224_data(%eax)
		jne    _0552ab_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _055207_jump
		testb  $0x000008,0x000081(%ecx)
		je     _055224_jump

	_055207_jump:
		movswl %dx,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _0552ab_jump
		testb  $0x000008,0x000081(%ecx)
		je     _0552ab_jump

	_055224_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _05525a_jump
		testb  $0x000008,0x000081(%ecx)
		je     _055247_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _05f030_func
		jmp    _0552ab_jump

	_055247_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _05f030_func
		jmp    _0552ab_jump

	_05525a_jump:
		mov    0x00003e(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%ebp
		mov    $0x000004,%edx
		add    %eax,%ebp
		mov    %ecx,%eax
		mov    %ebp,0x000028(%ecx)
		call   _05f030_func
		mov    0x000081(%ecx),%bl
		lea    0x000081(%ecx),%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		mov    %bh,(%eax)
		or     %dl,%cl
		mov    %cl,(%eax)

	_0552ab_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0552b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		call   _01d374_func
		testb  $0x000008,0x000081(%ecx)
		je     _0552e0_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		jmp    _0552e9_jump

	_0552e0_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_0552e9_jump:
		call   _05f030_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0552f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006e(%eax),%bl
		mov    0x00006f(%eax),%dl
		call   _01d374_func
		mov    %ecx,%eax
		call   _0255d0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_055314_switch:
		.long   _0559c8_case
		.long   _055a0e_case
		.long   _0555de_case
		.long   _0559c8_case
		.long   _0555de_case
		.long   _0555de_case
		.long   _0559bd_case




_055330_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		shr    $0x000004,%al
		cmp    $0x00000b,%al
		je     _05537f_jump
		cmp    $0x00000a,%al
		je     _05537f_jump
		mov    0x000071(%esi),%ah
		inc    %ah
		mov    %ah,0x000071(%esi)
		cmp    $0x000003,%ah
		jb     _05536e_jump
		movb   $0x000000,0x000071(%esi)

	_05536e_jump:
		mov    0x000072(%esi),%dh
		inc    %dh
		mov    %dh,0x000072(%esi)
		cmp    $0x000004,%dh
		jb     _05537f_jump
		movb   $0x000000,0x000072(%esi)

	_05537f_jump:
		mov    %esi,%eax
		call   _0543d0_func
		mov    0x000060(%esi),%dx
		mov    %eax,%edi
		cmp    $0x000003,%dx
		jne    _0553e4_jump
		cmpw   $0x000000,0x000042(%esi)
		jl     _0553ab_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _0553ab_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d364_func

	_0553ab_jump:
		cmpb   $0x000000,_0cefcd_data
		jne    _055458_jump
		cmpw   $0x000003,0x000042(%esi)
		jl     _055458_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _055458_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d364_func
		movw   $0x000000,0x000040(%esi)
		jmp    _055458_jump

	_0553e4_jump:
		cmp    $0x000028,%dx
		je     _0553f0_jump
		cmp    $0x00007a,%dx
		jne    _05543f_jump

	_0553f0_jump:
		mov    %esi,%eax
		call   _05516c_func
		mov    0x00006d(%esi),%bh
		cmp    $0x000002,%bh
		jne    _055458_jump
		mov    0x000042(%esi),%cx
		test   %cx,%cx
		jle    _05541b_jump
		cmp    0x00006c(%esi),%bh
		je     _055458_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d364_func
		jmp    _055458_jump

	_05541b_jump:
		jge    _055458_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _055458_jump
		movw   $0x000000,0x000042(%esi)
		jmp    _055458_jump

	_05543f_jump:
		cmp    $0x00005b,%dx
		jne    _055458_jump
		mov    0x000056(%esi),%dx
		dec    %dx
		mov    %dx,0x000056(%esi)
		jne    _055458_jump
		mov    %esi,%eax
		call   _071b98_func

	_055458_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000004,_092267_data(,%eax,4)
		je     _05550e_jump
		cmpw   $0x000000,0x000042(%esi)
		jge    _05550e_jump
		testb  $0x000020,0x000081(%esi)
		je     _0554b6_jump
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x000074(%esi),%al
		jmp    _0554ce_jump

	_0554b6_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		mov    0x00002c(%esi),%dx

	_0554ce_jump:
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		mov    0x000040(%esi),%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _05550e_jump
		movw   $0x000000,0x000042(%esi)

	_05550e_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000001,_092266_data(,%eax,4)
		je     _0555de_case
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000002,_092224_data(%eax)
		je     _0555de_case
		mov    0x000060(%esi),%ax
		cmp    $0x000064,%ax
		jb     _055765_jump
		jbe    _055a52_jump
		cmp    $0x0000ac,%ax
		jb     _055686_jump
		jbe    _055a5e_jump
		cmp    $0x0000cc,%ax
		jb     _05561d_jump
		cmp    $0x0000cd,%ax
		jbe    _0555de_case
		cmp    $0x0000d9,%ax
		jb     _0555b2_jump
		jbe    _055a52_jump
		cmp    $0x0000de,%ax
		jb     _0555a3_jump
		jbe    _0555de_case
		cmp    $0x0000e3,%ax
		jb     _0555d7_jump
		jbe    _0555de_case
		cmp    $0x0000ef,%ax
		je     _055c58_jump
		jmp    _0555d7_jump

	_0555a3_jump:
		cmp    $0x0000da,%ax
		je     _05593f_jump
		jmp    _0555d7_jump

	_0555b2_jump:
		cmp    $0x0000d4,%ax
		jb     _0555cd_jump
		jbe    _0555de_case
		cmp    $0x0000d5,%ax
		je     _0555de_case
		jmp    _0555d7_jump

	_0555cd_jump:
		cmp    $0x0000d3,%ax
		je     _055d58_jump

	_0555d7_jump:
		mov    %esi,%eax
		call   _0552f4_func

	_0555de_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000020,_092265_data(,%eax,4)
		je     _055dc5_jump
		cmpw   $0x000060,0x000042(%esi)
		jle    _0555ff_jump
		movw   $0x000060,0x000042(%esi)

	_0555ff_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff80,%eax
		jge    _055de3_jump
		movw   $0x00ff80,0x000042(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05561d_jump:
		cmp    $0x0000bb,%ax
		jb     _05565c_jump
		jbe    _055d40_jump
		cmp    $0x0000c3,%ax
		jb     _05564d_jump
		jbe    _055d64_jump
		cmp    $0x0000c6,%ax
		jb     _0555d7_jump
		jbe    _055d10_jump
		cmp    $0x0000c8,%ax
		je     _055d1c_jump
		jmp    _0555d7_jump

	_05564d_jump:
		cmp    $0x0000be,%ax
		je     _055d4c_jump
		jmp    _0555d7_jump

	_05565c_jump:
		cmp    $0x0000b4,%ax
		jb     _055677_jump
		jbe    _055d28_jump
		cmp    $0x0000b6,%ax
		je     _055cc9_jump
		jmp    _0555d7_jump

	_055677_jump:
		cmp    $0x0000b1,%ax
		je     _055bc1_jump
		jmp    _0555d7_jump

	_055686_jump:
		cmp    $0x000084,%ax
		jb     _0556f7_jump
		jbe    _0555de_case
		cmp    $0x000093,%ax
		jb     _0556d8_jump
		jbe    _0555de_case
		cmp    $0x000097,%ax
		jb     _0556c9_jump
		jbe    _0555de_case
		cmp    $0x0000a5,%ax
		jb     _0555d7_jump
		jbe    _055a9f_jump
		cmp    $0x0000a7,%ax
		je     _055bc1_jump
		jmp    _0555d7_jump

	_0556c9_jump:
		cmp    $0x000096,%ax
		je     _0555de_case
		jmp    _0555d7_jump

	_0556d8_jump:
		cmp    $0x000086,%ax
		jb     _055cb8_jump
		jbe    _055bc1_jump
		cmp    $0x00008b,%ax
		je     _0555de_case
		jmp    _0555d7_jump

	_0556f7_jump:
		cmp    $0x000070,%ax
		jb     _055737_jump
		jbe    _055a2b_jump
		cmp    $0x00007a,%ax
		jb     _055728_jump
		jbe    _055af9_jump
		cmp    $0x00007b,%ax
		jbe    _0559a3_jump
		cmp    $0x000082,%ax
		je     _055bc1_jump
		jmp    _0555d7_jump

	_055728_jump:
		cmp    $0x000077,%ax
		je     _055a83_jump
		jmp    _0555d7_jump

	_055737_jump:
		cmp    $0x000067,%ax
		jb     _055756_jump
		cmp    $0x000068,%ax
		jbe    _0555de_case
		cmp    $0x00006e,%ax
		je     _0555de_case
		jmp    _0555d7_jump

	_055756_jump:
		cmp    $0x000066,%ax
		je     _0555de_case
		jmp    _0555d7_jump

	_055765_jump:
		cmp    $0x000034,%ax
		jb     _055862_jump
		jbe    _055b89_jump
		cmp    $0x000048,%ax
		jb     _0557f8_jump
		jbe    _055c92_jump
		cmp    $0x00004e,%ax
		jb     _0557d9_jump
		jbe    _055b05_jump
		cmp    $0x00005a,%ax
		jb     _0557c0_jump
		cmp    $0x00005d,%ax
		jbe    _055cc9_jump
		cmp    $0x000061,%ax
		jb     _0555d7_jump
		jbe    _055cd5_jump
		cmp    $0x000062,%ax
		je     _0555de_case
		jmp    _0555d7_jump

	_0557c0_jump:
		cmp    $0x000057,%ax
		jb     _0555d7_jump
		cmp    $0x000058,%ax
		jbe    _0555de_case
		jmp    _0555d7_jump

	_0557d9_jump:
		cmp    $0x00004a,%ax
		jb     _0555de_case
		jbe    _055d34_jump
		cmp    $0x00004d,%ax
		je     _055c58_jump
		jmp    _0555d7_jump

	_0557f8_jump:
		cmp    $0x00003e,%ax
		jb     _055838_jump
		jbe    _055a46_jump
		cmp    $0x000044,%ax
		jb     _055829_jump
		jbe    _0555de_case
		cmp    $0x000045,%ax
		jbe    _055aab_jump
		cmp    $0x000046,%ax
		je     _055933_jump
		jmp    _0555d7_jump

	_055829_jump:
		cmp    $0x000041,%ax
		je     _055ced_jump
		jmp    _0555d7_jump

	_055838_jump:
		cmp    $0x00003a,%ax
		jb     _055853_jump
		jbe    _055c33_jump
		cmp    $0x00003c,%ax
		jb     _0555d7_jump
		jmp    _055ce1_jump

	_055853_jump:
		cmp    $0x000035,%ax
		je     _055b19_jump
		jmp    _0555d7_jump

	_055862_jump:
		cmp    $0x00001b,%ax
		jb     _0558d4_jump
		jbe    _0555de_case
		cmp    $0x000028,%ax
		jb     _0558aa_jump
		jbe    _055af9_jump
		cmp    $0x00002f,%ax
		jb     _05589b_jump
		jbe    _055aab_jump
		cmp    $0x000032,%ax
		jb     _0555d7_jump
		jbe    _0555de_case
		jmp    _055b51_jump

	_05589b_jump:
		cmp    $0x00002e,%ax
		je     _055cf9_jump
		jmp    _0555d7_jump

	_0558aa_jump:
		cmp    $0x000024,%ax
		jb     _0558c5_jump
		jbe    _055ace_jump
		cmp    $0x000026,%ax
		je     _055bc1_jump
		jmp    _0555d7_jump

	_0558c5_jump:
		cmp    $0x000020,%ax
		je     _0555de_case
		jmp    _0555d7_jump

	_0558d4_jump:
		cmp    $0x000008,%ax
		jb     _05590a_jump
		jbe    _055bc1_jump
		cmp    $0x00000d,%ax
		jb     _0558fb_jump
		jbe    _0555de_case
		cmp    $0x00000f,%ax
		je     _0555de_case
		jmp    _0555d7_jump

	_0558fb_jump:
		cmp    $0x000009,%ax
		je     _055a9f_jump
		jmp    _0555d7_jump

	_05590a_jump:
		cmp    $0x000003,%ax
		jb     _055925_jump
		jbe    _055c4c_jump
		cmp    $0x000006,%ax
		je     _055bc1_jump
		jmp    _0555d7_jump

	_055925_jump:
		test   %ax,%ax
		je     _055a9f_jump
		jmp    _0555d7_jump

	_055933_jump:
		mov    %esi,%eax
		call   _07a38c_func
		jmp    _0555de_case

	_05593f_jump:
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01db14_func
		mov    %esi,%eax
		mov    $0x000003,%edx
		call   _0255d0_func
		mov    %esi,%eax
		call   _05f030_func
		cmpb   $0x000002,_0cdc11_data
		je     _055995_jump
		mov    %esi,%eax
		call   _053b78_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		mov    $0x000001,%ah
		mov    $0xfffffff8,%ebx
		mov    %ah,_0cefd3_data
		call   _069f20_func
		mov    %bx,_0cdbe6_data

	_055995_jump:
		movw   $0x000001,_0ceda6_data
		jmp    _0555de_case

	_0559a3_jump:
		mov    0x000075(%esi),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _0555de_case
		and    $0x0000ff,%eax
		jmp    *%cs:_055314_switch(,%eax,4)

	_0559bd_case:
		mov    %esi,%eax
		movb   $0x000002,0x00007d(%esi)
		call   _01db14_func

	_0559c8_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _0559eb_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _0559f5_jump

	_0559eb_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_0559f5_jump:
		mov    %esi,%eax
		call   _05f030_func
		mov    %esi,%eax
		call   _0255d0_func
		movw   $0x000000,0x000042(%esi)
		jmp    _0555de_case

	_055a0e_case:
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		mov    %esi,%eax
		call   _0255d0_func
		movw   $0x000000,0x000042(%esi)
		jmp    _0555de_case

	_055a2b_jump:
		cmpw   $0x000000,0x000042(%esi)
		jle    _0555de_case
		mov    %esi,%eax
		call   _0255d0_func
		negw   0x000042(%esi)
		jmp    _0555de_case

	_055a46_jump:
		mov    %esi,%eax
		call   _05500c_func
		jmp    _0555de_case

	_055a52_jump:
		mov    %esi,%eax
		call   _0550c4_func
		jmp    _0555de_case

	_055a5e_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _0555de_case
		mov    $0x000001,%ebx
		mov    $0x000010,%edx
		mov    %esi,%eax
		call   _05f030_func
		movb   $0x000000,0x00007d(%esi)
		jmp    _0555de_case

	_055a83_jump:
		mov    0x000032(%esi),%edx
		mov    $0x0000bb,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		mov    %esi,%eax
		call   _077080_func
		jmp    _0555de_case

	_055a9f_jump:
		mov    %esi,%eax
		call   _055030_func
		jmp    _0555de_case

	_055aab_jump:
		cmpw   $0x000000,0x000042(%esi)
		je     _055ac2_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func

	_055ac2_jump:
		mov    %esi,%eax
		call   _0549ec_func
		jmp    _0555de_case

	_055ace_jump:
		cmpw   $0x000000,0x000042(%esi)
		je     _055ae5_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func

	_055ae5_jump:
		mov    $0x000001,%ebx
		movswl %di,%edx
		mov    %esi,%eax
		call   _054ad8_func
		jmp    _0555de_case

	_055af9_jump:
		mov    %esi,%eax
		call   _055144_func
		jmp    _0555de_case

	_055b05_jump:
		mov    $0x000001,%ebx
		movswl %di,%edx
		mov    %esi,%eax
		call   _054d00_func
		jmp    _0555de_case

	_055b19_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _0555de_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _06f3bc_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000006,0x000042(%esi)
		call   _054d00_func
		decw   0x000050(%esi)
		jmp    _0555de_case

	_055b51_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _0555de_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _06f3bc_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000007,0x000042(%esi)
		call   _054d00_func
		decw   0x000050(%esi)
		jmp    _0555de_case

	_055b89_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _0555de_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _06f3bc_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000006,0x000042(%esi)
		call   _054ad8_func
		decw   0x000050(%esi)
		jmp    _0555de_case

	_055bc1_jump:
		mov    0x000060(%esi),%dx
		cmp    $0x000082,%dx
		jb     _055be9_jump
		jbe    _055c15_jump
		cmp    $0x0000a7,%dx
		jb     _055be0_jump
		jbe    _055c01_jump
		cmp    $0x0000b1,%dx
		je     _055c0b_jump
		jmp    _055c22_jump

	_055be0_jump:
		cmp    $0x000086,%dx
		je     _055c01_jump
		jmp    _055c22_jump

	_055be9_jump:
		cmp    $0x000008,%dx
		jb     _055bf9_jump
		jbe    _055c01_jump
		cmp    $0x000026,%dx
		je     _055c15_jump
		jmp    _055c22_jump

	_055bf9_jump:
		cmp    $0x000006,%dx
		je     _055c0b_jump
		jmp    _055c22_jump

	_055c01_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		jmp    _055c1a_jump

	_055c0b_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00008c,%eax
		jmp    _055c1a_jump

	_055c15_jump:
		mov    0x000032(%esi),%edx
		xor    %eax,%eax

	_055c1a_jump:
		sar    $0x000010,%edx
		call   _06f3bc_func

	_055c22_jump:
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _054d00_func
		jmp    _0555de_case

	_055c33_jump:
		mov    $0x00000b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000042(%esi)
		jmp    _0555de_case

	_055c4c_jump:
		mov    %esi,%eax
		call   _0550f8_func
		jmp    _0555de_case

	_055c58_jump:
		cmpb   $0x000002,0x00006c(%esi)
		jne    _055c65_jump
		mov    $0x000007,%ebx
		jmp    _055c71_jump

	_055c65_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _055c7a_jump
		mov    $0x00000a,%ebx

	_055c71_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func

	_055c7a_jump:
		mov    %esi,%eax
		call   _0255d0_func
		movw   $0x000000,0x000042(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _0555de_case

	_055c92_jump:
		mov    %esi,%eax
		mov    $0x000005,%ebx
		call   _0255d0_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d374_func
		movw   $0x000000,0x000042(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _0555de_case

	_055cb8_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		jmp    _0555de_case

	_055cc9_jump:
		mov    %esi,%eax
		call   _071e34_func
		jmp    _0555de_case

	_055cd5_jump:
		mov    %esi,%eax
		call   _020314_func
		jmp    _0555de_case

	_055ce1_jump:
		mov    %esi,%eax
		call   _02ab2c_func
		jmp    _0555de_case

	_055ced_jump:
		mov    %esi,%eax
		call   _0552b8_func
		jmp    _0555de_case

	_055cf9_jump:
		cmpw   $0x00000a,0x000056(%esi)
		jge    _0555de_case
		mov    %esi,%eax
		call   _021198_func
		jmp    _0555de_case

	_055d10_jump:
		mov    %esi,%eax
		call   _022738_func
		jmp    _0555de_case

	_055d1c_jump:
		mov    %esi,%eax
		call   _022a3c_func
		jmp    _0555de_case

	_055d28_jump:
		mov    %esi,%eax
		call   _0733b0_func
		jmp    _0555de_case

	_055d34_jump:
		mov    %esi,%eax
		call   _072e44_func
		jmp    _0555de_case

	_055d40_jump:
		mov    %esi,%eax
		call   _063e6c_func
		jmp    _0555de_case

	_055d4c_jump:
		mov    %esi,%eax
		call   _063d5c_func
		jmp    _0555de_case

	_055d58_jump:
		mov    %esi,%eax
		call   _020264_func
		jmp    _0555de_case

	_055d64_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _0555de_case
		cmpw   $0x000000,0x000042(%esi)
		jle    _0555de_case
		mov    $0x00001d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000028(%esi),%ebx
		mov    _0cdbcc_data,%edx
		lea    0x000081(%esi),%eax
		cmp    %ebx,%edx
		setg   %dl
		and    $0x0000ff,%edx
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)
		jmp    _0555de_case

	_055dc5_jump:
		cmpw   $0x000006,0x000042(%esi)
		jle    _055dd2_jump
		movw   $0x000006,0x000042(%esi)

	_055dd2_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff8,%eax
		jge    _055de3_jump
		movw   $0x00fff8,0x000042(%esi)

	_055de3_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055dec_func:
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x00000a,0x000062(%eax)
		jne    _055e7f_jump
		cmpw   $0x000017,0x000060(%edx)
		jne    _055e0a_jump
		cmpb   $0x000006,_0cdc11_data
		je     _055e11_jump

	_055e0a_jump:
		mov    $0x000001,%eax
		jmp    _055e13_jump

	_055e11_jump:
		xor    %eax,%eax

	_055e13_jump:
		test   %eax,%eax
		je     _055e7f_jump
		mov    0x000060(%edx),%cx
		cmp    $0x000034,%cx
		jne    _055e2b_jump
		andb   $0x0000fb,0x000081(%edx)
		pop    %edx
		pop    %ecx
		ret    

	_055e2b_jump:
		xor    %eax,%eax
		mov    %cx,%ax
		testb  $0x000002,_092266_data(,%eax,4)
		je     _055e7f_jump
		testb  $0x000040,0x000081(%edx)
		jne    _055e58_jump
		mov    %edx,%eax
		call   _076a30_func
		movw   $0x000000,0x000042(%edx)
		mov    0x000042(%edx),%ax
		mov    %ax,0x000040(%edx)

	_055e58_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000002,_092267_data(,%eax,4)
		je     _055e7f_jump
		mov    _0cedf8_data,%eax
		sar    $0x000010,%eax
		movl   $0x000000,0x000024(%edx)
		add    $0x0001e4,%eax
		mov    %eax,0x00002c(%edx)

	_055e7f_jump:
		pop    %edx
		pop    %ecx
		ret    



_055e84_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpw   $0x000000,0x000040(%eax)
		jne    _055ea1_jump
		cmpw   $0x000000,0x000042(%eax)
		je     _056057_jump

	_055ea1_jump:
		xor    %ebx,%ebx
		mov    0x000060(%esi),%bx
		mov    0x000040(%esi),%dx
		mov    _092266_data(,%ebx,4),%cl
		mov    0x000042(%esi),%ax
		test   $0x000080,%cl
		je     _055ee6_jump
		cmpb   $0x000001,0x00007d(%esi)
		jne    _055ee6_jump
		cmpb   $0x000000,_0cef61_data
		jne    _055ee6_jump
		test   %dx,%dx
		jle    _055ed4_jump
		mov    %edx,%ebx
		dec    %ebx
		jmp    _055ed7_jump

	_055ed4_jump:
		mov    %edx,%ebx
		inc    %ebx

	_055ed7_jump:
		mov    %bx,0x000040(%esi)
		cmpw   $0x000000,0x000040(%esi)
		jne    _055ee6_jump
		movb   $0x000000,0x00007d(%esi)

	_055ee6_jump:
		cmpw   $0x00005e,0x000060(%esi)
		jne    _055f1b_jump
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax
		mov    _0cdcc4_data,%ecx
		mov    0x000028(%esi),%ebp
		add    %eax,%ecx
		mov    0x00003e(%esi),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		sar    $0x000004,%ebx
		add    %eax,%ebp
		mov    %ebx,0x00002c(%esi)
		mov    %ecx,_0cdcc4_data
		mov    %ebp,0x000028(%esi)
		jmp    _05601c_jump

	_055f1b_jump:
		xor    %ebx,%ebx
		mov    0x000060(%esi),%bx
		testb  $0x000020,_092265_data(,%ebx,4)
		je     _055f36_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		call   _053c60_func

	_055f36_jump:
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000010,_092265_data(,%eax,4)
		je     _055f59_jump
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		call   _053c60_func
		mov    %eax,%edi
		jmp    _055f5b_jump

	_055f59_jump:
		mov    %edx,%edi

	_055f5b_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000040,_092266_data(,%eax,4)
		je     _056002_jump
		mov    0x000028(%esi),%cx
		mov    0x00002c(%esi),%bx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%dl
		mov    0x000068(%esi),%al
		add    %ebx,%edx
		add    %ecx,%eax
		sub    $0x000008,%edx
		mov    %eax,%ecx
		movswl %dx,%ebx
		cwtl   
		sar    $0x000004,%ebx
		sar    $0x000004,%eax
		movswl %bx,%ebx
		cwtl   
		mov    %ebx,%edx
		add    %edi,%ecx
		call   _01e0e4_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		jne    _055fcb_jump
		movswl %cx,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e0e4_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		jne    _055ff6_jump

	_055fcb_jump:
		mov    _0cede6_data,%ebx
		sar    $0x000010,%ebx
		add    $0x000130,%ebx
		movswl %cx,%eax
		mov    %ebx,%ecx
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jl     _055ff0_jump
		cmp    %ecx,%eax
		jg     _055ff0_jump
		mov    $0x000001,%eax
		jmp    _055ff2_jump

	_055ff0_jump:
		xor    %eax,%eax

	_055ff2_jump:
		test   %eax,%eax
		jne    _056002_jump

	_055ff6_jump:
		mov    0x000040(%esi),%cx
		neg    %ecx
		neg    %edi
		mov    %cx,0x000040(%esi)

	_056002_jump:
		movswl %di,%eax
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		mov    -0x000002(%esp),%eax
		mov    0x00002c(%esi),%ebx
		sar    $0x000010,%eax
		mov    %edx,0x000028(%esi)
		add    %eax,%ebx
		mov    %ebx,0x00002c(%esi)

	_05601c_jump:
		lea    0x000082(%esi),%ebx
		test   %di,%di
		jne    _05602e_jump
		cmpw   $0x000000,(%esp)
		je     _056035_jump

	_05602e_jump:
		mov    $0x000001,%eax
		jmp    _056037_jump

	_056035_jump:
		xor    %eax,%eax

	_056037_jump:
		mov    (%ebx),%cl
		and    $0x0000fe,%cl
		and    $0x000001,%al
		mov    %cl,(%ebx)
		mov    %cl,%ch
		or     %al,%ch
		mov    %esi,%eax
		mov    %ch,(%ebx)
		call   _055dec_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056057_jump:
		mov    0x000082(%eax),%ah
		and    $0x0000fe,%ah
		mov    %ah,0x000082(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056070_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _01db50_func
		test   %ax,%ax
		je     _056098_jump
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		lea    0x000000(,%ebx,4),%eax
		add    %eax,%ebx
		shl    $0x000002,%ebx
		mov    %edx,%eax
		call   *_0932f0_data(%ebx)

	_056098_jump:
		pop    %edx
		pop    %ebx
		mov    %eax,%eax
		ret    



_0560a0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0e3de4_data,%ax
		testb  $0x000002,_092264_data(,%eax,4)
		je     _0560bd_jump
		mov    %edx,%eax
		call   _076b2c_func

	_0560bd_jump:
		xor    %eax,%eax
		mov    _0e3de4_data,%ax
		testb  $0x000020,_092264_data(,%eax,4)
		je     _0560d6_jump
		mov    %edx,%eax
		call   _02d9b8_func

	_0560d6_jump:
		xor    %eax,%eax
		mov    _0e3de4_data,%ax
		testb  $0x000001,_092266_data(,%eax,4)
		je     _0560ef_jump
		mov    %edx,%eax
		call   _01e2ec_func

	_0560ef_jump:
		xor    %eax,%eax
		mov    _0e3de4_data,%ax
		testb  $0x000080,_092265_data(,%eax,4)
		je     _05610a_jump
		mov    %edx,%eax
		call   _05efbc_func
		jmp    _05610e_jump

	_05610a_jump:
		movb   $0x00001e,0x000070(%edx)

	_05610e_jump:
		xor    %ebx,%ebx
		mov    _0e3de4_data,%bx
		lea    0x000000(,%ebx,4),%eax
		add    %eax,%ebx
		shl    $0x000002,%ebx
		mov    %edx,%eax
		call   *_0932e4_data(%ebx)
		cmpb   $0x000002,0x00006d(%edx)
		jne    _056138_jump
		mov    %edx,%eax
		call   _055330_func

	_056138_jump:
		testb  $0x000020,0x000081(%edx)
		je     _05614a_jump
		mov    %edx,%eax
		call   _02cf00_func
		jmp    _056150_jump

	_05614a_jump:
		movw   $0x002710,0x000054(%edx)

	_056150_jump:
		xor    %eax,%eax
		mov    _0e3de4_data,%ax
		testb  $0x000040,_092265_data(,%eax,4)
		je     _056169_jump
		mov    %edx,%eax
		call   _0612d0_func

	_056169_jump:
		xor    %eax,%eax
		mov    _0e3de4_data,%ax
		testb  $0x000020,_092264_data(,%eax,4)
		je     _056182_jump
		mov    %edx,%eax
		call   _056070_func

	_056182_jump:
		pop    %edx
		pop    %ebx
		ret    



_056188_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    $0xffffffff,%ebx
		xor    %edx,%edx
		mov    _0cee0e_data,%eax
		mov    %dx,_0ce57c_data
		sar    $0x000010,%eax
		mov    %bx,_0ce4b4_data
		mov    %eax,0x000004(%esp)
		mov    _0cedf8_data,%ebx
		mov    0x000004(%esp),%edx
		sar    $0x000010,%ebx
		add    $0x000528,%eax
		mov    %ebx,(%esp)
		sub    %edx,%eax
		mov    (%esp),%ecx
		sar    %eax
		add    $0x0004b0,%ebx
		mov    %eax,0x00000c(%esp)
		add    %edx,%eax
		sub    %ecx,%ebx
		sub    $0x0001f4,%eax
		sar    %ebx
		mov    %eax,0x000004(%esp)
		lea    -0x0001f4(%ecx,%ebx,1),%eax
		mov    %eax,(%esp)
		mov    _0cc308_data,%eax
		movswl (%eax),%ecx
		mov    %ecx,%eax
		xor    %edi,%edi
		shl    $0x000005,%eax
		mov    %ebx,0x000010(%esp)
		add    %ecx,%eax
		mov    _0cc300_data,%ecx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%ecx
		xor    %eax,%eax
		jmp    _05623b_jump

	_056217_jump:
		movl   $0x000000,0x00001c(%ecx)
		mov    _0cc308_data,%ecx
		movswl 0x000002(%ecx,%eax,1),%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0cc300_data,%esi
		add    $0x000002,%eax
		inc    %ebx
		add    %esi,%ecx

	_05623b_jump:
		mov    _0cc30a_data,%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%ebx
		jl     _056217_jump
		mov    $_0ce4b4_data,%esi
		mov    _0ce57a_data,%eax
		dec    %ebp
		sar    $0x000010,%eax
		mov    %ebp,0x000014(%esp)
		add    %eax,%eax
		lea    0x000000(%ebp,%ebp,1),%ecx
		add    %eax,%esi
		mov    _0cc308_data,%eax
		movswl (%ecx,%eax,1),%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc300_data,%ebx
		shl    $0x000002,%eax
		mov    %esi,0x000008(%esp)
		add    %eax,%ebx
		test   %ebp,%ebp
		jl     _05635b_jump

	_056289_jump:
		cmpl   $0x000000,0x00001c(%ebx)
		jne    _05632f_jump
		mov    0x000004(%esp),%edx
		mov    0x000028(%ebx),%eax
		sub    %edx,%eax
		mov    0x00000c(%esp),%ebp
		test   %eax,%eax
		jge    _0562a6_jump
		neg    %eax

	_0562a6_jump:
		cmp    %ebp,%eax
		jge    _0562ec_jump
		mov    (%esp),%edx
		mov    0x00002c(%ebx),%eax
		sub    %edx,%eax
		mov    0x000010(%esp),%ebp
		test   %eax,%eax
		jge    _0562bc_jump
		neg    %eax

	_0562bc_jump:
		cmp    %ebp,%eax
		jge    _0562ec_jump
		mov    _0cedfa_data,%dx
		mov    0x00002c(%ebx),%ax
		sub    %edx,%eax
		mov    _0cee10_data,%dx
		movswl %ax,%ebp
		mov    0x000028(%ebx),%ax
		sub    %edx,%eax
		add    $0x000008,%eax
		mov    %ebp,%edx
		cwtl   
		call   _054138_func
		jmp    _05632f_jump

	_0562ec_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000010,_092264_data(,%eax,4)
		je     _056328_jump
		mov    _0cedfa_data,%dx
		mov    0x00002c(%ebx),%ax
		sub    %edx,%eax
		mov    _0cee10_data,%dx
		movswl %ax,%ebp
		mov    0x000028(%ebx),%ax
		sub    %edx,%eax
		add    $0x000008,%eax
		mov    %ebp,%edx
		cwtl   
		call   _054138_func
		jmp    _05632f_jump

	_056328_jump:
		movl   $0x000000,0x000024(%ebx)

	_05632f_jump:
		mov    _0cc308_data,%eax
		movswl -0x000002(%ecx,%eax,1),%eax
		imul   $0x000084,%eax,%eax
		mov    0x000014(%esp),%edx
		mov    _0cc300_data,%ebx
		dec    %edx
		sub    $0x000002,%ecx
		mov    %edx,0x000014(%esp)
		add    %eax,%ebx
		test   %ecx,%ecx
		jge    _056289_jump

	_05635b_jump:
		mov    _0cc30a_data,%ebp
		sar    $0x000010,%ebp
		dec    %ebp
		mov    _0cc308_data,%eax
		lea    0x000000(,%ebp,2),%ecx
		movswl (%ecx,%eax,1),%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc300_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		test   %ebp,%ebp
		jl     _056418_jump
		mov    %ecx,%ebx

	_056391_jump:
		cmpl   $0x000000,0x000024(%eax)
		je     _0563d9_jump
		mov    _0cee10_data,%dx
		mov    0x000028(%eax),%cx
		sub    %edx,%ecx
		add    $0x000008,%ecx
		mov    %cx,0x000036(%eax)
		mov    _0cedfa_data,%dx
		mov    0x00002c(%eax),%cx
		sub    %edx,%ecx
		mov    %cx,0x000038(%eax)
		add    $0x000002,%esi
		mov    0x000034(%eax),%ax
		inc    %edi
		mov    %ax,-0x000002(%esi)
		cmp    $0x000064,%edi
		jle    _0563f4_jump
		mov    $_0c0d28_data,%eax
		call   _01f3a4_func
		jmp    _0563f4_jump

	_0563d9_jump:
		xor    %ecx,%ecx
		mov    0x000060(%eax),%cx
		testb  $0x000001,_092264_data(,%ecx,4)
		je     _0563f4_jump
		mov    0x000032(%eax),%eax
		sar    $0x000010,%eax
		call   _01f334_func

	_0563f4_jump:
		mov    _0cc308_data,%eax
		movswl -0x000002(%ebx,%eax,1),%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%ecx
		sub    $0x000002,%ebx
		dec    %ebp
		add    %ecx,%eax
		test   %ebx,%ebx
		jge    _056391_jump

	_056418_jump:
		mov    0x000008(%esp),%ebx
		movw   $0x00ffff,(%esi)
		sub    %ebx,%esi
		mov    _0ce57a_data,%eax
		mov    %esi,%ebx
		sar    $0x000010,%eax
		sar    %ebx
		add    %ebx,%eax
		mov    %ax,_0ce57c_data
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056444_func:
		push   %edx
		mov    _0ce4aa_data,%dx
		inc    %edx
		mov    %dx,_0ce4aa_data
		cmp    $0x000063,%dx
		jle    _056463_jump
		movw   $0x000063,_0ce4aa_data

	_056463_jump:
		mov    _0ce4b3_data,%ah
		cmp    $0x000004,%ah
		jne    _056476_jump
		mov    %ah,_0cdc1a_data
		pop    %edx
		ret    

	_056476_jump:
		movb   $0x000002,_0cdc1a_data
		pop    %edx
		ret    



_056480_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    _0ced80_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0564f1_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x00007f(%edx),%ah
		test   %ah,%ah
		jbe    _0564b4_jump
		mov    %ah,%bl
		movb   $0x000000,0x00006b(%edx)
		dec    %bl
		mov    %bl,0x00007f(%edx)

	_0564b4_jump:
		mov    %edx,%eax
		call   _0545ac_func
		mov    %edx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _0564f1_jump
		mov    $0xffffffff,%ebx
		mov    _0cedb4_data,%cx
		mov    %bx,_0ced82_data
		cmp    $0x000003,%cx
		je     _0564ea_jump
		cmp    $0x000004,%cx
		je     _0564ea_jump
		call   _056444_func

	_0564ea_jump:
		andb   $0x0000fb,0x000081(%edx)

	_0564f1_jump:
		mov    _0ced98_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _05654f_jump
		mov    %edx,%eax
		shl    $0x000005,%edx
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    0x00007f(%edx),%cl
		test   %cl,%cl
		jbe    _056523_jump
		mov    %cl,%ch
		movb   $0x000000,0x00006b(%edx)
		dec    %ch
		mov    %ch,0x00007f(%edx)

	_056523_jump:
		mov    %edx,%eax
		call   _0545ac_func
		mov    %edx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _05654f_jump
		mov    0x000081(%edx),%al
		mov    $0xffffffff,%edi
		and    $0x0000fb,%al
		mov    %di,_0ced9a_data
		mov    %al,0x000081(%edx)

	_05654f_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056554_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce4b2_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc300_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _0ce57c_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _0565c0_jump

	_056581_jump:
		mov    0x000060(%eax),%si
		cmp    $0x0000cc,%si
		je     _056598_jump
		cmp    $0x0000cd,%si
		je     _056598_jump
		call   _0545ac_func

	_056598_jump:
		inc    %edx
		movswl %dx,%eax
		mov    _0ce4b2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%ebx
		mov    _0ce57c_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _056581_jump

	_0565c0_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0565c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ced80_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0565e6_jump
		mov    _0ced98_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0565eb_jump

	_0565e6_jump:
		call   _056480_func

	_0565eb_jump:
		cmpb   $0x000000,_0cefba_data
		je     _05660b_jump
		mov    $0x000007,%edx
		mov    _0cdb14_data,%eax
		call   _028994_func
		xor    %dl,%dl
		mov    %dl,_0cefba_data

	_05660b_jump:
		mov    _0ce4b2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0ce57c_data,%cx
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%edx
		test   %cx,%cx
		jle    _056701_jump

	_056638_jump:
		mov    0x000060(%edx),%ax
		mov    %ax,_0e3de4_data
		xor    %eax,%eax
		mov    _0e3de4_data,%ax
		testb  $0x000008,_092267_data(,%eax,4)
		jne    _056680_jump
		cmp    $0x0000a1,%ax
		jne    _056660_jump
		cmpb   $0x000017,0x00006c(%edx)
		je     _056680_jump

	_056660_jump:
		cmpw   $0x000053,_0e3de4_data
		jne    _056670_jump
		cmpb   $0x000001,0x00006c(%edx)
		je     _056680_jump

	_056670_jump:
		cmpw   $0x000021,_0e3de4_data
		jne    _056687_jump
		cmpb   $0x000023,0x00006c(%edx)
		je     _056687_jump

	_056680_jump:
		mov    %edx,%eax
		call   _01e674_func

	_056687_jump:
		cmpw   $0x0000a1,_0e3de4_data
		je     _0566d5_jump
		cmpl   $0x000000,0x000024(%edx)
		je     _0566d5_jump
		mov    %edx,%eax
		call   _0560a0_func
		xor    %eax,%eax
		mov    _0e3de4_data,%ax
		testb  $0x000080,_092264_data(,%eax,4)
		jne    _0566d5_jump
		cmpb   $0x000000,0x000076(%edx)
		jne    _0566d5_jump
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    (%eax),%eax
		mov    0x00006c(%edx),%cl
		testb  $0x000008,0x000007(%eax,%ecx,8)
		je     _0566d5_jump
		incb   0x000076(%edx)

	_0566d5_jump:
		inc    %ebx
		movswl %bx,%eax
		mov    _0ce4b2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%edx
		mov    _0ce57c_data,%si
		add    %eax,%edx
		cmp    %si,%bx
		jl     _056638_jump

	_056701_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056708_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ce4b2_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0cc300_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    _0ce57c_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _056760_jump

	_056733_jump:
		inc    %edx
		call   _055e84_func
		movswl %dx,%eax
		mov    _0ce4b2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%ebx
		mov    _0ce57c_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _056733_jump

	_056760_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056764_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    _0ce4b2_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc300_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _0ce57c_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _0567c1_jump

	_056795_jump:
		inc    %edx
		call   _01db8c_func
		movswl %dx,%eax
		mov    _0ce4b2_data(,%eax,2),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0cc300_data,%eax
		mov    _0ce57c_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _056795_jump

	_0567c1_jump:
		mov    _0cdbec_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _056890_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmpl   $0x000000,0x000024(%esi)
		je     _056890_jump
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000074(%esi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0cdc0d_data,%dl
		sub    %edx,%eax
		mov    0x000060(%esi),%di
		mov    %eax,_0cdbd0_data
		cmp    $0x0000fe,%di
		jne    _056886_jump
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		xor    %ebx,%ebx
		mov    _0cdbcc_data,%ecx
		mov    _0cdc0c_data,%bl
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %ecx,%ebx
		add    %edx,%eax
		sub    %eax,%ebx
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _05686e_jump
		sar    %cl,%ax
		jmp    _056877_jump

	_05686e_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_056877_jump:
		mov    _0cdbd0_data,%esi
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0cdbd0_data

	_056886_jump:
		mov    $_0cdba4_data,%eax
		call   _01db8c_func

	_056890_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05689c_switch:
		.long   _056a58_case
		.long   _056b22_case
		.long   _0568f5_case
		.long   _0569a5_case




_0568ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cdc25_data,%dl
		xor    %ebx,%ebx
		test   $0x000008,%dl
		je     _0568ca_jump
		mov    _0cdbcc_data,%si
		add    $0x000046,%esi
		jmp    _0568d4_jump

	_0568ca_jump:
		mov    _0cdbcc_data,%si
		add    $0x00003a,%esi

	_0568d4_jump:
		mov    _0cdbd0_data,%di
		add    $0x000020,%edi
		cmp    $0x000003,%ax
		ja     _056be0_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_05689c_switch(,%eax,4)

	_0568f5_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x000003,%edx
		jge    _056be0_jump
		mov    _0cdb96_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cdba0_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092224_data(%edx)
		je     _05694c_jump
		mov    $0x000001,%ebx

	_05694c_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cdba0_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092224_data(%edx)
		je     _056974_jump
		mov    $0x000001,%ebx

	_056974_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _056be0_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0569a5_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x00000c,%edx
		jle    _056be0_jump
		add    $0x000040,%ecx
		mov    _0cdb96_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cdba0_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092224_data(%edx)
		je     _0569ff_jump
		mov    $0x000001,%ebx

	_0569ff_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cdba0_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092224_data(%edx)
		je     _056a27_jump
		mov    $0x000001,%ebx

	_056a27_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _056be0_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056a58_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000003,%edx
		jge    _056be0_jump
		movswl %di,%eax
		mov    _0cdb96_data,%edx
		add    %esi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		dec    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cdba0_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092224_data(%edx)
		je     _056ab3_jump
		mov    $0x000001,%ebx

	_056ab3_jump:
		mov    _0cdb96_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cdba0_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092224_data(%edx)
		je     _056ae5_jump
		mov    $0x000001,%ebx

	_056ae5_jump:
		mov    _0cdb96_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _056be0_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056b22_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x00000c,%edx
		jle    _056be0_jump
		movswl %di,%eax
		mov    _0cdb96_data,%edx
		add    %esi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		lea    0x000003(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0cdba0_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _056b7e_jump
		mov    $0x000001,%ebx

	_056b7e_jump:
		mov    _0cdb96_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ecx
		mov    _0cdba0_data,%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _056bb0_jump
		mov    $0x000001,%ebx

	_056bb0_jump:
		mov    _0cdb96_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _056be0_jump
		mov    $0x000001,%ebx

	_056be0_jump:
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056be8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpw   $0x000002,_0cedb4_data
		jne    _056c0e_jump
		mov    $0x000002,%eax
		call   _0568ac_func
		test   %ax,%ax
		je     _056c0e_jump
		xor    %ebx,%ebx
		mov    %bx,_0cdbe6_data

	_056c0e_jump:
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0cdbb0_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdc10_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _056c3c_jump
		testb  $0x000002,_0ced81_data
		je     _056c43_jump

	_056c3c_jump:
		mov    $0x000028,%eax
		jmp    _056c48_jump

	_056c43_jump:
		mov    $0x000019,%eax

	_056c48_jump:
		mov    _0cdbe4_data,%edx
		mov    _0cdbd0_data,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		mov    _0cedba_data,%edx
		mov    %ebx,_0cdbd0_data
		sar    $0x000010,%edx
		movswl %ax,%ebx
		lea    -0x000014(%edx),%eax
		mov    _0cdbd0_data,%ecx
		sub    %ebx,%eax
		cmp    %ecx,%eax
		jle    _056caf_jump
		mov    %eax,_0cdbd0_data
		mov    _0cdbec_data,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    %cx,_0cdbe6_data
		cmp    $0xffffffff,%eax
		je     _056caf_jump
		mov    _0cdbf8_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		cmp    $0xffffffff,%eax
		sete   %al
		and    $0x0000ff,%eax
		call   _02d60c_func

	_056caf_jump:
		mov    $_0cdba4_data,%eax
		xor    %esi,%esi
		call   _01db8c_func
		mov    %si,_0cee08_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056cc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpw   $0x000002,_0cedb4_data
		jne    _056cee_jump
		mov    $0x000003,%eax
		call   _0568ac_func
		test   %ax,%ax
		je     _056cee_jump
		xor    %ebx,%ebx
		mov    %bx,_0cdbe6_data

	_056cee_jump:
		mov    _0cdbe4_data,%eax
		mov    _0cdbd0_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    $_0cdba4_data,%eax
		mov    %edx,_0cdbd0_data
		call   _01db8c_func
		cmpb   $0x000002,_0cdc11_data
		jne    _056d6a_jump
		mov    _0cedc4_data,%eax
		mov    _0cedf8_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0cdbe4_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _056d61_jump
		cmpw   $0x000064,_0cdbdc_data
		jge    _056d50_jump
		xor    %edi,%edi
		mov    %di,_0cee08_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056d50_jump:
		mov    _0cdbe6_data,%ax
		mov    %ax,_0cee08_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056d61_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cee08_data

	_056d6a_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056d70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000003,_0cdc11_data
		jne    _056d8b_jump
		cmpb   $0x000017,_0cdc10_data
		je     _057212_jump

	_056d8b_jump:
		mov    _0cee28_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _056f9c_jump
		mov    _0cedc8_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _0cdc0d_data,%al
		sar    %edx
		sub    %eax,%edx
		mov    _0cdc11_data,%bl
		add    $0x000072,%edx
		cmp    $0x000002,%bl
		setne  %al
		and    $0x0000ff,%eax
		jne    _056de0_jump
		cmpb   $0x00000f,_0cdc10_data
		jne    _056f18_jump
		cmpb   $0x000000,_0cefc7_data
		je     _056f18_jump

	_056de0_jump:
		cmpw   $0x000000,_0ceda6_data
		jne    _056f18_jump
		cmpw   $0x0000ff,_0cee08_data
		jne    _056e07_jump
		cmpw   $0x000000,_0cedb2_data
		je     _056edc_jump

	_056e07_jump:
		mov    _0cdbdc_data,%ax
		sub    %edx,%eax
		mov    $0x000002,%cl
		mov    %eax,%edx
		test   %ax,%ax
		js     _056e1d_jump
		sar    %cl,%ax
		jmp    _056e26_jump

	_056e1d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_056e26_jump:
		mov    %ax,_0cee08_data
		mov    _0cdbe4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _056e3a_jump
		neg    %eax

	_056e3a_jump:
		mov    %eax,%ebx
		mov    _0cee06_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _056e4a_jump
		neg    %eax

	_056e4a_jump:
		cmp    %eax,%ebx
		jg     _056f9c_jump
		mov    _0cdbe4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _056e60_jump
		neg    %eax

	_056e60_jump:
		mov    %eax,%ebx
		mov    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _056e6d_jump
		mov    %ebx,%eax

	_056e6d_jump:
		mov    _0cee08_data,%bx
		test   %bx,%bx
		jle    _056e95_jump
		movswl %ax,%ebx
		mov    _0cee06_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _056e8a_jump
		mov    %ebx,%eax

	_056e8a_jump:
		mov    %ax,_0cee08_data
		jmp    _056f9c_jump

	_056e95_jump:
		jge    _056eb5_jump
		movswl %ax,%ebx
		mov    _0cee06_data,%eax
		neg    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _056eaa_jump
		mov    %ebx,%eax

	_056eaa_jump:
		mov    %ax,_0cee08_data
		jmp    _056f9c_jump

	_056eb5_jump:
		test   %dx,%dx
		jle    _056ec8_jump
		movw   $0x000001,_0cee08_data
		jmp    _056f9c_jump

	_056ec8_jump:
		jge    _056f9c_jump
		movw   $0x00ffff,_0cee08_data
		jmp    _056f9c_jump

	_056edc_jump:
		cmpb   $0x000001,_0cdc11_data
		je     _056f9c_jump
		mov    _0cdbda_data,%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		add    $0x000030,%eax
		cmp    %eax,%ebx
		jge    _056f0a_jump
		movw   $0x00fffc,_0cee08_data
		jmp    _056f9c_jump

	_056f0a_jump:
		xor    %edi,%edi
		mov    %di,_0cee08_data
		jmp    _056f9c_jump

	_056f18_jump:
		mov    _0cedfa_data,%ax
		cmp    _0cedc6_data,%ax
		je     _056f4b_jump
		mov    _0cdbda_data,%ebx
		mov    _0cdbe4_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _056f4b_jump
		cmpw   $0x000000,_0cdbe6_data
		jg     _056f7d_jump

	_056f4b_jump:
		mov    _0cedfa_data,%ax
		cmp    _0cedbc_data,%ax
		je     _056f9c_jump
		xor    %eax,%eax
		mov    _0cdc18_data,%al
		mov    _0cdbda_data,%edx
		neg    %eax
		sar    $0x000010,%edx
		sub    $0x000010,%eax
		cmp    %eax,%edx
		jg     _056f9c_jump
		cmpw   $0x000000,_0cdbe6_data
		jge    _056f9c_jump

	_056f7d_jump:
		mov    _0cdbe6_data,%dx
		cmp    $0x000010,%dx
		jg     _056f93_jump
		mov    %dx,_0cee08_data
		jmp    _056f9c_jump

	_056f93_jump:
		xor    %ebx,%ebx
		mov    %bx,_0cee08_data

	_056f9c_jump:
		mov    _0cee26_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0571a3_jump
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0cdc0c_data,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    %edx,%ebx
		mov    _0cedfc_data,%dx
		sub    $0x000030,%ebx
		add    $0x000030,%eax
		sub    %edx,%ebx
		mov    _0cee02_data,%dx
		mov    _0cedb2_data,%cx
		add    %eax,%edx
		test   %cx,%cx
		jg     _056ff1_jump
		mov    _0cdbe4_data,%si
		test   %si,%si
		jle    _057036_jump

	_056ff1_jump:
		mov    _0cdbda_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _057005_jump
		sar    %cl,%ax
		jmp    _05700e_jump

	_057005_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05700e_jump:
		mov    _092208_data,%cx
		cmp    %cx,%ax
		jge    _057028_jump
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,_092208_data
		jmp    _05710a_jump

	_057028_jump:
		jle    _05710a_jump
		mov    %ecx,%edi
		inc    %edi
		jmp    _057103_jump

	_057036_jump:
		test   %cx,%cx
		jl     _057040_jump
		test   %si,%si
		jge    _057082_jump

	_057040_jump:
		mov    _0cdbda_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _057054_jump
		sar    %cl,%ax
		jmp    _05705d_jump

	_057054_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05705d_jump:
		mov    _092208_data,%cx
		cmp    %cx,%ax
		jle    _057077_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_092208_data
		jmp    _05710a_jump

	_057077_jump:
		jge    _05710a_jump
		jmp    _057100_jump

	_057082_jump:
		mov    _0cdc25_data,%al
		test   $0x000008,%al
		je     _0570c6_jump
		mov    _0cdbda_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _05709f_jump
		sar    %cl,%ax
		jmp    _0570a8_jump

	_05709f_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0570a8_jump:
		mov    _092208_data,%cx
		cmp    %cx,%ax
		jge    _0570bf_jump
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,_092208_data
		jmp    _05710a_jump

	_0570bf_jump:
		jle    _05710a_jump
		mov    %ecx,%edi
		inc    %edi
		jmp    _057103_jump

	_0570c6_jump:
		test   $0x000008,%al
		jne    _05710a_jump
		mov    _0cdbda_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _0570de_jump
		sar    %cl,%ax
		jmp    _0570e7_jump

	_0570de_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0570e7_jump:
		mov    _092208_data,%cx
		cmp    %cx,%ax
		jle    _0570fe_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_092208_data
		jmp    _05710a_jump

	_0570fe_jump:
		jge    _05710a_jump

	_057100_jump:
		mov    %ecx,%edi
		dec    %edi

	_057103_jump:
		mov    %di,_092208_data

	_05710a_jump:
		cmpb   $0x000000,_0cefa8_data
		je     _057142_jump
		mov    _092206_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _057121_jump
		neg    %eax

	_057121_jump:
		cmp    $0x000004,%eax
		jle    _057142_jump
		cmpw   $0x000000,_092208_data
		jle    _057137_jump
		mov    $0x000004,%eax
		jmp    _05713c_jump

	_057137_jump:
		mov    $0xfffffffc,%eax

	_05713c_jump:
		mov    %ax,_092208_data

	_057142_jump:
		mov    $0x000002,%cl
		mov    _092208_data,%ax
		test   %ax,%ax
		js     _057154_jump
		sar    %cl,%ax
		jmp    _05715d_jump

	_057154_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05715d_jump:
		mov    _0cee06_data,%si
		add    %eax,%esi
		mov    _0cdbda_data,%di
		mov    %si,_0cee06_data
		cmp    %di,%dx
		jle    _057183_jump
		cmpw   $0x000000,_0cdbe4_data
		jl     _057196_jump

	_057183_jump:
		cmp    _0cdbda_data,%bx
		jge    _0571a3_jump
		cmpw   $0x000000,_0cdbe4_data
		jle    _0571a3_jump

	_057196_jump:
		mov    _0cdbe4_data,%ax
		add    %ax,_0cee06_data

	_0571a3_jump:
		mov    _0cee28_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _057212_jump
		mov    _0cdbec_data,%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		je     _057212_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000020,_092265_data(,%eax,4)
		je     _0571f3_jump
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		call   _053c60_func
		add    %ax,_0cee08_data
		jmp    _057207_jump

	_0571f3_jump:
		mov    _0cee08_data,%si
		mov    0x000042(%edx),%ax
		add    %eax,%esi
		mov    %si,_0cee08_data

	_057207_jump:
		mov    0x00004c(%edx),%ax
		add    %ax,_0cee08_data

	_057212_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057218_func:
		push   %ebx
		push   %edx
		push   %esi
		cmpw   $0x000002,_0cedb4_data
		jne    _057244_jump
		mov    $0x000001,%eax
		call   _0568ac_func
		test   %ax,%ax
		je     _057244_jump
		xor    %ebx,%ebx
		mov    %bx,_0cdbe4_data
		mov    %bx,_0cedb2_data

	_057244_jump:
		mov    _0cdbe2_data,%eax
		mov    _0cdbcc_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0cecb0_data,%ax
		cwtl   
		mov    %edx,_0cdbcc_data
		cmp    %edx,%eax
		jge    _05728c_jump
		mov    %eax,_0cdbcc_data
		xor    %esi,%esi
		mov    _0cdc11_data,%ah
		mov    %si,_0cdbe4_data
		mov    %si,_0cedb2_data
		cmp    $0x000002,%ah
		je     _05728c_jump
		mov    %si,_0cdbe6_data

	_05728c_jump:
		mov    $_0cdba4_data,%eax
		call   _01db8c_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_05729c_func:
		push   %ebx
		push   %edx
		push   %esi
		cmpw   $0x000002,_0cedb4_data
		jne    _0572c5_jump
		xor    %eax,%eax
		call   _0568ac_func
		test   %ax,%ax
		je     _0572c5_jump
		xor    %ebx,%ebx
		mov    %bx,_0cdbe4_data
		mov    %bx,_0cedb2_data

	_0572c5_jump:
		mov    _0cdbe2_data,%eax
		mov    _0cdbcc_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0cee26_data,%eax
		sar    $0x000010,%eax
		mov    %edx,_0cdbcc_data
		cmp    $0xffffffff,%eax
		jne    _057313_jump
		mov    _0cecae_data,%ax
		cwtl   
		cmp    %edx,%eax
		jle    _057313_jump
		mov    %eax,_0cdbcc_data
		xor    %esi,%esi
		mov    _0cdc11_data,%ah
		mov    %si,_0cedb2_data
		cmp    $0x000002,%ah
		je     _057313_jump
		mov    %si,_0cdbe6_data

	_057313_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_057318_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000002,_0ce4b3_data
		jne    _057338_jump
		mov    _0cdc1a_data,%al
		xor    %bh,%bh
		mov    %al,_0ce4af_data
		mov    %bh,_0ce4ae_data
		jmp    _05735f_jump

	_057338_jump:
		mov    _0cdc1a_data,%dl
		cmp    $0x000002,%dl
		ja     _05734d_jump
		xor    %bl,%bl
		mov    %dl,_0ce4af_data
		jmp    _057359_jump

	_05734d_jump:
		mov    $0x000002,%dh
		mov    %dl,%bl
		sub    %dh,%bl
		mov    %dh,_0ce4af_data

	_057359_jump:
		mov    %bl,_0ce4ae_data

	_05735f_jump:
		mov    _0ce4a8_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _05737d_jump
		xor    %cl,%cl
		mov    %cl,_0ce4ad_data
		mov    %cl,_0ce4ac_data
		jmp    _05739f_jump

	_05737d_jump:
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,_0ce4ad_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %al,_0ce4ac_data

	_05739f_jump:
		cmpb   $0x000063,_0ce4b0_data
		jbe    _0573af_jump
		mov    $0x000063,%eax
		jmp    _0573b6_jump

	_0573af_jump:
		xor    %eax,%eax
		mov    _0ce4b0_data,%al

	_0573b6_jump:
		xor    %ebx,%ebx
		mov    $0x00000a,%ecx
		mov    %al,%bl
		mov    %al,_0ce4b0_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %al,_0ce4b1_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,_0ce4b2_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0573e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce434_data,%esi
		mov    _0ced5e_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _05744e_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		cmpl   $0x000000,0x000020(%ecx)
		je     _05744e_jump
		mov    0x000032(%ecx),%eax
		mov    %esi,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%ecx),%ax
		je     _05744e_jump

	_05742a_jump:
		cwtl   
		imul   $0x000084,%eax,%ebx
		mov    _0cc300_data,%edx
		andb   $0x0000fb,0x000081(%edx,%ebx,1)
		mov    %esi,%edx
		mov    0x000034(%ecx),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _05742a_jump

	_05744e_jump:
		mov    %esi,_0ce434_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05745c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    _0ce434_data,%esi
		mov    %eax,%ecx
		xor    %ah,%ah
		mov    0x000032(%ecx),%edx
		mov    %ah,(%esp)
		sar    $0x000010,%edx
		mov    %esi,%eax
		mov    (%eax,%edx,2),%ax
		cmp    0x000034(%ecx),%ax
		je     _0574ad_jump

	_057482_jump:
		cwtl   
		imul   $0x000084,%eax,%edx
		mov    _0cc300_data,%ebx
		cmpw   $0x0000a4,0x000060(%edx,%ebx,1)
		jne    _05749e_jump
		movb   $0x000001,(%esp)
		jmp    _0574ad_jump

	_05749e_jump:
		mov    %esi,%edx
		mov    0x000034(%ecx),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _057482_jump

	_0574ad_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		mov    %esi,_0ce434_data
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0574c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    _0cc300_data,%ebx
		mov    _0cc304_data,%ax
		xor    %edi,%edi
		mov    %eax,(%esp)
		test   %ax,%ax
		jle    _0575f1_jump

	_0574e7_jump:
		cmpw   $0x0000a4,0x000060(%ebx)
		jne    _0575de_jump
		mov    _0ce434_data,%ecx
		movswl %di,%eax
		mov    (%ecx,%eax,2),%ax
		mov    %edi,%edx
		cmp    %di,%ax
		je     _057546_jump

	_057507_jump:
		cmp    %di,%ax
		je     _057546_jump
		testb  $0x000004,0x000081(%ebx)
		je     _057534_jump
		cmpw   $0x0000a4,0x000060(%ebx)
		jne    _057534_jump
		movswl %ax,%edx
		imul   $0x000084,%edx,%ecx
		mov    _0cc300_data,%edx
		andb   $0x0000fb,0x000081(%ecx,%edx,1)

	_057534_jump:
		mov    _0ce434_data,%ecx
		mov    %eax,%edx
		cwtl   
		mov    (%ecx,%eax,2),%ax
		cmp    %dx,%ax
		jne    _057507_jump

	_057546_jump:
		cmp    %di,%ax
		jne    _05759c_jump
		movswl %di,%ecx
		mov    _0ce434_data,%eax
		add    %ecx,%ecx
		lea    (%eax,%ecx,1),%esi
		movswl %dx,%ecx
		lea    (%ecx,%ecx,1),%ebp
		add    %ebp,%eax
		mov    (%esi),%si
		mov    %si,(%eax)
		cmp    %si,%dx
		jne    _05757e_jump
		imul   $0x000084,%ecx,%ecx
		mov    _0cc300_data,%eax
		movl   $0x000000,0x000020(%ecx,%eax,1)

	_05757e_jump:
		movswl %di,%eax
		mov    _0ce434_data,%edx
		add    %eax,%eax
		add    %edx,%eax
		mov    (%eax),%dx
		mov    %dx,0x000052(%ebx)
		mov    %di,(%eax)
		movl   $0x000000,0x000020(%ebx)

	_05759c_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _0575de_jump
		testb  $0x000004,0x000081(%ebx)
		jne    _0575de_jump
		mov    0x000052(%ebx),%si

	_0575b0_jump:
		movswl %si,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0ce434_data,%eax
		mov    (%edx,%eax,1),%dx
		movswl %dx,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%ecx
		add    %ecx,%eax
		call   _0575fc_func
		cmp    %si,%dx
		jne    _0575b0_jump

	_0575de_jump:
		mov    (%esp),%ecx
		inc    %edi
		add    $0x000084,%ebx
		cmp    %cx,%di
		jl     _0574e7_jump

	_0575f1_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0575fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0ce434_data,%esi
		mov    %eax,%ebx
		mov    0x000034(%eax),%cx
		mov    %esi,%edx
		movswl %cx,%eax
		mov    (%edx,%eax,2),%ax
		cmp    %cx,%ax
		je     _05762d_jump

	_05761c_jump:
		mov    %eax,%ecx
		movswl %ax,%edx
		mov    %esi,%eax
		mov    (%eax,%edx,2),%ax
		cmp    0x000034(%ebx),%ax
		jne    _05761c_jump

	_05762d_jump:
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		lea    (%esi,%eax,1),%ebp
		movswl %cx,%eax
		lea    (%eax,%eax,1),%edi
		lea    (%esi,%edi,1),%edx
		mov    0x000000(%ebp),%di
		mov    %di,(%edx)
		cmp    %di,%cx
		jne    _057662_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		movl   $0x000000,0x000020(%edx,%eax,4)

	_057662_jump:
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		lea    (%esi,%eax,1),%edx
		mov    0x000034(%ebx),%ax
		mov    %ax,(%edx)
		movl   $0x000000,0x000020(%ebx)
		mov    %esi,_0ce434_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057688_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cc300_data,%edx
		mov    _0cc304_data,%si
		xor    %ebx,%ebx
		test   %si,%si
		jle    _0576f9_jump

	_0576a0_jump:
		mov    _0ce434_data,%ecx
		movswl %bx,%eax
		cmp    (%ecx,%eax,2),%bx
		je     _0576e6_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		shl    $0x000002,%eax
		mov    _092267_data(%eax),%cl
		test   $0x000040,%cl
		jne    _0576d4_jump
		test   $0x000020,%cl
		je     _0576dd_jump
		mov    %edx,%eax
		call   _05745c_func
		test   %ax,%ax
		jne    _0576dd_jump

	_0576d4_jump:
		mov    %edx,%eax
		call   _0575fc_func
		jmp    _0576ed_jump

	_0576dd_jump:
		movl   $0x000001,0x000020(%edx)
		jmp    _0576ed_jump

	_0576e6_jump:
		movl   $0x000000,0x000020(%edx)

	_0576ed_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %si,%bx
		jl     _0576a0_jump

	_0576f9_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057700_func:
		push   %ebx
		push   %edx
		mov    $0x000002,%bl
		mov    _0ced80_data,%ah
		mov    _0ced81_data,%dl
		and    $0x000048,%ah
		and    $0x000002,%dl
		mov    %bl,_0ce4b3_data
		mov    %ah,_0ced80_data
		mov    %dl,_0ced81_data
		xor    %bh,%bh
		mov    _0cdc25_data,%dh
		mov    %bh,_0ce4b0_data
		and    $0x0000fe,%dh
		mov    %bh,_0cefaf_data
		mov    %dh,_0cdc25_data
		pop    %edx
		pop    %ebx
		ret    



_057748_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		xor    %ah,%ah
		mov    _0cdc11_data,%dl
		mov    %ah,_0cefb6_data
		cmp    $0x000006,%dl
		sete   %al
		xor    %ah,%ah
		xor    %edx,%edx
		inc    %eax
		mov    %dx,_0cecca_data
		mov    _0ced81_data,%dh
		mov    %ax,_0cedb4_data
		test   $0x000002,%dh
		je     _05779f_jump
		mov    $0x000021,%ecx
		mov    _0cdc1a_data,%al
		mov    $_0cdba4_data,%edi
		mov    $_0ce32c_data,%esi
		mov    %al,_0ce3a2_data
		rep movsl %ds:(%esi),%es:(%edi)

	_05779f_jump:
		mov    $0x000017,%esi
		mov    $0x000064,%edx
		mov    $0x000014,%cl
		xor    %al,%al
		xor    %ebx,%ebx
		mov    _0cdc25_data,%ah
		mov    %bx,_0cee10_data
		mov    %bx,_0cedfa_data
		mov    %si,_0cdc04_data
		mov    %bx,_0cdbda_data
		mov    %bx,_0cdbdc_data
		mov    %bx,_0cdbe4_data
		mov    %bx,_0cdbe6_data
		mov    %edx,_0cdbcc_data
		mov    %cl,_0cdc18_data
		mov    $0x00000a,%ebx
		mov    $0x000002,%dl
		or     $0x00000c,%ah
		xor    %ch,%ch
		mov    %ebx,_0cdbd0_data
		mov    %ch,_0cdc0e_data
		mov    %ch,_0cdc0f_data
		mov    %ah,_0cdc25_data
		mov    %dl,_0cdc11_data
		mov    %dl,_0cdc10_data
		mov    %al,_0cdc21_data
		mov    %al,_0cdc23_data
		mov    $0x000050,%bl
		mov    $0xffffffff,%ecx
		xor    %dl,%dl
		mov    %bl,_0cdc0c_data
		mov    %cx,_0cdbee_data
		mov    %ecx,%edi
		mov    %cx,_0cdbf6_data
		xor    %dh,%dh
		mov    $0x00004e,%bh
		mov    $0x000001,%ecx
		mov    %di,_0cdbfa_data
		mov    %dx,_0cedb2_data
		mov    _0cdbcc_data,%dx
		mov    %bh,_0cdc0d_data
		mov    %ecx,_0cdbc8_data
		mov    %ah,%cl
		xor    %bl,%bl
		mov    $0xffff8300,%eax
		and    $0x0000bf,%cl
		mov    %bl,_0cefe2_data
		mov    %bl,_0cefcb_data
		mov    %bl,_0cefde_data
		mov    %cl,_0cdc25_data
		mov    %ax,_0cedb6_data
		xor    %al,%al
		mov    $0x000001,%ch
		xor    %ah,%ah
		mov    %ch,_0cefce_data
		mov    %al,_0cefe8_data
		mov    %al,_0cefcc_data
		mov    %al,_0cefc9_data
		mov    %al,_0cef90_data

	_0578bf_jump:
		movswl %ax,%ebx
		inc    %eax
		mov    %dx,_0cdb1c_data(,%ebx,2)
		cmp    $0x00000a,%ax
		jl     _0578bf_jump
		xor    %ch,%ch
		mov    (%esp),%ah
		mov    %ch,_0cdcd2_data
		mov    %ch,_0cdcd4_data
		test   %ah,%ah
		je     _0578ed_jump
		andb   $0x0000f7,_0ced80_data

	_0578ed_jump:
		cmpw   $0x000009,_0cedd0_data
		jne    _057901_jump
		cmpw   $0x000001,_0cede4_data
		je     _05791a_jump

	_057901_jump:
		cmpb   $0x000000,_0cef89_data
		jne    _05791a_jump
		cmpb   $0x000000,_0ca424_data
		jne    _05791a_jump
		andb   $0x0000bf,_0ced80_data

	_05791a_jump:
		mov    _0ced81_data,%cl
		test   $0x000080,%cl
		je     _05794d_jump
		mov    %cl,%al
		mov    %cl,%ah
		shr    $0x000007,%ah
		and    $0x000001,%ah
		and    $0x0000fd,%al
		mov    %al,_0ced81_data
		mov    %ah,%al
		mov    _0ced81_data,%ch
		add    %ah,%al
		or     %al,%ch
		mov    %ch,_0ced81_data
		call   _0591d0_func

	_05794d_jump:
		andb   $0x0000e5,_0ced81_data
		cmpb   $0x000000,_0ce034_data
		je     _057992_jump
		mov    _0cde24_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _057992_jump
		mov    _0ced81_data,%bl
		and    $0x00009f,%bl
		mov    _0cede4_data,%si
		mov    %bl,_0ced81_data
		cmp    $0x000006,%si
		jne    _0579b1_jump
		cmpw   $0x000003,_0cedd0_data
		jne    _0579b1_jump
		jmp    _0579ac_jump

	_057992_jump:
		mov    _0ced81_data,%dl
		and    $0x00009f,%dl
		mov    %dl,_0ced81_data
		mov    %dl,%dh
		or     $0x000020,%dh
		mov    %dh,_0ced81_data

	_0579ac_jump:
		call   _058efc_func

	_0579b1_jump:
		mov    _0cc300_data,%edx
		mov    _0cc304_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _057ac4_jump

	_0579c9_jump:
		cmpw   $0x000063,0x000060(%edx)
		jne    _057ab4_jump
		cmpb   $0x000000,_0cefaf_data
		jne    _0579f4_jump
		mov    _0cdc25_data,%cl
		xor    %esi,%esi
		and    $0x0000fb,%cl
		mov    %esi,_0cdbc8_data
		mov    %cl,_0cdc25_data

	_0579f4_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%si
		mov    0x000068(%edx),%al
		add    %esi,%eax
		sub    $0x0000a0,%eax
		mov    %ax,_0cee10_data
		mov    0x00002c(%edx),%ax
		sub    $0x00000a,%eax
		mov    _095b15_data,%ch
		mov    %ax,_0cedfa_data
		test   %ch,%ch
		jne    _057a29_jump
		call   _05a930_func
		jmp    _057a80_jump

	_057a29_jump:
		mov    _0cee10_data,%ax
		mov    _0cede8_data,%di
		cmp    %di,%ax
		jl     _057a42_jump
		mov    %di,_0cee10_data

	_057a42_jump:
		mov    _0cedfa_data,%ax
		mov    _0cedda_data,%bx
		cmp    %bx,%ax
		jl     _057a5b_jump
		mov    %bx,_0cedfa_data

	_057a5b_jump:
		cmpw   $0x000000,_0cee10_data
		jge    _057a6e_jump
		xor    %esi,%esi
		mov    %si,_0cee10_data

	_057a6e_jump:
		cmpw   $0x000000,_0cedfa_data
		jge    _057a80_jump
		xor    %eax,%eax
		mov    %ax,_0cedfa_data

	_057a80_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%ebx
		mov    0x000068(%edx),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdc0c_data,%al
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%al
		mov    0x00002c(%edx),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0cdc0d_data,%al
		sub    %eax,%edx
		mov    %ebx,_0cdbcc_data
		mov    %edx,_0cdbd0_data
		jmp    _057ac4_jump

	_057ab4_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _0579c9_jump

	_057ac4_jump:
		cmpb   $0x000000,_0cefed_data
		je     _057ad9_jump
		mov    $_0cdba4_data,%eax
		call   _01e2ec_func
		jmp    _057ae9_jump

	_057ad9_jump:
		xor    %eax,%eax

	_057adb_jump:
		inc    %eax
		xor    %dl,%dl
		mov    %dl,_0cdc05_data(%eax)
		cmp    $0x000005,%eax
		jb     _057adb_jump

	_057ae9_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057af4_func:
		push   %edx
		and    $0x0000ff,%eax
		mov    _092224_data(%eax),%dl
		test   $0x000040,%dl
		je     _057b11_jump
		test   $0x000008,%dl
		je     _057b11_jump
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_057b11_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_057b18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		cmpb   $0x000007,_0cdc11_data
		je     _057c94_jump
		mov    _0cdbcc_data,%si
		xor    %eax,%eax
		mov    _0cdbd0_data,%dx
		mov    _0cdc0c_data,%al
		xor    %ebx,%ebx
		add    %eax,%esi
		xor    %eax,%eax
		mov    _0cdc0d_data,%bl
		mov    _0cdc06_data,%al
		add    %edx,%ebx
		testb  $0x000040,_092224_data(%eax)
		je     _057b60_jump
		sub    $0x000008,%ebx

	_057b60_jump:
		mov    _0cdbe4_data,%ax
		add    %eax,%eax
		movswl %bx,%ecx
		add    %eax,%esi
		lea    -0x000008(%ecx),%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		movswl %ax,%ebx
		mov    %ebx,%eax
		call   _01e0e4_func
		mov    %al,0x000008(%esp)
		lea    -0x000018(%ecx),%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _01e0e4_func
		mov    %al,(%esp)
		mov    %al,0x000004(%esp)
		lea    -0x000028(%ecx),%eax
		sar    $0x000004,%eax
		sub    $0x000038,%ecx
		movswl %ax,%edx
		mov    %ebx,%eax
		sar    $0x000004,%ecx
		call   _01e0e4_func
		mov    %al,0x00000c(%esp)
		movswl %cx,%edx
		mov    %ebx,%eax
		call   _01e0e4_func
		mov    %al,%cl
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    _092224_data(%eax),%dh
		xor    %ebx,%ebx
		test   $0x000010,%dh
		je     _057bee_jump
		xor    %eax,%eax
		mov    (%esp),%al
		call   _057af4_func
		test   %ax,%ax
		jne    _057bee_jump
		mov    $0x000001,%ebx

	_057bee_jump:
		test   %bx,%bx
		jne    _057c67_jump
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0cdbb0_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0cdc10_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		jne    _057c67_jump
		testb  $0x000002,_0ced81_data
		jne    _057c67_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		testb  $0x000010,_092224_data(%eax)
		je     _057c45_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		call   _057af4_func
		test   %ax,%ax
		je     _057c62_jump

	_057c45_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		testb  $0x000010,_092224_data(%eax)
		je     _057c67_jump
		xor    %eax,%eax
		mov    %cl,%al
		call   _057af4_func
		test   %ax,%ax
		jne    _057c67_jump

	_057c62_jump:
		mov    $0x000001,%ebx

	_057c67_jump:
		test   %bx,%bx
		je     _057c94_jump
		xor    %ebx,%ebx
		mov    $0x000001,%eax
		mov    %bx,_0cdbe4_data
		mov    %bx,_0cedb2_data
		mov    %bx,_0cdbec_data
		call   _069cd8_func
		xor    %eax,%eax
		call   _069cd8_func

	_057c94_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057c9c_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		mov    %dx,_0cee06_data
		mov    %dx,_0cee08_data
		mov    %dx,_0cdbe4_data
		mov    %dx,_0cdbe6_data
		call   _040824_func
		test   %ax,%ax
		je     _057ce1_jump
		xor    %eax,%eax
		mov    _0cdbe4_data,%dx
		mov    _0cefc6_data,%al
		add    %eax,%edx
		mov    %dx,_0cdbe4_data
		jmp    _057d02_jump

	_057ce1_jump:
		call   _0407b4_func
		test   %ax,%ax
		je     _057d02_jump
		xor    %eax,%eax
		mov    _0cdbe4_data,%di
		mov    _0cefc6_data,%al
		sub    %eax,%edi
		mov    %di,_0cdbe4_data

	_057d02_jump:
		call   _040894_func
		test   %ax,%ax
		je     _057d22_jump
		xor    %edx,%edx
		mov    _0cdbe4_data,%eax
		mov    _0cefc6_data,%dl
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		jmp    _057d40_jump

	_057d22_jump:
		call   _040904_func
		test   %ax,%ax
		je     _057d46_jump
		xor    %edx,%edx
		mov    _0cdbe4_data,%eax
		mov    _0cefc6_data,%dl
		sar    $0x000010,%eax
		sar    %edx
		sub    %edx,%eax

	_057d40_jump:
		mov    %ax,_0cdbe6_data

	_057d46_jump:
		mov    _0cdbe6_data,%bx
		test   %bx,%bx
		jle    _057d59_jump
		call   _056cc8_func
		jmp    _057d60_jump

	_057d59_jump:
		jge    _057d60_jump
		call   _056be8_func

	_057d60_jump:
		mov    _0cdbe4_data,%si
		test   %si,%si
		jge    _057d73_jump
		call   _05729c_func
		jmp    _057d7a_jump

	_057d73_jump:
		jle    _057d7a_jump
		call   _057218_func

	_057d7a_jump:
		mov    $_0cdba4_data,%eax
		call   _01db8c_func
		mov    _0cdbe4_data,%ax
		mov    %ax,_0cee06_data
		mov    _0cdbe6_data,%ax
		mov    %ax,_0cee08_data
		call   _02e45c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_057da8_switch:
		.long   _057e32_case
		.long   _057e67_case
		.long   _057e9c_case
		.long   _057eb7_case




_057db8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0cdbcc_data,%ax
		mov    _0cdbd0_data,%di
		mov    _0cedce_data,%cx
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ax,(%esp)
		mov    %dx,_0cee28_data
		mov    $0xffffffff,%edx
		test   %cx,%cx
		jle    _057f47_jump

	_057df2_jump:
		movswl %bx,%eax
		mov    _0cdb32_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%esi
		add    %esi,%eax
		cmpw   $0x000040,0x000060(%eax)
		jne    _057f47_jump
		mov    0x000076(%eax),%cl
		cmp    $0x000003,%cl
		ja     _057f36_jump
		and    $0x0000ff,%ecx
		jmp    *%cs:_057da8_switch(,%ecx,4)

	_057e32_case:
		mov    -0x000002(%esp),%ecx
		mov    0x000028(%eax),%ebp
		sar    $0x000010,%ecx
		cmp    %ebp,%ecx
		jl     _057f36_jump
		mov    0x00003a(%eax),%ecx
		mov    _0cee28_data,%si
		sar    $0x000010,%ecx
		inc    %esi
		sub    $0x0000c8,%ecx
		mov    %si,_0cee28_data
		mov    %ecx,0x000028(%eax)
		jmp    _057f36_jump

	_057e67_case:
		mov    -0x000002(%esp),%ecx
		mov    0x000028(%eax),%esi
		sar    $0x000010,%ecx
		cmp    %esi,%ecx
		jl     _057f36_jump
		mov    0x00003a(%eax),%ecx
		mov    _0cee28_data,%si
		sar    $0x000010,%ecx
		dec    %esi
		sub    $0x0000c8,%ecx
		mov    %si,_0cee28_data
		mov    %ecx,0x000028(%eax)
		jmp    _057f36_jump

	_057e9c_case:
		movswl %di,%ecx
		cmp    0x00002c(%eax),%ecx
		jl     _057eab_jump
		neg    %edx
		jmp    _057f36_jump

	_057eab_jump:
		movl   $0x002710,0x00002c(%eax)
		jmp    _057f36_jump

	_057eb7_case:
		mov    _0cedd4_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _057eda_jump
		imul   $0x000084,%ecx,%ecx
		add    %ecx,%esi
		cmpb   $0x000000,0x000076(%esi)
		jne    _057f36_jump
		cmpw   $0x000000,0x000050(%esi)
		jne    _057f36_jump

	_057eda_jump:
		movswl %di,%ecx
		cmp    0x00002c(%eax),%ecx
		jl     _057f09_jump
		movswl %dx,%eax
		mov    %dx,_0cee2a_data
		test   %eax,%eax
		jge    _057ef2_jump
		neg    %eax

	_057ef2_jump:
		mov    _0cee2a_data,%dx
		cmp    $0x000001,%eax
		jne    _057f05_jump
		mov    $0x000002,%edx
		jmp    _057f10_jump

	_057f05_jump:
		neg    %edx
		jmp    _057f10_jump

	_057f09_jump:
		movl   $0x002710,0x00002c(%eax)

	_057f10_jump:
		mov    _0cedd4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _057f36_jump
		cmp    $0x000002,%dx
		je     _057f36_jump
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%ecx
		movw   $0x000002,0x000056(%ecx,%eax,1)

	_057f36_jump:
		mov    _0cedce_data,%si
		inc    %ebx
		cmp    %si,%bx
		jl     _057df2_jump

	_057f47_jump:
		mov    _0cee28_data,%si
		mov    $0x000001,%al
		test   %si,%si
		jg     _057f5f_jump
		mov    %esi,%edi
		dec    %edi
		mov    %di,_0cee28_data

	_057f5f_jump:
		test   %al,%al
		je     _057fcd_jump
		mov    _0cee28_data,%ax
		test   %ax,%ax
		jg     _057f86_jump
		mov    _0cee26_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jge    _057f8c_jump
		mov    _0cee28_data,%ax
		inc    %eax

	_057f86_jump:
		mov    %ax,_0cee06_data

	_057f8c_jump:
		cmp    $0x000001,%dx
		jne    _057f9d_jump
		movw   $0x00ffff,_0cee08_data
		jmp    _057fcd_jump

	_057f9d_jump:
		cmp    $0x000002,%dx
		jne    _057fc0_jump
		cmpb   $0x000000,_0cef4f_data
		je     _057fb7_jump
		movw   $0x00ffff,_0cee08_data
		jmp    _057fc0_jump

	_057fb7_jump:
		xor    %ebx,%ebx
		mov    %bx,_0cee08_data

	_057fc0_jump:
		movswl %dx,%eax
		cmp    $0xfffffffe,%eax
		jne    _057fcd_jump
		mov    $0xffffffff,%edx

	_057fcd_jump:
		mov    %dx,_0cee2a_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057fe0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %al,%cl
		mov    _0cc300_data,%edx
		mov    _0cc304_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _05800e_jump

	_057ffb_jump:
		add    $0x000084,%edx
		inc    %eax
		movl   $0x000000,-0x000068(%edx)
		cmp    %bx,%ax
		jl     _057ffb_jump

	_05800e_jump:
		xor    %ebx,%ebx
		xor    %esi,%esi

	_058012_jump:
		movswl %bx,%edx
		imul   $0x000282,%edx,%edx
		mov    %esi,%eax
		mov    %si,_0c9200_data(%edx)
		add    $_0c8f80_data,%edx

	_05802a_jump:
		add    $0x000002,%edx
		inc    %eax
		mov    %si,-0x000002(%edx)
		cmp    $0x000140,%ax
		jl     _05802a_jump
		inc    %ebx
		cmp    $0x000008,%bx
		jl     _058012_jump
		cmpb   $0x000000,_0cefaf_data
		jne    _05804d_jump
		call   _059800_func

	_05804d_jump:
		cmpw   $0x000001,_0cede4_data
		jne    _05806b_jump
		cmpw   $0x000009,_0cedd0_data
		jne    _05806b_jump
		mov    $0x00000b,%eax
		call   _05a29c_jump

	_05806b_jump:
		mov    _0ced89_data,%al
		xor    %dl,%dl
		xor    %esi,%esi
		xor    %bl,%bl
		mov    %dl,_0cefbd_data
		mov    %si,_0ced68_data
		mov    %bl,_0cefa8_data
		mov    %si,_0cee46_data
		shl    $0x000005,%al
		mov    %si,_0cee4c_data
		shr    $0x000007,%al
		xor    %dh,%dh
		xor    %bh,%bh
		mov    %dl,_0cef95_data
		mov    %dx,_0cee34_data
		mov    %bh,_0cefe0_data
		mov    _0cede4_data,%bx
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ax,_0cecdc_data
		mov    %edx,_0ce44c_data
		cmp    $0x000005,%bx
		jne    _0580f8_jump
		cmpw   $0x00000a,_0cedd0_data
		jne    _0580f8_jump
		mov    $0x000020,%edi
		mov    $0x000138,%eax
		mov    %di,_0cdb9a_data
		mov    %ax,_0cedc6_data
		mov    %ax,_0cedda_data

	_0580f8_jump:
		mov    $0xfffffffe,%esi
		xor    %ch,%ch
		xor    %ebx,%ebx
		mov    %ch,_0cefa5_data
		mov    %ebx,_0cce24_data
		mov    %esi,_0cce28_data
		call   _053280_func
		mov    $0xffffffff,%ebx
		mov    _095b15_data,%al
		xor    %esi,%esi
		mov    %bx,_0cdbd8_data
		mov    %si,_0ce57c_data
		mov    %bx,_0ce4b4_data
		mov    %si,_0cee10_data
		mov    %si,_0cedfa_data
		test   %al,%al
		jne    _058152_jump
		call   _05a884_func
		jmp    _0581c2_jump

	_058152_jump:
		mov    _0cdb9a_data,%ax
		shl    $0x000004,%eax
		sub    $0x0000c8,%eax
		mov    %ax,_0cedda_data
		mov    _0cdb98_data,%ax
		shl    $0x000004,%eax
		sub    $0x000131,%eax
		mov    %ax,_0cede8_data
		test   %ax,%ax
		jge    _058188_jump
		mov    %si,_0cede8_data

	_058188_jump:
		cmpw   $0x000000,_0cedda_data
		jge    _05819a_jump
		xor    %eax,%eax
		mov    %ax,_0cedda_data

	_05819a_jump:
		xor    %edx,%edx
		mov    _0cede8_data,%ax
		mov    %dx,_0cedba_data
		mov    %ax,_0cedc8_data
		mov    _0cedda_data,%ax
		mov    %dx,_0cedbc_data
		mov    %ax,_0cedc6_data

	_0581c2_jump:
		mov    $0xffffffff,%ebx
		mov    _0cefd1_data,%ch
		xor    %esi,%esi
		xor    %ah,%ah
		mov    %si,_0cee08_data
		mov    %si,_0cee06_data
		mov    %si,_09220a_data
		mov    %si,_092208_data
		mov    %si,_0cedf8_data
		mov    %ah,_0cefcd_data
		mov    %si,_0cedb2_data
		mov    %si,_0cedd8_data
		mov    %si,_0ceda6_data
		xor    %al,%al
		mov    %bx,_0cee0c_data
		mov    %ax,_0cedde_data
		mov    %al,_0cefba_data
		mov    %al,_0cefc8_data
		mov    %al,_0cefca_data
		mov    %al,_0cefdc_data
		test   %ch,%ch
		jne    _05823d_jump
		movb   $0x000040,_0cefd4_data

	_05823d_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _057748_func
		cmpw   $0x000000,_0ced5e_data
		jne    _058279_jump
		cmpw   $0x000000,_0cedf4_data
		je     _058279_jump
		cmpb   $0x000000,_0ce039_data
		je     _058279_jump
		mov    $_0cdde0_data,%eax
		mov    _0ce4b0_data,%dl
		call   _070f04_func
		mov    %dl,_0ce4b0_data

	_058279_jump:
		cmpw   $0x000000,_0cedf4_data
		jne    _058302_jump
		mov    _0cefd8_data,%al
		mov    %al,_0ce039_data
		mov    _0cedfc_data,%eax
		mov    $0x000001,%edi
		sar    $0x000010,%eax
		mov    _0cdc25_data,%dh
		mov    %eax,_0cdbcc_data
		mov    _0cedf4_data,%eax
		mov    %edi,_0cdbc8_data
		sar    $0x000010,%eax
		and    $0x0000fb,%dh
		mov    %eax,_0cdbd0_data
		mov    _0cefda_data,%al
		mov    %dh,_0cdc25_data
		inc    %al
		mov    %dh,%bl
		mov    %al,_0cefd7_data
		xor    %eax,%eax
		or     $0x000004,%bl
		mov    _0cefda_data,%al
		mov    %bl,_0cdc25_data
		call   _03b58c_func
		mov    _0cee0a_data,%ax
		mov    %ax,_0cee10_data
		mov    _0cee0e_data,%ax
		mov    %ax,_0cedfa_data
		jmp    _05830a_jump

	_058302_jump:
		xor    %dl,%dl
		mov    %dl,_0cefaa_data

	_05830a_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _05d114_func
		call   _057688_func
		call   _0573e8_func
		call   _05e0d8_func
		cmpw   $0x000005,_0ced92_data
		jne    _058348_jump
		cmpw   $0x000004,_0ced84_data
		jne    _058348_jump
		testb  $0x000002,_0ced89_data
		je     _058348_jump
		orb    $0x000004,_0ced81_data
		jmp    _05834f_jump

	_058348_jump:
		andb   $0x0000fb,_0ced81_data

	_05834f_jump:
		testb  $0x000004,_0ced81_data
		je     _05835d_jump
		call   _046b9c_func

	_05835d_jump:
		call   _0565c8_func
		cmpw   $0x000014,_0cdb98_data
		jg     _058391_jump
		cmpw   $0x000000,_095b52_data
		je     _05837f_jump
		cmpb   $0x000001,_095b15_data
		jne    _058391_jump

	_05837f_jump:
		mov    _0cedc8_data,%ax
		mov    %ax,_0cedba_data
		mov    %ax,_0cee10_data

	_058391_jump:
		cmpb   $0x000000,_0cef71_data
		je     _0583ac_jump
		mov    _0cedba_data,%ax
		mov    %ax,_0cedc8_data
		mov    %ax,_0cee10_data

	_0583ac_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0583b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _0532ec_func
		call   _02362c_func
		call   _01f29c_func
		call   _02571c_func
		mov    $0x000001,%edx
		mov    $0x000003,%ecx
		mov    $0x000002,%ah
		mov    $0xffffffff,%edi
		xor    %bl,%bl
		mov    %dx,_0cedd4_data
		mov    %edx,%esi
		mov    %dx,_0cedea_data
		mov    %cx,_0ce4aa_data
		mov    %ah,_0cdc1a_data
		mov    %bl,_0cefb6_data
		mov    $0x000001,%dl
		mov    $0x0000a0,%eax
		mov    %si,_0cedf4_data
		xor    %bh,%bh
		mov    %dl,_0cdcd0_data
		mov    $0x000009,%dh
		xor    %cl,%cl
		mov    %dh,_0cef98_data
		mov    $0x0000aa,%edx
		mov    %bl,_0cef96_data
		call   _01d0bc_func
		call   _057700_func
		mov    $0x000005,%eax
		mov    %di,_0cee28_data
		mov    %di,_0cee2a_data
		mov    %bx,_0cee02_data
		xor    %edx,%edx
		mov    %cl,_0cefcf_data
		mov    %dx,_0cedfc_data
		call   _069140_func
		movswl %ax,%edx
		add    %edx,%edx
		mov    _095af8_data(%edx),%cx
		mov    %ax,_0cecbe_data
		cmp    $0x000005,%cx
		jne    _05849d_jump
		cmpw   $0x00000a,_095b04_data(%edx)
		jne    _05849d_jump
		inc    %eax
		mov    %ax,_0cecbe_data
		cmp    $0x000006,%ax
		jne    _05849d_jump
		xor    %eax,%eax
		mov    %ax,_0cecbe_data

	_05849d_jump:
		mov    $0x000001,%ch
		mov    $0xfffffffe,%edx
		xor    %ah,%ah
		mov    %ch,_0cef92_data
		mov    %ch,_0cef93_data
		mov    %edx,_0cce28_data
		xor    %dl,%dl
		mov    %ah,_0cefee_data
		xor    %dh,%dh
		mov    %ah,_0cef94_data
		mov    %dx,_0cecbc_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0584d8_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    %dx,_0cedea_data
		mov    %bx,_0cedd4_data
		pop    %edx
		pop    %ebx
		ret    



_0584f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    _0cc5ac_data,%eax
		mov    %eax,_0cc5a0_data
		mov    _0cc5a8_data,%eax
		mov    %eax,_0cc594_data
		mov    _0cc5b4_data,%eax
		mov    %eax,_0cc590_data
		mov    _0cc5b0_data,%eax
		mov    %eax,_0cc58c_data
		cmpb   $0x000000,_0cefd1_data
		jne    _0585d7_jump
		call   _0234a0_func
		cwtl   
		cmp    $0xfffffffe,%eax
		setne  %al
		xor    %ah,%ah
		mov    %ax,_0ced5e_data
		test   %ax,%ax
		jne    _05855e_jump
		cmpw   $0x000000,_0cedf4_data
		je     _05855e_jump
		cmpb   $0x000000,_0cefaf_data
		jne    _05855e_jump
		mov    $0x000001,%al
		jmp    _058560_jump

	_05855e_jump:
		xor    %al,%al

	_058560_jump:
		mov    %al,%bl
		test   %al,%al
		je     _058574_jump
		xor    %ecx,%ecx
		call   _070cc0_func
		mov    %cx,_0ced5a_data

	_058574_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _057fe0_func
		test   %bl,%bl
		je     _05858d_jump
		mov    $_0cdde0_data,%edx
		xor    %eax,%eax
		call   _070ccc_func

	_05858d_jump:
		cmpw   $0x000000,_0cedf4_data
		jne    _0585a7_jump
		movw   $0x000001,_0cedf4_data
		call   _01ccb8_func
		jmp    _0585af_jump

	_0585a7_jump:
		xor    %bh,%bh
		mov    %bh,_0cefaa_data

	_0585af_jump:
		mov    $0x000001,%edx
		xor    %eax,%eax
		mov    $0x000010,%cl
		call   _0574c0_func
		mov    %dx,_0cedb4_data
		xor    %eax,%eax
		mov    %cl,_0cefc6_data
		mov    %ax,_0cedd4_data
		call   _056188_func

	_0585d7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0585dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    _0cc300_data,%esi
		xor    %edx,%edx
		mov    _0cc304_data,%ax
		mov    %edx,(%esp)
		mov    %eax,0x000004(%esp)
		test   %ax,%ax
		jle    _0586da_jump

	_058602_jump:
		cmpw   $0x0000a4,0x000060(%esi)
		jne    _0586c0_jump
		testb  $0x000004,0x000081(%esi)
		je     _058663_jump
		mov    _0ce434_data,%ebx
		mov    0x000052(%esi),%ax

	_058621_jump:
		mov    %eax,%edx
		cwtl   
		mov    0x000052(%esi),%cx
		mov    (%ebx,%eax,2),%ax
		cmp    %cx,%ax
		jne    _058621_jump
		mov    0x000032(%esi),%ecx
		sar    $0x000010,%ecx
		mov    %ax,(%ebx,%ecx,2)
		movswl %dx,%eax
		mov    0x000034(%esi),%dx
		mov    %dx,(%ebx,%eax,2)
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%ebx
		movl   $0x000001,0x000020(%esi)
		movl   $0x000001,0x000020(%ebx,%eax,1)
		jmp    _0586c0_jump

	_058663_jump:
		mov    0x000034(%esi),%dx
		movswl %dx,%eax
		mov    _0cde28_data(,%eax,2),%ax
		cmp    %ax,%dx
		je     _0586c0_jump

	_058677_jump:
		movswl %dx,%ebx
		mov    _0ce434_data,%edi
		mov    _0cde28_data(,%ebx,2),%ax
		mov    %ax,(%edi,%ebx,2)
		imul   $0x000084,%ebx,%ebx
		cmp    %ax,%dx
		je     _0586a7_jump
		mov    _0cc300_data,%ecx
		movl   $0x000001,0x000020(%ecx,%ebx,1)
		jmp    _0586b5_jump

	_0586a7_jump:
		mov    _0cc300_data,%ecx
		movl   $0x000000,0x000020(%ecx,%ebx,1)

	_0586b5_jump:
		mov    0x000034(%esi),%bx
		mov    %eax,%edx
		cmp    %bx,%ax
		jne    _058677_jump

	_0586c0_jump:
		mov    (%esp),%ecx
		mov    0x000004(%esp),%edi
		inc    %ecx
		add    $0x000084,%esi
		mov    %ecx,(%esp)
		cmp    %di,%cx
		jl     _058602_jump

	_0586da_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0586e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _0585dc_func
		cmpw   $0x000000,_0ced5e_data
		jne    _058721_jump
		cmpw   $0x000000,_0cedf4_data
		je     _058721_jump
		xor    %eax,%eax
		mov    _0cedd0_data,%al
		call   _05f2c4_func
		test   %ax,%ax
		jne    _058721_jump
		cmpb   $0x000000,_0cefaf_data
		jne    _058721_jump
		call   _070cc0_func

	_058721_jump:
		mov    _0cedea_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0587a3_jump
		cmpw   $0x000000,_0cedd4_data
		jne    _058742_jump
		cmpw   $0x000000,_0cedea_data
		je     _0587a3_jump

	_058742_jump:
		mov    $0x000021,%ecx
		mov    $_0ce3b0_data,%edi
		mov    $_0cdba4_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0cdba4_data,%edi
		mov    $_0ce32c_data,%esi
		mov    $0x000001,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		call   _057748_func
		mov    _0ce426_data,%al
		mov    %al,_0cdc1a_data
		mov    _0ce427_data,%al
		xor    %ebx,%ebx
		mov    %al,_0cdc1b_data
		mov    _0ce429_data,%al
		xor    %edx,%edx
		mov    %al,_0cdc1d_data
		mov    $_0cdba4_data,%eax
		xor    %edi,%edi
		call   _01d374_func
		mov    %di,_0cedb4_data

	_0587a3_jump:
		cmpb   $0x000000,_0cefc5_data
		je     _0587b1_jump
		call   _01f2c0_func

	_0587b1_jump:
		mov    _0cedde_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0587c6_jump
		xor    %dh,%dh
		mov    %dh,_0ca425_data

	_0587c6_jump:
		mov    $_0ccda8_data,%eax
		call   _07b814_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0587d8_func:
		push   %edx
		cmpb   $0x000000,_0cefd4_data
		jne    _0587f5_jump
		call   _0585dc_func
		xor    %eax,%eax
		call   _057fe0_func
		xor    %eax,%eax
		call   _0574c0_func

	_0587f5_jump:
		cmpw   $0x000000,_0ced5e_data
		jne    _05881d_jump
		cmpw   $0x000000,_0cedf4_data
		je     _05881d_jump
		mov    $_0ce03c_data,%edx
		xor    %eax,%eax
		call   _070ccc_func
		xor    %dl,%dl
		mov    %dl,_0cefee_data

	_05881d_jump:
		pop    %edx
		ret    



_058820_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cefdd_data
		je     _0588e0_jump
		mov    _0cedea_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0588c5_jump
		mov    $0x000021,%ecx
		mov    $_0ce32c_data,%edi
		mov    $_0cdba4_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%esi
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %esi,%eax
		mov    _0cc300_data,%esi
		shl    $0x000002,%eax
		mov    $_0cdba4_data,%edi
		add    %eax,%esi
		mov    $0x000001,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		call   _057748_func
		mov    _0ce3a2_data,%al
		mov    %al,_0cdc1a_data
		mov    _0ce3a3_data,%al
		mov    $0x000006,%edx
		mov    %al,_0cdc1b_data
		mov    _0ce3a5_data,%al
		xor    %ebx,%ebx
		mov    %al,_0cdc1d_data
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		mov    $0x000002,%edx
		xor    %bl,%bl
		mov    %dx,_0cedb4_data
		mov    %bl,_0cefdd_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0588c5_jump:
		cmpb   $0x000000,_0cef9e_data
		je     _0588e0_jump
		mov    $0x000001,%eax
		xor    %dh,%dh
		call   _057748_func
		mov    %dh,_0cefdd_data

	_0588e0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0588e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cef89_data
		je     _058952_jump
		mov    $0x000201,%edx
		sub    %eax,%eax
		in     (%dx),%al
		test   $0x000010,%al
		je     _05891e_jump
		test   $0x000020,%al
		je     _05891e_jump
		test   $0x000040,%al
		je     _05891e_jump
		test   $0x000080,%al
		je     _05891e_jump
		mov    _0cef89_data,%dl
		cmp    $0x000003,%dl
		je     _05891e_jump
		cmp    $0x000004,%dl
		jne    _058952_jump

	_05891e_jump:
		movw   $0x000001,_0cedea_data
		call   _03b970_func
		cmpb   $0x000004,_0cef89_data
		jne    _058943_jump
		mov    $0x000001,%bh
		mov    %bh,_0cefcf_data
		mov    %bh,_0cefd1_data

	_058943_jump:
		mov    $0x000002,%ch
		mov    $0x000001,%al
		mov    %ch,_0cef89_data
		mov    %al,_0cef8a_data

	_058952_jump:
		mov    _0cef8a_data,%ah
		cmp    $0x000002,%ah
		jne    _05896d_jump
		movw   $0x000001,_0cedea_data
		call   _03b970_func
		jmp    _058991_jump

	_05896d_jump:
		cmp    $0x000003,%ah
		jne    _058991_jump
		mov    $0x000001,%ebx
		mov    $0x000001,%dh
		mov    %bx,_0cedea_data
		call   _03b970_func
		mov    %dh,_0cefcf_data
		mov    %dh,_0cefd1_data

	_058991_jump:
		mov    $0x000001,%eax
		call   _053298_func
		call   _0234c8_func
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    %ax,_0cee1a_data
		xor    %eax,%eax
		mov    _0cdc10_data,%al
		mov    %ax,_0cee2c_data
		mov    _0cee10_data,%ax
		mov    %ax,_0cee04_data
		mov    _0cedfa_data,%ax
		mov    _095b14_data,%bh
		mov    %ax,_0cee00_data
		cmp    $0x000001,%bh
		jne    _058a12_jump
		xor    %eax,%eax
		mov    _0cee10_data,%dx
		mov    _0cdc0c_data,%al
		add    $0x000140,%edx
		sub    %eax,%edx
		sub    $0x000024,%edx
		mov    %dx,_0cecb0_data
		mov    _0cee10_data,%dx
		add    $0x000014,%edx
		sub    %eax,%edx
		mov    %dx,_0cecae_data
		jmp    _058a50_jump

	_058a12_jump:
		mov    _0cee10_data,%ax
		xor    %edx,%edx
		mov    _0cc5a8_data,%si
		mov    _0cdc0c_data,%dl
		add    %esi,%eax
		sub    %edx,%eax
		sub    $0x000024,%eax
		mov    _0cc5ac_data,%di
		mov    %ax,_0cecb0_data
		mov    _0cee10_data,%ax
		add    %edi,%eax
		add    $0x000014,%eax
		sub    %edx,%eax
		mov    %ax,_0cecae_data

	_058a50_jump:
		mov    _0cdbec_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _058a78_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0e3de6_data,%al
		mov    %al,0x00007e(%edx)

	_058a78_jump:
		testb  $0x000004,_0ced81_data
		je     _058a86_jump
		call   _046c70_func

	_058a86_jump:
		cmpw   $0x000003,_0cede4_data
		je     _058a9e_jump
		mov    _0cedde_data,%ax
		mov    %ax,_0cedd8_data
		jmp    _058aa7_jump

	_058a9e_jump:
		xor    %edx,%edx
		mov    %dx,_0cedd8_data

	_058aa7_jump:
		call   _0565c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_058ab4_switch:
		.long   _058b15_case
		.long   _058b1c_case
		.long   _058b3d_case
		.long   _058b3d_case
		.long   _058b44_case




_058ac8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _0235c8_func
		call   _023890_func
		call   _056554_func
		testb  $0x000004,_0cdc25_data
		je     _058d9a_jump
		cmpb   $0x000040,_0cefd4_data
		je     _058afb_jump
		movw   $0x00ffff,_0cdbee_data

	_058afb_jump:
		mov    _0cedb4_data,%ax
		dec    %eax
		cmp    $0x000004,%ax
		ja     _058b4b_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_058ab4_switch(,%eax,4)

	_058b15_case:
		call   _06e51c_func
		jmp    _058b50_jump

	_058b1c_case:
		cmpb   $0x000006,_0cdc11_data
		je     _058b36_jump
		mov    $0x000006,%edx
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx
		call   _01d374_func

	_058b36_jump:
		call   _06e1d8_func
		jmp    _058b50_jump

	_058b3d_case:
		call   _06dcc8_func
		jmp    _058b50_jump

	_058b44_case:
		call   _02830c_func
		jmp    _058b50_jump

	_058b4b_jump:
		call   _057c9c_func

	_058b50_jump:
		cmpw   $0x000000,_0cedce_data
		jle    _058b6b_jump
		cmpw   $0x000000,_0cedb4_data
		jle    _058b6b_jump
		call   _057db8_func
		jmp    _058b7e_jump

	_058b6b_jump:
		mov    $0xffffffff,%edi
		mov    %di,_0cee28_data
		mov    %di,_0cee2a_data

	_058b7e_jump:
		call   _056708_func
		mov    $_0cdba4_data,%eax
		call   _01db8c_func
		mov    _0cee28_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _058bae_jump
		cmpw   $0x0000ff,_0cee08_data
		jne    _058bae_jump
		xor    %ebx,%ebx
		mov    %bx,_0cee08_data

	_058bae_jump:
		cmpw   $0x000000,_0cedb4_data
		jle    _058bbd_jump
		call   _056d70_func

	_058bbd_jump:
		cmpw   $0x000002,_0cedb4_data
		jne    _058d4d_jump
		mov    _0cee26_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _058c0f_jump
		mov    _0cdbe4_data,%ax
		mov    %ax,_0cee28_data
		mov    _0cee06_data,%ax
		mov    %ax,_0cdbe4_data
		test   %ax,%ax
		jle    _058bfc_jump
		call   _057218_func
		jmp    _058c03_jump

	_058bfc_jump:
		jge    _058c03_jump
		call   _05729c_func

	_058c03_jump:
		mov    _0cee28_data,%ax
		mov    %ax,_0cdbe4_data

	_058c0f_jump:
		mov    _0cdc10_data,%cl
		cmp    $0x00000e,%cl
		je     _058d26_jump
		mov    %cl,%al
		cmp    $0x000001,%cl
		jb     _058c35_jump
		jbe    _058c7b_jump
		cmp    $0x000005,%cl
		je     _058cf3_jump
		jmp    _058d1a_jump

	_058c35_jump:
		test   %cl,%cl
		jne    _058d1a_jump
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _058c4b_jump
		neg    %eax

	_058c4b_jump:
		cmp    $0x000001,%eax
		jg     _058c67_jump
		mov    _0cee04_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _058c5e_jump
		neg    %eax

	_058c5e_jump:
		cmp    $0x000001,%eax
		jle    _058d1a_jump

	_058c67_jump:
		mov    $0x000006,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		jmp    _058d1a_jump

	_058c7b_jump:
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _058c89_jump
		neg    %eax

	_058c89_jump:
		cmp    $0x000001,%eax
		jg     _058cb2_jump
		mov    _0cee04_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _058c9c_jump
		neg    %eax

	_058c9c_jump:
		cmp    $0x000001,%eax
		jg     _058cb2_jump
		mov    $0x000007,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		jmp    _058d1a_jump

	_058cb2_jump:
		mov    _0cee04_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _058cc0_jump
		neg    %eax

	_058cc0_jump:
		cmp    $0x000004,%eax
		jle    _058d1a_jump
		mov    _0cede6_data,%edx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    $0x000064,%edx
		cmp    %edx,%eax
		jge    _058d1a_jump
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		call   _01cb68_func
		jmp    _058d1a_jump

	_058cf3_jump:
		mov    _0cee04_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _058d01_jump
		neg    %eax

	_058d01_jump:
		cmp    $0x000004,%eax
		jg     _058d1a_jump
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		call   _01cb68_func

	_058d1a_jump:
		mov    _0cee10_data,%ax
		mov    %ax,_0cedba_data

	_058d26_jump:
		mov    _0cee04_data,%edx
		mov    _0cdc30_data,%eax
		sar    $0x000010,%edx
		mov    0x000028(%eax),%ebx
		add    %edx,%ebx
		mov    _0cee06_data,%edx
		mov    0x00002c(%eax),%ecx
		sar    $0x000010,%edx
		mov    %ebx,0x000028(%eax)
		add    %edx,%ecx
		mov    %ecx,0x00002c(%eax)

	_058d4d_jump:
		mov    $_0cee08_data,%edx
		mov    $_0cee06_data,%eax
		call   _053a08_func
		call   _056188_func
		call   _056764_func
		mov    _0cdbec_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _058dc4_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x00007e(%eax),%dl
		mov    %dl,_0e3de6_data
		cmp    $0x000003,%dl
		jbe    _058dc4_jump
		movb   $0x000003,0x00007e(%eax)
		jmp    _058dc4_jump

	_058d9a_jump:
		mov    $0xffffffff,%edx
		call   _056708_func
		mov    %dx,_0cee2a_data
		call   _056188_func
		mov    _0cefd4_data,%dl
		test   %dl,%dl
		je     _058dc4_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0cefd4_data

	_058dc4_jump:
		call   _057318_func
		cmpw   $0x000000,_0ced5a_data
		je     _058e00_jump
		mov    _0cedfe_data,%ecx
		mov    _0cee02_data,%ebx
		mov    _0cedf8_data,%edx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0599d8_func
		call   _05a0d8_func

	_058e00_jump:
		call   _077b34_func
		testb  $0x000002,_0ced81_data
		je     _058ef5_jump
		xor    %eax,%eax
		call   _01d1ac_func
		testb  $0x000080,_0ced81_data
		je     _058e42_jump
		mov    _0cdbf8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _058e58_jump
		mov    _0cdbfe_data,%bx
		cmp    $0x000100,%bx
		je     _058e42_jump
		test   %bx,%bx
		jne    _058e58_jump

	_058e42_jump:
		mov    $0x000100,%esi
		mov    $0x0000c8,%cl
		mov    %si,_0cdbfe_data
		mov    %cl,_0cefec_data
		jmp    _058ea2_jump

	_058e58_jump:
		testb  $0x000080,_0ced81_data
		je     _058ea2_jump
		cmpb   $0x000005,_0cdc11_data
		setne  %al
		and    $0x0000ff,%eax
		je     _058ea2_jump
		mov    _0cefec_data,%bl
		test   %bl,%bl
		jne    _058e98_jump
		mov    _0cdbfc_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		sub    $0x000005,%ebx
		cmp    %ebx,%eax
		jge    _058e90_jump
		mov    %ebx,%eax

	_058e90_jump:
		mov    %ax,_0cdbfe_data
		jmp    _058ea2_jump

	_058e98_jump:
		mov    %bl,%bh
		dec    %bh
		mov    %bh,_0cefec_data

	_058ea2_jump:
		testb  $0x000008,_0cdc25_data
		je     _058ecc_jump
		xor    %eax,%eax
		mov    _0cdbdc_data,%cx
		mov    _0cdc0d_data,%al
		add    %ecx,%eax
		mov    _0cdbda_data,%bx
		movswl %ax,%edx
		xor    %eax,%eax
		sub    $0x000008,%ebx
		jmp    _058ee8_jump

	_058ecc_jump:
		xor    %eax,%eax
		mov    _0cdbdc_data,%di
		mov    _0cdc0d_data,%al
		add    %edi,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0cdbda_data,%bx

	_058ee8_jump:
		mov    _0cdc0c_data,%al
		add    %ebx,%eax
		cwtl   
		call   _01d0bc_func

	_058ef5_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058efc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cdc28_data,%edx
		mov    _0cdc2c_data,%ebx
		mov    _0ced81_data,%al
		and    $0x00009f,%al
		testb  $0x000060,_0ced81_data
		jne    _058f5a_jump
		or     $0x000020,%al
		mov    %al,_0ced81_data
		test   %ebx,%ebx
		je     _058f40_jump
		movl   $0x000001,0x000024(%ebx)
		mov    0x000081(%ebx),%cl
		movb   $0x000003,0x00007e(%ebx)
		or     $0x000004,%cl
		mov    %cl,0x000081(%ebx)

	_058f40_jump:
		test   %edx,%edx
		je     _058f9b_jump
		movl   $0x000001,0x000024(%edx)
		mov    0x000081(%edx),%ch
		movb   $0x000001,0x00007e(%edx)
		or     $0x000004,%ch
		jmp    _058f95_jump

	_058f5a_jump:
		mov    %al,_0ced81_data
		test   %ebx,%ebx
		je     _058f7d_jump
		movl   $0x000000,0x000024(%ebx)
		mov    0x000081(%ebx),%cl
		movb   $0x000003,0x00007e(%ebx)
		and    $0x0000fb,%cl
		mov    %cl,0x000081(%ebx)

	_058f7d_jump:
		test   %edx,%edx
		je     _058f9b_jump
		movl   $0x000000,0x000024(%edx)
		mov    0x000081(%edx),%ch
		movb   $0x000003,0x00007e(%edx)
		and    $0x0000fb,%ch

	_058f95_jump:
		mov    %ch,0x000081(%edx)

	_058f9b_jump:
		mov    %ebx,_0cdc2c_data
		mov    %edx,_0cdc28_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058fac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ced81_data,%ah
		test   $0x000002,%ah
		sete   %al
		and    $0x000001,%al
		mov    %ah,%dl
		and    $0x0000fd,%dl
		add    %al,%al
		mov    %dl,_0ced81_data
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,_0ced81_data
		test   $0x000002,%dh
		je     _059029_jump
		mov    $0x000021,%ecx
		mov    $_0ce32c_data,%edi
		mov    $_0cdba4_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0cedda_data,%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %esi,%eax
		mov    _0cc300_data,%esi
		shl    $0x000002,%eax
		mov    $_0cdba4_data,%edi
		add    %eax,%esi
		mov    _0ce330_data,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0xffffffff,%edx
		mov    %eax,_0cdba8_data
		mov    $0x0000ce,%eax
		jmp    _059066_jump

	_059029_jump:
		mov    $0x000021,%ecx
		mov    $_0ce3b0_data,%edi
		mov    $_0ce32c_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0ce32c_data,%edi
		mov    $_0cdba4_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0cdba4_data,%edi
		mov    $_0ce3b0_data,%esi
		mov    $0xffffffff,%edx
		mov    $0x0000cf,%eax
		rep movsl %ds:(%esi),%es:(%edi)

	_059066_jump:
		call   _06f3bc_func
		mov    _0ce362_data,%ax
		mov    %ax,_0cdbda_data
		mov    _0ce364_data,%ax
		mov    %ax,_0cdbdc_data
		mov    _0ce36c_data,%ax
		mov    %ax,_0cdbe4_data
		mov    _0ce36e_data,%ax
		mov    %ax,_0cdbe6_data
		mov    _0ce354_data,%eax
		mov    %eax,_0cdbcc_data
		mov    _0ce358_data,%eax
		mov    %eax,_0cdbd0_data
		mov    _0ce394_data,%al
		mov    %al,_0cdc0c_data
		mov    _0ce395_data,%al
		mov    %al,_0cdc0d_data
		mov    _0ce3a0_data,%al
		mov    %al,_0cdc18_data
		mov    _0ce396_data,%al
		mov    _0cdc25_data,%bh
		mov    %al,_0cdc0e_data
		mov    _0ce397_data,%al
		and    $0x0000f7,%bh
		mov    %al,_0cdc0f_data
		mov    _0ce3ad_data,%al
		mov    %bh,%cl
		and    $0x000008,%al
		or     %al,%cl
		mov    _0ce37c_data,%ax
		mov    %ax,_0cdbf4_data
		mov    _0ce399_data,%al
		mov    %al,_0cdc11_data
		mov    _0ce398_data,%al
		mov    $0x000017,%edx
		mov    %al,_0cdc10_data
		mov    _0ce376_data,%ax
		mov    %dx,_0cdc04_data
		mov    %ax,_0cdbee_data
		mov    _0ce37e_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0cdbf6_data
		mov    _0ce382_data,%ax
		mov    %bh,_0cdc25_data
		mov    %ax,_0cdbfa_data
		mov    _0ce3a9_data,%al
		mov    %edx,_0cdbc8_data
		mov    %al,_0cdc21_data
		mov    _0ce3ab_data,%al
		mov    $0x000002,%edx
		mov    %al,_0cdc23_data
		mov    _0ce3a2_data,%al
		mov    %cl,_0cdc25_data
		mov    %al,_0cdc1a_data
		mov    _0ce3a3_data,%al
		mov    %cl,%ch
		mov    %al,_0cdc1b_data
		mov    _0ce3a5_data,%al
		or     $0x000004,%ch
		mov    %al,_0cdc1d_data
		mov    $_0cdba4_data,%eax
		mov    %ch,_0cdc25_data
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _0591c7_jump
		mov    $0x00000f,%ebx
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		call   _01d374_func

	_0591c7_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0591d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ced81_data,%dl
		mov    _0ced81_data,%al
		shl    $0x000006,%dl
		mov    %al,%ah
		shr    $0x000007,%dl
		shr    $0x000007,%ah
		cmp    %ah,%dl
		jne    _0594ba_jump
		test   $0x000080,%al
		sete   %al
		and    $0x000001,%al
		mov    _0ced81_data,%ah
		and    $0x00007f,%ah
		mov    %ah,_0ced81_data
		shl    $0x000007,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,%al
		mov    %dl,%ah
		shr    $0x000007,%ah
		and    $0x000001,%ah
		mov    %dl,_0ced81_data
		and    $0x0000fd,%al
		mov    %al,_0ced81_data
		mov    %ah,%al
		mov    _0ced81_data,%dh
		add    %ah,%al
		or     %al,%dh
		mov    %dh,_0ced81_data
		test   $0x000080,%dh
		je     _0592ed_jump
		mov    $0x000021,%ecx
		mov    _0cedda_data,%edx
		mov    $_0ce32c_data,%edi
		sar    $0x000010,%edx
		mov    $_0cdba4_data,%esi
		mov    %edx,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %edx,%eax
		mov    _0cc300_data,%esi
		shl    $0x000002,%eax
		mov    $_0cdba4_data,%edi
		add    %eax,%esi
		mov    _0ce330_data,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,_0cdba8_data
		mov    _0ce334_data,%eax
		mov    %eax,_0cdbac_data
		mov    _0ce32c_data,%eax
		mov    %eax,_0cdba4_data
		mov    _0ced80_data,%ax
		mov    %ax,_0ced7e_data
		mov    _0ced81_data,%al
		and    $0x000006,%al
		mov    %al,_0ced81_data
		mov    %al,%ah
		or     $0x000080,%ah
		mov    %ah,_0ced81_data
		mov    %ah,%al
		shr    $0x000007,%ah
		and    $0x000001,%ah
		and    $0x0000fd,%al
		mov    _0ced80_data,%ch
		mov    %al,_0ced81_data
		mov    %ah,%al
		mov    _0ced81_data,%dl
		add    %ah,%al
		and    $0x000041,%ch
		or     %al,%dl
		mov    %ch,_0ced80_data
		mov    %dl,_0ced81_data
		jmp    _05935e_jump

	_0592ed_jump:
		mov    $0x000021,%ecx
		mov    $_0ce3b0_data,%edi
		mov    $_0ce32c_data,%esi
		mov    _0ced7e_data,%ax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %ax,_0ced80_data
		mov    $0x000021,%ecx
		mov    $_0ce32c_data,%edi
		mov    _0ced81_data,%bh
		mov    $_0cdba4_data,%esi
		and    $0x00007f,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %bh,%al
		mov    $0x000021,%ecx
		mov    %bh,%ah
		mov    $_0cdba4_data,%edi
		shr    $0x000007,%ah
		mov    $_0ce3b0_data,%esi
		and    $0x000001,%ah
		mov    %bh,_0ced81_data
		and    $0x0000fd,%al
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %al,_0ced81_data
		mov    %ah,%al
		mov    _0ced81_data,%cl
		add    %ah,%al
		or     %al,%cl
		mov    %cl,_0ced81_data

	_05935e_jump:
		mov    _0ce362_data,%ax
		mov    %ax,_0cdbda_data
		mov    _0ce364_data,%ax
		mov    %ax,_0cdbdc_data
		mov    _0ce36c_data,%ax
		mov    %ax,_0cdbe4_data
		mov    _0ce36e_data,%ax
		mov    %ax,_0cdbe6_data
		mov    _0ce354_data,%eax
		mov    %eax,_0cdbcc_data
		mov    _0ce358_data,%eax
		mov    %eax,_0cdbd0_data
		mov    _0ce394_data,%al
		mov    %al,_0cdc0c_data
		mov    _0ce395_data,%al
		mov    $0x000017,%edx
		mov    %al,_0cdc0d_data
		mov    _0ce3a0_data,%al
		mov    %dx,_0cdc04_data
		mov    %al,_0cdc18_data
		mov    _0ce396_data,%al
		mov    _0cdc25_data,%dh
		mov    %al,_0cdc0e_data
		mov    _0ce397_data,%al
		and    $0x0000f7,%dh
		mov    %al,_0cdc0f_data
		mov    _0ce3ad_data,%al
		mov    %dh,%bl
		and    $0x000008,%al
		or     %al,%bl
		mov    _0ce37c_data,%ax
		mov    %ax,_0cdbf4_data
		mov    _0ce399_data,%al
		mov    %al,_0cdc11_data
		mov    _0ce398_data,%al
		mov    %al,_0cdc10_data
		mov    _0ce376_data,%ax
		mov    %ax,_0cdbee_data
		mov    _0ce37e_data,%ax
		mov    %dh,_0cdc25_data
		mov    %ax,_0cdbf6_data
		mov    _0ce382_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0cdbfa_data
		mov    _0ce3a9_data,%al
		mov    %edx,_0cdbc8_data
		mov    %al,_0cdc21_data
		mov    _0ce3ab_data,%al
		mov    $0x000002,%edx
		mov    %al,_0cdc23_data
		mov    _0ce3a2_data,%al
		mov    %bl,_0cdc25_data
		mov    %al,_0cdc1a_data
		mov    _0ce3a3_data,%al
		mov    %bl,%bh
		mov    %al,_0cdc1b_data
		mov    _0ce3a5_data,%al
		or     $0x000004,%bh
		mov    %al,_0cdc1d_data
		mov    $_0cdba4_data,%eax
		mov    %bh,_0cdc25_data
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _0594ba_jump
		mov    $0x00000f,%ebx
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		call   _01d374_func

	_0594ba_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0594c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cefb6_data,%ah
		cmp    $0x000003,%ah
		je     _0595ed_jump
		cmp    $0x000002,%ah
		jne    _059504_jump
		mov    $0x000001,%eax
		call   _053298_func
		call   _05fc34_func
		xor    %edx,%edx
		mov    $_0cdba4_data,%eax
		mov    %dx,_0cee06_data
		mov    %dx,_0cee08_data
		call   _0545ac_func
		jmp    _059509_jump

	_059504_jump:
		call   _028720_func

	_059509_jump:
		cmpw   $0x000000,_0ced5a_data
		je     _059555_jump
		mov    $0x000001,%esi
		mov    _0cedfe_data,%ecx
		mov    _0cee02_data,%ebx
		mov    _0cedf8_data,%edx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		xor    %edi,%edi
		call   _0599d8_func
		call   _05a0d8_func
		mov    %si,_0cec9a_data
		mov    %di,_0cec98_data

	_059555_jump:
		mov    _0ce4b2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0ce57c_data,%ax
		xor    %ebx,%ebx
		test   %ax,%ax
		jle    _0595ed_jump

	_059581_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000008,_092267_data(,%eax,4)
		jne    _0595b7_jump
		cmp    $0x0000a1,%ax
		jne    _05959d_jump
		cmpb   $0x000017,0x00006c(%edx)
		je     _0595b7_jump

	_05959d_jump:
		cmpw   $0x000053,0x000060(%edx)
		jne    _0595aa_jump
		cmpb   $0x000001,0x00006c(%edx)
		je     _0595b7_jump

	_0595aa_jump:
		cmpw   $0x000021,0x000060(%edx)
		jne    _0595c5_jump
		cmpb   $0x000023,0x00006c(%edx)
		je     _0595c5_jump

	_0595b7_jump:
		mov    %edx,%eax
		call   _0545ac_func
		mov    %edx,%eax
		call   _01e674_func

	_0595c5_jump:
		inc    %ebx
		movswl %bx,%eax
		mov    _0ce4b2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%edx
		mov    _0ce57c_data,%cx
		add    %eax,%edx
		cmp    %cx,%bx
		jl     _059581_jump

	_0595ed_jump:
		call   _056188_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059600_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpw   $0x000000,_0ced5a_data
		je     _0596a0_jump
		cmpb   $0x000000,_0ce039_data
		je     _0596a0_jump
		mov    _0cde24_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0596a0_jump
		cmpb   $0x000000,_0cefaf_data
		jne    _0596a0_jump
		xor    %esi,%esi

	_059638_jump:
		movswl %si,%edx
		mov    _0cedfe_data,%ecx
		mov    %edx,%eax
		mov    _0cee02_data,%ebx
		call   _069140_func
		add    _0cedfa_data,%ax
		movswl %ax,%edi
		mov    %edx,%eax
		call   _069140_func
		mov    _0cee10_data,%dx
		sar    $0x000010,%ecx
		add    %edx,%eax
		sar    $0x000010,%ebx
		cwtl   
		mov    %edi,%edx
		call   _0599d8_func
		call   _05a0d8_func
		xor    %eax,%eax
		call   _053298_func
		mov    _0cee10_data,%ax
		mov    %ax,_0cee04_data
		mov    _0cedfa_data,%ax
		inc    %esi
		mov    %ax,_0cee00_data
		cmp    $0x000064,%esi
		jl     _059638_jump

	_0596a0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0596a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x0001ff,%eax
		mov    $0x000007,%edx
		call   _069140_func
		xor    %ebx,%ebx
		mov    %eax,%ecx

	_0596be_jump:
		movswl %dx,%eax
		add    %eax,%eax
		cmp    _0ca428_data(%eax),%cx
		jle    _0596d8_jump
		mov    $0x000001,%ebx
		add    %bx,_0ca468_data(%eax)

	_0596d8_jump:
		dec    %edx
		test   %bx,%bx
		je     _0596be_jump
		movswl %dx,%eax
		add    %eax,%eax
		mov    _0ca46a_data(%eax),%dx
		cmp    _0ca48a_data(%eax),%dx
		jle    _0596fd_jump
		mov    %edx,%ecx
		dec    %ecx
		mov    %cx,_0ca46a_data(%eax)

	_0596fd_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059704_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x00000a,%edx
		mov    $0x00000f,%ebx
		mov    $0x000019,%ecx
		mov    $0x00001e,%esi
		mov    $0x000023,%edi
		mov    $0x000028,%eax
		mov    %dx,_0ca468_data
		mov    %bx,_0ca46a_data
		mov    %cx,_0ca46c_data
		mov    %si,_0ca46e_data
		mov    %di,_0ca470_data
		mov    %ax,_0ca472_data
		mov    $0x00002b,%edx
		mov    $0x000035,%ebx
		mov    %dx,_0ca474_data
		mov    %bx,_0ca476_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059770_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0001ff,%eax
		mov    $0x000007,%edx
		call   _069140_func
		xor    %ebx,%ebx
		mov    %eax,%ecx

	_059788_jump:
		movswl %dx,%eax
		add    %eax,%eax
		cmp    _0ca428_data(%eax),%cx
		jl     _0597b2_jump
		mov    _0ca468_data(%eax),%di
		test   %di,%di
		jle    _0597b2_jump
		mov    $0x000001,%ebx
		mov    %edi,%esi
		sub    %ebx,%esi
		mov    %si,_0ca468_data(%eax)

	_0597b2_jump:
		dec    %edx
		test   %bx,%bx
		jne    _0597bd_jump
		test   %dx,%dx
		jge    _059788_jump

	_0597bd_jump:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		jne    _0597fa_jump
		mov    $0x000007,%eax
		xor    %ebx,%ebx
		xor    %ecx,%ecx

	_0597ce_jump:
		movswl %ax,%edx
		add    %edx,%edx
		mov    _0ca468_data(%edx),%di
		cmp    %di,%cx
		jge    _0597ef_jump
		mov    $0x000001,%ebx
		mov    %edi,%esi
		sub    %ebx,%esi
		mov    %si,_0ca468_data(%edx)

	_0597ef_jump:
		dec    %eax
		test   %bx,%bx
		jne    _0597fa_jump
		test   %ax,%ax
		jge    _0597ce_jump

	_0597fa_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059800_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    $0x000014,%edx
		mov    $0x00001e,%ebx
		mov    $0x000032,%ecx
		mov    $0x00003c,%esi
		mov    $0x000046,%edi
		mov    $0x000050,%eax
		mov    %dx,_0ca488_data
		mov    %bx,_0ca48a_data
		mov    %cx,_0ca48c_data
		mov    %si,_0ca48e_data
		mov    %di,_0ca490_data
		mov    %ax,_0ca492_data
		mov    $0x000060,%edx
		mov    $0x00006a,%ebx
		mov    $0xffffffc0,%edi
		xor    %ecx,%ecx
		mov    %dx,_0ca494_data
		mov    %bx,_0ca496_data
		mov    %cx,0x00000c(%esp)
		mov    %cx,0x000004(%esp)
		mov    %di,(%esp)
		mov    $0x000190,%ebp

	_059882_jump:
		mov    0x000002(%esp),%ecx
		mov    0x00000c(%esp),%eax
		mov    -0x000002(%esp),%ebx
		xor    %esi,%esi
		sar    $0x000010,%ecx
		xor    %edx,%edx
		mov    %ax,_0ca428_data(,%ecx,2)
		mov    (%esp),%eax
		sar    $0x000010,%ebx
		mov    %ax,0x000010(%esp)
		mov    %ebx,%eax
		mov    %si,_0ca468_data(,%ecx,2)
		call   _01d1ec_func
		mov    $0x0000c8,%edx
		mov    %ax,_0ca438_data(,%ecx,2)
		mov    %ebx,%eax
		call   _01d1ec_func
		xor    %edx,%edx
		mov    %ax,_0ca458_data(,%ecx,2)
		mov    %ebx,%eax
		call   _01d1b4_func
		mov    $0x000140,%edx
		mov    %ax,_0ca448_data(,%ecx,2)
		mov    %ebx,%eax
		mov    %esi,0x000008(%esp)
		call   _01d1b4_func
		mov    %ax,_0ca478_data(,%ecx,2)
		jmp    _059982_jump

	_059901_jump:
		mov    $0x0002bc,%eax
		mov    0x00000e(%esp),%ebx
		call   _069140_func
		mov    %eax,%esi
		mov    %ebp,%eax
		sar    $0x000010,%ebx
		call   _069140_func
		movswl %si,%edx
		mov    %eax,%edi
		mov    %ebx,%eax
		sub    $0x000096,%edi
		call   _01d134_func
		mov    %eax,%ecx
		movswl %di,%edx
		mov    %ebx,%eax
		call   _01d170_func
		cmp    $0x000140,%cx
		jge    _059901_jump
		test   %cx,%cx
		jle    _059901_jump
		cmp    $0x0000c8,%ax
		jge    _059901_jump
		test   %ax,%ax
		jle    _059901_jump
		mov    0x00000a(%esp),%edx
		mov    0x000010(%esp),%eax
		mov    0x00000c(%esp),%ecx
		mov    _0cce14_data,%ebx
		inc    %ecx
		sar    $0x000010,%edx
		mov    %cx,0x00000c(%esp)
		mov    %si,(%ebx,%edx,8)
		mov    0x000008(%esp),%esi
		mov    %di,0x000002(%ebx,%edx,8)
		inc    %esi
		mov    %ax,0x000004(%ebx,%edx,8)
		mov    %esi,0x000008(%esp)

	_059982_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    0x000008(%esp),%eax
		cmp    _0ca488_data(,%edx,2),%ax
		jl     _059901_jump
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		add    $0x000020,%eax
		inc    %edx
		mov    %ax,(%esp)
		mov    %dx,0x000004(%esp)
		cmp    $0x000008,%dx
		jl     _059882_jump
		xor    %edi,%edi
		mov    %di,_0ced7c_data
		mov    %di,_0ced7a_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0599d8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    %eax,0x000034(%esp)
		mov    %edx,0x000038(%esp)
		mov    %ebx,0x000004(%esp)
		mov    %ecx,0x000008(%esp)
		mov    _0ced7a_data,%ax
		mov    %eax,0x00000c(%esp)
		mov    _0ced7c_data,%ax
		mov    %ax,0x000010(%esp)
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edi
		mov    0x00000c(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,_0ced7a_data
		mov    _0ced78_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%ebp
		mov    %eax,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %edx,%ebx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		movswl %bx,%eax
		test   %eax,%eax
		jge    _059a66_jump
		neg    %eax

	_059a66_jump:
		cmp    $0x000001,%eax
		jne    _059a8c_jump
		cmpb   $0x000000,_0cef51_data
		jne    _059a8c_jump
		mov    _0ced7a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _059a8a_jump
		mov    $0x000001,%eax
		jg     _059a8a_jump
		neg    %eax

	_059a8a_jump:
		add    %eax,%edi

	_059a8c_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _059a95_jump
		neg    %eax

	_059a95_jump:
		cmp    $0x000002,%eax
		jne    _059abb_jump
		cmpb   $0x000000,_0cef4f_data
		jne    _059abb_jump
		mov    _0ced7a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _059ab9_jump
		mov    $0x000001,%eax
		jg     _059ab9_jump
		neg    %eax

	_059ab9_jump:
		add    %eax,%edi

	_059abb_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _059ac4_jump
		neg    %eax

	_059ac4_jump:
		cmp    $0x000003,%eax
		jne    _059aea_jump
		cmpb   $0x000003,_0cef51_data
		jae    _059aea_jump
		mov    _0ced7a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _059ae8_jump
		mov    $0x000001,%eax
		jg     _059ae8_jump
		neg    %eax

	_059ae8_jump:
		add    %eax,%edi

	_059aea_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _059af3_jump
		neg    %eax

	_059af3_jump:
		cmp    $0x000001,%eax
		jne    _059b19_jump
		cmpb   $0x000000,_0cef51_data
		jne    _059b19_jump
		mov    _0ced78_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _059b17_jump
		mov    $0x000001,%eax
		jg     _059b17_jump
		neg    %eax

	_059b17_jump:
		add    %eax,%esi

	_059b19_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _059b22_jump
		neg    %eax

	_059b22_jump:
		cmp    $0x000002,%eax
		jne    _059b48_jump
		cmpb   $0x000000,_0cef4f_data
		jne    _059b48_jump
		mov    _0ced78_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _059b46_jump
		mov    $0x000001,%eax
		jg     _059b46_jump
		neg    %eax

	_059b46_jump:
		add    %eax,%esi

	_059b48_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _059b51_jump
		neg    %eax

	_059b51_jump:
		cmp    $0x000003,%eax
		jne    _059b77_jump
		cmpb   $0x000003,_0cef51_data
		jae    _059b77_jump
		mov    _0ced78_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _059b75_jump
		mov    $0x000001,%eax
		jg     _059b75_jump
		neg    %eax

	_059b75_jump:
		add    %eax,%esi

	_059b77_jump:
		mov    $0x0000aa,%edx
		mov    $0x0000a0,%eax
		mov    $0xffffffc0,%ebx
		mov    0x000038(%esp),%ecx
		call   _01d0bc_func
		mov    0x000008(%esp),%eax
		mov    %ebx,0x00001c(%esp)
		xor    %edx,%edx
		mov    0x000034(%esp),%ebx
		mov    %dx,0x000020(%esp)
		mov    0x000004(%esp),%edx
		sub    %ecx,%eax
		sub    %ebx,%edx
		add    %esi,%eax
		add    %edi,%edx
		mov    %eax,0x000018(%esp)
		mov    %edx,0x000014(%esp)

	_059bb6_jump:
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		mov    _0ca426_data(,%edx,2),%ebx
		mov    _0cce14_data,%eax
		sar    $0x000010,%ebx
		mov    _0ca438_data(,%edx,2),%si
		shl    $0x000003,%ebx
		mov    _0ca448_data(,%edx,2),%cx
		add    %ebx,%eax
		mov    0x000018(%esp),%ebx
		mov    _0ca428_data(,%edx,2),%di
		mov    %ebx,0x000028(%esp)
		mov    0x000014(%esp),%ebx
		mov    %edi,(%esp)
		mov    %ebx,0x000024(%esp)
		mov    _0ca458_data(,%edx,2),%bx
		add    _0ca468_data(,%edx,2),%di
		mov    %ebx,0x000030(%esp)
		mov    _0ca478_data(,%edx,2),%bx
		mov    (%esp),%edx
		mov    %edi,0x00002c(%esp)
		cmp    %di,%dx
		jge    _059c73_jump

	_059c24_jump:
		mov    0x000024(%esp),%edi
		add    %di,(%eax)
		mov    0x000028(%esp),%edi
		add    %di,0x000002(%eax)
		mov    (%eax),%di
		cmp    %di,%bx
		jge    _059c40_jump
		mov    %cx,(%eax)
		jmp    _059c48_jump

	_059c40_jump:
		cmp    %di,%cx
		jle    _059c48_jump
		mov    %bx,(%eax)

	_059c48_jump:
		mov    0x000002(%eax),%di
		cmp    0x000030(%esp),%di
		jle    _059c59_jump
		mov    %si,0x000002(%eax)
		jmp    _059c66_jump

	_059c59_jump:
		cmp    %di,%si
		jle    _059c66_jump
		mov    0x000030(%esp),%edi
		mov    %di,0x000002(%eax)

	_059c66_jump:
		mov    0x00002c(%esp),%edi
		inc    %edx
		add    $0x000008,%eax
		cmp    %di,%dx
		jl     _059c24_jump

	_059c73_jump:
		mov    0x000020(%esp),%ecx
		mov    0x00001c(%esp),%esi
		inc    %ecx
		add    $0x000020,%esi
		mov    %cx,0x000020(%esp)
		mov    %esi,0x00001c(%esp)
		cmp    $0x0000c0,%si
		jl     _059bb6_jump
		mov    0x00000c(%esp),%eax
		mov    %ax,_0ced7a_data
		mov    0x000010(%esp),%eax
		mov    %ax,_0ced7c_data
		cmpw   $0x000001,_0cede4_data
		je     _059ccb_jump
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %ax,_0cedde_data

	_059ccb_jump:
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_059cd4_func:
		push   %ebx
		mov    %ax,_0ced58_data
		xor    %ebx,%ebx
		cwtl   
		mov    %bx,_0ced56_data
		mov    %dx,_0ca390_data(,%eax,2)
		pop    %ebx
		ret    

	_059cef_jump:
		cmp    %si,%dx
		jne    _059d11_jump
		movw   $0x000004,(%eax)
		add    $0x000002,%eax
		movw   $0x000003,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		jmp    _05a04c_jump

	_059d11_jump:
		cmp    $0x000002,%dx
		jne    _059d34_jump
		movw   $0x000004,(%eax)
		add    $0x000002,%eax
		movw   $0x000003,(%eax)
		add    $0x000002,%eax
		movw   $0x000200,(%eax)
		add    $0x000002,%eax
		jmp    _05a04c_jump

	_059d34_jump:
		cmp    $0x000003,%dx
		jne    _059d8d_jump
		cmp    $0x000008,%cx
		je     _059d47_jump
		movw   $0x000004,(%eax)
		jmp    _059d4c_jump

	_059d47_jump:
		movw   $0x000002,(%eax)

	_059d4c_jump:
		add    $0x000002,%eax
		lea    0x000002(%eax),%esi
		mov    %ecx,%edx
		lea    0x000004(%eax),%edi
		add    %ecx,%edx
		cmp    $0x000008,%cx
		jle    _059d71_jump
		sub    $0x000010,%edx
		movw   $0x000008,(%eax)
		mov    %edi,%eax
		mov    %dx,(%esi)
		jmp    _05a04c_jump

	_059d71_jump:
		jge    _05a04c_jump
		movw   $0x000009,(%eax)
		mov    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,(%esi)
		mov    %edi,%eax
		jmp    _05a04c_jump

	_059d8d_jump:
		cmp    $0x000004,%dx
		jne    _059dda_jump
		test   %cx,%cx
		je     _059da1_jump
		add    $0x000002,%eax
		mov    %dx,-0x000002(%eax)
		jmp    _059da9_jump

	_059da1_jump:
		movw   $0x000002,(%eax)
		add    $0x000002,%eax

	_059da9_jump:
		lea    0x000002(%eax),%edx
		lea    0x000004(%eax),%esi
		test   %cx,%cx
		jle    _059dbf_jump
		movw   $0x000008,(%eax)
		mov    %ecx,%eax
		add    %ecx,%eax
		jmp    _059dd0_jump

	_059dbf_jump:
		jge    _05a04c_jump
		movw   $0x000009,(%eax)
		mov    %ecx,%eax
		neg    %eax
		add    %eax,%eax

	_059dd0_jump:
		mov    %ax,(%edx)
		mov    %esi,%eax
		jmp    _05a04c_jump

	_059dda_jump:
		add    $0x000002,%eax
		cmp    $0x000005,%dx
		jne    _059e42_jump
		movswl %bx,%edx
		cmp    $0xfffffff8,%edx
		je     _059df6_jump
		movw   $0x000004,_0c8d08_data
		jmp    _059dff_jump

	_059df6_jump:
		movw   $0x000002,_0c8d08_data

	_059dff_jump:
		mov    %ebx,%esi
		movswl %bx,%edx
		add    %ebx,%esi
		lea    0x000002(%eax),%edi
		mov    %esi,(%esp)
		lea    0x000004(%eax),%esi
		cmp    $0xfffffff8,%edx
		jle    _059e23_jump
		movw   $0x000006,(%eax)
		mov    (%esp),%eax
		add    $0x000010,%eax
		jmp    _059e38_jump

	_059e23_jump:
		jge    _05a04c_jump
		mov    (%esp),%edx
		movw   $0x000007,(%eax)
		mov    $0xfffffff0,%eax
		sub    %edx,%eax

	_059e38_jump:
		mov    %ax,(%edi)
		mov    %esi,%eax
		jmp    _05a04c_jump

	_059e42_jump:
		cmp    $0x000006,%dx
		jne    _059ea0_jump
		cmp    $0x000008,%bx
		je     _059e59_jump
		movw   $0x000004,_0c8d08_data
		jmp    _059e62_jump

	_059e59_jump:
		movw   $0x000002,_0c8d08_data

	_059e62_jump:
		lea    0x000002(%eax),%esi
		mov    %ebx,%edx
		lea    0x000004(%eax),%edi
		add    %ebx,%edx
		cmp    $0x000008,%bx
		jle    _059e84_jump
		sub    $0x000010,%edx
		movw   $0x000006,(%eax)
		mov    %edi,%eax
		mov    %dx,(%esi)
		jmp    _05a04c_jump

	_059e84_jump:
		jge    _05a04c_jump
		movw   $0x000007,(%eax)
		mov    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,(%esi)
		mov    %edi,%eax
		jmp    _05a04c_jump

	_059ea0_jump:
		cmp    $0x000007,%dx
		jne    _059f08_jump
		movswl %bx,%edx
		cmp    $0xfffffff0,%edx
		je     _059eb9_jump
		movw   $0x000004,_0c8d08_data
		jmp    _059ec2_jump

	_059eb9_jump:
		movw   $0x000002,_0c8d08_data

	_059ec2_jump:
		mov    %ebx,%edi
		movswl %bx,%edx
		add    %ebx,%edi
		lea    0x000002(%eax),%esi
		mov    %edi,0x000004(%esp)
		lea    0x000004(%eax),%edi
		cmp    $0xfffffff0,%edx
		jle    _059ee8_jump
		movw   $0x000006,(%eax)
		mov    0x000004(%esp),%eax
		add    $0x000020,%eax
		jmp    _059efe_jump

	_059ee8_jump:
		jge    _05a04c_jump
		mov    0x000004(%esp),%edx
		movw   $0x000007,(%eax)
		mov    $0xffffffe0,%eax
		sub    %edx,%eax

	_059efe_jump:
		mov    %ax,(%esi)
		mov    %edi,%eax
		jmp    _05a04c_jump

	_059f08_jump:
		cmp    $0x000008,%dx
		jne    _059f66_jump
		cmp    $0x000010,%bx
		je     _059f1f_jump
		movw   $0x000004,_0c8d08_data
		jmp    _059f28_jump

	_059f1f_jump:
		movw   $0x000002,_0c8d08_data

	_059f28_jump:
		lea    0x000002(%eax),%edi
		mov    %ebx,%esi
		lea    0x000004(%eax),%edx
		add    %ebx,%esi
		cmp    $0x000010,%bx
		jle    _059f4a_jump
		sub    $0x000020,%esi
		movw   $0x000006,(%eax)
		mov    %edx,%eax
		mov    %si,(%edi)
		jmp    _05a04c_jump

	_059f4a_jump:
		jge    _05a04c_jump
		movw   $0x000007,(%eax)
		mov    $0x000020,%eax
		sub    %esi,%eax
		mov    %ax,(%edi)
		mov    %edx,%eax
		jmp    _05a04c_jump

	_059f66_jump:
		cmp    $0x000009,%dx
		jne    _059fb3_jump
		test   %bx,%bx
		je     _059f7c_jump
		movw   $0x000004,_0c8d08_data
		jmp    _059f85_jump

	_059f7c_jump:
		movw   $0x000002,_0c8d08_data

	_059f85_jump:
		lea    0x000002(%eax),%edx
		lea    0x000004(%eax),%esi
		jle    _059f98_jump
		movw   $0x000006,(%eax)
		mov    %ebx,%eax
		add    %ebx,%eax
		jmp    _059fa9_jump

	_059f98_jump:
		jge    _05a04c_jump
		movw   $0x000007,(%eax)
		mov    %ebx,%eax
		neg    %eax
		add    %eax,%eax

	_059fa9_jump:
		mov    %ax,(%edx)
		mov    %esi,%eax
		jmp    _05a04c_jump

	_059fb3_jump:
		cmp    $0x00000a,%dx
		jne    _05a02e_jump
		movswl %cx,%edx
		cmp    $0xfffffff0,%edx
		je     _059fd0_jump
		movw   $0x000006,_0c8d08_data
		jmp    _059fd9_jump

	_059fd0_jump:
		movw   $0x000004,_0c8d08_data

	_059fd9_jump:
		movswl %cx,%edx
		lea    0x000002(%eax),%ebp
		mov    %ecx,%edi
		lea    0x000004(%eax),%esi
		add    %ecx,%edi
		cmp    $0xfffffff0,%edx
		jle    _059ffb_jump
		add    $0x000020,%edi
		movw   $0x000008,(%eax)
		mov    %esi,%eax
		mov    %di,0x000000(%ebp)
		jmp    _05a00f_jump

	_059ffb_jump:
		jge    _05a00f_jump
		movw   $0x000009,(%eax)
		mov    $0xffffffe0,%eax
		sub    %edi,%eax
		mov    %ax,0x000000(%ebp)
		mov    %esi,%eax

	_05a00f_jump:
		movw   $0x000000,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		movw   $0x000009,(%eax)
		add    $0x000002,%eax
		movw   $0x000020,(%eax)
		jmp    _05a059_jump

	_05a02e_jump:
		cmp    $0x00000b,%dx
		jne    _05a059_jump
		movw   $0x000004,_0c8d08_data
		movw   $0x00000a,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %si,-0x000002(%eax)

	_05a04c_jump:
		movw   $0x000000,(%eax)
		add    $0x000002,%eax

	_05a054_jump:
		movw   $0x007fff,(%eax)

	_05a059_jump:
		mov    $0x000001,%esi
		mov    _0c8d0a_data,%edx
		mov    _0c8d08_data,%eax
		mov    %bx,_0ced7c_data
		mov    %cx,_0ced7a_data
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %si,_0ced52_data
		call   _059cd4_func
		mov    _0ced52_data,%di
		add    $0x000002,%edi
		mov    _0ced7c_data,%bx
		mov    %di,_0ced52_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05a0ac_switch:
		.long   _05a18f_case
		.long   _05a101_case
		.long   _05a116_case
		.long   _05a120_case
		.long   _05a133_case
		.long   _05a145_case
		.long   _05a12a_case
		.long   _05a13c_case
		.long   _05a14e_case
		.long   _05a160_case
		.long   _05a172_case




_05a0d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ced52_data,%cx
		mov    _0ced58_data,%ax
		cmp    $0x00000a,%ax
		ja     _05a18f_case
		and    $0x00ffff,%eax
		jmp    *%cs:_05a0ac_switch(,%eax,4)

	_05a101_case:
		xor    %edi,%edi
		mov    %di,_0ced7c_data
		mov    %di,_0ced7a_data
		jmp    _05a18f_case

	_05a116_case:
		call   _0596a8_func
		jmp    _05a18f_case

	_05a120_case:
		call   _059770_func
		jmp    _05a18f_case

	_05a12a_case:
		cmpb   $0x000000,_0cef4f_data
		jne    _05a18f_case

	_05a133_case:
		decw   _0ced7c_data
		jmp    _05a18f_case

	_05a13c_case:
		cmpb   $0x000000,_0cef4f_data
		jne    _05a18f_case

	_05a145_case:
		incw   _0ced7c_data
		jmp    _05a18f_case

	_05a14e_case:
		cmpb   $0x000000,_0cef4f_data
		jne    _05a18f_case
		decw   _0ced7a_data
		jmp    _05a18f_case

	_05a160_case:
		cmpb   $0x000000,_0cef4f_data
		jne    _05a18f_case
		incw   _0ced7a_data
		jmp    _05a18f_case

	_05a172_case:
		mov    $0xfffffff8,%edx
		mov    $0x000008,%ebx
		mov    %dx,_0ced7c_data
		mov    %bx,_0ced7a_data
		call   _059704_func

	_05a18f_case:
		mov    _0ced56_data,%eax
		sar    $0x000010,%eax
		mov    _0ced56_data,%bx
		lea    0x000000(,%eax,2),%edx
		mov    _0ced52_data,%cx
		inc    %ebx
		mov    _0ca390_data(%edx),%si
		mov    %bx,_0ced56_data
		cmp    %si,%bx
		jne    _05a1ff_jump
		movswl %cx,%eax
		inc    %ecx
		mov    _0c8d08_data(,%eax,2),%bx
		movswl %cx,%eax
		mov    _0c8d08_data(,%eax,2),%ax
		inc    %ecx
		movswl %ax,%edx
		movswl %bx,%eax
		mov    %cx,_0ced52_data
		call   _059cd4_func
		mov    _0ced52_data,%cx
		mov    _0c8d08_data,%di
		cmp    %di,%cx
		jne    _05a1ff_jump
		xor    %edi,%ecx

	_05a1ff_jump:
		mov    %cx,_0ced52_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_05a20b_jump:
		ret    

_05a20c_switch:
		.long   _05a25d_case
		.long   _05a264_case
		.long   _05a26b_case
		.long   _05a272_case
		.long   _05a279_case
		.long   _05a280_case
		.long   _05a287_case
		.long   _05a28e_case
		.long   _05a295_case
		.long   _05a2f3_case
		.long   _05a20b_jump
		.long   _05a259_case




_05a23c_func:
		andb   $0x0000fb,0x000081(%eax)
		mov    0x00006c(%eax),%al
		sub    $0x000015,%al
		cmp    $0x00000b,%al
		ja     _05a20b_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05a20c_switch(,%eax,4)

	_05a259_case:
		xor    %eax,%eax
		jmp    _05a29c_jump

	_05a25d_case:
		mov    $0x000001,%eax
		jmp    _05a29c_jump

	_05a264_case:
		mov    $0x000002,%eax
		jmp    _05a29c_jump

	_05a26b_case:
		mov    $0x000003,%eax
		jmp    _05a29c_jump

	_05a272_case:
		mov    $0x000004,%eax
		jmp    _05a29c_jump

	_05a279_case:
		mov    $0x000005,%eax
		jmp    _05a29c_jump

	_05a280_case:
		mov    $0x000006,%eax
		jmp    _05a29c_jump

	_05a287_case:
		mov    $0x000007,%eax
		jmp    _05a29c_jump

	_05a28e_case:
		mov    $0x000008,%eax
		jmp    _05a29c_jump

	_05a295_case:
		mov    $0x000009,%eax
		mov    %eax,%eax

	_05a29c_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0ced7c_data,%bx
		mov    _0ced7a_data,%cx
		mov    %eax,%edx
		mov    $0x000001,%esi
		mov    $_0c8d08_data,%eax
		mov    %si,_0ced5a_data
		test   %dx,%dx
		jne    _059cef_jump
		movw   $0x000004,(%eax)
		add    $0x000002,%eax
		movw   $0x000002,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %dx,-0x000002(%eax)
		jmp    _05a054_jump

	_05a2f3_case:
		mov    $0x00000a,%eax
		jmp    _05a29c_jump



_05a68c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    _0cdba0_data,%eax
		mov    %ebx,0x00000c(%edx)
		mov    %eax,(%edx)
		mov    _0cdb9c_data,%edx
		mov    %esi,%eax
		shl    $0x000002,%edx
		call   _07b220_func
		mov    $0x000008,%edx
		mov    %eax,0x000004(%ecx)
		mov    %esi,%eax
		call   _07b220_func
		mov    _0cdb9c_data,%edx
		xor    %esi,%esi
		mov    %eax,0x000008(%ecx)
		test   %edx,%edx
		jle    _05a754_jump
		xor    %eax,%eax
		xor    %edx,%edx

	_05a6d7_jump:
		mov    (%ecx),%ebx
		mov    (%edx,%ebx,1),%bx
		and    $0x00ffff,%ebx
		mov    0x00000c(%ecx),%edi
		mov    _0c3a98_data(,%ebx,4),%ebx
		add    %ebx,%edi
		mov    %edi,(%esp)
		mov    0x000004(%ecx),%edi
		mov    (%esp),%ebp
		mov    %ebp,(%edi,%eax,1)
		imul   $0x000120,_0cc564_data,%edi
		cmp    %edi,%ebx
		ja     _05a717_jump
		mov    0x000004(%ecx),%ebx
		mov    (%ebx,%eax,1),%ebx
		mov    0x000100(%ebx),%ebx
		jmp    _05a723_jump

	_05a717_jump:
		mov    0x000004(%ecx),%ebx
		mov    (%ebx,%eax,1),%ebx
		mov    0x000200(%ebx),%ebx

	_05a723_jump:
		cmp    $0xaaaaaaaa,%ebx
		jne    _05a72f_jump
		mov    $0x000001,%bl
		jmp    _05a73d_jump

	_05a72f_jump:
		cmp    $0x55555555,%ebx
		jne    _05a73b_jump
		xor    %bl,%bl
		jmp    _05a73d_jump

	_05a73b_jump:
		mov    $0x000002,%bl

	_05a73d_jump:
		mov    (%ecx),%edi
		add    $0x000004,%eax
		inc    %esi
		mov    %bl,0x000004(%edx,%edi,1)
		mov    _0cdb9c_data,%ebx
		add    $0x000006,%edx
		cmp    %ebx,%esi
		jl     _05a6d7_jump

	_05a754_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05a75c_func:
		mov    _0cdb98_data,%dx
		mov    %dx,0x000016(%eax)
		mov    _0cdb9a_data,%dx
		mov    %dx,0x000018(%eax)
		mov    %eax,%eax



_05a774_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0cee0e_data,%ecx
		mov    _0cc5ac_data,%ebx
		sar    $0x000010,%ecx
		add    %ebx,%ecx
		mov    _0cedf8_data,%ebx
		mov    _0cc5b4_data,%esi
		sar    $0x000010,%ebx
		add    %esi,%ebx
		mov    0x000014(%edx),%edx
		mov    %ebx,%esi
		sar    $0x000010,%edx
		sar    $0x000004,%esi
		imul   %edx,%esi
		sub    $0x000008,%ecx
		mov    %ecx,%edx
		mov    0x000008(%eax),%eax
		sar    $0x000004,%edx
		xor    %ch,%ch
		add    %esi,%edx
		and    $0x00000f,%cl
		mov    %dx,0x000006(%eax)
		mov    _0cc5ac_data,%dx
		xor    %bh,%bh
		sub    %ecx,%edx
		and    $0x00000f,%bl
		mov    %dx,(%eax)
		mov    _0cc5b4_data,%dx
		sub    %ebx,%edx
		movswl (%eax),%ebx
		mov    %dx,0x000002(%eax)
		mov    _0cc5a8_data,%edx
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    (%eax),%edx
		mov    _0cc5b0_data,%ecx
		sar    $0x000010,%edx
		sub    %edx,%ecx
		mov    %ecx,%edx
		test   $0x00000f,%bl
		setne  %cl
		and    $0x0000ff,%ecx
		sar    $0x000004,%ebx
		add    %ecx,%ebx
		mov    %bl,0x000004(%eax)
		test   $0x00000f,%dl
		setne  %bl
		and    $0x0000ff,%ebx
		sar    $0x000004,%edx
		add    %ebx,%edx
		mov    %dl,0x000005(%eax)
		mov    (%eax),%ax
		xor    %ah,%ah
		and    $0x000003,%al
		mov    $0x000004,%ebx
		cwtl   
		mov    _0cc648_data,%edx
		sub    %eax,%ebx
		add    %ebx,%edx
		mov    %ebx,_0cc63c_data
		mov    %edx,_0cc644_data
		mov    %edx,_0cccb4_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a850_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x0000c8,%ebx
		mov    $0x000004,%ecx
		xor    %edx,%edx
		mov    $0x000140,%esi
		mov    %edx,_0cc5b4_data
		mov    %ebx,_0cc5b0_data
		mov    %ecx,_0cc5ac_data
		mov    %esi,_0cc5a8_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a884_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cdb98_data,%cx
		shl    $0x000004,%ecx
		mov    _0cc5a8_data,%dx
		mov    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0cdb9a_data,%ax
		mov    _0cc5b0_data,%bx
		shl    $0x000004,%eax
		sub    $0x000140,%ecx
		mov    %eax,%esi
		mov    %cx,_0cecb2_data
		sub    %ebx,%esi
		sub    $0x0000c8,%eax
		mov    %esi,%ebx
		mov    %ax,_0cecb4_data
		test   %dx,%dx
		jge    _05a8d5_jump
		xor    %edx,%edx

	_05a8d5_jump:
		test   %bx,%bx
		jge    _05a8dc_jump
		xor    %ebx,%ebx

	_05a8dc_jump:
		mov    _0cc5ac_data,%ax
		neg    %eax
		add    $0x000008,%eax
		mov    %ax,_0cedba_data
		mov    %edx,%eax
		add    $0x000008,%eax
		mov    %ax,_0cedc8_data
		mov    _0cc5b4_data,%ax
		mov    %eax,%ecx
		mov    %ax,_0cedbc_data
		neg    %ecx
		mov    %bx,_0cedc6_data
		mov    %cx,_0cedbc_data
		mov    %bx,_0cedda_data
		mov    %dx,_0cede8_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a930_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cee10_data,%bx
		mov    _0cedfa_data,%cx
		mov    _0cc5ac_data,%eax
		movswl %bx,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _05a959_jump
		mov    _0cc5ac_data,%bx
		neg    %ebx

	_05a959_jump:
		mov    _0cede8_data,%dx
		cmp    %dx,%bx
		jle    _05a967_jump
		mov    %edx,%ebx

	_05a967_jump:
		mov    _0cc5b4_data,%eax
		movswl %cx,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _05a97e_jump
		mov    _0cc5b4_data,%cx
		neg    %ecx

	_05a97e_jump:
		mov    _0cedda_data,%si
		cmp    %si,%cx
		jle    _05a98c_jump
		mov    %esi,%ecx

	_05a98c_jump:
		mov    %cx,_0cedfa_data
		mov    %bx,_0cee10_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05abc4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cdbcc_data,%ecx
		mov    _0cee0e_data,%eax
		mov    _0cc5ac_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0cdc0c_data,%dl
		add    %eax,%ebx
		add    %edx,%ecx
		add    $0x000010,%ebx
		cmp    %ebx,%ecx
		jg     _05ac19_jump
		mov    _0cc5ac_data,%ebx
		sub    %edx,%ebx
		lea    0x000010(%ebx),%edx
		add    %eax,%edx
		mov    %edx,_0cdbcc_data
		mov    _0cdbcc_data,%ax
		sub    _0cedba_data,%ax
		add    $0x000008,%eax
		mov    %ax,_0cdbda_data

	_05ac19_jump:
		mov    _0cdbcc_data,%ebx
		mov    _0cee0e_data,%eax
		mov    _0cc5a8_data,%ecx
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0cdc0c_data,%dl
		add    %ecx,%eax
		add    %edx,%ebx
		sub    $0x000018,%eax
		cmp    %eax,%ebx
		jle    _05ac64_jump
		sub    %edx,%eax
		sub    $0x000008,%eax
		mov    %eax,_0cdbcc_data
		mov    _0cee10_data,%bx
		mov    _0cdbcc_data,%ax
		sub    %ebx,%eax
		add    $0x000008,%eax
		mov    %ax,_0cdbda_data

	_05ac64_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ac68_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    _0cc5ac_data,%di
		sub    %edi,%eax
		mov    %eax,0x000004(%esp)
		mov    _0cc5a8_data,%ax
		sub    %edx,%eax
		mov    _0cc5b4_data,%di
		mov    %eax,(%esp)
		mov    %ebx,%eax
		sub    %edi,%eax
		mov    %eax,0x000008(%esp)
		movswl %bx,%eax
		mov    %eax,_0cc5b4_data
		movswl %cx,%eax
		mov    _0cc5b0_data,%di
		mov    %eax,_0cc5b0_data
		movswl %si,%eax
		sub    %ecx,%edi
		mov    %eax,_0cc5ac_data
		movswl %dx,%eax
		mov    _0cc5b0_data,%edx
		mov    %eax,_0cc5a8_data
		cmp    $0x0000c8,%edx
		jle    _05acd7_jump
		movl   $0x0000c8,_0cc5b0_data

	_05acd7_jump:
		cmpl   $0x000000,_0cc5b4_data
		jge    _05ace8_jump
		xor    %esi,%esi
		mov    %esi,_0cc5b4_data

	_05ace8_jump:
		cmpl   $0x000140,_0cc5a8_data
		jle    _05acfe_jump
		movl   $0x000140,_0cc5a8_data

	_05acfe_jump:
		cmpl   $0x000004,_0cc5ac_data
		jge    _05ad11_jump
		movl   $0x000004,_0cc5ac_data

	_05ad11_jump:
		cmpl   $0x000004,_0cc5ac_data
		jl     _05adba_jump
		mov    0x000004(%esp),%eax
		mov    _0cedba_data,%dx
		mov    _0cedc8_data,%bx
		sub    %eax,%edx
		add    (%esp),%ebx
		mov    %dx,_0cedba_data
		mov    %bx,_0cedc8_data
		cmp    $0x00000c,%dx
		jle    _05ad52_jump
		movw   $0x00000c,_0cedba_data

	_05ad52_jump:
		mov    _0cecb0_data,%eax
		mov    _0cedc6_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    $0x000008,%eax
		cmp    %eax,%ebx
		jge    _05ad7b_jump
		mov    _0cecb2_data,%ax
		add    $0x000008,%eax
		mov    %ax,_0cedc8_data

	_05ad7b_jump:
		mov    (%esp),%eax
		mov    _0cede8_data,%dx
		add    %eax,%edx
		mov    _0cecb2_data,%bx
		mov    %dx,_0cede8_data
		cmp    %bx,%dx
		jge    _05ada1_jump
		mov    %bx,_0cede8_data

	_05ada1_jump:
		mov    _0cede8_data,%ax
		mov    _0cee10_data,%cx
		cmp    %cx,%ax
		jge    _05adba_jump
		mov    %cx,_0cede8_data

	_05adba_jump:
		cmpl   $0x000000,_0cc5b4_data
		jl     _05ae4c_jump
		mov    0x000008(%esp),%eax
		mov    _0cedbc_data,%si
		sub    %eax,%esi
		mov    _0cedc6_data,%ax
		add    %edi,%eax
		mov    %si,_0cedbc_data
		mov    %ax,_0cedc6_data
		test   %si,%si
		jle    _05adf7_jump
		xor    %ebx,%ebx
		mov    %bx,_0cedbc_data

	_05adf7_jump:
		mov    _0cedc6_data,%ax
		mov    _0cecb4_data,%cx
		cmp    %cx,%ax
		jge    _05ae10_jump
		mov    %cx,_0cedc6_data

	_05ae10_jump:
		mov    _0cedda_data,%si
		add    %edi,%esi
		mov    _0cecb4_data,%di
		mov    %si,_0cedda_data
		cmp    %di,%si
		jge    _05ae33_jump
		mov    %di,_0cedda_data

	_05ae33_jump:
		mov    _0cedda_data,%ax
		mov    _0cedfa_data,%dx
		cmp    %dx,%ax
		jge    _05ae4c_jump
		mov    %dx,_0cedda_data

	_05ae4c_jump:
		cmpw   $0x000000,_0cedc0_data
		je     _05ae6e_jump
		mov    _0cedba_data,%ax
		mov    %ax,_0cedc0_data
		mov    _0cedc8_data,%ax
		mov    %ax,_0cedc2_data

	_05ae6e_jump:
		cmpw   $0x000014,_0cdb98_data
		jg     _05ae93_jump
		cmpl   $0x000004,_0cc5ac_data
		jne    _05ae93_jump
		mov    _0cedc8_data,%ax
		mov    %ax,_0cedba_data
		mov    %ax,_0cee10_data

	_05ae93_jump:
		call   _05a930_func
		cmpb   $0x000000,_0cefbd_data
		je     _05aed4_jump
		cmpw   $0x000003,_0cede4_data
		jne    _05aeb5_jump
		cmpw   $0x00000a,_0cedd0_data
		je     _05aebc_jump

	_05aeb5_jump:
		mov    $0x000001,%eax
		jmp    _05aebe_jump

	_05aebc_jump:
		xor    %eax,%eax

	_05aebe_jump:
		test   %eax,%eax
		je     _05aed4_jump
		mov    _0cee10_data,%ax
		mov    %ax,_0cedc8_data
		mov    %ax,_0cedba_data

	_05aed4_jump:
		mov    _0cc5a8_data,%ax
		mov    _0cede6_data,%ebx
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    %ax,%cx
		add    %ebx,%ecx
		mov    _0cdb96_data,%ebx
		sar    $0x000010,%ebx
		shl    $0x000004,%ebx
		mov    _0cc5b0_data,%dx
		cmp    %ebx,%ecx
		jle    _05af14_jump
		mov    _0cdb98_data,%bx
		shl    $0x000004,%ebx
		sub    %eax,%ebx
		mov    %bx,_0cede8_data

	_05af14_jump:
		mov    _0cedd8_data,%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    %dx,%ax
		add    %eax,%ebx
		mov    _0cdb98_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %eax,%ebx
		jle    _05af44_jump
		mov    _0cdb9a_data,%ax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %ax,_0cedda_data

	_05af44_jump:
		mov    _0cc5ac_data,%eax
		mov    %eax,_0cc5a0_data
		mov    _0cc5a8_data,%eax
		mov    %eax,_0cc594_data
		mov    _0cc5b4_data,%eax
		mov    %eax,_0cc590_data
		mov    _0cc5b0_data,%eax
		mov    _095b4b_data,%dl
		mov    %eax,_0cc58c_data
		test   %dl,%dl
		je     _05af7b_jump
		call   _05abc4_func

	_05af7b_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    



_05af84_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%edx
		mov    $0x00000c,%ebx
		mov    _0ce298_data,%eax
		mov    $0x000004,%ebp
		mov    %edx,0x000008(%esp)
		mov    0x000044(%eax),%ax
		mov    %ebx,0x000004(%esp)
		mov    %ax,0x00000c(%esp)
		jmp    _05b050_jump

	_05afba_jump:
		mov    _0ce298_data,%esi
		mov    0x000004(%esp),%edi
		mov    (%esi),%esi
		add    %edi,%esi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000006(%esi),%dl
		mov    0x000005(%esi),%al
		mov    %dx,0x000010(%esp)
		test   $0x000001,%al
		je     _05afe0_jump
		and    $0x010000,%eax

	_05afe0_jump:
		mov    0x00000e(%esp),%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    (%esp),%eax
		call   _07b220_func
		mov    %eax,_0c1a48_data(%ebp)
		mov    _0ce298_data,%eax
		mov    0x000008(%eax),%ebx
		mov    (%esi),%eax
		xor    %edi,%edi
		add    %eax,%ebx
		mov    _0c1a48_data(%ebp),%eax
		jmp    _05b02e_jump

	_05b00f_jump:
		xor    %edx,%edx
		jmp    _05b024_jump

	_05b013_jump:
		mov    (%ebx),%cl
		test   %cl,%cl
		jne    _05b01e_jump
		movb   $0x0000ff,(%eax)
		jmp    _05b021_jump

	_05b01e_jump:
		movb   $0x000000,(%eax)

	_05b021_jump:
		inc    %ebx
		inc    %eax
		inc    %edx

	_05b024_jump:
		xor    %ecx,%ecx
		mov    0x000005(%esi),%cl
		cmp    %ecx,%edx
		jb     _05b013_jump
		inc    %edi

	_05b02e_jump:
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%edi
		jb     _05b00f_jump
		mov    0x000004(%esp),%edx
		mov    0x000008(%esp),%ebx
		add    $0x000004,%ebp
		add    $0x00000c,%edx
		inc    %ebx
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)

	_05b050_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000008(%esp),%ecx
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		ja     _05afba_jump
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b070_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000044,%esp
		mov    %eax,%ebp
		mov    %edx,%ecx
		mov    0x000008(%edx),%eax
		mov    0x000005(%eax),%dl
		mov    %eax,0x000028(%esp)
		cmp    $0x000001,%dl
		jbe    _05b3e4_jump
		cmpb   $0x000001,0x000004(%eax)
		jbe    _05b3e4_jump
		mov    (%eax),%eax
		mov    0x000028(%esp),%ebx
		sar    $0x000010,%eax
		movswl (%ebx),%ebx
		mov    %eax,%edx
		add    %ebx,%ebp
		shl    $0x000008,%edx
		shl    $0x000006,%eax
		add    %edx,%ebp
		mov    0x000028(%esp),%edx
		add    %eax,%ebp
		xor    %eax,%eax
		mov    0x000006(%edx),%ax
		mov    %eax,0x000008(%esp)
		mov    (%edx),%ax
		mov    %ax,0x000040(%esp)
		mov    %eax,%edx
		mov    0x000028(%esp),%eax
		mov    0x000002(%eax),%ax
		xor    %ebx,%ebx
		mov    %eax,0x000038(%esp)
		mov    %ax,0x00003c(%esp)
		mov    0x000008(%esp),%eax
		mov    %ebx,0x00002c(%esp)
		mov    %eax,(%esp)
		mov    %eax,%ebx
		shl    $0x000002,%eax
		sub    %ebx,%eax
		add    %eax,%eax
		mov    %eax,0x00001c(%esp)
		mov    %ebx,%eax
		shl    $0x000002,%eax
		mov    %ebp,0x000010(%esp)
		mov    %eax,0x000024(%esp)
		jmp    _05b184_jump

	_05b108_jump:
		mov    0x00001c(%esp),%ebx
		mov    (%ecx),%eax
		add    %ebx,%eax
		mov    0x000004(%eax),%bl
		test   %bl,%bl
		je     _05b156_jump
		cmp    $0x000001,%bl
		jne    _05b13a_jump
		mov    0x00003a(%esp),%ebx
		mov    0x000024(%esp),%edi
		mov    0x000004(%ecx),%esi
		movswl %dx,%eax
		add    %edi,%esi
		sar    $0x000010,%ebx
		mov    %ebp,%edi
		mov    (%esi),%esi
		call   _0154bd_func
		jmp    _05b156_jump

	_05b13a_jump:
		mov    0x00003a(%esp),%ebx
		mov    0x000024(%esp),%edi
		mov    0x000004(%ecx),%esi
		movswl %dx,%eax
		add    %edi,%esi
		sar    $0x000010,%ebx
		mov    %ebp,%edi
		mov    (%esi),%esi
		call   _015325_func

	_05b156_jump:
		mov    0x00001c(%esp),%eax
		mov    0x000024(%esp),%ebx
		mov    0x000008(%esp),%esi
		mov    0x00002c(%esp),%edi
		add    $0x000010,%ebp
		add    $0x000010,%edx
		add    $0x000006,%eax
		add    $0x000004,%ebx
		inc    %esi
		inc    %edi
		mov    %eax,0x00001c(%esp)
		mov    %ebx,0x000024(%esp)
		mov    %esi,0x000008(%esp)
		mov    %edi,0x00002c(%esp)

	_05b184_jump:
		mov    0x000028(%esp),%ebx
		xor    %eax,%eax
		mov    0x00002c(%esp),%esi
		mov    0x000004(%ebx),%al
		cmp    %esi,%eax
		jg     _05b108_jump
		mov    0x000010(%esp),%edx
		mov    (%esp),%ebx
		mov    0x000014(%ecx),%eax
		mov    $0x000001,%edi
		sar    $0x000010,%eax
		add    $0x001400,%edx
		add    %eax,%ebx
		mov    %edi,0x000014(%esp)
		jmp    _05b2fc_jump

	_05b1bc_jump:
		mov    0x000018(%esp),%eax
		mov    %eax,0x00000c(%esp)
		imul   $0x000006,%eax,%esi
		mov    (%ecx),%eax
		add    %eax,%esi
		mov    0x000004(%esi),%al
		mov    %edx,0x000004(%esp)
		test   %al,%al
		je     _05b20a_jump
		cmp    $0x000001,%al
		jne    _05b1f3_jump
		mov    0x00003e(%esp),%eax
		movswl %bx,%ebx
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _0154bd_func
		jmp    _05b20a_jump

	_05b1f3_jump:
		mov    0x00003e(%esp),%eax
		movswl %bx,%ebx
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _015325_func

	_05b20a_jump:
		mov    $0x000001,%ebx
		mov    0x000018(%esp),%esi
		add    %ebx,%esi
		mov    %ebx,0x00002c(%esp)
		mov    %esi,0x000018(%esp)
		lea    0x000000(,%esi,4),%ebx
		add    $0x000010,%edx
		imul   $0x000006,%esi,%ebp
		jmp    _05b272_jump

	_05b22c_jump:
		mov    (%ecx),%esi
		add    %ebp,%esi
		mov    0x000004(%esi),%al
		test   %al,%al
		je     _05b257_jump
		cmp    $0x000001,%al
		jne    _05b24a_jump
		mov    0x000004(%ecx),%esi
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		call   _014fa0_func
		jmp    _05b257_jump

	_05b24a_jump:
		mov    0x000004(%ecx),%esi
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		call   _014dc3_func

	_05b257_jump:
		mov    0x000018(%esp),%eax
		mov    0x00002c(%esp),%esi
		add    $0x000010,%edx
		add    $0x000004,%ebx
		add    $0x000006,%ebp
		inc    %eax
		inc    %esi
		mov    %eax,0x000018(%esp)
		mov    %esi,0x00002c(%esp)

	_05b272_jump:
		mov    0x000028(%esp),%esi
		movzbl 0x000004(%esi),%esi
		mov    0x00002c(%esp),%edi
		dec    %esi
		cmp    %edi,%esi
		jg     _05b22c_jump
		mov    (%ecx),%eax
		add    %eax,%ebp
		cmpb   $0x000000,0x000004(%ebp)
		je     _05b2dd_jump
		mov    0x000014(%esp),%esi
		mov    0x000038(%esp),%eax
		mov    0x00002c(%esp),%edi
		shl    $0x000004,%esi
		shl    $0x000004,%edi
		add    %eax,%esi
		add    0x000040(%esp),%edi
		cmpb   $0x000001,0x000004(%ebp)
		jne    _05b2c6_jump
		movswl %si,%eax
		mov    0x000004(%ecx),%ebp
		movswl %di,%esi
		mov    (%ebx,%ebp,1),%ebp
		mov    %eax,%ebx
		mov    %edx,%edi
		mov    %esi,%eax
		mov    %ebp,%esi
		call   _0154bd_func
		jmp    _05b2dd_jump

	_05b2c6_jump:
		movswl %si,%eax
		mov    0x000004(%ecx),%esi
		movswl %di,%ebp
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		mov    %eax,%ebx
		mov    %ebp,%eax
		call   _015325_func

	_05b2dd_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000014(%esp),%ebp
		mov    0x000014(%ecx),%eax
		add    $0x001400,%edx
		sar    $0x000010,%eax
		inc    %ebp
		add    %eax,%ebx
		mov    %ebp,0x000014(%esp)

	_05b2fc_jump:
		mov    %ebx,0x000018(%esp)
		mov    0x000028(%esp),%ebx
		xor    %eax,%eax
		mov    0x000038(%esp),%esi
		mov    0x000005(%ebx),%al
		mov    0x000014(%esp),%ebx
		mov    0x000018(%esp),%ebp
		shl    $0x000004,%ebx
		dec    %eax
		add    %esi,%ebx
		mov    0x000014(%esp),%esi
		shl    $0x000002,%ebp
		cmp    %esi,%eax
		jg     _05b1bc_jump
		mov    0x000040(%esp),%eax
		mov    %bx,0x000034(%esp)
		mov    0x000018(%esp),%ebx
		mov    %ax,0x000030(%esp)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		xor    %edi,%edi
		add    %eax,%eax
		mov    %edi,0x00002c(%esp)
		mov    %eax,0x000020(%esp)
		jmp    _05b3d1_jump

	_05b356_jump:
		mov    0x000020(%esp),%esi
		mov    (%ecx),%eax
		add    %esi,%eax
		mov    0x000004(%eax),%bl
		test   %bl,%bl
		je     _05b3a2_jump
		cmp    $0x000001,%bl
		jne    _05b387_jump
		mov    0x000032(%esp),%ebx
		mov    0x00002e(%esp),%eax
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _0154bd_func
		jmp    _05b3a2_jump

	_05b387_jump:
		mov    0x000032(%esp),%ebx
		mov    0x00002e(%esp),%eax
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _015325_func

	_05b3a2_jump:
		mov    0x000030(%esp),%edi
		mov    0x000018(%esp),%eax
		mov    0x00002c(%esp),%ebx
		add    $0x000010,%edx
		add    $0x000004,%ebp
		add    $0x000010,%edi
		inc    %eax
		inc    %ebx
		mov    %di,0x000030(%esp)
		mov    0x000020(%esp),%edi
		mov    %eax,0x000018(%esp)
		add    $0x000006,%edi
		mov    %ebx,0x00002c(%esp)
		mov    %edi,0x000020(%esp)

	_05b3d1_jump:
		mov    0x000028(%esp),%ebx
		xor    %eax,%eax
		mov    0x000004(%ebx),%al
		cmp    0x00002c(%esp),%eax
		jg     _05b356_jump

	_05b3e4_jump:
		add    $0x000044,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_05b3f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    _0cc5b0_data,%edx
		mov    _0cc5b4_data,%ecx
		mov    _0cc5a8_data,%ebx
		mov    _0cc5ac_data,%eax
		call   _01614e_func
		mov    _0cc644_data,%eax
		mov    $_014c59_func,%edx
		mov    %eax,_0cc648_data
		mov    %edx,_0cc624_data
		lea    0x000004(%eax),%ebx
		mov    _0ccda4_data,%edx
		mov    $_0c1b10_data,%eax
		mov    %ebx,_0cc644_data
		call   _05a75c_func
		mov    $0x00fa00,%ebx
		mov    _095b10_data,%eax
		xor    %edx,%edx
		call   _07c0b0_func
		mov    _0cc644_data,%edi
		call   _014bed_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b460_func:
		mov    _0cc648_data,%eax
		mov    %eax,_0cc644_data
		mov    %eax,_0cccb4_data
		ret    



_05b470_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0ced5e_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _05b4a9_jump
		mov    %edx,%eax
		push   $0xffffffcd
		shl    $0x000005,%eax
		mov    $0x000015,%ecx
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		mov    $0x000002,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01cd60_func

	_05b4a9_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b4b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    _0ced5e_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _05b54c_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc300_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		lea    0x00000c(%esp),%ebx
		push   %ebx
		lea    0x00000c(%esp),%ebx
		lea    0x000008(%esp),%ecx
		push   %ebx
		mov    $0x000002,%edx
		lea    0x000008(%esp),%ebx
		call   _01d710_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    $0x000015,%eax
		mov    %eax,0x000028(%esi)
		mov    0x000004(%esp),%eax
		sub    $0x000043,%eax
		mov    %ax,0x00000c(%esp)
		mov    0x000040(%esi),%ebx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		lea    (%eax,%ebx,1),%ecx
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x00002c(%esi),%eax
		cmp    %ebx,%eax
		jl     _05b538_jump
		cmp    %ecx,%eax
		jg     _05b538_jump
		mov    $0x000001,%eax
		jmp    _05b53a_jump

	_05b538_jump:
		xor    %eax,%eax

	_05b53a_jump:
		test   %eax,%eax
		je     _05b54c_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d374_func

	_05b54c_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b554_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,0x000008(%esp)
		mov    _0cc300_data,%esi
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _05b702_jump

	_05b579_jump:
		cmpw   $0x000049,0x000060(%esi)
		jne    _05b6f2_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _05b6f2_jump
		test   %bl,%bl
		je     _05b5b5_jump
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000081(%esi)
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _05b5da_jump

	_05b5b5_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_05b5da_jump:
		mov    0x000008(%esp),%eax
		mov    %ax,0x000042(%esi)
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %edi,%eax
		call   _01d710_func
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _05b627_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ebp
		mov    %ebp,0x000028(%esi)

	_05b627_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000074(%esi),%dl
		mov    0x000069(%esi),%al
		add    %edx,%eax
		mov    0x00000e(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000081(%esi),%al
		mov    %edx,0x00002c(%esi)
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _05f030_func
		mov    %esi,%eax
		call   _01db8c_func
		orb    $0x000004,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f304_func
		mov    0x000081(%esi),%dl
		xor    %eax,%eax
		and    $0x0000bf,%dl
		mov    _0cdc0c_data,%al
		mov    %dl,0x000081(%esi)
		mov    _0cdbcc_data,%dx
		mov    0x000028(%esi),%bx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		testb  $0x000008,0x000081(%esi)
		je     _05b6b5_jump
		mov    $0x000001,%edx
		jmp    _05b6ba_jump

	_05b6b5_jump:
		mov    $0xffffffff,%edx

	_05b6ba_jump:
		cwtl   
		imul   %edx,%eax
		xor    %ebx,%ebx
		cwtl   
		cmp    %ebx,%eax
		jge    _05b6c7_jump
		mov    %ebx,%eax

	_05b6c7_jump:
		mov    0x000081(%esi),%bl
		add    $0x00000f,%eax
		and    $0x0000fc,%bl
		mov    %ax,0x000052(%esi)
		mov    %bl,0x000081(%esi)
		mov    0x000034(%edi),%ax
		mov    %ax,0x000050(%esi)
		decb   0x00007d(%edi)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05b6f2_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _05b579_jump

	_05b702_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05b70c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x00001a,0x00006b(%eax)
		jae    _05b71d_jump
		movw   $0x000000,0x000052(%ecx)

	_05b71d_jump:
		cmpw   $0x000000,0x000052(%ecx)
		jne    _05b76d_jump
		cmpb   $0x00001a,0x00006b(%ecx)
		jne    _05b76d_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _05b76d_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _05b554_func
		movw   $0x000001,0x000052(%ecx)

	_05b76d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b774_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _05b782_jump
		cmpb   $0x000000,0x00006c(%eax)
		je     _05b78e_jump

	_05b782_jump:
		cmpb   $0x000001,0x00006d(%eax)
		jne    _05b7a0_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _05b7a0_jump

	_05b78e_jump:
		cmpb   $0x000000,0x00007d(%eax)
		jbe    _05b7a0_jump
		mov    $0x000002,%ebx
		xor    %edx,%edx
		call   _01d374_func

	_05b7a0_jump:
		pop    %edx
		pop    %ebx
		ret    



_05b7a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    0x000081(%eax),%bl
		call   _01db14_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		shl    $0x000004,%bl
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x00006c(%ecx),%al
		shr    $0x000007,%bl
		add    %edx,%eax
		mov    %bl,%dl
		and    $0x000001,%dl
		shl    $0x000003,%dl
		cmp    $0x000006,%eax
		jb     _05b830_jump
		jbe    _05ba15_jump
		cmp    $0x000100,%eax
		jb     _05b819_jump
		jbe    _05b929_jump
		cmp    $0x000205,%eax
		jb     _05b809_jump
		jbe    _05bab4_jump
		cmp    $0x000207,%eax
		je     _05b9fd_jump
		jmp    _05baba_jump

	_05b809_jump:
		cmp    $0x000202,%eax
		jb     _05baba_jump
		jmp    _05ba09_jump

	_05b819_jump:
		cmp    $0x000007,%eax
		jbe    _05ba90_jump
		cmp    $0x000008,%eax
		je     _05ba59_jump
		jmp    _05baba_jump

	_05b830_jump:
		cmp    $0x000002,%eax
		jb     _05b84b_jump
		jbe    _05b8e1_jump
		cmp    $0x000004,%eax
		jb     _05b854_jump
		jbe    _05ba15_jump
		jmp    _05bab4_jump

	_05b84b_jump:
		test   %eax,%eax
		jbe    _05b85f_jump
		jmp    _05bab0_jump

	_05b854_jump:
		movw   $0x00fff8,0x000042(%ecx)
		jmp    _05bab4_jump

	_05b85f_jump:
		mov    _0cdcd2_data,%dl
		movw   $0x000000,0x000040(%ecx)
		test   %dl,%dl
		je     _05b882_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _05baba_jump

	_05b882_jump:
		cmpb   $0x000001,0x00007d(%ecx)
		jne    _05b8bc_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %bl,%al
		je     _05b8a9_jump
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _01d364_func
		jmp    _05baba_jump

	_05b8a9_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		jmp    _05baba_jump

	_05b8bc_jump:
		mov    %bl,%al
		mov    0x000081(%ecx),%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,0x000081(%ecx)
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,0x000081(%ecx)
		jmp    _05baba_jump

	_05b8e1_jump:
		mov    0x000081(%ecx),%bh
		and    $0x0000f7,%bh
		mov    %bh,%al
		mov    %bh,0x000081(%ecx)
		or     %dl,%al
		mov    %al,0x000081(%ecx)
		mov    _0cdcd2_data,%ah
		movw   $0x000000,0x000040(%ecx)
		test   %ah,%ah
		je     _05b91d_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _05baba_jump

	_05b91d_jump:
		mov    %ecx,%eax
		call   _05b70c_func
		jmp    _05baba_jump

	_05b929_jump:
		cmpb   $0x000000,_0cdcd2_data
		je     _05b945_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _05baba_jump

	_05b945_jump:
		cmpb   $0x000001,0x00007d(%ecx)
		jne    _05b9ed_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		jne    _05b9a2_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%esi
		mov    0x000068(%ecx),%al
		add    %eax,%esi
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		add    %esi,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _05b9bc_jump

	_05b9a2_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%bl
		jne    _05b9bc_jump
		testb  $0x000008,0x000081(%ecx)
		sete   %bl

	_05b9bc_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %bl,%al
		je     _05b9da_jump
		mov    $0x000006,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func

	_05b9da_jump:
		mov    %ecx,%eax
		call   _053ce4_func
		mov    %ecx,%eax
		call   _0252c0_func
		jmp    _05baba_jump

	_05b9ed_jump:
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		jmp    _05baba_jump

	_05b9fd_jump:
		mov    %ecx,%eax
		call   _05b4b0_func
		jmp    _05baba_jump

	_05ba09_jump:
		mov    %ecx,%eax
		call   _05b470_func
		jmp    _05baba_jump

	_05ba15_jump:
		mov    %bl,%al
		mov    0x000081(%ecx),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%ecx)
		mov    %dl,%dh
		movw   $0x000000,0x000040(%ecx)
		or     %al,%dh
		mov    _0cdcd2_data,%bl
		mov    %dh,0x000081(%ecx)
		test   %bl,%bl
		je     _05baba_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _05baba_jump

	_05ba59_jump:
		mov    0x000081(%ecx),%dh
		and    $0x0000f7,%dh
		mov    %dh,%bl
		mov    %dh,0x000081(%ecx)
		or     %dl,%bl
		mov    %bl,0x000081(%ecx)
		mov    _0cdcd2_data,%bh
		movw   $0x000000,0x000040(%ecx)
		test   %bh,%bh
		jne    _05baba_jump
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _01d364_func
		jmp    _05baba_jump

	_05ba90_jump:
		mov    0x000081(%ecx),%al
		and    $0x0000f7,%al
		mov    %al,0x000081(%ecx)
		mov    %al,%ah
		movw   $0x000000,0x000040(%ecx)
		or     %dl,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _05baba_jump

	_05bab0_jump:
		movb   $0x000064,0x00007f(%ecx)

	_05bab4_jump:
		movw   $0x000000,0x000040(%ecx)

	_05baba_jump:
		mov    0x00007f(%ecx),%al
		test   %al,%al
		je     _05bac8_jump
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x00007f(%ecx)

	_05bac8_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05bad0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00007f(%eax)
		jne    _05bb95_jump
		mov    $0x000001,%dl
		mov    %ecx,%eax
		mov    %dl,_0cdcd3_data
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _05bb46_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    _0ced5e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05bb95_jump
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc300_data,%eax
		shl    $0x000002,%ecx
		add    %ecx,%eax
		call   _05ef90_func
		mov    _0ced5e_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc300_data,%eax
		movw   $0x000000,0x000048(%eax,%ecx,4)
		pop    %ecx
		pop    %ebx
		ret    

	_05bb46_jump:
		mov    _0cdc30_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _05bb5d_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _05bb87_jump

	_05bb5d_jump:
		jl     _05bb80_jump
		testb  $0x000008,0x000081(%eax)
		je     _05bb80_jump
		andb   $0x0000f7,0x000081(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_05bb80_jump:
		orb    $0x000008,0x000081(%ecx)

	_05bb87_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func

	_05bb95_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05bb98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		mov    0x00004e(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _05bbd8_jump
		mov    0x000081(%ebx),%dh
		and    $0x0000fb,%dh
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		call   _077338_func
		jmp    _05bd1d_jump

	_05bbd8_jump:
		cmpw   $0x000000,0x000052(%ebx)
		jg     _05bc46_jump
		mov    0x000081(%ebx),%dh
		test   $0x000001,%dh
		je     _05bc09_jump
		mov    0x000081(%ebx),%ch
		movl   $0x000000,0x000024(%ebx)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%ebx)
		incb   0x00007d(%eax)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bc09_jump:
		mov    %dh,%cl
		or     $0x000003,%cl
		xor    %edx,%edx
		mov    %cl,0x000081(%ebx)
		mov    0x000068(%ebx),%dl
		mov    0x000028(%ebx),%cx
		mov    0x000028(%eax),%si
		add    %ecx,%edx
		mov    0x000068(%eax),%al
		sub    %esi,%edx
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %dx,0x000052(%ebx)
		mov    0x000050(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05bc3c_jump
		neg    %eax

	_05bc3c_jump:
		mov    %ax,0x000052(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bc46_jump:
		andb   $0x0000fd,0x000081(%ebx)
		mov    0x000070(%ebx),%al
		cmp    $0x000014,%al
		jne    _05bd1d_jump
		mov    0x000056(%ebx),%ax
		mov    0x00004a(%ebx),%si
		mov    %ax,0x000040(%ebx)
		test   %si,%si
		je     _05bc73_jump
		mov    %si,0x000042(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bc73_jump:
		testb  $0x000001,0x000081(%ebx)
		je     _05bd07_jump
		mov    0x00004e(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    0x000028(%eax),%di
		mov    0x000028(%ebx),%cx
		add    %edi,%edx
		sub    %ecx,%edx
		mov    %edx,%ecx
		xor    %edx,%edx
		mov    0x000068(%ebx),%dl
		sub    %edx,%ecx
		xor    %edx,%edx
		mov    %cx,0x000052(%ebx)
		xor    %ecx,%ecx
		mov    0x000074(%eax),%dl
		mov    0x000069(%eax),%cl
		add    %ecx,%edx
		sar    %edx
		mov    0x00002c(%eax),%ecx
		add    %edx,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%ebx),%al
		mov    0x000069(%ebx),%dl
		add    %edx,%eax
		mov    0x00002c(%ebx),%esi
		sar    %eax
		add    %esi,%eax
		sub    %eax,%ecx
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		imul   %ecx,%eax
		mov    0x000052(%ebx),%si
		mov    %ax,0x000042(%ebx)
		test   %si,%si
		je     _05bcf7_jump
		cwtd   
		idiv   %si
		mov    %ax,0x000042(%ebx)

	_05bcf7_jump:
		mov    0x000050(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05bd03_jump
		neg    %eax

	_05bd03_jump:
		mov    %ax,0x000052(%ebx)

	_05bd07_jump:
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05bd13_jump
		neg    %eax

	_05bd13_jump:
		cwtl   
		call   _053c60_func
		sub    %ax,0x000052(%ebx)

	_05bd1d_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05bd64_func:
		push   %esi
		push   %edi
		mov    %ecx,%esi
		mov    (%eax),%eax
		mov    $0x00000f,%ecx
		and    $0x0000ff,%edx
		sub    %edx,%ecx
		lea    (%ecx,%ecx,1),%edx
		mov    $0x000003,%edi
		mov    %dl,%cl
		shl    %cl,%edi
		and    %edi,%eax
		sar    %cl,%eax
		mov    %eax,%edx
		and    $0x000002,%edx
		sar    %edx
		and    $0x000001,%eax
		mov    %edx,(%ebx)
		mov    %eax,(%esi)
		pop    %edi
		pop    %esi
		ret    

	_05bd98_jump:
		push   %ebx
		push   %ecx
		xor    %ebx,%ebx
		mov    %dl,%cl
		mov    %dx,%bx
		and    $0x000007,%cl
		sar    $0x000003,%ebx
		mov    $0x000001,%dl
		movswl %bx,%ebx
		shl    %cl,%dl
		or     %dl,(%ebx,%eax,1)
		pop    %ecx
		pop    %ebx
		ret    

	_05bdd8_jump:
		push   %ebx
		push   %ecx
		xor    %ebx,%ebx
		mov    %dx,%bx
		sar    $0x000003,%ebx
		mov    %dl,%cl
		movswl %bx,%ebx
		and    $0x000007,%cl
		add    %eax,%ebx
		mov    $0x000001,%al
		shl    %cl,%al
		and    (%ebx),%al
		pop    %ecx
		pop    %ebx
		ret    



_05be00_func:
		add    $0x000080,%eax
		and    $0x000001,%ah
		cmp    $0x000100,%ax
		jge    _05be25_jump
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05be1b_jump
		neg    %eax

	_05be1b_jump:
		cwtl   
		mov    _096bd4_data(,%eax,2),%ax
		ret    

	_05be25_jump:
		sub    $0x000180,%eax
		test   %ax,%ax
		jge    _05be32_jump
		neg    %eax

	_05be32_jump:
		cwtl   
		mov    _096bd4_data(,%eax,2),%ax
		neg    %eax
		ret    



_05be40_func:
		and    $0x000001,%ah
		cmp    $0x000100,%ax
		jge    _05be60_jump
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05be56_jump
		neg    %eax

	_05be56_jump:
		cwtl   
		mov    _096bd4_data(,%eax,2),%ax
		ret    

	_05be60_jump:
		sub    $0x000180,%eax
		test   %ax,%ax
		jge    _05be6d_jump
		neg    %eax

	_05be6d_jump:
		cwtl   
		mov    _096bd4_data(,%eax,2),%ax
		neg    %eax
		ret    



_05be7c_func:
		push   %ecx
		push   %esi
		push   %edi
		and    $0x000001,%ah
		cmp    $0x000100,%ax
		jge    _05beda_jump
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05beac_jump
		neg    %eax
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096bd4_data(,%esi,2),%cx
		mov    %cx,(%ebx)
		jmp    _05bec8_jump

	_05beac_jump:
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096bd4_data(,%esi,2),%cx
		mov    %ecx,%edi
		mov    %cx,(%ebx)
		neg    %edi
		mov    %di,(%ebx)

	_05bec8_jump:
		movswl %ax,%ebx
		mov    _096bd4_data(,%ebx,2),%ax
		mov    %ax,(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05beda_jump:
		sub    $0x000180,%eax
		test   %ax,%ax
		jge    _05bf00_jump
		neg    %eax
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096bd4_data(,%esi,2),%cx
		mov    %cx,(%ebx)
		neg    %ecx
		jmp    _05bf12_jump

	_05bf00_jump:
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096bd4_data(,%esi,2),%cx

	_05bf12_jump:
		mov    %cx,(%ebx)
		movswl %ax,%ebx
		mov    _096bd4_data(,%ebx,2),%ax
		mov    %eax,%esi
		mov    %ax,(%edx)
		neg    %esi
		mov    %si,(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05bf4c_func:
		add    $0x000080,%eax
		xor    %ah,%ah
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05bf60_jump
		neg    %eax

	_05bf60_jump:
		cwtl   
		mov    _096bd4_data(,%eax,2),%ax
		ret    



_05bf6c_func:
		push   %ecx
		xor    %ah,%ah
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05bf7c_jump
		neg    %eax

	_05bf7c_jump:
		cwtl   
		mov    _096bd4_data(,%eax,2),%cx
		mov    %cx,(%edx)
		mov    $0x000080,%edx
		sub    %eax,%edx
		mov    _096bd4_data(,%edx,2),%ax
		mov    %ax,(%ebx)
		pop    %ecx
		ret    



_05bfa0_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x00008d,%ax
		jb     _05c1f8_jump
		jbe    _05c42a_jump
		cmp    $0x0000c4,%ax
		jb     _05c0de_jump
		jbe    _05c479_jump
		cmp    $0x0000ea,%ax
		jb     _05c064_jump
		jbe    _05c1f4_jump
		cmp    $0x0000f6,%ax
		jb     _05c025_jump
		jbe    _05c46d_jump
		cmp    $0x0000fb,%ax
		jb     _05c007_jump
		jbe    _05c46d_jump
		cmp    $0x0000fc,%ax
		jbe    _05c475_jump
		cmp    $0x0000fd,%ax
		je     _05c452_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c007_jump:
		cmp    $0x0000f8,%ax
		jb     _05c479_jump
		jbe    _05c1f4_jump
		cmp    $0x0000f9,%ax
		je     _05c44e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c025_jump:
		cmp    $0x0000ef,%ax
		jb     _05c046_jump
		jbe    _05c44e_jump
		cmp    $0x0000f4,%ax
		jb     _05c479_jump
		jbe    _05c479_jump
		jmp    _05c42a_jump

	_05c046_jump:
		cmp    $0x0000ec,%ax
		jb     _05c479_jump
		jbe    _05c42a_jump
		cmp    $0x0000ee,%ax
		je     _05c42a_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c064_jump:
		cmp    $0x0000cb,%ax
		jb     _05c0b6_jump
		jbe    _05c44e_jump
		cmp    $0x0000d5,%ax
		jb     _05c09e_jump
		jbe    _05c42a_jump
		cmp    $0x0000dc,%ax
		jb     _05c479_jump
		cmp    $0x0000dd,%ax
		jbe    _05c1f4_jump
		cmp    $0x0000e0,%ax
		je     _05c1f4_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c09e_jump:
		cmp    $0x0000cc,%ax
		jbe    _05c42a_jump
		cmp    $0x0000d3,%ax
		je     _05c44e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c0b6_jump:
		cmp    $0x0000c6,%ax
		jb     _05c42e_jump
		jbe    _05c44e_jump
		cmp    $0x0000c7,%ax
		jbe    _05c42a_jump
		cmp    $0x0000c9,%ax
		jbe    _05c44e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c0de_jump:
		cmp    $0x0000a1,%ax
		jb     _05c178_jump
		jbe    _05c1f4_jump
		cmp    $0x0000b4,%ax
		jb     _05c140_jump
		jbe    _05c44e_jump
		cmp    $0x0000bb,%ax
		jb     _05c128_jump
		jbe    _05c44e_jump
		cmp    $0x0000be,%ax
		jb     _05c479_jump
		jbe    _05c44e_jump
		cmp    $0x0000c0,%ax
		jb     _05c479_jump
		cmp    $0x0000c2,%ax
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c128_jump:
		cmp    $0x0000b5,%ax
		jbe    _05c42a_jump
		cmp    $0x0000b7,%ax
		je     _05c44e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c140_jump:
		cmp    $0x0000a8,%ax
		jb     _05c16a_jump
		jbe    _05c1f4_jump
		cmp    $0x0000aa,%ax
		jb     _05c479_jump
		jbe    _05c1f4_jump
		cmp    $0x0000ad,%ax
		je     _05c471_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c16a_jump:
		cmp    $0x0000a4,%ax
		je     _05c42a_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c178_jump:
		cmp    $0x000094,%ax
		jb     _05c1ca_jump
		jbe    _05c471_jump
		cmp    $0x00009a,%ax
		jb     _05c1b2_jump
		cmp    $0x00009b,%ax
		jbe    _05c44e_jump
		cmp    $0x00009d,%ax
		jb     _05c479_jump
		jbe    _05c42e_jump
		cmp    $0x00009e,%ax
		je     _05c42a_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c1b2_jump:
		cmp    $0x000095,%ax
		jbe    _05c42e_jump
		cmp    $0x000096,%ax
		je     _05c1f4_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c1ca_jump:
		cmp    $0x00008f,%ax
		jb     _05c471_jump
		jbe    _05c1f4_jump
		cmp    $0x000092,%ax
		jb     _05c479_jump
		jbe    _05c1f4_jump
		cmpb   $0x000000,0x000076(%edx)
		jne    _05c42a_jump

	_05c1f4_jump:
		mov    $0x000002,%al
		pop    %edx
		ret    

	_05c1f8_jump:
		cmp    $0x00004b,%ax
		jb     _05c31e_jump
		jbe    _05c1f4_jump
		cmp    $0x000062,%ax
		jb     _05c29e_jump
		jbe    _05c42a_jump
		cmp    $0x000079,%ax
		jb     _05c260_jump
		jbe    _05c1f4_jump
		cmp    $0x000087,%ax
		jb     _05c242_jump
		jbe    _05c1f4_jump
		cmp    $0x000089,%ax
		jb     _05c479_jump
		jbe    _05c471_jump
		cmp    $0x00008a,%ax
		je     _05c44e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c242_jump:
		cmp    $0x00007b,%ax
		jb     _05c479_jump
		jbe    _05c432_jump
		cmp    $0x000085,%ax
		je     _05c44e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c260_jump:
		cmp    $0x00006e,%ax
		jb     _05c280_jump
		jbe    _05c1f4_jump
		cmp    $0x000070,%ax
		jbe    _05c46d_jump
		cmp    $0x000077,%ax
		je     _05c44e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c280_jump:
		cmp    $0x000066,%ax
		jb     _05c479_jump
		jbe    _05c1f4_jump
		cmp    $0x00006d,%ax
		je     _05c46d_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c29e_jump:
		cmp    $0x000056,%ax
		jb     _05c2e2_jump
		jbe    _05c44e_jump
		cmp    $0x00005f,%ax
		jb     _05c2c4_jump
		jbe    _05c471_jump
		cmp    $0x000060,%ax
		jbe    _05c46d_jump
		mov    $0x000003,%al
		pop    %edx
		ret    

	_05c2c4_jump:
		cmp    $0x000058,%ax
		jb     _05c479_jump
		jbe    _05c475_jump
		cmp    $0x00005a,%ax
		jb     _05c479_jump
		mov    $0x000002,%al
		pop    %edx
		ret    

	_05c2e2_jump:
		cmp    $0x00004e,%ax
		jb     _05c310_jump
		cmp    $0x00004f,%ax
		jbe    _05c1f4_jump
		cmp    $0x000052,%ax
		jb     _05c479_jump
		jbe    _05c471_jump
		cmp    $0x000053,%ax
		je     _05c1f4_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c310_jump:
		cmp    $0x00004d,%ax
		je     _05c44e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c31e_jump:
		cmp    $0x000029,%ax
		jb     _05c3b8_jump
		jbe    _05c1f4_jump
		cmp    $0x000030,%ax
		jb     _05c386_jump
		jbe    _05c1f4_jump
		cmp    $0x00003a,%ax
		jb     _05c368_jump
		cmp    $0x00003b,%ax
		jbe    _05c44e_jump
		cmp    $0x000042,%ax
		jb     _05c479_jump
		jbe    _05c44e_jump
		cmp    $0x000048,%ax
		jb     _05c479_jump
		mov    $0x000003,%al
		pop    %edx
		ret    

	_05c368_jump:
		cmp    $0x000037,%ax
		jb     _05c479_jump
		jbe    _05c471_jump
		cmp    $0x000039,%ax
		je     _05c1f4_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c386_jump:
		cmp    $0x00002c,%ax
		jb     _05c3aa_jump
		jbe    _05c44e_jump
		cmp    $0x00002d,%ax
		jbe    _05c1f4_jump
		cmp    $0x00002e,%ax
		je     _05c44e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c3aa_jump:
		cmp    $0x00002a,%ax
		je     _05c475_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c3b8_jump:
		cmp    $0x000013,%ax
		jb     _05c402_jump
		jbe    _05c1f4_jump
		cmp    $0x00001c,%ax
		jb     _05c3ea_jump
		jbe    _05c44e_jump
		cmp    $0x00001e,%ax
		jb     _05c479_jump
		jbe    _05c42a_jump
		cmp    $0x00001f,%ax
		je     _05c471_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c3ea_jump:
		cmp    $0x000014,%ax
		jbe    _05c46d_jump
		cmp    $0x000015,%ax
		je     _05c1f4_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c402_jump:
		cmp    $0x000004,%ax
		jb     _05c420_jump
		jbe    _05c475_jump
		cmp    $0x000007,%ax
		jb     _05c479_jump
		jbe    _05c46d_jump
		cmp    $0x00000b,%ax
		je     _05c1f4_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c420_jump:
		cmp    $0x000002,%ax
		je     _05c471_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c42a_jump:
		xor    %al,%al
		pop    %edx
		ret    

	_05c42e_jump:
		mov    $0x000001,%al
		pop    %edx
		ret    

	_05c432_jump:
		cmpw   $0x000001,_0cede4_data
		jne    _05c1f4_jump
		cmpw   $0x00000e,_0cedd0_data
		jne    _05c1f4_jump

	_05c44e_jump:
		mov    $0x000003,%al
		pop    %edx
		ret    

	_05c452_jump:
		mov    _0ced5e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05c466_jump
		mov    $0x000004,%eax
		pop    %edx
		ret    

	_05c466_jump:
		mov    $0x000007,%eax
		pop    %edx
		ret    

	_05c46d_jump:
		mov    $0x000005,%al
		pop    %edx
		ret    

	_05c471_jump:
		mov    $0x000006,%al
		pop    %edx
		ret    

	_05c475_jump:
		mov    $0x000007,%al
		pop    %edx
		ret    

	_05c479_jump:
		mov    $0x000004,%al
		pop    %edx
		ret    



_05c480_func:
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000001,_092264_data(,%eax,4)
		jne    _05c4a4_jump
		test   %ax,%ax
		je     _05c49e_jump
		cmp    $0x000009,%ax
		jne    _05c4b2_jump

	_05c49e_jump:
		cmpl   $0x000000,0x000028(%edx)
		jge    _05c4b2_jump

	_05c4a4_jump:
		movl   $0xffff8300,0x000028(%edx)
		movl   $0xffff8300,0x00002c(%edx)

	_05c4b2_jump:
		movw   $0x000000,0x00005a(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    0x00006d(%edx),%al
		mov    %al,0x00006f(%edx)
		mov    0x00006c(%edx),%al
		mov    %al,0x00006e(%edx)
		mov    0x000076(%edx),%al
		mov    %al,0x000077(%edx)
		mov    0x000060(%edx),%ax
		movl   $0x000001,0x000030(%edx)
		cmp    $0x000062,%ax
		jb     _05c62d_jump
		jbe    _05c753_jump
		cmp    $0x0000ae,%ax
		jb     _05c58d_jump
		jbe    _05c793_jump
		cmp    $0x0000d5,%ax
		jb     _05c545_jump
		jbe    _05c753_jump
		cmp    $0x0000e1,%ax
		jb     _05c536_jump
		jbe    _05c793_jump
		cmp    $0x0000e2,%ax
		jbe    _05c79f_jump
		cmp    $0x0000e3,%ax
		je     _05c769_jump
		jmp    _05c7d1_jump

	_05c536_jump:
		cmp    $0x0000d9,%ax
		je     _05c763_jump
		jmp    _05c7d1_jump

	_05c545_jump:
		cmp    $0x0000b8,%ax
		jb     _05c577_jump
		jbe    _05c79f_jump
		cmp    $0x0000bb,%ax
		jb     _05c7d1_jump
		jbe    _05c793_jump
		cmp    $0x0000d4,%ax
		je     _05c793_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c577_jump:
		cmp    $0x0000b7,%ax
		je     _05c76f_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c58d_jump:
		cmp    $0x00007a,%ax
		jb     _05c5e5_jump
		jbe    _05c787_jump
		cmp    $0x000099,%ax
		jb     _05c5cf_jump
		jbe    _05c75d_jump
		cmp    $0x0000a8,%ax
		jb     _05c7d1_jump
		cmp    $0x0000a9,%ax
		jbe    _05c7b7_jump
		cmp    $0x0000ac,%ax
		je     _05c77b_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c5cf_jump:
		cmp    $0x000096,%ax
		je     _05c763_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c5e5_jump:
		cmp    $0x000071,%ax
		jb     _05c617_jump
		jbe    _05c7c3_jump
		cmp    $0x000074,%ax
		jb     _05c7d1_jump
		jbe    _05c75d_jump
		cmp    $0x000078,%ax
		je     _05c787_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c617_jump:
		cmp    $0x000064,%ax
		je     _05c77b_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c62d_jump:
		cmp    $0x000032,%ax
		jb     _05c6d3_jump
		jbe    _05c769_jump
		cmp    $0x00003d,%ax
		jb     _05c691_jump
		jbe    _05c793_jump
		cmp    $0x000046,%ax
		jb     _05c67b_jump
		jbe    _05c763_jump
		cmp    $0x000048,%ax
		jb     _05c7d1_jump
		jbe    _05c787_jump
		cmp    $0x000051,%ax
		je     _05c7b7_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c67b_jump:
		cmp    $0x000041,%ax
		je     _05c769_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c691_jump:
		cmp    $0x000038,%ax
		jb     _05c6bd_jump
		jbe    _05c77b_jump
		cmp    $0x000039,%ax
		jbe    _05c7ab_jump
		cmp    $0x00003c,%ax
		je     _05c77b_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c6bd_jump:
		cmp    $0x000037,%ax
		je     _05c787_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c6d3_jump:
		cmp    $0x000014,%ax
		jb     _05c727_jump
		jbe    _05c76f_jump
		cmp    $0x000023,%ax
		jb     _05c711_jump
		jbe    _05c787_jump
		cmp    $0x000028,%ax
		jb     _05c7d1_jump
		jbe    _05c787_jump
		cmp    $0x00002b,%ax
		je     _05c787_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c711_jump:
		cmp    $0x000020,%ax
		je     _05c793_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c727_jump:
		cmp    $0x00000c,%ax
		jb     _05c741_jump
		jbe    _05c76f_jump
		cmp    $0x00000e,%ax
		je     _05c76f_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c741_jump:
		cmp    $0x000005,%ax
		je     _05c769_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c753_jump:
		call   _04e970_func
		jmp    _05c7d5_jump

	_05c75d_jump:
		movb   $0x0000c8,0x00007a(%edx)
		jmp    _05c7d5_jump

	_05c763_jump:
		movb   $0x0000a0,0x00007a(%edx)
		jmp    _05c7d5_jump

	_05c769_jump:
		movb   $0x00003c,0x00007a(%edx)
		jmp    _05c7d5_jump

	_05c76f_jump:
		movb   $0x0000b4,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c77b_jump:
		movb   $0x0000dc,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c787_jump:
		movb   $0x000064,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c793_jump:
		movb   $0x000096,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c79f_jump:
		movb   $0x000032,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c7ab_jump:
		movb   $0x0000fa,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c7b7_jump:
		movb   $0x000000,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c7c3_jump:
		movw   $0x000000,0x000050(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c7d1_jump:
		movb   $0x000028,0x00007a(%edx)

	_05c7d5_jump:
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

_05c7e0_switch:
		.long   _05ce10_case
		.long   _05ce1f_case
		.long   _05ce2e_case
		.long   _05ce3d_case
		.long   _05ce4c_case
		.long   _05ce61_case
		.long   _05ce70_case




_05c7fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		movw   $0x000000,0x000048(%eax)
		movl   $0x000000,0x000024(%eax)
		call   _05bfa0_func
		mov    %al,0x00007e(%ecx)
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		mov    _0930d6_data(,%eax,2),%ax
		mov    0x000060(%ecx),%dx
		mov    %ax,0x00005c(%ecx)
		cmp    $0x0000a3,%dx
		je     _05c842_jump
		mov    0x00006f(%ecx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%ecx),%al
		mov    %al,0x00006c(%ecx)

	_05c842_jump:
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00003c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		movw   $0x000000,0x000040(%ecx)
		add    %eax,%edx
		movw   $0x000000,0x000042(%ecx)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000002(%edx,%eax,8),%al
		movb   $0x000000,0x000073(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000000,0x000072(%ecx)
		movw   $0x00ffff,0x000056(%ecx)
		movw   $0x00ffff,0x00004a(%ecx)
		movb   $0x000000,0x00007b(%ecx)
		mov    %al,0x00006a(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x00ffff,0x000046(%ecx)
		and    $0x0000f7,%ah
		mov    0x000010(%ecx),%ebx
		mov    %ah,0x000081(%ecx)
		lea    0x000081(%ecx),%eax
		test   %ebx,%ebx
		setne  %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		mov    %dh,(%eax)
		shl    $0x000004,%dl
		mov    %dh,%bl
		or     %dl,%bl
		xor    %edx,%edx
		mov    %bl,(%eax)
		mov    $0x000005,%ebx
		lea    0x000062(%ecx),%eax
		call   _07c0b0_func
		mov    %ecx,%eax
		call   _05efbc_func
		movw   $0x000000,0x000058(%ecx)
		movb   $0x0000ff,0x00007c(%ecx)
		movl   $0x000001,0x000030(%ecx)
		mov    0x000077(%ecx),%al
		movb   $0x000000,0x00007f(%ecx)
		mov    %al,0x000076(%ecx)
		mov    0x000082(%ecx),%al
		movb   $0x000000,0x00007d(%ecx)
		and    $0x0000fe,%al
		mov    0x000081(%ecx),%bh
		mov    %al,0x000082(%ecx)
		and    $0x00003f,%bh
		mov    0x000060(%ecx),%ax
		mov    %bh,0x000081(%ecx)
		cmp    $0x0000af,%ax
		jb     _05ca94_jump
		cmp    $0x0000af,%ax
		jbe    _05ccd9_jump
		cmp    $0x0000df,%ax
		jb     _05c9e5_jump
		jbe    _05d021_jump
		cmp    $0x0000ed,%ax
		jb     _05c9a2_jump
		jbe    _05cf53_jump
		cmp    $0x0000f1,%ax
		jb     _05c98d_jump
		jbe    _05cf73_jump
		cmp    $0x0000fa,%ax
		jb     _05c97e_jump
		jbe    _05ccd9_jump
		cmp    $0x0000fc,%ax
		jbe    _05cc50_jump
		jmp    _05d021_jump

	_05c97e_jump:
		cmp    $0x0000f3,%ax
		je     _05cf53_jump
		jmp    _05d021_jump

	_05c98d_jump:
		cmp    $0x0000ef,%ax
		jb     _05d021_jump
		jbe    _05ce9d_jump
		jmp    _05cca5_jump

	_05c9a2_jump:
		cmp    $0x0000e4,%ax
		jb     _05c9c9_jump
		jbe    _05cc10_jump
		cmp    $0x0000e6,%ax
		jbe    _05ccd9_jump
		cmp    $0x0000eb,%ax
		je     _05cccc_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c9c9_jump:
		cmp    $0x0000e2,%ax
		jb     _05d021_jump
		jbe    _05cfb1_jump
		movb   $0x000002,_0cefc3_data
		jmp    _05cd7f_jump

	_05c9e5_jump:
		cmp    $0x0000bf,%ax
		jb     _05ca4c_jump
		jbe    _05cccc_jump
		cmp    $0x0000d4,%ax
		jb     _05ca2b_jump
		jbe    _05cfbf_jump
		cmp    $0x0000d9,%ax
		jb     _05ca1a_jump
		jbe    _05cfcc_jump
		cmp    $0x0000da,%ax
		je     _05cc65_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ca1a_jump:
		cmp    $0x0000d5,%ax
		je     _05cd1d_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ca2b_jump:
		cmp    $0x0000c5,%ax
		jb     _05d021_jump
		jbe    _05cf94_jump
		cmp    $0x0000ca,%ax
		je     _05cfed_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ca4c_jump:
		cmp    $0x0000b4,%ax
		jb     _05ca79_jump
		jbe    _05cc02_jump
		cmp    $0x0000b7,%ax
		jb     _05d021_jump
		jbe    _05cc02_jump
		cmp    $0x0000b8,%ax
		je     _05cfb1_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ca79_jump:
		cmp    $0x0000b0,%ax
		jbe    _05cca5_jump
		cmp    $0x0000b2,%ax
		je     _05cf73_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ca94_jump:
		cmp    $0x000048,%ax
		jb     _05cb67_jump
		jbe    _05ce92_jump
		cmp    $0x00007b,%ax
		jb     _05cb0f_jump
		jbe    _05cdf6_jump
		cmp    $0x000096,%ax
		jb     _05caee_jump
		jbe    _05cf80_jump
		cmp    $0x0000a8,%ax
		jb     _05cadd_jump
		cmp    $0x0000a9,%ax
		jbe    _05cf73_jump
		cmp    $0x0000aa,%ax
		je     _05cf94_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cadd_jump:
		cmp    $0x000098,%ax
		je     _05cf53_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05caee_jump:
		cmp    $0x000090,%ax
		jb     _05d021_jump
		jbe    _05cde9_jump
		cmp    $0x000091,%ax
		je     _05ce7f_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cb0f_jump:
		cmp    $0x00004d,%ax
		jb     _05cb46_jump
		jbe    _05ce9d_jump
		cmp    $0x000062,%ax
		jb     _05d021_jump
		jbe    _05cd17_jump
		cmp    $0x000074,%ax
		jb     _05d021_jump
		cmp    $0x000076,%ax
		jbe    _05cf6f_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cb46_jump:
		cmp    $0x00004a,%ax
		jb     _05d021_jump
		jbe    _05cc02_jump
		cmp    $0x00004b,%ax
		je     _05cf94_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cb67_jump:
		cmp    $0x00001c,%ax
		jb     _05cbbb_jump
		jbe    _05cec0_jump
		cmp    $0x000032,%ax
		jb     _05cba0_jump
		jbe    _05cd77_jump
		cmp    $0x000034,%ax
		jb     _05cd01_jump
		jbe    _05cd0c_jump
		cmp    $0x000035,%ax
		je     _05cd01_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cba0_jump:
		cmp    $0x00001d,%ax
		jbe    _05cf53_jump
		cmp    $0x000022,%ax
		je     _05cf53_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cbbb_jump:
		cmp    $0x000015,%ax
		jb     _05cbe8_jump
		jbe    _05cf61_jump
		cmp    $0x000019,%ax
		jb     _05d021_jump
		jbe    _05cf2f_jump
		cmp    $0x00001a,%ax
		je     _05cee4_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cbe8_jump:
		test   %ax,%ax
		jbe    _05cdd0_jump
		cmp    $0x000007,%ax
		je     _05cf61_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cc02_jump:
		mov    %ecx,%eax
		call   _071638_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cc10_jump:
		testb  $0x000004,_0ced89_data
		je     _05d021_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    %bx,_0cece4_data
		mov    $0x000002,%ebx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		movb   $0x000002,0x00006e(%ecx)
		call   _05f030_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cc50_jump:
		movw   $0x00fff1,0x00003c(%ecx)
		mov    0x00003c(%ecx),%ax
		cwtl   
		mov    %eax,0x000028(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cc65_jump:
		mov    0x000028(%ecx),%ax
		xor    %edx,%edx
		xor    %esi,%esi
		mov    %ax,_0ceda4_data
		mov    0x000069(%ecx),%dl
		mov    $_0cdba4_data,%eax
		mov    $0x004000,%ecx
		call   _0188d0_func
		sub    %edx,%eax
		mov    %ecx,_0cdb10_data
		add    $0x000010,%eax
		mov    %esi,_0cdb18_data
		mov    %ax,_0ced9e_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cca5_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		dec    %eax
		cwtl   
		call   _069140_func
		mov    %al,0x00006b(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cccc_jump:
		mov    0x000076(%ecx),%al
		mov    %al,0x00006b(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ccd9_jump:
		mov    0x000076(%ecx),%al
		mov    0x000081(%ecx),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,0x000081(%ecx)
		or     %al,%bl
		mov    %bl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cd01_jump:
		movb   $0x000005,0x000072(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cd0c_jump:
		movb   $0x00000a,0x000072(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cd17_jump:
		movw   $0x0000d5,0x000060(%ecx)

	_05cd1d_jump:
		mov    $0x000001,%edx
		mov    $0x004000,%edi
		mov    %ecx,%eax
		mov    $0x0000ff,%bh
		call   _04f2ac_func
		mov    %ecx,%eax
		xor    %ebp,%ebp
		call   _018a8c_func
		mov    %edi,_0cdb10_data
		mov    %ebp,_0cdb18_data
		mov    %bh,_0cefc2_data
		mov    %bh,_0cefbe_data
		xor    %al,%al
		movb   $0x0000b4,0x00007f(%ecx)
		mov    %al,_0cefeb_data
		mov    %al,_0cefbd_data
		mov    %al,_0cefc4_data
		mov    %al,_0cefc1_data
		mov    %al,_0cefc3_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cd77_jump:
		xor    %dh,%dh
		mov    %dh,_0cefc3_data

	_05cd7f_jump:
		mov    %ecx,%eax
		movw   $0x0000ff,0x00005a(%ecx)
		call   _018a8c_func
		xor    %edx,%edx
		xor    %bl,%bl
		mov    $0x004000,%eax
		mov    %edx,_0cdb18_data
		mov    %bl,_0cefeb_data
		movb   $0x000064,0x00007f(%ecx)
		mov    $0x0000ff,%cl
		xor    %bh,%bh
		mov    %eax,_0cdb10_data
		mov    %bh,_0cefbd_data
		mov    %cl,_0cefbe_data
		xor    %al,%al
		xor    %ch,%ch
		mov    %al,_0cefc1_data
		mov    %ch,_0cefc4_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cdd0_jump:
		mov    0x000081(%ecx),%al
		movb   $0x00001e,0x000074(%ecx)
		and    $0x0000df,%al
		mov    %al,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cde9_jump:
		movw   $0x000000,0x000056(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cdf6_jump:
		mov    0x000075(%ecx),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _05d021_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05c7e0_switch(,%eax,4)

	_05ce10_case:
		movb   $0x000002,0x00007d(%ecx)
		movb   $0x000000,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ce1f_case:
		movb   $0x000008,0x00007d(%ecx)
		movb   $0x00003c,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ce2e_case:
		movb   $0x000018,0x00007d(%ecx)
		movb   $0x0000aa,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ce3d_case:
		movb   $0x00000a,0x00007d(%ecx)
		movb   $0x000064,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ce4c_case:
		movw   $0x000000,0x00004a(%ecx)
		movb   $0x000001,0x00007d(%ecx)
		movb   $0x000000,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ce61_case:
		movb   $0x000004,0x00007d(%ecx)
		movb   $0x00003c,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ce70_case:
		movb   $0x000024,0x00007d(%ecx)
		movb   $0x000078,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ce7f_jump:
		movw   $0x000028,0x000050(%ecx)
		movw   $0x000028,0x000056(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ce92_jump:
		movb   $0x000001,0x00007d(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ce9d_jump:
		mov    0x00006e(%ecx),%ah
		xor    %edx,%edx
		cmp    $0x00000e,%ah
		sete   %dl
		mov    %ecx,%eax
		call   _03c9c0_func
		movw   $0x000000,0x000056(%ecx)
		movb   $0x000050,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cec0_jump:
		movw   $0x000064,0x00004a(%ecx)
		mov    0x000081(%ecx),%dl
		mov    0x00004a(%ecx),%ax
		or     $0x000004,%dl
		mov    %ax,0x000056(%ecx)
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cee4_jump:
		cmpw   $0x000001,_0cede4_data
		je     _05cf07_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d224_func
		sub    $0x000002,%eax
		mov    %ax,0x000050(%ecx)
		mov    %ax,0x000056(%ecx)
		jmp    _05cf13_jump

	_05cf07_jump:
		movw   $0x000028,0x000050(%ecx)
		movw   $0x000014,0x000056(%ecx)

	_05cf13_jump:
		mov    0x000081(%ecx),%dh
		movw   $0x000014,0x000052(%ecx)
		or     $0x000024,%dh
		mov    %dh,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cf2f_jump:
		movw   $0x00000f,0x00004a(%ecx)
		mov    0x000081(%ecx),%bl
		mov    0x00004a(%ecx),%ax
		or     $0x000004,%bl
		mov    %ax,0x000056(%ecx)
		mov    %bl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cf53_jump:
		movw   $0x000001,0x00004a(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000056(%ecx)

	_05cf61_jump:
		orb    $0x000004,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cf6f_jump:
		movb   $0x000000,0x00007d(%ecx)

	_05cf73_jump:
		movw   $0x000000,0x000052(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cf80_jump:
		movb   $0x0000a0,0x00007a(%ecx)
		xor    %ecx,%ecx
		mov    %cx,_0ced6e_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cf94_jump:
		mov    0x000081(%ecx),%dl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cfb1_jump:
		orb    $0x000008,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cfbf_jump:
		movw   $0x000000,0x000050(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cfcc_jump:
		mov    0x00000c(%ecx),%eax
		mov    0x000004(%eax),%eax
		andb   $0x0000ef,0x000007(%eax)
		mov    0x00000c(%ecx),%eax
		mov    0x000004(%eax),%eax
		andb   $0x0000ef,0x000017(%eax)
		movw   $0x000000,0x00004a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cfed_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _05d001_jump
		cmpb   $0x000039,0x00006c(%ecx)
		jne    _05d001_jump
		mov    %ecx,_0cdc2c_data
		jmp    _05d007_jump

	_05d001_jump:
		mov    %ecx,_0cdc28_data

	_05d007_jump:
		movb   $0x000003,0x00007e(%ecx)
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)

	_05d021_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d028_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    _0cc304_data,%cx
		mov    %dx,_0cc2fc_data
		mov    %dx,_0cc30c_data
		test   %cx,%cx
		jle    _05d071_jump
		xor    %ecx,%ecx

	_05d04d_jump:
		mov    _0cc2f8_data,%ebx
		movswl %dx,%eax
		mov    %cx,(%ebx,%eax,2)
		mov    _0cc308_data,%ebx
		mov    _0cc304_data,%si
		inc    %edx
		mov    %cx,(%ebx,%eax,2)
		cmp    %si,%dx
		jl     _05d04d_jump

	_05d071_jump:
		mov    _0cc300_data,%ebx
		mov    _0cc304_data,%ax
		xor    %edx,%edx
		mov    %eax,(%esp)
		test   %ax,%ax
		jle    _05d109_jump

	_05d08b_jump:
		cmpw   $0x000000,_0ced5e_data
		jne    _05d0b4_jump
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000002,_092265_data(,%eax,4)
		je     _05d0b4_jump
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		call   _0713e8_func
		test   %al,%al
		jne    _05d0fa_jump

	_05d0b4_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000001,_092264_data(,%eax,4)
		je     _05d0e0_jump
		mov    _0cc2fc_data,%ax
		movswl %ax,%ecx
		inc    %eax
		mov    _0cc2f8_data,%esi
		mov    %ax,_0cc2fc_data
		mov    %dx,(%esi,%ecx,2)
		jmp    _05d0fa_jump

	_05d0e0_jump:
		mov    _0cc30c_data,%ax
		mov    _0cc308_data,%ecx
		movswl %ax,%esi
		inc    %eax
		mov    %dx,(%ecx,%esi,2)
		mov    %ax,_0cc30c_data

	_05d0fa_jump:
		mov    (%esp),%eax
		inc    %edx
		add    $0x000084,%ebx
		cmp    %ax,%dx
		jl     _05d08b_jump

	_05d109_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d114_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %al,0x00000c(%esp)
		mov    $0xffffffff,%edx
		xor    %ah,%ah
		xor    %esi,%esi
		mov    %dx,(%esp)
		mov    %edx,%ebx
		mov    %dx,0x000008(%esp)
		mov    %ah,_0cefa9_data
		mov    %ah,_0cefd0_data
		mov    %ah,_0cefeb_data
		mov    %dx,_0cedee_data
		mov    %si,_0cedce_data
		mov    %dx,_0cedec_data
		mov    %dx,_0ceddc_data
		mov    %dx,_0ced82_data
		mov    %dx,_0ced9a_data
		mov    %dx,_0cede0_data
		mov    %dx,_0cedd6_data
		mov    %dx,_0cedcc_data
		mov    %dx,_0ced60_data
		mov    %dx,_0ced64_data
		mov    %dx,_0cee12_data
		mov    %dx,_0cede6_data
		mov    %dx,_0cee22_data
		mov    %dx,_0ced6c_data
		mov    %dx,_0cee26_data
		mov    %dx,_0cee30_data
		mov    %dx,_0cee1e_data
		mov    %dx,_0cee2e_data
		mov    %dx,_0cee24_data
		mov    _0cc300_data,%eax
		xor    %dl,%bl
		mov    %edx,%esi
		mov    %bl,_0cefab_data
		xor    %edx,%esi
		mov    _0cc304_data,%dx
		mov    %eax,%ecx
		mov    %edx,0x000004(%esp)
		test   %dx,%dx
		jle    _05e02e_jump
		lea    0x000081(%eax),%edi

	_05d200_jump:
		mov    0x00000c(%esp),%al
		mov    %si,0x000034(%ecx)
		test   %al,%al
		je     _05d213_jump
		mov    %ecx,%eax
		call   _05c480_func

	_05d213_jump:
		mov    0x000060(%ecx),%bx
		movw   $0x000000,0x00005e(%ecx)
		cmp    $0x0000a3,%bx
		jne    _05d230_jump
		mov    0x00006f(%ecx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%ecx),%al
		mov    %al,0x00006c(%ecx)

	_05d230_jump:
		mov    %ecx,%eax
		call   _05c7fc_func
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000001,_092264_data(,%eax,4)
		je     _05d266_jump
		movl   $0xffff8300,0x000028(%ecx)
		mov    0x000081(%ecx),%bl
		movl   $0xffff8300,0x00002c(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _05d26d_jump

	_05d266_jump:
		orb    $0x000004,0x000081(%ecx)

	_05d26d_jump:
		mov    0x000060(%ecx),%ax
		cmp    $0x000077,%ax
		jb     _05d4f9_jump
		jbe    _05dde4_jump
		cmp    $0x0000c4,%ax
		jb     _05d3bf_jump
		cmp    $0x0000c5,%ax
		jbe    _05dde4_jump
		cmp    $0x0000dc,%ax
		jb     _05d33f_jump
		jbe    _05d8a5_jump
		cmp    $0x0000ee,%ax
		jb     _05d2fb_jump
		jbe    _05ddcd_jump
		cmp    $0x0000f6,%ax
		jb     _05d2dc_jump
		jbe    _05d7cf_jump
		cmp    $0x0000f9,%ax
		jb     _05df8a_jump
		jbe    _05d75b_jump
		cmp    $0x000101,%ax
		je     _05d7af_jump
		jmp    _05df8a_jump

	_05d2dc_jump:
		cmp    $0x0000f2,%ax
		jb     _05df8a_jump
		jbe    _05d937_jump
		cmp    $0x0000f4,%ax
		je     _05dde4_jump
		jmp    _05df8a_jump

	_05d2fb_jump:
		cmp    $0x0000e7,%ax
		jb     _05d320_jump
		jbe    _05d833_jump
		cmp    $0x0000e8,%ax
		jbe    _05d866_jump
		cmp    $0x0000e9,%ax
		je     _05dde4_jump
		jmp    _05df8a_jump

	_05d320_jump:
		cmp    $0x0000df,%ax
		jb     _05df8a_jump
		jbe    _05d7de_jump
		cmp    $0x0000e0,%ax
		je     _05ddcd_jump
		jmp    _05df8a_jump

	_05d33f_jump:
		cmp    $0x0000cd,%ax
		jb     _05d38f_jump
		jbe    _05dd41_jump
		cmp    $0x0000d7,%ax
		jb     _05d36c_jump
		jbe    _05dde4_jump
		cmp    $0x0000da,%ax
		jb     _05df8a_jump
		jbe    _05d809_jump
		jmp    _05d8b7_jump

	_05d36c_jump:
		cmp    $0x0000ce,%ax
		jbe    _05dde4_jump
		cmp    $0x0000d1,%ax
		jb     _05df8a_jump
		cmp    $0x0000d2,%ax
		jbe    _05dde4_jump
		jmp    _05df8a_jump

	_05d38f_jump:
		cmp    $0x0000c8,%ax
		jb     _05d3b0_jump
		jbe    _05dec3_jump
		cmp    $0x0000cb,%ax
		jb     _05df8a_jump
		jbe    _05ddcd_jump
		jmp    _05de10_jump

	_05d3b0_jump:
		cmp    $0x0000c6,%ax
		je     _05dec3_jump
		jmp    _05df8a_jump

	_05d3bf_jump:
		cmp    $0x000093,%ax
		jb     _05d469_jump
		jbe    _05dbc8_jump
		cmp    $0x0000ad,%ax
		jb     _05d42f_jump
		jbe    _05df37_jump
		cmp    $0x0000bb,%ax
		jb     _05d410_jump
		jbe    _05df50_jump
		cmp    $0x0000be,%ax
		jb     _05df8a_jump
		jbe    _05de41_jump
		cmp    $0x0000c0,%ax
		jb     _05df8a_jump
		cmp    $0x0000c2,%ax
		jbe    _05dde4_jump
		jmp    _05df8a_jump

	_05d410_jump:
		cmp    $0x0000b3,%ax
		jb     _05df8a_jump
		jbe    _05d937_jump
		cmp    $0x0000ba,%ax
		je     _05dde4_jump
		jmp    _05df8a_jump

	_05d42f_jump:
		cmp    $0x000099,%ax
		jb     _05d45a_jump
		jbe    _05dbbc_jump
		cmp    $0x00009d,%ax
		jb     _05df8a_jump
		jbe    _05d959_jump
		cmp    $0x0000a5,%ax
		je     _05dcf2_jump
		jmp    _05df8a_jump

	_05d45a_jump:
		cmp    $0x000094,%ax
		je     _05dee8_jump
		jmp    _05df8a_jump

	_05d469_jump:
		cmp    $0x000088,%ax
		jb     _05d4b5_jump
		jbe    _05dc42_jump
		cmp    $0x00008f,%ax
		jb     _05d496_jump
		jbe    _05dde4_jump
		cmp    $0x000091,%ax
		jb     _05df8a_jump
		jbe    _05ddbc_jump
		jmp    _05dde4_jump

	_05d496_jump:
		cmp    $0x00008b,%ax
		jb     _05df8a_jump
		jbe    _05dde4_jump
		cmp    $0x00008e,%ax
		je     _05dee8_jump
		jmp    _05df8a_jump

	_05d4b5_jump:
		cmp    $0x000082,%ax
		jb     _05d4e0_jump
		jbe    _05dde4_jump
		cmp    $0x000085,%ax
		jb     _05df8a_jump
		jbe    _05d774_jump
		cmp    $0x000087,%ax
		je     _05dde4_jump
		jmp    _05df8a_jump

	_05d4e0_jump:
		cmp    $0x000079,%ax
		jb     _05df8a_jump
		cmp    $0x00007a,%ax
		jbe    _05dde4_jump
		jmp    _05df8a_jump

	_05d4f9_jump:
		cmp    $0x00003b,%ax
		jb     _05d62f_jump
		jbe    _05dde4_jump
		cmp    $0x00005a,%ax
		jb     _05d5a1_jump
		cmp    $0x00005d,%ax
		jbe    _05dde4_jump
		cmp    $0x00006c,%ax
		jb     _05d55d_jump
		jbe    _05dde4_jump
		cmp    $0x00006f,%ax
		jb     _05d54e_jump
		jbe    _05decf_jump
		cmp    $0x000070,%ax
		jbe    _05dde4_jump
		cmp    $0x000073,%ax
		je     _05dde4_jump
		jmp    _05df8a_jump

	_05d54e_jump:
		cmp    $0x00006d,%ax
		jbe    _05dee8_jump
		jmp    _05dde4_jump

	_05d55d_jump:
		cmp    $0x000061,%ax
		jb     _05d588_jump
		jbe    _05dde4_jump
		cmp    $0x000063,%ax
		jb     _05df8a_jump
		jbe    _05dc64_jump
		cmp    $0x000066,%ax
		je     _05dde4_jump
		jmp    _05df8a_jump

	_05d588_jump:
		cmp    $0x00005e,%ax
		jbe    _05dd57_jump
		cmp    $0x000060,%ax
		je     _05d7be_jump
		jmp    _05df8a_jump

	_05d5a1_jump:
		cmp    $0x000047,%ax
		jb     _05d5fb_jump
		jbe    _05dde4_jump
		cmp    $0x000051,%ax
		jb     _05d5d2_jump
		jbe    _05dd01_jump
		cmp    $0x000052,%ax
		jbe    _05dee8_jump
		cmp    $0x000053,%ax
		je     _05dde4_jump
		jmp    _05df8a_jump

	_05d5d2_jump:
		cmp    $0x000049,%ax
		jb     _05df8a_jump
		jbe    _05dde4_jump
		cmp    $0x00004e,%ax
		jb     _05df8a_jump
		cmp    $0x00004f,%ax
		jbe    _05dde4_jump
		jmp    _05df8a_jump

	_05d5fb_jump:
		cmp    $0x000040,%ax
		jb     _05d620_jump
		jbe    _05dca7_jump
		cmp    $0x000041,%ax
		jbe    _05ddd9_jump
		cmp    $0x000042,%ax
		je     _05dde4_jump
		jmp    _05df8a_jump

	_05d620_jump:
		cmp    $0x00003e,%ax
		je     _05dde4_jump
		jmp    _05df8a_jump

	_05d62f_jump:
		cmp    $0x00001f,%ax
		jb     _05d6d7_jump
		jbe    _05df22_jump
		cmp    $0x000026,%ax
		jb     _05d693_jump
		jbe    _05ddcd_jump
		cmp    $0x00002e,%ax
		jb     _05d67a_jump
		jbe    _05dec3_jump
		cmp    $0x000033,%ax
		jb     _05df8a_jump
		cmp    $0x000034,%ax
		jbe    _05dde4_jump
		cmp    $0x000037,%ax
		je     _05def1_jump
		jmp    _05df8a_jump

	_05d67a_jump:
		cmp    $0x000027,%ax
		jbe    _05ddc7_jump
		cmp    $0x00002c,%ax
		je     _05dde4_jump
		jmp    _05df8a_jump

	_05d693_jump:
		cmp    $0x000021,%ax
		jb     _05df59_jump
		jbe    _05dde4_jump
		cmp    $0x000024,%ax
		jb     _05df8a_jump
		jbe    _05dde4_jump
		mov    _0ced80_data,%dh
		mov    (%edi),%bl
		test   $0x000040,%dh
		sete   %dl
		and    $0x0000fb,%bl
		and    $0x000001,%dl
		mov    %bl,(%edi)
		shl    $0x000002,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%edi)
		jmp    _05df8a_jump

	_05d6d7_jump:
		cmp    $0x00000d,%ax
		jb     _05d727_jump
		jbe    _05dde4_jump
		cmp    $0x000014,%ax
		jb     _05d708_jump
		jbe    _05de03_jump
		cmp    $0x000015,%ax
		jbe    _05df4a_jump
		cmp    $0x000017,%ax
		je     _05dd26_jump
		jmp    _05df8a_jump

	_05d708_jump:
		cmp    $0x00000f,%ax
		jb     _05df8a_jump
		jbe    _05dde4_jump
		cmp    $0x000013,%ax
		je     _05dce6_jump
		jmp    _05df8a_jump

	_05d727_jump:
		cmp    $0x000009,%ax
		jb     _05d74c_jump
		jbe    _05dcf2_jump
		cmp    $0x00000a,%ax
		jbe    _05de6e_jump
		cmp    $0x00000b,%ax
		je     _05dd9d_jump
		jmp    _05df8a_jump

	_05d74c_jump:
		cmp    $0x000003,%ax
		je     _05ddeb_jump
		jmp    _05df8a_jump

	_05d75b_jump:
		cmpb   $0x000002,0x00006e(%ecx)
		jne    _05df8a_jump
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cee22_data
		jmp    _05df8a_jump

	_05d774_jump:
		testb  $0x000008,_0ced80_data
		jne    _05ddcd_jump
		mov    _0ced89_data,%al
		mov    0x000081(%ecx),%dl
		shl    $0x000004,%al
		and    $0x0000fb,%dl
		shr    $0x000007,%al
		mov    %dl,0x000081(%ecx)
		and    $0x000001,%al
		mov    %dl,%dh
		shl    $0x000002,%al
		or     %al,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _05df8a_jump

	_05d7af_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0ced6c_data
		jmp    _05df8a_jump

	_05d7be_jump:
		movw   $0x000000,0x000050(%ecx)
		movw   $0x000000,0x000056(%ecx)
		jmp    _05df8a_jump

	_05d7cf_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cee24_data
		jmp    _05df8a_jump

	_05d7de_jump:
		movw   $0x000000,0x000050(%ecx)
		mov    0x000034(%ecx),%ax
		mov    0x000081(%ecx),%bh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %ax,_0cee26_data
		mov    %bh,0x000081(%ecx)
		jmp    _05df8a_jump

	_05d809_jump:
		mov    0x000034(%ecx),%ax
		movw   $0x000000,0x000050(%ecx)
		mov    %ax,_0cee2e_data
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%ecx)
		jmp    _05df8a_jump

	_05d833_jump:
		movw   $0x000000,0x000050(%ecx)
		mov    0x000034(%ecx),%ax
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		mov    %ax,_0cee30_data
		and    $0x0000fb,%dh
		mov    0x000034(%ecx),%ax
		mov    %dh,0x000081(%ecx)
		mov    %ax,(%esp)
		jmp    _05df8a_jump

	_05d866_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cee1e_data
		mov    0x000034(%ecx),%ax
		mov    %ax,0x000008(%esp)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000050(%ecx)
		or     $0x000008,%ah
		movl   $0x000000,0x000024(%ecx)
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)
		jmp    _05df8a_jump

	_05d8a5_jump:
		mov    %si,_0cede6_data
		movw   $0x000000,0x000056(%ecx)
		jmp    _05df8a_jump

	_05d8b7_jump:
		xor    %eax,%eax
		mov    0x000077(%ecx),%al
		sar    $0x000002,%eax
		mov    %al,0x000076(%ecx)
		mov    _0cede4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05df8a_jump
		mov    _0cede4_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%edx
		add    %eax,%edx
		mov    0x000028(%ecx),%eax
		cmp    0x000028(%edx),%eax
		jge    _05d90e_jump
		mov    _0cede4_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%edx
		mov    0x00002c(%edx,%eax,1),%eax
		add    $0x000070,%eax
		jmp    _05d929_jump

	_05d90e_jump:
		mov    _0cede4_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%edx
		mov    0x00002c(%edx,%eax,1),%eax
		add    $0x000078,%eax

	_05d929_jump:
		mov    %eax,0x00002c(%ecx)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		jmp    _05df87_jump

	_05d937_jump:
		mov    0x00001c(%ecx),%ebp
		test   %ebp,%ebp
		jne    _05df8a_jump
		mov    0x000081(%ecx),%bh
		mov    %ebp,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%ecx)
		jmp    _05df8a_jump

	_05d959_jump:
		cmpb   $0x000000,0x000076(%ecx)
		je     _05da55_jump
		mov    _0cee0e_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    _0cede4_data,%bx
		mov    %edx,0x000028(%ecx)
		cmp    $0x000001,%bx
		jne    _05d9a5_jump
		testb  $0x000040,_0ced80_data
		je     _05d990_jump
		movb   $0x000001,0x000076(%ecx)

	_05d990_jump:
		mov    _0cedd8_data,%eax
		sar    $0x000010,%eax
		add    $0x0000c8,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _05da26_jump

	_05d9a5_jump:
		mov    0x000028(%ecx),%ax
		movb   $0x000000,0x000076(%ecx)
		mov    %ax,0x000050(%ecx)
		cmp    $0x000003,%bx
		jne    _05d9c1_jump
		cmpw   $0x000007,_0cedd0_data
		je     _05da20_jump

	_05d9c1_jump:
		mov    _0cedd8_data,%eax
		sar    $0x000010,%eax
		add    $0x000078,%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0cedda_data,%ax
		add    $0x000078,%eax
		mov    _0cede4_data,%bx
		mov    %ax,0x00003e(%ecx)
		cmp    $0x000005,%bx
		jne    _05d9f5_jump
		cmpw   $0x000008,_0cedd0_data
		je     _05d9ff_jump

	_05d9f5_jump:
		cmpw   $0x000004,_0cede4_data
		jne    _05da26_jump

	_05d9ff_jump:
		mov    _0cedd8_data,%eax
		sar    $0x000010,%eax
		add    $0x000082,%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0cedda_data,%ax
		add    $0x000082,%eax
		mov    %ax,0x00003e(%ecx)
		jmp    _05da26_jump

	_05da20_jump:
		movw   $0x000000,0x00003a(%ecx)

	_05da26_jump:
		movl   $0x000001,0x000024(%ecx)
		mov    %si,_0cedd6_data
		mov    0x000081(%ecx),%dl
		movw   $0x000000,0x000056(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01db8c_func
		jmp    _05df8a_jump

	_05da55_jump:
		mov    _0cedd4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05dba1_jump
		cmpw   $0x000001,_0cede4_data
		je     _05dba1_jump
		mov    _0cedd4_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    0x000081(%ecx),%dl
		movw   $0x000000,0x000042(%ecx)
		and    $0x0000f7,%dl
		mov    %dl,0x000081(%ecx)
		mov    _0cc300_data,%edx
		movw   $0x000000,0x000040(%ecx)
		addw   $0x000065,0x000050(%edx,%eax,1)
		mov    0x00004e(%edx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0cedd4_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    0x00002c(%edx,%eax,1),%eax
		mov    %eax,0x00002c(%ecx)
		cmpw   $0x000003,_0cede4_data
		jne    _05dadc_jump
		cmpw   $0x000007,_0cedd0_data
		je     _05db46_jump

	_05dadc_jump:
		mov    _0cedda_data,%ax
		add    $0x000078,%eax
		mov    _0cede4_data,%bx
		mov    %ax,0x00003e(%ecx)
		cmp    $0x000004,%bx
		jne    _05db07_jump
		mov    _0cedda_data,%ax
		add    $0x000082,%eax
		mov    %ax,0x00003e(%ecx)

	_05db07_jump:
		cmpw   $0x000005,_0cede4_data
		jne    _05db54_jump
		cmpw   $0x000008,_0cedd0_data
		jne    _05db54_jump
		mov    _0cedd4_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%ebx
		mov    _0cc300_data,%edx
		mov    0x00002c(%edx,%ebx,1),%edx
		add    %eax,%edx
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		mov    0x00002c(%ecx),%ax
		jmp    _05db50_jump

	_05db46_jump:
		mov    0x00002c(%ecx),%ax
		movw   $0x000000,0x00003a(%ecx)

	_05db50_jump:
		mov    %ax,0x00003e(%ecx)

	_05db54_jump:
		mov    %ecx,%eax
		call   _01db8c_func
		mov    _0cedd4_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		orb    $0x000004,0x000081(%ecx)
		mov    _0cc300_data,%edx
		movl   $0x000001,0x000024(%ecx)
		mov    0x000076(%edx,%eax,1),%bl
		inc    %bl
		mov    %bl,0x000076(%edx,%eax,1)
		mov    %bl,0x00006c(%ecx)
		cmp    $0x000003,%bl
		jbe    _05db96_jump
		mov    %bl,%al
		sub    $0x000004,%al
		mov    %al,0x00006c(%ecx)

	_05db96_jump:
		movw   $0x000000,0x000056(%ecx)
		jmp    _05df8a_jump

	_05dba1_jump:
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _05df8a_jump

	_05dbbc_jump:
		mov    %si,_0cede0_data
		jmp    _05df8a_jump

	_05dbc8_jump:
		cmpb   $0x000000,0x000076(%ecx)
		jne    _05df8a_jump
		mov    _0cdbcc_data,%ax
		sub    $0x0000c8,%eax
		mov    %ax,0x00003c(%ecx)
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0cdbd0_data,%eax
		mov    $0x000009,%ebx
		sub    $0x000032,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01d374_func
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		movl   $0x000001,0x000024(%ecx)
		movw   $0x000000,0x000050(%ecx)
		movw   $0x000000,0x000052(%ecx)
		mov    0x000081(%ecx),%bl
		movb   $0x000000,0x00007f(%ecx)
		or     $0x000008,%bl
		mov    %si,_0cedcc_data
		mov    %bl,0x000081(%ecx)
		jmp    _05df8a_jump

	_05dc42_jump:
		mov    0x000081(%ecx),%bh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %si,_0ceddc_data
		mov    %bh,0x000081(%ecx)
		jmp    _05df8a_jump

	_05dc64_jump:
		cmpb   $0x000000,_0ce039_data
		je     _05dc7e_jump
		cmpw   $0x000000,_0ced5e_data
		jne    _05dc7e_jump
		andb   $0x0000fb,0x000081(%ecx)

	_05dc7e_jump:
		mov    0x00006d(%ecx),%al
		test   %al,%al
		jbe    _05dc8e_jump
		cmp    $0x000005,%al
		je     _05dc9e_jump
		jmp    _05df8a_jump

	_05dc8e_jump:
		movb   $0x000000,0x00007f(%ecx)
		movl   $0x000000,0x000024(%ecx)
		jmp    _05df8a_jump

	_05dc9e_jump:
		movb   $0x00001e,0x00007f(%ecx)
		jmp    _05df8a_jump

	_05dca7_jump:
		mov    _0cedcc_data,%eax
		sar    $0x000010,%eax
		mov    %si,_0cdb34_data(,%eax,2)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0cedce_data,%ax
		inc    %eax
		mov    %ax,_0cedce_data
		cmp    $0x000032,%ax
		jl     _05dce6_jump
		mov    $_0c0d40_data,%eax
		call   _01f3a4_func

	_05dce6_jump:
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _05df8a_jump

	_05dcf2_jump:
		mov    0x00000c(%ecx),%eax
		mov    0x000008(%eax),%eax
		movb   $0x000000,0x000016(%eax)
		jmp    _05df8a_jump

	_05dd01_jump:
		mov    _0cefd0_data,%al
		mov    _0cefd0_data,%dh
		and    $0x0000ff,%eax
		inc    %dh
		mov    %si,_0cdb30_data(,%eax,2)
		mov    %dh,_0cefd0_data
		jmp    _05df8a_jump

	_05dd26_jump:
		mov    0x000081(%ecx),%dl
		and    $0x0000fb,%dl
		mov    %si,_0cedec_data
		mov    %dl,0x000081(%ecx)
		jmp    _05df8a_jump

	_05dd41_jump:
		andb   $0x0000fb,0x000081(%ecx)
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cee14_data
		jmp    _05df8a_jump

	_05dd57_jump:
		mov    _0cdcd0_data,%al
		mov    %al,0x00006e(%ecx)
		mov    %si,_0cede2_data
		mov    %al,0x00006c(%ecx)
		mov    _0cede0_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%edx
		add    %eax,%edx
		mov    %edx,_0cdc30_data
		mov    0x000081(%ecx),%dl
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)
		jmp    _05df8a_jump

	_05dd9d_jump:
		mov    0x000081(%ecx),%bh
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%bh
		mov    %si,_0cedd2_data
		mov    %bh,0x000081(%ecx)
		jmp    _05df8a_jump

	_05ddbc_jump:
		movw   $0x000028,0x000056(%ecx)
		jmp    _05df8a_jump

	_05ddc7_jump:
		movw   $0x000000,0x000056(%ecx)

	_05ddcd_jump:
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _05df8a_jump

	_05ddd9_jump:
		movw   $0x000000,0x000052(%ecx)
		jmp    _05df8a_jump

	_05dde4_jump:
		movl   $0x000000,0x000024(%ecx)

	_05ddeb_jump:
		mov    0x000081(%ecx),%bl
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _05df8a_jump

	_05de03_jump:
		movb   $0x000007,0x000078(%ecx)
		movb   $0x000000,0x00007f(%ecx)
		jmp    _05df8a_jump

	_05de10_jump:
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000007,0x000078(%ecx)
		mov    _0cdba8_data,%eax
		mov    0x000081(%ecx),%dl
		mov    %eax,0x000004(%ecx)
		and    $0x0000fb,%dl
		mov    0x000034(%ecx),%ax
		mov    %dl,0x000081(%ecx)
		mov    %ax,_0cee12_data
		jmp    _05df8a_jump

	_05de41_jump:
		movw   $0x000001,0x00004a(%ecx)
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000007,0x000078(%ecx)
		mov    0x000081(%ecx),%bl
		mov    0x00004a(%ecx),%ax
		and    $0x0000fb,%bl
		mov    %ax,0x000056(%ecx)
		mov    %bl,0x000081(%ecx)
		jmp    _05df8a_jump

	_05de6e_jump:
		cmp    $0x000001,%si
		jl     _05df8a_jump
		movswl %si,%eax
		dec    %eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%edx
		add    %edx,%eax
		orb    $0x000004,0x000081(%ecx)
		cmpw   $0x00000a,0x000060(%eax)
		jne    _05df8a_jump
		mov    0x000028(%eax),%eax
		cmp    0x000028(%ecx),%eax
		jne    _05df8a_jump
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _05df8a_jump

	_05dec3_jump:
		mov    %ecx,%eax
		call   _0208ec_func
		jmp    _05df8a_jump

	_05decf_jump:
		testb  $0x000008,_0ced89_data
		je     _05dee8_jump
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d364_func
		movb   $0x00000a,0x00006e(%ecx)

	_05dee8_jump:
		movb   $0x000007,0x000078(%ecx)
		jmp    _05df8a_jump

	_05def1_jump:
		mov    _0ced89_data,%bh
		mov    0x000034(%ecx),%ax
		movb   $0x000007,0x000078(%ecx)
		mov    %ax,_0cedee_data
		test   $0x000008,%bh
		je     _05df8a_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movb   $0x000004,0x00006e(%ecx)
		call   _01d374_func
		jmp    _05df8a_jump

	_05df22_jump:
		mov    0x000081(%ecx),%ah
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _05df8a_jump

	_05df37_jump:
		movw   $0x00ffff,0x000050(%ecx)
		movw   $0x000000,0x000052(%ecx)
		mov    %si,_0ced60_data

	_05df4a_jump:
		movb   $0x000000,0x00007f(%ecx)
		jmp    _05df8a_jump

	_05df50_jump:
		mov    %si,_0ced64_data
		jmp    _05df8a_jump

	_05df59_jump:
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x00003c(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%ecx)
		mov    0x00003c(%ecx),%ax
		movw   $0x000000,0x00003e(%ecx)
		cwtl   
		mov    %eax,0x000028(%ecx)
		mov    0x00003e(%ecx),%ax
		movl   $0x000000,0x000024(%ecx)
		cwtl   

	_05df87_jump:
		mov    %eax,0x00002c(%ecx)

	_05df8a_jump:
		xor    %eax,%eax
		mov    _0cefb2_data,%al
		imul   $0x000014,%eax,%eax
		cmpb   $0x000006,_094a4d_data(%eax)
		jne    _05dfbd_jump
		cmpw   $0x00003a,0x000060(%ecx)
		jne    _05dfbd_jump
		andb   $0x0000fb,0x000081(%ecx)
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		movl   $0x000000,0x000024(%ecx)
		call   _0713b0_func

	_05dfbd_jump:
		cmpw   $0x000000,_0ced5e_data
		jne    _05dffc_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000002,_092265_data(,%eax,4)
		je     _05dffc_jump
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		call   _0713e8_func
		test   %al,%al
		je     _05dffc_jump
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)

	_05dffc_jump:
		cmpw   $0x000000,_0ced5e_data
		je     _05e014_jump
		cmpw   $0x0000a1,0x000060(%ecx)
		jne    _05e014_jump
		incb   _0cefab_data

	_05e014_jump:
		mov    0x000004(%esp),%eax
		add    $0x000084,%edi
		inc    %esi
		add    $0x000084,%ecx
		cmp    %ax,%si
		jl     _05d200_jump

	_05e02e_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05e06f_jump
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _05e06f_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		mov    0x000008(%esp),%ecx
		mov    %cx,0x000052(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    (%esp),%edx
		mov    %dx,0x000052(%eax)

	_05e06f_jump:
		cmpw   $0x000000,_0ced5e_data
		je     _05e08d_jump
		xor    %eax,%eax
		mov    _0ce4b0_data,%al
		xor    %bh,%bh
		mov    %eax,_0cce10_data
		mov    %bh,_0ce4b0_data

	_05e08d_jump:
		call   _05d028_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e09c_func:
		push   %edx
		mov    %eax,%edx
		call   _05c7fc_func
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000002,0x000030(%edx)
		call   _01db8c_func
		cmpl   $0x000000,0x000020(%edx)
		je     _05e0c3_jump
		xor    %eax,%eax
		jmp    _05e0c8_jump

	_05e0c3_jump:
		mov    $0x000078,%eax

	_05e0c8_jump:
		movl   $0x000000,0x000024(%edx)
		mov    %ax,0x00005e(%edx)
		pop    %edx
		ret    



_05e0d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cedd0_data,%si
		mov    _0cede4_data,%di
		xor    %eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx

	_05e0f1_jump:
		test   %eax,%eax
		jne    _05e10f_jump
		cmp    $0x000003,%si
		jne    _05e106_jump
		movw   $0x00ff88,_09267e_data(%ebx)
		jmp    _05e10f_jump

	_05e106_jump:
		xor    %ecx,%ecx
		mov    %cx,_09267e_data(%ebx)

	_05e10f_jump:
		cmp    $0x000011,%eax
		je     _05e11e_jump
		cmp    $0x000010,%eax
		je     _05e11e_jump
		cmp    $0x000018,%eax
		jne    _05e134_jump

	_05e11e_jump:
		cmp    $0x000001,%di
		jne    _05e12d_jump
		orb    $0x000008,_092265_data(%edx)
		jmp    _05e134_jump

	_05e12d_jump:
		andb   $0x0000f7,_092265_data(%edx)

	_05e134_jump:
		add    $0x000002,%ebx
		inc    %eax
		add    $0x000004,%edx
		cmp    $0x000106,%eax
		jl     _05e0f1_jump
		mov    %di,_0cede4_data
		mov    %si,_0cedd0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05e160_switch:
		.long   _05e37f_case
		.long   _05e35a_case
		.long   _05e33c_case
		.long   _05e345_case
		.long   _05e354_case
		.long   _05e363_case
		.long   _05e372_case
		.long   _05e388_case
		.long   _05e3c0_case
		.long   _05e3ea_case
		.long   _05e414_case
		.long   _05e44c_case
		.long   _05e470_case
		.long   _05e49f_case
		.long   _05e4d0_case




_05e19c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%ebx
		mov    _0e3de8_data,%edx
		mov    0x000034(%edx),%ecx
		call   _010010_func
		test   %bx,%bx
		jl     _05e1cd_jump
		mov    $0x000001,%eax
		movswl %bx,%ebx
		cmp    %ebx,%eax
		jge    _05e1c9_jump
		mov    %ebx,%eax

	_05e1c9_jump:
		neg    %eax
		jmp    _05e1dd_jump

	_05e1cd_jump:
		movswl %bx,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _05e1dd_jump
		mov    %ebx,%eax

	_05e1dd_jump:
		xor    %ebx,%ebx
		mov    %ax,0x000004(%edx)
		mov    (%esp),%bl
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _05e1f1_jump
		mov    %ebx,%eax

	_05e1f1_jump:
		mov    $0x00000f,%ebx
		cmp    %ebx,%eax
		jle    _05e1fc_jump
		mov    %ebx,%eax

	_05e1fc_jump:
		mov    %al,0x00001d(%edx)
		movl   $0x000000,0x000014(%ecx)
		movl   $0x000000,0x000054(%ecx)
		movl   $0x00013f,0x00003c(%ecx)
		movl   $0x0000c7,0x000068(%ecx)
		movl   $0x0000a0,0x000064(%ecx)
		movl   $0x000000,0x00006c(%ecx)
		mov    0x000014(%ecx),%eax
		mov    %eax,(%ecx)
		mov    0x000054(%ecx),%eax
		mov    %eax,0x000040(%ecx)
		mov    %eax,0x000004(%ecx)
		mov    0x00003c(%ecx),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x000068(%ecx),%eax
		mov    %eax,0x00002c(%ecx)
		mov    %eax,0x000018(%ecx)
		mov    0x000064(%ecx),%eax
		mov    %eax,0x000050(%ecx)
		mov    0x00006c(%ecx),%eax
		mov    %eax,0x000058(%ecx)
		mov    %eax,0x000044(%ecx)
		mov    %eax,0x000030(%ecx)
		mov    %eax,0x00001c(%ecx)
		mov    %eax,0x000008(%ecx)
		mov    0x000030(%edx),%ecx
		mov    0x000028(%edx),%eax
		movb   $0x000000,0x000026(%ecx)
		movb   $0x00009f,0x00002a(%ecx)
		movb   $0x000000,0x00002b(%ecx)
		movb   $0x0000c7,0x000029(%ecx)
		mov    %eax,(%ecx)
		mov    0x000026(%ecx),%al
		mov    %al,0x000024(%ecx)
		mov    0x00002a(%ecx),%al
		mov    %al,0x000028(%ecx)
		mov    0x00002b(%ecx),%al
		mov    %al,0x000025(%ecx)
		mov    0x000029(%ecx),%al
		mov    %al,0x000027(%ecx)
		mov    0x000030(%edx),%ecx
		add    $0x00002c,%ecx
		mov    0x00002c(%edx),%eax
		movb   $0x000000,0x000026(%ecx)
		mov    %eax,(%ecx)
		mov    0x000026(%ecx),%al
		mov    %al,0x000024(%ecx)
		movb   $0x00009f,0x00002a(%ecx)
		movb   $0x000000,0x00002b(%ecx)
		movb   $0x0000c7,0x000029(%ecx)
		mov    0x00002a(%ecx),%al
		mov    %al,0x000028(%ecx)
		mov    0x00002b(%ecx),%al
		mov    %al,0x000025(%ecx)
		mov    0x000029(%ecx),%al
		mov    %al,0x000027(%ecx)
		movw   $0x000000,(%edx)
		movw   $0x000200,0x000002(%edx)
		movw   $0x000000,0x00000a(%edx)
		movw   $0x000000,0x000010(%edx)
		movw   $0x000000,0x000016(%edx)
		movw   $0x0000a0,0x000018(%edx)
		mov    0x00000a(%edx),%ax
		mov    %ax,0x000008(%edx)
		mov    %ax,0x000006(%edx)
		mov    0x000010(%edx),%ax
		mov    %ax,0x00000e(%edx)
		mov    %ax,0x00000c(%edx)
		mov    0x000016(%edx),%ax
		mov    %ax,0x000014(%edx)
		mov    %ax,0x000012(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x000064,0x00001a(%edx)
		sar    $0x000010,%eax
		movb   $0x000000,0x00001c(%edx)
		test   %eax,%eax
		jge    _05e31e_jump
		neg    %eax

	_05e31e_jump:
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    0x00001d(%edx),%al
		dec    %al
		cmp    $0x00000e,%al
		ja     _05e4f1_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05e160_switch(,%eax,4)

	_05e33c_case:
		mov    %cx,0x000016(%edx)
		jmp    _05e4f1_jump

	_05e345_case:
		mov    %cx,0x000014(%edx)
		add    %ecx,%ecx
		mov    %cx,0x000012(%edx)
		jmp    _05e4f1_jump

	_05e354_case:
		mov    %cx,0x000016(%edx)
		add    %ecx,%ecx

	_05e35a_case:
		mov    %cx,0x000014(%edx)
		jmp    _05e4f1_jump

	_05e363_case:
		mov    %cx,0x000016(%edx)
		add    %ecx,%ecx
		mov    %cx,0x000012(%edx)
		jmp    _05e4f1_jump

	_05e372_case:
		mov    %cx,0x000016(%edx)
		imul   $0x000003,%ecx,%eax
		add    %ecx,%ecx
		mov    %ax,0x000014(%edx)

	_05e37f_case:
		mov    %cx,0x000012(%edx)
		jmp    _05e4f1_jump

	_05e388_case:
		movw   $0x000200,0x000006(%edx)
		movw   $0x0000c9,0x00001a(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %eax,%edi
		mov    %ax,0x000012(%edx)
		neg    %edi
		mov    0x000004(%edx),%ax
		mov    %di,0x000012(%edx)
		test   %ax,%ax
		jg     _05e4f1_jump
		movw   $0x000180,0x000006(%edx)
		jmp    _05e4f1_jump

	_05e3c0_case:
		movw   $0x0000c9,0x00001a(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%si
		mov    %ax,0x000012(%edx)
		test   %si,%si
		jg     _05e4f1_jump
		movw   $0x000080,0x000006(%edx)
		jmp    _05e4f1_jump

	_05e3ea_case:
		movw   $0x00fffe,0x00001a(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%cx
		mov    %ax,0x000012(%edx)
		test   %cx,%cx
		jg     _05e4f1_jump
		movw   $0x000080,0x000006(%edx)
		jmp    _05e4f1_jump

	_05e414_case:
		movw   $0x000200,0x000006(%edx)
		movw   $0x00fffe,0x00001a(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %eax,%edi
		mov    %ax,0x000012(%edx)
		neg    %edi
		mov    0x000004(%edx),%ax
		mov    %di,0x000012(%edx)
		test   %ax,%ax
		jg     _05e4f1_jump
		movw   $0x000180,0x000006(%edx)
		jmp    _05e4f1_jump

	_05e44c_case:
		movw   $0x00fffe,0x000018(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%si
		mov    %ax,0x000014(%edx)
		test   %si,%si
		jg     _05e4f1_jump
		jmp    _05e4eb_jump

	_05e470_case:
		movw   $0x000200,0x000008(%edx)
		movw   $0x00fffe,0x000018(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %ax,0x000014(%edx)
		neg    %eax
		mov    0x000004(%edx),%cx
		mov    %ax,0x000014(%edx)
		test   %cx,%cx
		jg     _05e4f1_jump
		movw   $0x000180,0x000008(%edx)
		jmp    _05e4f1_jump

	_05e49f_case:
		movw   $0x000200,0x000008(%edx)
		movw   $0x000141,0x000018(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %eax,%esi
		mov    %ax,0x000014(%edx)
		neg    %esi
		mov    0x000004(%edx),%di
		mov    %si,0x000014(%edx)
		test   %di,%di
		jg     _05e4f1_jump
		movw   $0x000180,0x000008(%edx)
		jmp    _05e4f1_jump

	_05e4d0_case:
		movw   $0x000141,0x000018(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%cx
		mov    %ax,0x000014(%edx)
		test   %cx,%cx
		jg     _05e4f1_jump

	_05e4eb_jump:
		movw   $0x000080,0x000008(%edx)

	_05e4f1_jump:
		cmpb   $0x000001,0x00001c(%edx)
		jne    _05e501_jump
		add    $0x000080,%ebx
		mov    %bx,0x000002(%edx)

	_05e501_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05e50c_case:
		push   %edx
		mov    _0e3de8_data,%edx
		test   %edx,%edx
		je     _05e546_jump
		cmpl   $0x000000,0x000030(%edx)
		je     _05e525_jump
		lea    0x000030(%edx),%eax
		call   _07b83c_func

	_05e525_jump:
		cmpl   $0x000000,0x000034(%edx)
		je     _05e533_jump
		lea    0x000034(%edx),%eax
		call   _07b83c_func

	_05e533_jump:
		cmpl   $0x000000,_0e3de8_data
		je     _05e546_jump
		mov    $_0e3de8_data,%eax
		call   _07b83c_func

	_05e546_jump:
		pop    %edx
		ret    



_05e548_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %ecx,%edi
		xor    %cl,%cl
		test   %ebx,%ebx
		je     _05e5b3_jump
		test   %edi,%edi
		je     _05e5b3_jump
		mov    $0x000038,%eax
		call   _07b824_func
		mov    %eax,%edx
		mov    %eax,_0e3de8_data
		test   %eax,%eax
		je     _05e5b3_jump
		mov    %ebx,0x000020(%eax)
		mov    %eax,%esi
		mov    %edi,0x000024(%eax)
		mov    $0x000058,%eax
		call   _07b824_func
		mov    %eax,0x000030(%edx)
		test   %eax,%eax
		je     _05e5b3_jump
		mov    $0x000078,%eax
		call   _07b824_func
		mov    %eax,0x000034(%edx)
		test   %eax,%eax
		je     _05e5b3_jump
		mov    _0cc638_data,%eax
		mov    %eax,0x000028(%edx)
		lea    0x00c800(%eax),%ebx
		mov    $0x000001,%cl
		mov    %ebx,0x00002c(%edx)

	_05e5b3_jump:
		test   %cl,%cl
		je     _05e5f0_jump
		mov    $0x0000a0,%ebx
		mov    0x000028(%esi),%edx
		mov    0x000020(%esi),%eax
		call   _07a070_func
		mov    $0x0000a0,%ebx
		mov    0x000020(%esi),%eax
		mov    0x00002c(%esi),%edx
		add    $0x0000a0,%eax
		call   _07a070_func
		xor    %eax,%eax
		mov    -0x000002(%esp),%edx
		mov    0x000004(%esp),%al
		sar    $0x000010,%edx
		call   _05e19c_func
		jmp    _05e5f5_jump

	_05e5f0_jump:
		call   _05e50c_case

	_05e5f5_jump:
		mov    %cl,%al
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_05e600_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    _0e3de8_data,%ecx
		mov    0x00001c(%ecx),%ah
		mov    0x000034(%ecx),%edi
		test   %ah,%ah
		jne    _05e644_jump
		cmpw   $0x000000,0x000004(%ecx)
		jl     _05e625_jump
		mov    (%ecx),%ax
		jmp    _05e62e_jump

	_05e625_jump:
		mov    0x000002(%ecx),%ax
		mov    (%ecx),%si
		sub    %esi,%eax

	_05e62e_jump:
		mov    %ax,0x00002c(%esp)
		mov    0x00002c(%esp),%eax
		shl    $0x000002,%eax
		add    $0x000002,%ah
		mov    %ax,0x00002c(%esp)
		jmp    _05e64b_jump

	_05e644_jump:
		movw   $0x000200,0x00002c(%esp)

	_05e64b_jump:
		lea    0x000028(%esp),%ebx
		mov    0x000004(%ecx),%eax
		lea    0x000024(%esp),%edx
		sar    $0x000010,%eax
		call   _05be7c_func
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000028(%esp),%ebx
		mov    %eax,0x000014(%esp)
		mov    0x000006(%ecx),%eax
		lea    0x000024(%esp),%edx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%ebp
		call   _05be7c_func
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00001c(%esp)
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000028(%esp),%ebx
		mov    %eax,0x000018(%esp)
		mov    0x000008(%ecx),%eax
		lea    0x000024(%esp),%edx
		sar    $0x000010,%eax
		call   _05be7c_func
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000010,%ebp
		mov    %eax,0x000020(%esp)
		mov    0x000026(%esp),%eax
		xor    %dl,%dl
		sar    $0x000010,%eax
		mov    %dl,0x000030(%esp)
		mov    %eax,0x000010(%esp)

	_05e6c8_jump:
		mov    0x000016(%ecx),%eax
		mov    (%edi),%edx
		sar    $0x000010,%eax
		mov    0x000018(%ecx),%esi
		sub    %eax,%edx
		sar    $0x000010,%esi
		mov    %edx,%eax
		mov    0x000004(%edi),%edx
		sub    %esi,%edx
		mov    %edx,%esi
		mov    0x00000a(%ecx),%dx
		mov    0x000008(%edi),%ebx
		test   %dx,%dx
		je     _05e723_jump
		mov    0x000010(%esp),%edx
		imul   %eax,%edx
		mov    %edx,0x000008(%esp)
		mov    0x000020(%esp),%edx
		imul   %esi,%edx
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		sub    0x000004(%esp),%edx
		mov    %edx,(%esp)
		imul   0x000020(%esp),%eax
		imul   0x000010(%esp),%esi
		add    %eax,%esi
		mov    (%esp),%eax
		sar    $0x000009,%esi
		sar    $0x000009,%eax

	_05e723_jump:
		cmpw   $0x000000,0x000008(%ecx)
		je     _05e760_jump
		mov    0x00001c(%esp),%edx
		imul   %ebx,%edx
		mov    %edx,0x000008(%esp)
		mov    0x000018(%esp),%edx
		imul   %eax,%edx
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		add    0x000004(%esp),%edx
		mov    %edx,(%esp)
		imul   0x000018(%esp),%ebx
		imul   0x00001c(%esp),%eax
		sub    %eax,%ebx
		mov    (%esp),%eax
		sar    $0x000009,%ebx
		sar    $0x000009,%eax

	_05e760_jump:
		cmpw   $0x000000,0x000006(%ecx)
		je     _05e7a5_jump
		mov    0x000014(%esp),%edx
		imul   %ebx,%edx
		imul   %ebp,%ebx
		mov    %edx,0x000004(%esp)
		mov    %esi,%edx
		imul   %ebp,%edx
		mov    %ebx,0x00000c(%esp)
		mov    0x000014(%esp),%ebx
		imul   %esi,%ebx
		mov    %edx,0x000008(%esp)
		mov    0x000004(%esp),%edx
		add    0x000008(%esp),%edx
		mov    %edx,(%esp)
		mov    0x00000c(%esp),%edx
		sub    %ebx,%edx
		mov    (%esp),%esi
		mov    %edx,%ebx
		sar    $0x000009,%esi
		sar    $0x000009,%ebx

	_05e7a5_jump:
		mov    0x00002a(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000009,%eax
		add    %edx,%ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000016(%ecx),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,0x00000c(%edi)
		mov    %esi,%edx
		shl    $0x000009,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000018(%ecx),%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    0x000030(%esp),%dh
		add    $0x000014,%edi
		inc    %dh
		mov    %eax,-0x000004(%edi)
		mov    %dh,0x000030(%esp)
		cmp    $0x000006,%dh
		jb     _05e6c8_jump
		mov    0x000012(%ecx),%ax
		mov    0x000006(%ecx),%di
		mov    0x000008(%ecx),%dx
		mov    0x00000a(%ecx),%bx
		add    %eax,%edi
		mov    0x000014(%ecx),%ax
		mov    %di,0x000006(%ecx)
		add    %eax,%edx
		mov    0x000016(%ecx),%ax
		mov    %dx,0x000008(%ecx)
		add    %eax,%ebx
		mov    %bx,0x00000a(%ecx)
		mov    0x000034(%ecx),%edx
		mov    0x000030(%ecx),%eax
		mov    0x00000c(%edx),%ebx
		mov    %ebx,0x000004(%eax)
		mov    0x000010(%edx),%ebx
		mov    %ebx,0x000008(%eax)
		mov    0x000020(%edx),%ebx
		mov    %ebx,0x00000c(%eax)
		mov    0x000024(%edx),%ebx
		mov    %ebx,0x000010(%eax)
		mov    0x000070(%edx),%ebx
		mov    %ebx,0x000014(%eax)
		mov    0x000074(%edx),%ebx
		mov    %ebx,0x000018(%eax)
		mov    0x00005c(%edx),%ebx
		mov    %ebx,0x00001c(%eax)
		mov    0x000060(%edx),%ebx
		mov    %ebx,0x000020(%eax)
		mov    0x000030(%ecx),%eax
		mov    0x00005c(%edx),%ebx
		mov    %ebx,0x000030(%eax)
		mov    0x000060(%edx),%ebx
		mov    %ebx,0x000034(%eax)
		mov    0x000070(%edx),%ebx
		mov    %ebx,0x000038(%eax)
		mov    0x000074(%edx),%ebx
		mov    %ebx,0x00003c(%eax)
		mov    0x000034(%edx),%ebx
		mov    %ebx,0x000040(%eax)
		mov    0x000038(%edx),%ebx
		mov    %ebx,0x000044(%eax)
		mov    0x000048(%edx),%ebx
		mov    %ebx,0x000048(%eax)
		add    $0x00002c,%eax
		mov    0x00004c(%edx),%edx
		mov    %edx,0x000020(%eax)
		mov    0x000002(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05e892_jump
		neg    %eax

	_05e892_jump:
		mov    (%ecx),%si
		add    %eax,%esi
		mov    0x000002(%ecx),%di
		mov    %si,(%ecx)
		cmp    %di,%si
		jbe    _05e8a8_jump
		movw   $0x000000,(%ecx)

	_05e8a8_jump:
		mov    (%ecx),%ax
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e8b8_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    _0e3de8_data,%ebx
		mov    0x000030(%ebx),%edx
		mov    0x000024(%ebx),%eax
		mov    %edx,%esi
		call   _010045_func
		lea    0x00002c(%edx),%esi
		mov    0x000024(%ebx),%eax
		call   _010045_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_05e8e0_func:
		push   %edx
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		mov    0x000018(%eax,%edx,4),%dx
		mov    %dx,0x000046(%eax)
		decb   0x00007c(%eax)
		pop    %edx
		ret    



_05e8f4_func:
		push   %edx
		cmp    $0x00007f,%al
		jbe    _05e908_jump
		mov    $0x000100,%edx
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %edx,%eax
		neg    %eax
		pop    %edx
		ret    

	_05e908_jump:
		xor    %ah,%ah
		pop    %edx
		ret    

	_05e90c_jump:
		xor    %al,%al
		ret    



_05e910_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000048(%eax)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_05e930_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000048(%eax)
		cmp    $0x000004,%dx
		ja     _05e964_jump
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000050(%eax)

	_05e964_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_05e96c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		sar    $0x000010,%ebx
		mov    0x000010(%eax),%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _05e8f4_func
		mov    0x000046(%edx),%cx
		mov    %ax,0x000048(%edx)
		inc    %ecx
		mov    %cx,0x000046(%edx)
		mov    0x000044(%edx),%ebx
		mov    0x000010(%edx),%eax
		sar    $0x000010,%ebx
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _05e8f4_func
		mov    %ax,0x000052(%edx)
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e9b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		sar    $0x000010,%ebx
		mov    0x000010(%eax),%eax
		mov    (%ebx,%eax,1),%al
		mov    0x000046(%edx),%cx
		xor    %ah,%ah
		inc    %ecx
		mov    %ax,0x000048(%edx)
		mov    %cx,0x000046(%edx)
		mov    0x000044(%edx),%eax
		mov    0x000010(%edx),%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _05e8f4_func
		mov    0x000046(%edx),%si
		mov    %ax,0x000056(%edx)
		inc    %esi
		mov    %si,0x000046(%edx)
		mov    0x000044(%edx),%eax
		mov    0x000010(%edx),%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _05e8f4_func
		mov    %ax,0x00004a(%edx)
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ea24_func:
		movw   $0x00ffff,0x000046(%eax)
		call   _05ef64_func
		mov    $0x000001,%al
		ret    

	_05ea34_jump:
		incw   0x000046(%eax)
		xor    %al,%al
		ret    



_05ea3c_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		cmp    $0x000004,%dl
		ja     _05ea57_jump
		incw   0x000046(%eax)

	_05ea57_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_05ea5c_jump:
		addw   $0x000002,0x000046(%eax)
		xor    %al,%al
		ret    



_05ea64_func:
		addw   $0x000003,0x000046(%eax)
		lea    0x000000(%eax),%eax

	_05ea6c_jump:
		xor    %al,%al
		ret    



_05ea70_func:
		movw   $0x00ffff,0x000046(%eax)
		call   _05ef90_func
		nop



_05ea7c_func:
		mov    $0x000001,%al
		ret    



_05ea80_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		movb   $0x000001,0x000073(%eax)
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		movb   $0x000002,0x000070(%eax)
		call   _01d224_func
		dec    %eax
		mov    %ax,0x000048(%ebx)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_05eaa0_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    $0x000001,%edx
		call   _05f004_func
		mov    0x000046(%ebx),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,2),%edx
		mov    0x000014(%ebx),%eax
		mov    (%edx,%eax,1),%ax
		mov    %ax,0x000046(%ebx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05eacc_func:
		push   %ebx
		push   %edx
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05eaec_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _05eb0f_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_05eb0f_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05eb14_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _05eb37_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_05eb37_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05eb3c_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _05eb5f_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_05eb5f_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05eb64_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _05eb87_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_05eb87_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05eb8c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000046(%eax),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000050(%edx),%ebx
		shl    $0x000002,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %eax,0x000028(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ebb8_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000046(%eax),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000050(%edx),%ebx
		shl    $0x000002,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ebe4_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _05f030_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_05ebfc_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _01d36c_func
		movw   $0x000000,0x000040(%ebx)
		mov    $0x000001,%al
		movw   $0x000000,0x000042(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_05ec1c_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _01d364_func
		movw   $0x000000,0x000040(%ebx)
		mov    $0x000001,%al
		movw   $0x000000,0x000042(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_05ec3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x000048(%eax),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _05ec59_jump

	_05ec4c_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _05ef90_func
		cmp    %cx,%dx
		jl     _05ec4c_jump

	_05ec59_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ec60_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _05f004_func
		mov    $0x000001,%al
		pop    %edx
		ret    



_05ec70_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%edx
		mov    $0x000001,%ebx
		call   _05f004_func
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000048(%ecx),%dl
		call   _05f030_func
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ec98_func:
		call   _05e8e0_func
		mov    $0x000001,%al
		ret    



_05eca0_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		mov    0x00001a(%eax,%edx,4),%bx
		dec    %ebx
		mov    %bx,0x00001a(%eax,%edx,4)
		test   %bx,%bx
		jle    _05ecca_jump
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		mov    0x000018(%eax,%edx,4),%dx
		mov    %dx,0x000046(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    

	_05ecca_jump:
		decb   0x00007c(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ecd4_func:
		movw   $0x00ffff,0x000046(%eax)
		mov    $0x000001,%al
		ret    



_05ece0_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _05ecff_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _05f030_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_05ecff_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ed04_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _05ed23_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _05f030_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_05ed23_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ed28_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		testb  $0x000002,0x000081(%eax)
		je     _05ed4e_jump
		mov    0x000048(%ebx),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _05ed4e_jump

	_05ed41_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _05ef90_func
		cmp    %cx,%dx
		jl     _05ed41_jump

	_05ed4e_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ed54_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		testb  $0x000002,0x000081(%eax)
		jne    _05ed7a_jump
		mov    0x000048(%ebx),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _05ed7a_jump

	_05ed6d_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _05ef90_func
		cmp    %cx,%dx
		jl     _05ed6d_jump

	_05ed7a_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ed80_func:
		push   %ebx
		push   %edx
		mov    0x000048(%eax),%dl
		and    $0x000001,%dl
		mov    0x000081(%eax),%dh
		and    $0x0000fd,%dh
		mov    %dh,0x000081(%eax)
		add    %dl,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,0x000081(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05eda8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000048(%eax),%ax
		cmp    $0x000003,%ax
		jb     _05ede9_jump
		jbe    _05ef1e_jump
		cmp    $0x000046,%ax
		jb     _05edda_jump
		jbe    _05ee08_jump
		cmp    $0x000047,%ax
		jbe    _05ee24_jump
		cmp    $0x000048,%ax
		je     _05ee50_jump
		jmp    _05ef5b_jump

	_05edda_jump:
		cmp    $0x000004,%ax
		je     _05ef39_jump
		jmp    _05ef5b_jump

	_05ede9_jump:
		cmp    $0x000001,%ax
		jb     _05edfa_jump
		jbe    _05eea1_jump
		jmp    _05eec2_jump

	_05edfa_jump:
		test   %ax,%ax
		je     _05ee7d_jump
		jmp    _05ef5b_jump

	_05ee08_jump:
		mov    %edx,%eax
		call   _01db50_func
		test   %ax,%ax
		je     _05ef54_jump
		orb    $0x000002,0x000081(%edx)
		jmp    _05ef5b_jump

	_05ee24_jump:
		mov    0x000081(%edx),%cl
		test   $0x000001,%cl
		je     _05ee3f_jump
		mov    %cl,%al
		or     $0x000002,%al
		mov    %al,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ee3f_jump:
		mov    %cl,%ch
		and    $0x0000fd,%ch
		mov    %ch,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ee50_jump:
		mov    0x000081(%edx),%ah
		test   $0x000010,%ah
		jne    _05ee6c_jump
		mov    %ah,%bh
		or     $0x000002,%bh
		mov    %bh,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ee6c_jump:
		mov    %ah,%bl
		and    $0x0000fd,%bl
		mov    %bl,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ee7d_jump:
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		mov    0x000050(%edx),%cl
		shr    $0x000007,%al
		cmp    %cl,%al
		jne    _05ef54_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05eea1_jump:
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		call   _069140_func
		test   %ax,%ax
		jne    _05ef54_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05eec2_jump:
		mov    %edx,%eax
		mov    0x000081(%edx),%bl
		call   _01db14_func
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		shl    $0x000004,%bl
		mov    0x000050(%edx),%ah
		shr    $0x000007,%bl
		cmp    %ah,%al
		jne    _05eef1_jump
		orb    $0x000002,0x000081(%edx)
		jmp    _05eef8_jump

	_05eef1_jump:
		andb   $0x0000fd,0x000081(%edx)

	_05eef8_jump:
		mov    %bl,%al
		mov    0x000081(%edx),%ch
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		mov    %ch,%ah
		mov    %ch,0x000081(%edx)
		or     %al,%ah
		mov    %ah,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ef1e_jump:
		xor    %eax,%eax
		mov    0x000050(%edx),%cx
		mov    0x00006d(%edx),%al
		cmp    %cx,%ax
		jne    _05ef54_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ef39_jump:
		xor    %eax,%eax
		mov    0x000050(%edx),%bx
		mov    0x00006c(%edx),%al
		cmp    %bx,%ax
		jne    _05ef54_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ef54_jump:
		andb   $0x0000fd,0x000081(%edx)

	_05ef5b_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ef64_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		mov    0x000010(%eax),%edx
		sar    $0x000010,%ebx
		mov    (%edx,%ebx,1),%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %dl,0x000070(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		call   *_096cd8_data(,%edx,4)
		pop    %edx
		pop    %ebx
		ret    



_05ef90_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		mov    0x000010(%eax),%edx
		sar    $0x000010,%ebx
		mov    (%edx,%ebx,1),%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %dl,0x000070(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		call   *_096cdc_data(,%edx,4)
		pop    %edx
		pop    %ebx
		ret    



_05efbc_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		cmpl   $0x000000,0x000010(%eax)
		je     _05effd_jump
		testb  $0x000010,0x000081(%eax)
		je     _05f001_jump
		mov    0x000048(%edx),%ax
		mov    %eax,%ebx
		dec    %ebx
		mov    %bx,0x000048(%edx)
		test   %ax,%ax
		jne    _05f001_jump

	_05efdf_jump:
		mov    %edx,%eax
		call   _05ef64_func
		xor    %eax,%eax
		mov    0x000070(%edx),%al
		imul   $0x00000c,%eax,%ebx
		mov    %edx,%eax
		call   *_096ce0_data(%ebx)
		test   %al,%al
		jne    _05efdf_jump
		pop    %edx
		pop    %ebx
		ret    

	_05effd_jump:
		movb   $0x00001e,0x000070(%eax)

	_05f001_jump:
		pop    %edx
		pop    %ebx
		ret    



_05f004_func:
		push   %ebx
		push   %ecx
		mov    0x00007c(%eax),%dh
		xor    %ebx,%ebx
		inc    %dh
		mov    %dh,%bl
		shl    $0x000002,%ebx
		mov    %dh,0x00007c(%eax)
		lea    (%eax,%ebx,1),%ecx
		mov    0x000046(%eax),%bx
		mov    %bx,0x000018(%ecx)
		xor    %ebx,%ebx
		mov    0x00007c(%eax),%bl
		xor    %dh,%dh
		mov    %dx,0x00001a(%eax,%ebx,4)
		pop    %ecx
		pop    %ebx
		ret    



_05f030_func:
		push   %ecx
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		mov    %dl,0x000008(%esp)
		mov    %bl,(%esp)
		mov    0x000046(%eax),%bx
		mov    0x000081(%eax),%al
		shl    $0x000003,%al
		shr    $0x000007,%al
		mov    %al,0x000004(%esp)

	_05f051_jump:
		mov    %ecx,%eax
		call   _05ef90_func
		cmp    0x000046(%ecx),%bx
		je     _05f076_jump
		cmpb   $0x00000b,0x000070(%ecx)
		jne    _05f051_jump
		mov    0x000044(%ecx),%eax
		mov    0x000010(%ecx),%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,1),%al
		cmp    0x000008(%esp),%al
		jne    _05f051_jump

	_05f076_jump:
		cmpb   $0x000000,(%esp)
		je     _05f0c5_jump
		cmp    0x000046(%ecx),%bx
		je     _05f0c9_jump
		mov    0x000081(%ecx),%bl
		movw   $0x000000,0x000048(%ecx)
		or     $0x000010,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _05efbc_func
		mov    0x000004(%esp),%al
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000ef,%bh
		shl    $0x000004,%al
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		add    $0x00000c,%esp
		pop    %ecx
		ret    

	_05f0c5_jump:
		movb   $0x00001e,0x000070(%ecx)

	_05f0c9_jump:
		add    $0x00000c,%esp
		pop    %ecx
		ret    



_05f0d0_func:
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %dl,(%esp)
		mov    $0x000001,%edx
		call   _05f004_func
		and    $0x0000ff,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    (%esp),%dl
		call   _05f030_func
		add    $0x000004,%esp
		pop    %ecx
		ret    



_05f100_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000081(%edx),%bl
		add    $0x000081,%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		mov    %bh,(%eax)
		or     %dl,%cl
		mov    %cl,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05f280_switch:
		.long   _05f2ea_case
		.long   _05f324_case
		.long   _05f359_case
		.long   _05f33b_case
		.long   _05f34f_case
		.long   _05f359_case

_05f298_switch:
		.long   _05f304_case
		.long   _05f359_case
		.long   _05f30c_case
		.long   _05f359_case
		.long   _05f359_case
		.long   _05f359_case
		.long   _05f359_case
		.long   _05f359_case
		.long   _05f359_case
		.long   _05f314_case
		.long   _05f31c_case




_05f2c4_func:
		push   %ebx
		push   %edx
		mov    %al,%dl
		mov    _0cede4_data,%bx
		dec    %ebx
		xor    %eax,%eax
		cmp    $0x000005,%bx
		ja     _05f359_case
		and    $0x00ffff,%ebx
		jmp    *%cs:_05f280_switch(,%ebx,4)

	_05f2ea_case:
		sub    $0x000002,%dl
		cmp    $0x00000a,%dl
		ja     _05f359_case
		and    $0x0000ff,%edx
		jmp    *%cs:_05f298_switch(,%edx,4)

	_05f304_case:
		mov    $0x000015,%eax
		pop    %edx
		pop    %ebx
		ret    

	_05f30c_case:
		mov    $0x000014,%eax
		pop    %edx
		pop    %ebx
		ret    

	_05f314_case:
		mov    $0x000012,%eax
		pop    %edx
		pop    %ebx
		ret    

	_05f31c_case:
		mov    $0x000013,%eax
		pop    %edx
		pop    %ebx
		ret    

	_05f324_case:
		cmp    $0x000004,%dl
		jb     _05f359_case
		jbe    _05f333_jump
		cmp    $0x000009,%dl
		je     _05f314_case
		pop    %edx
		pop    %ebx
		ret    

	_05f333_jump:
		mov    $0x000011,%eax
		pop    %edx
		pop    %ebx
		ret    

	_05f33b_case:
		cmp    $0x000003,%dl
		jb     _05f359_case
		jbe    _05f354_jump
		cmp    $0x000009,%dl
		jne    _05f359_case
		mov    $0x00000d,%eax
		pop    %edx
		pop    %ebx
		ret    

	_05f34f_case:
		cmp    $0x000002,%dl
		jne    _05f359_case

	_05f354_jump:
		mov    $0x00000c,%eax

	_05f359_case:
		pop    %edx
		pop    %ebx
		ret    



_05f35c_func:
		push   %edx
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    



_05f378_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		call   _02f088_func
		mov    0x00006d(%esi),%ah
		test   %ah,%ah
		jne    _05f447_jump
		cmpb   $0x000004,0x00006c(%esi)
		jne    _05f447_jump
		mov    $0x000001,%dh
		mov    _0cc300_data,%ecx
		mov    %dh,_0cef95_data
		mov    _0cc304_data,%dx
		xor    %al,%al
		test   %dx,%dx
		jle    _05f447_jump

	_05f3b8_jump:
		cmpw   $0x000026,0x000060(%ecx)
		jne    _05f437_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _05f437_jump
		mov    0x000081(%ecx),%bl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _01f304_func
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d374_func
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		add    $0x000032,%eax
		movw   $0x00fffe,0x000042(%ecx)
		mov    $0x000003,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		movw   $0x000001,0x000040(%ecx)
		call   _01db8c_func
		mov    %esi,%eax
		call   _01d364_func
		movw   $0x00fff8,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f437_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _05f3b8_jump

	_05f447_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f44c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x000000,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_05f464_func:
		push   %esi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %ebx,0x000004(%esp)
		mov    %ecx,(%esp)
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _05f56c_jump

	_05f489_jump:
		cmpw   $0x000000,0x000060(%ecx)
		jne    _05f496_jump
		cmp    $0x000001,%dx
		je     _05f4ab_jump

	_05f496_jump:
		cmpw   $0x000009,0x000060(%ecx)
		jne    _05f55c_jump
		cmp    $0x000002,%dx
		jne    _05f55c_jump

	_05f4ab_jump:
		cmpw   $0x000000,0x00003c(%ecx)
		jg     _05f55c_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _05f55c_jump
		andb   $0x0000bb,0x000081(%ecx)
		mov    $0x000002,%ebx
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    %ebx,%edx
		movw   $0x000000,0x00005e(%ecx)
		call   _01d374_func
		movl   $0x000001,0x000030(%ecx)
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %edx,0x000028(%ecx)
		mov    0x000069(%ecx),%al
		mov    0x00002c(%esi),%esi
		sar    $0x000002,%eax
		sub    %eax,%esi
		mov    %ecx,%eax
		mov    %esi,0x00002c(%ecx)
		call   _01db14_func
		mov    (%esp),%eax
		mov    0x000081(%ecx),%dh
		mov    %ax,0x000042(%ecx)
		test   $0x000008,%dh
		je     _05f53b_jump
		mov    0x000004(%esp),%eax
		jmp    _05f545_jump

	_05f53b_jump:
		mov    0x000004(%esp),%eax
		mov    %ax,0x000040(%ecx)
		neg    %eax

	_05f545_jump:
		mov    %ax,0x000040(%ecx)
		mov    %ecx,%eax
		call   _01db8c_func
		andb   $0x0000ef,0x000081(%ecx)
		add    $0x000008,%esp
		pop    %esi
		ret    

	_05f55c_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jl     _05f489_jump

	_05f56c_jump:
		add    $0x000008,%esp
		pop    %esi
		ret    



_05f574_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		call   _02f088_func
		cmpb   $0x000000,_0cdcd2_data
		jne    _05f598_jump
		cmpb   $0x000000,_0cdcd4_data
		je     _05f673_jump

	_05f598_jump:
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		mov    %esp,%edx
		mov    %esi,%eax
		call   _077950_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05f5b6_jump
		neg    %eax

	_05f5b6_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jg     _05f665_jump
		cmpw   $0x00000f,0x000008(%esp)
		jge    _05f665_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _05f5dd_jump
		cmpb   $0x000000,0x00006c(%esi)
		je     _05f5f3_jump

	_05f5dd_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _05f5e9_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _05f5f3_jump

	_05f5e9_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _05f68b_jump

	_05f5f3_jump:
		mov    _0cdc30_data,%eax
		mov    0x000081(%eax),%ah
		shl    $0x000004,%ah
		shr    $0x000007,%ah
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%ah
		je     _05f68b_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		movw   $0x000000,0x000040(%esi)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%esi)
		call   _01d374_func
		andb   $0x0000ef,0x000081(%esi)
		mov    0x000081(%esi),%cl
		mov    $0x000001,%ebx
		test   $0x000008,%cl
		setne  %al
		and    $0x0000ff,%eax
		xor    %edx,%edx
		add    $0x000002,%eax
		mov    %al,%dl
		mov    %esi,%eax
		call   _05f030_func
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f665_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _05f68b_jump
		cmpb   $0x000010,0x00006c(%esi)
		jne    _05f68b_jump
		jmp    _05f67f_jump

	_05f673_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _05f68b_jump
		cmpb   $0x000010,0x00006c(%esi)
		jne    _05f68b_jump

	_05f67f_jump:
		mov    $0x000011,%edx
		mov    %esi,%eax
		call   _01d364_func

	_05f68b_jump:
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f694_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    _0cdc30_data,%eax
		mov    0x000034(%eax),%eax
		mov    0x000034(%ecx),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    $0x00001e,%eax
		cmp    %edx,%eax
		jle    _05f6e9_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _05f6e9_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _05f6e9_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05f030_func
		movw   $0x000001,_0cece4_data
		mov    _0ced89_data,%dh
		or     $0x000004,%dh
		movb   $0x000002,0x00006e(%ecx)
		mov    %dh,_0ced89_data

	_05f6e9_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05f6ec_func:
		push   %edx
		mov    0x000076(%eax),%dl
		cmp    $0x000002,%dl
		ja     _05f6fc_jump
		dec    %dl
		mov    %dl,0x00006b(%eax)
		pop    %edx
		ret    

	_05f6fc_jump:
		sub    $0x000003,%dl
		mov    %dl,0x00006b(%eax)
		pop    %edx
		ret    



_05f704_func:
		mov    0x000076(%eax),%dl
		cmp    $0x000002,%dl
		je     _05f711_jump
		cmp    $0x000004,%dl
		jne    _05f714_jump

	_05f711_jump:
		decb   0x000076(%eax)

	_05f714_jump:
		ret    



_05f718_func:
		push   %edx
		mov    %eax,%edx
		call   _02f088_func
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		pop    %edx
		ret    



_05f730_func:
		push   %ebx
		mov    %eax,%ebx
		testb  $0x000080,_0ced80_data
		je     _05f763_jump
		cmpw   $0x000003,_0cedb4_data
		je     _05f763_jump
		mov    0x000032(%ebx),%edx
		mov    $0x0000c2,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		mov    _0cdc30_data,%eax
		mov    0x000034(%ebx),%dx
		mov    %dx,0x00004a(%eax)

	_05f763_jump:
		pop    %ebx
		ret    



_05f768_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		call   _077338_func
		mov    0x000032(%ebx),%edx
		mov    $0x0000c2,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		mov    _0ced80_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05f7b4_jump
		call   _056444_func
		mov    _0ced80_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,1)

	_05f7b4_jump:
		movw   $0x00012c,_095b50_data
		call   _077548_func
		mov    %ax,_0ced82_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _05f7d3_jump
		call   _056444_func

	_05f7d3_jump:
		mov    0x000081(%ebx),%ch
		mov    0x000032(%ebx),%eax
		and    $0x0000fb,%ch
		sar    $0x000010,%eax
		mov    %ch,0x000081(%ebx)
		call   _0713b0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f7f4_func:
		push   %ebx
		cmp    $0x000004,%dx
		jne    _05f833_jump
		cmpb   $0x000005,0x00006c(%eax)
		jne    _05f833_jump
		mov    _0cdc30_data,%edx
		mov    0x000040(%edx),%bx
		test   %bx,%bx
		jl     _05f829_jump
		jle    _05f819_jump
		mov    $0x000009,%edx
		jmp    _05f82e_jump

	_05f819_jump:
		testb  $0x000008,0x000081(%edx)
		je     _05f829_jump
		mov    $0x000009,%edx
		jmp    _05f82e_jump

	_05f829_jump:
		mov    $0x000006,%edx

	_05f82e_jump:
		call   _01d364_func

	_05f833_jump:
		pop    %ebx
		ret    



_05f838_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _077338_func
		mov    _0ced80_data,%ah
		mov    0x000081(%edx),%bl
		or     $0x000080,%ah
		and    $0x0000fb,%bl
		mov    %ah,_0ced80_data
		mov    %bl,0x000081(%edx)
		pop    %edx
		pop    %ebx
		ret    

_05f864_switch:
		.long   _05f91f_case
		.long   _05f935_case
		.long   _05f925_case
		.long   _05f935_case
		.long   _05f925_case
		.long   _05f935_case
		.long   _05f935_case
		.long   _05f92b_case
		.long   _05f935_case
		.long   _05f931_case
		.long   _05f935_case
		.long   _05f931_case




_05f894_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000007,0x00006c(%eax)
		jne    _05f8e8_jump
		testb  $0x000001,_0ced80_data
		jne    _05f8b6_jump
		mov    _0cdc30_data,%eax
		movb   $0x000008,0x00006e(%eax)
		jmp    _05f935_case

	_05f8b6_jump:
		mov    _0cdc30_data,%ebx
		mov    0x00006e(%ebx),%al
		cmp    $0x000003,%al
		jb     _05f8ce_jump
		jbe    _05f8dc_jump
		cmp    $0x000005,%al
		je     _05f8e2_jump
		jmp    _05f935_case

	_05f8ce_jump:
		cmp    $0x000001,%al
		jne    _05f935_case
		movb   $0x000008,0x00006e(%ebx)
		jmp    _05f935_case

	_05f8dc_jump:
		movb   $0x00000a,0x00006e(%ebx)
		jmp    _05f935_case

	_05f8e2_jump:
		movb   $0x00000c,0x00006e(%ebx)
		jmp    _05f935_case

	_05f8e8_jump:
		cmpb   $0x00000e,0x00006c(%edx)
		jne    _05f935_case
		testb  $0x000001,_0ced80_data
		jne    _05f902_jump
		mov    _0cdc30_data,%eax
		movb   $0x000001,0x00006e(%eax)
		jmp    _05f935_case

	_05f902_jump:
		mov    _0cdc30_data,%eax
		mov    0x00006e(%eax),%bl
		dec    %bl
		cmp    $0x00000b,%bl
		ja     _05f935_case
		and    $0x0000ff,%ebx
		jmp    *%cs:_05f864_switch(,%ebx,4)

	_05f91f_case:
		movb   $0x000003,0x00006e(%eax)
		jmp    _05f935_case

	_05f925_case:
		movb   $0x000005,0x00006e(%eax)
		jmp    _05f935_case

	_05f92b_case:
		movb   $0x00000a,0x00006e(%eax)
		jmp    _05f935_case

	_05f931_case:
		movb   $0x00000c,0x00006e(%eax)

	_05f935_case:
		mov    %edx,%eax
		call   _077338_func
		mov    _0ced80_data,%al
		mov    0x000081(%edx),%ch
		or     $0x000001,%al
		and    $0x0000fb,%ch
		mov    %al,_0ced80_data
		mov    _0cdc30_data,%eax
		mov    %ch,0x000081(%edx)
		mov    0x00006e(%eax),%bl
		mov    %bl,0x00006c(%eax)
		mov    %bl,_0cdcd0_data
		mov    0x000032(%edx),%edx
		mov    $0x00000b,%eax
		sar    $0x000010,%edx
		mov    %bl,_0ce033_data
		call   _06f3bc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f984_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _077338_func
		mov    0x000076(%edx),%al
		mov    _0cdc1a_data,%ah
		add    %al,%ah
		mov    _0ce4b3_data,%bl
		mov    %ah,_0cdc1a_data
		cmp    %bl,%ah
		jbe    _05f9ae_jump
		mov    %bl,_0cdc1a_data

	_05f9ae_jump:
		andb   $0x0000fb,0x000081(%edx)
		mov    0x000032(%edx),%edx
		mov    $0x000008,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		pop    %edx
		pop    %ebx
		ret    



_05f9c8_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000032(%eax),%edx
		mov    $0x0000d5,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		mov    %ebx,%eax
		call   _077338_func
		mov    _0ced80_data,%ah
		mov    0x000081(%ebx),%dl
		or     $0x000008,%ah
		and    $0x0000fb,%dl
		mov    %ah,_0ced80_data
		mov    %dl,0x000081(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_05fa04_func:
		push   %edx
		orb    $0x000040,_0ced80_data
		mov    0x000081(%eax),%dh
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%eax)
		mov    0x000032(%eax),%edx
		mov    $0x00000a,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		pop    %edx
		ret    



_05fa34_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000032(%eax),%edx
		mov    $0x00000e,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		mov    $0x000017,%edx
		mov    %ebx,%eax
		call   _01d364_func
		cmpw   $0x000000,_0ced5e_data
		je     _05fa94_jump
		mov    _0cefab_data,%dl
		dec    %dl
		mov    %dl,_0cefab_data
		mov    _0cefaa_data,%dh
		inc    %dh
		mov    %dh,_0cefaa_data
		mov    %dh,_0ce4b0_data
		test   %dl,%dl
		jne    _05fa9a_jump
		movw   $0x00ffe0,_0ced68_data
		call   _03b948_func
		jmp    _05fa9a_jump

	_05fa94_jump:
		incb   _0ce4b0_data

	_05fa9a_jump:
		cmpb   $0x000063,_0ce4b0_data
		jbe    _05faea_jump
		mov    %ebx,%eax
		call   _077338_func
		cmpw   $0x000000,_0ced5e_data
		je     _05fabf_jump
		movw   $0x00ffff,_0ced82_data
		jmp    _05faca_jump

	_05fabf_jump:
		call   _077548_func
		mov    %ax,_0ced82_data

	_05faca_jump:
		mov    _0ced80_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05fadc_jump
		call   _056444_func

	_05fadc_jump:
		movb   $0x000001,_0cefee_data
		subb   $0x000064,_0ce4b0_data

	_05faea_jump:
		mov    0x000038(%ebx),%ax
		add    $0x00000a,%eax
		movswl %ax,%edx
		mov    0x000036(%ebx),%ax
		add    $0x00000a,%eax
		cwtl   
		call   _077a30_func
		pop    %edx
		pop    %ebx
		ret    



_05fb08_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _077338_func
		mov    _0ced98_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _05fb45_jump
		mov    $0x000004,%ah
		mov    %ah,_0cdc1a_data
		mov    %ah,_0ce4b3_data
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0cc300_data,%eax
		shl    $0x000002,%ebx
		andb   $0x0000fb,0x000081(%ebx,%eax,1)

	_05fb45_jump:
		movw   $0x00012c,_095b50_data
		call   _077548_func
		mov    %ax,_0ced9a_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _05fb6b_jump
		mov    $0x000004,%al
		mov    %al,_0cdc1a_data
		mov    %al,_0ce4b3_data

	_05fb6b_jump:
		andb   $0x0000fb,0x000081(%edx)
		mov    0x000032(%edx),%edx
		mov    $0x00000c,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		mov    _0cedb4_data,%cx
		cmp    $0x000003,%cx
		je     _05fba3_jump
		cmp    $0x000004,%cx
		je     _05fba3_jump
		mov    $0x000004,%bh
		mov    %bh,_0cdc1a_data
		mov    %bh,_0ce4b3_data

	_05fba3_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05fba8_func:
		push   %edx
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		call   _02e3c8_func
		pop    %edx
		ret    



_05fbc8_func:
		push   %ebx
		push   %edx
		mov    0x000076(%eax),%dl
		cmp    0x000077(%eax),%dl
		jae    _05fbe4_jump
		mov    %dl,%bl
		dec    %bl
		mov    %bl,0x000076(%eax)
		cmp    $0x000001,%bl
		jae    _05fbe4_jump
		mov    0x000077(%eax),%dl
		mov    %dl,0x000076(%eax)

	_05fbe4_jump:
		pop    %edx
		pop    %ebx
		ret    



_05fbe8_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0cedda_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05fc21_jump
		mov    0x000076(%edx),%al
		cmp    0x000077(%edx),%al
		jne    _05fc21_jump
		mov    %edx,%eax
		call   _077338_func
		movw   $0x000000,0x000040(%edx)
		mov    0x000076(%edx),%bl
		movw   $0x000000,0x000042(%edx)
		dec    %bl
		mov    %bl,0x000076(%edx)
		call   _058fac_func

	_05fc21_jump:
		pop    %edx
		pop    %ebx
		ret    



_05fc24_func:
		call   _05fc34_func
		xor    %ah,%ah
		mov    %ah,_0cefee_data
		ret    



_05fc34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000002,_0cdc11_data
		jne    _05fcad_jump
		cmpb   $0x000008,_0cdc10_data
		setne  %al
		and    $0x0000ff,%eax
		je     _05fcad_jump
		cmpw   $0x000000,_0cdbe4_data
		je     _05fc7c_jump
		cmpw   $0x000000,_0cedb2_data
		jne    _05fc7c_jump
		mov    _0cdbe2_data,%eax
		mov    _0cdbcc_data,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,_0cdbcc_data

	_05fc7c_jump:
		mov    $0x000001,%cl
		mov    _0cdbe6_data,%bx
		xor    %eax,%eax
		mov    %cl,_0cefcb_data
		mov    %ax,_0cdbe4_data
		mov    %ax,_0cedb2_data
		test   %bx,%bx
		jge    _05ffda_jump
		mov    %ax,_0cdbe6_data
		jmp    _05ffda_jump

	_05fcad_jump:
		mov    _0cdc11_data,%dh
		test   %dh,%dh
		je     _05fcc0_jump
		cmp    $0x000001,%dh
		jne    _05fe3d_jump

	_05fcc0_jump:
		mov    _0cdbf8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05fe3d_jump
		cmpb   $0x000000,_0cefb6_data
		jne    _05fe3d_jump
		call   _06ed40_func
		cmpb   $0x000000,_0cefc8_data
		je     _05fd02_jump
		mov    $0x000007,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		jmp    _05fd1e_jump

	_05fd02_jump:
		mov    $0x000017,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		xor    %bh,%bh
		mov    %bh,_0cdc0f_data

	_05fd1e_jump:
		cmpb   $0x000000,_0cdcd2_data
		je     _05fd4f_jump
		mov    _0cdc30_data,%eax
		mov    0x000081(%eax),%ch
		xor    %dl,%dl
		and    $0x0000fb,%ch
		mov    %dl,_0cdcd2_data
		mov    %ch,0x000081(%eax)
		call   _077338_func
		xor    %eax,%eax
		call   _0646b4_func

	_05fd4f_jump:
		call   _078018_func
		cmpb   $0x000001,_0cefa9_data
		jne    _05fd8b_jump
		mov    _0ced7e_data,%ax
		xor    %esi,%esi
		mov    %ax,_0ced80_data
		xor    %eax,%eax
		mov    %si,_0cedb2_data
		call   _069cd8_func
		mov    $0x000001,%eax
		xor    %bl,%bl
		call   _069cd8_func
		mov    %bl,_0cefa9_data

	_05fd8b_jump:
		mov    _0ced80_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05fdc4_jump
		movw   $0x00ffff,_0ced82_data
		call   _056444_func
		mov    _0ced80_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,4)

	_05fdc4_jump:
		mov    _0ced98_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05fe00_jump
		mov    $0xffffffff,%eax
		mov    $0x000004,%cl
		mov    %ax,_0ced9a_data
		mov    _0cc300_data,%eax
		mov    %cl,_0cdc1a_data
		mov    -0x000003(%eax),%dl
		sub    $0x000084,%eax
		and    $0x0000fb,%dl
		mov    %cl,_0ce4b3_data
		mov    %dl,0x000081(%eax)

	_05fe00_jump:
		xor    %edx,%edx
		mov    %dx,_0cedb2_data
		mov    %dx,_0cdbe4_data
		cmpb   $0x000000,_0cefc8_data
		jne    _05fe33_jump
		cmpb   $0x000000,_0cefa9_data
		jne    _05fe33_jump
		cmpw   $0x000006,_0cede4_data
		je     _05fe33_jump
		movb   $0x000002,_0cefb6_data

	_05fe33_jump:
		call   _01cb68_func
		jmp    _05ffda_jump

	_05fe3d_jump:
		cmpb   $0x000003,_0cdc11_data
		jne    _05fe4f_jump
		cmpb   $0x000017,_0cdc10_data
		je     _05fe69_jump

	_05fe4f_jump:
		cmpb   $0x000003,_0cdc11_data
		jne    _05ff67_jump
		cmpb   $0x000007,_0cdc10_data
		jne    _05ff67_jump

	_05fe69_jump:
		mov    $_0cdba4_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _05fe97_jump
		cmpb   $0x000000,_0cefc8_data
		je     _05fe8a_jump
		cmpw   $0x000006,_0cede4_data
		je     _05fe91_jump

	_05fe8a_jump:
		mov    $0x000001,%eax
		jmp    _05fe93_jump

	_05fe91_jump:
		xor    %eax,%eax

	_05fe93_jump:
		test   %eax,%eax
		jne    _05feca_jump

	_05fe97_jump:
		cmpb   $0x000000,_0cefc8_data
		je     _05fee1_jump
		cmpw   $0x000006,_0cede4_data
		jne    _05fee1_jump
		call   _036944_func
		test   %al,%al
		jne    _05feca_jump
		cmpb   $0x000000,_0cef99_data
		je     _05fee1_jump
		mov    $_0cdba4_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _05fee1_jump

	_05feca_jump:
		call   _03b970_func
		xor    %dh,%dh
		call   _077ca0_func
		mov    %dh,_0cefb6_data
		jmp    _05ffda_jump

	_05fee1_jump:
		xor    %eax,%eax
		mov    _0cdbec_data,%edx
		mov    %ax,_0cdbe4_data
		mov    %ax,_0cdbe6_data
		mov    %ax,_0cedb2_data
		sar    $0x000010,%edx
		mov    %ax,_0cedce_data
		cmp    $0xffffffff,%edx
		je     _05ffda_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cdbec_data,%ebx
		add    %edx,%eax
		mov    _0cc300_data,%edx
		sar    $0x000010,%ebx
		movw   $0x000000,0x000042(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cdbec_data,%ebx
		sar    $0x000010,%ebx
		movw   $0x000000,0x000040(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cdbec_data,%ebx
		sar    $0x000010,%ebx
		movb   $0x000000,0x000071(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movb   $0x000000,0x000072(%edx,%eax,4)
		jmp    _05ffda_jump

	_05ff67_jump:
		cmpb   $0x000006,_0cdc11_data
		jne    _05ffda_jump
		cmpb   $0x00000e,_0cdc10_data
		je     _05ff95_jump
		mov    $0x00000e,%edx
		mov    $_0cdba4_data,%eax
		xor    %bl,%bl
		call   _01d364_func
		mov    %bl,_0cdc0f_data
		call   _01cb68_func

	_05ff95_jump:
		mov    $0x000002,%bh
		mov    _0cdc10_data,%cl
		xor    %edx,%edx
		mov    %bh,_0cefb6_data
		mov    %dx,_0cedb2_data
		mov    %dx,_0cdbe4_data
		mov    %dx,_0cdbe6_data
		cmp    $0x00000e,%cl
		jne    _05ffda_jump
		mov    $_0cdba4_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _05ffda_jump
		xor    %ch,%ch
		call   _077ca0_func
		mov    %ch,_0cefb6_data

	_05ffda_jump:
		cmpb   $0x000000,_0cefb6_data
		je     _06000b_jump
		xor    %esi,%esi
		mov    _0cee04_data,%ax
		mov    %si,_0cee06_data
		mov    %ax,_0cee10_data
		mov    _0cee00_data,%ax
		mov    %si,_0cee08_data
		mov    %ax,_0cedfa_data

	_06000b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060010_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpw   $0x000000,_0ced5e_data
		je     _060053_jump
		mov    _0cce10_data,%al
		xor    %edx,%edx
		xor    %edi,%edi
		mov    %al,_0ce4b0_data
		mov    %edx,_0cce10_data
		mov    $_0cdba4_data,%eax
		mov    %di,_0cedf4_data
		call   _076184_func
		call   _06ed40_func
		call   _03b970_func
		jmp    _0600c5_jump

	_060053_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _060065_jump
		cmpb   $0x000008,_0cdc10_data
		je     _0600c5_jump

	_060065_jump:
		cmpb   $0x0000ff,_0cdc1a_data
		je     _0600c5_jump
		cmpb   $0x000000,_0cefb6_data
		jne    _0600c5_jump
		call   _06ed40_func
		call   _03b970_func
		mov    $_0ce03c_data,%eax
		mov    $0x000001,%ebx
		call   _070f04_func
		mov    %bx,_0cedea_data
		cmpb   $0x000000,_0cefee_data
		je     _0600c5_jump
		decw   _0ce4aa_data
		mov    _0ce4a8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0600bd_jump
		xor    %esi,%esi
		mov    %si,_0ce4aa_data

	_0600bd_jump:
		xor    %cl,%cl
		mov    %cl,_0cefee_data

	_0600c5_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0600cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _060122_jump
		cmpb   $0x000004,0x00006c(%eax)
		jne    _060122_jump
		call   _01cbd0_func
		test   %al,%al
		je     _060122_jump
		mov    _0ced89_data,%bl
		test   $0x000008,%bl
		jne    _060122_jump
		mov    _0cedec_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		mov    $0x000001,%cl
		shl    $0x000005,%eax
		mov    %bl,%bh
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		or     $0x000008,%bh
		add    %edx,%eax
		mov    %bh,_0ced89_data
		call   _077eb4_func
		mov    %cl,_0cef95_data

	_060122_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060128_func:
		push   %edx
		cmpb   $0x000001,0x00006c(%eax)
		jne    _060139_jump
		mov    $0x000005,%edx
		call   _01d364_func

	_060139_jump:
		pop    %edx
		ret    



_06013c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000070(%eax)
		jne    _060155_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _060162_jump

	_060155_jump:
		cmpb   $0x000001,0x000070(%esi)
		jne    _060162_jump
		orb    $0x000008,0x000081(%esi)

	_060162_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _060204_jump
		cmpb   $0x00000b,0x00006c(%esi)
		jne    _060204_jump
		cmpb   $0x000005,0x00006b(%esi)
		jb     _0601ed_jump
		cmpb   $0x000000,0x00007f(%esi)
		jne    _0601ed_jump
		mov    0x00007f(%esi),%dh
		mov    0x00007d(%esi),%bl
		inc    %dh
		inc    %bl
		mov    %dh,0x00007f(%esi)
		mov    %bl,0x00007d(%esi)
		cmp    $0x000002,%bl
		jbe    _06019b_jump
		movb   $0x000001,0x00007d(%esi)

	_06019b_jump:
		cmpb   $0x000001,0x000076(%esi)
		je     _0601bc_jump
		mov    $0xffffffff,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		mov    0x00007d(%esi),%dl
		call   _05f464_func
		jmp    _06032e_jump

	_0601bc_jump:
		mov    $0xfffffffe,%ecx
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _05f464_func
		mov    $0xffffffff,%ecx
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _05f464_func
		jmp    _06032e_jump

	_0601ed_jump:
		cmpb   $0x000002,0x00006b(%esi)
		jae    _06032e_jump
		movb   $0x000000,0x00007f(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060204_jump:
		mov    0x00006d(%esi),%ch
		test   %ch,%ch
		jne    _06029c_jump
		cmpb   $0x000015,0x00006c(%esi)
		jne    _06029c_jump
		cmpb   $0x000005,0x00006b(%esi)
		jb     _060285_jump
		cmpb   $0x000000,0x00007f(%esi)
		jne    _060285_jump
		mov    %ch,(%esp)
		mov    0x00007f(%esi),%ch
		inc    %ch
		mov    $0xfffffffc,%edi
		mov    %ch,0x00007f(%esi)

	_060235_jump:
		xor    %edx,%edx
		mov    (%esp),%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		inc    %edx
		xor    %dh,%dh
		mov    $0x000003,%eax
		mov    %edx,%ebx
		sub    %edx,%eax
		neg    %ebx
		movswl %ax,%edx
		movswl %bx,%ecx
		mov    %esi,%eax
		movswl %di,%ebx
		inc    %edi
		call   _05f464_func
		movswl %di,%edx
		cmp    $0xfffffffe,%edx
		jne    _060272_jump
		mov    $0x000003,%edi

	_060272_jump:
		mov    (%esp),%ch
		inc    %ch
		mov    %ch,(%esp)
		cmp    $0x000004,%ch
		jae    _06032e_jump
		jmp    _060235_jump

	_060285_jump:
		cmpb   $0x000002,0x00006b(%esi)
		jae    _06032e_jump
		movb   $0x000000,0x00007f(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06029c_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0602f9_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000003,%dl
		jne    _0602f9_jump
		mov    0x00007f(%esi),%cl
		inc    %cl
		mov    %cl,0x00007f(%esi)
		cmp    0x00007d(%esi),%dl
		je     _0602c6_jump
		cmp    $0x0000fd,%cl
		jb     _0602c6_jump
		mov    %esi,%eax
		call   _076d70_func
		mov    %dl,0x00007d(%esi)

	_0602c6_jump:
		movw   $0x000000,0x000040(%esi)
		mov    0x00006b(%esi),%ah
		movw   $0x000000,0x000042(%esi)
		cmp    $0x00000c,%ah
		jbe    _0602e7_jump
		movb   $0x000003,0x00006b(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0602e7_jump:
		cmp    $0x000001,%ah
		ja     _06032e_jump
		movb   $0x000000,0x00007f(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0602f9_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _06032e_jump
		cmpw   $0x000000,0x000052(%esi)
		je     _060309_jump
		incb   0x00007f(%esi)

	_060309_jump:
		cmpb   $0x0000fe,0x00007f(%esi)
		jb     _060320_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _05f030_func

	_060320_jump:
		mov    %esi,%eax
		call   _053ce4_func
		mov    %esi,%eax
		call   _0252c0_func

	_06032e_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060338_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		test   %dx,%dx
		jne    _060387_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _06034d_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _060354_jump

	_06034d_jump:
		mov    $0x000001,%eax
		jmp    _060356_jump

	_060354_jump:
		xor    %eax,%eax

	_060356_jump:
		test   %eax,%eax
		je     _060387_jump
		mov    $0x000001,%dh
		mov    %ecx,%eax
		mov    %dh,_0cdcd3_data
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _06037b_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _060391_jump

	_06037b_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		jmp    _060391_jump

	_060387_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_060391_jump:
		mov    %ecx,%eax
		call   _05f030_func
		pop    %ecx
		pop    %ebx
		ret    



_06039c_func:
		movw   $0x000001,0x000052(%eax)
		ret    



_0603a4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _060409_jump
		mov    %ecx,%eax
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _0603e7_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		jmp    _0603f0_jump

	_0603e7_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_0603f0_jump:
		call   _01d374_func
		testb  $0x000008,0x000081(%ecx)
		jne    _060405_jump
		movb   $0x000000,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_060405_jump:
		movb   $0x000001,0x000070(%ecx)

	_060409_jump:
		pop    %ecx
		pop    %ebx
		ret    



_06040c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _060468_jump
		mov    0x00006c(%ecx),%dl
		test   %dl,%dl
		je     _060423_jump
		cmp    $0x000002,%dl
		jne    _060468_jump

	_060423_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		call   _01d374_func
		mov    0x000081(%ecx),%bl
		and    $0x0000ef,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _01db14_func
		testb  $0x000008,0x000081(%ecx)
		je     _060464_jump
		movb   $0x000001,0x000070(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060464_jump:
		movb   $0x000000,0x000070(%ecx)

	_060468_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0604bc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x0000ff,%dx
		je     _0604e6_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		testb  $0x000001,0x000007(%eax,%edx,8)
		je     _0605b2_jump

	_0604e6_jump:
		mov    %ecx,%eax
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _06052d_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05f030_func
		mov    0x00002c(%ecx),%ebx
		mov    0x000081(%ecx),%dh
		sub    $0x000002,%ebx
		and    $0x0000ef,%dh
		mov    %ebx,0x00002c(%ecx)
		mov    %dh,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_06052d_jump:
		mov    _0cdc30_data,%eax
		testb  $0x000008,0x000081(%eax)
		je     _060556_jump
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jle    _060552_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _060578_jump

	_060552_jump:
		jge    _06057f_jump
		jmp    _06056e_jump

	_060556_jump:
		mov    0x000040(%eax),%dx
		cmp    $0x000001,%dx
		jle    _06056c_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _060578_jump

	_06056c_jump:
		jge    _06057f_jump

	_06056e_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_060578_jump:
		mov    %ecx,%eax
		call   _05f030_func

	_06057f_jump:
		mov    $0x000002,%ebx
		mov    0x00002c(%ecx),%edx
		movw   $0x000000,0x000040(%ecx)
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    %ebx,%edx
		movw   $0x00fffc,0x000042(%ecx)
		call   _01d374_func
		mov    0x000032(%ecx),%edx
		mov    $0x00001c,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func

	_0605b2_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0605b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000001,0x00006d(%eax)
		jne    _0605d9_jump
		cmpb   $0x00000b,0x00006c(%ecx)
		jne    _0605d9_jump
		mov    $0x00000e,%edx
		mov    %ecx,%eax
		call   _01d364_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0605d9_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0605e5_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _0605f1_jump

	_0605e5_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _060632_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _060632_jump

	_0605f1_jump:
		mov    $0x00000b,%ebx
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d374_func
		mov    0x000081(%ecx),%ah
		and    $0x0000ef,%ah
		mov    $0x000001,%ebx
		mov    %ah,0x000081(%ecx)
		test   $0x000008,%ah
		setne  %dl
		and    $0x0000ff,%edx
		add    $0x000002,%edx
		and    $0x0000ff,%edx
		mov    %ecx,%eax
		call   _05f030_func

	_060632_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060638_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		mov    _0cdc30_data,%ebx
		mov    0x000040(%ebx),%dx
		test   %dx,%dx
		jle    _06065c_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _060668_jump

	_06065c_jump:
		jge    _06066f_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_060668_jump:
		mov    %ecx,%eax
		call   _05f030_func

	_06066f_jump:
		mov    0x00002c(%ecx),%edx
		movw   $0x000000,0x000040(%ecx)
		sub    $0x000002,%edx
		mov    0x000076(%ecx),%ah
		mov    %edx,0x00002c(%ecx)
		test   %ah,%ah
		je     _0606db_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%ecx),%edx
		add    %ebx,%edx
		movw   $0x00fffc,0x000042(%ecx)
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%bl
		testb  $0x000040,0x000007(%edx,%ebx,8)
		je     _0606b1_jump
		mov    $0x00000a,%ebx
		jmp    _0606b6_jump

	_0606b1_jump:
		mov    $0x000002,%ebx

	_0606b6_jump:
		mov    $0x000002,%edx
		and    $0x0000ff,%ebx
		mov    %ecx,%eax
		call   _01d374_func
		mov    0x000032(%ecx),%edx
		mov    $0x00001c,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		pop    %ecx
		pop    %ebx
		ret    

	_0606db_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		movw   $0x00fff8,0x000042(%ecx)
		lea    0x000000(,%edx,8),%eax
		mov    (%ebx),%edx
		testb  $0x000040,0x000007(%edx,%eax,1)
		je     _06070a_jump
		mov    $0x000006,%ebx
		jmp    _06070f_jump

	_06070a_jump:
		mov    $0x000003,%ebx

	_06070f_jump:
		and    $0x0000ff,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    



_060724_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000081(%eax),%ah
		shl    $0x000004,%ah
		shr    $0x000007,%ah
		mov    _0cdc25_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %ah,%al
		je     _0607b2_jump
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _060754_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _060760_jump

	_060754_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0607b2_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _0607b2_jump

	_060760_jump:
		cmpb   $0x000000,_0cdc11_data
		jne    _0607b2_jump
		cmpb   $0x000012,_0cdc10_data
		jne    _0607b2_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		call   _01d374_func
		testb  $0x000008,0x000081(%ecx)
		je     _0607a1_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		jmp    _0607ab_jump

	_0607a1_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx

	_0607ab_jump:
		mov    %ecx,%eax
		call   _05f030_func

	_0607b2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0607b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000070(%eax),%al
		cmp    $0x000002,%al
		jb     _060824_jump
		jbe    _0607ce_jump
		cmp    $0x00001e,%al
		jne    _060846_jump

	_0607ce_jump:
		mov    %edx,%eax
		call   _053ce4_func
		mov    %edx,%eax
		call   _0252c0_func
		cmpb   $0x000000,0x00006d(%edx)
		jne    _060846_jump
		cmpb   $0x000002,0x00006c(%edx)
		jne    _060846_jump
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		mov    0x000076(%edx),%bh
		shr    $0x000007,%al
		cmp    %bh,%al
		je     _060846_jump
		lea    0x000081(%edx),%eax
		test   $0x000001,%bh
		setne  %dl
		and    $0x0000ff,%edx
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    %ch,%dh
		mov    %ch,(%eax)
		or     %dl,%dh
		mov    %dh,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060824_jump:
		test   %al,%al
		jne    _060831_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _060838_jump

	_060831_jump:
		orb    $0x000008,0x000081(%edx)

	_060838_jump:
		mov    %edx,%eax
		call   _053ce4_func
		mov    %edx,%eax
		call   _0252c0_func

	_060846_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06084c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _06085c_jump
		cmpb   $0x000002,0x00006c(%ecx)
		je     _0608a5_jump

	_06085c_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d374_func
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		jne    _060889_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		or     $0x000008,%bh
		mov    $0x000003,%edx
		mov    %bh,0x000081(%ecx)
		jmp    _06089b_jump

	_060889_jump:
		mov    %dh,%bl
		mov    %ecx,%eax
		and    $0x0000f7,%bl
		mov    $0x000002,%edx
		mov    %bl,0x000081(%ecx)

	_06089b_jump:
		mov    $0x000001,%ebx
		call   _05f030_func

	_0608a5_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0608a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0608ed_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _0608ed_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		testb  $0x000008,0x000081(%ecx)
		je     _0608dc_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _0608e6_jump

	_0608dc_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_0608e6_jump:
		mov    %ecx,%eax
		call   _05f030_func

	_0608ed_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0608f4_func:
		push   %ebx
		push   %edx
		cmpb   $0x000004,0x00006c(%eax)
		jne    _06090b_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		call   _05f030_func

	_06090b_jump:
		pop    %edx
		pop    %ebx
		ret    



_060910_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02f088_func
		cmpw   $0x000000,_0cece4_data
		je     _0609a2_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _060942_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _060942_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _05f030_func

	_060942_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _060975_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _060975_jump
		mov    0x000004(%ecx),%eax
		mov    0x000016(%eax),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jl     _060975_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05f030_func

	_060975_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0609b0_jump
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _0609b0_jump
		mov    0x000004(%ecx),%eax
		mov    0x000022(%eax),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jl     _0609b0_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		jmp    _0609ab_jump

	_0609a2_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_0609ab_jump:
		call   _05f030_func

	_0609b0_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0609b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpw   $0x000000,_0cecdc_data
		je     _060a61_jump
		mov    _0cedda_data,%ax
		xor    %ebx,%ebx
		mov    %ax,_0cedc6_data
		mov    %ax,_0cedbc_data
		mov    %ax,_0cedfa_data
		mov    %bx,_0cedc8_data
		mov    %bx,_0cedba_data
		mov    0x00006d(%ecx),%ah
		mov    %bx,_0cee10_data
		test   %ah,%ah
		jne    _060a0c_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _060a0c_jump
		movw   $0x000001,_0cecd6_data

	_060a0c_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _060a61_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _060a61_jump
		cmpw   $0x000000,_0cecd6_data
		je     _060a3e_jump
		xor    %ebx,%ebx
		mov    %bx,_0cecd6_data
		mov    _0ced89_data,%bh
		or     $0x000002,%bh
		movb   $0x000000,0x00007f(%ecx)
		mov    %bh,_0ced89_data

	_060a3e_jump:
		mov    0x00007f(%ecx),%al
		inc    %al
		mov    %al,0x00007f(%ecx)
		cmp    $0x000064,%al
		jne    _060a51_jump
		call   _034de0_func
		jmp    _060a61_jump

	_060a51_jump:
		cmp    $0x000065,%al
		jne    _060a61_jump
		call   _077ca0_func
		orb    $0x000004,_0ced81_data

	_060a61_jump:
		cmpw   $0x000008,_0cedd0_data
		jne    _060a9d_jump
		cmpw   $0x000000,_0cece4_data
		je     _060a96_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _060a9d_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _060a9d_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05f030_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060a96_jump:
		andb   $0x0000fb,0x000081(%ecx)

	_060a9d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060aa4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _060ae6_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _060ae6_jump
		cmpw   $0x000000,_0cecdc_data
		jne    _060ae6_jump
		mov    $0x000002,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %bx,_0cecd6_data
		mov    $0x000001,%ebx
		mov    $0x000001,%esi
		call   _05f030_func
		mov    %si,_0cecdc_data

	_060ae6_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _060b03_jump
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _060b03_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _05f030_func

	_060b03_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060b08_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		add    %ebx,%eax
		sub    $0x00000c,%eax
		cwtl   
		call   _077dfc_func
		mov    0x000054(%edx),%ebx
		cwtl   
		sar    $0x000010,%ebx
		sub    $0x00002b,%eax
		add    %ebx,%eax
		mov    0x000034(%edx),%cx
		mov    %eax,0x00002c(%edx)
		cmp    _0cdbee_data,%cx
		jne    _060b46_jump
		movw   $0x00000d,0x000050(%edx)
		jmp    _060b4c_jump

	_060b46_jump:
		movw   $0x000000,0x000050(%edx)

	_060b4c_jump:
		mov    0x000056(%edx),%ax
		mov    0x000050(%edx),%si
		cmp    %si,%ax
		jge    _060b65_jump
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,0x000056(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060b65_jump:
		jle    _060b6c_jump
		dec    %eax
		mov    %ax,0x000056(%edx)

	_060b6c_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060b74_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		call   _02f088_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		cmpb   $0x000004,0x00006a(%esi)
		jne    _060bc8_jump
		cmpb   $0x00000a,0x00006b(%esi)
		jne    _060bc8_jump
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _060bc8_jump
		mov    0x000032(%esi),%edx
		mov    $0x000028,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func

	_060bc8_jump:
		mov    0x00006c(%esi),%bl
		cmp    $0x000001,%bl
		jne    _060be6_jump
		mov    0x00007f(%esi),%dh
		add    %bl,%dh
		mov    %dh,0x00007f(%esi)
		jne    _060d0d_jump
		mov    %bl,0x00007f(%esi)
		jmp    _060d0d_jump

	_060be6_jump:
		cmpb   $0x000000,0x00007f(%esi)
		je     _060c2e_jump
		mov    $0x000001,%ecx
		mov    $0x000001,%ebx
		mov    $_0cdde0_data,%edx
		xor    %edi,%edi
		mov    %cx,_0cec9a_data
		mov    %di,_0cec98_data
		mov    %ebx,_0cdbc8_data
		call   _0585dc_func
		mov    %esi,%eax
		call   _070ccc_func
		mov    %ebx,%eax
		call   _0574c0_func
		movb   $0x000000,0x00007f(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060c2e_jump:
		testb  $0x000002,_0ced81_data
		jne    _060d0d_jump
		testb  $0x000001,0x000081(%esi)
		jne    _060d0d_jump
		mov    %esi,%eax
		call   _01db50_func
		test   %ax,%ax
		je     _060d0d_jump
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _060d0d_jump
		cmpw   $0x000000,_0cedb2_data
		jne    _060d0d_jump
		cmpb   $0x000000,_0cdc11_data
		jne    _060d0d_jump
		cmpb   $0x000000,_0cdc10_data
		jne    _060d0d_jump
		mov    _0cedc8_data,%edx
		sar    $0x000010,%edx
		push   %edx
		mov    _0cedae_data,%edx
		mov    $0x00000f,%ecx
		sar    $0x000010,%edx
		mov    0x000028(%esi),%ax
		push   %edx
		mov    _0cedac_data,%edx
		mov    0x00002c(%esi),%bx
		sar    $0x000010,%edx
		add    $0x00002a,%eax
		push   %edx
		mov    _0cedaa_data,%edx
		add    $0x000030,%ebx
		sar    $0x000010,%edx
		cwtl   
		push   %edx
		movswl %bx,%edx
		mov    $0x000005,%ebx
		call   _02ae60_func
		test   %ax,%ax
		je     _060d0d_jump
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		xor    %ebx,%ebx
		or     $0x000001,%dl
		mov    %bx,_0cdbe4_data
		mov    %dl,0x000081(%esi)
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    %edx,_0cdbc8_data
		call   _05f030_func

	_060d0d_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060d14_func:
		jmp    _06ed30_jump



_060d1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x000073(%eax),%eax
		sar    $0x000018,%eax
		cmp    $0x000000,%eax
		je     _060d39_jump
		mov    $0x000001,%eax
		jg     _060d39_jump
		neg    %eax

	_060d39_jump:
		mov    %ax,0x000004(%esp)
		mov    0x000034(%esi),%dx
		cmp    _0cdbee_data,%dx
		je     _060d73_jump
		cmpb   $0x000000,_0cef57_data
		jne    _060e06_jump
		mov    0x000076(%esi),%bl
		test   %bl,%bl
		je     _060e06_jump
		mov    0x000004(%esp),%al
		mov    %bl,%bh
		sub    %al,%bh
		mov    %bh,0x000076(%esi)
		jmp    _060e06_jump

	_060d73_jump:
		cmpb   $0x000000,_0cef55_data
		jne    _060e06_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		xor    %eax,%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000074(%esi),%al
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0cdc0c_data,%dl
		mov    %ebx,0x00000c(%esp)
		add    _0cdbcc_data,%edx
		mov    0x00000e(%esp),%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    %ebx
		add    %ebx,%eax
		sub    %eax,%edx
		mov    $0x000003,%cl
		mov    %edx,%eax
		mov    %edx,(%esp)
		test   %ax,%ax
		js     _060dde_jump
		sar    %cl,%ax
		jmp    _060de7_jump

	_060dde_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_060de7_jump:
		sub    %al,0x000076(%esi)
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _060df6_jump
		neg    %eax

	_060df6_jump:
		cmp    $0x000010,%eax
		jl     _060e06_jump
		mov    0x000004(%esp),%al
		mov    $0x00000f,%ah
		mul    %ah
		mov    %al,0x000076(%esi)

	_060e06_jump:
		add    $0x000014,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060e10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		call   _01d380_func
		mov    %eax,%edx
		mov    %eax,%esi
		mov    %edi,%eax
		call   _01d4b0_func
		movswl %dx,%edx
		mov    %eax,%ecx
		movswl %ax,%ebx
		mov    %edi,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _060f06_jump
		mov    0x00006c(%edi),%ah
		cmp    $0x00000d,%ah
		je     _060e60_jump
		cmp    $0x00001c,%ah
		je     _060e60_jump
		cmp    $0x00000e,%ah
		je     _060e60_jump
		cmp    $0x00001d,%ah
		je     _060e60_jump
		mov    $0x000001,%edx
		jmp    _060e62_jump

	_060e60_jump:
		xor    %edx,%edx

	_060e62_jump:
		test   %edx,%edx
		je     _060f06_jump
		mov    0x000042(%edi),%dx
		test   %dx,%dx
		jle    _060ea9_jump
		mov    %edx,%eax
		dec    %eax
		mov    0x000060(%edi),%dx
		mov    %ax,0x000042(%edi)
		cmp    $0x0000ae,%dx
		je     _060e8c_jump
		cmp    $0x0000e1,%dx
		jne    _060e94_jump

	_060e8c_jump:
		movw   $0x00ffdc,0x000040(%edi)
		jmp    _060e9a_jump

	_060e94_jump:
		movw   $0x000024,0x000040(%edi)

	_060e9a_jump:
		movswl %cx,%ebx
		movswl %si,%edx
		mov    %edi,%eax
		call   _02ec10_func
		jmp    _060f06_jump

	_060ea9_jump:
		movswl %cx,%ebx
		movswl %si,%edx
		mov    %edi,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _060f06_jump
		mov    0x000060(%edi),%bx
		movw   $0x00ffff,0x000042(%edi)
		cmp    $0x0000ae,%bx
		je     _060ed3_jump
		cmp    $0x0000e1,%bx
		jne    _060edb_jump

	_060ed3_jump:
		movw   $0x00fff0,0x000040(%edi)
		jmp    _060ee1_jump

	_060edb_jump:
		movw   $0x000010,0x000040(%edi)

	_060ee1_jump:
		mov    0x00006c(%edi),%bh
		cmp    $0x000006,%bh
		jne    _060ef0_jump
		mov    $0x000007,%ebx
		jmp    _060efa_jump

	_060ef0_jump:
		cmp    $0x000015,%bh
		jne    _060f06_jump
		mov    $0x000016,%ebx

	_060efa_jump:
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _01d374_func

	_060f06_jump:
		mov    0x00006c(%edi),%ch
		cmp    $0x00000d,%ch
		je     _060f17_jump
		cmp    $0x00001c,%ch
		jne    _061050_jump

	_060f17_jump:
		cmpb   $0x000006,0x00006b(%edi)
		jne    _061050_jump
		cmpb   $0x000000,_0cef4f_data
		je     _061050_jump
		mov    _0cc300_data,%esi
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0610d6_jump

	_060f46_jump:
		cmpw   $0x0000ba,0x000060(%esi)
		jne    _061037_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _061037_jump
		lea    0x000004(%esp),%edx
		lea    0x00000c(%esp),%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d710_func
		testb  $0x000008,0x000081(%edi)
		je     _060fba_jump
		mov    -0x000002(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sar    %edx
		add    %ebx,%edx
		movw   $0x00000d,0x000040(%esi)
		add    $0x00000d,%edx
		mov    0x000081(%esi),%bh
		mov    %edx,0x000028(%esi)
		or     $0x000008,%bh
		mov    %dx,0x00003c(%esi)
		mov    %bh,0x000081(%esi)
		jmp    _060fe3_jump

	_060fba_jump:
		mov    -0x000002(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sar    %edx
		add    %ebx,%edx
		movw   $0x00fff3,0x000040(%esi)
		sub    $0x00000d,%edx
		mov    %edx,0x000028(%esi)
		mov    %dx,0x00003c(%esi)

	_060fe3_jump:
		mov    0x00000a(%esp),%ebx
		mov    0x000081(%esi),%cl
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000069(%esi),%dl
		or     $0x000004,%cl
		sub    %edx,%ebx
		mov    0x000002(%esp),%edx
		movw   $0x000002,0x000042(%esi)
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%esi)
		add    %ebx,%edx
		mov    %cl,0x000081(%esi)
		add    $0x000002,%edx
		mov    %edx,0x00002c(%esi)
		mov    %esi,%eax
		mov    %dx,0x00003e(%esi)
		call   _01f304_func
		andb   $0x0000ef,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061037_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _060f46_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061050_jump:
		mov    0x00006c(%edi),%dh
		cmp    $0x00000e,%dh
		je     _06105d_jump
		cmp    $0x00001d,%dh
		jne    _061081_jump

	_06105d_jump:
		movw   $0x00fff8,0x000042(%edi)
		mov    0x000081(%edi),%dh
		movw   $0x000000,0x000040(%edi)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%edi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061081_jump:
		mov    0x000040(%edi),%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _0610d6_jump
		mov    0x00006c(%edi),%bh
		cmp    $0x000006,%bh
		jne    _06109b_jump
		mov    $0x000007,%ebx
		jmp    _0610ca_jump

	_06109b_jump:
		cmp    $0x000015,%bh
		jne    _0610a7_jump
		mov    $0x000016,%ebx
		jmp    _0610ca_jump

	_0610a7_jump:
		cmp    $0x00000b,%bh
		jne    _0610b9_jump
		cmpb   $0x000036,0x00006b(%edi)
		jne    _0610b9_jump
		mov    $0x000002,%ebx
		jmp    _0610ca_jump

	_0610b9_jump:
		cmpb   $0x00001a,0x00006c(%edi)
		jne    _0610d6_jump
		cmpb   $0x000036,0x00006b(%edi)
		jne    _0610d6_jump
		mov    $0x000013,%ebx

	_0610ca_jump:
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _01d374_func

	_0610d6_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0610e0_func:
		push   %ebx
		push   %ecx
		mov    0x00006c(%eax),%dl
		test   %dl,%dl
		je     _0610ee_jump
		cmp    $0x000001,%dl
		jne    _06110c_jump

	_0610ee_jump:
		mov    0x000076(%eax),%bl
		dec    %bl
		mov    %bl,0x000076(%eax)
		jne    _061102_jump
		mov    $0x00000d,%ebx
		jmp    _061210_jump

	_061102_jump:
		mov    $0x00000a,%ebx
		jmp    _061210_jump

	_06110c_jump:
		cmp    $0x000007,%dl
		je     _061120_jump
		cmp    $0x000002,%dl
		je     _061120_jump
		cmp    $0x000003,%dl
		je     _061120_jump
		cmp    $0x000004,%dl
		jne    _061148_jump

	_061120_jump:
		mov    0x000076(%eax),%dl
		dec    %dl
		mov    %dl,0x000076(%eax)
		jne    _061139_jump
		mov    $0x00000d,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_061139_jump:
		mov    $0x00000c,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_061148_jump:
		cmp    $0x000005,%dl
		je     _061152_jump
		cmp    $0x000006,%dl
		jne    _06117a_jump

	_061152_jump:
		mov    0x000076(%eax),%cl
		dec    %cl
		mov    %cl,0x000076(%eax)
		jne    _06116b_jump
		mov    $0x00000d,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_06116b_jump:
		mov    $0x00000b,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_06117a_jump:
		cmp    $0x00000f,%dl
		je     _061184_jump
		cmp    $0x000010,%dl
		jne    _0611ac_jump

	_061184_jump:
		mov    0x000076(%eax),%bl
		dec    %bl
		mov    %bl,0x000076(%eax)
		jne    _06119d_jump
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_06119d_jump:
		mov    $0x000019,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_0611ac_jump:
		cmp    $0x000016,%dl
		je     _0611c0_jump
		cmp    $0x000011,%dl
		je     _0611c0_jump
		cmp    $0x000012,%dl
		je     _0611c0_jump
		cmp    $0x000013,%dl
		jne    _0611e8_jump

	_0611c0_jump:
		mov    0x000076(%eax),%dl
		dec    %dl
		mov    %dl,0x000076(%eax)
		jne    _0611d9_jump
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_0611d9_jump:
		mov    $0x00001b,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_0611e8_jump:
		cmp    $0x000014,%dl
		je     _0611f2_jump
		cmp    $0x000015,%dl
		jne    _061217_jump

	_0611f2_jump:
		mov    0x000076(%eax),%cl
		dec    %cl
		mov    %cl,0x000076(%eax)
		jne    _06120b_jump
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_06120b_jump:
		mov    $0x00001a,%ebx

	_061210_jump:
		xor    %edx,%edx
		call   _01d374_func

	_061217_jump:
		pop    %ecx
		pop    %ebx
		ret    



_06121c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0612c8_jump
		mov    0x00006c(%ecx),%dl
		test   %dl,%dl
		je     _061247_jump
		cmp    $0x000001,%dl
		je     _061247_jump
		cmp    $0x00000f,%dl
		je     _061247_jump
		cmp    $0x000010,%dl
		jne    _0612c8_jump

	_061247_jump:
		mov    0x00006c(%ecx),%al
		test   %al,%al
		je     _061252_jump
		cmp    $0x000001,%al
		jne    _061259_jump

	_061252_jump:
		mov    $0x000005,%ebx
		jmp    _061266_jump

	_061259_jump:
		cmp    $0x00000f,%al
		je     _061261_jump
		cmp    $0x000010,%al
		jne    _061272_jump

	_061261_jump:
		mov    $0x000014,%ebx

	_061266_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d374_func

	_061272_jump:
		mov    0x000060(%ecx),%dx
		cmp    $0x0000ae,%dx
		je     _061284_jump
		cmp    $0x0000b8,%dx
		jne    _0612a5_jump

	_061284_jump:
		mov    0x000060(%ecx),%di
		movw   $0x000003,0x000042(%ecx)
		cmp    $0x0000ae,%di
		jne    _06129d_jump
		movw   $0x00ffe8,0x000040(%ecx)
		jmp    _0612c8_jump

	_06129d_jump:
		movw   $0x000018,0x000040(%ecx)
		jmp    _0612c8_jump

	_0612a5_jump:
		mov    0x000060(%ecx),%si
		movw   $0x000002,0x000042(%ecx)
		cmp    $0x0000e1,%si
		jne    _0612c2_jump
		movw   $0x00ffdc,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0612c2_jump:
		movw   $0x000024,0x000040(%ecx)

	_0612c8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0612d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		testb  $0x000002,_0ced81_data
		je     _0612eb_jump
		mov    $0x000100,%edx
		jmp    _0612f0_jump

	_0612eb_jump:
		mov    $0x000200,%edx

	_0612f0_jump:
		mov    _0cedb0_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		test   %eax,%eax
		jge    _061301_jump
		neg    %eax

	_061301_jump:
		cmp    %edx,%eax
		setg   %cl
		mov    0x000060(%esi),%ax
		cmp    $0x000022,%ax
		jb     _061367_jump
		cmp    $0x000022,%ax
		jbe    _06139d_jump
		cmp    $0x000098,%ax
		jb     _061348_jump
		jbe    _06139d_jump
		cmp    $0x0000ed,%ax
		jb     _061339_jump
		jbe    _06139d_jump
		cmp    $0x0000f3,%ax
		je     _06139d_jump
		jmp    _061e7f_jump

	_061339_jump:
		cmp    $0x0000be,%ax
		je     _0615b0_jump
		jmp    _061e7f_jump

	_061348_jump:
		cmp    $0x000044,%ax
		jb     _061e7f_jump
		jbe    _0618ac_jump
		cmp    $0x000073,%ax
		je     _061d70_jump
		jmp    _061e7f_jump

	_061367_jump:
		cmp    $0x00001b,%ax
		jb     _061388_jump
		jbe    _061aa1_jump
		cmp    $0x00001c,%ax
		jbe    _061c9f_jump
		cmp    $0x00001d,%ax
		je     _06139d_jump
		jmp    _061e7f_jump

	_061388_jump:
		cmp    $0x000019,%ax
		jb     _061e7f_jump
		jbe    _06151d_jump
		jmp    _0616b6_jump

	_06139d_jump:
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _06150b_jump
		mov    0x000056(%esi),%di
		test   %di,%di
		je     _0613bd_jump
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x000056(%esi)

	_0613bd_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _061e7f_jump
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0cdc10_data,%al
		mov    $0x000001,%cl
		add    %edx,%eax
		mov    %cl,_0cefd3_data
		cmp    $0x00000b,%eax
		jb     _0613f4_jump
		cmp    $0x00000c,%eax
		ja     _0613f4_jump
		call   _06422c_func

	_0613f4_jump:
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		call   _069f20_func
		movw   $0x002710,0x000054(%esi)
		mov    $0x00000c,%ebx
		mov    _0cdbe6_data,%cx
		mov    0x000060(%esi),%di
		sub    $0x000003,%ecx
		mov    %bx,_0cedf8_data
		mov    %cx,_0cdbe6_data
		cmp    $0x0000f3,%di
		jne    _061445_jump
		mov    $0x000011,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _0614a3_jump

	_061445_jump:
		cmp    $0x000098,%di
		jne    _061478_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _061458_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _061468_jump

	_061458_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _0614a3_jump

	_061468_jump:
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _0614a3_jump

	_061478_jump:
		cmp    $0x0000ed,%di
		jne    _0614a3_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0614a3_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _0614a3_jump
		mov    $_0cdba4_data,%eax
		mov    $0x000001,%ebx
		call   _077f64_func
		mov    %ebx,%edx
		mov    %esi,%eax
		call   _05f030_func

	_0614a3_jump:
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		mov    0x000006(%esp),%eax
		xor    %edx,%edx
		mov    _0cdbcc_data,%ecx
		mov    _0cdc0c_data,%dl
		sar    $0x000010,%eax
		add    %ecx,%edx
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		cmp    %eax,%edx
		jge    _0614f8_jump
		movw   $0x00fe00,_0cedb2_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0614f8_jump:
		movw   $0x000200,_0cedb2_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06150b_jump:
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000056(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06151d_jump:
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _06150b_jump
		mov    0x000056(%esi),%cx
		test   %cx,%cx
		je     _061539_jump
		mov    %ecx,%edi
		dec    %edi
		mov    %di,0x000056(%esi)

	_061539_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _061e7f_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		xor    %edx,%edx
		xor    %eax,%eax
		call   _02d60c_func
		xor    %eax,%eax
		mov    _0cdbcc_data,%edx
		mov    _0cdc0c_data,%al
		add    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		cmp    %eax,%edx
		jge    _06159f_jump
		orb    $0x000008,_0cdc25_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06159f_jump:
		andb   $0x0000f7,_0cdc25_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0615b0_jump:
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _06150b_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06150b_jump
		cmpb   $0x000009,0x00006c(%esi)
		jne    _06150b_jump
		mov    0x000056(%esi),%bx
		test   %bx,%bx
		je     _0615e4_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,0x000056(%esi)

	_0615e4_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _061e7f_jump
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0cdc10_data,%al
		mov    $0x000001,%bl
		add    %edx,%eax
		mov    %bl,_0cefd3_data
		cmp    $0x00000b,%eax
		jb     _06161b_jump
		cmp    $0x00000c,%eax
		ja     _06161b_jump
		call   _06422c_func

	_06161b_jump:
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		call   _069f20_func
		mov    $0x00000c,%eax
		movw   $0x002710,0x000054(%esi)
		mov    $0x00000a,%ebx
		mov    _0cdbe6_data,%dx
		mov    %ax,_0cedf8_data
		sub    $0x000004,%edx
		mov    %esi,%eax
		mov    %dx,_0cdbe6_data
		xor    %edx,%edx
		mov    %esp,%ecx
		call   _01d374_func
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		xor    %eax,%eax
		mov    _0cdbcc_data,%edx
		mov    _0cdc0c_data,%al
		add    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		cmp    %eax,%edx
		jge    _0614f8_jump
		movw   $0x00fe00,_0cedb2_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0616b6_jump:
		mov    0x000052(%esi),%di
		test   %di,%di
		je     _0616fb_jump
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		je     _0616d5_jump
		cmp    $0x000014,%di
		je     _061e7f_jump

	_0616d5_jump:
		mov    0x000052(%esi),%ax
		dec    %ax
		mov    %ax,0x000052(%esi)
		jne    _061e7f_jump
		mov    $0x00000b,%edx
		mov    %esi,%eax
		call   _01d364_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0616fb_jump:
		mov    0x000050(%esi),%ax
		test   %ax,%ax
		je     _06179c_jump
		mov    %eax,%edi
		dec    %edi
		mov    _0cede4_data,%ax
		mov    %di,0x000050(%esi)
		cmp    $0x000001,%ax
		jne    _06172e_jump
		cmpb   $0x000000,_0cef4f_data
		je     _06172a_jump
		movb   $0x000000,0x00007e(%esi)
		jmp    _06172e_jump

	_06172a_jump:
		movb   $0x000004,0x00007e(%esi)

	_06172e_jump:
		mov    0x000050(%esi),%ax
		cmp    0x000056(%esi),%ax
		jg     _061e7f_jump
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _06178b_jump
		mov    $0xffffffff,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		mov    %di,_0cdbee_data
		call   _01d374_func
		xor    %eax,%eax
		mov    %cl,%al
		call   _069cd8_func
		xor    %eax,%eax
		mov    %ax,_0cdbf6_data
		movw   $0x002710,0x000054(%esi)
		mov    %ax,_0cedf8_data
		mov    %ax,_0cdbe6_data

	_06178b_jump:
		andb   $0x0000df,0x000081(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06179c_jump:
		cmpw   $0x000001,_0cede4_data
		je     _06182e_jump
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0617fb_jump
		mov    $0xffffffff,%eax
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ax,_0cdbee_data
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %edx,%edx
		call   _069cd8_func
		mov    %dx,_0cedf8_data
		mov    %dx,_0cdbf6_data
		mov    %dx,_0cdbe6_data
		movw   $0x002710,0x000054(%esi)

	_0617fb_jump:
		cmpb   $0x000006,0x00006c(%esi)
		jne    _061813_jump
		mov    %esi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _061813_jump
		mov    %esi,%eax
		call   _05c7fc_func

	_061813_jump:
		cmpb   $0x000014,0x00006c(%esi)
		jne    _061e7f_jump
		orb    $0x000020,0x000081(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06182e_jump:
		movl   $0x000000,0x000024(%esi)
		movl   $0x000004,0x000030(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x000004,0x00007e(%esi)
		or     $0x000020,%bh
		mov    %bh,0x000081(%esi)
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _061e7f_jump
		mov    $0xffffffff,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		mov    %di,_0cdbee_data
		call   _01d374_func
		xor    %eax,%eax
		mov    %cl,%al
		call   _069cd8_func
		xor    %eax,%eax
		mov    %ax,_0cedf8_data
		mov    %ax,_0cdbf6_data
		mov    %ax,_0cdbe6_data
		movw   $0x002710,0x000054(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0618ac_jump:
		mov    _0cdbee_data,%ax
		mov    0x000034(%esi),%dx
		xor    %cl,%cl
		cmp    %dx,%ax
		jne    _06191b_jump
		cmpb   $0x000002,0x00006d(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _061908_jump
		cmpw   $0x000000,0x00004a(%esi)
		je     _061908_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movw   $0x000000,0x000052(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00004a(%esi),%ax
		movb   $0x000000,0x000072(%esi)
		inc    %eax
		movw   $0x000000,0x00004a(%esi)
		mov    %ax,0x000056(%esi)
		mov    $0x000001,%cl
		mov    %ax,0x000042(%esi)
		jmp    _06191b_jump

	_061908_jump:
		mov    0x000048(%esi),%eax
		mov    0x000054(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		jne    _06191b_jump
		mov    $0x000001,%cl

	_06191b_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _061e7f_jump
		mov    0x000054(%esi),%edx
		mov    0x000040(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		neg    %edx
		cmp    %edx,%eax
		jge    _0619e2_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000056(%esi)
		mov    0x00003c(%esi),%eax
		movw   $0x000000,0x000042(%esi)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000034(%esi),%dx
		cmp    _0cdbee_data,%dx
		jne    _061e7f_jump
		mov    0x00003c(%esi),%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%eax
		mov    _0cdbd0_data,%ebx
		sub    %edx,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0cdc10_data,%al
		add    %edx,%eax
		mov    %ebx,_0cdbd0_data
		cmp    $0x00000b,%eax
		jb     _0619ac_jump
		cmp    $0x00000c,%eax
		ja     _0619ac_jump
		call   _06422c_func

	_0619ac_jump:
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x000001,_0cefd3_data
		call   _069f20_func
		mov    $0x00000c,%ebx
		movw   $0x002710,0x000054(%esi)
		mov    %bx,_0cedf8_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0619e2_jump:
		test   %cl,%cl
		jne    _061e7f_jump
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _061e7f_jump
		xor    %edx,%edx
		mov    _0cefd3_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _061e7f_jump
		call   *_0c4d78_data
		test   %ax,%ax
		je     _061e7f_jump
		call   _069f20_func
		cmpb   $0x000002,_0cdc11_data
		jne    _061a3a_jump
		movw   $0x002710,0x000054(%esi)

	_061a3a_jump:
		mov    $0x000002,%ecx
		mov    0x000040(%esi),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _061a59_jump
		cmp    %ecx,%eax
		jg     _061a59_jump
		mov    $0x000001,%eax
		jmp    _061a5b_jump

	_061a59_jump:
		xor    %eax,%eax

	_061a5b_jump:
		test   %eax,%eax
		je     _061a71_jump
		subw   $0x000002,_0cdbe6_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061a71_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _061e7f_jump
		mov    0x000042(%esi),%ax
		mov    _0cdbe6_data,%si
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    %si,_0cdbe6_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061aa1_jump:
		mov    _0cdbee_data,%ax
		mov    0x000034(%esi),%dx
		xor    %cl,%cl
		cmp    %dx,%ax
		jne    _061b10_jump
		cmpb   $0x000002,0x00006d(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _061afd_jump
		cmpw   $0x000000,0x00004a(%esi)
		je     _061afd_jump
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movw   $0x000000,0x000052(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00004a(%esi),%ax
		movb   $0x000000,0x000072(%esi)
		inc    %eax
		movw   $0x000000,0x00004a(%esi)
		mov    %ax,0x000056(%esi)
		mov    $0x000001,%cl
		mov    %ax,0x000042(%esi)
		jmp    _061b10_jump

	_061afd_jump:
		mov    0x000048(%esi),%eax
		mov    0x000054(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		jne    _061b10_jump
		mov    $0x000001,%cl

	_061b10_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _061e7f_jump
		mov    0x000054(%esi),%edx
		mov    0x000040(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		neg    %edx
		cmp    %edx,%eax
		jge    _061bd2_jump
		mov    $0x000018,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000056(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000034(%esi),%dx
		cmp    _0cdbee_data,%dx
		jne    _061bbf_jump
		mov    0x00003c(%esi),%eax
		mov    0x00002c(%esi),%edi
		sar    $0x000010,%eax
		mov    _0cdbd0_data,%ebp
		sub    %edi,%eax
		add    %eax,%ebp
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cdc11_data,%al
		mov    _0cdc10_data,%dl
		shl    $0x000008,%eax
		add    %edx,%eax
		mov    %ebp,_0cdbd0_data
		cmp    $0x00000b,%eax
		jb     _061b93_jump
		cmp    $0x00000c,%eax
		ja     _061b93_jump
		call   _06422c_func

	_061b93_jump:
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x000001,_0cefd3_data
		call   _069f20_func
		mov    $0x00000c,%ebx
		movw   $0x002710,0x000054(%esi)
		mov    %bx,_0cedf8_data

	_061bbf_jump:
		mov    0x00003c(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061bd2_jump:
		test   %cl,%cl
		jne    _061e7f_jump
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _061e7f_jump
		xor    %edx,%edx
		mov    _0cefd3_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _061e7f_jump
		call   *_0c4d78_data
		test   %ax,%ax
		je     _061e7f_jump
		call   _069f20_func
		cmpb   $0x000002,_0cdc11_data
		jne    _061c2a_jump
		movw   $0x002710,0x000054(%esi)

	_061c2a_jump:
		mov    $0x000002,%ecx
		mov    0x000040(%esi),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _061c49_jump
		cmp    %ecx,%eax
		jg     _061c49_jump
		mov    $0x000001,%eax
		jmp    _061c4b_jump

	_061c49_jump:
		xor    %eax,%eax

	_061c4b_jump:
		test   %eax,%eax
		je     _061c61_jump
		subw   $0x000002,_0cdbe6_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061c61_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _061e7f_jump
		mov    0x000042(%esi),%ax
		add    %ax,_0cdbe6_data
		mov    _0cdbe4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff9,%eax
		jge    _061e7f_jump
		movw   $0x00fff9,_0cdbe6_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061c9f_jump:
		cmpb   $0x000014,0x00006c(%esi)
		jne    _061cea_jump
		mov    0x000056(%esi),%di
		test   %di,%di
		jne    _061ce3_jump
		mov    0x00004a(%esi),%ax
		mov    _0cede4_data,%dx
		mov    %ax,0x000056(%esi)
		cmp    $0x000001,%dx
		je     _061cd1_jump
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d364_func
		jmp    _061cea_jump

	_061cd1_jump:
		cmpb   $0x000000,0x00007e(%esi)
		je     _061cdd_jump
		movb   $0x000000,0x00007e(%esi)
		jmp    _061cea_jump

	_061cdd_jump:
		movb   $0x000003,0x00007e(%esi)
		jmp    _061cea_jump

	_061ce3_jump:
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x000056(%esi)

	_061cea_jump:
		cmpw   $0x000001,_0cede4_data
		jne    _061cfa_jump
		cmpb   $0x000000,0x00007e(%esi)
		je     _061d1a_jump

	_061cfa_jump:
		cmpw   $0x000001,_0cede4_data
		je     _061e7f_jump
		cmpb   $0x000014,0x00006c(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _061e7f_jump

	_061d1a_jump:
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _061d60_jump
		movw   $0x00ffff,_0cdbee_data
		mov    $0x000002,%ebx
		mov    $_0cdba4_data,%eax
		mov    %ebx,%edx
		call   _01d374_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %ecx,%ecx
		call   _069cd8_func
		mov    %cx,_0cedf8_data
		mov    %cx,_0cdbf6_data
		mov    %cx,_0cdbe6_data

	_061d60_jump:
		movw   $0x0003e8,0x000054(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061d70_jump:
		mov    0x00006c(%esi),%bh
		cmp    $0x000007,%bh
		jne    _061e32_jump
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _061de4_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    %bh,%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _061de4_jump
		mov    0x000081(%esi),%al
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%al
		mov    %al,0x000081(%esi)

	_061de4_jump:
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _061e2c_jump
		mov    $0xffffffff,%eax
		mov    $0x000002,%ebx
		mov    %ax,_0cdbee_data
		mov    %ebx,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %edx,%edx
		call   _069cd8_func
		mov    %dx,_0cedf8_data
		mov    %dx,_0cdbf6_data
		mov    %dx,_0cdbe6_data

	_061e2c_jump:
		movw   $0x0003e8,0x000054(%esi)

	_061e32_jump:
		cmpb   $0x000014,0x00006c(%esi)
		jne    _061e7f_jump
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		je     _061e4e_jump
		mov    0x000052(%esi),%ax
		cmp    0x000050(%esi),%ax
		je     _061e52_jump

	_061e4e_jump:
		decw   0x000052(%esi)

	_061e52_jump:
		mov    0x000056(%esi),%cx
		test   %cx,%cx
		je     _061e62_jump
		cmpw   $0x000000,0x000052(%esi)
		jne    _061e78_jump

	_061e62_jump:
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d364_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061e78_jump:
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,0x000056(%esi)

	_061e7f_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061e8c_func:
		push   %ebx
		xor    %ebx,%ebx
		mov    0x000079(%eax),%bl
		cmp    %bx,%dx
		jne    _061eb9_jump
		mov    _0cdc30_data,%edx
		mov    0x000040(%edx),%bx
		test   %bx,%bx
		jle    _061ead_jump
		mov    $0x000019,%edx
		jmp    _061eb4_jump

	_061ead_jump:
		jge    _061eb9_jump
		mov    $0x00001a,%edx

	_061eb4_jump:
		call   _01d364_func

	_061eb9_jump:
		pop    %ebx
		ret    



_061ec0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0ced5e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _061efd_jump
		push   $0xffffffa2
		mov    %eax,%edx
		shl    $0x000005,%eax
		mov    $0xffffff5b,%ecx
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		mov    $0x000006,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01cd60_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061efd_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061f10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cc300_data,%edx
		mov    _0cc304_data,%si
		xor    %bl,%bl
		xor    %ecx,%ecx
		test   %si,%si
		jle    _061fc8_jump

	_061f2f_jump:
		cmp    $0x000005,%bl
		jae    _061fc8_jump
		cmpw   $0x0000be,0x000060(%edx)
		jne    _061fb8_jump
		xor    %eax,%eax
		mov    %bl,%al
		imul   $0x000014,%eax,%eax
		xor    %edi,%edi
		mov    %di,_0e3dec_data(%eax)
		xor    %bh,%bh
		mov    %di,_0e3dee_data(%eax)
		mov    %bh,_0e3dfc_data(%eax)
		mov    %bh,_0e3dfd_data(%eax)
		mov    %cx,_0e3dfa_data(%eax)
		mov    $0x000001,%edi
		mov    %di,_0e3df0_data(%eax)
		mov    $0x000005,%bh
		mov    %di,_0e3df2_data(%eax)
		mov    %bh,_0e3dfe_data(%eax)
		movw   $0x00000f,_0e3df4_data(%eax)
		xor    %edi,%edi
		mov    %di,_0e3df6_data(%eax)
		mov    %di,_0e3df8_data(%eax)
		andb   $0x0000fb,0x000081(%edx)
		xor    %eax,%eax
		movl   $0x000000,0x000024(%edx)
		mov    %bl,%al
		inc    %bl
		mov    %ax,0x000050(%edx)

	_061fb8_jump:
		inc    %ecx
		add    $0x000084,%edx
		cmp    %si,%cx
		jl     _061f2f_jump

	_061fc8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061fd0_func:
		push   %edx
		xor    %al,%al

	_061fd3_jump:
		xor    %edx,%edx
		mov    %al,%dl
		imul   $0x000014,%edx,%edx
		xor    %ah,%ah
		mov    %ah,_0e3dfd_data(%edx)
		inc    %al
		cmp    $0x000005,%al
		jb     _061fd3_jump
		pop    %edx
		ret    



_061fec_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		xor    %al,%al

	_061ff2_jump:
		xor    %edx,%edx
		mov    %al,%dl
		imul   $0x000014,%edx,%edx
		mov    _0e3dfd_data(%edx),%bl
		cmp    $0x000001,%bl
		jne    _062006_jump
		add    %bl,%ah

	_062006_jump:
		inc    %al
		cmp    $0x000005,%al
		jb     _061ff2_jump
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    _0e3e5a_data,%dl
		mov    _0e3e57_data,%bl
		mov    _096e76_data(%ebx,%edx,2),%dl
		and    $0x0000ff,%edx
		cmp    _096e70_data(%edx),%ah
		sete   %al
		pop    %edx
		pop    %ebx
		ret    



_062038_func:
		mov    0x000050(%eax),%al
		cmp    $0x000005,%al
		jb     _062041_jump
		mov    $0x0000ff,%al

	_062041_jump:
		ret    



_062044_func:
		push   %ebx
		push   %ecx
		mov    %al,%bl
		test   %dl,%dl
		jne    _062053_jump
		xor    %dh,%dh
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_062053_jump:
		xor    %ecx,%ecx
		mov    $0x0000f0,%eax
		mov    %dl,%cl
		mov    %eax,%edx
		add    %ecx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		and    $0x0000ff,%ebx
		add    %ebx,%ebx
		inc    %ebx
		imul   %ebx,%eax
		mov    _0ced62_data,%ebx
		sar    $0x000010,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc300_data,%ebx
		testb  $0x000008,0x000081(%ebx,%eax,4)
		je     _062096_jump
		add    $0x000050,%edx

	_062096_jump:
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_06209c_func:
		test   %dx,%dx
		jne    _0620a7_jump
		mov    $0x00002c,%eax
		ret    

	_0620a7_jump:
		shl    $0x000004,%eax
		add    $0x00002c,%eax
		ret    



_0620b0_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%ebx
		movswl %dx,%edx
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx

	_0620c4_jump:
		cwtl   
		call   _01e0e4_func
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _0620ec_jump
		add    $0x000010,%ebx
		movswl %bx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %cx,%eax
		sar    $0x000004,%eax
		jmp    _0620c4_jump

	_0620ec_jump:
		xor    %ch,%ch
		and    $0x0000f0,%bl
		and    $0x00000f,%cl
		mov    %ebx,%esi
		movswl %cx,%edx
		xor    %ebx,%ebx
		call   _02494c_func
		mov    %esi,%ebx
		add    %ebx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_062108_switch:
		.long   _0621a9_case
		.long   _0621a9_case
		.long   _0621a9_case
		.long   _0621f1_case
		.long   _0621f1_case
		.long   _0621a9_case




_062120_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000084,%esp
		call   _062038_func
		mov    %al,%bl
		cmp    $0x0000ff,%al
		je     _06228f_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,4),%ebp
		add    %edx,%ebp
		shl    $0x000002,%ebp
		mov    _0e3df8_data(%ebp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %edx,%eax
		mov    _0cc300_data,%esi
		shl    $0x000002,%eax
		mov    %esp,%edi
		add    %eax,%esi
		xor    %eax,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    0x000068(%esp),%al
		mov    0x000028(%esp),%esi
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x00002c(%esp),%ecx
		mov    0x000069(%esp),%al
		add    %eax,%ecx
		xor    %ah,%ah
		mov    %ah,_0e3dfd_data(%ebp)
		mov    _0e3e59_data,%al
		cmp    $0x000005,%al
		ja     _06228f_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_062108_switch(,%eax,4)

	_0621a9_case:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    %si,_0e3dec_data(,%eax,4)
		mov    $0x000002,%bl
		mov    %cx,_0e3dee_data(,%eax,4)
		mov    $0x000001,%edi
		mov    %bl,_0e3dfe_data(,%eax,4)
		mov    %di,_0e3df0_data(,%eax,4)
		mov    %di,_0e3df2_data(,%eax,4)
		add    $0x000084,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0621f1_case:
		cmpb   $0x000003,_0e3e59_data
		jne    _0621fe_jump
		mov    $0x000004,%al
		jmp    _062200_jump

	_0621fe_jump:
		xor    %al,%al

	_062200_jump:
		cmp    $0x000001,%bl
		je     _06220b_jump
		mov    $0x000004,%ah
		sub    %al,%ah
		mov    %ah,%al

	_06220b_jump:
		mov    $0x000006,%edx
		and    $0x0000ff,%eax
		xor    %ecx,%ecx
		call   _062044_func
		mov    %bl,%cl
		mov    %eax,%edx
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		mov    %dx,_0e3dec_data(,%eax,4)
		xor    %eax,%eax
		mov    $0x000009,%edx
		mov    %bl,%al
		sub    %eax,%edx
		movswl %dx,%eax
		mov    $0x000001,%edx
		call   _06209c_func
		xor    %edx,%edx
		mov    %bl,%dl
		mov    %eax,%ecx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		add    $0x000008,%ecx
		shl    $0x000002,%eax
		xor    %dh,%dh
		mov    %cx,_0e3dee_data(%eax)
		mov    %dh,_0e3dfe_data(%eax)
		test   %bl,%bl
		movw   $0x000032,_0e3df0_data(%eax)
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		movw   $0x000046,_0e3df2_data(,%eax,4)

	_06228f_jump:
		add    $0x000084,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06229c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %al,%cl
		cmp    _0e3e55_data,%al
		jae    _062544_jump
		cmp    $0x000005,%al
		jae    _062544_jump
		movzbl %al,%ebp
		lea    0x000000(,%ebp,4),%edi
		add    %ebp,%edi
		shl    $0x000002,%edi
		mov    _0e3df8_data(%edi),%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0cc300_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		cmpl   $0x000000,0x000024(%esi)
		jne    _062544_jump
		movb   $0x000000,0x00007e(%esi)
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f304_func
		xor    %dh,%dh
		mov    _0e3e59_data,%bl
		mov    %dh,_0e3dfd_data(%edi)
		test   %bl,%bl
		je     _06232f_jump
		cmp    $0x000003,%bl
		je     _06232f_jump
		cmp    $0x000004,%bl
		jne    _0623ba_jump

	_06232f_jump:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		mov    0x00000c(%esi),%eax
		mov    0x000008(%eax),%eax
		mov    0x000052(%eax),%al
		mov    %al,0x00006a(%esi)
		xor    %eax,%eax
		mov    %cl,%al
		mov    %eax,%edx
		lea    0x000000(,%eax,4),%ebp
		mov    $0x000004,%bl
		add    %eax,%ebp
		xor    %eax,%edx
		shl    $0x000002,%ebp
		mov    _0e3e55_data,%dl
		mov    %bl,_0e3dfe_data(%ebp)
		call   _062044_func
		mov    %ax,_0e3dec_data(%ebp)
		mov    _0ced62_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0cc300_data,%eax
		xor    %edx,%edx
		mov    0x000069(%eax,%edi,4),%dl
		mov    0x000038(%eax,%edi,4),%cx
		xor    %eax,%eax
		add    %ecx,%edx
		mov    0x000069(%esi),%al
		mov    $0x000001,%edi
		sub    %eax,%edx
		mov    %di,_0e3df0_data(%ebp)
		mov    %dx,_0e3dee_data(%ebp)
		jmp    _0624b3_jump

	_0623ba_jump:
		mov    $0x00000b,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		mov    0x00000c(%esi),%eax
		mov    0x000008(%eax),%eax
		mov    0x00005a(%eax),%al
		mov    %al,0x00006a(%esi)
		cmpb   $0x000005,_0e3e59_data
		jne    _062420_jump
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    _0e3e55_data,%dl
		call   _062044_func
		xor    %edx,%edx
		mov    %ax,_0e3dec_data(%edi)
		xor    %eax,%eax
		call   _06209c_func
		mov    $0x000001,%dh
		mov    %ax,_0e3dee_data(%edi)
		mov    _0e3e50_data,%ax
		mov    %dh,_0e3dfe_data(%edi)
		mov    %ax,_0e3df0_data(%edi)
		jmp    _0624b3_jump

	_062420_jump:
		xor    %edx,%edx
		mov    _0e3e55_data,%al
		mov    _0e3e58_data,%dl
		inc    %al
		cmp    _096e7e_data(%edx),%cl
		jb     _062446_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %cl,%al
		inc    %al
		and    $0x0000ff,%eax
		jmp    _06244c_jump

	_062446_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebp,%eax

	_06244c_jump:
		call   _062044_func
		mov    %ax,_0e3dec_data(%edi)
		xor    %eax,%eax
		mov    %cl,%al
		lea    0x000000(,%eax,4),%edi
		add    %eax,%edi
		xor    %eax,%eax
		shl    $0x000002,%edi
		mov    %cl,%al
		mov    _0e3dec_data(%edi),%dx
		shl    $0x000002,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,_0e3dec_data(%edi)
		xor    %edx,%edx
		call   _06209c_func
		mov    $0x000003,%dl
		mov    %ax,_0e3dee_data(%edi)
		mov    %dl,_0e3dfe_data(%edi)
		test   %cl,%cl
		jne    _0624aa_jump
		mov    _0e3e50_data,%ax
		mov    %ax,_0e3df0_data(%edi)
		jmp    _0624b3_jump

	_0624aa_jump:
		movw   $0x000001,_0e3df0_data(%edi)

	_0624b3_jump:
		lea    0x000004(%esp),%eax
		push   %eax
		lea    0x00000c(%esp),%eax
		push   %eax
		mov    _0ced62_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		lea    0x000014(%esp),%ecx
		shl    $0x000005,%edi
		lea    0x000008(%esp),%ebx
		add    %eax,%edi
		mov    _0cc300_data,%eax
		shl    $0x000002,%edi
		mov    $0x000006,%edx
		add    %edi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01d710_func
		mov    _0ced62_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0cc300_data,%eax
		testb  $0x000008,0x000081(%eax,%edi,4)
		je     _062512_jump
		mov    0x000008(%esp),%eax
		add    %ax,(%esp)

	_062512_jump:
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		xor    %eax,%eax
		mov    0x00000a(%esp),%edx
		mov    0x000069(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000028(%esi),%ax
		mov    %edx,0x00002c(%esi)
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)

	_062544_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062550_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		test   %ax,%ax
		jne    _06256b_jump
		test   %dx,%dx
		jl     _062563_jump
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_062563_jump:
		mov    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_06256b_jump:
		test   %dx,%dx
		jne    _06258c_jump
		test   %ax,%ax
		jne    _06257a_jump
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_06257a_jump:
		jle    _062584_jump
		mov    $0x000004,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_062584_jump:
		mov    $0x00000c,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_06258c_jump:
		cwtl   
		test   %eax,%eax
		jge    _062593_jump
		neg    %eax

	_062593_jump:
		mov    %eax,%ecx
		movswl %dx,%eax
		test   %eax,%eax
		jge    _06259e_jump
		neg    %eax

	_06259e_jump:
		sub    %ax,%cx
		jne    _0625aa_jump
		mov    $0x000006,%eax
		jmp    _0625bb_jump

	_0625aa_jump:
		test   %cx,%cx
		jl     _0625b6_jump
		mov    $0x000005,%eax
		jmp    _0625bb_jump

	_0625b6_jump:
		mov    $0x000007,%eax

	_0625bb_jump:
		test   %bx,%bx
		jle    _0625ce_jump
		test   %dx,%dx
		jle    _0625de_jump
		mov    $0x000008,%ah
		sub    %al,%ah
		mov    %ah,%al
		pop    %ecx
		pop    %ebx
		ret    

	_0625ce_jump:
		test   %dx,%dx
		jge    _0625dc_jump
		mov    $0x000010,%ah
		sub    %al,%ah
		mov    %ah,%al
		pop    %ecx
		pop    %ebx
		ret    

	_0625dc_jump:
		add    $0x000008,%al

	_0625de_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0625e4_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000040(%eax),%edx
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _062550_func
		mov    %al,0x00006b(%ebx)
		pop    %edx
		pop    %ebx
		ret    

_062600_switch:
		.long   _0626a8_case
		.long   _0626e3_case
		.long   _0626e3_case
		.long   _0626e3_case
		.long   _062718_case
		.long   _062757_case
		.long   _062757_case
		.long   _062757_case
		.long   _062868_case
		.long   _06277d_case
		.long   _06277d_case
		.long   _06277d_case
		.long   _062798_case
		.long   _0627d1_case
		.long   _0627d1_case
		.long   _0627d1_case




_062640_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    %ecx,%edi
		lea    0x000004(%esp),%ebx
		push   %ebx
		lea    0x000010(%esp),%ebx
		lea    0x00000c(%esp),%ecx
		push   %ebx
		xor    %edx,%edx
		lea    0x000018(%esp),%ebx
		call   _01d710_func
		mov    0x000024(%esp),%eax
		movw   $0x000006,(%edi)
		movw   $0x000006,(%eax)
		cmpb   $0x000002,0x00006d(%esi)
		jne    _062836_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x00000a,%dl
		je     _062691_jump
		cmp    $0x00000b,%dl
		jne    _062836_jump

	_062691_jump:
		mov    0x00006b(%esi),%al
		cmp    $0x00000f,%al
		ja     _0627f9_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		jmp    *%cs:_062600_switch(,%ebx,4)

	_0626a8_case:
		mov    0x00000a(%esp),%ebx
		movswl (%edi),%ecx
		sar    $0x000010,%ebx
		sub    %ecx,%ebx
		mov    0x00000e(%esp),%ecx
		sar    %ebx
		sar    $0x000010,%ecx
		add    %ecx,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000008(%esp),%ebx
		add    0x000004(%esp),%ebx
		mov    0x000024(%esp),%eax
		mov    (%eax),%ax
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0626e3_case:
		mov    0x000010(%esp),%ebx
		mov    0x00000c(%esp),%esi
		mov    (%edi),%ax
		add    %esi,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000024(%esp),%eax
		mov    0x000008(%esp),%ebx
		mov    0x000004(%esp),%edi
		mov    (%eax),%ax
		add    %edi,%ebx
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_062718_case:
		mov    0x00000c(%esp),%eax
		mov    %ax,(%edi)
		mov    0x000010(%esp),%ebx
		add    %eax,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000002(%esp),%ecx
		mov    0x000024(%esp),%ebx
		sar    $0x000010,%ecx
		movswl (%ebx),%ebx
		sub    %ebx,%ecx
		mov    %ecx,%ebx
		mov    0x000006(%esp),%ecx
		sar    %ebx
		sar    $0x000010,%ecx
		mov    (%esp),%eax
		add    %ecx,%ebx
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_062757_case:
		mov    0x000010(%esp),%ebx
		mov    0x00000c(%esp),%edx
		mov    (%edi),%ax
		add    %edx,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		mov    (%esp),%ebx
		mov    0x000008(%esp),%eax
		mov    %ax,(%ebx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_06277d_case:
		mov    0x000010(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    (%esp),%ebx
		mov    0x000008(%esp),%eax
		mov    %ax,(%ebx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_062798_case:
		mov    0x00000c(%esp),%eax
		mov    %ax,(%edi)
		mov    0x000010(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000024(%esp),%ebx
		mov    0x000002(%esp),%ecx
		movswl (%ebx),%ebx
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x000006(%esp),%ebx
		sar    %ecx
		sar    $0x000010,%ebx
		mov    (%esp),%eax
		add    %ecx,%ebx
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0627d1_case:
		mov    0x000010(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000008(%esp),%ebx
		add    0x000004(%esp),%ebx
		mov    0x000024(%esp),%eax
		mov    (%eax),%ax
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0627f9_jump:
		mov    0x00000a(%esp),%ecx
		movswl (%edi),%ebx
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    %ecx
		sar    $0x000010,%ebx
		add    %ecx,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000024(%esp),%eax
		mov    0x000008(%esp),%ebx
		mov    0x000004(%esp),%edi
		mov    (%eax),%ax
		add    %edi,%ebx
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_062836_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _062896_jump
		cmpb   $0x00000e,0x00006c(%esi)
		jne    _062896_jump
		xor    %ebx,%ebx
		mov    0x00006d(%esi),%bl
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    0x00006c(%esi),%bl
		testb  $0x00000f,0x000005(%ecx,%ebx,8)
		jne    _062896_jump
		mov    0x000024(%esp),%ebx
		mov    0x000004(%esp),%eax
		mov    %ax,(%ebx)

	_062868_case:
		mov    0x00000a(%esp),%ecx
		movswl (%edi),%ebx
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    %ecx
		sar    $0x000010,%ebx
		add    %ecx,%ebx
		mov    %bx,0x000000(%ebp)
		mov    (%esp),%ebx
		mov    0x000008(%esp),%eax
		mov    %ax,(%ebx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_062896_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _0628a2_jump
		cmpb   $0x00000d,0x00006c(%esi)
		je     _0628ca_jump

	_0628a2_jump:
		mov    0x00006d(%esi),%dh
		cmp    $0x000002,%dh
		jne    _0628fe_jump
		cmpb   $0x00000e,0x00006c(%esi)
		jne    _0628fe_jump
		xor    %ebx,%ebx
		mov    %dh,%bl
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    0x00006c(%esi),%bl
		testb  $0x00000f,0x000005(%ecx,%ebx,8)
		je     _0628fe_jump

	_0628ca_jump:
		mov    0x000028(%esi),%ecx
		movswl (%edi),%ebx
		add    $0x000080,%ecx
		sar    %ebx
		sub    %ebx,%ecx
		mov    %cx,0x000000(%ebp)
		mov    0x000024(%esp),%ebx
		mov    0x00002c(%esi),%ecx
		movswl (%ebx),%ebx
		add    $0x000060,%ecx
		sar    %ebx
		mov    (%esp),%eax
		sub    %ebx,%ecx
		mov    %cx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0628fe_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _062947_jump
		cmpb   $0x00000c,0x00006c(%esi)
		jne    _062947_jump
		mov    0x00000a(%esp),%ecx
		movswl (%edi),%ebx
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    %ecx
		sar    $0x000010,%ebx
		add    %ecx,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000024(%esp),%eax
		mov    0x000008(%esp),%ebx
		mov    0x000004(%esp),%esi
		mov    (%eax),%ax
		add    %esi,%ebx
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_062947_jump:
		mov    (%edi),%ax
		mov    %eax,%edx
		mov    %ax,0x000000(%ebp)
		neg    %edx
		mov    0x000024(%esp),%eax
		mov    %dx,0x000000(%ebp)
		mov    (%eax),%ax
		mov    (%esp),%ebx
		mov    %eax,%ecx
		mov    %ax,(%ebx)
		neg    %ecx
		mov    %cx,(%ebx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_062974_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e3e52_data,%si
		mov    _0e3e50_data,%di
		mov    _0e3e59_data,%ah
		cmp    $0x000001,%ah
		je     _062997_jump
		cmp    $0x000002,%ah
		jne    _0629b2_jump

	_062997_jump:
		mov    _0e3e58_data,%dh
		inc    %dh
		mov    %dh,_0e3e58_data
		cmp    $0x000005,%dh
		jb     _0629b2_jump
		xor    %bh,%bh
		mov    %bh,_0e3e58_data

	_0629b2_jump:
		mov    _0e3e5a_data,%al
		mov    _0e3e54_data,%cl
		mov    %edi,%edx
		mov    %esi,%ebx
		sub    $0x00000a,%edx
		sub    $0x00000a,%ebx
		inc    %al
		test   %cl,%cl
		jne    _0629f7_jump
		mov    _0e3e57_data,%ah
		inc    %ah
		mov    %ah,_0e3e57_data
		cmp    $0x000002,%ah
		jne    _062a12_jump
		mov    %cl,_0e3e57_data
		mov    %al,_0e3e5a_data
		cmp    $0x000004,%al
		jne    _062a12_jump
		mov    %cl,_0e3e5a_data
		jmp    _062a0e_jump

	_0629f7_jump:
		xor    %ch,%ch
		mov    %al,_0e3e5a_data
		mov    %ch,_0e3e57_data
		cmp    $0x000004,%al
		jne    _062a12_jump
		mov    %ch,_0e3e5a_data

	_062a0e_jump:
		mov    %ebx,%esi
		mov    %edx,%edi

	_062a12_jump:
		cmp    $0x000064,%si
		jge    _062a1d_jump
		mov    $0x000064,%esi

	_062a1d_jump:
		cmp    $0x000032,%di
		jge    _062a28_jump
		mov    $0x000032,%edi

	_062a28_jump:
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ah,_0e3e56_data
		xor    %eax,%eax
		mov    _0e3e5a_data,%dl
		mov    _0e3e57_data,%al
		mov    _096e76_data(%eax,%edx,2),%al
		mov    %al,_0e3e59_data
		xor    %eax,%eax
		mov    _0e3e59_data,%al
		xor    %dl,%dl
		mov    _096e70_data(%eax),%al
		mov    %dl,_0e3e54_data
		mov    %al,_0e3e55_data
		xor    %al,%al

	_062a67_jump:
		xor    %ebx,%ebx
		mov    %al,%bl
		imul   $0x000014,%ebx,%ebx
		mov    _0e3df8_data(%ebx),%ecx
		sar    $0x000010,%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0cc300_data,%edx
		movl   $0x000000,0x000024(%ecx,%edx,1)
		mov    _0e3df8_data(%ebx),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    0x000081(%edx,%ebx,1),%cl
		and    $0x0000fb,%cl
		inc    %al
		mov    %cl,0x000081(%edx,%ebx,1)
		cmp    $0x000005,%al
		jb     _062a67_jump
		mov    %di,_0e3e50_data
		mov    %si,_0e3e52_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062ac8_func:
		push   %ecx
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax
		pop    %ecx
		ret    



_062ad0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		call   _062038_func
		cmp    $0x0000ff,%al
		je     _062be7_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _0cee10_data,%dx
		add    _0e3dec_data(%eax),%dx
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%si
		mov    0x000068(%ebx),%cl
		mov    _0e3dee_data(%eax),%di
		add    %esi,%ecx
		mov    _0cedfa_data,%si
		sub    %ecx,%edx
		xor    %ecx,%ecx
		add    %edi,%esi
		mov    0x000069(%ebx),%cl
		add    0x00002c(%ebx),%cx
		sub    %ecx,%esi
		cmpw   $0x000000,_0e3df0_data(%eax)
		je     _062bc5_jump
		xor    %edi,%edi
		mov    %di,_0e3df0_data(%eax)
		test   %dx,%dx
		jne    _062b61_jump
		xor    %eax,%eax
		call   _062ac8_func
		mov    %ax,0x000040(%ebx)
		mov    $0xffffffff,%eax
		call   _062ac8_func
		mov    %ax,0x000042(%ebx)
		jmp    _062bb4_jump

	_062b61_jump:
		jl     _062b6a_jump
		mov    $0x000002,%eax
		jmp    _062b6f_jump

	_062b6a_jump:
		mov    $0xfffffffe,%eax

	_062b6f_jump:
		movswl %si,%esi
		movswl %ax,%ecx
		shl    $0x000004,%esi
		imul   %ecx,%esi
		movswl %dx,%eax
		lea    0x000000(,%eax,8),%edx
		imul   %eax,%edx
		imul   %ecx,%eax
		shl    $0x000003,%esi
		add    %esi,%edx
		neg    %edx
		lea    0x000000(,%eax,8),%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _062ac8_func
		sub    $0x00000a,%eax
		mov    %dx,0x000042(%ebx)
		mov    %ax,0x000040(%ebx)

	_062bb4_jump:
		mov    %ebx,%eax
		call   _0625e4_func
		movb   $0x000003,0x00007e(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062bc5_jump:
		mov    0x00003e(%ebx),%ecx
		movswl %dx,%eax
		sar    $0x000010,%ecx
		imul   %ecx,%eax
		addw   $0x000004,0x000042(%ebx)
		test   %eax,%eax
		jge    _062be0_jump
		movw   $0x000000,0x000040(%ebx)

	_062be0_jump:
		mov    %ebx,%eax
		call   _0625e4_func

	_062be7_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062bf0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		call   _062038_func
		mov    %al,%bl
		cmp    $0x0000ff,%al
		je     _062db0_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		mov    _0cee10_data,%di
		shl    $0x000002,%edx
		xor    %eax,%eax
		mov    _0e3dec_data(%edx),%cx
		mov    0x000068(%esi),%al
		add    %ecx,%edi
		add    0x000028(%esi),%ax
		sub    %eax,%edi
		mov    _0cedfa_data,%ax
		mov    %di,(%esp)
		mov    _0e3dee_data(%edx),%di
		add    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		sub    %eax,%edi
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _062c61_jump
		neg    %eax

	_062c61_jump:
		cmp    $0x000004,%eax
		jge    _062c78_jump
		movswl %di,%eax
		test   %eax,%eax
		jge    _062c6f_jump
		neg    %eax

	_062c6f_jump:
		cmp    $0x000004,%eax
		jl     _062d08_jump

	_062c78_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %bl,%dl
		mov    %dl,_0e3dfd_data(,%eax,4)
		movswl %di,%eax
		test   %eax,%eax
		jge    _062c97_jump
		neg    %eax

	_062c97_jump:
		mov    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _062ca8_jump
		neg    %eax

	_062ca8_jump:
		cmp    %ebx,%eax
		jge    _062cae_jump
		mov    %ebx,%eax

	_062cae_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    (%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000004,%cl
		call   _062ac8_func
		mov    %ax,0x000040(%esi)
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _062ac8_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _0625e4_func
		movb   $0x000003,0x00007e(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062d08_jump:
		mov    $0x000001,%ah
		mov    %ah,_0e3dfd_data(%edx)
		mov    _0e3e59_data,%dl
		cmp    %ah,%dl
		je     _062d35_jump
		cmp    $0x000002,%dl
		je     _062d35_jump
		cmpb   $0x000002,0x00006d(%esi)
		jne    _062d2b_jump
		cmpb   $0x00000d,0x00006c(%esi)
		je     _062d44_jump

	_062d2b_jump:
		movb   $0x000002,0x00006d(%esi)
		movb   $0x00000d,0x00006c(%esi)
		jmp    _062d44_jump

	_062d35_jump:
		mov    $0x000001,%edx
		xor    %eax,%eax
		call   _062550_func
		mov    %al,0x00006b(%esi)

	_062d44_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		movw   $0x000000,0x000040(%esi)
		add    %edx,%eax
		movw   $0x000000,0x000042(%esi)
		mov    _0e3dea_data(,%eax,4),%ebx
		mov    _0cee0e_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    _0e3dec_data(,%eax,4),%eax
		mov    _0cedf8_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		call   _061fec_func
		test   %al,%al
		je     _062db0_jump
		movb   $0x000003,_0e3e56_data
		call   _061fd0_func

	_062db0_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062dbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		call   _062038_func
		mov    %al,%dl
		cmp    $0x0000ff,%al
		je     _062fad_jump
		test   %al,%al
		je     _062dff_jump
		je     _062fad_jump
		and    $0x0000ff,%eax
		lea    -0x000001(%eax),%ebx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		cmpw   $0x000000,_0e3df2_data(,%eax,4)
		jne    _062fad_jump

	_062dff_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		mov    _0e3df2_data(%eax),%cx
		test   %cx,%cx
		jne    _062fa3_jump
		mov    %cx,(%esp)
		mov    _0e3dfe_data(%eax),%dh
		xor    %edi,%edi
		cmp    $0x000002,%dh
		je     _062e6a_jump
		mov    _0cee10_data,%di
		xor    %ebx,%ebx
		mov    _0e3dec_data(%eax),%cx
		mov    0x000068(%esi),%bl
		add    %ecx,%edi
		add    0x000028(%esi),%bx
		mov    _0e3dee_data(%eax),%cx
		sub    %ebx,%edi
		xor    %eax,%eax
		mov    _0cedfa_data,%bx
		mov    0x000069(%esi),%al
		add    %ecx,%ebx
		add    0x00002c(%esi),%ax
		sub    %eax,%ebx
		mov    %bx,(%esp)

	_062e6a_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _062e73_jump
		neg    %eax

	_062e73_jump:
		cmp    $0x000002,%eax
		jge    _062e8e_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _062e85_jump
		neg    %eax

	_062e85_jump:
		cmp    $0x000002,%eax
		jl     _062f11_jump

	_062e8e_jump:
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %ch,%ch
		mov    %ch,_0e3dfd_data(,%eax,4)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _062eb3_jump
		neg    %eax

	_062eb3_jump:
		mov    %eax,%ebx
		movswl %di,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _062ec0_jump
		neg    %eax

	_062ec0_jump:
		cmp    %ebx,%eax
		jge    _062ec6_jump
		mov    %ebx,%eax

	_062ec6_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000004,%cl
		call   _062ac8_func
		mov    %ax,0x000040(%esi)
		mov    (%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _062ac8_func
		mov    %ax,0x000042(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062f11_jump:
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		mov    $0x000001,%bl
		shl    $0x000002,%edx
		xor    %eax,%eax
		mov    %bl,_0e3dfd_data(%edx)
		call   _062ac8_func
		mov    %ax,0x000040(%esi)
		xor    %eax,%eax
		call   _062ac8_func
		mov    %ax,0x000042(%esi)
		cmpb   $0x000002,_0e3dfe_data(%edx)
		je     _062f85_jump
		mov    _0e3dea_data(%edx),%eax
		mov    _0cee0e_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		mov    _0cedf8_data,%eax
		mov    _0e3dec_data(%edx),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%esi)

	_062f85_jump:
		call   _061fec_func
		test   %al,%al
		je     _062fad_jump
		movb   $0x000003,_0e3e56_data
		call   _061fd0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062fa3_jump:
		mov    %ecx,%esi
		dec    %esi
		mov    %si,_0e3df2_data(%eax)

	_062fad_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_062fb8_switch:
		.long   _0632ab_case
		.long   _063203_case
		.long   _0632e7_case
		.long   _063283_case




_062fc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		call   _062038_func
		mov    %al,0x000010(%esp)
		cmp    $0x0000ff,%al
		je     _0635c2_jump
		test   %al,%al
		je     _06300e_jump
		je     _0635c2_jump
		and    $0x0000ff,%eax
		lea    -0x000001(%eax),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		cmpw   $0x000000,_0e3df0_data(,%eax,4)
		jne    _0635c2_jump

	_06300e_jump:
		movzbl 0x000010(%esp),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		shl    $0x000002,%eax
		mov    _0e3df0_data(%eax),%di
		test   %di,%di
		jne    _063153_jump
		cmpb   $0x000000,_0e3dfd_data(%eax)
		jne    _0635c2_jump
		mov    _0e3df8_data(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		xor    %ebx,%ebx
		mov    0x000068(%eax),%bl
		xor    %edx,%edx
		mov    0x000028(%eax),%cx
		mov    0x000069(%eax),%dl
		add    %ecx,%ebx
		mov    0x00002c(%eax),%cx
		movswl %bx,%eax
		add    %edx,%ecx
		cmp    $0xffffffec,%eax
		jl     _0630a6_jump
		mov    _0cede6_data,%edx
		sar    $0x000010,%edx
		add    $0x000154,%edx
		cmp    %edx,%eax
		jg     _0630a6_jump
		movswl %cx,%eax
		cmp    $0xffffffec,%eax
		jl     _0630a6_jump
		mov    _0cedd8_data,%edx
		sar    $0x000010,%edx
		add    $0x0000dc,%edx
		cmp    %edx,%eax
		jle    _0635c2_jump

	_0630a6_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		movb   $0x000001,_0e3dfd_data(%edx)
		mov    _0e3df8_data(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc300_data,%ebx
		movl   $0x000000,0x000024(%ebx,%eax,4)
		mov    _0e3df8_data(%edx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		andb   $0x0000fb,0x000081(%ebx,%eax,4)
		call   _061fec_func
		test   %al,%al
		je     _0635c2_jump
		mov    _0ced62_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		mov    $0x000004,%ch
		mov    0x000076(%edx,%eax,4),%bl
		mov    %ch,_0e3e56_data
		test   %bl,%bl
		jne    _0635c2_jump
		mov    $0x000001,%bh
		mov    _0ced88_data,%cl
		mov    %bh,_0cefc8_data
		or     $0x000010,%cl
		mov    %bh,_0cefca_data
		mov    %cl,_0ced88_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063153_jump:
		cmp    $0x000001,%di
		jne    _063591_jump
		mov    _0e3df4_data(%eax),%di
		cmp    $0x00000f,%di
		jne    _0634a2_jump
		movzbw _0cdc0c_data,%di
		mov    %edi,(%esp)
		mov    _0cdbcc_data,%di
		add    (%esp),%edi
		mov    %di,_0e3dec_data(%eax)
		movzbw _0cdc0d_data,%di
		mov    %edi,(%esp)
		mov    _0cdbd0_data,%di
		add    (%esp),%edi
		mov    %di,_0e3dee_data(%eax)
		movzbw 0x000068(%esi),%di
		mov    %edi,(%esp)
		mov    0x000028(%esi),%di
		add    (%esp),%edi
		mov    %edi,(%esp)
		mov    _0e3dec_data(%eax),%di
		sub    (%esp),%edi
		mov    %di,0x00000c(%esp)
		movzbw 0x000069(%esi),%di
		mov    %edi,(%esp)
		mov    0x00002c(%esi),%di
		add    (%esp),%edi
		mov    %edi,(%esp)
		mov    _0e3dee_data(%eax),%di
		sub    (%esp),%edi
		mov    _0e3dfe_data(%eax),%al
		mov    %di,0x000008(%esp)
		cmp    $0x000003,%al
		ja     _063317_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_062fb8_switch(,%eax,4)

	_063203_case:
		mov    0x000006(%esp),%eax
		mov    $0x00000b,%ebx
		sar    $0x000010,%eax
		mov    %bx,0x000004(%esp)
		test   %eax,%eax
		jge    _06321a_jump
		neg    %eax

	_06321a_jump:
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _06322b_jump
		neg    %eax

	_06322b_jump:
		cmp    %ebx,%eax
		jge    _063231_jump
		mov    %ebx,%eax

	_063231_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		cwtl   
		mov    $0x000004,%cl
		call   _062ac8_func
		mov    %eax,%edi
		mov    %eax,%ebx
		mov    0x000008(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		cwtl   
		call   _062ac8_func
		mov    %eax,%ecx
		movswl %ax,%edx
		movswl %di,%eax
		jmp    _063310_jump

	_063283_case:
		movw   $0x00000b,0x000004(%esp)
		xor    %eax,%eax
		call   _062ac8_func
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000003,%eax
		call   _062ac8_func
		mov    %eax,%ecx
		movswl %ax,%edi
		movswl %dx,%eax
		mov    %edi,%edx
		jmp    _063310_jump

	_0632ab_case:
		mov    $0x00000b,%ecx
		mov    0x00000c(%esp),%edi
		mov    %cx,0x000004(%esp)
		test   %di,%di
		jl     _0632c5_jump
		mov    $0x000003,%eax
		jmp    _0632ca_jump

	_0632c5_jump:
		mov    $0xfffffffd,%eax

	_0632ca_jump:
		cwtl   
		call   _062ac8_func
		mov    %eax,%edx
		mov    %eax,%ebx
		xor    %eax,%eax
		call   _062ac8_func
		mov    %eax,%ecx
		cwtl   
		movswl %dx,%edi
		mov    %eax,%edx
		mov    %edi,%eax
		jmp    _063310_jump

	_0632e7_case:
		mov    $0xffffffff,%eax
		mov    $0x00000e,%edx
		call   _062ac8_func
		mov    %dx,0x000004(%esp)
		mov    %eax,%ebx
		mov    $0x000005,%eax
		mov    $0x000001,%edx
		call   _062ac8_func
		mov    %eax,%ecx
		xor    %eax,%eax

	_063310_jump:
		call   _062550_func
		mov    %al,%dl

	_063317_jump:
		movzbl 0x000010(%esp),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		shl    $0x000002,%eax
		mov    _0e3dfe_data(%eax),%dh
		cmp    $0x000002,%dh
		jne    _0633f3_jump
		mov    0x000004(%esp),%dh
		movzbl 0x00006d(%esi),%edi
		mov    0x00000c(%esi),%ebp
		shl    $0x000002,%edi
		mov    %dh,0x00006c(%esi)
		mov    %dl,0x00006b(%esi)
		add    %ebp,%edi
		movzbl 0x00006c(%esi),%ebp
		mov    (%edi),%edi
		shl    $0x000003,%ebp
		add    %ebp,%edi
		andb   $0x0000f0,0x000005(%edi)
		mov    %dl,_0e3dfc_data(%eax)
		mov    %bx,_0e3df6_data(%eax)
		mov    _0e3df4_data(%eax),%di
		mov    %cx,_0e3df8_data(%eax)
		dec    %edi
		mov    _0e3df6_data(%eax),%dx
		mov    %di,_0e3df4_data(%eax)
		mov    %dx,0x000040(%esi)
		mov    _0e3df8_data(%eax),%dx
		xor    %ebx,%ebx
		mov    %dx,0x000042(%esi)
		mov    $0x00000f,%edx
		mov    %bx,_0e3df0_data(%eax)
		xor    %bl,%bl
		mov    %dx,_0e3df4_data(%eax)
		xor    %edx,%edx
		mov    %bl,_0e3dfd_data(%eax)
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%cl
		and    $0x0000f0,%cl
		mov    %cl,0x000005(%ebx,%eax,1)
		mov    %cl,%ch
		or     $0x000002,%ch
		mov    %ch,0x000005(%ebx,%eax,1)
		movb   $0x000000,0x000071(%esi)
		movb   $0x000008,0x000072(%esi)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0633f3_jump:
		cmp    $0x000003,%dh
		jne    _063462_jump
		mov    0x000004(%esp),%dh
		mov    %dh,0x00006c(%esi)
		mov    %dl,0x00006b(%esi)
		mov    %dl,_0e3dfc_data(%eax)
		mov    %bx,_0e3df6_data(%eax)
		mov    _0e3df4_data(%eax),%bx
		mov    %cx,_0e3df8_data(%eax)
		dec    %ebx
		mov    _0e3df6_data(%eax),%dx
		mov    %bx,_0e3df4_data(%eax)
		mov    %dx,0x000040(%esi)
		mov    _0e3df8_data(%eax),%dx
		mov    $0x00000f,%ecx
		mov    %dx,0x000042(%esi)
		xor    %bl,%bl
		mov    %cx,_0e3df4_data(%eax)
		xor    %esi,%esi
		mov    %bl,_0e3dfd_data(%eax)
		mov    %si,_0e3df0_data(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063462_jump:
		cmp    0x00006b(%esi),%dl
		jne    _0635c2_jump
		mov    0x000004(%esp),%dh
		mov    %dh,0x00006c(%esi)
		mov    %dl,0x00006b(%esi)
		mov    %dl,_0e3dfc_data(%eax)
		mov    %bx,_0e3df6_data(%eax)
		mov    _0e3df4_data(%eax),%dx
		mov    %cx,_0e3df8_data(%eax)
		dec    %edx
		mov    %dx,_0e3df4_data(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0634a2_jump:
		test   %di,%di
		jne    _063537_jump
		mov    _0e3df6_data(%eax),%dx
		mov    %dx,0x000040(%esi)
		mov    _0e3df8_data(%eax),%dx
		mov    %dx,0x000042(%esi)
		cmpb   $0x000002,_0e3dfe_data(%eax)
		jne    _0634fe_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x0000f0,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x000002,%bh
		mov    %bh,0x000005(%edx,%eax,8)
		movb   $0x000000,0x000071(%esi)
		movb   $0x000008,0x000072(%esi)

	_0634fe_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x00000f,%esi
		xor    %edi,%edi
		mov    %si,_0e3df4_data(,%eax,4)
		xor    %cl,%cl
		mov    %di,_0e3df0_data(,%eax,4)
		mov    %cl,_0e3dfd_data(,%eax,4)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063537_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    _0e3dfc_data(%eax),%dl
		mov    %dl,0x00006b(%esi)
		testb  $0x000001,_0e3df4_data(%eax)
		je     _06355b_jump
		addl   $0x000002,0x00002c(%esi)
		jmp    _06355f_jump

	_06355b_jump:
		subl   $0x000002,0x00002c(%esi)

	_06355f_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _0e3df4_data(%eax),%bx
		test   %bx,%bx
		jle    _0635c2_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0e3df4_data(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063591_jump:
		jle    _06359d_jump
		mov    %edi,%ebx
		dec    %ebx
		mov    %bx,_0e3df0_data(%eax)

	_06359d_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		cmpw   $0x000001,_0e3df0_data(%eax)
		jne    _0635c2_jump
		movw   $0x00000f,_0e3df4_data(%eax)

	_0635c2_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0635cc_switch:
		.long   _0636a4_case
		.long   _0636bd_case
		.long   _063768_case
		.long   _063740_case
		.long   _0636e8_case




_0635e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x00006d(%eax),%al
		test   %al,%al
		jbe    _0635fa_jump
		cmp    $0x000002,%al
		je     _063683_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0635fa_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000009,%al
		jne    _0637cb_jump
		mov    0x000081(%esi),%bl
		mov    $0x000001,%cl
		or     $0x000020,%bl
		mov    0x000040(%esi),%ax
		mov    %bl,0x000081(%esi)
		test   %ax,%ax
		js     _063624_jump
		sar    %cl,%ax
		jmp    _06362d_jump

	_063624_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06362d_jump:
		mov    %ax,0x000040(%esi)
		mov    %esi,%eax
		call   _0252c0_func
		cmpw   $0x000001,_0ceda6_data
		je     _06364f_jump
		cmpb   $0x000002,_0e3e56_data
		jne    _0637cb_jump

	_06364f_jump:
		xor    %ecx,%ecx
		mov    %cx,_0ceda6_data
		cmpb   $0x000002,_0e3e56_data
		je     _06366d_jump
		movb   $0x000002,_0e3e56_data
		call   _061fd0_func

	_06366d_jump:
		mov    $0x00000c,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063683_jump:
		andb   $0x0000df,0x000081(%esi)
		mov    0x00006c(%esi),%al
		sub    $0x00000a,%al
		cmp    $0x000004,%al
		ja     _0637cb_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0635cc_switch(,%eax,4)

	_0636a4_case:
		cmpb   $0x000000,_0e3e56_data
		jne    _0637cb_jump
		mov    %esi,%eax
		call   _062ad0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0636bd_case:
		mov    _0e3e56_data,%ah
		cmp    $0x000003,%ah
		jne    _0636d4_jump
		mov    %esi,%eax
		call   _062fc8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0636d4_jump:
		test   %ah,%ah
		jne    _0637cb_jump
		mov    %esi,%eax
		call   _062bf0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0636e8_case:
		mov    _0e3e56_data,%dl
		cmp    $0x000003,%dl
		jne    _0636fc_jump
		mov    %esi,%eax
		call   _062fc8_func
		jmp    _063707_jump

	_0636fc_jump:
		test   %dl,%dl
		jne    _063707_jump
		mov    %esi,%eax
		call   _062bf0_func

	_063707_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _0637cb_jump
		mov    $0xffffffff,%edx
		xor    %eax,%eax
		call   _062550_func
		cmp    0x00006b(%esi),%al
		jne    _0637cb_jump
		xor    %eax,%eax
		mov    0x00000c(%esi),%edx
		mov    0x00006d(%esi),%al
		movzbl 0x00006c(%esi),%esi
		mov    (%edx,%eax,4),%eax
		andb   $0x0000f0,0x000005(%eax,%esi,8)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063740_case:
		mov    _0e3e56_data,%cl
		cmp    $0x000002,%cl
		jne    _063757_jump
		mov    %esi,%eax
		call   _062dbc_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063757_jump:
		cmp    $0x000003,%cl
		jne    _0637cb_jump
		mov    %esi,%eax
		call   _062fc8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063768_case:
		xor    %eax,%eax
		call   _062ac8_func
		mov    %ax,0x000040(%esi)
		mov    $0xffffffff,%eax
		call   _062ac8_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _0637cb_jump
		xor    %eax,%eax
		call   _062ac8_func
		mov    %ax,0x000042(%esi)
		cmpb   $0x000002,_0e3e56_data
		jne    _0637bd_jump
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		mov    $0x000002,%edx
		call   _062120_func
		mov    %esi,%eax
		call   _01d374_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0637bd_jump:
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func

	_0637cb_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0637d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000068(%eax),%dl
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    _0cdbcc_data,%cx
		mov    _0cdc0c_data,%bl
		add    %ecx,%ebx
		sub    %dx,%bx
		mov    %ebx,%edx
		je     _06381a_jump
		add    $0x000081,%eax
		test   %bx,%bx
		setg   %dl
		and    $0x0000ff,%edx
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)

	_06381a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_063820_switch:
		.long   _063935_case
		.long   _0638f3_case
		.long   _063c26_case
		.long   _063c26_case
		.long   _06396c_case
		.long   _0638a7_case
		.long   _063a04_case

_06383c_switch:
		.long   _063b20_case
		.long   _063b39_case
		.long   _063b59_case
		.long   _063bbd_case
		.long   _063c0d_case
		.long   _063af2_case
		.long   _063c26_case
		.long   _063b27_case
		.long   _063a8f_case




_063860_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    $0x000001,%ah
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ah,_0cefbd_data
		mov    0x00006d(%ecx),%bl
		mov    0x00006c(%ecx),%dl
		mov    %edx,%eax
		dec    %eax
		test   %bx,%bx
		jbe    _063890_jump
		cmp    $0x000002,%bx
		je     _063a78_jump
		jmp    _063c26_case

	_063890_jump:
		cmp    $0x000006,%ax
		ja     _063c26_case
		and    $0x00ffff,%eax
		jmp    *%cs:_063820_switch(,%eax,4)

	_0638a7_case:
		movw   $0x000001,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _0252c0_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%eax
		add    $0x000100,%eax
		cmp    %eax,%edx
		jle    _063c26_case
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000040(%ecx)
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0638f3_case:
		mov    %ecx,%eax
		call   _0637d0_func
		mov    %ecx,%eax
		call   _0252c0_func
		cmpb   $0x000004,_0e3e56_data
		jne    _063914_jump
		call   _061fd0_func
		call   _062974_func

	_063914_jump:
		cmpb   $0x000000,_0e3e56_data
		jne    _063c26_case
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063935_case:
		mov    %ecx,%eax
		call   _0252c0_func
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _063c26_case
		mov    _0e3e56_data,%al
		test   %al,%al
		jne    _063c26_case
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06396c_case:
		mov    %ecx,%eax
		call   _0252c0_func
		cmpb   $0x000023,0x00006b(%ecx)
		jne    _0639de_jump
		movswl %bx,%ebx
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		movswl %dx,%eax
		lea    0x000000(,%eax,8),%edx
		mov    (%ebx),%eax
		mov    0x000005(%edx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _0639de_jump
		mov    0x000032(%ecx),%edx
		mov    $0x000099,%eax
		sar    $0x000010,%edx
		xor    %ebx,%ebx
		call   _06f3bc_func
		jmp    _0639c2_jump

	_0639b8_jump:
		xor    %eax,%eax
		mov    %bl,%al
		call   _06229c_func
		inc    %ebx

	_0639c2_jump:
		xor    %eax,%eax
		mov    _0e3e55_data,%al
		cmp    %ax,%bx
		jge    _063c26_case
		cmp    $0x000005,%bx
		jl     _0639b8_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0639de_jump:
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _063c26_case
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063a04_case:
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x00fffe,0x000042(%ecx)
		call   _01cbd0_func
		test   %al,%al
		je     _063c26_case
		mov    $0x000001,%edx
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%al
		xor    %ebx,%ebx
		mov    %al,0x000081(%ecx)

	_063a3b_jump:
		movswl %bx,%eax
		imul   $0x000014,%eax,%eax
		movb   $0x000002,_0e3dfe_data(%eax)
		mov    %dx,_0e3df0_data(%eax)
		xor    %ch,%ch
		mov    %ch,_0e3dfd_data(%eax)
		mov    $0x00000f,%ecx
		add    %edx,%ebx
		mov    %cx,_0e3df4_data(%eax)
		cmp    $0x000005,%bx
		jl     _063a3b_jump
		movb   $0x000002,_0e3e56_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063a78_jump:
		cmp    $0x000008,%ax
		ja     _063c26_case
		and    $0x00ffff,%eax
		jmp    *%cs:_06383c_switch(,%eax,4)

	_063a8f_case:
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		call   _01cbd0_func
		test   %al,%al
		jne    _063ab5_jump
		cmpb   $0x000001,0x000076(%ecx)
		jne    _063c26_case
		cmpw   $0x000000,0x000042(%ecx)
		jl     _063c26_case

	_063ab5_jump:
		mov    $0x000001,%dh
		mov    0x000076(%ecx),%bl
		mov    %dh,_0e3e54_data
		sub    %dh,%bl
		mov    %bl,0x000076(%ecx)
		jne    _063adb_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063adb_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063af2_case:
		andb   $0x0000f7,0x000081(%ecx)
		mov    0x00006b(%ecx),%ah
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x000006,%ah
		jae    _063b14_jump
		mov    %ecx,%eax
		call   _061ec0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063b14_jump:
		movw   $0x00fffe,0x000042(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063b20_case:
		mov    %ecx,%eax
		call   _0637d0_func

	_063b27_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063b39_case:
		mov    0x00006b(%ecx),%bh
		movw   $0x00fffe,0x000042(%ecx)
		cmp    $0x00000f,%bh
		jb     _063b4d_jump
		movw   $0x000000,0x000042(%ecx)

	_063b4d_jump:
		movw   $0x000000,0x000050(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063b59_case:
		movw   $0x000000,0x000042(%ecx)
		call   _061fec_func
		test   %al,%al
		je     _063c26_case
		cmpb   $0x000000,_0e3e56_data
		jne    _063b7c_jump
		movb   $0x000001,_0e3e56_data

	_063b7c_jump:
		mov    0x000050(%ecx),%si
		inc    %esi
		mov    _0e3e52_data,%di
		mov    %si,0x000050(%ecx)
		cmp    %di,%si
		je     _063b9e_jump
		cmpb   $0x000005,_0e3e59_data
		jne    _063c26_case

	_063b9e_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movb   $0x000000,0x000071(%ecx)
		mov    %ecx,%eax
		movb   $0x000003,0x000072(%ecx)
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063bbd_case:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%bx
		mov    0x000069(%ecx),%al
		mov    _0cee10_data,%dx
		add    %ebx,%eax
		add    $0x0000a0,%edx
		movswl %ax,%ebx
		movswl %dx,%eax
		mov    %ebx,%edx
		call   _0620b0_func
		cwtl   
		sub    %ebx,%eax
		cmp    $0x000005,%eax
		jge    _063c26_case
		mov    $0x000005,%ebx
		mov    $0x000002,%edx
		movw   $0x000001,0x000042(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063c0d_case:
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _063c26_case
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func

	_063c26_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063c2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _061f10_func
		mov    $0x000096,%edx
		mov    $0x000046,%ebx
		movb   $0x000006,0x000076(%ecx)
		xor    %ah,%ah
		movb   $0x000006,0x000077(%ecx)
		mov    %ah,_0e3e5a_data
		mov    %ah,_0e3e57_data
		mov    %ah,_0e3e56_data
		mov    %ah,_0e3e58_data
		mov    _096e76_data,%al
		mov    %dx,_0e3e52_data
		mov    %al,_0e3e59_data
		xor    %eax,%eax
		mov    %bx,_0e3e50_data
		mov    _0e3e59_data,%al
		mov    $0x000002,%edx
		xor    %bh,%bh
		mov    _096e70_data(%eax),%al
		mov    %bh,_0e3e54_data
		mov    %al,_0e3e55_data
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000f7,%al
		mov    $0x000006,%ebx
		mov    %al,0x000081(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _01d374_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000008(%eax),%eax
		mov    0x000032(%eax),%al
		mov    %al,0x00006a(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063cd4_func:
		call   _063c2c_func
		mov    _0cee10_data,%ax
		mov    %ax,_0cedc8_data
		mov    %ax,_0cedba_data
		mov    _0cedfa_data,%ax
		mov    %ax,_0cedc6_data
		mov    %ax,_0cedbc_data
		ret    



_063d00_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x000005,%dx
		jne    _063d44_jump
		cmpb   $0x000000,_0e3e54_data
		jne    _063d44_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _063d44_jump
		cmpb   $0x000003,0x00006c(%ecx)
		jne    _063d44_jump
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d374_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fffe,0x000042(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000008,0x000072(%ecx)

	_063d44_jump:
		pop    %ecx
		pop    %ebx
		ret    



_063d48_func:
		push   %edx
		mov    $0x000028,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0cdbfa_data
		pop    %edx
		ret    



_063d5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _063daa_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _063daa_jump
		mov    %ecx,%eax
		call   _0255d0_func
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x000001,%bl
		xor    %edx,%edx
		mov    %bl,_0e3dfd_data(,%eax,4)
		mov    $0x000009,%ebx
		mov    %ecx,%eax
		call   _01d374_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063daa_jump:
		mov    0x00006d(%ecx),%dh
		cmp    $0x000002,%dh
		jne    _063e15_jump
		cmpb   $0x00000b,0x00006c(%ecx)
		jne    _063e15_jump
		mov    _0e3e59_data,%al
		cmp    $0x000001,%al
		je     _063dc9_jump
		cmp    %dh,%al
		jne    _063e65_jump

	_063dc9_jump:
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x000001,%dl
		mov    %dl,_0e3dfd_data(,%eax,4)
		call   _061fec_func
		test   %al,%al
		je     _063df0_jump
		mov    %dl,_0e3e56_data

	_063df0_jump:
		mov    %ecx,%eax
		mov    $0x000009,%ebx
		call   _0255d0_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d374_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063e15_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _063e65_jump
		cmpb   $0x00000e,0x00006c(%ecx)
		jne    _063e65_jump
		mov    0x000072(%ecx),%al
		mov    0x000042(%ecx),%dx
		mov    0x000071(%ecx),%ah
		neg    %edx
		sub    %ah,%al
		mov    %dx,0x000042(%ecx)
		xor    %edx,%edx
		mov    %al,0x000071(%ecx)
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x0000f0,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x000002,%bh
		mov    %bh,0x000005(%edx,%eax,8)
		mov    %ecx,%eax
		call   _0255d0_func

	_063e65_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063e6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _063ea5_jump
		cmpb   $0x000007,0x00006c(%ecx)
		jne    _063ea5_jump
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _0255d0_func
		mov    %ecx,%eax
		call   _01d374_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063ea5_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _063f12_jump
		cmpb   $0x000005,0x00006c(%ecx)
		jne    _063f12_jump
		movw   $0x000000,0x000040(%ecx)
		mov    _0ceda6_data,%dx
		movw   $0x000000,0x000042(%ecx)
		test   %dx,%dx
		jne    _063efd_jump
		cmpw   $0x000000,0x000050(%ecx)
		jne    _063ef4_jump
		mov    %ecx,%eax
		call   _0255d0_func
		mov    %ecx,%eax
		call   _053b78_func
		mov    0x000032(%ecx),%edx
		mov    $0x00003e,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		movw   $0x000001,0x000050(%ecx)

	_063ef4_jump:
		movw   $0x000001,_0ceda6_data

	_063efd_jump:
		cmpb   $0x000001,_0e3e56_data
		jne    _063f12_jump
		movb   $0x000002,_0e3e56_data
		call   _061fd0_func

	_063f12_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063f20_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ecx
		movl   $0x000100,_0e3e5c_data
		xor    %edx,%edx
		mov    %ax,%dx
		add    $0x00000f,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    $_0e3e5c_data,%ebx
		mov    %eax,_0e3e60_data
		mov    %ebx,%edx
		mov    $0x000031,%eax
		call   _07cfb2_func
		testb  $0x000001,_0e3e74_data
		je     _063f6d_jump
		movl   $0x000000,(%ecx)
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_063f6d_jump:
		xor    %edx,%edx
		mov    _0e3e5c_data,%dx
		shl    $0x000010,%edx
		mov    %edx,(%ecx)
		mov    _0e3e68_data,%ax
		pop    %ecx
		pop    %ebx
		ret    



_063f84_func:
		push   %ebx
		push   %edx
		mov    $0x000101,%edx
		mov    $_0e3e5c_data,%ebx
		mov    %ax,_0e3e68_data
		mov    $0x000031,%eax
		mov    %dx,_0e3e5c_data
		mov    %ebx,%edx
		call   _07cfb2_func
		testb  $0x000001,_0e3e74_data
		setne  %al
		pop    %edx
		pop    %ebx
		ret    



_063fb8_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %al,%cl
		mov    %edx,%esi
		mov    $0x00001c,%ebx
		mov    $_0e3e5c_data,%eax
		xor    %edx,%edx
		call   _07c0b0_func
		mov    $0x00000c,%ebx
		mov    $_0e3eac_data,%eax
		xor    %edx,%edx
		call   _07c0b0_func
		mov    $0x000034,%ebx
		mov    $_0e3e78_data,%eax
		xor    %edx,%edx
		call   _07c0b0_func
		xor    %eax,%eax
		mov    (%esi),%ax
		mov    %eax,_0e3e94_data
		xor    %eax,%eax
		mov    0x000002(%esi),%ax
		mov    %eax,_0e3e88_data
		xor    %eax,%eax
		mov    0x000004(%esi),%ax
		mov    %eax,_0e3e90_data
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		mov    %eax,_0e3e8c_data
		xor    %eax,%eax
		mov    0x000008(%esi),%ax
		mov    %eax,_0e3e7c_data
		xor    %eax,%eax
		mov    0x00000a(%esi),%ax
		mov    $0x000300,%edx
		mov    %eax,_0e3e78_data
		mov    0x00000c(%esi),%ax
		mov    %cl,_0e3e60_data
		mov    %ax,_0e3e98_data
		mov    0x00000e(%esi),%ax
		xor    %ebx,%ebx
		mov    %ax,_0e3ea4_data
		mov    0x000010(%esi),%ax
		mov    $_0e3eac_data,%ecx
		mov    %ax,_0e3e9c_data
		mov    0x000012(%esi),%ax
		mov    %dx,_0e3e5c_data
		mov    %ax,_0e3e9a_data
		mov    0x000014(%esi),%ax
		mov    %bx,_0e3e64_data
		mov    %ax,_0e3ea8_data
		xor    %ah,%ah
		mov    %ds,%edx
		mov    %ah,_0e3e61_data
		mov    $_0e3e78_data,%eax
		mov    $_0e3e5c_data,%ebx
		mov    %dx,_0e3eac_data
		mov    $_0e3e78_data,%edx
		mov    $0x000031,%eax
		mov    %edx,_0e3e70_data
		mov    %ebx,%edx
		call   _0815e3_func
		mov    _0e3e94_data,%ax
		mov    %ax,(%esi)
		mov    _0e3e88_data,%ax
		mov    %ax,0x000002(%esi)
		mov    _0e3e90_data,%ax
		mov    %ax,0x000004(%esi)
		mov    _0e3e8c_data,%ax
		mov    %ax,0x000006(%esi)
		mov    _0e3e7c_data,%ax
		mov    %ax,0x000008(%esi)
		mov    _0e3e78_data,%ax
		mov    %ax,0x00000a(%esi)
		mov    _0e3e98_data,%ax
		mov    %ax,0x00000c(%esi)
		mov    _0e3ea4_data,%ax
		mov    %ax,0x00000e(%esi)
		mov    _0e3e9c_data,%ax
		mov    %ax,0x000010(%esi)
		mov    _0e3e9a_data,%ax
		mov    %ax,0x000012(%esi)
		mov    _0e3ea8_data,%ax
		mov    %ax,0x000014(%esi)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_064130_switch:
		.long   _064181_case
		.long   _0641ae_case
		.long   _064188_case
		.long   _0641ae_case
		.long   _06418f_case
		.long   _0641ae_case
		.long   _0641ae_case
		.long   _064196_case
		.long   _0641ae_case
		.long   _06419d_case
		.long   _0641ae_case
		.long   _0641a4_case




_064160_func:
		push   %ebx
		push   %edx
		mov    %al,%bl
		mov    _0cdc30_data,%eax
		mov    0x00006c(%eax),%dl
		dec    %dl
		cmp    $0x00000b,%dl
		ja     _0641ae_case
		and    $0x0000ff,%edx
		jmp    *%cs:_064130_switch(,%edx,4)

	_064181_case:
		mov    $0x000002,%edx
		jmp    _0641a9_jump

	_064188_case:
		mov    $0x000004,%edx
		jmp    _0641a9_jump

	_06418f_case:
		mov    $0x000006,%edx
		jmp    _0641a9_jump

	_064196_case:
		mov    $0x000009,%edx
		jmp    _0641a9_jump

	_06419d_case:
		mov    $0x00000b,%edx
		jmp    _0641a9_jump

	_0641a4_case:
		mov    $0x00000d,%edx

	_0641a9_jump:
		call   _01d364_func

	_0641ae_case:
		test   %bl,%bl
		je     _0641bb_jump
		mov    _0cdc30_data,%eax
		movb   $0x000007,0x00006b(%eax)

	_0641bb_jump:
		pop    %edx
		pop    %ebx
		ret    



_0641c0_func:
		push   %ebx
		push   %edx
		mov    _0cdcc4_data,%eax
		mov    _0cedf8_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		cwtl   
		sub    %edx,%eax
		mov    _0cdc30_data,%edx
		mov    %ax,0x000038(%edx)
		mov    _0cee10_data,%bx
		mov    0x000028(%edx),%ax
		sub    %ebx,%eax
		add    $0x000008,%eax
		mov    %ax,0x000036(%edx)
		pop    %edx
		pop    %ebx
		ret    

_0641fc_switch:
		.long   _06445a_case
		.long   _064463_case
		.long   _064448_case
		.long   _064463_case
		.long   _064436_case
		.long   _064463_case
		.long   _064463_case
		.long   _064453_case
		.long   _064463_case
		.long   _064441_case
		.long   _064463_case
		.long   _06442f_case




_06422c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000002,_0cdc11_data
		jne    _064250_jump
		mov    _0cdc10_data,%dl
		cmp    $0x000019,%dl
		je     _064249_jump
		cmp    $0x00001a,%dl
		jne    _064250_jump

	_064249_jump:
		mov    $0x00001d,%edx
		jmp    _06428f_jump

	_064250_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _064270_jump
		mov    _0cdc10_data,%bh
		cmp    $0x00001b,%bh
		je     _064269_jump
		cmp    $0x00001c,%bh
		jne    _064270_jump

	_064269_jump:
		mov    $0x00001e,%edx
		jmp    _06428f_jump

	_064270_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _06428a_jump
		mov    _0cdc10_data,%al
		cmp    $0x000011,%al
		je     _064299_jump
		cmp    $0x000012,%al
		je     _064299_jump
		cmp    $0x000013,%al
		je     _064299_jump

	_06428a_jump:
		mov    $0x00000d,%edx

	_06428f_jump:
		mov    $_0cdba4_data,%eax
		call   _01d364_func

	_064299_jump:
		cmpb   $0x000000,_0cdc11_data
		jne    _0642fd_jump
		testb  $0x000008,_0cdc25_data
		je     _0642d2_jump
		mov    _0cdcca_data,%edx
		sar    $0x000010,%edx
		shl    $0x00000a,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    %eax,%edx
		mov    _0cedb0_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		jmp    _0642f7_jump

	_0642d2_jump:
		mov    _0cdcca_data,%edx
		sar    $0x000010,%edx
		shl    $0x00000a,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    %eax,%edx
		mov    _0cedb0_data,%eax
		sar    $0x000010,%eax
		add    %edx,%eax

	_0642f7_jump:
		mov    %ax,_0cedb2_data

	_0642fd_jump:
		mov    _0cdc30_data,%eax
		mov    _0cdc25_data,%dl
		xor    %bh,%bh
		and    $0x000008,%dl
		mov    %bh,_0cdcd4_data
		mov    0x000081(%eax),%dh
		mov    %bh,_0cdcd5_data
		and    $0x0000f7,%dh
		mov    %bh,_0cdcd1_data
		mov    %dh,%bl
		mov    %dh,0x000081(%eax)
		or     %dl,%bl
		mov    %bl,0x000081(%eax)
		mov    0x000081(%eax),%bh
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%bh
		mov    %bh,0x000081(%eax)
		mov    _0cede0_data,%eax
		mov    $0x000001,%cl
		sar    $0x000010,%eax
		mov    %cl,_0cdcd2_data
		call   _01f334_func
		mov    _0cdc30_data,%eax
		call   _01f304_func
		mov    _0cdc30_data,%eax
		xor    %ch,%ch
		movw   $0x000000,0x000042(%eax)
		xor    %ebx,%ebx
		movw   $0x00ffff,0x00004a(%eax)
		xor    %edx,%edx
		mov    0x00006e(%eax),%bl
		mov    0x00006f(%eax),%dl
		mov    %ch,0x00006b(%eax)
		call   _01d374_func
		mov    _0cdc30_data,%eax
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		mov    0x000002(%ebx,%edx,8),%dl
		mov    %dl,0x00006a(%eax)
		mov    _0cedae_data,%edx
		mov    _0cedaa_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%eax)
		mov    _0cdc25_data,%cl
		lea    0x000028(%eax),%edx
		test   $0x000008,%cl
		je     _0643e7_jump
		mov    $0xfffffffb,%eax
		jmp    _0643ec_jump

	_0643e7_jump:
		mov    $0x000005,%eax

	_0643ec_jump:
		mov    (%edx),%ebx
		mov    $0x000004,%cl
		add    %eax,%ebx
		mov    _0cdccc_data,%ax
		mov    %ebx,(%edx)
		test   %ax,%ax
		js     _064404_jump
		sar    %cl,%ax
		jmp    _06440d_jump

	_064404_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06440d_jump:
		inc    %al
		mov    %al,_0cdcd3_data
		mov    _0cdc30_data,%eax
		mov    0x00006e(%eax),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _064463_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0641fc_switch(,%eax,4)

	_06442f_case:
		addb   $0x000002,_0cdcd3_data

	_064436_case:
		movw   $0x00000b,_0cdcca_data
		jmp    _064463_case

	_064441_case:
		addb   $0x000002,_0cdcd3_data

	_064448_case:
		movw   $0x000008,_0cdcca_data
		jmp    _064463_case

	_064453_case:
		addb   $0x000002,_0cdcd3_data

	_06445a_case:
		movw   $0x000005,_0cdcca_data

	_064463_case:
		testb  $0x000008,_0cdc25_data
		je     _064476_jump
		cmpw   $0x000000,_0cedb2_data
		jg     _064489_jump

	_064476_jump:
		testb  $0x000008,_0cdc25_data
		jne    _0644a9_jump
		cmpw   $0x000000,_0cedb2_data
		jge    _0644a9_jump

	_064489_jump:
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		test   %eax,%eax
		jge    _064499_jump
		neg    %eax

	_064499_jump:
		sub    $0x000005,%eax
		cmp    %ebx,%eax
		jge    _0644a2_jump
		mov    %ebx,%eax

	_0644a2_jump:
		add    %ax,_0cdcca_data

	_0644a9_jump:
		mov    _0cdcc8_data,%eax
		mov    $0x000010,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0644bc_jump
		mov    %ebx,%eax

	_0644bc_jump:
		mov    %eax,%edx
		mov    %ax,_0cdcca_data
		mov    _0cdc30_data,%eax
		testb  $0x000008,0x000081(%eax)
		je     _0644e1_jump
		mov    0x000028(%eax),%esi
		mov    %dx,0x000040(%eax)
		add    $0x00000b,%esi
		mov    %esi,0x000028(%eax)
		jmp    _0644f0_jump

	_0644e1_jump:
		mov    0x000028(%eax),%ecx
		neg    %edx
		sub    $0x00000b,%ecx
		mov    %dx,0x000040(%eax)
		mov    %ecx,0x000028(%eax)

	_0644f0_jump:
		mov    _0cdcca_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000006,%eax
		add    %eax,%edx
		add    %edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    _0cdcc8_data,%edx
		sar    $0x000010,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    $0x000028,%ebx
		sub    %edx,%eax
		mov    $0x000008,%cl
		sub    %eax,%ebx
		mov    _0cdccc_data,%ax
		mov    %bx,_0cdcce_data
		cwtl   
		shl    %cl,%eax
		mov    %ax,_0cdcc8_data
		mov    %ax,_0cdccc_data
		mov    _0cdcc8_data,%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    _0cdccc_data,%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,_0cdcce_data
		mov    _0cdc30_data,%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%dl
		mov    0x000074(%eax),%bl
		lea    (%edx,%ebx,1),%ecx
		mov    _0cedc8_data,%edx
		mov    _0cedac_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		sar    %ecx
		add    %ebx,%edx
		sub    %ecx,%edx
		mov    %edx,0x00002c(%eax)
		mov    $0x000004,%cl
		mov    0x00002c(%eax),%ax
		cwtl   
		shl    %cl,%eax
		mov    %eax,_0cdcc4_data
		call   _0641c0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0645b0_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0cdbb0_data,%eax
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0cdc10_data,%dl
		testb  $0x000002,0x000007(%ebx,%edx,8)
		je     _064688_jump
		cmpb   $0x000002,_0cdc11_data
		jne    _064658_jump
		cmpw   $0x000000,_0cdbe6_data
		jle    _06460e_jump
		mov    0x000008(%eax),%eax
		mov    0x00006d(%eax),%bh
		mov    0x000015(%eax),%dl
		and    $0x00000f,%bh
		and    $0x0000f0,%dl
		mov    %bh,%cl
		mov    %bh,0x00006d(%eax)
		or     %dl,%cl
		mov    %cl,0x00006d(%eax)
		jmp    _064627_jump

	_06460e_jump:
		mov    0x000008(%eax),%eax
		mov    0x000005(%eax),%dl
		and    $0x0000f0,%dl
		mov    0x00006d(%eax),%dh
		and    $0x00000f,%dh
		mov    %dh,%bl
		mov    %dh,0x00006d(%eax)
		or     %dl,%bl
		mov    %bl,0x00006d(%eax)

	_064627_jump:
		mov    $0x000020,%esi
		mov    $0xffffffff,%edi
		mov    %si,_0cdccc_data
		call   _06422c_func
		mov    _0ced80_data,%ch
		mov    %di,_0cee0c_data
		test   $0x000008,%ch
		je     _064688_jump
		xor    %al,%al
		mov    %al,_0cefd3_data
		jmp    _064688_jump

	_064658_jump:
		call   _06a904_func
		mov    $0x00000b,%edx
		mov    $_0cdba4_data,%eax
		mov    $0x000005,%ebx
		call   _01d364_func
		mov    $0x000001,%al
		mov    %bx,_0cdccc_data
		xor    %edx,%edx
		mov    %al,_0cdcd4_data
		mov    %dx,_0cecca_data

	_064688_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064690_func:
		push   %edx
		mov    _0cdccc_data,%dx
		inc    %edx
		mov    %dx,_0cdccc_data
		cmp    $0x000040,%dx
		jl     _0646af_jump
		movw   $0x00003f,_0cdccc_data

	_0646af_jump:
		pop    %edx
		ret    



_0646b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%dl
		mov    _0cdc30_data,%ebx
		mov    0x000048(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06475b_jump
		mov    %eax,%ecx
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0cc300_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		movw   $0x000000,0x000040(%eax)
		movw   $0x000000,0x000042(%eax)
		movw   $0x00ffff,0x00004a(%ebx)
		test   %dl,%dl
		jne    _0646ff_jump
		testb  $0x000004,0x000081(%ebx)
		jne    _064745_jump

	_0646ff_jump:
		mov    _0cdbcc_data,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _0cdc0c_data,%bl
		mov    0x000068(%eax),%cl
		add    %edx,%ebx
		sub    %ecx,%ebx
		xor    %ecx,%ecx
		mov    %ebx,0x000028(%eax)
		xor    %ebx,%ebx
		mov    0x000069(%eax),%cl
		mov    0x000074(%eax),%bl
		lea    (%ebx,%ecx,1),%edx
		mov    _0cedc8_data,%ebx
		mov    _0cedac_data,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%ecx
		sar    %ebx
		add    %ecx,%ebx
		sar    %edx
		sub    $0x000005,%ebx
		sub    %edx,%ebx
		jmp    _064758_jump

	_064745_jump:
		test   %dl,%dl
		jne    _06475b_jump
		mov    0x00003a(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,0x000028(%eax)
		mov    0x00003c(%eax),%ebx
		sar    $0x000010,%ebx

	_064758_jump:
		mov    %ebx,0x00002c(%eax)

	_06475b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064760_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000048(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc300_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000040(%edx),%bx
		mov    %bx,0x000040(%eax)
		mov    0x000042(%edx),%dx
		mov    %dx,0x000042(%eax)
		mov    _0cdbf8_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _0647a0_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _0647a7_jump

	_0647a0_jump:
		xor    %eax,%eax
		call   _0646b4_func

	_0647a7_jump:
		pop    %edx
		pop    %ebx
		ret    



_0647ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0647bd_jump
		neg    %eax

	_0647bd_jump:
		cmp    $0x00000b,%eax
		jl     _0647c6_jump
		mov    $0x000002,%al
		jmp    _0647ea_jump

	_0647c6_jump:
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0647d2_jump
		neg    %eax

	_0647d2_jump:
		cmp    $0x000008,%eax
		jl     _0647db_jump
		mov    $0x000001,%al
		jmp    _0647ea_jump

	_0647db_jump:
		cmpb   $0x000000,_0cef4f_data
		je     _0647e8_jump
		mov    $0x000001,%al
		jmp    _0647ea_jump

	_0647e8_jump:
		xor    %al,%al

	_0647ea_jump:
		testb  $0x000008,0x000081(%edx)
		je     _064803_jump
		mov    0x000040(%edx),%cx
		xor    %ah,%ah
		sub    %eax,%ecx
		mov    %cx,0x000040(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064803_jump:
		mov    0x000040(%edx),%bx
		xor    %ah,%ah
		add    %eax,%ebx
		mov    %bx,0x000040(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064814_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		mov    %ah,_0cdcd2_data
		mov    %ah,_0cdcd5_data
		mov    %ah,_0cdcd1_data
		mov    _0cdc30_data,%eax
		mov    $0x000005,%edx
		movl   $0x000000,0x000024(%eax)
		mov    %dx,_0cdccc_data
		mov    0x000081(%eax),%bl
		mov    0x00006e(%eax),%dl
		and    $0x0000fb,%bl
		mov    %dl,0x00006c(%eax)
		mov    %bl,0x000081(%eax)
		xor    %eax,%eax
		call   _0646b4_func
		pop    %edx
		pop    %ebx
		ret    



_064864_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		cmpb   $0x000000,_0cdcd2_data
		je     _064aae_jump
		cmpw   $0x000000,0x000040(%esi)
		je     _064a4b_jump
		call   _0641c0_func
		mov    _0cdcc4_data,%eax
		sar    $0x000004,%eax
		mov    _0cdccc_data,%di
		mov    %eax,0x00002c(%esi)
		test   %di,%di
		jle    _0648d9_jump
		mov    _0cdcce_data,%cx
		cmp    %cx,%di
		jge    _0648b6_jump
		xor    %eax,%eax
		mov    %ax,_0cdccc_data
		jmp    _0648bf_jump

	_0648b6_jump:
		sub    %ecx,%edi
		mov    %di,_0cdccc_data

	_0648bf_jump:
		cmpw   $0x000000,_0cdccc_data
		jne    _064a32_jump
		xor    %eax,%eax
		call   _064160_func
		jmp    _064a32_jump

	_0648d9_jump:
		mov    _0cdcd1_data,%cl
		test   %cl,%cl
		jne    _0648ef_jump
		mov    %esi,%eax
		call   _0647ac_func
		jmp    _064a32_jump

	_0648ef_jump:
		cmp    $0x000001,%cl
		jne    _064a32_jump
		mov    0x00003e(%esi),%eax
		mov    _0cdcc8_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		test   %eax,%eax
		jge    _06490d_jump
		neg    %eax

	_06490d_jump:
		cmp    %edx,%eax
		jge    _064918_jump
		mov    %esi,%eax
		call   _0647ac_func

	_064918_jump:
		mov    _0cedae_data,%eax
		mov    _0cedaa_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		testb  $0x000008,0x000081(%esi)
		je     _064944_jump
		add    $0x00000b,%eax
		jmp    _064947_jump

	_064944_jump:
		sub    $0x00000b,%eax

	_064947_jump:
		cmpb   $0x000004,_0cdc11_data
		jne    _064961_jump
		testb  $0x000008,0x000081(%esi)
		je     _06495e_jump
		add    $0x00000b,%eax
		jmp    _064961_jump

	_06495e_jump:
		sub    $0x00000b,%eax

	_064961_jump:
		mov    _0cedc8_data,%ecx
		mov    _0cedac_data,%edi
		xor    %ebx,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ecx
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%dl
		sar    $0x000010,%edi
		add    %edx,%ebx
		sar    %ecx
		sar    %ebx
		add    %ecx,%edi
		sub    %ebx,%edi
		mov    0x000081(%esi),%bh
		shl    $0x000004,%edi
		test   $0x000008,%bh
		je     _06499a_jump
		cmp    0x000028(%esi),%eax
		jge    _0649a8_jump

	_06499a_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _0649b2_jump
		cmp    0x000028(%esi),%eax
		jg     _0649b2_jump

	_0649a8_jump:
		call   _064814_func
		jmp    _064a32_jump

	_0649b2_jump:
		mov    _0cdcc4_data,%ecx
		mov    %edi,%ebx
		mov    0x000028(%esi),%dx
		sub    %ecx,%ebx
		sub    %dx,%ax
		je     _0649d3_jump
		movswl %ax,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%ebx

	_0649d3_jump:
		mov    0x000040(%esi),%ax
		imul   %eax,%ebx
		mov    _0cdcc4_data,%ebp
		mov    %ebp,%eax
		mov    %bx,0x000042(%esi)
		mov    %edi,%ebx
		mov    0x000040(%esi),%edx
		cmp    %ebx,%eax
		jge    _0649f1_jump
		mov    %ebx,%eax

	_0649f1_jump:
		mov    %eax,%ecx
		mov    %edi,%ebx
		mov    _0cdcc4_data,%eax
		sar    $0x000010,%edx
		cmp    %ebx,%eax
		jle    _064a03_jump
		mov    %ebx,%eax

	_064a03_jump:
		add    %ebp,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _064a18_jump
		cmp    %ecx,%eax
		jg     _064a18_jump
		mov    $0x000001,%eax
		jmp    _064a1a_jump

	_064a18_jump:
		xor    %eax,%eax

	_064a1a_jump:
		test   %eax,%eax
		je     _064a25_jump
		sarw   $0x000004,0x000042(%esi)
		jmp    _064a32_jump

	_064a25_jump:
		sub    _0cdcc4_data,%edi
		sar    $0x000004,%edi
		mov    %di,0x000042(%esi)

	_064a32_jump:
		cmpb   $0x000000,_0cdcd5_data
		jne    _064a9c_jump
		cmpb   $0x000000,_0cdcd2_data
		je     _064a9c_jump
		call   _02d02c_func
		jmp    _064a9c_jump

	_064a4b_jump:
		cmpb   $0x000000,_0cdcd5_data
		je     _064a82_jump
		cmpb   $0x000000,_0cdcd1_data
		jne    _064a82_jump
		mov    $0x000001,%eax
		call   _064160_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000002(%edx,%eax,8),%al
		mov    %al,0x00006a(%esi)

	_064a82_jump:
		movb   $0x000001,_0cdcd1_data
		testb  $0x000008,0x000081(%esi)
		je     _064a98_jump
		decw   0x000040(%esi)
		jmp    _064a9c_jump

	_064a98_jump:
		incw   0x000040(%esi)

	_064a9c_jump:
		mov    0x000048(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _064aae_jump
		mov    %esi,%eax
		call   _064760_func

	_064aae_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064ab8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000020,%esp
		mov    _0cc300_data,%esi
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _064baf_jump

	_064ad7_jump:
		cmpw   $0x00000b,0x000060(%esi)
		jne    _064b9f_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _064b9f_jump
		mov    %esi,%eax
		call   _01f304_func
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    _0cdc30_data,%eax
		call   _01d710_func
		lea    0x000018(%esp),%eax
		lea    0x00001c(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		movb   $0x000000,0x00006b(%esi)
		xor    %eax,%eax
		mov    0x000012(%esp),%edx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    _0cdc30_data,%eax
		mov    %edx,0x000028(%esi)
		cmpw   $0x000000,0x000040(%eax)
		jle    _064b55_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ecx
		mov    %ecx,0x000028(%esi)

	_064b55_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%dl
		mov    0x000074(%esi),%al
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		sar    %eax
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %esi,%eax
		mov    %edx,0x00002c(%esi)
		call   _01db8c_func
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064b9f_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _064ad7_jump

	_064baf_jump:
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064bc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02f088_func
		testb  $0x000008,0x000081(%ecx)
		jne    _064c17_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _064c17_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		test   %ax,%ax
		jne    _064c6c_jump

	_064c17_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _064ca7_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _064ca7_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _064ca7_jump

	_064c6c_jump:
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		je     _064c8b_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		mov    $0x000007,%edx
		mov    %bh,0x000081(%ecx)
		jmp    _064c9d_jump

	_064c8b_jump:
		mov    %dh,%bl
		mov    %ecx,%eax
		or     $0x000008,%bl
		mov    $0x000008,%edx
		mov    %bl,0x000081(%ecx)

	_064c9d_jump:
		mov    $0x000001,%ebx
		call   _05f030_func

	_064ca7_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _02e850_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064cb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02f088_func
		testb  $0x000008,0x000081(%ecx)
		jne    _064d0f_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _064d0f_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		test   %ax,%ax
		jne    _064d64_jump

	_064d0f_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _064da8_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _064da8_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _064da8_jump

	_064d64_jump:
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		je     _064d83_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		mov    $0x00000d,%edx
		mov    %bh,0x000081(%ecx)
		jmp    _064d95_jump

	_064d83_jump:
		mov    %dh,%bl
		mov    %ecx,%eax
		or     $0x000008,%bl
		mov    $0x00000e,%edx
		mov    %bl,0x000081(%ecx)

	_064d95_jump:
		mov    $0x000001,%ebx
		call   _05f030_func
		mov    0x00003c(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%ecx)

	_064da8_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _064df0_jump
		cmpb   $0x000011,0x00006c(%ecx)
		jne    _064df0_jump
		mov    0x00003c(%ecx),%edx
		mov    0x00002c(%ecx),%ebx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jg     _064df0_jump
		testb  $0x000008,0x000081(%ecx)
		je     _064dd6_jump
		mov    $0x000001,%ebx
		mov    $0x00000a,%edx
		jmp    _064de0_jump

	_064dd6_jump:
		mov    $0x000001,%ebx
		mov    $0x000009,%edx

	_064de0_jump:
		mov    %ecx,%eax
		call   _05f030_func
		mov    0x00003c(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%ecx)

	_064df0_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _064e3a_jump
		cmpb   $0x000012,0x00006c(%ecx)
		jne    _064e3a_jump
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _064e3a_jump
		cmpw   $0x000005,0x000042(%ecx)
		jne    _064e1d_jump
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000000,0x00007e(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064e1d_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000005,0x000042(%ecx)
		call   _05f030_func

	_064e3a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064e40_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _064e50_jump
		cmpb   $0x000012,0x00006c(%ecx)
		je     _064e71_jump

	_064e50_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _05f030_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		movb   $0x000000,0x000076(%ecx)

	_064e71_jump:
		pop    %ecx
		pop    %ebx
		ret    



_064e74_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    $0x000001,%ah
		mov    _0cc304_data,%cx
		xor    %edx,%edx
		mov    %ah,(%esp)
		mov    _0cc300_data,%eax
		test   %cx,%cx
		jle    _064ec4_jump

	_064e95_jump:
		cmpw   $0x00000a,0x000060(%eax)
		jne    _064eb9_jump
		mov    0x00003c(%eax),%bx
		cmp    0x00003c(%esi),%bx
		jne    _064eb9_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _064eb9_jump
		cmpb   $0x000064,0x00007f(%eax)
		jae    _064eb9_jump
		xor    %bh,%bh
		mov    %bh,(%esp)
		jmp    _064ec4_jump

	_064eb9_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %cx,%dx
		jl     _064e95_jump

	_064ec4_jump:
		mov    (%esp),%al
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064ed0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    0x000032(%eax),%eax
		mov    _0ce434_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,2),%ax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc300_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%ecx
		cmp    0x00002c(%eax),%ecx
		jne    _064f2b_jump
		mov    _0cedf8_data,%ebx
		sar    $0x000010,%ebx
		add    $0x0000c8,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    0x000081(%eax),%bl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%eax)

	_064f2b_jump:
		mov    0x000032(%eax),%eax
		mov    _0ce434_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,2),%ax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc300_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%esi
		cmp    0x00002c(%eax),%esi
		jne    _064f80_jump
		movl   $0x000000,0x000024(%eax)
		mov    _0cedf8_data,%edx
		mov    0x000081(%eax),%bh
		sar    $0x000010,%edx
		and    $0x0000fb,%bh
		add    $0x0000c8,%edx
		mov    %bh,0x000081(%eax)
		mov    %edx,0x00002c(%eax)

	_064f80_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064f88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		call   _02f088_func
		xor    %al,%al
		cmpb   $0x000000,0x00006d(%edx)
		jne    _0650ae_jump
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%ecx
		mov    0x000069(%edx),%bl
		add    %ecx,%ebx
		mov    _0cedf8_data,%ecx
		sar    $0x000010,%ecx
		add    $0x000014,%ebx
		add    $0x0000c8,%ecx
		cmp    %ecx,%ebx
		jge    _064fc3_jump
		incb   0x00007f(%edx)

	_064fc3_jump:
		mov    0x00006c(%edx),%bh
		cmp    $0x000003,%bh
		jne    _064fd6_jump
		movw   $0x000000,0x000042(%edx)
		jmp    _0650ae_jump

	_064fd6_jump:
		cmp    $0x000009,%bh
		jne    _065071_jump
		mov    _0cedf8_data,%ecx
		mov    0x00002c(%edx),%edi
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    0x000074(%edx),%bl
		add    $0x0000c8,%ecx
		add    %edi,%ebx
		movw   $0x000006,0x000042(%edx)
		cmp    %ecx,%ebx
		jg     _065020_jump
		xor    %ebx,%ebx
		mov    _0cdb98_data,%ecx
		mov    0x000069(%edx),%bl
		sar    $0x000010,%ecx
		add    %edi,%ebx
		shl    $0x000004,%ecx
		add    $0x00000e,%ebx
		cmp    %ecx,%ebx
		jle    _0650ae_jump

	_065020_jump:
		xor    %eax,%eax
		mov    0x00002c(%edx),%ebx
		mov    0x000069(%edx),%al
		add    %ebx,%eax
		mov    _0cdb98_data,%ebx
		sar    $0x000010,%ebx
		add    $0x00000e,%eax
		shl    $0x000004,%ebx
		cmp    %ebx,%eax
		jle    _065044_jump
		mov    %edx,%eax
		call   _076a30_func

	_065044_jump:
		mov    _0cedf8_data,%eax
		sar    $0x000010,%eax
		add    $0x0000c8,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000081(%edx),%al
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%edx)
		mov    %edx,%eax
		movb   $0x000000,0x00007f(%edx)
		jmp    _0650a9_jump

	_065071_jump:
		mov    _0cedf8_data,%ecx
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%esi
		mov    0x000069(%edx),%bl
		sar    $0x000010,%ecx
		add    %esi,%ebx
		cmp    %ecx,%ebx
		jge    _0650ae_jump
		add    $0x0000c8,%ecx
		mov    %ecx,0x00002c(%edx)
		mov    0x000081(%edx),%ch
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ch
		mov    %edx,%eax
		mov    %ch,0x000081(%edx)

	_0650a9_jump:
		call   _064e74_func

	_0650ae_jump:
		cmpb   $0x000064,0x00007f(%edx)
		jne    _0650bb_jump
		mov    %edx,%eax
		call   _064e74_func

	_0650bb_jump:
		test   %al,%al
		je     _0651a6_jump
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%si
		xor    %eax,%eax
		test   %si,%si
		jle    _0651a6_jump

	_0650db_jump:
		cmpw   $0x00000a,0x000060(%ecx)
		jne    _065196_jump
		mov    0x00003c(%ecx),%bx
		cmp    0x00003c(%edx),%bx
		jne    _065196_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _065196_jump
		movl   $0x000001,0x000024(%ecx)
		mov    _0cedf8_data,%eax
		mov    0x000081(%ecx),%bl
		sar    $0x000010,%eax
		or     $0x000004,%bl
		add    $0x0000c8,%eax
		mov    %bl,0x000081(%ecx)
		mov    %eax,0x00002c(%ecx)
		mov    _0cdb98_data,%ebx
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    0x00002c(%ecx),%esi
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		shl    $0x000004,%ebx
		mov    0x000069(%ecx),%al
		sub    $0x000010,%ebx
		add    %eax,%esi
		cmp    %ebx,%esi
		jle    _065156_jump
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %ebx,0x00002c(%ecx)
		call   _076a30_func

	_065156_jump:
		mov    0x00006f(%edx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%edx),%al
		mov    %al,0x00006c(%ecx)
		mov    0x000081(%ecx),%bh
		mov    0x000077(%edx),%al
		movb   $0x000000,0x00007f(%ecx)
		or     $0x000010,%bh
		mov    %al,0x000076(%ecx)
		mov    %bh,0x000081(%ecx)
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01db8c_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _05f030_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065196_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %si,%ax
		jl     _0650db_jump

	_0651a6_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0651ac_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _0651d2_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		jmp    _0651db_jump

	_0651d2_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_0651db_jump:
		call   _01d374_func
		mov    %ecx,%eax
		call   _064ed0_func
		mov    0x000081(%ecx),%dl
		test   $0x000008,%dl
		setne  %al
		mov    %al,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_0651fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _06520f_jump
		cmpb   $0x000010,0x00006c(%ecx)
		je     _065216_jump

	_06520f_jump:
		mov    $0x000001,%eax
		jmp    _065218_jump

	_065216_jump:
		xor    %eax,%eax

	_065218_jump:
		test   %eax,%eax
		je     _06530c_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _06522c_jump
		cmpb   $0x000011,0x00006c(%ecx)
		je     _065233_jump

	_06522c_jump:
		mov    $0x000001,%eax
		jmp    _065235_jump

	_065233_jump:
		xor    %eax,%eax

	_065235_jump:
		test   %eax,%eax
		je     _06530c_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _065249_jump
		cmpb   $0x000012,0x00006c(%ecx)
		je     _065250_jump

	_065249_jump:
		mov    $0x000001,%eax
		jmp    _065252_jump

	_065250_jump:
		xor    %eax,%eax

	_065252_jump:
		test   %eax,%eax
		je     _06530c_jump
		xor    %eax,%eax
		mov    _0cdbcc_data,%edx
		mov    _0cdc0c_data,%al
		mov    0x000028(%ecx),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%ecx),%dl
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _065283_jump
		mov    $0x000001,%eax
		jg     _065283_jump
		neg    %eax

	_065283_jump:
		test   %eax,%eax
		jl     _065290_jump
		testb  $0x000008,0x000081(%ecx)
		jne    _0652c6_jump

	_065290_jump:
		mov    _0cdbcc_data,%esi
		xor    %eax,%eax
		mov    0x000028(%ecx),%edi
		mov    _0cdc0c_data,%al
		xor    %edx,%edx
		add    %esi,%eax
		mov    0x000068(%ecx),%dl
		sub    %edi,%eax
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _0652b9_jump
		mov    $0x000001,%eax
		jg     _0652b9_jump
		neg    %eax

	_0652b9_jump:
		test   %eax,%eax
		jge    _06530c_jump
		testb  $0x000008,0x000081(%ecx)
		jne    _06530c_jump

	_0652c6_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _0652d7_jump
		movw   $0x000003,0x000040(%ecx)
		jmp    _0652dd_jump

	_0652d7_jump:
		movw   $0x00fffd,0x000040(%ecx)

	_0652dd_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		movw   $0x00fffb,0x000042(%ecx)
		call   _01d36c_func
		mov    $0x000010,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _05f030_func

	_06530c_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06545c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    $_094a44_data,%esi
		xor    %edx,%edx
		mov    $_0cce2c_data,%edi
		mov    %edx,(%esp)

	_065473_jump:
		testb  $0x000001,0x000008(%esi)
		jne    _065484_jump
		cmpw   $0x000011,(%esp)
		jne    _0655c8_jump

	_065484_jump:
		mov    0x000034(%edi),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%edi),%al
		add    %edx,%eax
		add    $0x000008,%eax
		cmp    $0xfffffff8,%eax
		jle    _0654cc_jump
		mov    _0cc5c0_data,%edx
		add    $0x00000e,%edx
		cmp    %edx,%eax
		jge    _0654cc_jump
		mov    0x000036(%edi),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000069(%edi),%al
		add    %edx,%eax
		cmp    $0xfffffff6,%eax
		jle    _0654cc_jump
		mov    _0cc5bc_data,%edx
		add    $0x00000c,%edx
		cmp    %edx,%eax
		jge    _0654cc_jump
		mov    %edi,%eax
		call   _018ae8_func

	_0654cc_jump:
		cmpb   $0x000000,_0cef9c_data
		je     _0655c8_jump
		cmpw   $0x000011,(%esp)
		je     _0655c8_jump
		xor    %eax,%eax
		mov    0x000004(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094a4c_data(%eax)
		je     _06551d_jump
		mov    _094a44_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094a42_data(%eax),%ebx
		mov    _0cef9c_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _01964c_func

	_06551d_jump:
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094a4c_data(%eax)
		je     _065556_jump
		mov    _094a44_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094a42_data(%eax),%ebx
		mov    _0cef9c_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _01964c_func

	_065556_jump:
		xor    %eax,%eax
		mov    0x000006(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094a4c_data(%eax)
		je     _06558f_jump
		mov    _094a44_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094a42_data(%eax),%ebx
		mov    _0cef9c_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _01964c_func

	_06558f_jump:
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094a4c_data(%eax)
		je     _0655c8_jump
		mov    _094a44_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094a42_data(%eax),%ebx
		mov    _0cef9c_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _01964c_func

	_0655c8_jump:
		mov    (%esp),%ebx
		add    $0x000014,%esi
		inc    %ebx
		add    $0x000084,%edi
		mov    %ebx,(%esp)
		cmp    $0x000018,%bx
		jl     _065473_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0655ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		xor    %ah,%ah
		mov    _0cef9c_data,%dl
		mov    %ah,(%esp)
		cmp    $0x000080,%dl
		jae    _06561b_jump
		cmpb   $0x000000,_0cef4f_data
		jne    _065615_jump
		cmpb   $0x000000,_0cefb5_data
		je     _06561b_jump

	_065615_jump:
		incb   _0cef9c_data

	_06561b_jump:
		mov    $_0cce2c_data,%ebx
		mov    $_094a44_data,%ecx
		xor    %esi,%esi

	_065627_jump:
		mov    0x000008(%ecx),%al
		test   $0x000004,%al
		jne    _065636_jump
		test   $0x000002,%al
		je     _0657be_jump

	_065636_jump:
		mov    %ebx,%eax
		call   _042f64_func
		cmpb   $0x000080,_0cef9c_data
		jne    _0656b4_jump
		testb  $0x000004,0x000008(%ecx)
		je     _0656b4_jump
		xor    %eax,%eax
		mov    0x000006(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094a4c_data(%eax)
		jne    _065694_jump
		xor    %eax,%eax
		mov    0x000007(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094a4c_data(%eax)
		jne    _065694_jump
		xor    %eax,%eax
		mov    0x000004(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094a4c_data(%eax)
		jne    _065694_jump
		xor    %eax,%eax
		mov    0x000005(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094a4c_data(%eax)
		je     _0656b4_jump

	_065694_jump:
		mov    0x000008(%ecx),%al
		or     $0x000001,%al
		mov    %al,0x000008(%ecx)
		mov    %al,%ah
		and    $0x0000f9,%ah
		mov    $0x00002e,%edx
		mov    %ah,0x000008(%ecx)
		mov    %ebx,%eax
		call   _01d364_func
		movb   $0x000001,(%esp)

	_0656b4_jump:
		cmp    $0x000011,%si
		jne    _0656d7_jump
		mov    0x00006c(%ebx),%dh
		cmp    $0x00003b,%dh
		je     _0656d7_jump
		cmp    $0x00002e,%dh
		je     _0656d7_jump
		testb  $0x000001,0x000008(%ecx)
		je     _0656d7_jump
		mov    $0x00003b,%edx
		jmp    _0657b0_jump

	_0656d7_jump:
		cmp    $0x000012,%si
		je     _0656fb_jump
		cmp    $0x000013,%si
		je     _0656fb_jump
		cmp    $0x000014,%si
		je     _0656fb_jump
		cmp    $0x000015,%si
		je     _0656fb_jump
		cmp    $0x000016,%si
		je     _0656fb_jump
		cmp    $0x000017,%si
		jne    _065718_jump

	_0656fb_jump:
		mov    0x00006c(%ebx),%dl
		cmp    $0x00003a,%dl
		je     _065718_jump
		cmp    $0x00002e,%dl
		je     _065718_jump
		testb  $0x000001,0x000008(%ecx)
		je     _065718_jump
		mov    $0x00003a,%edx
		jmp    _0657b0_jump

	_065718_jump:
		mov    0x000009(%ecx),%dl
		cmp    $0x000005,%dl
		jbe    _06573b_jump
		cmpb   $0x000033,0x00006c(%ebx)
		jne    _06573b_jump
		mov    %ebx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _06573b_jump
		mov    $0x000034,%edx
		jmp    _0657b0_jump

	_06573b_jump:
		cmp    $0x000004,%dl
		jbe    _06575b_jump
		cmpb   $0x000032,0x00006c(%ebx)
		jne    _06575b_jump
		mov    %ebx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _06575b_jump
		mov    $0x000033,%edx
		jmp    _0657b0_jump

	_06575b_jump:
		cmp    $0x000003,%dl
		jbe    _065778_jump
		cmpb   $0x000031,0x00006c(%ebx)
		jne    _065778_jump
		mov    %ebx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _065778_jump
		mov    $0x000032,%edx
		jmp    _0657b0_jump

	_065778_jump:
		cmp    $0x000002,%dl
		jbe    _065795_jump
		cmpb   $0x000030,0x00006c(%ebx)
		jne    _065795_jump
		mov    %ebx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _065795_jump
		mov    $0x000031,%edx
		jmp    _0657b0_jump

	_065795_jump:
		cmp    $0x000001,%dl
		jbe    _0657b7_jump
		cmpb   $0x00002f,0x00006c(%ebx)
		jne    _0657b7_jump
		mov    %ebx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _0657b7_jump
		mov    $0x000030,%edx

	_0657b0_jump:
		mov    %ebx,%eax
		call   _01d364_func

	_0657b7_jump:
		mov    %ebx,%eax
		call   _0545ac_func

	_0657be_jump:
		add    $0x000084,%ebx
		inc    %esi
		add    $0x000014,%ecx
		cmp    $0x000018,%si
		jl     _065627_jump
		cmpb   $0x000000,(%esp)
		je     _065806_jump
		mov    $_094a44_data,%eax
		xor    %ch,%ch
		xor    %edx,%edx
		mov    %ch,_0cef9c_data
		mov    $0x000001,%cl
		mov    $0x000002,%bh

	_0657eb_jump:
		mov    0x000008(%eax),%bl
		test   %bl,%bh
		jne    _0657fc_jump
		and    %cl,%bl
		cmp    $0x000001,%bl
		jne    _0657fc_jump
		or     %bh,0x000008(%eax)

	_0657fc_jump:
		inc    %edx
		add    $0x000014,%eax
		cmp    $0x000018,%dx
		jl     _0657eb_jump

	_065806_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065810_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ced90_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		mov    $0x000030,%ecx
		add    %edx,%eax
		mov    $_0cba88_data,%edi
		mov    $0x0000c1,%ebx
		mov    _094a54_data(,%eax,4),%esi
		mov    $0x0001c2,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000002,%ah
		mov    %dx,_0cbb58_data
		mov    %bx,_0cbb5a_data
		xor    %dl,%dl
		mov    %ah,_0cbb5c_data
		mov    %dl,_0cbb5e_data
		mov    %edi,%eax
		mov    %dl,_0cbb5d_data
		call   _01ec48_func
		mov    _0ced90_data,%edx
		mov    _0cbb52_data,%cx
		mov    _0cbb54_data,%si
		mov    _0cbb56_data,%di
		sar    $0x000010,%edx
		sub    $0x000006,%ecx
		add    $0x00000a,%esi
		lea    0x000000(,%edx,4),%eax
		add    $0x000006,%edi
		add    %edx,%eax
		mov    %cx,_0cbb52_data
		mov    %si,_0cbb54_data
		mov    _094a50_data(,%eax,4),%al
		mov    %di,_0cbb56_data
		mov    %al,_0cbb5f_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0658d4_switch:
		.long   _065ae7_case
		.long   _065af6_case
		.long   _065b05_case
		.long   _065b2e_case
		.long   _065b3d_case
		.long   _065b4a_case
		.long   _065946_case

_0658f0_switch:
		.long   _065969_case
		.long   _065979_case
		.long   _0659f3_case
		.long   _065a6d_case




_065900_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x00004b,%eax
		call   _07b548_func
		mov    _0ced90_data,%esi
		mov    %eax,%edx
		sar    $0x000010,%esi
		mov    %eax,%ebp
		lea    0x000000(,%esi,4),%eax
		add    %eax,%esi
		shl    $0x000002,%esi
		mov    _094a4e_data(%esi),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _065b71_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0658d4_switch(,%eax,4)

	_065946_case:
		mov    _0ced08_data,%ax
		mov    _094a50_data(%esi),%bl
		cmp    $0x000003,%ax
		ja     _065b71_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0658f0_switch(,%eax,4)

	_065969_case:
		mov    $_0cbc38_data,%edi
		mov    _0c263c_data,%esi
		jmp    _065b57_jump

	_065979_case:
		mov    $_0ccca8_data,%esi
		mov    _0c0d60_data,%ax
		mov    %edx,%edi
		mov    %ax,(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065992_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0659aa_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065992_jump

	_0659aa_jump:
		pop    %edi
		mov    $_0c0d60_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0659b9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0659d1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0659b9_jump

	_0659d1_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0cbc38_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _065b71_jump

	_0659f3_case:
		mov    $_0cccac_data,%esi
		mov    _0c0d60_data,%ax
		mov    %edx,%edi
		mov    %ax,(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065a0c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065a24_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065a0c_jump

	_065a24_jump:
		pop    %edi
		mov    $_0c0d60_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065a33_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065a4b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065a33_jump

	_065a4b_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0cbc38_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _065b71_jump

	_065a6d_case:
		mov    $_0cccb0_data,%esi
		mov    _0c0d60_data,%ax
		mov    %edx,%edi
		mov    %ax,(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065a86_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065a9e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065a86_jump

	_065a9e_jump:
		pop    %edi
		mov    $_0c0d60_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065aad_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065ac5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065aad_jump

	_065ac5_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0cbc38_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _065b71_jump

	_065ae7_case:
		mov    $_0cbc38_data,%edi
		mov    _0c2418_data,%esi
		mov    $0x000005,%bl
		jmp    _065b57_jump

	_065af6_case:
		mov    $_0cbc38_data,%edi
		mov    _0c241c_data,%esi
		mov    $0x000003,%bl
		jmp    _065b57_jump

	_065b05_case:
		mov    $_0cbc38_data,%edi
		mov    _0c2420_data,%esi
		push   %edi

	_065b11_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065b29_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065b11_jump

	_065b29_jump:
		pop    %edi
		xor    %bl,%bl
		jmp    _065b71_jump

	_065b2e_case:
		mov    $_0cbc38_data,%edi
		mov    _0c2424_data,%esi
		mov    $0x000002,%bl
		jmp    _065b57_jump

	_065b3d_case:
		mov    $_0cbc38_data,%edi
		mov    _0c2428_data,%esi
		jmp    _065b55_jump

	_065b4a_case:
		mov    $_0cbc38_data,%edi
		mov    _0c242c_data,%esi

	_065b55_jump:
		mov    $0x000001,%bl

	_065b57_jump:
		push   %edi

	_065b58_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065b70_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065b58_jump

	_065b70_jump:
		pop    %edi

	_065b71_jump:
		mov    $0x000001,%ah
		mov    $0x0001c2,%edx
		mov    $0x00001e,%ecx
		mov    %bl,_0cbd0f_data
		mov    %ah,_0cbd0c_data
		mov    %dx,_0cbd08_data
		mov    %cx,_0cbd0a_data
		xor    %dl,%dl
		mov    $_0cbc38_data,%eax
		mov    %dl,_0cbd0e_data
		mov    %dl,_0cbd0d_data
		call   _01ec48_func
		mov    _0cbd04_data,%si
		mov    _0cbd06_data,%di
		mov    %ebp,%eax
		add    $0x00000a,%esi
		add    $0x000002,%edi
		mov    %si,_0cbd04_data
		mov    %di,_0cbd06_data
		call   _07b6e0_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065be0_func:
		push   %ebx
		push   %edx
		push   %esi
		call   _01eaa8_func
		call   _065810_func
		call   _065900_func
		mov    $0x0000a0,%edx
		mov    $0x0000fa,%ebx
		mov    $0xffffffce,%esi
		xor    %ah,%ah
		mov    %dx,_0cbc30_data
		mov    %bx,_0cbc32_data
		mov    %ah,_0cbc35_data
		mov    %ah,_0cbc36_data
		mov    %dx,_0cbde0_data
		mov    %si,_0cbde2_data
		mov    %ah,_0cbde5_data
		mov    %ah,_0cbde6_data
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_065cc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		cmpb   $0x000000,_0cef82_data
		jne    _065d95_jump
		mov    _0cbb58_data,%dx
		cmp    $0x0000a0,%dx
		jle    _065d09_jump
		mov    %edx,%ebx
		mov    _0cbb50_data,%cx
		sub    $0x000006,%ebx
		sub    $0x000006,%ecx
		mov    %bx,_0cbb58_data
		mov    %cx,_0cbb50_data

	_065d09_jump:
		mov    _0cbd08_data,%si
		cmp    $0x0000a0,%si
		jle    _065d32_jump
		mov    %esi,%edi
		mov    _0cbd00_data,%ax
		sub    $0x000006,%edi
		sub    $0x000006,%eax
		mov    %di,_0cbd08_data
		mov    %ax,_0cbd00_data

	_065d32_jump:
		mov    _0cbc32_data,%dx
		cmp    $0x000125,%dx
		jge    _065d5d_jump
		mov    %edx,%ebx
		mov    _0cbc2a_data,%cx
		add    $0x000002,%ebx
		add    $0x000002,%ecx
		mov    %bx,_0cbc32_data
		mov    %cx,_0cbc2a_data

	_065d5d_jump:
		mov    _0cbde0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffba,%eax
		jle    _066181_jump
		mov    _0cbde2_data,%si
		mov    _0cbdda_data,%di
		sub    $0x000002,%esi
		sub    $0x000002,%edi
		mov    %si,_0cbde2_data
		mov    %di,_0cbdda_data
		jmp    _066181_jump

	_065d95_jump:
		cmpb   $0x000000,_0cef81_data
		jne    _066181_jump
		mov    $_0cba88_data,%edx
		mov    $_0ce46e_data,%edi
		mov    $0x000001,%ebx
		mov    %edx,%esi
		mov    %edx,0x000004(%esp)
		push   %edi

	_065db8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065dd0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065db8_jump

	_065dd0_jump:
		pop    %edi
		xor    %eax,%eax
		mov    %ebx,0x000010(%esp)
		mov    _0cbb5f_data,%al
		mov    $0x000008,%esi
		mov    %eax,_0cc59c_data
		xor    %eax,%eax
		mov    %edx,%edi
		mov    _0cbb5c_data,%al
		mov    %esi,0x000018(%esp)
		mov    %eax,_0cc598_data
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    _0cbb56_data,%eax
		xor    %esi,%esi
		sar    $0x000010,%eax
		mov    %ecx,_0cc5d8_data
		mov    %eax,(%esp)
		test   %ecx,%ecx
		jle    _065f47_jump
		mov    %edx,0x000024(%esp)
		xor    %edi,%edi

	_065e23_jump:
		mov    0x000024(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		call   _01eadc_func
		mov    (%edx),%bl
		cmp    $0x00002f,%bl
		jne    _065e6c_jump
		mov    0x000004(%esp),%edx
		mov    0x00000e(%esp),%ecx
		mov    0x000016(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    0x0000d4(%edx),%al
		sar    $0x000010,%ebx
		push   %eax
		mov    %esi,%edx
		mov    $_0cba88_data,%eax
		call   _01ebec_func
		movswl %ax,%ebp
		mov    (%esp),%eax
		sar    %ebp
		sub    %ebp,%eax
		mov    %eax,%ebp
		jmp    _065e74_jump

	_065e6c_jump:
		cmp    $0x000020,%bl
		jne    _065e76_jump
		add    $0x000008,%ebp

	_065e74_jump:
		xor    %al,%al

	_065e76_jump:
		test   %al,%al
		je     _065f2c_jump
		and    $0x0000ff,%eax
		imul   $0x00000c,%eax,%eax
		mov    _0cdc34_data,%edx
		add    %eax,%edx
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,_0c1d60_data(%edi)
		mov    0x000004(%esp),%eax
		mov    0x0000d0(%eax),%eax
		sar    $0x000010,%eax
		mov    %edi,%ecx
		shl    $0x000004,%eax
		mov    %edx,0x00001c(%esp)
		mov    %eax,_0c1ef0_data(%edi)
		xor    %edx,%edx
		mov    %edx,_0c1b30_data(%edi)
		jne    _065ef9_jump

	_065ebf_jump:
		mov    _0cc5d8_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %esi,%edx
		sub    %eax,%edx
		shl    $0x000005,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    $0x000020,%eax
		call   _069140_func
		sub    $0x000010,%edx
		movswl %ax,%ebx
		add    %ebx,%edx
		mov    %edx,_0c1b30_data(%ecx)
		je     _065ebf_jump

	_065ef9_jump:
		mov    $0x000020,%eax
		mov    $0xfffffff0,%edx
		call   _069140_func
		cwtl   
		sub    %eax,%edx
		mov    0x00001c(%esp),%eax
		mov    %edx,_0c1a98_data(%ecx)
		mov    0x000009(%eax),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x00001c(%esp),%ebx
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%ebx),%al
		add    %edx,%eax
		dec    %eax
		add    %eax,%ebp

	_065f2c_jump:
		mov    0x000024(%esp),%eax
		mov    _0cc5d8_data,%edx
		add    $0x000004,%edi
		inc    %eax
		inc    %esi
		mov    %eax,0x000024(%esp)
		cmp    %edx,%esi
		jl     _065e23_jump

	_065f47_jump:
		mov    $_0cbc38_data,%ebx
		mov    $_0ce450_data,%edi
		mov    %ebx,%esi
		mov    %ebx,0x000008(%esp)
		push   %edi

	_065f58_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065f70_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065f58_jump

	_065f70_jump:
		pop    %edi
		xor    %eax,%eax
		mov    $0x000003,%esi
		mov    _0cbd0f_data,%al
		mov    %ebx,%edi
		mov    %eax,_0cc5b8_data
		xor    %eax,%eax
		mov    %esi,0x000010(%esp)
		mov    _0cbd0c_data,%al
		xor    %esi,%esi
		mov    %eax,_0cc5a4_data
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $0x00000a,%edi
		mov    _0cbd06_data,%eax
		mov    %ecx,_0cc5d4_data
		sar    $0x000010,%eax
		mov    %edi,0x000018(%esp)
		mov    %eax,0x000014(%esp)
		test   %ecx,%ecx
		jle    _0660ee_jump
		mov    %ebx,0x000020(%esp)
		xor    %edi,%edi

	_065fc9_jump:
		mov    0x000020(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		call   _01eadc_func
		mov    (%edx),%ch
		cmp    $0x00002f,%ch
		jne    _06600f_jump
		mov    0x000008(%esp),%edx
		mov    0x00000e(%esp),%ecx
		mov    0x000016(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    0x0000d4(%edx),%al
		sar    $0x000010,%ebx
		push   %eax
		mov    %esi,%edx
		mov    $_0cbc38_data,%eax
		call   _01ebec_func
		cwtl   
		mov    0x000014(%esp),%ebp
		sar    %eax
		sub    %eax,%ebp
		jmp    _066017_jump

	_06600f_jump:
		cmp    $0x000020,%ch
		jne    _066019_jump
		add    $0x00000a,%ebp

	_066017_jump:
		xor    %al,%al

	_066019_jump:
		test   %al,%al
		je     _0660d3_jump
		and    $0x0000ff,%eax
		add    $0x000029,%eax
		imul   $0x00000c,%eax,%edx
		mov    _0ce320_data,%eax
		add    %edx,%eax
		mov    %eax,0x00000c(%esp)
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,_0c1e28_data(%edi)
		mov    0x000008(%esp),%eax
		mov    0x0000d0(%eax),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %edi,%ecx
		mov    %eax,_0c1c98_data(%edi)
		xor    %eax,%eax
		mov    %eax,_0c1c20_data(%edi)
		jne    _06609e_jump

	_066064_jump:
		mov    _0cc5d4_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %esi,%edx
		sub    %eax,%edx
		shl    $0x000005,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    $0x000020,%eax
		call   _069140_func
		sub    $0x000010,%edx
		movswl %ax,%ebx
		add    %ebx,%edx
		mov    %edx,_0c1c20_data(%ecx)
		je     _066064_jump

	_06609e_jump:
		mov    $0x000020,%eax
		mov    $0xfffffff0,%edx
		call   _069140_func
		cwtl   
		sub    %eax,%edx
		mov    0x00000c(%esp),%eax
		mov    %edx,_0c1ba8_data(%ecx)
		mov    0x000009(%eax),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x00000c(%esp),%ebx
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%ebx),%al
		add    %edx,%eax
		sub    $0x000003,%eax
		add    %eax,%ebp

	_0660d3_jump:
		mov    0x000020(%esp),%edx
		mov    _0cc5d4_data,%ebx
		add    $0x000004,%edi
		inc    %edx
		inc    %esi
		mov    %edx,0x000020(%esp)
		cmp    %ebx,%esi
		jl     _065fc9_jump

	_0660ee_jump:
		mov    $0x000001,%cl
		mov    $_0cbc38_data,%esi
		mov    $_0cbd10_data,%edi
		mov    $0x00001e,%edx
		mov    $0x0001c2,%ebx
		mov    %cl,_0cef81_data
		push   %edi

	_06610b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _066123_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06610b_jump

	_066123_jump:
		pop    %edi
		mov    $_0cba88_data,%esi
		mov    $_0cbb60_data,%edi
		mov    _0cbd0f_data,%al
		mov    $0x0000c1,%ecx
		mov    %al,_0cbde7_data
		mov    $0x0001c2,%eax
		mov    %dx,_0cbd0a_data
		mov    %ax,_0cbd08_data
		push   %edi

	_066150_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _066168_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _066150_jump

	_066168_jump:
		pop    %edi
		mov    _0cbb5f_data,%al
		mov    %bx,_0cbb58_data
		mov    %cx,_0cbb5a_data
		mov    %al,_0cbc37_data

	_066181_jump:
		mov    _0cef81_data,%dl
		cmp    $0x000001,%dl
		jne    _066390_jump
		mov    _0cc5d4_data,%edi
		mov    %dl,%cl
		xor    %ebx,%ebx
		test   %edi,%edi
		jle    _066285_jump
		xor    %edx,%edx

	_0661a4_jump:
		mov    _0ce450_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _066273_jump
		cmp    $0x000020,%ah
		je     _066273_jump
		mov    _0c1ba8_data(%edx),%eax
		mov    _0c1c98_data(%edx),%ebp
		add    %eax,%ebp
		mov    %ebp,_0c1c98_data(%edx)
		cmp    $0x000c80,%ebp
		jl     _066215_jump
		movl   $0x000c80,_0c1c98_data(%edx)
		test   %eax,%eax
		jge    _0661e8_jump
		neg    %eax

	_0661e8_jump:
		cmp    $0x000008,%eax
		jge    _066207_jump
		mov    $0x000020,%eax
		mov    $0xffffffc0,%esi
		call   _069140_func
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0c1ba8_data(%edx)
		jmp    _066215_jump

	_066207_jump:
		mov    _0c1ba8_data(%edx),%eax
		neg    %eax
		mov    %eax,_0c1ba8_data(%edx)

	_066215_jump:
		mov    _0c1ba8_data(%edx),%edi
		mov    _0c1c20_data(%edx),%eax
		mov    _0c1e28_data(%edx),%ebp
		inc    %edi
		add    %eax,%ebp
		mov    _0cef81_data,%al
		mov    %edi,_0c1ba8_data(%edx)
		mov    %ebp,_0c1e28_data(%edx)
		cmp    $0x000001,%al
		jne    _06625b_jump
		test   %ebp,%ebp
		jle    _06624b_jump
		cmp    $0x001310,%ebp
		jl     _06625b_jump

	_06624b_jump:
		mov    _0c1c20_data(%edx),%eax
		neg    %eax
		mov    %eax,_0c1c20_data(%edx)
		jmp    _066273_jump

	_06625b_jump:
		mov    _0c1e28_data(%edx),%edi
		cmp    $0xfffffec0,%edi
		jle    _066273_jump
		cmp    $0x001400,%edi
		jge    _066273_jump
		xor    %cl,%cl

	_066273_jump:
		mov    _0cc5d4_data,%esi
		inc    %ebx
		add    $0x000004,%edx
		cmp    %esi,%ebx
		jl     _0661a4_jump

	_066285_jump:
		mov    _0cc5d8_data,%edi
		xor    %ebx,%ebx
		test   %edi,%edi
		jle    _066376_jump
		mov    $0x000c80,%ebp
		xor    %edx,%edx

	_06629c_jump:
		mov    _0ce46e_data(%ebx),%ch
		cmp    $0x00002f,%ch
		je     _066365_jump
		cmp    $0x000020,%ch
		je     _066365_jump
		mov    _0c1a98_data(%edx),%eax
		mov    _0c1ef0_data(%edx),%esi
		add    %eax,%esi
		mov    %esi,_0c1ef0_data(%edx)
		cmp    $0x000c80,%esi
		jl     _066309_jump
		mov    %ebp,_0c1ef0_data(%edx)
		test   %eax,%eax
		jge    _0662dc_jump
		neg    %eax

	_0662dc_jump:
		cmp    $0x000008,%eax
		jge    _0662fb_jump
		mov    $0x000020,%eax
		mov    $0xffffffc0,%esi
		call   _069140_func
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0c1a98_data(%edx)
		jmp    _066309_jump

	_0662fb_jump:
		mov    _0c1a98_data(%edx),%eax
		neg    %eax
		mov    %eax,_0c1a98_data(%edx)

	_066309_jump:
		mov    _0c1a98_data(%edx),%eax
		inc    %eax
		mov    _0c1d60_data(%edx),%esi
		mov    %eax,_0c1a98_data(%edx)
		add    _0c1b30_data(%edx),%esi
		mov    _0cef81_data,%ah
		mov    %esi,_0c1d60_data(%edx)
		cmp    $0x000001,%ah
		jne    _06634f_jump
		test   %esi,%esi
		jle    _06633f_jump
		cmp    $0x001360,%esi
		jl     _06634f_jump

	_06633f_jump:
		mov    _0c1b30_data(%edx),%eax
		neg    %eax
		mov    %eax,_0c1b30_data(%edx)
		jmp    _066365_jump

	_06634f_jump:
		mov    _0c1d60_data(%edx),%eax
		cmp    $0xfffffec0,%eax
		jle    _066365_jump
		cmp    $0x001400,%eax
		jge    _066365_jump
		xor    %cl,%cl

	_066365_jump:
		mov    _0cc5d8_data,%eax
		inc    %ebx
		add    $0x000004,%edx
		cmp    %eax,%ebx
		jl     _06629c_jump

	_066376_jump:
		test   %cl,%cl
		je     _066645_jump
		xor    %ah,%ah
		mov    %ah,_0cef81_data
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066390_jump:
		cmp    $0x000002,%dl
		jne    _06653f_jump
		mov    _0cc5d4_data,%esi
		xor    %ecx,%ecx
		test   %esi,%esi
		jle    _066463_jump
		xor    %ebx,%ebx

	_0663ab_jump:
		mov    _0ce450_data(%ecx),%al
		cmp    $0x00002f,%al
		je     _066451_jump
		cmp    $0x000020,%al
		je     _066451_jump
		mov    _0c1c98_data(%ebx),%eax
		sub    $0x000640,%eax
		test   %eax,%eax
		jge    _0663d2_jump
		neg    %eax

	_0663d2_jump:
		mov    %eax,%edx
		mov    _0c1e28_data(%ebx),%eax
		sub    $0x000a00,%eax
		test   %eax,%eax
		jge    _0663e5_jump
		neg    %eax

	_0663e5_jump:
		cmp    %eax,%edx
		jle    _0663f6_jump
		mov    _0c1c98_data(%ebx),%eax
		sub    $0x000640,%eax
		jmp    _066401_jump

	_0663f6_jump:
		mov    _0c1e28_data(%ebx),%eax
		sub    $0x000a00,%eax

	_066401_jump:
		test   %eax,%eax
		jge    _066407_jump
		neg    %eax

	_066407_jump:
		mov    %eax,%esi
		mov    $0x000040,%eax
		call   _069140_func
		movswl %ax,%edi
		mov    _0c1e28_data(%ebx),%edx
		add    $0x000020,%edi
		sub    $0x000a00,%edx
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0c1c98_data(%ebx),%edx
		sub    $0x000640,%edx
		imul   %edi,%edx
		mov    %eax,_0c1c20_data(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,_0c1ba8_data(%ebx)

	_066451_jump:
		mov    _0cc5d4_data,%ebp
		inc    %ecx
		add    $0x000004,%ebx
		cmp    %ebp,%ecx
		jl     _0663ab_jump

	_066463_jump:
		mov    _0cc5d8_data,%eax
		xor    %ecx,%ecx
		test   %eax,%eax
		jle    _06652e_jump
		xor    %ebx,%ebx

	_066474_jump:
		mov    _0ce46e_data(%ecx),%dh
		cmp    $0x00002f,%dh
		je     _06651c_jump
		cmp    $0x000020,%dh
		je     _06651c_jump
		mov    _0c1ef0_data(%ebx),%eax
		sub    $0x000640,%eax
		test   %eax,%eax
		jge    _06649d_jump
		neg    %eax

	_06649d_jump:
		mov    %eax,%edx
		mov    _0c1d60_data(%ebx),%eax
		sub    $0x000a00,%eax
		test   %eax,%eax
		jge    _0664b0_jump
		neg    %eax

	_0664b0_jump:
		cmp    %eax,%edx
		jle    _0664c1_jump
		mov    _0c1ef0_data(%ebx),%eax
		sub    $0x000640,%eax
		jmp    _0664cc_jump

	_0664c1_jump:
		mov    _0c1d60_data(%ebx),%eax
		sub    $0x000a00,%eax

	_0664cc_jump:
		test   %eax,%eax
		jge    _0664d2_jump
		neg    %eax

	_0664d2_jump:
		mov    %eax,%esi
		mov    $0x000040,%eax
		call   _069140_func
		movswl %ax,%edi
		mov    _0c1d60_data(%ebx),%edx
		add    $0x000020,%edi
		sub    $0x000a00,%edx
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0c1ef0_data(%ebx),%edx
		sub    $0x000640,%edx
		imul   %edi,%edx
		mov    %eax,_0c1b30_data(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,_0c1a98_data(%ebx)

	_06651c_jump:
		mov    _0cc5d8_data,%edx
		inc    %ecx
		add    $0x000004,%ebx
		cmp    %edx,%ecx
		jl     _066474_jump

	_06652e_jump:
		movb   $0x000003,_0cef81_data
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06653f_jump:
		cmp    $0x000003,%dl
		jne    _066645_jump
		mov    $0x000001,%al
		mov    _0cc5d4_data,%ecx
		xor    %ebx,%ebx
		test   %ecx,%ecx
		jle    _0665c2_jump
		mov    _0cc5d4_data,%ebp
		xor    %edx,%edx

	_066562_jump:
		mov    _0ce450_data(%ebx),%cl
		cmp    $0x00002f,%cl
		je     _0665ba_jump
		cmp    $0x000020,%cl
		je     _0665ba_jump
		mov    _0c1ba8_data(%edx),%ecx
		mov    _0c1c98_data(%edx),%esi
		mov    _0c1e28_data(%edx),%edi
		add    %ecx,%esi
		add    _0c1c20_data(%edx),%edi
		mov    %esi,_0c1c98_data(%edx)
		mov    %edi,_0c1e28_data(%edx)
		cmp    $0xfffffec0,%edi
		jle    _0665ba_jump
		cmp    $0x001400,%edi
		jge    _0665ba_jump
		cmp    $0xfffffec0,%esi
		jle    _0665ba_jump
		cmp    $0x000c80,%esi
		jge    _0665ba_jump
		xor    %al,%al

	_0665ba_jump:
		inc    %ebx
		add    $0x000004,%edx
		cmp    %ebp,%ebx
		jl     _066562_jump

	_0665c2_jump:
		mov    _0cc5d8_data,%edx
		xor    %ebx,%ebx
		test   %edx,%edx
		jle    _06663a_jump
		mov    _0cc5d8_data,%ebp
		xor    %edx,%edx

	_0665da_jump:
		mov    _0ce46e_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _066632_jump
		cmp    $0x000020,%ah
		je     _066632_jump
		mov    _0c1a98_data(%edx),%ecx
		mov    _0c1ef0_data(%edx),%esi
		mov    _0c1d60_data(%edx),%edi
		add    %ecx,%esi
		add    _0c1b30_data(%edx),%edi
		mov    %esi,_0c1ef0_data(%edx)
		mov    %edi,_0c1d60_data(%edx)
		cmp    $0xfffffec0,%edi
		jle    _066632_jump
		cmp    $0x001400,%edi
		jge    _066632_jump
		cmp    $0xfffffec0,%esi
		jle    _066632_jump
		cmp    $0x000c80,%esi
		jge    _066632_jump
		xor    %al,%al

	_066632_jump:
		inc    %ebx
		add    $0x000004,%edx
		cmp    %ebp,%ebx
		jl     _0665da_jump

	_06663a_jump:
		test   %al,%al
		je     _066645_jump
		xor    %al,%al
		mov    %al,_0cef81_data

	_066645_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066650_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax

	_066655_jump:
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%ebx
		imul   $0x000014,%edx,%edx
		mov    _0c23b8_data(%ebx),%ebx
		inc    %eax
		mov    %ebx,_094a54_data(%edx)
		cmp    $0x000018,%ax
		jl     _066655_jump
		mov    $0x000001,%ecx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0cede4_data
		mov    %dx,_0cedd0_data
		mov    %cx,_0cedea_data
		mov    %cx,_0cedd4_data
		mov    %ah,_0cefb2_data
		mov    %dx,_0ced8c_data
		xor    %al,%al
		mov    $0x000001,%dl
		mov    %ax,_0ced8a_data
		mov    %dl,_0cefb1_data
		mov    %ah,_0cef96_data
		mov    %ah,_0cefd1_data
		xor    %dh,%dh
		call   _066ba4_func
		mov    %dh,_0cef8e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0666d4_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000084,%ecx
		mov    $_0cdba4_data,%esi
		mov    $_0ce3b0_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cdd5c_data,%eax
		mov    $0x000100,%edx
		mov    %eax,_0cdba4_data
		mov    _0cdd64_data,%eax
		mov    %dx,_0cdbfe_data
		mov    %eax,_0cdbac_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_06671c_func:
		push   %edx
		mov    _0ce3b0_data,%eax
		mov    %eax,_0cdba4_data
		mov    _0ce3b8_data,%eax
		xor    %edx,%edx
		mov    %eax,_0cdbac_data
		mov    _0ce3f4_data,%ax
		mov    %dx,_0cdbfe_data
		mov    %ax,_0cdbe8_data
		pop    %edx
		ret    



_066748_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000001,%dl
		xor    %ah,%ah
		mov    _0cef89_data,%bl
		mov    %ah,_0cef9b_data
		mov    %dl,_0cefa8_data
		mov    %ah,_0cefb6_data
		test   %bl,%bl
		jne    _066781_jump
		xor    %edx,%edx
		mov    _0cefb2_data,%al
		mov    %dx,_0cedea_data
		mov    %ax,_0ced92_data

	_066781_jump:
		mov    _0ced92_data,%al
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %al,_0cefb0_data
		call   _0666d4_func
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		mov    _0ced90_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _094a42_data(,%eax,4),%ebx
		mov    _0cdc0c_data,%dl
		sar    $0x000010,%ebx
		xor    %ecx,%ecx
		sub    %edx,%ebx
		xor    %esi,%esi
		add    $0x000004,%ebx
		mov    _094a44_data(,%eax,4),%edx
		mov    %ebx,_0cdbcc_data
		sar    $0x000010,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0cdc0d_data,%al
		mov    %bx,_0cdbe4_data
		sub    %eax,%edx
		mov    %bx,_0cdbe6_data
		add    $0x000008,%edx
		xor    %eax,%eax
		xor    %bh,%bh
		mov    %edx,_0cdbd0_data
		call   _01d1ac_func
		xor    %bl,%cl
		mov    %bh,_0cef9c_data
		mov    %bh,_0cefb3_data
		mov    $_0cce2c_data,%ebx

	_066819_jump:
		xor    %eax,%eax
		mov    %cl,%al
		imul   $0x000014,%eax,%eax
		movw   $0x000036,0x000060(%ebx)
		mov    _094a44_data(%eax),%dx
		sub    $0x00004e,%edx
		mov    %dx,0x00003c(%ebx)
		mov    _094a46_data(%eax),%dx
		sub    $0x000040,%edx
		movb   $0x000005,0x00006f(%ebx)
		mov    %dx,0x00003e(%ebx)
		testb  $0x000004,_094a4c_data(%eax)
		je     _066855_jump
		movb   $0x00002e,0x00006e(%ebx)
		jmp    _06688a_jump

	_066855_jump:
		mov    _094a4d_data(%eax),%dh
		test   %dh,%dh
		je     _066876_jump
		add    %dh,_0cefb3_data
		cmp    $0x000006,%dh
		jne    _066870_jump
		movb   $0x000034,0x00006e(%ebx)
		jmp    _06688a_jump

	_066870_jump:
		movb   $0x00002f,0x00006e(%ebx)
		jmp    _06688a_jump

	_066876_jump:
		cmp    $0x000011,%si
		jne    _066886_jump
		movb   $0x00003b,0x00006c(%ebx)
		movb   $0x00003b,0x00006e(%ebx)
		jmp    _06688a_jump

	_066886_jump:
		movb   $0x000027,0x00006e(%ebx)

	_06688a_jump:
		movw   $0x000000,0x00005a(%ebx)
		movb   $0x000050,0x000068(%ebx)
		mov    %ebx,%eax
		movb   $0x000040,0x000069(%ebx)
		call   _05c7fc_func
		mov    %ebx,%eax
		call   _042f64_func
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ebx),%dl
		mov    0x000002(%eax,%edx,8),%al
		and    $0x0000ff,%eax
		imul   $0x00000c,%eax,%edx
		mov    0x000004(%ebx),%eax
		xor    %edi,%edi
		mov    0x00000a(%edx,%eax,1),%di
		movswl %si,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		inc    %cl
		mov    %dl,0x00006b(%ebx)
		cmp    $0x000018,%cl
		jbe    _0668e6_jump
		mov    $0x000018,%cl

	_0668e6_jump:
		inc    %esi
		add    $0x000084,%ebx
		cmp    $0x000018,%si
		jl     _066819_jump
		mov    _094ba0_data,%al
		test   $0x000001,%al
		jne    _066914_jump
		cmpb   $0x000066,_0cefb3_data
		jb     _066914_jump
		mov    %al,%dl
		or     $0x000004,%dl
		mov    %dl,_094ba0_data

	_066914_jump:
		mov    _0cee10_data,%ax
		mov    %ax,_0ced98_data
		mov    _0cedfa_data,%ax
		mov    %ax,_0ced94_data
		mov    _0ced8c_data,%ax
		mov    %ax,_0cee10_data
		mov    _0ced8a_data,%ax
		mov    $0xffffffff,%esi
		mov    %ax,_0cedfa_data
		call   _04211c_func
		mov    $0x00001e,%eax
		mov    _0cdc25_data,%dh
		mov    %ax,_0cedfc_data
		mov    %ax,_0cee02_data
		mov    _0cefb1_data,%al
		and    $0x0000f7,%dh
		and    $0x000001,%al
		mov    %dh,%bl
		shl    $0x000003,%al
		mov    %dh,_0cdc25_data
		or     %al,%bl
		mov    %si,_0cee28_data
		mov    %bl,_0cdc25_data
		mov    _0cef9a_data,%bh
		mov    %si,_0cee2a_data
		test   %bh,%bh
		je     _0669b7_jump
		cmpb   $0x000000,_0cef99_data
		je     _0669af_jump
		xor    %eax,%eax
		mov    _0ced08_data,%al
		call   _071540_func

	_0669af_jump:
		xor    %ch,%ch
		mov    %ch,_0cef9a_data

	_0669b7_jump:
		call   _066ba4_func
		call   _065be0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066b04_func:
		ret    



_066b08_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000001,%eax
		call   _053298_func
		call   _0424e0_func
		mov    _0cee06_data,%edx
		mov    _0cee04_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0428cc_func
		call   _042fb4_func
		testb  $0x000008,_0cdc25_data
		je     _066b64_jump
		xor    %eax,%eax
		mov    _0cdbdc_data,%cx
		mov    _0cdc0d_data,%al
		add    %ecx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0cdbda_data,%si
		mov    _0cdc0c_data,%al
		add    %esi,%eax
		jmp    _066b87_jump

	_066b64_jump:
		xor    %eax,%eax
		mov    _0cdbdc_data,%dx
		mov    _0cdc0d_data,%al
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0cdbda_data,%bx
		mov    _0cdc0c_data,%al
		add    %ebx,%eax

	_066b87_jump:
		cwtl   
		call   _01d0bc_func
		mov    $_0cdba4_data,%eax
		call   _0545ac_func
		call   _0655ec_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066ba4_func:
		cmpb   $0x000000,_0cef99_data
		je     _066bb4_jump
		mov    _0c2610_data,%eax
		jmp    _066bb9_jump

	_066bb4_jump:
		mov    _0c2618_data,%eax

	_066bb9_jump:
		mov    %eax,_094bbc_data
		mov    %eax,_094bd0_data
		mov    %eax,_094be4_data
		mov    %eax,_094bf8_data
		mov    %eax,_094c0c_data
		mov    %eax,_094c20_data
		ret    



_066bfc_func:
		push   %edx
		call   _03b970_func
		mov    _0cee10_data,%ax
		mov    %ax,_0ced8c_data
		mov    _0cedfa_data,%ax
		mov    %ax,_0ced8a_data
		mov    _0ced98_data,%ax
		mov    %ax,_0cee10_data
		mov    _0ced94_data,%ax
		mov    %ax,_0cedfa_data
		mov    _0cdc25_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    %al,_0cefb1_data
		call   _06671c_func
		call   _066ba4_func
		xor    %ah,%ah
		mov    _0cdc1a_data,%dl
		mov    %ah,_0cef9b_data
		cmp    $0x0000ff,%dl
		jne    _066c65_jump
		mov    %ah,_0cdc1a_data

	_066c65_jump:
		pop    %edx
		ret    



_066c68_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ced92_data,%al
		mov    %al,_0cefb2_data
		cmpb   $0x000000,_0cef89_data
		jne    _066cb4_jump
		mov    _0ced90_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _094a4f_data(,%eax,4),%dl
		mov    %dx,_0ced84_data
		mov    _094a4e_data(,%eax,4),%al
		xor    %ah,%ah
		mov    %ax,_0ced92_data
		call   _0264d0_func

	_066cb4_jump:
		andb   $0x0000fb,_0ced81_data
		cmpw   $0x000005,_0ced92_data
		jne    _066cf0_jump
		mov    _0ced84_data,%bx
		cmp    $0x000003,%bx
		jne    _066cf0_jump
		testb  $0x000002,_0ced89_data
		je     _066cf0_jump
		orb    $0x000004,_0ced81_data
		mov    %ebx,%edx
		inc    %edx
		mov    %dx,_0ced84_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066cf0_jump:
		cmpw   $0x000005,_0ced92_data
		jne    _066d21_jump
		cmpw   $0x000004,_0ced84_data
		jne    _066d21_jump
		testb  $0x000002,_0ced89_data
		je     _066d21_jump
		cmpb   $0x000000,_0cef89_data
		je     _066d21_jump
		orb    $0x000004,_0ced81_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066d21_jump:
		cmpw   $0x000006,_0ced92_data
		jne    _066d53_jump
		testb  $0x000080,_0ced88_data
		je     _066d53_jump
		mov    $0x000001,%ch
		mov    $0x000001,%eax
		mov    %ch,_0cef96_data
		mov    %ch,_0cefd1_data
		mov    %ax,_0cedea_data
		mov    %ch,_0cef90_data

	_066d53_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066e98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x001000,%ebx
		mov    $0x000001,%esi
		mov    $0x000003,%edi
		xor    %edx,%edx
		mov    $0x000064,%ecx
		mov    %dx,_0ced34_data
		mov    %bx,_0ced30_data
		mov    %bx,_0ced32_data
		mov    %si,_0ced24_data
		mov    %di,_0cecf0_data
		mov    %esi,%eax
		mov    %si,_0ced0e_data
		mov    %di,_0cecf4_data
		mov    %dx,_0ced04_data
		mov    %cx,_0ced0a_data
		mov    $0x000006,%edi
		xor    %esi,%eax
		xor    %dl,%dl
		mov    _0cef99_data,%al
		mov    %dl,_0cef9a_data
		mov    %di,_0cecd4_data
		add    %esi,%eax
		xor    %dh,%dh
		mov    $0x00000c,%esi
		mov    %ax,_0cecf2_data
		mov    %dx,_0ceccc_data
		mov    $0x000001,%ah
		mov    _0cef99_data,%dh
		mov    %ah,_0cefd3_data
		mov    $0x000028,%eax
		mov    %si,_0cece6_data
		mov    %ax,_0cecc4_data
		test   %dh,%dh
		je     _066f68_jump
		xor    %dh,%dh
		jmp    _066f5c_jump

	_066f4d_jump:
		mov    %dl,%al
		inc    %al
		and    $0x0000ff,%eax
		call   _071540_func
		inc    %edx

	_066f5c_jump:
		xor    %eax,%eax
		mov    _0cef99_data,%al
		cmp    %ax,%dx
		jl     _066f4d_jump

	_066f68_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066f70_func:
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    $0x000001,%esi
		mov    %dx,_0cecd2_data
		mov    %dx,_0cecce_data
		mov    %dx,_0ced08_data
		mov    %dx,_0ced12_data
		mov    %dx,_0cecee_data
		mov    %dx,_0cecda_data
		mov    %dx,_0cece0_data
		mov    %dx,_0cecd8_data
		mov    %dx,_0cecc8_data
		mov    %si,_0ced10_data
		pop    %esi
		pop    %edx
		ret    



_066fc4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _040824_func
		test   %ax,%ax
		je     _067065_jump
		call   _040904_func
		test   %ax,%ax
		jne    _067065_jump
		call   _040894_func
		test   %ax,%ax
		jne    _067065_jump
		cmpw   $0x000000,_0ced12_data
		jne    _067065_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _067031_jump
		mov    _0ced04_data,%ax
		cmp    _0cece6_data,%ax
		jle    _067065_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _067065_jump

	_067031_jump:
		mov    _0cecf4_data,%cx
		cmp    $0x000003,%cx
		jne    _067049_jump
		movw   $0x000001,_0cecf4_data
		jmp    _067053_jump

	_067049_jump:
		mov    %ecx,%esi
		inc    %esi
		mov    %si,_0cecf4_data

	_067053_jump:
		xor    %edx,%edx
		mov    $0x000044,%eax
		mov    %edx,_0cc640_data
		call   _06fa90_func

	_067065_jump:
		call   _0407b4_func
		test   %ax,%ax
		je     _067102_jump
		call   _040904_func
		test   %ax,%ax
		jne    _067102_jump
		call   _040894_func
		test   %ax,%ax
		jne    _067102_jump
		cmpw   $0x000000,_0ced12_data
		jne    _067102_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _0670ce_jump
		mov    _0ced04_data,%ax
		cmp    _0cece6_data,%ax
		jle    _067102_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _067102_jump

	_0670ce_jump:
		mov    _0cecf4_data,%bx
		cmp    $0x000001,%bx
		jne    _0670e6_jump
		movw   $0x000003,_0cecf4_data
		jmp    _0670f0_jump

	_0670e6_jump:
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0cecf4_data

	_0670f0_jump:
		xor    %ebx,%ebx
		mov    $0x000044,%eax
		mov    %ebx,_0cc640_data
		call   _06fa90_func

	_067102_jump:
		call   _040904_func
		test   %ax,%ax
		je     _067198_jump
		call   _0407b4_func
		test   %ax,%ax
		jne    _067198_jump
		call   _040824_func
		test   %ax,%ax
		jne    _067198_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _067161_jump
		mov    _0ced04_data,%ax
		cmp    _0cece6_data,%ax
		jle    _067198_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _067198_jump

	_067161_jump:
		mov    _0ced0e_data,%ax
		cmp    $0x000001,%ax
		jg     _06717c_jump
		xor    %eax,%eax
		mov    _0cef99_data,%al
		mov    %ax,_0ced0e_data
		jmp    _067186_jump

	_06717c_jump:
		mov    %eax,%edx
		dec    %edx
		mov    %dx,_0ced0e_data

	_067186_jump:
		xor    %ecx,%ecx
		mov    $0x000044,%eax
		mov    %ecx,_0cc640_data
		call   _06fa90_func

	_067198_jump:
		call   _040894_func
		test   %ax,%ax
		je     _067231_jump
		call   _0407b4_func
		test   %ax,%ax
		jne    _067231_jump
		call   _040824_func
		test   %ax,%ax
		jne    _067231_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _0671f7_jump
		mov    _0ced04_data,%ax
		cmp    _0cece6_data,%ax
		jle    _067231_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _067231_jump

	_0671f7_jump:
		xor    %eax,%eax
		mov    _0ced0e_data,%cx
		mov    _0cef99_data,%al
		cmp    %cx,%ax
		jne    _067215_jump
		movw   $0x000001,_0ced0e_data
		jmp    _06721f_jump

	_067215_jump:
		mov    %ecx,%esi
		inc    %esi
		mov    %si,_0ced0e_data

	_06721f_jump:
		xor    %esi,%esi
		mov    $0x000044,%eax
		mov    %esi,_0cc640_data
		call   _06fa90_func

	_067231_jump:
		call   _040824_func
		test   %ax,%ax
		jne    _067269_jump
		call   _0407b4_func
		test   %ax,%ax
		jne    _067269_jump
		call   _040894_func
		test   %ax,%ax
		jne    _067269_jump
		call   _040904_func
		test   %ax,%ax
		jne    _067269_jump
		mov    $0x000001,%cl
		mov    %ax,_0ced04_data
		mov    %cl,_0cefd3_data
		jmp    _067271_jump

	_067269_jump:
		xor    %bh,%bh
		mov    %bh,_0cefd3_data

	_067271_jump:
		call   _036944_func
		test   %al,%al
		je     _067294_jump
		cmpb   $0x000000,_0cefd3_data
		je     _067294_jump
		movb   $0x000001,_0cef8e_data
		mov    $0x00004d,%eax
		call   _06fa90_func

	_067294_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06729c_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _04d544_func
		cmpw   $0x000001,_0cecf4_data
		jne    _067303_jump
		call   _036820_func
		test   %al,%al
		je     _067303_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _0672ed_jump
		mov    _0ced04_data,%dx
		cmp    _0cece6_data,%dx
		jle    _067303_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _067303_jump

	_0672ed_jump:
		mov    $0x000001,%ecx
		mov    $0x000045,%eax
		mov    %cx,_0cecee_data
		call   _06fa90_func

	_067303_jump:
		cmpw   $0x000002,_0cecf4_data
		jne    _06735f_jump
		call   _036820_func
		test   %al,%al
		je     _06735f_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _06734c_jump
		mov    _0ced04_data,%dx
		cmp    _0cece6_data,%dx
		jle    _06735f_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _06735f_jump

	_06734c_jump:
		movw   $0x000002,_0cecee_data
		mov    $0x000045,%eax
		call   _06fa90_func

	_06735f_jump:
		cmpw   $0x000003,_0cecf4_data
		jne    _0673c8_jump
		call   _036820_func
		test   %al,%al
		je     _0673c8_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _0673a8_jump
		mov    _0ced04_data,%dx
		cmp    _0cece6_data,%dx
		jle    _0673c8_jump
		mov    _0ced02_data,%edx
		mov    _0cecd2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _0673c8_jump

	_0673a8_jump:
		mov    $0x000003,%ecx
		mov    $0x000045,%eax
		mov    %cx,_0cecee_data
		call   _06fa90_func
		mov    $0x000014,%eax
		call   _03c9a4_func

	_0673c8_jump:
		call   _04d588_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0673d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x000004,%edx
		mov    $0x000032,%ebx
		mov    $0x000001,%ah
		mov    $0x000015,%ecx
		mov    %dx,_0cecf0_data
		mov    %bx,_0cecc4_data
		mov    %ah,_0ca8cc_data
		mov    %ah,_0ca8ce_data
		mov    %cx,_0cecfc_data
		mov    $0x000005,%bl
		xor    %dh,%dh
		mov    _0cecfe_data,%ax
		mov    %dh,_0ca8cd_data
		mov    %ax,_0ca8ca_data
		mov    _0ced00_data,%ax
		mov    %bl,_0ca8cf_data
		mov    %ax,_0cecfa_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067438_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _04d544_func
		cmpw   $0x000000,_0ced02_data
		jne    _06747c_jump
		cmpw   $0x000001,_0cecee_data
		je     _06747c_jump
		mov    _0ced0c_data,%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%edx
		mov    $0x000001,%ecx
		mov    _0c0d64_data,%eax
		mov    %cx,_0ced02_data
		mov    %eax,_0ccca4_data(%edx)

	_06747c_jump:
		cmpw   $0x000000,_0cece0_data
		je     _06748f_jump
		movw   $0x000001,_0cecda_data

	_06748f_jump:
		call   _036820_func
		test   %al,%al
		je     _067551_jump
		cmpb   $0x000000,_0cefd3_data
		je     _067551_jump
		mov    _0ced0c_data,%eax
		mov    _0ced0e_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpb   $0x00007e,_0ccca3_data(%eax)
		jne    _0674f3_jump
		mov    _0ced10_data,%cx
		cmp    $0x000001,%cx
		je     _06752b_jump
		mov    %ecx,%esi
		mov    $0x000061,%dh
		dec    %esi
		mov    %dh,_0ccca3_data(%eax)
		mov    $0x000044,%eax
		mov    %si,_0ced10_data
		call   _06fa90_func
		jmp    _06752b_jump

	_0674f3_jump:
		mov    _0ced10_data,%ax
		cmp    $0x000003,%ax
		jge    _067515_jump
		mov    %eax,%ebx
		inc    %ebx
		mov    $0x000044,%eax
		mov    %bx,_0ced10_data
		call   _06fa90_func
		jmp    _06752b_jump

	_067515_jump:
		mov    $0x000044,%eax
		mov    $0x000001,%edx
		call   _06fa90_func
		mov    %dx,_0cece0_data

	_06752b_jump:
		mov    $0x001000,%eax
		xor    %edi,%edi
		mov    $0x000001,%ebx
		mov    %di,_0ced34_data
		mov    %ax,_0ced30_data
		mov    %ax,_0ced32_data
		mov    %bx,_0ced24_data

	_067551_jump:
		call   _040904_func
		test   %ax,%ax
		je     _067622_jump
		call   _040824_func
		test   %ax,%ax
		jne    _067622_jump
		call   _0407b4_func
		test   %ax,%ax
		jne    _067622_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _0675a1_jump
		mov    _0ced02_data,%edx
		sar    $0x000010,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _067622_jump

	_0675a1_jump:
		mov    _0ced0c_data,%eax
		mov    _0ced0e_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0ccca3_data(%eax),%bh
		cmp    $0x00007a,%bh
		jne    _0675cb_jump
		movb   $0x000020,_0ccca3_data(%eax)
		jmp    _0675f1_jump

	_0675cb_jump:
		cmp    $0x000020,%bh
		jne    _0675d9_jump
		movb   $0x00007e,_0ccca3_data(%eax)
		jmp    _0675f1_jump

	_0675d9_jump:
		cmp    $0x00007e,%bh
		jne    _0675e7_jump
		movb   $0x000061,_0ccca3_data(%eax)
		jmp    _0675f1_jump

	_0675e7_jump:
		mov    %bh,%dl
		inc    %dl
		mov    %dl,_0ccca3_data(%eax)

	_0675f1_jump:
		mov    $0x001000,%esi
		xor    %ecx,%ecx
		mov    $0x000001,%eax
		mov    %cx,_0ced34_data
		mov    %si,_0ced30_data
		mov    %ax,_0ced24_data
		mov    $0x000044,%eax
		mov    %si,_0ced32_data
		call   _06fa90_func

	_067622_jump:
		call   _040894_func
		test   %ax,%ax
		je     _0676f4_jump
		call   _040824_func
		test   %ax,%ax
		jne    _0676f4_jump
		call   _0407b4_func
		test   %ax,%ax
		jne    _0676f4_jump
		cmpb   $0x000000,_0cefd3_data
		jne    _067672_jump
		mov    _0ced02_data,%edx
		sar    $0x000010,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _0676f4_jump

	_067672_jump:
		mov    _0ced0c_data,%eax
		mov    _0ced0e_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0ccca3_data(%eax),%ch
		cmp    $0x000061,%ch
		jne    _06769c_jump
		movb   $0x00007e,_0ccca3_data(%eax)
		jmp    _0676c2_jump

	_06769c_jump:
		cmp    $0x00007e,%ch
		jne    _0676aa_jump
		movb   $0x000020,_0ccca3_data(%eax)
		jmp    _0676c2_jump

	_0676aa_jump:
		cmp    $0x000020,%ch
		jne    _0676b8_jump
		movb   $0x00007a,_0ccca3_data(%eax)
		jmp    _0676c2_jump

	_0676b8_jump:
		mov    %ch,%bl
		dec    %bl
		mov    %bl,_0ccca3_data(%eax)

	_0676c2_jump:
		mov    $0x001000,%ebx
		mov    $0x000001,%esi
		xor    %edx,%edx
		mov    $0x000044,%eax
		mov    %dx,_0ced34_data
		mov    %bx,_0ced30_data
		mov    %bx,_0ced32_data
		mov    %si,_0ced24_data
		call   _06fa90_func

	_0676f4_jump:
		call   _040904_func
		test   %ax,%ax
		jne    _067739_jump
		call   _040894_func
		test   %ax,%ax
		jne    _067739_jump
		call   _040824_func
		test   %ax,%ax
		jne    _067739_jump
		call   _0407b4_func
		test   %ax,%ax
		jne    _067739_jump
		cmpw   $0x000000,_0cece0_data
		jne    _067739_jump
		cmpw   $0x000000,_0cecda_data
		jne    _067739_jump
		movw   $0x000001,_0cecd8_data

	_067739_jump:
		call   _036944_func
		test   %al,%al
		je     _067753_jump
		movb   $0x000001,_0cef8e_data
		mov    $0x00004d,%eax
		call   _06fa90_func

	_067753_jump:
		call   _04d588_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lea    0x000000(%eax),%eax



_067760_func:
		ret    

_0677b0_switch:
		.long   _067809_case
		.long   _067815_case
		.long   _067821_case
		.long   _06782d_case

_0677c0_switch:
		.long   _067850_case
		.long   _06785c_case
		.long   _067868_case
		.long   _067874_case

_0677d0_switch:
		.long   _067897_case
		.long   _0678a3_case
		.long   _0678af_case
		.long   _0678bb_case

_0677e0_switch:
		.long   _0678de_case
		.long   _0678e9_case
		.long   _0678f4_case
		.long   _0678ff_case


	_067809_case:
		movl   $_040974_func,_0c4d78_data
		jmp    _067837_jump

	_067815_case:
		movl   $_040a00_func,_0c4d78_data
		jmp    _067837_jump

	_067821_case:
		movl   $_040a8c_func,_0c4d78_data
		jmp    _067837_jump

	_06782d_case:
		movl   $_040b18_func,_0c4d78_data

	_067837_jump:
		mov    _0c4d8a_data,%ax
		cmp    $0x000003,%ax
		ja     _06787e_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0677c0_switch(,%eax,4)

	_067850_case:
		movl   $_040974_func,_0c4d7c_data
		jmp    _06787e_jump

	_06785c_case:
		movl   $_040a00_func,_0c4d7c_data
		jmp    _06787e_jump

	_067868_case:
		movl   $_040a8c_func,_0c4d7c_data
		jmp    _06787e_jump

	_067874_case:
		movl   $_040b18_func,_0c4d7c_data

	_06787e_jump:
		mov    _0c4d8c_data,%ax
		cmp    $0x000003,%ax
		ja     _0678c5_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0677d0_switch(,%eax,4)

	_067897_case:
		movl   $_040974_func,_0c4d80_data
		jmp    _0678c5_jump

	_0678a3_case:
		movl   $_040a00_func,_0c4d80_data
		jmp    _0678c5_jump

	_0678af_case:
		movl   $_040a8c_func,_0c4d80_data
		jmp    _0678c5_jump

	_0678bb_case:
		movl   $_040b18_func,_0c4d80_data

	_0678c5_jump:
		mov    _0c4d8e_data,%ax
		cmp    $0x000003,%ax
		ja     _067909_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0677e0_switch(,%eax,4)

	_0678de_case:
		movl   $_040974_func,_0c4d84_data
		ret    

	_0678e9_case:
		movl   $_040a00_func,_0c4d84_data
		ret    

	_0678f4_case:
		movl   $_040a8c_func,_0c4d84_data
		ret    

	_0678ff_case:
		movl   $_040b18_func,_0c4d84_data

	_067909_jump:
		ret    

_06790c_switch:
		.long   _06792f_case
		.long   _067938_case
		.long   _067941_case
		.long   _06794a_case


	_06792f_case:
		push   $0x000002
		mov    $_0c0d68_data,%eax
		jmp    _067951_jump

	_067938_case:
		push   $0x000001
		mov    $_0c0d6c_data,%eax
		jmp    _067951_jump

	_067941_case:
		push   $0x000005
		mov    $_0c0d70_data,%eax
		jmp    _067951_jump

	_06794a_case:
		push   $0x000001
		mov    $_0c0d74_data,%eax

	_067951_jump:
		and    $0x0000ff,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01a178_func
		ret    $0x000004



_067968_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x00000a,%ebx
		mov    _0cedb4_data,%si
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0ced76_data
		mov    %bx,_0ced78_data
		mov    %ah,_0cefaf_data
		mov    %dx,_0ced04_data
		mov    %ah,_09267c_data
		mov    %ah,_0cef91_data
		cmp    $0x000004,%si
		je     _0679b3_jump
		testb  $0x000002,_0ced81_data
		je     _0679e7_jump

	_0679b3_jump:
		mov    $0x000021,%ecx
		mov    $_0cdba4_data,%edi
		mov    $_0ce32c_data,%esi
		mov    $0x000001,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %bh,_0cefdd_data
		mov    _0ced81_data,%cl
		mov    $0x000001,%edi
		and    $0x0000fd,%cl
		mov    %di,_0cedb4_data
		mov    %cl,_0ced81_data

	_0679e7_jump:
		mov    $0x000087,%edx
		xor    %eax,%eax
		xor    %ch,%ch
		mov    _0cdc0d_data,%al
		mov    %ch,_0cdc0f_data
		sub    %eax,%edx
		mov    _0cef98_data,%al
		mov    %edx,_0cdbd0_data
		test   %al,%al
		je     _067a36_jump
		mov    $0x000018,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		xor    %eax,%eax
		mov    $0x0000e1,%edx
		mov    _0cdc0c_data,%al
		sub    %eax,%edx
		mov    %edx,_0cdbcc_data
		jmp    _067a81_jump

	_067a36_jump:
		xor    %eax,%eax
		mov    $0x000050,%edx
		mov    _0cdc0c_data,%al
		sub    %eax,%edx
		mov    $_0cdba4_data,%eax
		mov    %edx,_0cdbcc_data
		mov    $0x000003,%edx
		call   _01d36c_func
		movw   $0x0000ff,_0ced78_data
		cmpb   $0x00000a,_0cef61_data
		jbe    _067a72_jump
		mov    $0x000034,%edx
		jmp    _067a77_jump

	_067a72_jump:
		mov    $0x000033,%edx

	_067a77_jump:
		mov    $_0cdba4_data,%eax
		call   _01d364_func

	_067a81_jump:
		mov    $0x000082,%ebx
		mov    _0cdc25_data,%dl
		mov    $0x000078,%ecx
		and    $0x0000f7,%dl
		mov    $0x00006e,%esi
		mov    %dl,_0cdc25_data
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %dx,_0cdbe4_data
		mov    %dx,_0cdbe6_data
		call   _01d1ac_func
		mov    $0x000050,%edx
		mov    $_0ce29c_data,%eax
		mov    %ebx,_0ce2c8_data
		mov    %edx,_0ce2c4_data
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %edi,%edi
		call   _01d374_func
		mov    $0x000050,%dh
		mov    $0x000040,%bl
		mov    $_0cce2c_data,%eax
		mov    %cx,_0cce62_data
		mov    %si,_0cce64_data
		mov    %dh,_0cce94_data
		mov    %bl,_0cce95_data
		xor    %cl,%cl
		mov    _0ccead_data,%bh
		mov    $0x000005,%edx
		and    $0x0000fb,%bh
		mov    %cl,_0cceab_data
		mov    %bh,_0ccead_data
		mov    $0x000014,%ebx
		xor    %ch,%ch
		call   _01d374_func
		mov    _0cee10_data,%ax
		mov    %ch,_0cef9b_data
		mov    %ax,_0ced98_data
		mov    _0cedfa_data,%ax
		mov    %di,_0cee10_data
		mov    %ax,_0ced94_data
		mov    %di,_0cedfa_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_067b54_switch:
		.long   _067c08_case
		.long   _067c43_case
		.long   _067c7b_case
		.long   _067caf_case




_067b64_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _09267c_data,%dl
		movw   $0x000001,_0ced04_data
		call   _040904_func
		test   %ax,%ax
		je     _067b92_jump
		mov    _09267c_data,%dl
		cmp    $0x000001,%dl
		je     _067b92_jump
		inc    %dl
		jmp    _067bef_jump

	_067b92_jump:
		call   _040894_func
		test   %ax,%ax
		je     _067bac_jump
		mov    _09267c_data,%dl
		cmp    $0x000003,%dl
		je     _067bac_jump
		add    $0x000002,%dl
		jmp    _067bef_jump

	_067bac_jump:
		call   _040824_func
		test   %ax,%ax
		je     _067bc6_jump
		mov    _09267c_data,%dl
		cmp    $0x000007,%dl
		je     _067bc6_jump
		add    $0x000004,%dl
		jmp    _067bef_jump

	_067bc6_jump:
		call   _0407b4_func
		test   %ax,%ax
		je     _067be0_jump
		mov    _09267c_data,%dl
		cmp    $0x00000f,%dl
		je     _067be0_jump
		add    $0x000008,%dl
		jmp    _067bef_jump

	_067be0_jump:
		xor    %ecx,%ecx
		mov    _09267c_data,%dl
		mov    %cx,_0ced04_data

	_067bef_jump:
		mov    _0cef91_data,%al
		cmp    $0x000003,%al
		ja     _067ceb_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		jmp    *%cs:_067b54_switch(,%ebx,4)

	_067c08_case:
		cmp    $0x000001,%dl
		jne    _067c22_jump
		cmpb   $0x000003,_0cef98_data
		ja     _067c22_jump
		add    %dl,%al
		mov    %al,_0cef91_data
		jmp    _067ceb_jump

	_067c22_jump:
		cmpw   $0x000000,_0ced04_data
		je     _067ceb_jump
		xor    %al,%al
		xor    %dl,%dl
		mov    %al,_0cef91_data
		mov    %dl,_09267c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067c43_case:
		cmp    $0x000003,%dl
		jne    _067c59_jump
		inc    %al
		mov    %al,_0cef91_data
		mov    %dl,_09267c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067c59_jump:
		cmpw   $0x000000,_0ced04_data
		je     _067ceb_jump
		xor    %cl,%cl
		xor    %dl,%dl
		mov    %cl,_0cef91_data
		mov    %dl,_09267c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067c7b_case:
		cmp    $0x000007,%dl
		jne    _067c91_jump
		inc    %al
		mov    %al,_0cef91_data
		mov    %dl,_09267c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067c91_jump:
		cmpw   $0x000000,_0ced04_data
		je     _067ceb_jump
		xor    %bh,%bh
		xor    %dl,%dl
		mov    %bh,_0cef91_data
		mov    %dl,_09267c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067caf_case:
		cmp    $0x00000f,%dl
		jne    _067cd7_jump
		orb    $0x000004,_0ccead_data
		xor    %dl,%dl
		mov    $0x00000a,%bl
		mov    $0x000080,%dh
		mov    %bl,_0cef98_data
		mov    %dh,_0cceab_data
		mov    %dl,_09267c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067cd7_jump:
		cmpw   $0x000000,_0ced04_data
		je     _067ceb_jump
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,_0cef91_data

	_067ceb_jump:
		mov    %dl,_09267c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_067cf8_switch:
		.long   _067e00_case
		.long   _067e39_case
		.long   _067e54_case
		.long   _067f4e_case
		.long   _067ea7_case
		.long   _067f11_case
		.long   _067e89_case




_067d14_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000001,%eax
		call   _053298_func
		call   _036820_func
		test   %al,%al
		jne    _067d41_jump
		call   _036868_func
		test   %al,%al
		jne    _067d41_jump
		call   _036944_func
		test   %al,%al
		je     _067dc7_jump

	_067d41_jump:
		mov    _0cdc10_data,%ah
		cmp    $0x000019,%ah
		je     _067d56_jump
		cmp    $0x00001a,%ah
		je     _067d56_jump
		cmp    $0x00001b,%ah
		jne    _067dc7_jump

	_067d56_jump:
		cmpb   $0x000080,_0cceab_data
		je     _067d66_jump
		orb    $0x000004,_0ccead_data

	_067d66_jump:
		call   _01cb68_func
		mov    $0x0000d8,%eax
		call   _06fa90_func
		cmpb   $0x00001b,_0cdc10_data
		je     _067d94_jump
		mov    $0x00001f,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		jmp    _067daf_jump

	_067d94_jump:
		mov    $0x00001d,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		orb    $0x000008,_0cdc25_data

	_067daf_jump:
		mov    $0x000001,%ebx
		xor    %al,%al
		xor    %edx,%edx
		mov    %al,_0cdc0f_data
		mov    $_0ce29c_data,%eax
		call   _01d374_func

	_067dc7_jump:
		mov    $_0cdba4_data,%eax
		call   _053ce4_func
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		call   _053c60_func
		mov    %ax,_0cdbe4_data
		mov    _0cdc10_data,%al
		sub    $0x000019,%al
		cmp    $0x000006,%al
		ja     _067f7d_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_067cf8_switch(,%eax,4)

	_067e00_case:
		xor    %eax,%eax
		mov    _0cdbcc_data,%ecx
		mov    _0cdc0c_data,%al
		add    %ecx,%eax
		cmp    $0x000046,%eax
		jge    _067f7d_jump
		mov    $0x00001a,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		xor    %dl,%dl
		mov    %dl,_0cdc0f_data
		jmp    _067f7d_jump

	_067e39_case:
		cmpb   $0x000006,_0cdc0f_data
		jbe    _067f7d_jump
		xor    %ebx,%ebx
		mov    %bx,_0cdbe4_data
		jmp    _067f7d_jump

	_067e54_case:
		mov    _0ced76_data,%si
		inc    %esi
		mov    %si,_0ced76_data
		cmp    $0x00003c,%si
		jne    _067f7d_jump
		mov    _0ced78_data,%dx
		xor    %eax,%eax
		dec    %edx
		mov    %ax,_0ced76_data
		mov    %dx,_0ced78_data
		jmp    _067f7d_jump

	_067e89_case:
		mov    $_0cdba4_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _067f7d_jump
		orb    $0x000008,_0cdc25_data
		jmp    _067f7d_jump

	_067ea7_case:
		mov    _0cdc25_data,%dh
		xor    %eax,%eax
		mov    _0cdbcc_data,%ebx
		mov    _0cdc0c_data,%al
		or     $0x000008,%dh
		add    %ebx,%eax
		mov    %dh,_0cdc25_data
		cmp    $0x0000b4,%eax
		jle    _067ef6_jump
		mov    $_0cdba4_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _067ef6_jump
		mov    $0x00001c,%edx
		mov    $_0cdba4_data,%eax
		xor    %bh,%bh
		call   _01d364_func
		mov    %bh,_0cdc0f_data
		jmp    _067f7d_jump

	_067ef6_jump:
		cmpb   $0x000040,_0cdc0f_data
		jae    _067f7d_jump
		xor    %edx,%edx
		mov    %dx,_0cdbe4_data
		jmp    _067f7d_jump

	_067f11_case:
		xor    %eax,%eax
		mov    _0cdbcc_data,%edx
		mov    _0cdc0c_data,%al
		add    %edx,%eax
		cmp    $0x0000af,%eax
		jle    _067f7d_jump
		mov    $_0cdba4_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _067f7d_jump
		mov    $0x00001c,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		xor    %dl,%dl
		mov    %dl,_0cdc0f_data
		jmp    _067f7d_jump

	_067f4e_case:
		cmpb   $0x000028,_0cdc0f_data
		jbe    _067f6b_jump
		mov    $0x000001,%ch
		mov    $0xffffffff,%ebx
		mov    %ch,_0cefaf_data
		mov    %bx,_0cde26_data

	_067f6b_jump:
		cmpb   $0x000010,_0cdc0f_data
		jbe    _067f7d_jump
		xor    %ecx,%ecx
		mov    %cx,_0cdbe4_data

	_067f7d_jump:
		cmpb   $0x000000,_0cef4f_data
		jne    _067f8f_jump
		cmpb   $0x000019,_0cdc10_data
		je     _067fb9_jump

	_067f8f_jump:
		mov    _0cdbe2_data,%eax
		mov    _0cdbcc_data,%esi
		sar    $0x000010,%eax
		add    %eax,%esi
		mov    $_0cdba4_data,%eax
		mov    %esi,_0cdbcc_data
		call   _01db8c_func
		mov    $_0cdba4_data,%eax
		call   _0545ac_func

	_067fb9_jump:
		mov    $_0ce29c_data,%eax
		call   _01db8c_func
		mov    $_0ce29c_data,%eax
		call   _0545ac_func
		testb  $0x000004,_0ccead_data
		je     _068004_jump
		mov    $_0cce2c_data,%eax
		call   _0545ac_func
		mov    $_0cce2c_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _068004_jump
		cmpb   $0x000080,_0cceab_data
		je     _067ffd_jump
		decb   _0cef98_data

	_067ffd_jump:
		andb   $0x0000fb,_0ccead_data

	_068004_jump:
		cmpw   $0x0000ff,_0ced78_data
		je     _068019_jump
		call   _067b64_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068019_jump:
		call   _068114_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068114_func:
		call   _036944_func
		test   %al,%al
		setne  %al
		mov    %al,_0cef9b_data
		mov    $_0cdba4_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _068138_jump
		movb   $0x000001,_0cef9b_data

	_068138_jump:
		cmpb   $0x000000,_0cef9b_data
		je     _068151_jump
		movb   $0x000001,_0cefaf_data
		movw   $0x00ffff,_0cde26_data

	_068151_jump:
		ret    

_068154_switch:
		.long   _0681c0_case
		.long   _06844a_case
		.long   _06829e_case
		.long   _068364_case
		.long   _068379_case




_068168_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000005,%ebx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0ced76_data
		mov    %bx,_0ced78_data
		mov    %ah,_0cefad_data
		call   _01eaa8_func
		cmpb   $0x000000,_0cef96_data
		je     _0681a2_jump
		call   _0684bc_func
		jmp    _0684b3_jump

	_0681a2_jump:
		mov    _0cede4_data,%ax
		dec    %eax
		cmp    $0x000004,%ax
		ja     _06844a_case
		and    $0x00ffff,%eax
		jmp    *%cs:_068154_switch(,%eax,4)

	_0681c0_case:
		mov    $_0cba88_data,%edi
		mov    _0c2430_data,%esi
		push   %edi

	_0681cc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0681e4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0681cc_jump

	_0681e4_jump:
		pop    %edi
		mov    $_0cbb60_data,%edi
		mov    _0c2434_data,%esi
		push   %edi

	_0681f1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _068209_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0681f1_jump

	_068209_jump:
		pop    %edi
		mov    $_0cbc38_data,%edi
		mov    _0c2438_data,%esi
		push   %edi

	_068216_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06822e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _068216_jump

	_06822e_jump:
		pop    %edi
		mov    $_0cbd10_data,%edi
		mov    _0c243c_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_068240_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _068258_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _068240_jump

	_068258_jump:
		pop    %edi
		mov    _0c4d8c_data,%edx
		mov    $_0cbb60_data,%eax
		sar    $0x000010,%edx
		call   _01eebc_func
		mov    $0x0000ff,%ebx
		mov    _0c4d8c_data,%edx
		mov    $_0cbc38_data,%eax
		sar    $0x000010,%edx
		call   _01eebc_func
		mov    $0x0000ff,%ebx
		mov    _0c4d8c_data,%edx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01eebc_func
		jmp    _06844a_case

	_06829e_case:
		mov    $_0cba88_data,%edi
		mov    _0c2440_data,%esi
		push   %edi

	_0682aa_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0682c2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0682aa_jump

	_0682c2_jump:
		pop    %edi
		mov    $_0cbb60_data,%edi
		mov    _0c2444_data,%esi
		push   %edi

	_0682cf_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0682e7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0682cf_jump

	_0682e7_jump:
		pop    %edi
		mov    $_0cbc38_data,%edi
		mov    _0c2448_data,%esi
		push   %edi

	_0682f4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06830c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0682f4_jump

	_06830c_jump:
		pop    %edi
		mov    $_0cbd10_data,%edi
		mov    _0c244c_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_06831e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _068336_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06831e_jump

	_068336_jump:
		pop    %edi
		mov    _0c4d86_data,%edx
		mov    $_0cbc38_data,%eax
		sar    $0x000010,%edx
		call   _01eebc_func
		mov    $0x0000ff,%ebx
		mov    _0c4d86_data,%edx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01eebc_func
		jmp    _06844a_case

	_068364_case:
		call   _01cb68_func
		mov    $_0cba88_data,%edi
		mov    _0c2450_data,%esi
		jmp    _068430_jump

	_068379_case:
		cmpw   $0x000003,_0cedd0_data
		jne    _06841b_jump
		mov    $_0cba88_data,%edi
		mov    _0c2454_data,%esi
		push   %edi

	_068393_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0683ab_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _068393_jump

	_0683ab_jump:
		pop    %edi
		mov    $_0cbb60_data,%edi
		mov    _0c2458_data,%esi
		push   %edi

	_0683b8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0683d0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0683b8_jump

	_0683d0_jump:
		pop    %edi
		mov    $_0cbc38_data,%edi
		mov    _0c245c_data,%esi
		push   %edi

	_0683dd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0683f5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0683dd_jump

	_0683f5_jump:
		pop    %edi
		mov    $_0cbd10_data,%edi
		mov    _0c2460_data,%esi
		push   %edi

	_068402_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06841a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _068402_jump

	_06841a_jump:
		pop    %edi

	_06841b_jump:
		cmpw   $0x00000b,_0cedd0_data
		jne    _06844a_case
		mov    $_0cba88_data,%edi
		mov    _0c2464_data,%esi

	_068430_jump:
		push   %edi

	_068431_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _068449_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _068431_jump

	_068449_jump:
		pop    %edi

	_06844a_case:
		mov    $0x0000d8,%edx
		xor    %eax,%eax

	_068451_jump:
		cmpb   $0x000000,_0cba88_data(%eax)
		je     _068479_jump
		mov    $0x0000a0,%edi
		mov    $0x0000ad,%ebx
		mov    %di,_0cbb58_data(%eax)
		mov    %bx,_0cbb5a_data(%eax)
		movb   $0x000002,_0cbb5c_data(%eax)

	_068479_jump:
		cmpb   $0x000000,_0cba88_data(%edx)
		je     _0684a1_jump
		mov    $0x0000a0,%ecx
		mov    $0x0000bc,%edi
		mov    %cx,_0cbb58_data(%edx)
		mov    %di,_0cbb5a_data(%edx)
		movb   $0x000002,_0cbb5c_data(%edx)

	_0684a1_jump:
		add    $0x0001b0,%eax
		add    $0x0001b0,%edx
		cmp    $0x000870,%eax
		jne    _068451_jump

	_0684b3_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0684bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xffffffff,%ebx
		xor    %ah,%ah
		mov    _0cef6a_data,%dl
		mov    %ah,_0cefa8_data
		test   %dl,%dl
		jne    _0684e4_jump
		xor    %eax,%eax
		mov    _0ced08_data,%al
		call   _071540_func

	_0684e4_jump:
		xor    %dh,%dh
		mov    %dh,_0cef8b_data
		mov    %dh,_0cef8f_data
		xor    %dl,%dl
		mov    %dx,_0cecc2_data
		mov    %dh,_0cef9b_data
		mov    %dh,_0cef97_data
		mov    %dh,_0cef8c_data

	_06850d_jump:
		inc    %ebx
		movswl %bx,%edx
		imul   $0x00000c,%edx,%edx
		mov    $_094ebc_data,%esi
		mov    $_0cc650_data,%edi
		mov    $0x00000c,%ecx
		add    %edx,%esi
		add    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpw   $0x000000,_0cc656_data(%edx)
		je     _068557_jump
		mov    _0cc654_data(%edx),%esi
		sar    $0x000010,%esi
		mov    _0c23b8_data(,%esi,4),%esi
		mov    %esi,_0cc650_data(%edx)

	_068557_jump:
		movswl %bx,%edx
		imul   $0x00000c,%edx,%edx
		mov    $0x0000dc,%esi
		mov    _0cc659_data(%edx),%cl
		mov    %si,_0cc656_data(%edx)
		cmp    $0x0000ff,%cl
		jne    _06850d_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06857c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cef8f_data,%cl
		cmpb   $0x000000,_0cef96_data
		je     _0686b7_jump
		mov    $0x000001,%eax
		call   _053298_func
		cmpb   $0x000000,_0cef4f_data
		jne    _0686b7_jump
		xor    %eax,%eax
		mov    _0cef8b_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0cef8f_data,%cl
		shl    $0x000002,%edx
		jmp    _0685d8_jump

	_0685c5_jump:
		mov    _0cc656_data(%edx),%bx
		add    $0x00000c,%edx
		dec    %ebx
		inc    %eax
		mov    %bx,_0cc64a_data(%edx)

	_0685d8_jump:
		xor    %ebx,%ebx
		mov    %cl,%bl
		cmp    %ebx,%eax
		jle    _0685c5_jump
		lea    0x000000(,%ebx,4),%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    _0cecc2_data,%bx
		shl    $0x000002,%edx
		inc    %ebx
		mov    _0cc659_data(%edx),%al
		mov    %bx,_0cecc2_data
		test   %ax,%ax
		jne    _068635_jump
		mov    _0cc658_data(%edx),%dl
		cmp    $0x000001,%dl
		jb     _06861c_jump
		jbe    _068627_jump
		cmp    $0x000002,%dl
		je     _06862e_jump
		jmp    _068652_jump

	_06861c_jump:
		test   %dl,%dl
		jne    _068652_jump
		mov    $0x000024,%esi
		jmp    _068652_jump

	_068627_jump:
		mov    $0x000017,%esi
		jmp    _068652_jump

	_06862e_jump:
		mov    $0x00000f,%esi
		jmp    _068652_jump

	_068635_jump:
		cmp    $0x0000ff,%ax
		jne    _068642_jump
		mov    $0x0000a0,%esi
		jmp    _068652_jump

	_068642_jump:
		cmp    $0x000064,%ax
		jle    _06864f_jump
		mov    %eax,%esi
		sub    $0x000055,%esi
		jmp    _068652_jump

	_06864f_jump:
		imul   $0x00000f,%eax,%esi

	_068652_jump:
		cmp    _0cecc2_data,%si
		jg     _068687_jump
		xor    %edx,%edx
		mov    %dx,_0cecc2_data
		cmp    $0x0000ff,%ax
		je     _068680_jump
		inc    %cl
		xor    %edx,%edx
		mov    %cl,%dl
		mov    $0x00000f,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _068687_jump

	_068680_jump:
		movb   $0x000001,_0cef9b_data

	_068687_jump:
		xor    %edx,%edx
		mov    _0cef8b_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cc654_data(,%eax,4),%eax
		sar    $0x000010,%eax
		mov    %cl,_0cef8f_data
		cmp    $0xfffffffc,%eax
		jge    _0686b7_jump
		mov    %dl,%bh
		inc    %bh
		mov    %bh,_0cef8b_data

	_0686b7_jump:
		mov    _0cef8f_data,%cl
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068704_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   $0x000000
		xor    %ebx,%ebx
		mov    _0cdbdc_data,%dx
		mov    _0cdc18_data,%bl
		mov    $0x000002,%ecx
		add    %edx,%ebx
		mov    $_0c0d78_data,%eax
		sub    $0x00003c,%ebx
		mov    $0x0000a0,%edx
		movswl %bx,%ebx
		call   _01a178_func
		push   $0x000000
		xor    %ebx,%ebx
		mov    _0cdbdc_data,%cx
		mov    _0cdc18_data,%bl
		mov    $0x0000a0,%edx
		add    %ecx,%ebx
		mov    $_0c0d90_data,%eax
		sub    $0x00001e,%ebx
		mov    $0x000002,%ecx
		movswl %bx,%ebx
		call   _01a178_func
		cmpb   $0x000080,_0cdc0f_data
		jbe    _068771_jump
		movb   $0x000001,_0cef9b_data

	_068771_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068778_func:
		push   %ebx
		push   %edx
		mov    $0x0000c8,%ah
		mov    $0x0000f0,%dl
		mov    $0xffffffb8,%ebx
		mov    %ah,_0cdd40_data
		mov    %dl,_0cdd41_data
		mov    %bx,_0cdd10_data
		mov    $0x000078,%edx
		mov    $0x000001,%bl
		mov    %dx,_0cdd0e_data
		mov    %bl,_0cdd45_data
		mov    _0cdd59_data,%dh
		xor    %bh,%bh
		and    $0x0000f7,%dh
		mov    %bh,_0cdd44_data
		mov    %bh,_0cdd48_data
		mov    %dh,_0cdd59_data
		pop    %edx
		pop    %ebx
		ret    

_0687cc_switch:
		.long   _0688b9_case
		.long   _06891c_case
		.long   _06898f_case
		.long   _0689be_case
		.long   _068a24_case
		.long   _068a91_case




_0687e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0cdd45_data,%dl
		mov    _0cdce4_data,%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0cdd44_data,%dl
		mov    0x000005(%ebx,%edx,8),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %dx,_0cdd18_data
		test   %al,%al
		je     _06882e_jump
		xor    %edx,%edx
		mov    %al,%dl
		cmpb   $0x000000,_0cef4d_data(%edx)
		jne    _06882e_jump
		mov    $_0cdcd8_data,%eax
		call   _053ce4_func

	_06882e_jump:
		mov    _0cdd18_data,%ax
		mov    _0cdd0e_data,%bx
		add    %eax,%ebx
		mov    _0cef9b_data,%dl
		mov    %bx,_0cdd0e_data
		cmp    $0x000001,%dl
		jne    _0688a0_jump
		mov    $0x000005,%dh
		mov    $0x000002,%ebx
		mov    $_0cdcd8_data,%eax
		mov    %dh,_0cdd48_data
		xor    %edx,%edx
		xor    %cl,%cl
		call   _01d374_func
		mov    $0x000002,%bl
		mov    $0x0000a0,%edx
		xor    %eax,%eax
		mov    %cl,_0cef9b_data
		mov    _0cdd40_data,%al
		mov    %bl,_0cdd57_data
		sub    %eax,%edx
		mov    _0cdd59_data,%bh
		mov    %edx,%eax
		and    $0x0000f7,%bh
		sub    $0x000010,%eax
		mov    %bh,_0cdd59_data
		mov    %ax,_0cdd0e_data

	_0688a0_jump:
		mov    _0cdd48_data,%al
		cmp    $0x000005,%al
		ja     _068acc_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_0687cc_switch(,%edx,4)

	_0688b9_case:
		xor    %ebx,%ebx
		mov    _0cdd0c_data,%edx
		mov    _0cdd40_data,%bl
		sar    $0x000010,%edx
		add    %ebx,%edx
		cmp    $0xffffff9c,%edx
		jge    _068acc_jump
		inc    %al
		mov    $0x000001,%ebx
		mov    %al,_0cdd48_data
		mov    %ebx,%edx
		mov    $_0cdcd8_data,%eax
		call   _01d374_func
		xor    %eax,%eax
		mov    _0cdd40_data,%al
		mov    _0cdd59_data,%bl
		neg    %eax
		or     $0x000008,%bl
		sub    $0x00003c,%eax
		mov    %bl,_0cdd59_data
		mov    %ax,_0cdd0e_data
		mov    $_0cdcd8_data,%eax
		call   _0545ac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06891c_case:
		xor    %edx,%edx
		mov    _0cdd0c_data,%ebx
		mov    _0cdd40_data,%dl
		sar    $0x000010,%ebx
		add    %ebx,%edx
		cmp    $0x000190,%edx
		jle    _068acc_jump
		mov    $0x000002,%ebx
		inc    %al
		mov    $0x000001,%edx
		mov    %al,_0cdd48_data
		mov    $_0cdcd8_data,%eax
		call   _01d374_func
		xor    %eax,%eax
		xor    %dl,%dl
		mov    _0cdd40_data,%al
		mov    %dl,_0cdd43_data
		neg    %eax
		mov    _0cdd59_data,%dh
		add    $0x00015e,%eax
		and    $0x0000f7,%dh
		mov    %ax,_0cdd0e_data
		mov    %dh,_0cdd59_data
		mov    $_0cdcd8_data,%eax
		call   _0545ac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06898f_case:
		cmpb   $0x000000,_0cdd45_data
		jne    _068acc_jump
		cmpb   $0x000000,_0cdd44_data
		jne    _068acc_jump
		inc    %al
		mov    %al,_0cdd48_data
		mov    $_0cdcd8_data,%eax
		call   _0545ac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0689be_case:
		mov    $_0cdcd8_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _068acc_jump
		mov    _0cdd48_data,%bh
		mov    $0x000001,%edx
		inc    %bh
		mov    $_0cdcd8_data,%eax
		mov    %bh,_0cdd48_data
		mov    $0x000003,%ebx
		call   _01d374_func
		mov    $0xffffffc4,%edx
		xor    %eax,%eax
		mov    _0cdd59_data,%cl
		mov    _0cdd40_data,%al
		or     $0x000008,%cl
		sub    %eax,%edx
		mov    %cl,_0cdd59_data
		mov    %dx,_0cdd0e_data
		mov    $_0cdcd8_data,%eax
		call   _0545ac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068a24_case:
		xor    %edx,%edx
		mov    _0cdd0c_data,%ebx
		mov    _0cdd40_data,%dl
		sar    $0x000010,%ebx
		add    %ebx,%edx
		cmp    $0x000190,%edx
		jle    _068acc_jump
		mov    $0x000001,%ebx
		inc    %al
		xor    %edx,%edx
		mov    %al,_0cdd48_data
		mov    $_0cdcd8_data,%eax
		call   _01d374_func
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0cdd40_data,%al
		sub    %eax,%edx
		mov    _0cdd59_data,%bl
		mov    %edx,%eax
		and    $0x0000f7,%bl
		sub    $0x000010,%eax
		mov    %bl,_0cdd59_data
		mov    %ax,_0cdd0e_data
		mov    $_0cdcd8_data,%eax
		call   _0545ac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068a91_case:
		cmpb   $0x000000,_0cdd45_data
		jne    _068acc_jump
		cmpb   $0x000002,_0cdd44_data
		jne    _068acc_jump
		mov    _0cdd57_data,%ah
		test   %ah,%ah
		jne    _068ac2_jump
		movb   $0x000001,_0cef9b_data
		mov    $_0cdcd8_data,%eax
		call   _0545ac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068ac2_jump:
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0cdd57_data

	_068acc_jump:
		mov    $_0cdcd8_data,%eax
		call   _0545ac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068adc_func:
		push   %edx
		xor    %ah,%ah
		mov    _0cefa9_data,%dl
		mov    %ah,_0cefdf_data
		cmp    $0x000001,%dl
		jne    _068b04_jump
		mov    _0ced7e_data,%ax
		xor    %dh,%dh
		mov    %ax,_0ced80_data
		mov    %dh,_0cefa9_data

	_068b04_jump:
		pop    %edx
		ret    

_068b08_switch:
		.long   _068b48_case
		.long   _068bc8_case
		.long   _068be7_case
		.long   _068bfe_case
		.long   _068c1f_case




_068b1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cedd0_data,%bx
		mov    _0cede4_data,%ax
		dec    %eax
		xor    %edx,%edx
		cmp    $0x000004,%ax
		ja     _068c3e_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_068b08_switch(,%eax,4)

	_068b48_case:
		cmp    $0x000010,%bx
		jne    _068b67_jump
		cmpw   $0x000001,_0cedd4_data
		je     _068b62_jump
		cmpw   $0x000001,_0cedea_data
		jne    _068b67_jump

	_068b62_jump:
		mov    $_096ef4_data,%edx

	_068b67_jump:
		cmp    $0x000007,%bx
		jne    _068b92_jump
		cmpw   $0x000001,_0cedd4_data
		je     _068b81_jump
		cmpw   $0x000001,_0cedea_data
		jne    _068b92_jump

	_068b81_jump:
		xor    %al,%al
		mov    $_096eb0_data,%edx
		mov    %al,_0cef94_data
		jmp    _068c3e_jump

	_068b92_jump:
		cmp    $0x000007,%bx
		jne    _068c3e_jump
		cmpb   $0x000000,_0cef94_data
		jne    _068c3e_jump
		mov    _0cefd1_data,%cl
		mov    $_096e9e_data,%edx
		test   %cl,%cl
		jne    _068c3e_jump
		movb   $0x000001,_0cef94_data
		jmp    _068c3e_jump

	_068bc8_case:
		cmp    $0x000010,%bx
		jne    _068c3e_jump
		cmpw   $0x000001,_0cedea_data
		jne    _068c3e_jump
		mov    $_096ec2_data,%edx
		jmp    _068c3e_jump

	_068be7_case:
		cmp    $0x00000a,%bx
		jne    _068c3e_jump
		cmpw   $0x000001,_0cedd4_data
		jne    _068c3e_jump
		mov    $_096ec2_data,%edx
		jmp    _068c3e_jump

	_068bfe_case:
		cmp    $0x00000b,%bx
		jne    _068c3e_jump
		cmpw   $0x000001,_0cedd4_data
		je     _068c18_jump
		cmpw   $0x000001,_0cedea_data
		jne    _068c3e_jump

	_068c18_jump:
		mov    $_096e84_data,%edx
		jmp    _068c3e_jump

	_068c1f_case:
		cmp    $0x00000b,%bx
		jne    _068c3e_jump
		cmpw   $0x000001,_0cedd4_data
		je     _068c39_jump
		cmpw   $0x000001,_0cedea_data
		jne    _068c3e_jump

	_068c39_jump:
		mov    $_096edc_data,%edx

	_068c3e_jump:
		mov    %edx,_0e3eb8_data
		xor    %ah,%ah
		mov    %bx,_0cedd0_data
		mov    %ah,_0cef9b_data
		test   %edx,%edx
		je     _068c60_jump
		cmpb   $0x000000,_0cefd1_data
		je     _068c69_jump

	_068c60_jump:
		movb   $0x000001,_0cef9b_data
		jmp    _068cb9_jump

	_068c69_jump:
		mov    $0x000084,%ecx
		mov    $_0cdba4_data,%esi
		mov    $_0ce3b0_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		xor    %ch,%ch
		mov    _0cdc0d_data,%al
		mov    %ch,_0cdc14_data
		mov    $0x0000a8,%ecx
		sub    %eax,%ecx
		xor    %edi,%edi
		mov    %cx,_0cdbdc_data
		mov    $_068cc8_func,%ecx
		mov    %di,_0cdbe4_data
		mov    %ecx,_0cc64c_data

	_068cb9_jump:
		mov    _0e3eb8_data,%edx
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068cc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0cdba4_data,%edi
		mov    _0cdbb0_data,%ecx

	_068cd8_jump:
		xor    %ebx,%ebx
		mov    _0cdc14_data,%bl
		mov    _0e3eb8_data,%edx
		add    %ebx,%ebx
		add    %edx,%ebx
		mov    (%ebx),%ax
		movzbw _0cdc14_data,%si
		cmp    $0x000011,%ax
		jb     _068d2a_jump
		jbe    _068eab_jump
		cmp    $0x000013,%ax
		jb     _068ecb_jump
		jbe    _068e61_jump
		cmp    $0x000014,%ax
		jbe    _068f0d_jump
		cmp    $0x000015,%ax
		je     _068e36_jump
		jmp    _068f43_jump

	_068d2a_jump:
		cmp    $0x000001,%ax
		jb     _068d4d_jump
		jbe    _068d57_jump
		cmp    $0x000008,%ax
		jb     _068f43_jump
		jbe    _068d99_jump
		cmp    $0x00000e,%ax
		je     _068f31_jump
		jmp    _068f43_jump

	_068d4d_jump:
		test   %ax,%ax
		je     _068d77_jump
		jmp    _068f43_jump

	_068d57_jump:
		mov    _0cdc25_data,%bh
		mov    _0cdc14_data,%al
		or     $0x000008,%bh
		inc    %al
		mov    %bh,_0cdc25_data
		mov    %al,_0cdc14_data
		jmp    _068f43_jump

	_068d77_jump:
		mov    _0cdc25_data,%ah
		mov    _0cdc14_data,%dl
		and    $0x0000f7,%ah
		inc    %dl
		mov    %ah,_0cdc25_data
		mov    %dl,_0cdc14_data
		jmp    _068f43_jump

	_068d99_jump:
		mov    _0cdc14_data,%ah
		xor    %ebx,%ebx
		inc    %ah
		mov    %ah,%bl
		mov    %ah,_0cdc14_data
		mov    (%edx,%ebx,2),%dl
		and    $0x0000ff,%edx
		mov    %edi,%eax
		call   _01d36c_func
		incb   _0cdc14_data
		xor    %edx,%edx
		mov    _0e3eb8_data,%ebx
		mov    _0cdc14_data,%dl
		mov    (%ebx,%edx,2),%dl
		and    $0x0000ff,%edx
		mov    %edi,%eax
		call   _01d364_func
		testb  $0x000008,_0cdc25_data
		je     _068e07_jump
		xor    %edx,%edx
		mov    _0cdc11_data,%dl
		shl    $0x000002,%edx
		lea    (%ecx,%edx,1),%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0cdc10_data,%dl
		movsbw (%ebx,%edx,8),%ax
		jmp    _068e25_jump

	_068e07_jump:
		xor    %edx,%edx
		mov    _0cdc11_data,%dl
		shl    $0x000002,%edx
		lea    (%ecx,%edx,1),%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0cdc10_data,%dl
		movsbw 0x000001(%ebx,%edx,8),%ax

	_068e25_jump:
		mov    %ax,_0cdbe4_data
		incb   _0cdc14_data
		jmp    _068f43_jump

	_068e36_jump:
		mov    _0cdc14_data,%ah
		xor    %ebx,%ebx
		inc    %ah
		mov    %ah,%bl
		mov    %ah,_0cdc14_data
		mov    (%edx,%ebx,2),%ax
		mov    %bl,%dl
		inc    %dl
		mov    %ax,_0cdbda_data
		mov    %dl,_0cdc14_data
		jmp    _068f43_jump

	_068e61_jump:
		mov    %edi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _068f43_jump
		xor    %edx,%edx
		mov    _0cdc11_data,%dl
		lea    0x000000(,%edx,4),%ebx
		mov    _0cdbb0_data,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0cdc10_data,%dl
		mov    _0cdc0e_data,%al
		cmp    0x000002(%ebx,%edx,8),%al
		jne    _068f43_jump
		incb   _0cdc14_data
		jmp    _068f43_jump

	_068eab_jump:
		xor    %eax,%eax
		mov    0x000002(%ebx),%dx
		mov    _0cdc0f_data,%al
		cmp    %dx,%ax
		jne    _068f43_jump
		addb   $0x000002,_0cdc14_data
		jmp    _068f43_jump

	_068ecb_jump:
		mov    _0cdbda_data,%ax
		cmp    0x000002(%ebx),%ax
		jl     _068ee0_jump
		testb  $0x000008,_0cdc25_data
		jne    _068f04_jump

	_068ee0_jump:
		xor    %edx,%edx
		mov    _0e3eb8_data,%ebx
		mov    _0cdc14_data,%dl
		mov    _0cdbda_data,%ax
		cmp    0x000002(%ebx,%edx,2),%ax
		jg     _068f43_jump
		testb  $0x000008,_0cdc25_data
		jne    _068f43_jump

	_068f04_jump:
		addb   $0x000002,_0cdc14_data
		jmp    _068f43_jump

	_068f0d_jump:
		incb   _0cdc14_data
		xor    %ebx,%ebx
		mov    _0cdc14_data,%bl
		mov    (%edx,%ebx,2),%ax
		mov    %bl,%bh
		inc    %bh
		mov    %ax,_0cdbe4_data
		mov    %bh,_0cdc14_data
		jmp    _068f43_jump

	_068f31_jump:
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d36c_func
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d364_func

	_068f43_jump:
		xor    %eax,%eax
		mov    _0cdc14_data,%al
		cmp    %ax,%si
		jne    _068cd8_jump
		xor    %eax,%eax
		mov    _0cdc0e_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0cdba8_data,%eax
		mov    0x000008(%eax,%edx,4),%ax
		xor    %al,%al
		and    $0x0000c0,%ah
		and    $0x00ffff,%eax
		sar    $0x00000e,%eax
		inc    %eax
		mov    %al,%dl
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		call   _053c60_func
		and    $0x0000ff,%edx
		cmpb   $0x000000,_0cef4d_data(%edx)
		jne    _068fa0_jump
		add    %ax,_0cdbda_data

	_068fa0_jump:
		cmpb   $0x000000,_0cdc11_data
		jne    _068fb9_jump
		cmpb   $0x000000,_0cdc10_data
		jne    _068fb9_jump
		movb   $0x000001,_0cef9b_data

	_068fb9_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068fc0_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000084,%ecx
		mov    $_0ce3b0_data,%esi
		xor    %ah,%ah
		mov    $_0cdba4_data,%edi
		mov    %ah,_0cef9b_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03b970_func
		call   _03b920_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_069040_func:
		push   %edx
		cmpb   $0x000000,_0cef7d_data
		je     _069074_jump
		call   _028e30_func
		add    $0x000041,%al
		mov    %al,_0cef7b_data
		mov    _0cee4e_data,%al
		cmp    _0cef7b_data,%al
		jne    _06906c_jump
		movb   $0x000001,_0cef7e_data
		pop    %edx
		ret    

	_06906c_jump:
		xor    %dh,%dh
		mov    %dh,_0cef7e_data

	_069074_jump:
		pop    %edx
		ret    



_069078_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    $0x000014,%eax
		call   _07b548_func
		mov    %eax,%ecx
		movb   $0x000052,(%eax)
		mov    %eax,%edi
		movb   $0x000041,0x000001(%eax)
		cmpb   $0x000000,_0cef80_data
		jne    _069126_jump
		call   _01cb80_func
		mov    $0x000032,%eax
		call   _07b548_func
		mov    %eax,%esi
		mov    %eax,%ebp
		xor    %eax,%eax
		mov    _0cef7b_data,%al
		push   %eax
		push   $_0c0db0_data
		lea    0x000008(%esp),%ebx
		movb   $0x000059,0x000002(%ecx)
		push   %esi
		mov    $0x000008,%edx
		movb   $0x00004d,0x000003(%ecx)
		call   _07c0db_func
		add    $0x00000c,%esp
		movb   $0x000041,0x000004(%ecx)
		mov    %esi,%eax
		movb   $0x00004e,0x000005(%ecx)
		call   _0815fc_func
		movb   $0x000056,0x000006(%ecx)
		movb   $0x00004f,0x000007(%ecx)
		movb   $0x00002e,0x000008(%ecx)
		movb   $0x00004c,0x000009(%ecx)
		lea    0x00001e(%esp),%eax
		movb   $0x000000,0x00000a(%ecx)
		mov    %ecx,%edx
		movb   $0x000000,0x000006(%ecx)
		call   _07b856_func
		call   _07b8b0_func
		test   %eax,%eax
		je     _06911f_jump
		movb   $0x000001,_0cef80_data

	_06911f_jump:
		mov    %ebp,%eax
		call   _07b6e0_func

	_069126_jump:
		mov    %edi,%eax
		call   _07b6e0_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069140_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0e3ebc_data,%ebx
		inc    %ebx
		cmp    $0x000100,%ebx
		jl     _069154_jump
		xor    %ebx,%ebx

	_069154_jump:
		mov    _096f36_data(,%ebx,2),%edx
		cwtl   
		sar    $0x000010,%edx
		lea    0x000001(%eax),%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %edx,%eax
		mov    %ebx,_0e3ebc_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069178_func:
		push   %edx
		test   %eax,%eax
		je     _069189_jump
		xor    %eax,%eax
		call   _08167e_func
		call   _07cfa2_func

	_069189_jump:
		xor    %edx,%edx

	_06918b_jump:
		add    $0x000002,%edx
		call   _07cf7e_func
		mov    %ax,_096f36_data(%edx)
		cmp    $0x000200,%edx
		jne    _06918b_jump
		xor    %edx,%edx
		mov    %edx,_0e3ebc_data
		pop    %edx
		ret    



_0691b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cefcb_data
		jne    _0691df_jump
		mov    $_0cdba4_data,%eax
		call   _076fac_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _0691df_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d374_func
		mov    %ecx,%eax
		call   _01db8c_func

	_0691df_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0691e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x00000c,_0cefd2_data
		jne    _069202_jump
		xor    %eax,%eax
		mov    _0cdbcc_data,%cx
		mov    _0cdc0c_data,%al
		add    %ecx,%eax
		jmp    _06924e_jump

	_069202_jump:
		mov    _0cefd5_data,%dh
		cmp    $0x00000c,%dh
		jne    _069228_jump
		xor    %eax,%eax
		mov    _0cdbcc_data,%bx
		mov    _0cdc0c_data,%al
		add    %ebx,%eax
		sub    $0x00000f,%eax
		mov    %dh,_0cefd2_data
		jmp    _06924e_jump

	_069228_jump:
		mov    _0cefd6_data,%bl
		cmp    $0x00000c,%bl
		jne    _069250_jump
		xor    %eax,%eax
		mov    _0cdbcc_data,%dx
		mov    _0cdc0c_data,%al
		add    %edx,%eax
		add    $0x00000f,%eax
		mov    %bl,_0cefd2_data

	_06924e_jump:
		and    $0x0000f0,%al

	_069250_jump:
		xor    %edx,%edx
		cwtl   
		mov    _0cdc0c_data,%dl
		add    $0x000008,%eax
		sub    %edx,%eax
		mov    %eax,_0cdbcc_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069268_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0cdbcc_data,%cx
		mov    _0cdc0c_data,%al
		add    %eax,%ecx
		mov    _0cdc18_data,%al
		add    $0x000016,%al
		mov    _0cdbe6_data,%ah
		mov    _0ced81_data,%dl
		add    %ah,%al
		test   $0x000002,%dl
		je     _0692ae_jump
		mov    $0x000050,%ebx
		and    $0x0000ff,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		mov    $0x000050,%ebx
		sar    %eax
		sub    %eax,%ebx
		mov    %ebx,%eax

	_0692ae_jump:
		mov    _0cdbd0_data,%dx
		xor    %ah,%ah
		add    %edx,%eax
		cwtl   
		sar    $0x000004,%eax
		movswl %cx,%ecx
		movswl %ax,%ebx
		mov    %ecx,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e0e4_func
		mov    %al,_0cefd2_data
		cmp    $0x00000c,%al
		je     _069303_jump
		lea    -0x000008(%ecx),%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e0e4_func
		mov    %al,_0cefd5_data
		lea    0x000008(%ecx),%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e0e4_func
		mov    %al,_0cefd6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069303_jump:
		mov    $0x00000f,%dh
		mov    %dh,_0cefd6_data
		mov    %dh,_0cefd5_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069318_func:
		push   %ebx
		push   %edx
		push   %esi
		cmpb   $0x000002,_0cdc11_data
		jne    _069332_jump
		mov    _0cdc23_data,%dl
		test   %dl,%dl
		jne    _0693f2_jump

	_069332_jump:
		cmpw   $0x00000a,_0cedf8_data
		jle    _0693fe_jump
		xor    %ebx,%ebx
		mov    _0cdbe6_data,%dx
		mov    %bx,_0cdbe6_data
		call   _069268_func
		mov    _0cefd2_data,%bl
		mov    %dx,_0cdbe6_data
		cmp    $0x00000c,%bl
		je     _069379_jump
		cmpb   $0x00000c,_0cefd5_data
		je     _069379_jump
		cmpb   $0x00000c,_0cefd6_data
		jne    _0693e7_jump

	_069379_jump:
		testb  $0x000018,_0ced81_data
		jne    _0693e7_jump
		cmpb   $0x000002,_0cdc11_data
		jne    _06939d_jump
		cmpb   $0x000008,_0cdc10_data
		jne    _06939d_jump
		movw   $0x00005a,_0cdbfa_data

	_06939d_jump:
		call   _0691e4_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		xor    %esi,%esi
		mov    $0xffffffff,%edx
		mov    $0x000009,%eax
		mov    %si,_0cdbe4_data
		mov    %si,_0cdbe6_data
		mov    %si,_0cdbf6_data
		mov    %si,_0cedb2_data
		call   _06f3bc_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_0693e7_jump:
		mov    %dx,_0cdbe6_data
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_0693f2_jump:
		je     _0693fe_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0cdc23_data

	_0693fe_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_069404_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,%edi
		testb  $0x000002,_0ced81_data
		je     _069422_jump
		movw   $0x000008,0x000010(%esp)
		jmp    _069429_jump

	_069422_jump:
		movw   $0x000004,0x000010(%esp)

	_069429_jump:
		mov    _0ce4b2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0xffffffff,%ecx
		add    %edx,%eax
		mov    _0cc300_data,%esi
		shl    $0x000002,%eax
		mov    %cx,_0cdbee_data
		add    %eax,%esi
		mov    _0ce57c_data,%ax
		xor    %ecx,%ecx
		test   %ax,%ax
		jle    _069c07_jump

	_069461_jump:
		testb  $0x000020,0x000081(%esi)
		je     _069bdb_jump
		cmp    0x000034(%esi),%di
		je     _069bdb_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000020,_092265_data(,%eax,4)
		je     _069497_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		call   _053c60_func
		mov    %eax,%ebx
		jmp    _06949b_jump

	_069497_jump:
		mov    0x000042(%esi),%bx

	_06949b_jump:
		mov    _0cdbe6_data,%dx
		mov    0x00004c(%esi),%ax
		sub    %edx,%eax
		add    %eax,%ebx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _0694b3_jump
		neg    %eax

	_0694b3_jump:
		mov    %eax,%ebx
		mov    0x00000e(%esp),%eax
		add    $0x000002,%ebx
		sar    $0x000010,%eax
		movswl %bx,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jge    _0694cc_jump
		mov    %ebx,%eax

	_0694cc_jump:
		mov    %eax,%ebx
		mov    0x000060(%esi),%ax
		cmp    $0x00006d,%ax
		je     _0694e4_jump
		cmp    $0x0000f1,%ax
		je     _0694e4_jump
		cmp    $0x0000b3,%ax
		jne    _0694e7_jump

	_0694e4_jump:
		add    $0x000008,%ebx

	_0694e7_jump:
		mov    0x000052(%esi),%eax
		sar    $0x000010,%eax
		movswl %bx,%edx
		test   %eax,%eax
		jge    _0694f6_jump
		neg    %eax

	_0694f6_jump:
		cmp    %edx,%eax
		jge    _069bdb_jump
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		jne    _069bdb_jump
		movswl %cx,%eax
		mov    _0ce4b4_data(,%eax,2),%ax
		mov    _0cce28_data,%edx
		mov    %ax,_0cdbee_data
		cmp    $0xfffffffe,%edx
		jne    _069556_jump
		mov    _0cce24_data,%eax
		mov    %eax,%edx
		mov    $0x000002,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     _069556_jump
		incl   _0cce24_data

	_069556_jump:
		mov    $0xffffffff,%edx
		mov    $0x000001,%bh
		mov    _0cdc11_data,%cl
		mov    %dx,_0cdbf4_data
		mov    %bh,_0cefce_data
		cmp    $0x000002,%cl
		jne    _0696cb_jump
		mov    0x000060(%esi),%ax
		cmp    $0x000054,%ax
		jb     _0695ec_jump
		jbe    _0696cb_jump
		cmp    $0x0000a0,%ax
		jb     _0695c9_jump
		jbe    _06963c_jump
		cmp    $0x0000ed,%ax
		jb     _0695b0_jump
		jbe    _0696a4_jump
		cmp    $0x0000f3,%ax
		je     _0696b0_jump
		jmp    _0696bc_jump

	_0695b0_jump:
		cmp    $0x0000b2,%ax
		jb     _0696bc_jump
		cmp    $0x0000b3,%ax
		jbe    _0696cb_jump
		jmp    _0696bc_jump

	_0695c9_jump:
		cmp    $0x000056,%ax
		jb     _0696bc_jump
		cmp    $0x000058,%ax
		jbe    _0696cb_jump
		cmp    $0x00009f,%ax
		je     _0696cb_jump
		jmp    _0696bc_jump

	_0695ec_jump:
		cmp    $0x000016,%ax
		jb     _06961b_jump
		jbe    _06968e_jump
		cmp    $0x00001a,%ax
		jb     _0696bc_jump
		cmp    $0x00001c,%ax
		jbe    _06968e_jump
		cmp    $0x00003f,%ax
		je     _06968e_jump
		jmp    _0696bc_jump

	_06961b_jump:
		cmp    $0x000001,%ax
		jb     _0696bc_jump
		jbe    _06964c_jump
		cmp    $0x000010,%ax
		jb     _0696bc_jump
		cmp    $0x000011,%ax
		jbe    _06966f_jump
		jmp    _0696bc_jump

	_06963c_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00006e,%eax
		sar    $0x000010,%edx
		jmp    _0696c6_jump

	_06964c_jump:
		mov    _0cede4_data,%dx
		cmp    $0x000001,%dx
		je     _0696bc_jump
		cmp    $0x000004,%dx
		je     _0696bc_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _0696c6_jump

	_06966f_jump:
		mov    _0cede4_data,%cx
		cmp    $0x000004,%cx
		je     _0696bc_jump
		cmp    $0x000005,%cx
		je     _0696bc_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _0696c6_jump

	_06968e_jump:
		cmpw   $0x000004,_0cede4_data
		je     _0696bc_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _0696c6_jump

	_0696a4_jump:
		mov    $0xffffffff,%edx
		mov    $0x0000f8,%eax
		jmp    _0696c6_jump

	_0696b0_jump:
		mov    $0xffffffff,%edx
		mov    $0x000034,%eax
		jmp    _0696c6_jump

	_0696bc_jump:
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax

	_0696c6_jump:
		call   _06f3bc_func

	_0696cb_jump:
		mov    0x000060(%esi),%ax
		cmp    $0x000057,%ax
		jb     _069769_jump
		jbe    _06985d_jump
		cmp    $0x00009a,%ax
		jb     _06972f_jump
		jbe    _069939_jump
		cmp    $0x0000a7,%ax
		jb     _069716_jump
		jbe    _0697ec_jump
		cmp    $0x0000a9,%ax
		jb     _069a93_jump
		jbe    _0698f2_jump
		cmp    $0x0000cf,%ax
		je     _0699ea_jump
		jmp    _069a93_jump

	_069716_jump:
		cmp    $0x00009b,%ax
		jbe    _069960_jump
		cmp    $0x0000a2,%ax
		je     _0699d1_jump
		jmp    _069a93_jump

	_06972f_jump:
		cmp    $0x000083,%ax
		jb     _06975a_jump
		jbe    _069813_jump
		cmp    $0x000086,%ax
		jb     _069a93_jump
		jbe    _0697ec_jump
		cmp    $0x00008a,%ax
		je     _069912_jump
		jmp    _069a93_jump

	_06975a_jump:
		cmp    $0x000058,%ax
		je     _0698c8_jump
		jmp    _069a93_jump

	_069769_jump:
		cmp    $0x00003f,%ax
		jb     _0697ab_jump
		jbe    _0699ae_jump
		cmp    $0x000044,%ax
		jb     _06979c_jump
		jbe    _069a76_jump
		cmp    $0x000051,%ax
		jb     _069a93_jump
		jbe    _0697e1_jump
		cmp    $0x000056,%ax
		je     _069830_jump
		jmp    _069a93_jump

	_06979c_jump:
		cmp    $0x000043,%ax
		je     _069a5c_jump
		jmp    _069a93_jump

	_0697ab_jump:
		cmp    $0x000010,%ax
		jb     _0697d6_jump
		cmp    $0x000011,%ax
		jbe    _06981d_jump
		cmp    $0x00001b,%ax
		jb     _069a93_jump
		jbe    _069a76_jump
		cmp    $0x000031,%ax
		je     _069987_jump
		jmp    _069a93_jump

	_0697d6_jump:
		cmp    $0x000008,%ax
		je     _0697ec_jump
		jmp    _069a93_jump

	_0697e1_jump:
		movw   $0x000000,0x000052(%esi)
		jmp    _069a93_jump

	_0697ec_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _069a93_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _069a93_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _069a93_jump

	_069813_jump:
		cmpb   $0x000003,0x00006c(%esi)
		jne    _069a93_jump

	_06981d_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		jmp    _069a93_jump

	_069830_jump:
		cmpb   $0x000004,0x00006c(%esi)
		jne    _069a93_jump
		cmpb   $0x000000,0x000076(%esi)
		jne    _069851_jump
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _01d364_func
		jmp    _069a93_jump

	_069851_jump:
		mov    %esi,%eax
		call   _0770a0_func
		jmp    _069a93_jump

	_06985d_jump:
		mov    0x00006d(%esi),%cl
		movb   $0x000010,0x00007d(%esi)
		test   %cl,%cl
		jne    _069891_jump
		cmpb   $0x000007,0x00006c(%esi)
		jne    _069891_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		mov    0x000032(%esi),%edx
		mov    $0x00006e,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		jmp    _069a93_jump

	_069891_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _069a93_jump
		cmpb   $0x000009,0x00006c(%esi)
		jne    _069a93_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d374_func
		mov    0x000032(%esi),%edx
		mov    $0x000070,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		jmp    _069a93_jump

	_0698c8_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		movb   $0x000010,0x00007d(%esi)
		call   _01d374_func
		mov    0x000032(%esi),%edx
		mov    $0x00006f,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		jmp    _069a93_jump

	_0698f2_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _069a93_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _069a93_jump
		mov    %esi,%eax
		call   _077c30_func
		jmp    _069a93_jump

	_069912_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _069a93_jump
		cmpb   $0x00000a,0x00006c(%esi)
		jne    _069a93_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		jmp    _069a93_jump

	_069939_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _069a93_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _069a93_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		jmp    _069a93_jump

	_069960_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _069a93_jump
		cmpb   $0x00000f,0x00006c(%esi)
		jne    _069a93_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05f030_func
		jmp    _069a93_jump

	_069987_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _069a93_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _069a93_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		jmp    _069a93_jump

	_0699ae_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0699be_jump
		cmpb   $0x00000a,0x00006c(%esi)
		je     _069a93_jump

	_0699be_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05f030_func
		jmp    _069a93_jump

	_0699d1_jump:
		testb  $0x000004,_0ced89_data
		je     _069a93_jump
		mov    %esi,%eax
		call   _07a940_func
		jmp    _069a93_jump

	_0699ea_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0699fa_jump
		cmpb   $0x000001,0x00006c(%esi)
		je     _069a93_jump

	_0699fa_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0xffffffff,%ecx
		call   _01d374_func
		mov    0x000081(%esi),%ah
		mov    $0x000001,%dl
		and    $0x0000df,%ah
		mov    $0x000002,%ebx
		mov    %ah,0x000081(%esi)
		mov    $0x000001,%eax
		mov    %dl,_0cefa9_data
		mov    %ax,_0cdbe4_data
		mov    _0ced80_data,%ax
		xor    %edx,%edx
		mov    %ax,_0ced7e_data
		mov    $_0ced80_data,%eax
		mov    %cx,_0cdbee_data
		call   _07c0b0_func
		orb    $0x000001,_0ced80_data
		jmp    _069a93_jump

	_069a5c_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _069a93_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _069a93_jump
		mov    $0x000009,%edx
		mov    %esi,%eax
		call   _01d364_func
		jmp    _069a93_jump

	_069a76_jump:
		cmpw   $0x000001,_0cdbe6_data
		jle    _069a8a_jump
		mov    _0cdbe4_data,%eax
		sar    $0x000010,%eax
		jmp    _069a8f_jump

	_069a8a_jump:
		mov    $0x000002,%eax

	_069a8f_jump:
		mov    %ax,0x00004a(%esi)

	_069a93_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _069b23_jump
		mov    _0cdbb0_data,%eax
		mov    0x000004(%eax),%eax
		mov    $0x000004,%cl
		movsbw 0x000018(%eax),%ax
		test   %ax,%ax
		js     _069ab9_jump
		sar    %cl,%ax
		jmp    _069ac2_jump

	_069ab9_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_069ac2_jump:
		movswl %ax,%edx
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _069ad3_jump
		neg    %eax

	_069ad3_jump:
		cmp    %edx,%eax
		jl     _069af8_jump
		mov    _0ced81_data,%al
		and    $0x000001,%al
		cmp    $0x000001,%al
		jne    _069af8_jump
		mov    $0x000003,%ebx
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		jmp    _069b23_jump

	_069af8_jump:
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		call   _01d36c_func
		mov    $0x000008,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		cmpw   $0x0000c8,_0cdbf6_data
		jle    _069b23_jump
		call   _0691b0_func

	_069b23_jump:
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		mov    0x00000c(%esp),%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    _0cdc0d_data,%dl
		add    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0cdbd0_data,%ax
		sub    %eax,%edx
		mov    0x000060(%esi),%ax
		mov    %dx,_0cdbe6_data
		cmp    $0x0000fe,%ax
		jne    _069bc2_jump
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		xor    %ebx,%ebx
		mov    _0cdbcc_data,%ecx
		mov    _0cdc0c_data,%bl
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %ecx,%ebx
		add    %edx,%eax
		sub    %eax,%ebx
		mov    %ebx,(%esp)
		movsbw 0x000076(%esi),%ax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _069baa_jump
		sar    %cl,%ax
		jmp    _069bb3_jump

	_069baa_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_069bb3_jump:
		sub    %ax,_0cdbe6_data
		xor    %bh,%bh
		mov    %bh,_0cefce_data

	_069bc2_jump:
		mov    $0xffffffff,%ecx
		movb   $0x000000,0x000000(%ebp)
		mov    %cx,_0cdbf6_data
		mov    %cx,_0cee0c_data
		jmp    _069c07_jump

	_069bdb_jump:
		inc    %ecx
		movswl %cx,%eax
		mov    _0ce4b2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%esi
		mov    _0ce57c_data,%dx
		add    %eax,%esi
		cmp    %dx,%cx
		jl     _069461_jump

	_069c07_jump:
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     _069c25_jump
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _069c25_jump
		mov    %di,_0cdbee_data
		jmp    _069c47_jump

	_069c25_jump:
		mov    _0cdbec_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _069c47_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		movw   $0x000000,0x000054(%edx,%eax,4)

	_069c47_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_069c50_func:
		push   %esi
		push   %edi
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%esi
		mov    _0cdbb0_data,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    %dl,%al
		shl    $0x000003,%eax
		mov    (%esi),%edx
		add    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _069c79_jump
		neg    %eax

	_069c79_jump:
		sar    $0x000004,%eax
		mov    $0x000070,%ebx
		movsbl %al,%eax
		lea    0x000001(%edx),%esi
		cmp    %ebx,%eax
		jle    _069c8d_jump
		mov    %ebx,%eax

	_069c8d_jump:
		mov    %al,%bl
		mov    _0cdbe4_data,%di
		neg    %bl
		test   %di,%di
		jle    _069cb2_jump
		movsbl %al,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		movb   $0x0000f0,(%esi)
		cmp    %ebx,%eax
		jge    _069cad_jump
		mov    %ebx,%eax

	_069cad_jump:
		mov    %al,(%edx)
		pop    %edi
		pop    %esi
		ret    

	_069cb2_jump:
		jge    _069ccb_jump
		xor    %eax,%eax
		mov    %cl,%al
		movsbl %bl,%ebx
		neg    %eax
		cmp    %ebx,%eax
		jle    _069cc3_jump
		mov    %ebx,%eax

	_069cc3_jump:
		mov    %al,(%esi)
		movb   $0x000010,(%edx)
		pop    %edi
		pop    %esi
		ret    

	_069ccb_jump:
		mov    %cl,%ah
		mov    %cl,(%esi)
		neg    %ah
		mov    %ah,(%esi)
		mov    %cl,(%edx)
		pop    %edi
		pop    %esi
		ret    



_069cd8_func:
		push   %ebx
		push   %ecx
		push   %edx
		test   %al,%al
		je     _069da0_jump
		mov    $0x000030,%ecx
		mov    $0x000011,%edx
		mov    _0cedb0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069c50_func
		mov    $0x000030,%ecx
		mov    $0x000012,%edx
		mov    _0cedb0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069c50_func
		mov    $0x000030,%ecx
		mov    $0x000013,%edx
		mov    _0cedb0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069c50_func
		mov    $0x000030,%ecx
		mov    $0x000003,%edx
		mov    _0cedb0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069c50_func
		mov    $0x000030,%ecx
		mov    $0x000005,%edx
		mov    _0cedb0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069c50_func
		mov    $0x000030,%ecx
		mov    $0x000004,%edx
		mov    _0cedb0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069c50_func
		mov    $0x000030,%ecx
		mov    $0x000020,%edx
		jmp    _069ea9_jump

	_069da0_jump:
		mov    $0x000020,%ecx
		mov    $0x000002,%eax
		mov    _0cedb0_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		call   _069c50_func
		mov    $0x000020,%ecx
		mov    $0x000001,%edx
		mov    _0cedb0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069c50_func
		mov    $0x000020,%ecx
		mov    _0cedb0_data,%ebx
		mov    $0x000002,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		call   _069c50_func
		mov    $0x000020,%ecx
		mov    $0x000018,%edx
		mov    _0cedb0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069c50_func
		mov    $0x000020,%ecx
		mov    $0x00000b,%edx
		mov    _0cedb0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069c50_func
		mov    $0x000020,%ecx
		mov    $0x00000c,%edx
		mov    _0cedb0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069c50_func
		mov    $0x000020,%ecx
		mov    $0x00000d,%edx
		mov    _0cedb0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069c50_func
		mov    $0x000020,%ecx
		mov    $0x000003,%edx
		mov    _0cedb0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069c50_func
		mov    $0x000020,%ecx
		mov    $0x000005,%edx
		mov    _0cedb0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069c50_func
		mov    $0x000020,%ecx
		mov    $0x000004,%edx

	_069ea9_jump:
		mov    _0cedb0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069c50_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069ec0_func:
		push   %edx
		mov    _0cedd8_data,%dx
		test   %dx,%dx
		je     _069ed8_jump
		movw   $0x000001,_0cdbec_data
		pop    %edx
		ret    

	_069ed8_jump:
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _069f14_jump
		mov    _0cefce_data,%al
		test   %al,%al
		jbe    _069ef4_jump
		cmp    $0x000001,%al
		jne    _069f1b_jump
		jmp    _069f14_jump

	_069ef4_jump:
		mov    _0cedb0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _069f02_jump
		neg    %eax

	_069f02_jump:
		cmp    $0x000100,%eax
		jle    _069f14_jump
		movw   $0x000001,_0cdbec_data
		pop    %edx
		ret    

	_069f14_jump:
		mov    %dx,_0cdbec_data

	_069f1b_jump:
		pop    %edx
		ret    



_069f20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0cdc10_data,%dl
		testb  $0x000001,0x000007(%eax,%edx,8)
		je     _06a1df_jump
		xor    %edx,%edx
		mov    _0cefd3_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _06a1df_jump
		mov    _0cdc11_data,%bh
		cmp    $0x000007,%bh
		jne    _069f98_jump
		mov    _0cdbe4_data,%ax
		mov    %bh,%cl
		cwtl   
		shl    %cl,%eax
		mov    _0cdbe6_data,%cx
		sub    $0x000002,%ecx
		mov    %ax,_0cedb2_data
		mov    %cx,_0cdbe6_data
		jmp    _069fb1_jump

	_069f98_jump:
		cmp    $0x000004,%bh
		jne    _069fa8_jump
		movw   $0x00fffd,_0cdbe6_data
		jmp    _069fb1_jump

	_069fa8_jump:
		movw   $0x00fffb,_0cdbe6_data

	_069fb1_jump:
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		mov    _0cdbe6_data,%cx
		cmp    $0xffffffff,%eax
		je     _069fe9_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		mov    0x00004a(%edx,%eax,4),%ebx
		sar    $0x000010,%ebx
		movswl %cx,%eax
		cmp    %ebx,%eax
		jle    _069fe2_jump
		mov    %ebx,%eax

	_069fe2_jump:
		mov    %eax,%ecx
		jmp    _06a09f_jump

	_069fe9_jump:
		mov    _0cdc06_data,%al
		cmp    $0x00000c,%al
		jb     _06a01d_jump
		jbe    _06a09f_jump
		cmp    $0x000014,%al
		jb     _06a011_jump
		cmp    $0x000015,%al
		jbe    _06a05f_jump
		cmp    $0x000018,%al
		jb     _06a072_jump
		jmp    _06a09f_jump

	_06a011_jump:
		cmp    $0x000012,%al
		jb     _06a09f_jump
		jbe    _06a038_jump
		jmp    _06a049_jump

	_06a01d_jump:
		cmp    $0x000004,%al
		jb     _06a02e_jump
		cmp    $0x000005,%al
		jbe    _06a05f_jump
		cmp    $0x000008,%al
		jb     _06a072_jump
		jmp    _06a09f_jump

	_06a02e_jump:
		cmp    $0x000002,%al
		jb     _06a09f_jump
		ja     _06a049_jump

	_06a038_jump:
		mov    _0cdbe4_data,%di
		cmp    $0x000005,%di
		jle    _06a09f_jump
		mov    %edi,%ecx
		jmp    _06a09c_jump

	_06a049_jump:
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffb,%eax
		jge    _06a09f_jump
		mov    _0cdbe4_data,%cx
		jmp    _06a09e_jump

	_06a05f_jump:
		mov    _0cdbe4_data,%si
		cmp    $0x00000a,%si
		jle    _06a09f_jump
		mov    $0x000001,%cl
		mov    %esi,%eax
		jmp    _06a087_jump

	_06a072_jump:
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff6,%eax
		jge    _06a09f_jump
		mov    $0x000001,%cl
		mov    _0cdbe4_data,%ax

	_06a087_jump:
		test   %ax,%ax
		js     _06a091_jump
		sar    %cl,%ax
		jmp    _06a09a_jump

	_06a091_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06a09a_jump:
		mov    %eax,%ecx

	_06a09c_jump:
		neg    %ecx

	_06a09e_jump:
		dec    %ecx

	_06a09f_jump:
		mov    %cx,_0cdbe6_data
		call   _069ec0_func
		testb  $0x000002,_0ced81_data
		je     _06a0bb_jump
		mov    $0x000100,%edx
		jmp    _06a0c0_jump

	_06a0bb_jump:
		mov    $0x000200,%edx

	_06a0c0_jump:
		cmpb   $0x000000,_0cefa9_data
		je     _06a104_jump
		xor    %eax,%eax
		call   _069cd8_func
		cmpb   $0x000000,_0cdc11_data
		jne    _06a0f3_jump
		cmpb   $0x000028,_0cdc10_data
		jne    _06a0f3_jump
		mov    $0x000019,%ebx
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		jmp    _06a146_jump

	_06a0f3_jump:
		mov    $0x00001b,%ebx
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		jmp    _06a146_jump

	_06a104_jump:
		mov    _0cedb0_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		test   %eax,%eax
		jge    _06a115_jump
		neg    %eax

	_06a115_jump:
		cmp    %edx,%eax
		setg   %al
		mov    %al,%dl
		xor    %eax,%eax
		mov    %dl,%al
		call   _069cd8_func
		test   %dl,%dl
		je     _06a13a_jump
		mov    $0x000011,%ebx
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		jmp    _06a146_jump

	_06a13a_jump:
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx

	_06a146_jump:
		call   _01d374_func
		mov    $0xffffffff,%ebx
		mov    $0xffffffff,%ecx
		xor    %eax,%eax
		xor    %dh,%dh
		mov    %ax,_0cecca_data
		mov    %dh,_0cefde_data
		mov    %bx,_0cee0c_data
		mov    %cx,_0cdbee_data
		mov    _0cdbcc_data,%ax
		xor    %dl,%dl
		xor    %bl,%bl
		xor    %cl,%cl
		mov    %dx,_0cedf8_data
		mov    %bl,_0cdc15_data
		mov    %cl,_0cefd3_data
		mov    %ax,_0cedf2_data
		mov    _0cdbd0_data,%ax
		xor    %bh,%bh
		xor    %ch,%ch
		mov    %bh,_0cdc16_data
		mov    %ax,_0cedf0_data
		mov    _0ced81_data,%al
		mov    %ch,_0cdcd4_data
		test   $0x000002,%al
		je     _06a1df_jump
		mov    $0x000001,%cl
		mov    _0cdbe6_data,%ax
		test   %ax,%ax
		js     _06a1cf_jump
		sar    %cl,%ax
		jmp    _06a1d8_jump

	_06a1cf_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06a1d8_jump:
		dec    %eax
		mov    %ax,_0cdbe6_data

	_06a1df_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06a1e8_switch:
		.long   _06a2a8_case
		.long   _06a2a8_case
		.long   _06a2b2_case
		.long   _06a2a8_case
		.long   _06a2ba_case
		.long   _06a2a8_case




_06a200_func:
		push   %esi
		push   %edi
		sub    $0x000018,%esp
		mov    %al,0x000014(%esp)
		mov    %ebx,%edi
		mov    %ecx,%esi
		test   %al,%al
		jne    _06a21f_jump
		mov    %bx,_0cedb2_data
		xor    %ebx,%ebx
		jmp    _06a3b2_jump

	_06a21f_jump:
		xor    %eax,%eax
		movswl %bx,%ebx
		mov    0x000014(%esp),%al
		imul   %ebx,%eax
		mov    $0x000008,%cl
		test   %eax,%eax
		je     _06a235_jump
		sar    %cl,%eax
		jmp    _06a23b_jump

	_06a235_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_06a23b_jump:
		mov    %eax,0x000008(%esp)
		xor    %eax,%eax
		mov    $0x000003,%cl
		mov    0x000014(%esp),%al
		test   %ax,%ax
		js     _06a251_jump
		sar    %cl,%ax
		jmp    _06a25a_jump

	_06a251_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06a25a_jump:
		test   %ax,%ax
		je     _06a264_jump
		movswl %ax,%ebx
		jmp    _06a269_jump

	_06a264_jump:
		mov    $0x000001,%ebx

	_06a269_jump:
		mov    $0x000002,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    $0x000003,%cl
		mov    %eax,0x000004(%esp)
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    0x000008(%esp),%ecx
		add    (%esp),%ecx
		add    %eax,%ecx
		mov    _0cede4_data,%ax
		dec    %eax
		mov    %ecx,0x000010(%esp)
		cmp    $0x000005,%ax
		ja     _06a2ba_case
		and    $0x00ffff,%eax
		jmp    *%cs:_06a1e8_switch(,%eax,4)

	_06a2a8_case:
		movl   $0x000006,0x00000c(%esp)
		jmp    _06a2ba_case

	_06a2b2_case:
		movl   $0x000003,0x00000c(%esp)

	_06a2ba_case:
		mov    0x000010(%esp),%ecx
		test   %cx,%cx
		jle    _06a30e_jump
		cmpw   $0x000000,0x000004(%esp)
		jle    _06a2e2_jump
		mov    0x00000c(%esp),%eax
		mov    $0x000008,%cl
		add    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		jmp    _06a2e4_jump

	_06a2e2_jump:
		xor    %eax,%eax

	_06a2e4_jump:
		cmpw   $0x000000,0x000008(%esp)
		jle    _06a2f1_jump
		movswl %di,%edx
		jmp    _06a2f3_jump

	_06a2f1_jump:
		xor    %edx,%edx

	_06a2f3_jump:
		mov    $0x000008,%cl
		add    %eax,%edx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    _0cedb2_data,%cx
		add    %edx,%eax
		cmp    %cx,%ax
		jge    _06a361_jump
		mov    %ecx,%eax
		jmp    _06a361_jump

	_06a30e_jump:
		jge    _06a35b_jump
		cmpw   $0x000000,0x000004(%esp)
		jge    _06a32f_jump
		sub    0x00000c(%esp),%edx
		mov    $0x000008,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		jmp    _06a331_jump

	_06a32f_jump:
		xor    %eax,%eax

	_06a331_jump:
		cmpw   $0x000000,0x000008(%esp)
		jge    _06a33e_jump
		movswl %di,%edx
		jmp    _06a340_jump

	_06a33e_jump:
		xor    %edx,%edx

	_06a340_jump:
		mov    $0x000008,%cl
		add    %eax,%edx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    _0cedb2_data,%cx
		add    %edx,%eax
		cmp    %cx,%ax
		jle    _06a361_jump
		mov    %ecx,%eax
		jmp    _06a361_jump

	_06a35b_jump:
		mov    _0cedb2_data,%ax

	_06a361_jump:
		mov    0x000010(%esp),%esi
		test   %si,%si
		je     _06a3b2_jump
		mov    _0cedb2_data,%dx
		add    %esi,%edx
		test   %ax,%ax
		jle    _06a393_jump
		cmp    _0cedb2_data,%ax
		jle    _06a388_jump
		mov    %dx,_0cedb2_data

	_06a388_jump:
		cmp    _0cedb2_data,%ax
		jge    _06a3b2_jump
		jmp    _06a3ac_jump

	_06a393_jump:
		cmp    _0cedb2_data,%ax
		jge    _06a3a3_jump
		mov    %dx,_0cedb2_data

	_06a3a3_jump:
		cmp    _0cedb2_data,%ax
		jle    _06a3b2_jump

	_06a3ac_jump:
		mov    %ax,_0cedb2_data

	_06a3b2_jump:
		mov    _0cedb2_data,%cx
		test   %cx,%cx
		je     _06a41d_jump
		mov    %ecx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _06a3cc_jump
		sar    %cl,%ax
		jmp    _06a3d5_jump

	_06a3cc_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06a3d5_jump:
		cwtl   
		xor    %edx,%edx
		call   _053c60_func
		mov    %ax,_0cdbe4_data
		mov    $_0cdba4_data,%eax
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _06a424_jump
		cmpb   $0x000002,_0cdc11_data
		je     _06a424_jump
		xor    %edi,%edi
		mov    %di,_0cdbe4_data
		mov    %di,_0cedb2_data
		mov    %di,_0cdbec_data
		jmp    _06a424_jump

	_06a41d_jump:
		mov    %cx,_0cdbe4_data

	_06a424_jump:
		mov    _0cdc11_data,%cl
		test   %cl,%cl
		je     _06a438_jump
		cmp    $0x000001,%cl
		je     _06a438_jump
		cmp    $0x000003,%cl
		jne    _06a44f_jump

	_06a438_jump:
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06a44f_jump
		mov    $_0cdba4_data,%eax
		call   _0252c0_func

	_06a44f_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _06a464_jump
		cmpb   $0x00000f,_0cdc10_data
		jne    _06a464_jump
		add    $0x000002,%ebx

	_06a464_jump:
		mov    _0cedb2_data,%cx
		cmp    %cx,%bx
		jg     _06a47c_jump
		mov    %ecx,%eax
		sub    %ebx,%eax
		mov    %ax,_0cedb2_data
		jmp    _06a4a8_jump

	_06a47c_jump:
		movswl %bx,%eax
		mov    _0cedb0_data,%edx
		neg    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _06a49f_jump
		mov    %ecx,%edi
		add    %ebx,%edi
		mov    %di,_0cedb2_data
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		ret    

	_06a49f_jump:
		xor    %esi,%esi
		mov    %si,_0cedb2_data

	_06a4a8_jump:
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		ret    

_06a4b0_switch:
		.long   _06a841_case
		.long   _06a84a_case
		.long   _06a80b_case
		.long   _06a80b_case
		.long   _06a817_case
		.long   _06a817_case




_06a4c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cede4_data,%ax
		xor    %esi,%esi
		cmp    $0x000003,%ax
		jne    _06a4e2_jump
		mov    $0x000020,%bh
		jmp    _06a4e4_jump

	_06a4e2_jump:
		mov    $0x000010,%bh

	_06a4e4_jump:
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06a649_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		testb  $0x000020,0x000081(%ecx)
		jne    _06a519_jump
		movw   $0x00ffff,_0cdbee_data

	_06a519_jump:
		mov    0x000052(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06a525_jump
		neg    %eax

	_06a525_jump:
		cmp    $0x000008,%eax
		jg     _06a542_jump
		cmpw   $0x000000,0x000054(%ecx)
		jl     _06a542_jump
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06a649_jump

	_06a542_jump:
		mov    _0cdbec_data,%edx
		mov    %esp,%eax
		sar    $0x000010,%edx
		call   _069404_func
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06a649_jump
		mov    0x000052(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06a56f_jump
		neg    %eax

	_06a56f_jump:
		cmp    $0x000008,%eax
		jle    _06a649_jump
		mov    $0xffffffff,%eax
		mov    0x000060(%ecx),%dx
		mov    %ax,_0cdbee_data
		cmp    $0x0000fe,%dx
		jne    _06a597_jump
		movw   $0x000001,_0cdbec_data

	_06a597_jump:
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		mov    _0cdc11_data,%cl
		call   _01d36c_func
		cmpb   $0x000000,_0cefa9_data
		je     _06a5d3_jump
		test   %cl,%cl
		jne    _06a5cc_jump
		cmpb   $0x000028,_0cdc10_data
		jne    _06a5cc_jump
		mov    $0x00001a,%edx
		jmp    _06a62f_jump

	_06a5cc_jump:
		mov    $0x00001c,%edx
		jmp    _06a62f_jump

	_06a5d3_jump:
		cmp    $0x000001,%cl
		jne    _06a60e_jump
		mov    _0cdc10_data,%dh
		cmp    $0x000009,%dh
		je     _06a5e8_jump
		cmp    $0x00000b,%dh
		jne    _06a60e_jump

	_06a5e8_jump:
		mov    _0cdc25_data,%ah
		test   $0x000008,%ah
		sete   %al
		and    $0x000001,%al
		mov    %ah,%dl
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,_0cdc25_data
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,_0cdc25_data

	_06a60e_jump:
		cmp    $0x000001,%cl
		jne    _06a62a_jump
		cmpb   $0x000003,_0cdc10_data
		jne    _06a623_jump
		mov    $0x000020,%edx
		jmp    _06a62f_jump

	_06a623_jump:
		mov    $0x000018,%edx
		jmp    _06a62f_jump

	_06a62a_jump:
		mov    $0x000001,%edx

	_06a62f_jump:
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		xor    %edi,%edi
		mov    %di,_0cdbf6_data
		mov    %di,_0cedf8_data

	_06a649_jump:
		cmpb   $0x000000,_0cefc9_data
		jne    _06a65c_jump
		mov    $_0cdba4_data,%eax
		call   _053ce4_func

	_06a65c_jump:
		cmpb   $0x000001,_0cdc11_data
		jne    _06a681_jump
		mov    _0cdc10_data,%dl
		cmp    $0x000009,%dl
		je     _06a67a_jump
		cmp    $0x000030,%dl
		je     _06a67a_jump
		cmp    $0x00000b,%dl
		jne    _06a681_jump

	_06a67a_jump:
		negw   _0cdbe4_data

	_06a681_jump:
		mov    $0x000004,%cl
		mov    _0cdbe4_data,%ax
		cwtl   
		shl    %cl,%eax
		mov    _0cdbe4_data,%cx
		mov    %eax,%edi
		test   %cx,%cx
		je     _06a6d0_jump
		cwtl   
		test   %eax,%eax
		jge    _06a6a1_jump
		neg    %eax

	_06a6a1_jump:
		cmp    $0x000100,%eax
		jg     _06a6ac_jump
		mov    $0x0000ff,%al
		jmp    _06a6ae_jump

	_06a6ac_jump:
		xor    %al,%al

	_06a6ae_jump:
		mov    _0cedd8_data,%dx
		test   %dx,%dx
		jle    _06a6c4_jump
		addw   $0x00000a,_0cdbe4_data
		jmp    _06a6d2_jump

	_06a6c4_jump:
		jge    _06a6d2_jump
		subw   $0x00000a,_0cdbe4_data
		jmp    _06a6d2_jump

	_06a6d0_jump:
		xor    %al,%al

	_06a6d2_jump:
		mov    _0cdc11_data,%ch
		cmp    $0x000002,%ch
		jne    _06a72b_jump
		cmpb   $0x00000f,_0cdc10_data
		je     _06a6f0_jump
		cmpw   $0x000000,_0cdbec_data
		je     _06a724_jump

	_06a6f0_jump:
		testb  $0x000008,_0cdc25_data
		je     _06a703_jump
		cmpw   $0x000000,_0cedb2_data
		jg     _06a716_jump

	_06a703_jump:
		testb  $0x000008,_0cdc25_data
		jne    _06a71d_jump
		cmpw   $0x000000,_0cedb2_data
		jge    _06a71d_jump

	_06a716_jump:
		mov    $0x00000c,%bl
		jmp    _06a8a0_jump

	_06a71d_jump:
		mov    $0x000008,%bl
		jmp    _06a8a0_jump

	_06a724_jump:
		mov    %al,%bl
		jmp    _06a8a0_jump

	_06a72b_jump:
		test   %ch,%ch
		je     _06a73d_jump
		cmp    $0x000001,%ch
		je     _06a73d_jump
		cmp    $0x000003,%ch
		jne    _06a8a2_jump

	_06a73d_jump:
		mov    _0cdbec_data,%esi
		sar    $0x000010,%esi
		cmp    $0xffffffff,%esi
		je     _06a7ac_jump
		mov    %esi,%eax
		shl    $0x000005,%eax
		add    %esi,%eax
		mov    _0cc300_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmpw   $0x0000fe,0x000060(%esi)
		jne    _06a7a5_jump
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _06a771_jump
		neg    %eax

	_06a771_jump:
		lea    0x000001(%eax),%ecx
		mov    $0x0000ff,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000001,%cl
		mov    %al,%bl
		movsbw 0x000076(%esi),%ax
		test   %ax,%ax
		js     _06a793_jump
		sar    %cl,%ax
		jmp    _06a79c_jump

	_06a793_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06a79c_jump:
		mov    %eax,%esi
		neg    %esi
		jmp    _06a8a2_jump

	_06a7a5_jump:
		xor    %bl,%bl
		jmp    _06a8a0_jump

	_06a7ac_jump:
		mov    _0cdc06_data,%bl
		cmp    $0x00000f,%bl
		jb     _06a7e1_jump
		jbe    _06a823_jump
		cmp    $0x000014,%bl
		jb     _06a7d1_jump
		cmp    $0x000015,%bl
		jbe    _06a80b_case
		cmp    $0x000018,%bl
		jb     _06a817_case
		jmp    _06a853_jump

	_06a7d1_jump:
		cmp    $0x000012,%bl
		jb     _06a853_jump
		jbe    _06a841_case
		jmp    _06a84a_case

	_06a7e1_jump:
		cmp    $0x000008,%bl
		jb     _06a801_jump
		cmp    $0x000009,%bl
		jbe    _06a853_jump
		cmp    $0x00000c,%bl
		jb     _06a853_jump
		jbe    _06a89e_jump
		cmp    $0x00000e,%bl
		je     _06a89e_jump
		jmp    _06a853_jump

	_06a801_jump:
		cmp    $0x000001,%bl
		jbe    _06a853_jump
		jmp    _06a89e_jump

	_06a80b_case:
		mov    $0xfffffffc,%esi
		mov    %bh,%bl
		jmp    _06a8a2_jump

	_06a817_case:
		mov    $0x000004,%esi
		mov    %bh,%bl
		jmp    _06a8a2_jump

	_06a823_jump:
		mov    _0cdc09_data,%ah
		sub    $0x000012,%ah
		cmp    $0x000005,%ah
		ja     _06a89e_jump
		xor    %edx,%edx
		mov    %ah,%dl
		jmp    *%cs:_06a4b0_switch(,%edx,4)

	_06a841_case:
		mov    $0xfffffffa,%esi
		mov    %bh,%bl
		jmp    _06a8a2_jump

	_06a84a_case:
		mov    $0x000006,%esi
		mov    %bh,%bl
		jmp    _06a8a2_jump

	_06a853_jump:
		xor    %edx,%edx
		mov    _0cdc06_data,%dl
		testb  $0x000001,_092224_data(%edx)
		jne    _06a87c_jump
		xor    %edx,%edx
		mov    _0cdc0a_data,%dl
		mov    _092224_data(%edx),%cl
		test   $0x000008,%cl
		jne    _06a87c_jump
		test   $0x000002,%cl
		jne    _06a89e_jump

	_06a87c_jump:
		cmpw   $0x000000,_0cdbe4_data
		jne    _06a89a_jump
		cmpw   $0x000000,_0cedb2_data
		jne    _06a89a_jump
		cmpw   $0x000000,_0cedd8_data
		je     _06a89e_jump

	_06a89a_jump:
		mov    %bh,%bl
		jmp    _06a8a0_jump

	_06a89e_jump:
		mov    %al,%bl

	_06a8a0_jump:
		xor    %esi,%esi

	_06a8a2_jump:
		cmpb   $0x000001,_0cefa9_data
		jne    _06a8ad_jump
		shr    %bl

	_06a8ad_jump:
		mov    _0cedd6_data,%ecx
		movswl %di,%edx
		movswl %si,%esi
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    %bl,%al
		mov    %edx,%ebx
		mov    %esi,%edx
		call   _06a200_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06a8d4_switch:
		.long   _06a95b_case
		.long   _06a969_case
		.long   _06a969_case
		.long   _06a95b_case
		.long   _06a95b_case
		.long   _06a95b_case
		.long   _06a969_case
		.long   _06a95b_case
		.long   _06a943_case
		.long   _06a94f_case
		.long   _06a943_case
		.long   _06a94f_case




_06a904_func:
		push   %ebx
		push   %edx
		cmpb   $0x000001,_0cdc11_data
		je     _06a91c_jump
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06a986_jump

	_06a91c_jump:
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0cdc10_data,%al
		add    %edx,%eax
		sub    $0x000100,%eax
		cmp    $0x00000b,%eax
		ja     _06a969_case
		jmp    *%cs:_06a8d4_switch(,%eax,4)

	_06a943_case:
		mov    $0x00002f,%ebx
		mov    $_0cdba4_data,%eax
		jmp    _06a962_jump

	_06a94f_case:
		mov    $0x000030,%ebx
		mov    $_0cdba4_data,%eax
		jmp    _06a962_jump

	_06a95b_case:
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx

	_06a962_jump:
		xor    %edx,%edx
		call   _01d374_func

	_06a969_case:
		mov    _0cedb2_data,%bx
		test   %bx,%bx
		jne    _06a9ae_jump
		mov    %bx,_0cdbe6_data
		mov    %bx,_0cdbe4_data
		pop    %edx
		pop    %ebx
		ret    

	_06a986_jump:
		cmpb   $0x000004,_0cdc11_data
		jne    _06a9ae_jump
		mov    _0cdcd4_data,%dh
		test   %dh,%dh
		jne    _06a9ae_jump
		xor    %dl,%dl
		mov    $_0cdba4_data,%eax
		mov    %dx,_0cdbe6_data
		xor    %edx,%edx
		call   _01d364_func

	_06a9ae_jump:
		pop    %edx
		pop    %ebx
		ret    



_06a9b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%ebx
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdc10_data,%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _06aae2_jump
		cmpb   $0x000001,_0cefd3_data
		jne    _06aae2_jump
		call   *_0c4d78_data
		test   %ax,%ax
		je     _06aae2_jump
		testb  $0x000008,_0ced80_data
		je     _06aa99_jump
		testb  $0x000018,_0ced81_data
		jne    _06aa99_jump
		mov    $0x000002,%al
		mov    $0x00000e,%edx
		mov    %al,_0cefd3_data
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cdc11_data,%al
		mov    _0cdc10_data,%dl
		mov    (%ebx,%eax,4),%eax
		mov    0x000005(%eax,%edx,8),%cl
		and    $0x00000f,%cl
		mov    %cl,0x000005(%eax,%edx,8)
		mov    %cl,%ch
		or     $0x000030,%ch
		mov    %ch,0x000005(%eax,%edx,8)
		mov    0x000008(%ebx),%eax
		mov    $0xffffffff,%esi
		mov    0x00007d(%eax),%dl
		mov    %si,_0cee0c_data
		and    $0x00000f,%dl
		xor    %cl,%cl
		mov    %dl,0x00007d(%eax)
		mov    %dl,%dh
		mov    %cl,_0cefc7_data
		or     $0x000020,%dh
		mov    %cl,_0cefbb_data
		mov    %dh,0x00007d(%eax)
		xor    %al,%al
		mov    %si,_0cdbf6_data
		xor    %ah,%ah
		mov    %cl,_0cdc23_data
		mov    %ax,_0cedaa_data
		jmp    _06aae2_jump

	_06aa99_jump:
		testb  $0x000004,_0ced80_data
		je     _06aae2_jump
		testb  $0x000018,_0ced81_data
		jne    _06aae2_jump
		mov    $0x000002,%cl
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		mov    %cl,_0cefd3_data
		call   _01d364_func
		xor    %ch,%ch
		mov    $0x000032,%edx
		mov    %ch,_0cdc0f_data
		mov    $0xffffffff,%ecx
		mov    %dx,_0cee0c_data
		mov    %cx,_0cdbf6_data

	_06aae2_jump:
		cmpb   $0x00000f,_0cdc10_data
		jne    _06ab2d_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0cdc10_data,%dl
		mov    _0cdc11_data,%al
		shl    $0x000003,%edx
		mov    (%ebx,%eax,4),%eax
		add    %edx,%eax
		mov    0x000005(%eax),%dl
		and    $0x0000f0,%dl
		cmp    $0x000020,%dl
		jne    _06ab2d_jump
		mov    0x000005(%eax),%dl
		and    $0x00000f,%dl
		mov    %dl,0x000005(%eax)
		mov    %dl,%dh
		or     $0x0000a0,%dh
		xor    %cl,%cl
		mov    %dh,0x000005(%eax)
		mov    %cl,_0cdc15_data
		movb   $0x000014,_0cdc16_data

	_06ab2d_jump:
		cmpb   $0x000003,_0cefd3_data
		jne    _06ab41_jump
		call   *_0c4d78_data
		test   %ax,%ax
		jne    _06ab4f_jump

	_06ab41_jump:
		cmpw   $0x000000,_0cee0c_data
		jne    _06acf6_jump

	_06ab4f_jump:
		testb  $0x000008,_0ced80_data
		je     _06acca_jump
		testb  $0x000018,_0ced81_data
		jne    _06acca_jump
		mov    _0cdc10_data,%cl
		cmp    $0x00000f,%cl
		jne    _06acf6_jump
		cmpw   $0x000000,_0cee0c_data
		je     _06acf6_jump
		movb   $0x000002,_0cefd3_data
		movb   $0x000001,_0cefc7_data
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%edx
		xor    %ch,%ch
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %cl,%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %ch,_0cdc15_data
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x0000a0,%bh
		mov    $0x000014,%cl
		mov    %bh,0x000005(%edx,%eax,8)
		mov    %cl,_0cdc16_data
		mov    _0cefbb_data,%ch
		mov    $0xffffffff,%edi
		inc    %ch
		mov    %di,_0cdbe6_data
		mov    %ch,_0cefbb_data
		cmp    $0x000002,%ch
		jb     _06acbb_jump
		cmpw   $0x000000,_0ced9c_data
		jl     _06aca1_jump
		testb  $0x000008,_0cdc25_data
		jne    _06ac27_jump
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jg     _06ac27_jump
		call   _0407b4_func
		test   %ax,%ax
		je     _06ac27_jump
		movw   $0x00ffd0,_0cdbe4_data
		jmp    _06ac62_jump

	_06ac27_jump:
		testb  $0x000008,_0cdc25_data
		je     _06ac4f_jump
		cmpw   $0x000002,_0cdbe4_data
		jl     _06ac4f_jump
		call   _040824_func
		test   %ax,%ax
		je     _06ac4f_jump
		movw   $0x000030,_0cdbe4_data
		jmp    _06ac62_jump

	_06ac4f_jump:
		cmpw   $0x000000,_0cdbe4_data
		jne    _06ac62_jump
		movw   $0x00fffe,_0cdbe6_data

	_06ac62_jump:
		mov    $0x000046,%ebx
		mov    $0x000004,%cl
		mov    _0cdbe4_data,%ax
		mov    %bx,_0cee0c_data
		xor    %bl,%bl
		xor    %edx,%edx
		mov    %bl,_0cefbb_data
		mov    _0cedd6_data,%ebx
		cwtl   
		shl    %cl,%eax
		sar    $0x000010,%ebx
		cwtl   
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    $0x0000ff,%eax
		call   _06a200_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06aca1_jump:
		mov    $0x000001,%ah
		mov    $0x000014,%ebx
		mov    %ah,_0cefbb_data
		mov    %bx,_0ced9c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06acbb_jump:
		movw   $0x000014,_0ced9c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06acca_jump:
		mov    $0x000004,%dh
		mov    $_0cdba4_data,%eax
		mov    $0xffffffff,%ebx
		mov    %dh,_0cefd3_data
		mov    $0x000005,%edx
		xor    %ecx,%ecx
		call   _01d364_func
		mov    %bx,_0cee0c_data
		mov    %cx,_0cdbf6_data

	_06acf6_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06acfc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%ecx
		cmpb   $0x000002,_0cdc11_data
		jne    _06ad1f_jump
		cmpb   $0x000008,_0cdc10_data
		jne    _06ad1f_jump
		movw   $0x00005a,_0cdbfa_data

	_06ad1f_jump:
		mov    $0x000005,%edx
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		mov    _0cdbfc_data,%eax
		mov    $0x000020,%edx
		sar    $0x000010,%eax
		call   _01d10c_func
		testb  $0x000002,_0ced81_data
		je     _06ad52_jump
		mov    $0x000003,%edx
		jmp    _06ad57_jump

	_06ad52_jump:
		mov    $0x000007,%edx

	_06ad57_jump:
		testb  $0x000008,_0cdc25_data
		je     _06ad71_jump
		mov    $0x000010,%ebx
		and    $0x0000ff,%edx
		sub    %edx,%ebx
		mov    %ebx,%edx
		jmp    _06ad77_jump

	_06ad71_jump:
		and    $0x0000ff,%edx

	_06ad77_jump:
		mov    %edx,%ebx
		testb  $0x000002,_0ced81_data
		je     _06ad87_jump
		add    $0x000025,%eax

	_06ad87_jump:
		movswl %cx,%edx
		sar    $0x000004,%edx
		cwtl   
		shl    $0x000004,%edx
		mov    $0xffffffff,%edi
		sub    %eax,%edx
		mov    %di,_0cdbee_data
		mov    %edx,_0cdbd0_data
		movswl %si,%edx
		xor    %eax,%eax
		sar    $0x000004,%edx
		mov    _0cdc0c_data,%al
		shl    $0x000004,%edx
		xor    %ecx,%ecx
		sub    %eax,%edx
		movswl %bx,%eax
		dec    %edx
		mov    %cx,_0cedb2_data
		add    %eax,%edx
		xor    %ebx,%ebx
		mov    %edx,_0cdbcc_data
		mov    %bx,_0cdbe6_data
		mov    %bx,_0cdbe4_data
		mov    %bx,_0cdbf6_data
		xor    %dh,%dh
		xor    %bl,%bl
		mov    %dh,_0cdc15_data
		xor    %dl,%dl
		mov    %bl,_0cdc16_data
		mov    %dx,_0cedf8_data
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06ae04_func:
		push   %edx
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cdba0_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		sete   %al
		xor    %ah,%ah
		pop    %edx
		ret    



_06ae2c_func:
		push   %edx
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cdba0_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    _092224_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		pop    %edx
		ret    



_06ae58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		testb  $0x000002,_0ced80_data
		je     _06b0fe_jump
		testb  $0x000018,_0ced81_data
		jne    _06b0fe_jump
		xor    %eax,%eax
		mov    _0cdbcc_data,%dx
		mov    _0cdc0c_data,%al
		add    %eax,%edx
		mov    %dx,0x000018(%esp)
		mov    0x000016(%esp),%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		mov    $0x000001,%ebx
		sar    $0x000004,%eax
		mov    _0cdb96_data,%ecx
		mov    %ax,0x000010(%esp)
		sar    $0x000010,%ecx
		mov    0x00000e(%esp),%eax
		sub    $0x000002,%ecx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _06aec8_jump
		cmp    %ecx,%eax
		jg     _06aec8_jump
		mov    $0x000001,%eax
		jmp    _06aeca_jump

	_06aec8_jump:
		xor    %eax,%eax

	_06aeca_jump:
		test   %eax,%eax
		je     _06b0fe_jump
		xor    %eax,%eax
		mov    _0cdbd0_data,%dx
		mov    _0cdc18_data,%al
		add    %edx,%eax
		add    $0x000020,%eax
		mov    _0cdbfe_data,%bx
		mov    %ax,0x000014(%esp)
		test   %bx,%bx
		je     _06af24_jump
		xor    %eax,%eax
		mov    _0cdc0d_data,%al
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01d0bc_func
		mov    0x000012(%esp),%edx
		mov    _0cdbfc_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _01d170_func
		mov    %ax,0x000014(%esp)

	_06af24_jump:
		testb  $0x000008,_0cdc25_data
		je     _06af34_jump
		mov    $0x000001,%eax
		jmp    _06af39_jump

	_06af34_jump:
		mov    $0xffffffff,%eax

	_06af39_jump:
		mov    %ax,0x00000c(%esp)
		mov    0x000012(%esp),%eax
		mov    _0cdb96_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    0x00000a(%esp),%eax
		mov    %ebx,%ecx
		sar    $0x000010,%eax
		sub    %edx,%ecx
		add    %eax,%ecx
		mov    %ecx,0x000008(%esp)
		test   %ecx,%ecx
		jl     _06b0fe_jump
		lea    (%ebx,%edx,1),%esi
		lea    (%esi,%edx,1),%ecx
		lea    (%ecx,%edx,1),%ebp
		lea    (%ecx,%eax,1),%edx
		lea    (%ebx,%eax,1),%edi
		mov    %edx,0x000004(%esp)
		lea    (%esi,%eax,1),%edx
		mov    _0cdbfe_data,%ax
		mov    %edx,(%esp)
		test   %ax,%ax
		je     _06af9c_jump
		mov    %ecx,%ebp

	_06af9c_jump:
		mov    %edi,%eax
		call   _06ae2c_func
		test   %ax,%ax
		jne    _06afc7_jump
		mov    (%esp),%eax
		call   _06ae2c_func
		test   %ax,%ax
		jne    _06afc7_jump
		mov    0x000004(%esp),%eax
		call   _06ae2c_func
		test   %ax,%ax
		je     _06b0fe_jump

	_06afc7_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _06b0fe_jump
		cmpw   $0x000008,_0cedf8_data
		jle    _06b0fe_jump
		mov    %ebx,%eax
		call   _06ae04_func
		test   %ax,%ax
		je     _06b03f_jump
		mov    %ecx,%eax
		call   _06ae04_func
		test   %ax,%ax
		je     _06b03f_jump
		mov    %esi,%eax
		call   _06ae04_func
		test   %ax,%ax
		je     _06b03f_jump
		mov    0x000008(%esp),%eax
		call   _06ae04_func
		test   %ax,%ax
		je     _06b03f_jump
		mov    %ebp,%eax
		call   _06ae04_func
		test   %ax,%ax
		je     _06b03f_jump
		mov    %edi,%eax
		call   _06ae2c_func
		test   %ax,%ax
		je     _06b03f_jump
		mov    0x000012(%esp),%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		jmp    _06b0f9_jump

	_06b03f_jump:
		cmpw   $0x000000,_0cdbfe_data
		jne    _06b0fe_jump
		cmpw   $0x000002,0x000010(%esp)
		jge    _06b062_jump
		testb  $0x000008,_0cdc25_data
		jne    _06b0fe_jump

	_06b062_jump:
		mov    _0cdb96_data,%eax
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000003,%eax
		cmp    %eax,%edx
		jle    _06b085_jump
		testb  $0x000008,_0cdc25_data
		je     _06b0fe_jump

	_06b085_jump:
		mov    0x00000a(%esp),%edx
		mov    %ebx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		call   _06ae04_func
		test   %ax,%ax
		je     _06b0fe_jump
		mov    %ecx,%eax
		sub    %edx,%eax
		call   _06ae04_func
		test   %ax,%ax
		je     _06b0fe_jump
		mov    %esi,%eax
		sub    %edx,%eax
		call   _06ae04_func
		test   %ax,%ax
		je     _06b0fe_jump
		mov    0x000008(%esp),%eax
		sub    %edx,%eax
		call   _06ae04_func
		test   %ax,%ax
		je     _06b0fe_jump
		mov    %ebp,%eax
		sub    %edx,%eax
		call   _06ae04_func
		test   %ax,%ax
		je     _06b0fe_jump
		mov    %edi,%eax
		sub    %edx,%eax
		call   _06ae2c_func
		test   %ax,%ax
		je     _06b0fe_jump
		mov    0x00000c(%esp),%eax
		mov    0x000018(%esp),%ebx
		shl    $0x000004,%eax
		mov    0x000012(%esp),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax

	_06b0f9_jump:
		call   _06acfc_func

	_06b0fe_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b108_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cefa9_data
		je     _06b13a_jump
		cmpb   $0x000000,_0cdc11_data
		jne    _06b130_jump
		cmpb   $0x000028,_0cdc10_data
		jne    _06b130_jump
		mov    $0x00001a,%ebx
		jmp    _06b1a3_jump

	_06b130_jump:
		mov    $0x00001c,%ebx
		jmp    _06b1a3_jump

	_06b13a_jump:
		mov    _0cdc11_data,%dl
		cmp    $0x000001,%dl
		jne    _06b174_jump
		cmpb   $0x00000b,_0cdc10_data
		jne    _06b174_jump
		mov    _0cdc25_data,%bl
		test   $0x000008,%bl
		sete   %al
		mov    %bl,%bh
		and    %dl,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%cl
		mov    %bh,_0cdc25_data
		or     %al,%cl
		mov    %cl,_0cdc25_data

	_06b174_jump:
		cmpb   $0x000005,_0cdc11_data
		jne    _06b184_jump
		mov    $0x000001,%ebx
		jmp    _06b1a3_jump

	_06b184_jump:
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06b192_jump
		neg    %eax

	_06b192_jump:
		cmp    $0x000002,%eax
		jg     _06b19e_jump
		mov    $0x000018,%ebx
		jmp    _06b1a3_jump

	_06b19e_jump:
		mov    $0x000020,%ebx

	_06b1a3_jump:
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		xor    %edx,%edx
		mov    $0xffffffff,%ebx
		mov    %dx,_0cedf8_data
		mov    %bx,_0cee0c_data
		xor    %dl,%dl
		mov    %bx,_0cdbee_data
		mov    %dl,_0cdc15_data
		mov    %dl,_0cdc16_data
		mov    %dl,_0cefd3_data
		mov    %dl,_0cdcd4_data
		call   _069ec0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06b1f4_switch:
		.long   _06b2c5_case
		.long   _06b446_case
		.long   _06b52b_case
		.long   _06b52b_case
		.long   _06b22f_case
		.long   _06b4e1_case
		.long   _06b4f3_case




_06b210_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cdc11_data,%al
		cmp    $0x000006,%al
		ja     _06b52b_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06b1f4_switch(,%eax,4)

	_06b22f_case:
		mov    _0cdc10_data,%dh
		cmp    $0x00000b,%dh
		setne  %al
		and    $0x0000ff,%eax
		je     _06b2b6_jump
		cmp    $0x00000c,%dh
		setne  %al
		and    $0x0000ff,%eax
		je     _06b2b6_jump
		mov    $0x000001,%edi
		mov    _0cdbfe_data,%ax
		mov    %di,_0cdbe6_data
		test   %ax,%ax
		je     _06b27d_jump
		cmpb   $0x000000,_0cef4f_data
		je     _06b27d_jump
		mov    $_0cdba4_data,%eax
		call   _0545ac_func

	_06b27d_jump:
		call   _069268_func
		cmpb   $0x00000c,_0cefd2_data
		je     _06b295_jump
		call   _06b108_func
		jmp    _06b52b_case

	_06b295_jump:
		cmpb   $0x000003,_0cdc10_data
		je     _06b52b_case
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		jmp    _06b52b_case

	_06b2b6_jump:
		xor    %esi,%esi
		mov    %si,_0cdbe6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b2c5_case:
		mov    _0cdc10_data,%ah
		test   %ah,%ah
		je     _06b346_jump
		cmp    $0x000001,%ah
		je     _06b346_jump
		cmp    $0x000002,%ah
		je     _06b346_jump
		cmp    $0x000003,%ah
		je     _06b346_jump
		cmp    $0x000031,%ah
		je     _06b346_jump
		cmp    $0x000008,%ah
		je     _06b346_jump
		cmp    $0x00002b,%ah
		je     _06b346_jump
		cmp    $0x000024,%ah
		je     _06b346_jump
		cmp    $0x000025,%ah
		je     _06b346_jump
		cmp    $0x000026,%ah
		je     _06b346_jump
		cmp    $0x000027,%ah
		je     _06b346_jump
		cmp    $0x000028,%ah
		je     _06b346_jump
		cmp    $0x000029,%ah
		je     _06b346_jump
		cmp    $0x00002a,%ah
		je     _06b346_jump
		cmp    $0x00000d,%ah
		je     _06b346_jump
		cmp    $0x00003b,%ah
		je     _06b346_jump
		cmp    $0x00003e,%ah
		je     _06b346_jump
		cmp    $0x00003f,%ah
		je     _06b346_jump
		cmp    $0x000040,%ah
		je     _06b346_jump
		cmp    $0x000041,%ah
		jne    _06b355_jump

	_06b346_jump:
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		jmp    _06b431_jump

	_06b355_jump:
		cmp    $0x000014,%ah
		jne    _06b3db_jump
		mov    $_0cdba4_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _06b3db_jump
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdc10_data,%al
		mov    (%ebx),%ebx
		shl    $0x000003,%eax
		add    %eax,%ebx
		mov    0x000007(%ebx),%dh
		lea    0x000007(%ebx),%eax
		test   $0x000010,%dh
		sete   %dl
		mov    (%eax),%cl
		and    $0x000001,%dl
		and    $0x0000ef,%cl
		shl    $0x000004,%dl
		mov    %cl,(%eax)
		mov    %cl,%ch
		or     %dl,%ch
		mov    $0x000001,%edx
		mov    %ch,(%eax)
		mov    $_0cdba4_data,%eax
		call   _054534_func
		mov    0x000007(%ebx),%dh
		lea    0x000007(%ebx),%eax
		test   $0x000010,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000ef,%bl
		shl    $0x000004,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)
		jmp    _06b43b_jump

	_06b3db_jump:
		call   *_0c4d78_data
		test   %ax,%ax
		je     _06b43b_jump
		cmpb   $0x000000,_0cefa9_data
		jne    _06b43b_jump
		cmpb   $0x000000,_0cdcd2_data
		jne    _06b427_jump
		mov    _0cdc10_data,%al
		cmp    $0x00000b,%al
		je     _06b405_jump
		cmp    $0x00000c,%al
		jne    _06b427_jump

	_06b405_jump:
		xor    %dl,%dl
		mov    $0x000006,%ebx
		mov    %dl,_0cdcd4_data
		xor    %dh,%dh
		mov    $_0cdba4_data,%eax
		mov    %dx,_0cdccc_data
		mov    $0x000003,%edx
		jmp    _06b436_jump

	_06b427_jump:
		mov    $0x000008,%ebx
		mov    $0x000001,%edx

	_06b431_jump:
		mov    $_0cdba4_data,%eax

	_06b436_jump:
		call   _01d374_func

	_06b43b_jump:
		call   _06a4c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b446_case:
		cmpb   $0x000000,_0cdc10_data
		jne    _06b47c_jump
		call   *_0c4d78_data
		test   %ax,%ax
		je     _06b47c_jump
		cmpb   $0x000000,_0cefa9_data
		jne    _06b47c_jump
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		jmp    _06b4d6_jump

	_06b47c_jump:
		mov    _0cdc10_data,%dl
		cmp    $0x000008,%dl
		je     _06b496_jump
		cmp    $0x00000a,%dl
		je     _06b496_jump
		cmp    $0x000009,%dl
		je     _06b496_jump
		cmp    $0x00000b,%dl
		jne    _06b4c8_jump

	_06b496_jump:
		call   *_0c4d78_data
		test   %ax,%ax
		je     _06b4aa_jump
		cmpb   $0x000000,_0cefa9_data
		je     _06b4d6_jump

	_06b4aa_jump:
		call   _0407b4_func
		test   %ax,%ax
		je     _06b4c8_jump
		call   *_0c4d78_data
		test   %ax,%ax
		je     _06b4c8_jump
		cmpb   $0x000000,_0cefa9_data
		je     _06b4d6_jump

	_06b4c8_jump:
		testb  $0x000018,_0ced81_data
		jne    _06b4d6_jump
		call   _06a904_func

	_06b4d6_jump:
		call   _06a4c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b4e1_case:
		addl   $0x00000e,_0cdbd0_data
		call   _06b108_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b4f3_case:
		mov    _0cdc25_data,%ah
		mov    _0cdbe6_data,%bx
		xor    %edx,%edx
		or     $0x000008,%ah
		mov    %dx,_0cedb2_data
		mov    %ah,_0cdc25_data
		cmp    $0x000003,%bx
		jge    _06b52b_case
		cmpb   $0x000000,_0cdc15_data
		jne    _06b52b_case
		mov    %ebx,%ecx
		inc    %ecx
		mov    %cx,_0cdbe6_data

	_06b52b_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06b534_switch:
		.long   _06b64d_case
		.long   _06b628_case
		.long   _06b707_case
		.long   _06b707_case
		.long   _06b56e_case
		.long   _06b63f_case
		.long   _06b6da_case




_06b550_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cdc11_data,%al
		cmp    $0x000006,%al
		ja     _06b707_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06b534_switch(,%eax,4)

	_06b56e_case:
		mov    _0cdc10_data,%dh
		cmp    $0x00000b,%dh
		setne  %al
		and    $0x0000ff,%eax
		je     _06b61a_jump
		cmp    $0x00000c,%dh
		setne  %al
		and    $0x0000ff,%eax
		je     _06b61a_jump
		call   _069268_func
		mov    _0cefd2_data,%bh
		test   %bh,%bh
		jne    _06b5bf_jump
		call   _06b108_func
		mov    $0x00000a,%al
		mov    $0x000001,%ebx
		mov    %al,_0cdc23_data
		mov    %bx,_0cdbe6_data
		jmp    _06b5f9_jump

	_06b5bf_jump:
		cmp    $0x00000c,%bh
		je     _06b5cf_jump
		xor    %edx,%edx
		mov    %dx,_0cdbe6_data
		jmp    _06b5f9_jump

	_06b5cf_jump:
		mov    $0xffffffff,%edi
		mov    _0cdbfe_data,%ax
		mov    %di,_0cdbe6_data
		test   %ax,%ax
		je     _06b5f9_jump
		cmpb   $0x000000,_0cef4f_data
		je     _06b5f9_jump
		mov    $_0cdba4_data,%eax
		call   _0545ac_func

	_06b5f9_jump:
		cmpb   $0x000002,_0cdc10_data
		je     _06b707_case
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06b61a_jump:
		xor    %esi,%esi
		mov    %si,_0cdbe6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06b628_case:
		testb  $0x000018,_0ced81_data
		jne    _06b707_case
		call   _06a904_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06b63f_case:
		movw   $0x0000ff,_0cee08_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06b64d_case:
		cmpb   $0x000025,_0cdc10_data
		jne    _06b67a_jump
		mov    _0cedb0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06b664_jump
		neg    %eax

	_06b664_jump:
		cmp    $0x000080,%eax
		jg     _06b67a_jump
		mov    $0x000026,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func

	_06b67a_jump:
		call   _06a4c8_func
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06b695_jump
		movw   $0x0000ff,_0cee08_data

	_06b695_jump:
		cmpb   $0x000000,_0cdc11_data
		jne    _06b707_case
		cmpb   $0x00000f,_0cdc10_data
		jne    _06b707_case
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		jne    _06b707_case
		mov    $0x00003c,%ebx
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06b6da_case:
		orb    $0x000008,_0cdc25_data
		mov    _0cdbe4_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    %dx,_0cedb2_data
		cmp    $0xfffffffd,%eax
		jle    _06b707_case
		cmpb   $0x000000,_0cdc15_data
		jne    _06b707_case
		decw   _0cdbe6_data

	_06b707_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_06b70c_switch:
		.long   _06b8cd_case
		.long   _06b748_case
		.long   _06ba9e_case
		.long   _06bcfb_case
		.long   _06bb08_case
		.long   _06bc78_case
		.long   _06bca0_case




_06b728_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0cdc11_data,%al
		cmp    $0x000006,%al
		ja     _06bcfb_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_06b70c_switch(,%edx,4)

	_06b748_case:
		mov    _09267c_data,%bh
		inc    %bh
		mov    _0cdc10_data,%al
		mov    %bh,_09267c_data
		cmp    $0x000008,%al
		je     _06b763_jump
		cmp    $0x00000a,%al
		jne    _06b79f_jump

	_06b763_jump:
		call   *_0c4d78_data
		test   %ax,%ax
		je     _06b781_jump
		cmpb   $0x000000,_0cefa9_data
		jne    _06b781_jump
		call   _040894_func
		test   %ax,%ax
		jne    _06b788_jump

	_06b781_jump:
		mov    $0x000001,%edx
		jmp    _06b78a_jump

	_06b788_jump:
		xor    %edx,%edx

	_06b78a_jump:
		test   %edx,%edx
		je     _06b79f_jump
		mov    $0x00002f,%ebx
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		jmp    _06b81e_jump

	_06b79f_jump:
		mov    _0cdc10_data,%dh
		cmp    $0x000009,%dh
		je     _06b7af_jump
		cmp    $0x00000b,%dh
		jne    _06b7e8_jump

	_06b7af_jump:
		call   _040894_func
		test   %ax,%ax
		je     _06b7cd_jump
		call   *_0c4d78_data
		test   %ax,%ax
		je     _06b7cd_jump
		cmpb   $0x000000,_0cefa9_data
		je     _06b7d4_jump

	_06b7cd_jump:
		mov    $0x000001,%edx
		jmp    _06b7d6_jump

	_06b7d4_jump:
		xor    %edx,%edx

	_06b7d6_jump:
		test   %edx,%edx
		je     _06b7e8_jump
		mov    $0x000030,%ebx
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		jmp    _06b81e_jump

	_06b7e8_jump:
		call   _040894_func
		test   %ax,%ax
		je     _06b823_jump
		call   *_0c4d78_data
		test   %ax,%ax
		je     _06b823_jump
		cmpb   $0x000000,_0cefa9_data
		jne    _06b823_jump
		cmpb   $0x000000,_0cdc10_data
		jne    _06b823_jump
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax

	_06b81e_jump:
		call   _01d374_func

	_06b823_jump:
		mov    _0cdc25_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _06b883_jump
		mov    _0cdc10_data,%bl
		cmp    $0x000008,%bl
		je     _06b842_jump
		cmp    $0x00000a,%bl
		jne    _06b855_jump

	_06b842_jump:
		mov    $0x000032,%ebx
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _06b8a2_jump

	_06b855_jump:
		cmp    $0x00000b,%bl
		je     _06b8a2_jump
		cmp    $0x000032,%bl
		je     _06b8a2_jump
		cmp    $0x000033,%bl
		je     _06b8a2_jump
		cmpb   $0x000001,_0cefce_data
		je     _06b8a2_jump
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		jmp    _06b8a2_jump

	_06b883_jump:
		mov    _0cdc10_data,%dl
		cmp    $0x000009,%dl
		je     _06b893_jump
		cmp    $0x00000b,%dl
		jne    _06b8a2_jump

	_06b893_jump:
		mov    $0x00000a,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func

	_06b8a2_jump:
		mov    _0cdc25_data,%bl
		mov    %cl,%al
		and    $0x0000f7,%bl
		and    $0x000001,%al
		mov    %bl,_0cdc25_data
		shl    $0x000003,%al
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,_0cdc25_data
		call   _06a4c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b8cd_case:
		incb   _09267c_data
		mov    _0cdc10_data,%ah
		cmp    $0x00000f,%ah
		je     _06b8ec_jump
		cmp    $0x00002f,%ah
		je     _06b8ec_jump
		cmp    $0x000030,%ah
		jne    _06b968_jump

	_06b8ec_jump:
		call   *_0c4d78_data
		test   %ax,%ax
		je     _06b968_jump
		cmpb   $0x000000,_0cefa9_data
		jne    _06b968_jump
		call   _040894_func
		test   %ax,%ax
		je     _06b968_jump
		mov    _0cdc25_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		jne    _06b932_jump
		mov    $0x000008,%ebx
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		jmp    _06ba93_jump

	_06b932_jump:
		mov    %cl,%al
		and    $0x000001,%al
		mov    _0cdc25_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0cdc25_data
		shl    $0x000003,%al
		mov    %ah,%dl
		mov    $0x000033,%ebx
		or     %al,%dl
		mov    $_0cdba4_data,%eax
		mov    %dl,_0cdc25_data
		xor    %edx,%edx
		call   _01d374_func
		jmp    _06ba93_jump

	_06b968_jump:
		cmpb   $0x00000f,_0cdc10_data
		jne    _06b9b3_jump
		call   _040894_func
		test   %ax,%ax
		jne    _06b9b3_jump
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _024a00_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000010,_092224_data(%edx)
		jne    _06b9b3_jump
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		call   _06a4c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b9b3_jump:
		mov    _0cdc10_data,%ah
		cmp    $0x00000c,%ah
		je     _06ba93_jump
		cmp    $0x00000b,%ah
		je     _06ba93_jump
		cmp    $0x000012,%ah
		je     _06ba93_jump
		cmp    $0x000014,%ah
		je     _06ba93_jump
		cmp    $0x00000f,%ah
		je     _06ba93_jump
		cmp    $0x00002f,%ah
		je     _06ba93_jump
		cmp    $0x000030,%ah
		je     _06ba93_jump
		cmp    $0x000032,%ah
		je     _06ba93_jump
		cmp    $0x000033,%ah
		je     _06ba93_jump
		cmp    $0x00003d,%ah
		je     _06ba93_jump
		mov    _0cdc25_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _06ba78_jump
		cmpb   $0x000001,_0cefce_data
		je     _06ba3c_jump
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		jmp    _06ba48_jump

	_06ba3c_jump:
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx

	_06ba48_jump:
		call   _01d374_func
		mov    %cl,%al
		mov    _0cdc25_data,%cl
		and    $0x000001,%al
		and    $0x0000f7,%cl
		shl    $0x000003,%al
		mov    %cl,_0cdc25_data
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,_0cdc25_data
		call   _06a4c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ba78_jump:
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		call   _01d36c_func
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		call   _01d364_func

	_06ba93_jump:
		call   _06a4c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ba9e_case:
		mov    _09267c_data,%bh
		mov    _0cdc10_data,%ah
		inc    %bh
		xor    %edx,%edx
		mov    %bh,_09267c_data
		cmp    $0x00000f,%ah
		setne  %dl
		test   %edx,%edx
		je     _06bacf_jump
		mov    _0cdbec_data,%ax
		test   %ax,%ax
		jne    _06bacf_jump
		mov    %ax,_0cedb2_data

	_06bacf_jump:
		call   _06a4c8_func
		cmpb   $0x000000,_0cefa9_data
		jne    _06bafd_jump
		mov    %cl,%al
		mov    _0cdc25_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0cdc25_data
		or     %al,%bl
		mov    %bl,_0cdc25_data

	_06bafd_jump:
		call   _06ae58_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06bb08_case:
		mov    _09267c_data,%bh
		inc    %bh
		mov    _0cdc10_data,%al
		mov    %bh,_09267c_data
		cmp    $0x000002,%al
		jne    _06bb29_jump
		call   _040904_func
		test   %ax,%ax
		jne    _06bb3c_jump

	_06bb29_jump:
		cmpb   $0x000003,_0cdc10_data
		jne    _06bb7d_jump
		call   _040894_func
		test   %ax,%ax
		je     _06bb7d_jump

	_06bb3c_jump:
		call   _069268_func
		mov    _0cefd2_data,%bl
		test   %bl,%bl
		jne    _06bb76_jump
		cmpb   $0x000002,_0cdc10_data
		jne    _06bb6f_jump
		call   _06b108_func
		mov    $0x00000a,%ah
		mov    $0x000001,%esi
		mov    %ah,_0cdc23_data
		mov    %si,_0cdbe6_data
		jmp    _06bb92_jump

	_06bb6f_jump:
		call   _06b108_func
		jmp    _06bb92_jump

	_06bb76_jump:
		cmp    $0x00000c,%bl
		je     _06bb92_jump
		jmp    _06bb8d_jump

	_06bb7d_jump:
		mov    _0cdc10_data,%dl
		cmp    $0x000002,%dl
		je     _06bb8d_jump
		cmp    $0x000003,%dl
		jne    _06bb92_jump

	_06bb8d_jump:
		call   _06a904_func

	_06bb92_jump:
		call   *_0c4d78_data
		test   %ax,%ax
		je     _06bc03_jump
		xor    %edx,%edx
		mov    _0cefd3_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _06bc03_jump
		cmpb   $0x00000b,_0cdc10_data
		setne  %al
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _06bc03_jump
		cmpb   $0x00000c,_0cdc10_data
		setne  %al
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _06bc03_jump
		mov    _0cdc10_data,%bl
		xor    %edx,%edx
		cmp    $0x00000d,%bl
		setne  %dl
		test   %edx,%edx
		je     _06bc03_jump
		mov    $0x000100,%edi
		call   _069f20_func
		mov    %di,_0cedb2_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06bc03_jump:
		cmpb   $0x00000d,_0cdc10_data
		jne    _06bc2a_jump
		mov    _0cdc25_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _06bc2a_jump
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func

	_06bc2a_jump:
		mov    _0cdc10_data,%ah
		xor    %edx,%edx
		cmp    $0x00000b,%ah
		setne  %dl
		test   %edx,%edx
		je     _06bcfb_case
		cmp    $0x00000c,%ah
		setne  %al
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _06bcfb_case
		mov    %cl,%al
		mov    _0cdc25_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0cdc25_data
		or     %al,%bl
		mov    %bl,_0cdc25_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06bc78_case:
		mov    _0cdc25_data,%al
		mov    _09267c_data,%bl
		shl    $0x000004,%al
		inc    %bl
		shr    $0x000007,%al
		mov    %bl,_09267c_data
		cmp    %cl,%al
		je     _06bcfb_case
		call   _06b108_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06bca0_case:
		xor    %edx,%edx
		mov    _0cdc25_data,%ah
		mov    %dx,_0cedb2_data
		mov    _09267c_data,%dl
		or     $0x000008,%ah
		inc    %dl
		mov    %ah,_0cdc25_data
		mov    %dl,_09267c_data
		test   %cx,%cx
		je     _06bcd0_jump
		movswl %cx,%edx
		jmp    _06bcd5_jump

	_06bcd0_jump:
		mov    $0xffffffff,%edx

	_06bcd5_jump:
		mov    _0cdbe2_data,%ebx
		mov    %edx,%ecx
		sar    $0x000010,%ebx
		movswl %dx,%edx
		imul   %ebx,%edx
		cmp    $0x000003,%edx
		jge    _06bcfb_case
		cmpb   $0x000000,_0cdc15_data
		jne    _06bcfb_case
		add    %cx,_0cdbe4_data

	_06bcfb_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06bd04_switch:
		.long   _06bde6_case
		.long   _06bd3f_case
		.long   _06c19d_case
		.long   _06c284_case
		.long   _06c16e_case
		.long   _06c284_case
		.long   _06c209_case




_06bd20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cdc11_data,%al
		cmp    $0x000006,%al
		ja     _06c284_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06bd04_switch(,%eax,4)

	_06bd3f_case:
		mov    _0cdc10_data,%al
		cmp    $0x000004,%al
		je     _06bddb_jump
		cmp    $0x000005,%al
		je     _06bddb_jump
		testb  $0x000018,_0ced81_data
		jne    _06bddb_jump
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		call   _01d36c_func
		mov    _0cdc10_data,%dh
		cmp    $0x000008,%dh
		je     _06bd7d_jump
		cmp    $0x00000a,%dh
		jne    _06bd89_jump

	_06bd7d_jump:
		mov    $0x00002f,%edx
		mov    $_0cdba4_data,%eax
		jmp    _06bdd6_jump

	_06bd89_jump:
		cmp    $0x000009,%dh
		je     _06bd93_jump
		cmp    $0x00000b,%dh
		jne    _06bdac_jump

	_06bd93_jump:
		mov    $0x000030,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		call   _06a4c8_func
		jmp    _06c284_case

	_06bdac_jump:
		cmp    $0x000003,%dh
		je     _06bdb6_jump
		cmp    $0x000007,%dh
		jne    _06bdcf_jump

	_06bdb6_jump:
		mov    $0x000024,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		call   _06a4c8_func
		jmp    _06c284_case

	_06bdcf_jump:
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx

	_06bdd6_jump:
		call   _01d364_func

	_06bddb_jump:
		call   _06a4c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06bde6_case:
		mov    _0cdbf2_data,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    %cx,_0cdbe4_data
		cmp    $0xffffffff,%eax
		je     _06be25_jump
		cmpb   $0x000000,_0cdc10_data
		jne    _06be25_jump
		cmpw   $0x000001,_0cdbf4_data
		jne    _06be16_jump
		mov    $0x000031,%edx
		jmp    _06be1b_jump

	_06be16_jump:
		mov    $0x000003,%edx

	_06be1b_jump:
		mov    $_0cdba4_data,%eax
		call   _01d364_func

	_06be25_jump:
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    _0cdc10_data,%al
		testb  $0x000040,0x000007(%ebx,%eax,8)
		je     _06bf1d_jump
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		jne    _06be94_jump
		cmpb   $0x000000,_0cdc11_data
		jne    _06be7e_jump
		cmpb   $0x00003c,_0cdc10_data
		je     _06c163_jump

	_06be7e_jump:
		mov    $0x00003c,%ebx
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _06c163_jump

	_06be94_jump:
		cmpb   $0x000000,_0cdc11_data
		jne    _06bea6_jump
		cmpb   $0x00000f,_0cdc10_data
		je     _06bead_jump

	_06bea6_jump:
		mov    $0x000001,%eax
		jmp    _06beaf_jump

	_06bead_jump:
		xor    %eax,%eax

	_06beaf_jump:
		test   %eax,%eax
		je     _06c163_jump
		cmpb   $0x000000,_0cdc11_data
		jne    _06bec9_jump
		cmpb   $0x00003d,_0cdc10_data
		je     _06bed0_jump

	_06bec9_jump:
		mov    $0x000001,%eax
		jmp    _06bed2_jump

	_06bed0_jump:
		xor    %eax,%eax

	_06bed2_jump:
		test   %eax,%eax
		je     _06c163_jump
		xor    %ebx,%ebx
		mov    _0cdc0e_data,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0cdba8_data,%ebx
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%ecx
		xor    %edx,%edx
		mov    $0x00000f,%ebx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		mov    0x00000a(%ecx),%al
		dec    %al
		mov    %al,_0cdc0f_data
		call   _06a4c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06bf1d_jump:
		cmp    $0x000025,%al
		jne    _06bf50_jump
		mov    _0cedb0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06bf2f_jump
		neg    %eax

	_06bf2f_jump:
		cmp    $0x000080,%eax
		jg     _06bf50_jump
		mov    $0x000026,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		call   _06a4c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06bf50_jump:
		cmpb   $0x000014,_0cdc10_data
		jne    _06c007_jump
		mov    $_0cdba4_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _06c007_jump
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _06c163_jump
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0cdc10_data,%bl
		mov    (%eax),%eax
		shl    $0x000003,%ebx
		add    %eax,%ebx
		mov    0x000007(%ebx),%ch
		lea    0x000007(%ebx),%eax
		test   $0x000010,%ch
		sete   %cl
		mov    (%eax),%dl
		and    $0x000001,%cl
		and    $0x0000ef,%dl
		shl    $0x000004,%cl
		mov    %dl,(%eax)
		mov    %dl,%dh
		or     %cl,%dh
		mov    %dh,(%eax)
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		call   _054534_func
		lea    0x000007(%ebx),%eax
		testb  $0x000010,0x000007(%ebx)
		sete   %bl
		mov    (%eax),%ch
		and    $0x000001,%bl
		and    $0x0000ef,%ch
		shl    $0x000004,%bl
		mov    %ch,%dl
		mov    %ch,(%eax)
		or     %bl,%dl
		mov    %dl,(%eax)
		call   _06a4c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c007_jump:
		mov    _0cdc10_data,%bh
		cmp    $0x00003b,%bh
		je     _06c026_jump
		cmp    $0x00003e,%bh
		je     _06c026_jump
		cmp    $0x00003f,%bh
		je     _06c026_jump
		cmp    $0x000040,%bh
		je     _06c026_jump
		cmp    $0x000041,%bh
		jne    _06c057_jump

	_06c026_jump:
		mov    $_0cdba4_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _06c163_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %ax,_0cecca_data
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		call   _06a4c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c057_jump:
		test   %bh,%bh
		je     _06c069_jump
		cmp    $0x000001,%bh
		je     _06c069_jump
		cmp    $0x000002,%bh
		jne    _06c163_jump

	_06c069_jump:
		mov    _0cecca_data,%di
		inc    %edi
		mov    %di,_0cecca_data
		cmp    $0x0001f4,%di
		jl     _06c163_jump
		mov    %edi,%edx
		sub    $0x000064,%edx
		mov    _0cecea_data,%bx
		mov    %dx,_0cecca_data
		test   %bx,%bx
		jne    _06c0c1_jump
		mov    $0x00003b,%edx
		mov    $_0cdba4_data,%eax
		mov    $0x000001,%edi
		call   _01d364_func
		mov    %di,_0cecea_data
		call   _06a4c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c0c1_jump:
		cmp    $0x000001,%bx
		jne    _06c0ed_jump
		mov    $0x000040,%edx
		mov    $_0cdba4_data,%eax
		mov    $0x000002,%esi
		call   _01d364_func
		mov    %si,_0cecea_data
		call   _06a4c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c0ed_jump:
		cmp    $0x000002,%bx
		jne    _06c119_jump
		mov    $0x00003e,%edx
		mov    $_0cdba4_data,%eax
		mov    $0x000003,%ecx
		call   _01d364_func
		mov    %cx,_0cecea_data
		call   _06a4c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c119_jump:
		cmp    $0x000003,%bx
		jne    _06c145_jump
		mov    $0x00003f,%edx
		mov    $_0cdba4_data,%eax
		mov    $0x000004,%ebx
		call   _01d364_func
		mov    %bx,_0cecea_data
		call   _06a4c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c145_jump:
		cmp    $0x000004,%bx
		jne    _06c163_jump
		mov    $0x000041,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		xor    %edx,%edx
		mov    %dx,_0cecea_data

	_06c163_jump:
		call   _06a4c8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c16e_case:
		mov    _0cdc10_data,%bl
		cmp    $0x000002,%bl
		je     _06c182_jump
		cmp    $0x000003,%bl
		jne    _06c284_case

	_06c182_jump:
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		xor    %esi,%esi
		call   _01d364_func
		mov    %si,_0cdbe6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c19d_case:
		xor    %edi,%edi
		mov    _0cdc10_data,%cl
		mov    %di,_0cecca_data
		mov    %di,_0cecea_data
		cmp    $0x000008,%cl
		je     _06c1bf_jump
		mov    %di,_0cdbe4_data

	_06c1bf_jump:
		cmpb   $0x00000f,_0cdc10_data
		je     _06c1d2_jump
		cmpw   $0x000000,_0cdbec_data
		je     _06c1ef_jump

	_06c1d2_jump:
		mov    $0x000008,%eax
		mov    _0cedd6_data,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ecx
		call   _06a200_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c1ef_jump:
		mov    _0cedd6_data,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		call   _06a200_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c209_case:
		xor    %edx,%edx
		mov    %dx,_0cedb2_data
		mov    _09267c_data,%dl
		mov    _0cdc25_data,%ah
		inc    %dl
		or     $0x000008,%ah
		mov    %dl,_09267c_data
		mov    _0cdc15_data,%dh
		mov    %ah,_0cdc25_data
		test   %dh,%dh
		jne    _06c284_case
		mov    _0cdbe4_data,%bx
		test   %bx,%bx
		jle    _06c251_jump
		mov    %ebx,%edi
		dec    %edi
		mov    %di,_0cdbe4_data
		jmp    _06c25d_jump

	_06c251_jump:
		jge    _06c25d_jump
		mov    %ebx,%esi
		inc    %esi
		mov    %si,_0cdbe4_data

	_06c25d_jump:
		mov    _0cdbe6_data,%ax
		test   %ax,%ax
		jle    _06c278_jump
		mov    %eax,%ecx
		dec    %ecx
		mov    %cx,_0cdbe6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c278_jump:
		jge    _06c284_case
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,_0cdbe6_data

	_06c284_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lea    0x000000(%eax),%eax
		ret    



_06c290_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cdc11_data,%ah
		cmp    $0x000002,%ah
		je     _06c3a4_jump
		cmp    $0x000001,%ah
		je     _06c379_jump
		call   _06a904_func
		cmpb   $0x000000,_0cdc11_data
		jne    _06c3a4_jump
		mov    _0cdc10_data,%bl
		test   %bl,%bl
		je     _06c2ee_jump
		cmp    $0x000001,%bl
		je     _06c2ee_jump
		cmp    $0x000002,%bl
		je     _06c2ee_jump
		cmp    $0x00003f,%bl
		je     _06c2ee_jump
		cmp    $0x00003e,%bl
		je     _06c2ee_jump
		cmp    $0x00003b,%bl
		je     _06c2ee_jump
		cmp    $0x000003,%bl
		je     _06c2ee_jump
		cmp    $0x000008,%bl
		jne    _06c3a4_jump

	_06c2ee_jump:
		testb  $0x000040,_0ced80_data
		je     _06c330_jump
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06c3a4_jump
		mov    $0x000010,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		xor    %edx,%edx
		mov    %dx,_0cdbe4_data
		mov    %dx,_0cdbe6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c330_jump:
		cmpb   $0x000000,_0cefa9_data
		jne    _06c3a4_jump
		mov    _0cdc10_data,%cl
		cmp    $0x000012,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06c3a4_jump
		mov    _0ced81_data,%ch
		test   $0x000018,%ch
		jne    _06c3a4_jump
		test   $0x000001,%ch
		jne    _06c3a4_jump
		cmp    $0x000008,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06c3a4_jump
		test   $0x000080,%ch
		jne    _06c3a4_jump
		mov    $0x000012,%edx
		jmp    _06c39a_jump

	_06c379_jump:
		cmp    %ah,%ah
		jne    _06c3a4_jump
		mov    _0ced81_data,%bl
		test   $0x000018,%bl
		jne    _06c3a4_jump
		test   %ah,%bl
		je     _06c3a4_jump
		cmpb   $0x000000,_0cdc10_data
		jne    _06c3a4_jump
		mov    $0x000003,%edx

	_06c39a_jump:
		mov    $_0cdba4_data,%eax
		call   _01d364_func

	_06c3a4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx

	_06c3a7_jump:
		ret    



_06c3a8_func:
		cmpb   $0x000000,_0cdcd2_data
		jne    _06c3a7_jump
		testb  $0x000001,_0ced80_data
		je     _06c3a7_jump
		testb  $0x000018,_0ced81_data
		jne    _06c3a7_jump
		jmp    _0645b0_jump

_06c3c8_switch:
		.long   _06c41b_case
		.long   _06c408_case
		.long   _06c41b_case
		.long   _06c42a_case
		.long   _06c42a_case
		.long   _06c41b_case
		.long   _06c42a_case
		.long   _06c41b_case




_06c3e8_func:
		push   %edx
		cmpb   $0x000000,_0cefc8_data
		jne    _06c42a_case
		mov    _0cdc11_data,%al
		cmp    $0x000007,%al
		ja     _06c42a_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06c3c8_switch(,%eax,4)

	_06c408_case:
		call   _040894_func
		test   %ax,%ax
		je     _06c41b_case
		cmpb   $0x000003,_0cdc10_data
		jne    _06c422_jump

	_06c41b_case:
		call   _069f20_func
		pop    %edx
		ret    

	_06c422_jump:
		xor    %dh,%dh
		mov    %dh,_0cefd3_data

	_06c42a_case:
		pop    %edx
		ret    



_06c42c_func:
		push   %edx
		test   %ax,%ax
		jne    _06c437_jump
		mov    $0x000001,%eax

	_06c437_jump:
		cwtl   
		dec    %eax
		sar    $0x000003,%eax
		cmp    $0x00001f,%ax
		jg     _06c459_jump
		testb  $0x000008,_0cdc25_data
		jne    _06c452_jump
		add    $0x00001f,%eax
		pop    %edx
		ret    

	_06c452_jump:
		mov    $0x000020,%edx
		jmp    _06c46c_jump

	_06c459_jump:
		testb  $0x000008,_0cdc25_data
		jne    _06c467_jump
		sub    $0x00001f,%eax
		pop    %edx
		ret    

	_06c467_jump:
		mov    $0x00005f,%edx

	_06c46c_jump:
		cwtl   
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _06c477_jump
		neg    %eax

	_06c477_jump:
		pop    %edx
		ret    



_06c47c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000002,_0cdc11_data
		jne    _06c49c_jump
		cmpb   $0x000008,_0cdc10_data
		jne    _06c49c_jump
		movw   $0x00005a,_0cdbfa_data

	_06c49c_jump:
		mov    $0x000007,%edx
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx
		mov    $0xffffffff,%esi
		call   _01d374_func
		xor    %ecx,%ecx
		xor    %edi,%edi
		mov    $0xffffffff,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		call   _06f3bc_func
		mov    %bx,_0cdbf6_data
		mov    %bx,_0cecca_data
		mov    %si,_0cdbee_data
		mov    %di,_0cedb2_data
		mov    %cx,_0cdbe6_data
		xor    %bl,%bl
		xor    %dh,%dh
		mov    %bl,_0cdc16_data
		mov    $0x000001,%bh
		mov    %dh,_0cdc15_data
		mov    %bh,_0cefd3_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c508_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    _0cdbcc_data,%dx
		mov    _0cdc0c_data,%al
		mov    0x000028(%esi),%bx
		mov    %eax,%ecx
		xor    %eax,%eax
		add    %edx,%ecx
		mov    0x000068(%esi),%al
		sub    %ebx,%ecx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0cdbd0_data,%di
		mov    _0cdc0d_data,%al
		mov    0x00002c(%esi),%dx
		add    %eax,%edi
		sub    %edx,%edi
		movswl %cx,%edx
		imul   %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		sub    %eax,%edi
		movswl %di,%eax
		imul   %eax,%eax
		add    %eax,%edx
		mov    _0cdc10_data,%ah
		test   %ah,%ah
		jne    _06c6d6_jump
		cmp    $0x0011a0,%edx
		jbe    _06c64c_jump
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		movb   $0x000000,0x00007f(%esi)
		xor    %eax,%eax
		mov    %ax,_0cdbe6_data
		mov    %ax,_0cdbe4_data
		mov    %ax,_0cedb2_data
		mov    %esi,%eax
		call   _077180_func
		mov    %eax,%edx
		mov    %ax,0x00004e(%esi)
		cmp    $0x000100,%ax
		jg     _06c5bb_jump
		jne    _06c5c3_jump
		testb  $0x000008,_0cdc25_data
		jne    _06c5c3_jump

	_06c5bb_jump:
		movw   $0x00ffff,0x000052(%esi)
		jmp    _06c5c9_jump

	_06c5c3_jump:
		movw   $0x000001,0x000052(%esi)

	_06c5c9_jump:
		test   %cx,%cx
		jge    _06c5d0_jump
		neg    %ecx

	_06c5d0_jump:
		test   %di,%di
		jge    _06c5d7_jump
		neg    %edi

	_06c5d7_jump:
		mov    %edx,%eax
		lea    0x000004(%esp),%ebx
		add    $0x000080,%eax
		mov    %esp,%edx
		cwtl   
		call   _05bf6c_func
		cmpw   $0x000002,(%esp)
		jle    _06c62b_jump
		cmpw   $0x000002,0x000004(%esp)
		jle    _06c62b_jump
		movswl %cx,%eax
		mov    $0x000009,%cl
		shl    %cl,%eax
		mov    0x000002(%esp),%ebx
		mov    %eax,%edx
		sar    $0x000010,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000009,%cl
		mov    %eax,%ebx
		movswl %di,%eax
		shl    %cl,%eax
		mov    -0x000002(%esp),%ecx
		mov    %eax,%edx
		sar    $0x000010,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		sar    %eax
		jmp    _06c63f_jump

	_06c62b_jump:
		cmpw   $0x000002,(%esp)
		jg     _06c63d_jump
		mov    %ecx,%eax
		mov    %ax,0x00004c(%esi)
		jmp    _06c6d6_jump

	_06c63d_jump:
		mov    %edi,%eax

	_06c63f_jump:
		mov    %ax,0x00004c(%esi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c64c_jump:
		ja     _06c69e_jump
		mov    _0cdc15_data,%dh
		xor    %al,%al
		inc    %dh
		mov    %ax,_0cdbe4_data
		mov    %dh,_0cdc15_data
		mov    0x000042(%esi),%ax
		mov    _0cdbe6_data,%dx
		sub    %eax,%edx
		mov    _0cdc15_data,%bl
		mov    %dx,_0cdbe6_data
		cmp    $0x000003,%bl
		jb     _06c6d6_jump
		xor    %bh,%bh
		mov    %bh,_0cdc15_data
		mov    %edx,%ebx
		inc    %ebx
		mov    %bx,_0cdbe6_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c69e_jump:
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		xor    %ebx,%ebx
		mov    $0x000001,%dl
		mov    %bx,_0cdbe6_data
		mov    %bx,_0cdbe4_data
		mov    %bx,_0cedb2_data
		movb   $0x000000,0x00007f(%esi)
		mov    %dl,_0cefd3_data
		movw   $0x00005f,0x00004c(%esi)

	_06c6d6_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c6e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0cdbb0_data,%eax
		mov    %eax,(%esp)
		mov    _0ced94_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		mov    $0x000080,%edi
		add    %eax,%ecx
		mov    _0cc300_data,%eax
		shl    $0x000002,%ecx
		mov    $0x000180,%edx
		add    %eax,%ecx
		mov    %edx,0x000008(%esp)
		mov    _0cdc10_data,%ah
		mov    0x00004e(%ecx),%si
		test   %ah,%ah
		jne    _06c732_jump
		mov    %ecx,%eax
		call   _06c508_func
		jmp    _06c85f_jump

	_06c732_jump:
		cmp    $0x000001,%ah
		jne    _06c85f_jump
		mov    0x00007f(%ecx),%dh
		test   %dh,%dh
		jne    _06c841_jump
		mov    0x00004c(%ecx),%dx
		cmp    $0x000064,%dx
		jle    _06c759_jump
		sub    $0x000002,%edx
		mov    %dx,0x00004c(%ecx)
		jmp    _06c766_jump

	_06c759_jump:
		cmp    $0x00005f,%dx
		jge    _06c766_jump
		mov    %edx,%eax
		inc    %eax
		mov    %ax,0x00004c(%ecx)

	_06c766_jump:
		mov    %esi,%eax
		lea    0x000010(%esp),%ebx
		add    $0x000080,%eax
		lea    0x00000c(%esp),%edx
		cwtl   
		call   _05be7c_func
		cmp    0x000008(%esp),%si
		jl     _06c795_jump
		cmpw   $0x000000,0x000052(%ecx)
		jle    _06c78d_jump
		movb   $0x000005,0x00007f(%ecx)

	_06c78d_jump:
		movw   $0x00ffff,0x000052(%ecx)
		jmp    _06c7ab_jump

	_06c795_jump:
		cmp    %di,%si
		jg     _06c7ab_jump
		cmpw   $0x000000,0x000052(%ecx)
		jge    _06c7a5_jump
		movb   $0x000005,0x00007f(%ecx)

	_06c7a5_jump:
		movw   $0x000001,0x000052(%ecx)

	_06c7ab_jump:
		movswl %si,%eax
		call   _05bf4c_func
		cwtl   
		sar    $0x000007,%eax
		mov    0x000052(%ecx),%dx
		inc    %eax
		test   %dx,%dx
		jge    _06c7c3_jump
		neg    %eax

	_06c7c3_jump:
		add    %ax,0x00004e(%ecx)
		mov    0x000028(%ecx),%edx
		mov    _0cdbd0_data,%ax
		xor    %ebx,%ebx
		mov    %eax,0x000004(%esp)
		mov    0x000068(%ecx),%bl
		mov    0x00004a(%ecx),%eax
		add    %edx,%ebx
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		sar    $0x000009,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    _0cdc0c_data,%bl
		sub    %ebx,%edx
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebp
		mov    0x000069(%ecx),%dl
		add    %edx,%ebp
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		imul   %eax,%edx
		sar    $0x000009,%edx
		mov    %ebp,%eax
		sub    %edx,%eax
		mov    _0cdbcc_data,%di
		mov    %eax,%edx
		xor    %eax,%eax
		sub    %edi,%ebx
		mov    _0cdc0d_data,%al
		mov    0x000004(%esp),%edi
		sub    %eax,%edx
		mov    %bx,_0cdbe4_data
		sub    %edi,%edx
		mov    %dx,_0cdbe6_data
		jmp    _06c85f_jump

	_06c841_jump:
		mov    %dh,%bl
		sub    %ah,%bl
		mov    %bl,0x00007f(%ecx)
		xor    %ebx,%ebx
		mov    %bx,_0cdbe4_data
		mov    %bx,_0cdbe6_data
		mov    %bx,_0cedb2_data

	_06c85f_jump:
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    (%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdc10_data,%al
		mov    0x000002(%edx,%eax,8),%al
		mov    %al,_0cdc0e_data
		movswl %si,%eax
		call   _06c42c_func
		mov    _0cdbe4_data,%dx
		mov    %al,_0cdc0f_data
		mov    0x000040(%ecx),%ax
		mov    _0cdbe6_data,%bx
		add    %eax,%edx
		add    0x000042(%ecx),%bx
		xor    %eax,%eax
		mov    _0cdc06_data,%al
		mov    %bx,_0cdbe6_data
		mov    _092224_data(%eax),%bh
		mov    %dx,_0cdbe4_data
		test   $0x000002,%bh
		je     _06c97e_jump
		testb  $0x000008,_0cdc25_data
		jne    _06c8e2_jump
		xor    %eax,%eax
		mov    _0cdc07_data,%al
		testb  $0x000002,_092224_data(%eax)
		jne    _06c903_jump

	_06c8e2_jump:
		testb  $0x000008,_0cdc25_data
		je     _06c97e_jump
		xor    %eax,%eax
		mov    _0cdc08_data,%al
		testb  $0x000002,_092224_data(%eax)
		je     _06c97e_jump

	_06c903_jump:
		cmpw   $0x000000,_0cdbe6_data
		jg     _06c914_jump
		cmpw   $0x000000,0x000042(%ecx)
		jle    _06c97e_jump

	_06c914_jump:
		mov    $_0cdba4_data,%eax
		mov    $0xffffffff,%edx
		call   _0255d0_func
		xor    %ch,%ch
		mov    _0cdbe4_data,%eax
		mov    _0cdbd0_data,%ebx
		sar    $0x000010,%eax
		mov    %dx,_0cee0c_data
		add    %eax,%ebx
		xor    %edx,%edx
		mov    %ebx,_0cdbd0_data
		xor    %eax,%eax
		mov    $0x000008,%ebx
		mov    %ax,_0cdbe6_data
		mov    $_0cdba4_data,%eax
		mov    %ch,_0cdc23_data
		call   _01d374_func
		mov    $0xffffffff,%ebx
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		mov    %bx,_0cdbf6_data
		call   _06f3bc_func
		jmp    _06c9a3_jump

	_06c97e_jump:
		xor    %eax,%eax
		mov    _0cdc08_data,%al
		testb  $0x000010,_092224_data(%eax)
		jne    _06c99e_jump
		xor    %eax,%eax
		mov    _0cdc07_data,%al
		testb  $0x000010,_092224_data(%eax)
		je     _06c9a3_jump

	_06c99e_jump:
		call   _06c9b0_func

	_06c9a3_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c9b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ced94_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		cmpw   $0x000100,0x00004e(%edx,%eax,4)
		setl   %al
		and    $0x0000ff,%eax
		and    $0x000001,%al
		mov    _0cdc25_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0cdc25_data
		shl    $0x000003,%al
		mov    $0x000002,%ebx
		mov    %ah,%dl
		mov    $0xffffffff,%esi
		or     %al,%dl
		mov    $_0cdba4_data,%eax
		mov    %dl,_0cdc25_data
		mov    %ebx,%edx
		xor    %ecx,%ecx
		call   _01d374_func
		mov    _0cdbe2_data,%eax
		xor    %dh,%dh
		mov    %cx,_0cdbe6_data
		mov    %dh,_0cdc15_data
		mov    %dh,_0cdc16_data
		sar    $0x000010,%eax
		mov    _0cdbcc_data,%edx
		mov    %si,_0cee0c_data
		sub    %eax,%edx
		mov    %si,_0cdbf6_data
		mov    %edx,_0cdbcc_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ca50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cdbcc_data,%dx
		mov    _0cdbd0_data,%bx
		mov    _0cedb2_data,%di
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cdc0c_data,%al
		mov    _0cdc18_data,%cl
		add    %edx,%eax
		add    %ebx,%ecx
		mov    %al,%bl
		mov    %eax,%esi
		and    $0x00000f,%bl
		test   %di,%di
		jg     _06ca94_jump
		jne    _06caa2_jump
		testb  $0x000008,_0cdc25_data
		je     _06caa2_jump

	_06ca94_jump:
		mov    $0x000010,%edx
		cmp    $0x00000d,%bl
		jbe    _06caaf_jump
		add    %edx,%eax
		jmp    _06caaf_jump

	_06caa2_jump:
		mov    $0xfffffff0,%edx
		cmp    $0x000004,%bl
		jae    _06caaf_jump
		sub    $0x000010,%eax

	_06caaf_jump:
		mov    _0cedb2_data,%bx
		add    %edx,%eax
		test   %bx,%bx
		je     _06cb10_jump
		mov    %ecx,%edx
		movswl %ax,%ebx
		add    $0x000010,%edx
		mov    %ebx,%eax
		movswl %dx,%edx
		call   _024930_func
		test   %ax,%ax
		jne    _06cb00_jump
		mov    %ecx,%eax
		add    $0x000020,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _024930_func
		test   %ax,%ax
		jne    _06cb00_jump
		mov    %ecx,%eax
		add    $0x000030,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _024930_func
		test   %ax,%ax
		je     _06cb10_jump

	_06cb00_jump:
		xor    %edi,%edi
		mov    %di,_0cdbe4_data
		mov    %di,_0cedb2_data

	_06cb10_jump:
		cmpw   $0x000000,_0cdbe6_data
		jge    _06cb36_jump
		add    $0x000010,%ecx
		movswl %si,%eax
		movswl %cx,%edx
		call   _024930_func
		test   %ax,%ax
		je     _06cb36_jump
		xor    %ebx,%ebx
		mov    %bx,_0cdbe6_data

	_06cb36_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06cb3c_func:
		push   %ebx
		push   %edx
		mov    _0cdbcc_data,%ax
		sub    _0cedb6_data,%ax
		cmp    $0x000001,%ax
		jle    _06cb72_jump
		mov    _0cdc25_data,%dl
		and    $0x0000f7,%dl
		mov    $_0cdba4_data,%eax
		mov    %dl,_0cdc25_data
		mov    $0x000015,%edx
		call   _01d364_func
		pop    %edx
		pop    %ebx
		ret    

	_06cb72_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		jge    _06cb99_jump
		mov    _0cdc25_data,%ah
		or     $0x000008,%ah
		mov    $0x000015,%edx
		mov    %ah,_0cdc25_data
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		pop    %edx
		pop    %ebx
		ret    

	_06cb99_jump:
		mov    $0x000014,%edx
		xor    %ebx,%ebx
		mov    $_0cdba4_data,%eax
		mov    %bx,_0cdbe4_data
		call   _01d364_func
		mov    _0cdbcc_data,%ax
		mov    %ax,_0cedb6_data
		pop    %edx
		pop    %ebx
		ret    



_06cbc0_func:
		push   %ecx
		push   %edx
		cmpw   $0x000003,_0cedb4_data
		je     _06cc20_jump
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _06cc20_jump
		mov    _0cdc10_data,%dh
		cmp    $0x000007,%dh
		je     _06cc20_jump
		cmp    $0x000009,%dh
		je     _06cc20_jump
		cmpw   $0x000000,_0cdbe6_data
		jg     _06cc20_jump
		cmp    $0x000008,%dh
		je     _06cc10_jump
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		xor    %cl,%cl
		call   _01d364_func
		mov    %cl,_0cefd3_data

	_06cc10_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cdbf6_data
		mov    %cx,_0cdbe6_data

	_06cc20_jump:
		pop    %edx
		pop    %ecx
		ret    



_06cc24_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cedd8_data,%dx
		mov    _0cdbb0_data,%esi
		test   %dx,%dx
		je     _06cc47_jump
		movw   $0x000001,_0cdbec_data

	_06cc47_jump:
		mov    $0x000012,%ebx
		mov    $_0cdb1c_data,%edx
		mov    $_0cdb1e_data,%eax
		call   _0816ad_func
		mov    _0cdbcc_data,%ax
		mov    %ax,_0cdb1c_data
		cmpb   $0x000007,_0cdc10_data
		jne    _06cc79_jump
		movw   $0x00ffff,_0cdbee_data

	_06cc79_jump:
		mov    _0cee0a_data,%eax
		mov    $0x000001,%dl
		sar    $0x000010,%eax
		mov    %dl,(%esp)
		cmp    $0xffffffff,%eax
		je     _06cc92_jump
		decw   _0cee0c_data

	_06cc92_jump:
		mov    _0ced9a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06cca6_jump
		decw   _0ced9c_data

	_06cca6_jump:
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%edx
		shl    $0x000002,%eax
		mov    _0cedf8_data,%bx
		add    %eax,%edx
		inc    %ebx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdc10_data,%al
		mov    %bx,_0cedf8_data
		mov    0x000005(%edx,%eax,8),%al
		xor    %ebx,%ebx
		shr    $0x000004,%al
		mov    %al,%bl
		cmp    $0x00000b,%bx
		je     _06cd1a_jump
		cmp    $0x00000a,%bx
		je     _06cd1a_jump
		mov    _0cdc15_data,%dh
		inc    %dh
		mov    %dh,_0cdc15_data
		cmp    $0x000003,%dh
		jb     _06cd02_jump
		xor    %ch,%ch
		mov    %ch,_0cdc15_data

	_06cd02_jump:
		mov    _0cdc16_data,%al
		inc    %al
		mov    %al,_0cdc16_data
		cmp    $0x000004,%al
		jb     _06cd1a_jump
		xor    %dl,%dl
		mov    %dl,_0cdc16_data

	_06cd1a_jump:
		cmpw   $0x000017,_0cedf8_data
		jne    _06cd2b_jump
		incw   _0cdbe6_data

	_06cd2b_jump:
		call   *_0c4d78_data
		test   %ax,%ax
		je     _06cd5b_jump
		cmpw   $0x00000c,_0cedf8_data
		jg     _06cd5b_jump
		cmpb   $0x000000,_0cefde_data
		jne    _06cd5b_jump
		cmpb   $0x000000,_0cdc23_data
		jne    _06cd5b_jump
		cmpb   $0x000002,_0cdc10_data
		jne    _06cd8e_jump

	_06cd5b_jump:
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		call   _0543d0_func
		mov    _0cefd3_data,%dl
		mov    $0x000002,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    _06cd8e_jump
		call   *_0c4d78_data
		test   %ax,%ax
		jne    _06cd8e_jump
		incb   _0cefd3_data

	_06cd8e_jump:
		cmpw   $0x000006,_0cedf8_data
		jne    _06cdc3_jump
		mov    _0cdc10_data,%ah
		cmp    $0x000018,%ah
		je     _06cda8_jump
		cmp    $0x000021,%ah
		jne    _06cdaf_jump

	_06cda8_jump:
		mov    $0x000002,%edx
		jmp    _06cdb9_jump

	_06cdaf_jump:
		cmp    $0x000020,%ah
		jne    _06cdc3_jump
		mov    $0x000011,%edx

	_06cdb9_jump:
		mov    $_0cdba4_data,%eax
		call   _01d364_func

	_06cdc3_jump:
		mov    _0cdbf4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06cddd_jump
		mov    _0cdbe6_data,%ax
		add    %ax,_0cdbf6_data

	_06cddd_jump:
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _024a00_func
		mov    _0cdc10_data,%cl
		mov    %al,%dl
		cmp    $0x000008,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06ce21_jump
		cmp    $0x00001f,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06ce21_jump
		call   _06a9b4_func
		cmpb   $0x00000f,_0cdc10_data
		jne    _06ce21_jump
		call   _06ca50_func

	_06ce21_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _06cbc0_func
		mov    _0cdbe4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _06ce7e_jump
		cmpb   $0x00000f,_0cdc10_data
		jne    _06ce7e_jump
		cmp    $0x00000b,%bx
		jne    _06ce7e_jump
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		shl    $0x000002,%eax
		lea    (%esi,%eax,1),%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdc10_data,%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x000010,%bh
		xor    %cl,%cl
		mov    %bh,0x000005(%edx,%eax,8)
		mov    %cl,_0cdc15_data
		mov    %cl,_0cdc16_data

	_06ce7e_jump:
		cmpw   $0x000000,_0cdbe6_data
		jl     _06ceca_jump
		mov    _0cdc10_data,%al
		test   %al,%al
		jne    _06ceaa_jump
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func
		xor    %eax,%eax
		mov    %ax,_0cdbf6_data
		jmp    _06ceca_jump

	_06ceaa_jump:
		cmp    $0x000011,%al
		je     _06ceb2_jump
		cmp    $0x000012,%al
		jne    _06ceca_jump

	_06ceb2_jump:
		mov    $0x000013,%edx
		mov    $_0cdba4_data,%eax
		xor    %edi,%edi
		call   _01d364_func
		mov    %di,_0cdbf6_data

	_06ceca_jump:
		mov    _0cdc10_data,%dh
		cmp    $0x000011,%dh
		je     _06d1ae_jump
		test   %dh,%dh
		je     _06d1ae_jump
		cmp    $0x000009,%dh
		je     _06d1ae_jump
		cmp    $0x00001f,%dh
		je     _06d1ae_jump
		cmp    $0x00000d,%dh
		jne    _06cf06_jump
		cmpw   $0x000000,_0cdbe6_data
		jl     _06d1ae_jump

	_06cf06_jump:
		cmpw   $0x000003,_0cedf8_data
		jl     _06d1ae_jump
		cmpw   $0x000003,_0cedb4_data
		je     _06d1ae_jump
		xor    %eax,%eax
		mov    _0cdc06_data,%al
		mov    _092224_data(%eax),%dl
		test   $0x000002,%dl
		je     _06d15f_jump
		test   $0x000040,%dl
		je     _06cf62_jump
		mov    _0cdbe6_data,%dx
		mov    _092224_data(%eax),%bl
		shl    $0x000004,%edx
		test   $0x000080,%bl
		je     _06cf5b_jump
		add    %dx,_0cedb2_data
		jmp    _06cf62_jump

	_06cf5b_jump:
		sub    %dx,_0cedb2_data

	_06cf62_jump:
		mov    $_0cdba4_data,%eax
		call   _0255d0_func
		xor    %ecx,%ecx
		xor    %bh,%bh
		mov    _0cdbe4_data,%eax
		mov    _0cdbd0_data,%edx
		mov    %bh,_0cdc23_data
		mov    %bh,_0cefde_data
		sar    $0x000010,%eax
		mov    %cx,_0cdbe6_data
		add    %eax,%edx
		mov    $_0cdba4_data,%eax
		mov    %edx,_0cdbd0_data
		call   _025174_func
		test   %al,%al
		jne    _06cfd6_jump
		cmpw   $0x000006,_0cede4_data
		jne    _06cfc7_jump
		cmpw   $0x000001,_0cedd0_data
		jne    _06cfc7_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _06cfd1_jump

	_06cfc7_jump:
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax

	_06cfd1_jump:
		call   _06f3bc_func

	_06cfd6_jump:
		cmpw   $0x000000,_0cdbec_data
		jne    _06d05e_jump
		mov    $0x000001,%al

	_06cfe6_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0cdb1a_data(,%edx,2),%bx
		cmp    _0cdb1c_data(,%edx,2),%bx
		jne    _06d002_jump
		inc    %al
		cmp    $0x00000a,%al
		jb     _06cfe6_jump

	_06d002_jump:
		cmp    $0x00000a,%al
		je     _06d055_jump
		and    $0x0000ff,%eax
		mov    _0cdb1a_data(,%eax,2),%dx
		cmp    _0cdb1c_data(,%eax,2),%dx
		jge    _06d039_jump
		mov    _0cedb0_data,%ebx
		mov    $0xffffff00,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _06d031_jump
		mov    %ebx,%eax

	_06d031_jump:
		mov    %ax,_0cedb2_data
		jmp    _06d05e_jump

	_06d039_jump:
		mov    _0cedb0_data,%ebx
		mov    $0x000100,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _06d04d_jump
		mov    %ebx,%eax

	_06d04d_jump:
		mov    %ax,_0cedb2_data
		jmp    _06d05e_jump

	_06d055_jump:
		xor    %esi,%esi
		mov    %si,_0cedb2_data

	_06d05e_jump:
		mov    $0xffffffff,%eax
		mov    _0cdc10_data,%ch
		mov    %ax,_0cee0c_data
		cmp    $0x000003,%ch
		jne    _06d086_jump
		cmpb   $0x000000,_0cdc0f_data
		jne    _06d0a4_jump
		movb   $0x000001,_0cefd3_data
		jmp    _06d0a4_jump

	_06d086_jump:
		cmp    $0x000008,%ch
		jne    _06d0a4_jump
		mov    _0cdbf8_data,%eax
		mov    $0x00005a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _06d09e_jump
		mov    %ebx,%eax

	_06d09e_jump:
		mov    %ax,_0cdbfa_data

	_06d0a4_jump:
		mov    _0cdc10_data,%dh
		cmp    $0x000011,%dh
		je     _06d0b9_jump
		cmp    $0x000012,%dh
		je     _06d0b9_jump
		cmp    $0x000013,%dh
		jne    _06d111_jump

	_06d0b9_jump:
		testb  $0x000001,_0ced81_data
		je     _06d10a_jump
		mov    _0cdbb0_data,%eax
		mov    0x000004(%eax),%eax
		mov    $0x000004,%cl
		movsbw 0x000018(%eax),%ax
		test   %ax,%ax
		js     _06d0db_jump
		sar    %cl,%ax
		jmp    _06d0e4_jump

	_06d0db_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06d0e4_jump:
		movswl %ax,%edx
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06d0f5_jump
		neg    %eax

	_06d0f5_jump:
		cmp    %edx,%eax
		jl     _06d10a_jump
		mov    $0x000007,%ebx
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		jmp    _06d13f_jump

	_06d10a_jump:
		mov    $0x00002b,%ebx
		jmp    _06d138_jump

	_06d111_jump:
		cmp    $0x000019,%dh
		je     _06d11b_jump
		cmp    $0x00001a,%dh
		jne    _06d122_jump

	_06d11b_jump:
		mov    $0x000034,%ebx
		jmp    _06d138_jump

	_06d122_jump:
		cmp    $0x00001b,%dh
		je     _06d12c_jump
		cmp    $0x00001c,%dh
		jne    _06d133_jump

	_06d12c_jump:
		mov    $0x000035,%ebx
		jmp    _06d138_jump

	_06d133_jump:
		mov    $0x000008,%ebx

	_06d138_jump:
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx

	_06d13f_jump:
		call   _01d374_func
		cmpw   $0x0000c8,_0cdbf6_data
		jl     _06d154_jump
		call   _0691b0_func

	_06d154_jump:
		movw   $0x00ffff,_0cdbf6_data
		jmp    _06d1ae_jump

	_06d15f_jump:
		mov    _0cdc10_data,%dh
		cmp    $0x000007,%dh
		je     _06d1ae_jump
		cmp    $0x000008,%dh
		jne    _06d1a2_jump
		cmpw   $0x000000,_0cdbe6_data
		jl     _06d185_jump
		mov    $0xffffffff,%edx
		mov    %esp,%eax
		call   _069404_func

	_06d185_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _06d197_jump
		cmpb   $0x000008,_0cdc10_data
		je     _06d1ae_jump

	_06d197_jump:
		movw   $0x00005a,_0cdbfa_data
		jmp    _06d1ae_jump

	_06d1a2_jump:
		mov    $0xffffffff,%edx
		mov    %esp,%eax
		call   _069404_func

	_06d1ae_jump:
		cmpw   $0x000003,_0cedb4_data
		je     _06d1dc_jump
		cmpb   $0x000002,_0cdc11_data
		jne    _06d1dc_jump
		cmpb   $0x00001f,_0cdc10_data
		setne  %al
		and    $0x0000ff,%eax
		je     _06d1dc_jump
		call   _069318_func
		call   _06ae58_func

	_06d1dc_jump:
		cmpb   $0x000001,(%esp)
		jne    _06d20b_jump
		cmpw   $0x000004,_0cdbe6_data
		jle    _06d1f5_jump
		movw   $0x000004,_0cdbe6_data

	_06d1f5_jump:
		mov    _0cdbe4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff6,%eax
		jge    _06d20b_jump
		movw   $0x00fff6,_0cdbe6_data

	_06d20b_jump:
		cmpw   $0x000002,_0cede4_data
		jne    _06d262_jump
		cmpw   $0x00000f,_0cedd0_data
		jne    _06d262_jump
		mov    _0cdbcc_data,%edx
		mov    _0cede6_data,%eax
		add    $0x000096,%edx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _06d262_jump
		mov    _0cdb98_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    _0cdbd0_data,%ebx
		sub    $0x000064,%eax
		cmp    %ebx,%eax
		jge    _06d262_jump
		cmpb   $0x0000ff,_0cdc1a_data
		je     _06d262_jump
		call   _077ca0_func
		call   _03b970_func

	_06d262_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_06d26a_jump:
		ret    



_06d26c_func:
		cmpb   $0x000000,_0cdcd2_data
		je     _06d26a_jump
		mov    _0cdc30_data,%eax
		call   _077338_func
		jmp    _064814_func



_06d284_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		andb   $0x0000f7,_0ced80_data
		mov    _0ce4aa_data,%bx
		dec    %ebx
		xor    %ah,%ah
		mov    %bx,_0ce4aa_data
		mov    _0cefcc_data,%bh
		mov    %ah,_0ce4b0_data
		test   %bh,%bh
		jne    _06d2e4_jump
		cmpb   $0x000003,_0cdc11_data
		jne    _06d2c2_jump
		cmpb   $0x000020,_0cdc10_data
		je     _06d2c9_jump

	_06d2c2_jump:
		mov    $0x000001,%eax
		jmp    _06d2cb_jump

	_06d2c9_jump:
		xor    %eax,%eax

	_06d2cb_jump:
		test   %eax,%eax
		je     _06d2e4_jump
		movb   $0x000005,_0cefba_data
		mov    $0x000001,%ah
		mov    %edx,_0cdb14_data
		mov    %ah,_0cefcd_data

	_06d2e4_jump:
		call   _06d26c_func
		pop    %edx
		pop    %ebx
		ret    



_06d2ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000016,%ebx
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		xor    %ecx,%ecx
		call   _01d374_func
		mov    %cx,_0cedb2_data
		xor    %ah,%ah
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ah,_0cdc0f_data
		mov    %dx,_0cdbe6_data
		mov    _0cefa9_data,%dl
		mov    %bx,_0cdbe4_data
		test   %dl,%dl
		je     _06d348_jump
		mov    _0cee04_data,%eax
		mov    _0cdbcc_data,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,_0cdbcc_data

	_06d348_jump:
		mov    $0x000001,%dh
		mov    $0x000078,%edi
		xor    %esi,%esi
		mov    $_0cdba4_data,%eax
		mov    %si,_0cee06_data
		mov    %dh,_0cefd4_data
		mov    %di,_0cdbfa_data
		mov    %dh,_0cefcc_data
		call   _076a30_func
		call   _06d26c_func
		call   _01cb6c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06d388_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cecac_data,%eax
		sar    $0x000010,%eax
		mov    _0cdbcc_data,%edx
		sub    $0x00000a,%eax
		cmp    %edx,%eax
		jg     _06d3da_jump
		xor    %eax,%eax
		mov    _0cdbda_data,%edx
		mov    _0cdc0d_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0xffffffec,%eax
		jge    _06d3c5_jump
		mov    _0cee28_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06d3da_jump

	_06d3c5_jump:
		mov    _0cecae_data,%eax
		sar    $0x000010,%eax
		mov    _0cdbcc_data,%ebx
		add    $0x00000a,%eax
		cmp    %ebx,%eax
		jge    _06d3f3_jump

	_06d3da_jump:
		mov    $0x000001,%eax
		xor    %cl,%cl
		xor    %edx,%edx
		mov    %cl,_0cdc1a_data
		call   _02d60c_func
		jmp    _06d5b5_jump

	_06d3f3_jump:
		cmpw   $0x0000b4,_0cdbdc_data
		jle    _06d417_jump
		mov    $0x000001,%eax
		xor    %bh,%bh
		xor    %edx,%edx
		mov    %bh,_0cdc1a_data
		call   _02d60c_func
		jmp    _06d5b5_jump

	_06d417_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _06d429_jump
		cmpb   $0x000009,_0cdc10_data
		je     _06d430_jump

	_06d429_jump:
		mov    $0x000001,%eax
		jmp    _06d432_jump

	_06d430_jump:
		xor    %eax,%eax

	_06d432_jump:
		test   %eax,%eax
		je     _06d4d8_jump
		cmpb   $0x000003,_0cdc11_data
		jne    _06d44c_jump
		cmpb   $0x000016,_0cdc10_data
		je     _06d453_jump

	_06d44c_jump:
		mov    $0x000001,%eax
		jmp    _06d455_jump

	_06d453_jump:
		xor    %eax,%eax

	_06d455_jump:
		test   %eax,%eax
		je     _06d4d8_jump
		testb  $0x000004,_0cdc25_data
		je     _06d4d8_jump
		cmpb   $0x00000a,_0cdc06_data
		jne    _06d490_jump
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06d490_jump
		cmpb   $0x000006,_0cdc11_data
		je     _06d490_jump
		call   _06d2ec_func
		jmp    _06d4d8_jump

	_06d490_jump:
		xor    %eax,%eax
		mov    _0cdbd0_data,%edx
		mov    _0cdc0d_data,%al
		add    %eax,%edx
		mov    _0cdb98_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		add    $0x000010,%eax
		cmp    %eax,%edx
		jle    _06d4d8_jump
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		cmpw   $0x000000,_0cdbe6_data
		jge    _06d4d8_jump
		xor    %ecx,%ecx
		mov    %cx,_0cdbe6_data

	_06d4d8_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _06d4ea_jump
		cmpb   $0x000009,_0cdc10_data
		je     _06d51d_jump

	_06d4ea_jump:
		cmpb   $0x000003,_0cdc11_data
		jne    _06d5b5_jump
		mov    _0cdc10_data,%dh
		cmp    $0x000016,%dh
		je     _06d50b_jump
		cmp    $0x000020,%dh
		jne    _06d5b5_jump

	_06d50b_jump:
		mov    $_0cdba4_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _06d5b5_jump

	_06d51d_jump:
		mov    _0cefd4_data,%bh
		dec    %bh
		mov    %bh,_0cefd4_data
		jne    _06d5ac_jump
		cmpb   $0x000000,_0cefd1_data
		jne    _06d5ac_jump
		mov    $0x000002,%al
		mov    _0cdbc8_data,%ecx
		mov    %al,_0cdc1a_data
		test   %ecx,%ecx
		je     _06d594_jump
		mov    $0x000040,%dl
		mov    _0cdc25_data,%ah
		xor    %esi,%esi
		and    $0x0000fb,%ah
		mov    %esi,_0cdbc8_data
		mov    %ah,_0cdc25_data
		mov    $_0cdba4_data,%eax
		mov    %dl,_0cefd4_data
		call   _06d284_func
		cmpw   $0x000000,_0ce4aa_data
		jge    _06d594_jump
		mov    $0x000001,%dh
		mov    %bh,_0cdc1a_data
		xor    %eax,%eax
		mov    %dh,_0cefd1_data
		mov    %ax,_0ce4aa_data

	_06d594_jump:
		mov    _0cdc1a_data,%al
		mov    $0x00005a,%edx
		mov    %al,_0ce4b3_data
		mov    %dx,_0cdbfa_data
		jmp    _06d5b5_jump

	_06d5ac_jump:
		movw   $0x00ffff,_0cdbee_data

	_06d5b5_jump:
		cmpl   $0x000000,_0cdbc8_data
		je     _06d5e1_jump
		testb  $0x000004,_0cdc25_data
		je     _06d5e1_jump
		mov    _0cedb4_data,%bx
		cmp    $0x000003,%bx
		je     _06d5e1_jump
		cmp    $0x000004,%bx
		je     _06d5e1_jump
		mov    $0x000001,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d5e1_jump:
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06d5e8_func:
		push   %edx
		push   %esi
		call   _078018_func
		mov    _0cdc1a_data,%dl
		mov    _0cdbf8_data,%eax
		dec    %dl
		sar    $0x000010,%eax
		mov    %dl,_0cdc1a_data
		cmp    $0xffffffff,%eax
		jne    _06d65d_jump
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdc10_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _06d654_jump
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _06d654_jump
		movw   $0x00003c,_0cdbfa_data
		jmp    _06d65d_jump

	_06d654_jump:
		movw   $0x000078,_0cdbfa_data

	_06d65d_jump:
		cmpb   $0x0000ff,_0cdc1a_data
		jne    _06d68c_jump
		cmpw   $0x000002,_0cedb4_data
		sete   %al
		xor    %ah,%ah
		add    $0x000003,%eax
		xor    %esi,%esi
		mov    %ax,_0cedb4_data
		call   _01cb6c_func
		mov    %si,_0cedf8_data

	_06d68c_jump:
		pop    %esi
		pop    %edx
		ret    



_06d690_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %ebp
		mov    _0cede4_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc300_data,%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		cmpl   $0x000000,0x000024(%ecx)
		je     _06d76f_jump
		mov    0x000028(%ecx),%eax
		mov    _0cdbcc_data,%ebx
		sub    $0x000052,%eax
		cmp    %ebx,%eax
		jge    _06d754_jump
		mov    0x000028(%ecx),%eax
		add    $0x000096,%eax
		cmp    %ebx,%eax
		jle    _06d754_jump
		mov    0x00002c(%ecx),%eax
		mov    _0cdbd0_data,%edi
		add    $0x000060,%eax
		cmp    %edi,%eax
		jle    _06d754_jump
		mov    %eax,_0cdbd0_data
		cmpb   $0x000002,_0cdc11_data
		je     _06d74a_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		mov    0x000040(%ecx),%eax
		mov    $0xffffffff,%ebx
		sar    $0x000010,%eax
		xor    %edx,%edx
		call   _053c60_func
		mov    %ax,_0cdbe6_data
		mov    %dx,_0cedf8_data
		xor    %dl,%dl
		mov    %bx,_0cee0c_data
		mov    %dl,_0cdc15_data
		mov    %dl,_0cdc16_data
		mov    %dl,_0cefd3_data
		jmp    _06d754_jump

	_06d74a_jump:
		mov    0x000042(%ecx),%ax
		mov    %ax,_0cdbe6_data

	_06d754_jump:
		mov    _0cedf8_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%ecx),%ebp
		add    $0x0000a8,%eax
		cmp    %ebp,%eax
		jge    _06d76f_jump
		andb   $0x0000fb,0x000081(%ecx)

	_06d76f_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06d778_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		xor    %edx,%edx
		mov    _0cdbe4_data,%bx
		mov    %edx,0x000004(%esp)
		test   %bx,%bx
		je     _06da6e_jump
		jle    _06d7a2_jump
		mov    _0cedae_data,%eax
		sar    $0x000010,%eax
		jmp    _06d7a4_jump

	_06d7a2_jump:
		xor    %eax,%eax

	_06d7a4_jump:
		mov    _0cedaa_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    %ax,0x000028(%esp)
		mov    _0cedc8_data,%eax
		sar    $0x000010,%eax
		mov    _0ce4b2_data,%edx
		sar    $0x000002,%eax
		sar    $0x000010,%edx
		mov    %eax,0x000020(%esp)
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    _0ce57c_data,%ax
		xor    %edi,%edi
		test   %ax,%ax
		jle    _06da6e_jump

	_06d7ef_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000004,_092266_data(,%eax,4)
		je     _06da42_jump
		lea    0x000018(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x00001c(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    0x00000e(%esp),%edx
		mov    %eax,%ebx
		sar    $0x000010,%edx
		sar    $0x000003,%ebx
		add    %ebx,%edx
		mov    %dx,0x000010(%esp)
		mov    %eax,%edx
		sar    $0x000002,%edx
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)
		testb  $0x000020,0x000081(%esi)
		je     _06d88e_jump
		lea    0x000014(%esp),%eax
		lea    0x00000c(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000028(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		mov    _0cdbee_data,%ax
		cmp    0x000034(%esi),%ax
		sete   %al
		xor    %ebx,%ebx
		mov    0x00000a(%esp),%edx
		mov    %al,%bl
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000074(%esi),%al
		add    %edx,%eax
		add    %ebx,%eax
		mov    %ax,0x00001c(%esp)
		jmp    _06d89e_jump

	_06d88e_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x00001c(%esp)

	_06d89e_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		mov    0x00001c(%esp),%edx
		add    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,0x000018(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000010,_092267_data(,%eax,4)
		je     _06d8e5_jump
		mov    0x000010(%esp),%ecx
		mov    %edx,%ebx
		mov    0x000008(%esp),%esi
		add    $0x000002,%ebx
		add    $0x000006,%ecx
		sub    $0x00000c,%esi
		mov    %bx,0x00001c(%esp)
		mov    %cx,0x000010(%esp)
		mov    %si,0x000008(%esp)

	_06d8e5_jump:
		mov    0x000010(%esp),%esi
		mov    0x000008(%esp),%eax
		mov    _0cdbe4_data,%dx
		add    %eax,%esi
		test   %dx,%dx
		jle    _06d92d_jump
		mov    _0cdbe2_data,%eax
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		lea    (%edx,%eax,1),%ecx
		mov    %edx,%ebx
		sub    %eax,%ebx
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _06d927_jump
		cmp    %ecx,%eax
		jg     _06d927_jump
		mov    $0x000001,%eax
		jmp    _06d929_jump

	_06d927_jump:
		xor    %eax,%eax

	_06d929_jump:
		test   %eax,%eax
		jne    _06d95f_jump

	_06d92d_jump:
		mov    _0cdbe2_data,%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		mov    %edx,%ecx
		sub    %eax,%ecx
		lea    (%edx,%eax,1),%ebx
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _06d955_jump
		cmp    %ecx,%eax
		jg     _06d955_jump
		mov    $0x000001,%eax
		jmp    _06d957_jump

	_06d955_jump:
		xor    %eax,%eax

	_06d957_jump:
		test   %eax,%eax
		je     _06da42_jump

	_06d95f_jump:
		mov    0x00001c(%esp),%eax
		mov    0x000018(%esp),%ebx
		mov    _0cedae_data,%si
		add    %ebx,%eax
		mov    0x00001a(%esp),%ebx
		movswl %ax,%edx
		sar    $0x000010,%ebx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _06d98e_jump
		cmp    %ecx,%eax
		jg     _06d98e_jump
		mov    $0x000001,%eax
		jmp    _06d990_jump

	_06d98e_jump:
		xor    %eax,%eax

	_06d990_jump:
		test   %eax,%eax
		jne    _06da38_jump
		mov    0x000020(%esp),%ecx
		mov    0x00001a(%esp),%ebx
		add    %ecx,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _06d9b9_jump
		cmp    %ecx,%eax
		jg     _06d9b9_jump
		mov    $0x000001,%eax
		jmp    _06d9bb_jump

	_06d9b9_jump:
		xor    %eax,%eax

	_06d9bb_jump:
		test   %eax,%eax
		jne    _06da38_jump
		mov    0x000020(%esp),%eax
		mov    0x00001a(%esp),%ebx
		mov    %edx,%ecx
		add    %eax,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		cmp    %ebx,%eax
		jl     _06d9e4_jump
		cmp    %ecx,%eax
		jg     _06d9e4_jump
		mov    $0x000001,%eax
		jmp    _06d9e6_jump

	_06d9e4_jump:
		xor    %eax,%eax

	_06d9e6_jump:
		test   %eax,%eax
		jne    _06da38_jump
		mov    0x000020(%esp),%ebx
		mov    %edx,%ecx
		add    %ebx,%esi
		mov    0x00001a(%esp),%ebx
		movswl %si,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jl     _06da0b_jump
		cmp    %ecx,%eax
		jg     _06da0b_jump
		mov    $0x000001,%eax
		jmp    _06da0d_jump

	_06da0b_jump:
		xor    %eax,%eax

	_06da0d_jump:
		test   %eax,%eax
		jne    _06da38_jump
		mov    0x000020(%esp),%ecx
		mov    0x00001a(%esp),%ebx
		add    %ecx,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _06da32_jump
		cmp    %ecx,%eax
		jg     _06da32_jump
		mov    $0x000001,%eax
		jmp    _06da34_jump

	_06da32_jump:
		xor    %eax,%eax

	_06da34_jump:
		test   %eax,%eax
		je     _06da42_jump

	_06da38_jump:
		movl   $0x000001,0x000004(%esp)
		jmp    _06da6e_jump

	_06da42_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0ce4b2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc300_data,%esi
		mov    _0ce57c_data,%dx
		add    %eax,%esi
		cmp    %dx,%di
		jl     _06d7ef_jump

	_06da6e_jump:
		mov    0x000004(%esp),%eax
		add    $0x00002c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06da7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cefe8_data,%bl
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,8),%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $_0ce57e_data,%eax
		mov    _0cdbcc_data,%dx
		mov    %dx,(%eax)
		mov    _0cdbd0_data,%dx
		mov    %dx,0x000002(%eax)
		mov    _0cdc11_data,%dl
		mov    %dl,0x000008(%eax)
		mov    _0cdc10_data,%dl
		mov    %dl,0x000009(%eax)
		mov    _0cdc0e_data,%dl
		mov    %dl,0x00000a(%eax)
		mov    _0cdc0f_data,%dl
		mov    %dl,0x00000b(%eax)
		mov    _0cdc25_data,%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    %dl,0x00000c(%eax)
		mov    _0cdbfe_data,%dl
		mov    %dl,0x000011(%eax)
		mov    _0cdcd2_data,%dl
		mov    %dl,0x000010(%eax)
		test   %dl,%dl
		je     _06db28_jump
		mov    _0cdc30_data,%edx
		mov    0x000028(%edx),%cx
		mov    %cx,0x000004(%eax)
		mov    0x00002c(%edx),%cx
		mov    %cx,0x000006(%eax)
		mov    0x00006a(%edx),%cl
		mov    %cl,0x00000d(%eax)
		mov    0x00006b(%edx),%cl
		mov    %cl,0x00000e(%eax)
		mov    0x000081(%edx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    %dl,0x00000f(%eax)

	_06db28_jump:
		inc    %bl
		cmp    $0x000064,%bl
		jbe    _06db39_jump
		mov    $0x000001,%ah
		xor    %bl,%bl
		mov    %ah,_0cefe2_data

	_06db39_jump:
		mov    %bl,_0cefe8_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06db44_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06db7f_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    0x000060(%eax),%dx
		cmp    $0x0000a0,%dx
		je     _06dc66_jump
		cmp    $0x00009f,%dx
		je     _06dc66_jump

	_06db7f_jump:
		cmpb   $0x000000,_0cdc11_data
		jne    _06dc66_jump
		mov    _0cdc10_data,%dl
		cmp    $0x00000d,%dl
		je     _06dc66_jump
		cmp    $0x00000b,%dl
		je     _06dc66_jump
		cmp    $0x00000c,%dl
		je     _06dc66_jump
		cmp    $0x000012,%dl
		je     _06dc66_jump
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06dbc4_jump
		neg    %eax

	_06dbc4_jump:
		cmp    $0x000003,%eax
		jle    _06dc15_jump
		mov    _0cdc10_data,%cl
		cmp    $0x000028,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06dc15_jump
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    %cl,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		jne    _06dc66_jump
		cmp    $0x000008,%cl
		je     _06dc66_jump
		cmp    $0x000034,%cl
		je     _06dc66_jump
		cmp    $0x000035,%cl
		je     _06dc66_jump
		mov    $0x000029,%ebx
		jmp    _06dc5a_jump

	_06dc15_jump:
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06dc23_jump
		neg    %eax

	_06dc23_jump:
		cmp    $0x000002,%eax
		jg     _06dc66_jump
		mov    _0cdc10_data,%ch
		cmp    $0x000028,%ch
		jne    _06dc66_jump
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0cdbb0_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %ch,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _06dc66_jump
		mov    $0x00002a,%ebx

	_06dc5a_jump:
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		call   _01d374_func

	_06dc66_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06dc6c_func:
		push   %edx
		cmpb   $0x000000,_0cdc11_data
		jne    _06dcc3_jump
		cmpb   $0x000028,_0cdc10_data
		jne    _06dcc3_jump
		testb  $0x000008,_0cdc25_data
		je     _06dc8f_jump
		mov    $0x000001,%eax
		jmp    _06dc94_jump

	_06dc8f_jump:
		mov    $0xffffffff,%eax

	_06dc94_jump:
		mov    %eax,%edx
		mov    _0cdbe2_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		cmp    $0x000000,%eax
		je     _06dcaf_jump
		mov    $0x000001,%eax
		jg     _06dcaf_jump
		neg    %eax

	_06dcaf_jump:
		cmp    %edx,%eax
		jne    _06dcbc_jump
		movb   $0x00004f,_0cdc0e_data
		pop    %edx
		ret    

	_06dcbc_jump:
		movb   $0x000050,_0cdc0e_data

	_06dcc3_jump:
		pop    %edx
		ret    



_06dcc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0xffffffff,%edx
		mov    $_0cdba4_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0cdbfa_data
		mov    %bx,_0cee08_data
		mov    %bx,_0cee06_data
		call   _01db8c_func
		mov    $_0cdba4_data,%eax
		call   _01e2ec_func
		call   _06cc24_func
		call   _06a4c8_func
		call   _057b18_func
		mov    _0cdbe6_data,%si
		test   %si,%si
		jle    _06dd1e_jump
		call   _056cc8_func
		jmp    _06dd25_jump

	_06dd1e_jump:
		jge    _06dd25_jump
		call   _056be8_func

	_06dd25_jump:
		mov    _0cdbe4_data,%ax
		test   %ax,%ax
		jge    _06dd37_jump
		call   _05729c_func
		jmp    _06dd3e_jump

	_06dd37_jump:
		jle    _06dd3e_jump
		call   _057218_func

	_06dd3e_jump:
		xor    %eax,%eax
		call   _0646b4_func
		cmpb   $0x000001,_0cefa9_data
		jne    _06dd62_jump
		mov    _0ced7e_data,%ax
		xor    %dl,%dl
		mov    %ax,_0ced80_data
		mov    %dl,_0cefa9_data

	_06dd62_jump:
		mov    $_0cdba4_data,%eax
		call   _01cbd0_func
		test   %al,%al
		jne    _06dd8f_jump
		cmpb   $0x000002,_0cdc11_data
		jne    _06dd82_jump
		cmpb   $0x000008,_0cdc10_data
		je     _06dd89_jump

	_06dd82_jump:
		mov    $0x000001,%eax
		jmp    _06dd8b_jump

	_06dd89_jump:
		xor    %eax,%eax

	_06dd8b_jump:
		test   %eax,%eax
		je     _06ddec_jump

	_06dd8f_jump:
		mov    $_0cdba4_data,%eax
		mov    $0x000080,%cl
		call   _06d284_func
		mov    _0cdc25_data,%bh
		mov    %cl,_0cefd4_data
		and    $0x0000fb,%bh
		mov    $0x000001,%ch
		mov    %bh,_0cdc25_data
		mov    _0ce4aa_data,%bx
		mov    %ch,_0cefcd_data
		test   %bx,%bx
		jl     _06ddd4_jump
		mov    $0x000002,%dl
		mov    %dl,_0cdc1a_data
		mov    %dl,_0ce4b3_data
		jmp    _06ddec_jump

	_06ddd4_jump:
		xor    %al,%al
		xor    %ecx,%ecx
		mov    %al,_0cdc1a_data
		mov    $0x000001,%ah
		mov    %cx,_0ce4aa_data
		mov    %ah,_0cefd1_data

	_06ddec_jump:
		mov    $_0cdba4_data,%eax
		call   _0545ac_func
		call   _06da7c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06de00_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_0cdba4_data,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _06de28_jump
		xor    %edx,%edx
		mov    %dx,_0cdbe4_data

	_06de28_jump:
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0cdc10_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _06de4f_jump
		xor    %al,%al
		jmp    _06de51_jump

	_06de4f_jump:
		mov    $0x000002,%al

	_06de51_jump:
		cmpw   $0x000000,_0cdbe6_data
		jle    _06deb3_jump
		mov    _0cdbe4_data,%eax
		mov    _0cdbd0_data,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    _0cdc0d_data,%al
		add    %edx,%eax
		sar    $0x000004,%eax
		mov    %edx,_0cdbd0_data
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0cdbcc_data,%ecx
		mov    _0cdc0c_data,%al
		add    %ecx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		mov    _0cdbe4_data,%edx
		mov    _0cdbd0_data,%esi
		sar    $0x000010,%edx
		add    %edx,%esi
		xor    %ah,%ah
		mov    %esi,_0cdbd0_data
		jmp    _06dec3_jump

	_06deb3_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_0cdba4_data,%eax
		call   _024a00_func
		xor    %ah,%ah

	_06dec3_jump:
		cwtl   
		testb  $0x000002,_092224_data(%eax)
		je     _06df31_jump
		mov    _0cdbe4_data,%eax
		mov    _0cdbd0_data,%edi
		sar    $0x000010,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    _0cdc0a_data,%al
		mov    _092224_data(%eax),%cl
		mov    %edi,_0cdbd0_data
		test   $0x000002,%cl
		jne    _06df13_jump
		cmpw   $0x000000,_0cdbe6_data
		jge    _06df13_jump
		xor    %esi,%esi
		lea    0x000004(%edi),%ebp
		mov    %si,_0cdbe6_data
		mov    %ebp,_0cdbd0_data
		jmp    _06df1d_jump

	_06df13_jump:
		mov    $_0cdba4_data,%eax
		call   _0255d0_func

	_06df1d_jump:
		xor    %edi,%edi
		mov    $0xffffffff,%eax
		mov    %di,_0cdbe4_data
		mov    %ax,_0cdbee_data

	_06df31_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_06df38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000010,_092265_data(,%eax,4)
		je     _06df76_jump
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		call   _053c60_func
		mov    %eax,%ebx
		jmp    _06df7a_jump

	_06df76_jump:
		mov    0x000040(%edx),%bx

	_06df7a_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000020,_092265_data(,%eax,4)
		je     _06df97_jump
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		call   _053c60_func
		jmp    _06df9b_jump

	_06df97_jump:
		mov    0x000042(%edx),%ax

	_06df9b_jump:
		mov    _0cdbe4_data,%cx
		add    %ebx,%ecx
		mov    %ecx,%esi
		mov    0x00004e(%edx),%bx
		mov    _0cdbe6_data,%di
		add    %ebx,%esi
		add    0x00004c(%edx),%di
		mov    %cx,_0cdbe4_data
		mov    %edi,%ebx
		mov    %di,_0cdbe6_data
		add    %eax,%ebx
		mov    %si,_0cdbe4_data
		mov    %bx,_0cdbe6_data
		call   _06de00_func
		cmpl   $0x000000,0x000024(%edx)
		jne    _06dfeb_jump
		movw   $0x00ffff,_0cdbee_data

	_06dfeb_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06dff4_func:
		push   %ecx
		push   %edx
		cmpb   $0x000001,_0cefa9_data
		jne    _06e09e_jump
		cmpw   $0x000000,_0cedb2_data
		jne    _06e046_jump
		cmpw   $0x000000,_0cdbe6_data
		jne    _06e046_jump
		call   _040824_func
		test   %ax,%ax
		je     _06e031_jump
		testb  $0x000008,_0cdc25_data
		jne    _06e031_jump
		mov    $0x000001,%eax
		jmp    _06e075_jump

	_06e031_jump:
		call   _0407b4_func
		test   %ax,%ax
		je     _06e07a_jump
		testb  $0x000008,_0cdc25_data
		je     _06e07a_jump
		jmp    _06e073_jump

	_06e046_jump:
		cmpw   $0x000000,_0cedb2_data
		jle    _06e060_jump
		testb  $0x000008,_0cdc25_data
		jne    _06e060_jump
		mov    $0x000001,%eax
		jmp    _06e075_jump

	_06e060_jump:
		cmpw   $0x000000,_0cedb2_data
		jge    _06e07a_jump
		testb  $0x000008,_0cdc25_data
		je     _06e07a_jump

	_06e073_jump:
		xor    %eax,%eax

	_06e075_jump:
		call   _06b728_func

	_06e07a_jump:
		cmpb   $0x000000,_09267c_data
		jne    _06e08b_jump
		call   _06bd20_func
		pop    %edx
		pop    %ecx
		ret    

	_06e08b_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cecca_data
		mov    %cx,_0cecea_data
		pop    %edx
		pop    %ecx
		ret    

	_06e09e_jump:
		testb  $0x000060,_0ced81_data
		jne    _06e152_jump
		call   _040824_func
		test   %ax,%ax
		jne    _06e0be_jump
		testb  $0x000018,_0ced81_data
		je     _06e0c8_jump

	_06e0be_jump:
		mov    $0x000001,%eax
		call   _06b728_func

	_06e0c8_jump:
		call   _0407b4_func
		test   %ax,%ax
		je     _06e0e2_jump
		testb  $0x000018,_0ced81_data
		jne    _06e0e2_jump
		xor    %eax,%eax
		call   _06b728_func

	_06e0e2_jump:
		call   _040894_func
		test   %ax,%ax
		je     _06e109_jump
		cmpb   $0x000000,_09267c_data
		jne    _06e109_jump
		testb  $0x000018,_0ced81_data
		jne    _06e109_jump
		call   _06b210_func
		incb   _09267c_data

	_06e109_jump:
		call   _040904_func
		test   %ax,%ax
		je     _06e130_jump
		cmpb   $0x000000,_09267c_data
		jne    _06e130_jump
		testb  $0x000018,_0ced81_data
		jne    _06e130_jump
		call   _06b550_func
		incb   _09267c_data

	_06e130_jump:
		cmpb   $0x000000,_09267c_data
		jne    _06e08b_jump
		testb  $0x000018,_0ced81_data
		jne    _06e08b_jump
		call   _06bd20_func
		pop    %edx
		pop    %ecx
		ret    

	_06e152_jump:
		call   _040824_func
		test   %ax,%ax
		je     _06e163_jump
		xor    %eax,%eax
		call   _06b728_func

	_06e163_jump:
		call   _0407b4_func
		test   %ax,%ax
		je     _06e177_jump
		mov    $0x000001,%eax
		call   _06b728_func

	_06e177_jump:
		call   _040894_func
		test   %ax,%ax
		je     _06e195_jump
		cmpb   $0x000000,_09267c_data
		jne    _06e195_jump
		call   _06b210_func
		incb   _09267c_data

	_06e195_jump:
		call   _040904_func
		test   %ax,%ax
		je     _06e1b3_jump
		cmpb   $0x000000,_09267c_data
		jne    _06e1b3_jump
		call   _06b550_func
		incb   _09267c_data

	_06e1b3_jump:
		cmpb   $0x000000,_09267c_data
		jne    _06e1c4_jump
		call   _06bd20_func
		pop    %edx
		pop    %ecx
		ret    

	_06e1c4_jump:
		xor    %edx,%edx
		mov    %dx,_0cecca_data
		mov    %dx,_0cecea_data
		pop    %edx
		pop    %ecx
		ret    



_06e1d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    %dx,_0cee08_data
		mov    %dx,_0cee06_data
		call   _06d388_func
		test   %al,%al
		je     _06e514_jump
		mov    _0cdc15_data,%ah
		inc    %ah
		mov    %ah,_0cdc15_data
		cmp    $0x000003,%ah
		jbe    _06e214_jump
		xor    %dh,%dh
		mov    %dh,_0cdc15_data

	_06e214_jump:
		xor    %eax,%eax
		mov    _0cdbcc_data,%bx
		mov    _0cdc0c_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdbd0_data,%cx
		mov    _0cdc0d_data,%al
		add    %ecx,%eax
		cwtl   
		mov    %eax,%edx
		mov    _0cdb96_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		mov    _0cdbd8_data,%edx
		mov    %ax,_0cdbf8_data
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _0cdc0c_data,%al
		add    %edx,%eax
		add    $0x00001e,%eax
		test   %eax,%eax
		jl     _06e29b_jump
		xor    %eax,%eax
		mov    _0cdbda_data,%edx
		mov    _0cdc0d_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		add    $0x000014,%eax
		test   %eax,%eax
		jl     _06e29b_jump
		cmpw   $0x000122,_0cdbda_data
		jg     _06e29b_jump
		cmpw   $0x0000c8,_0cdbdc_data
		jle    _06e2a8_jump

	_06e29b_jump:
		xor    %bl,%bl
		mov    %bl,_0cdc1a_data
		call   _06d5e8_func

	_06e2a8_jump:
		mov    _0cdbf8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06e2ed_jump
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdc10_data,%al
		testb  $0x000008,0x000007(%edx,%eax,8)
		je     _06e2ed_jump
		call   _02d344_func
		test   %ax,%ax
		je     _06e2ed_jump
		mov    $0x000001,%eax
		xor    %edx,%edx
		call   _02d60c_func

	_06e2ed_jump:
		xor    %cl,%cl
		mov    $_0cdba4_data,%eax
		mov    %cl,_09267c_data
		call   _01db8c_func
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06e316_jump
		mov    $_0cdba4_data,%eax
		call   _01e2ec_func

	_06e316_jump:
		mov    _0cdc11_data,%ch
		cmp    $0x000003,%ch
		je     _06e497_jump
		cmp    $0x000006,%ch
		jne    _06e333_jump
		cmpb   $0x00000e,_0cdc10_data
		je     _06e33a_jump

	_06e333_jump:
		mov    $0x000001,%eax
		jmp    _06e33c_jump

	_06e33a_jump:
		xor    %eax,%eax

	_06e33c_jump:
		test   %eax,%eax
		je     _06e497_jump
		call   *_0c4d7c_data
		test   %ax,%ax
		je     _06e373_jump
		mov    _0cdc10_data,%dl
		cmp    $0x000004,%dl
		je     _06e373_jump
		cmp    $0x000002,%dl
		je     _06e373_jump
		cmp    $0x000008,%dl
		je     _06e373_jump
		cmp    $0x000005,%dl
		je     _06e373_jump
		cmp    $0x000003,%dl
		je     _06e373_jump
		call   _06c3a8_func

	_06e373_jump:
		call   *_0c4d84_data
		test   %ax,%ax
		je     _06e383_jump
		call   _06c290_func

	_06e383_jump:
		call   *_0c4d80_data
		test   %ax,%ax
		cmpb   $0x000000,_0cdcd4_data
		je     _06e3b3_jump
		cmpb   $0x00000c,_0cdc10_data
		jne    _06e3a3_jump
		call   _064690_func

	_06e3a3_jump:
		call   *_0c4d7c_data
		test   %ax,%ax
		jne    _06e3b3_jump
		call   _06422c_func

	_06e3b3_jump:
		call   _040824_func
		test   %ax,%ax
		je     _06e3c7_jump
		mov    $0x000001,%eax
		call   _06b728_func

	_06e3c7_jump:
		call   _0407b4_func
		test   %ax,%ax
		je     _06e3d8_jump
		xor    %eax,%eax
		call   _06b728_func

	_06e3d8_jump:
		call   _040894_func
		test   %ax,%ax
		je     _06e3ed_jump
		call   _06b210_func
		incb   _09267c_data

	_06e3ed_jump:
		call   _040904_func
		test   %ax,%ax
		je     _06e402_jump
		call   _06b550_func
		incb   _09267c_data

	_06e402_jump:
		cmpb   $0x000000,_09267c_data
		jne    _06e410_jump
		call   _06bd20_func

	_06e410_jump:
		mov    _0cdbd8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffec,%eax
		jge    _06e430_jump
		cmpw   $0x000000,_0cdbe4_data
		jge    _06e430_jump
		xor    %edx,%edx
		mov    %dx,_0cdbe4_data

	_06e430_jump:
		cmpw   $0x0000d2,_0cdbda_data
		jle    _06e44e_jump
		cmpw   $0x000000,_0cdbe4_data
		jle    _06e44e_jump
		xor    %esi,%esi
		mov    %si,_0cdbe4_data

	_06e44e_jump:
		cmpw   $0x000003,_0cdbdc_data
		jge    _06e46b_jump
		cmpw   $0x000000,_0cdbe6_data
		jge    _06e46b_jump
		xor    %edx,%edx
		mov    %dx,_0cdbe6_data

	_06e46b_jump:
		xor    %edx,%edx
		mov    _0cdbda_data,%eax
		mov    _0cdc0d_data,%dl
		sar    $0x000010,%eax
		add    %edx,%eax
		cmp    $0x0000be,%eax
		jle    _06e497_jump
		cmpw   $0x000000,_0cdbe6_data
		jle    _06e497_jump
		xor    %ecx,%ecx
		mov    %cx,_0cdbe6_data

	_06e497_jump:
		mov    _0cdbe6_data,%si
		test   %si,%si
		jle    _06e4aa_jump
		call   _056cc8_func
		jmp    _06e4b1_jump

	_06e4aa_jump:
		jge    _06e4b1_jump
		call   _056be8_func

	_06e4b1_jump:
		mov    _0cdbe4_data,%ax
		test   %ax,%ax
		jge    _06e4c3_jump
		call   _05729c_func
		jmp    _06e4ca_jump

	_06e4c3_jump:
		jle    _06e4ca_jump
		call   _057218_func

	_06e4ca_jump:
		testb  $0x000004,_0cdc25_data
		je     _06e4dd_jump
		mov    $_0cdba4_data,%eax
		call   _0545ac_func

	_06e4dd_jump:
		cmpw   $0x000000,_0cedea_data
		jne    _06e514_jump
		cmpw   $0x000000,_0cedd4_data
		jne    _06e514_jump
		push   $_0cedca_data
		mov    $_0cedb0_data,%ecx
		mov    $_0cedae_data,%ebx
		mov    $_0cedac_data,%edx
		mov    $_0cdba4_data,%eax
		call   _01d858_func
		call   _02e518_func

	_06e514_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06e51c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		xor    %edx,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0cee08_data
		mov    %dx,_0cee06_data
		xor    %edx,%edx
		call   _06fb4c_func
		call   _06d388_func
		test   %al,%al
		je     _06eaea_jump
		xor    %eax,%eax
		mov    _0cdbcc_data,%bx
		mov    _0cdc0c_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdbd0_data,%cx
		mov    _0cdc0d_data,%al
		add    %ecx,%eax
		cwtl   
		mov    %eax,%edx
		mov    _0cdb96_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		mov    %ax,_0cdbf8_data
		call   _02d4c8_func
		mov    _0cee28_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06e5bc_jump
		xor    %eax,%eax
		mov    _0cdbda_data,%edx
		mov    _0cdc0d_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		test   %eax,%eax
		jge    _06e5bc_jump
		xor    %esi,%esi
		mov    %si,_0cdbe6_data

	_06e5bc_jump:
		mov    _0cdbf8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06e601_jump
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdc10_data,%al
		testb  $0x000008,0x000007(%edx,%eax,8)
		je     _06e601_jump
		call   _02d344_func
		test   %ax,%ax
		je     _06e601_jump
		mov    $0x000001,%eax
		xor    %edx,%edx
		call   _02d60c_func

	_06e601_jump:
		testb  $0x000080,_0ced81_data
		je     _06e626_jump
		mov    _0cdbf8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06e626_jump
		cmpw   $0x000000,_0cdbfe_data
		jne    _06e626_jump
		call   _0591d0_func

	_06e626_jump:
		xor    %cl,%cl
		mov    $_0cdba4_data,%eax
		mov    %cl,_09267c_data
		call   _01db8c_func
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06e651_jump
		mov    $_0cdba4_data,%eax
		call   _01e2ec_func
		jmp    _06e65f_jump

	_06e651_jump:
		xor    %eax,%eax
		mov    %ax,_0cdbe6_data
		mov    %ax,_0cdbe4_data

	_06e65f_jump:
		mov    _0cedb4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _06e743_jump
		xor    %eax,%eax
		mov    _0cdc11_data,%al
		mov    _0cdbb0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdc10_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _06e743_jump
		cmpb   $0x000000,_0cdc11_data
		jne    _06e6d2_jump
		mov    _0cdc10_data,%ah
		cmp    $0x000004,%ah
		je     _06e6cc_jump
		cmp    $0x000005,%ah
		je     _06e6cc_jump
		cmp    $0x000006,%ah
		je     _06e6cc_jump
		cmp    $0x000007,%ah
		je     _06e6cc_jump
		cmp    $0x000009,%ah
		je     _06e6cc_jump
		cmp    $0x00000a,%ah
		je     _06e6cc_jump
		mov    $0x000001,%eax
		jmp    _06e6ce_jump

	_06e6cc_jump:
		xor    %eax,%eax

	_06e6ce_jump:
		test   %eax,%eax
		jne    _06e71e_jump

	_06e6d2_jump:
		mov    _0cdc11_data,%ch
		cmp    $0x000001,%ch
		jne    _06e6ed_jump
		cmp    _0cdc10_data,%ch
		setne  %al
		and    $0x0000ff,%eax
		jne    _06e71e_jump

	_06e6ed_jump:
		mov    _0cdc11_data,%dl
		cmp    $0x000003,%dl
		jne    _06e743_jump
		mov    _0cdc10_data,%dh
		cmp    $0x000001,%dh
		je     _06e718_jump
		cmp    %dl,%dh
		je     _06e718_jump
		cmp    $0x000002,%dh
		je     _06e718_jump
		cmp    $0x000004,%dh
		je     _06e718_jump
		mov    $0x000001,%eax
		jmp    _06e71a_jump

	_06e718_jump:
		xor    %eax,%eax

	_06e71a_jump:
		test   %eax,%eax
		je     _06e743_jump

	_06e71e_jump:
		cmpw   $0x000000,_0cedb6_data
		je     _06e72f_jump
		mov    $0x000015,%ebx
		jmp    _06e734_jump

	_06e72f_jump:
		mov    $0x000014,%ebx

	_06e734_jump:
		mov    $0x000003,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func

	_06e743_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _06e755_jump
		cmpb   $0x000008,_0cdc10_data
		je     _06e767_jump

	_06e755_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _06e771_jump
		cmpb   $0x00001f,_0cdc10_data
		jne    _06e771_jump

	_06e767_jump:
		call   _06cc24_func
		jmp    _06e8ba_jump

	_06e771_jump:
		cmpb   $0x000003,_0cdc11_data
		jne    _06e803_jump
		mov    _0cdc10_data,%dl
		cmp    $0x000010,%dl
		jne    _06e7b1_jump
		call   _076eb0_func
		mov    _0cedd4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06e7c0_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		movw   $0x000001,0x000056(%edx,%eax,4)
		jmp    _06e7c0_jump

	_06e7b1_jump:
		cmp    $0x000015,%dl
		je     _06e7bb_jump
		cmp    $0x000014,%dl
		jne    _06e7c0_jump

	_06e7bb_jump:
		call   _06cb3c_func

	_06e7c0_jump:
		mov    _0cdc10_data,%bh
		cmp    $0x000016,%bh
		setne  %al
		and    $0x0000ff,%eax
		je     _06e8ba_jump
		cmp    $0x000017,%bh
		setne  %al
		and    $0x0000ff,%eax
		je     _06e8ba_jump
		cmp    $0x000020,%bh
		setne  %al
		and    $0x0000ff,%eax
		je     _06e8ba_jump
		call   _06a4c8_func
		jmp    _06e8ba_jump

	_06e803_jump:
		call   *_0c4d78_data
		test   %ax,%ax
		je     _06e813_jump
		call   _06c3e8_func

	_06e813_jump:
		call   *_0c4d7c_data
		test   %ax,%ax
		je     _06e823_jump
		call   _06c3a8_func

	_06e823_jump:
		call   *_0c4d84_data
		test   %ax,%ax
		je     _06e833_jump
		call   _06c290_func

	_06e833_jump:
		call   *_0c4d80_data
		test   %ax,%ax
		cmpb   $0x000000,_0ca425_data
		je     _06e85e_jump
		call   _040bdc_func
		test   %ax,%ax
		je     _06e85e_jump
		call   _040ba4_func
		test   %ax,%ax
		je     _06e85e_jump
		call   _077ca0_func

	_06e85e_jump:
		cmpb   $0x000000,_0cdcd4_data
		je     _06e885_jump
		cmpb   $0x00000c,_0cdc10_data
		jne    _06e875_jump
		call   _064690_func

	_06e875_jump:
		call   *_0c4d7c_data
		test   %ax,%ax
		jne    _06e885_jump
		call   _06422c_func

	_06e885_jump:
		mov    _0cdc11_data,%ch
		cmp    $0x000007,%ch
		jne    _06e897_jump
		call   _06c6e0_func
		jmp    _06e8b5_jump

	_06e897_jump:
		cmp    $0x000002,%ch
		jne    _06e8a3_jump
		call   _06cc24_func
		jmp    _06e8b5_jump

	_06e8a3_jump:
		call   *_0c4d78_data
		test   %ax,%ax
		jne    _06e8b5_jump
		movb   $0x000001,_0cefd3_data

	_06e8b5_jump:
		call   _06dff4_func

	_06e8ba_jump:
		mov    _0ced81_data,%al
		test   $0x000060,%al
		je     _06e94b_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000005,%edx
		mov    $_0cdba4_data,%eax
		call   _01d710_func
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		lea    (%edx,%eax,1),%ebx
		mov    _0cdc28_data,%eax
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		mov    _0cdc2c_data,%edx
		mov    %ebx,0x000028(%eax)
		mov    %ebx,0x000028(%edx)
		xor    %ecx,%ecx
		mov    0x00000a(%esp),%ebx
		mov    0x000074(%eax),%cl
		sar    $0x000010,%ebx
		sub    %ecx,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    %ebx,0x00002c(%edx)
		cmpl   $0x000000,0x000024(%edx)
		jne    _06e932_jump
		mov    %edx,%eax
		call   _01f304_func

	_06e932_jump:
		mov    _0cdc28_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _06ea00_jump
		call   _01f304_func
		jmp    _06ea00_jump

	_06e94b_jump:
		test   $0x000018,%al
		je     _06ea00_jump
		and    $0x000018,%al
		cmp    $0x000008,%al
		jne    _06e996_jump
		mov    _0ced81_data,%ah
		and    $0x0000e6,%ah
		mov    $0x000003,%ebx
		mov    %ah,%dl
		mov    %ah,_0ced81_data
		or     $0x000011,%dl
		mov    $_0cdba4_data,%eax
		mov    %dl,_0ced81_data
		call   _077338_func
		mov    $0x000001,%edx
		mov    $_0cdba4_data,%eax
		call   _01d374_func
		jmp    _06ea00_jump

	_06e996_jump:
		cmpb   $0x000001,_0cdc11_data
		jne    _06e9af_jump
		mov    _0cdc10_data,%dh
		cmp    $0x000003,%dh
		je     _06e9dd_jump
		cmp    $0x000007,%dh
		je     _06e9dd_jump

	_06e9af_jump:
		cmpb   $0x000002,_0cdc11_data
		je     _06e9dd_jump
		mov    $0x000003,%ebx
		mov    _0ced81_data,%cl
		mov    $0x000001,%edx
		or     $0x000001,%cl
		mov    $_0cdba4_data,%eax
		mov    %cl,_0ced81_data
		call   _01d374_func
		jmp    _06ea00_jump

	_06e9dd_jump:
		mov    _0ced81_data,%al
		and    $0x000018,%al
		cmp    $0x000018,%al
		jne    _06ea00_jump
		cmpb   $0x000002,_0cdc11_data
		setne  %al
		and    $0x0000ff,%eax
		je     _06ea00_jump
		andb   $0x0000e7,_0ced81_data

	_06ea00_jump:
		mov    _0cdbec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06ea12_jump
		call   _06df38_func

	_06ea12_jump:
		call   _06d778_func
		test   %ax,%ax
		je     _06ea41_jump
		cmpb   $0x000007,_0cdc11_data
		jne    _06ea2a_jump
		call   _06c9b0_func

	_06ea2a_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cdbe4_data
		mov    %cx,_0cedb2_data
		mov    %cx,_0cdbec_data

	_06ea41_jump:
		mov    _0cede4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06ea53_jump
		call   _06d690_func

	_06ea53_jump:
		call   _06db44_func
		call   _057b18_func
		mov    _0cdbe6_data,%ax
		test   %ax,%ax
		jle    _06ea6f_jump
		call   _056cc8_func
		jmp    _06ea76_jump

	_06ea6f_jump:
		jge    _06ea76_jump
		call   _056be8_func

	_06ea76_jump:
		mov    _0cdbe4_data,%bx
		test   %bx,%bx
		jge    _06ea89_jump
		call   _05729c_func
		jmp    _06ea90_jump

	_06ea89_jump:
		jle    _06ea90_jump
		call   _057218_func

	_06ea90_jump:
		testb  $0x000004,_0cdc25_data
		je     _06eab9_jump
		cmpb   $0x000007,_0cdc11_data
		setne  %al
		and    $0x0000ff,%eax
		je     _06eab9_jump
		mov    $_0cdba4_data,%eax
		call   _0545ac_func
		call   _06dc6c_func

	_06eab9_jump:
		push   $_0cedca_data
		mov    $_0cedb0_data,%ecx
		mov    $_0cedae_data,%ebx
		mov    $_0cedac_data,%edx
		mov    $_0cdba4_data,%eax
		call   _01d858_func
		call   _02e518_func
		cmpb   $0x000000,_0cefc8_data
		je     _06eaea_jump
		call   _05fc34_func

	_06eaea_jump:
		call   _06da7c_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06eb00_func:
		push   %edx
		mov    $0x01f400,%edx
		mov    $_0cce00_data,%eax
		call   _07b440_func
		pop    %edx
		ret    



_06eb14_func:
		mov    $_0cce00_data,%eax
		jmp    _07b74c_func



_06eb20_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		mov    %dx,0x000008(%esp)
		mov    %bx,(%esp)
		xor    %eax,%eax
		mov    _0cef9f_data,%al
		mov    $_0c6598_data,%edx
		call   _03c86c_func
		call   _03a340_func
		mov    $0x000002,%eax
		mov    $0x00fa00,%ecx
		call   _03b3e0_func
		call   _016dde_func
		mov    _0ccd44_data,%esi
		mov    _0cc644_data,%edi
		xor    %ebx,%ebx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cccb8_data,%edi
		mov    _0cc644_data,%esi
		mov    $_0c6e98_data,%ecx
		call   _014a16_func
		mov    $_0c6598_data,%esi

	_06eb96_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06ebcd_jump
		call   _016dee_func
		call   _016dde_func
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _03b460_func
		inc    %ebx
		mov    0x000004(%esp),%edx
		cmp    %dx,%bx
		jne    _06eb96_jump
		mov    0x000008(%esp),%edi
		dec    %edi
		xor    %edx,%ebx
		mov    %di,0x000008(%esp)
		jmp    _06eb96_jump

	_06ebcd_jump:
		call   _040c04_func
		xor    %ebx,%ebx
		mov    $_0c6598_data,%esi
		mov    $0x000039,%edi
		xor    %ecx,%ecx

	_06ebe0_jump:
		mov    %edi,%eax
		call   _040780_func
		test   %al,%al
		jne    _06ec3a_jump
		call   _040974_func
		test   %ax,%ax
		jne    _06ec3a_jump
		call   _040a00_func
		test   %ax,%ax
		jne    _06ec3a_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06ec3a_jump
		call   _016dee_func
		call   _016dde_func
		mov    $_0c6e98_data,%edx
		mov    %esi,%eax
		call   _03b460_func
		call   _040c04_func
		inc    %ebx
		cmp    0x000004(%esp),%bx
		jne    _06ebe0_jump
		mov    (%esp),%edx
		dec    %edx
		mov    %ecx,%ebx
		mov    %dx,(%esp)
		jmp    _06ebe0_jump

	_06ec3a_jump:
		mov    $_0c6598_data,%edx
		mov    $0x000002,%eax
		call   _03b550_func
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_06ec50_func:
		push   %edx
	_06ec53_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x000005,%edx
		mov    $_0cce00_data,%eax
		call   _0460a4_func
		pop    %edx
		ret    



_06ec64_func:
		push   %ebx
		push   %edx
		call   _06eb00_func
		call   _01cb30_func
		mov    $0x000008,%ebx
		xor    %ah,%ah
		mov    $0xffffffff,%edx
		mov    %ah,_0cefd7_data
		call   _06ec50_func
		call   _01cb40_func
		call   _03b920_func
		mov    $0x00003c,%eax
		call   _06eb20_func
		call   _06eb14_func
		call   _01cb80_func
		pop    %edx
		pop    %ebx
		ret    

.data

_06ecb0_data:
		.ascii   "(.37<@CFHJMPSVY[]_`behkmoqsuxz|}"
		.ascii  "\x7f\x81\x83\x85\x87\x89\x8a\x8c"
		.ascii  "\x8e\x90\x91\x93\x95\x96\x98\x99"
		.ascii  "\x9b\x9c\x9e\xa0\xa1\xa3\xa4\xa6"
		.ascii  "\xa7\xa8\xaa\xab\xad\xae\xb0\xb1"
		.ascii  "\xb2\xb4\xb5\xb6\xb8\xb9\xba\xbb"
		.ascii  "\xbd\xbe\xbf\xc1\xc2\xc3\xc4\xc6"
		.ascii  "\xc7\xc8\xc9\xca\xcb\xcd"

.text

	_06ed30_jump:
		ret    



_06ed34_func:
		mov    %ax,_097b58_data
		mov    %eax,%eax
		ret    



_06ed40_func:
		push   %ebx

	_06ed41_jump:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
	_06ed48_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		cmpb   $0x000000,_0cef72_data
	_06ed4d_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		je     _06ed68_jump
		xor    %esi,%esi
		xor    %edi,%edi

	_06ed52_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _03d9b4_func
		cmp    $0x000020,%si
		jle    _06ed52_jump

	_06ed68_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06edd8_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    0x000036(%eax),%ax
		add    %edx,%eax
		movswl %ax,%edx
		cmp    $0xffffffa0,%edx
		jge    _06edf0_jump
		xor    %eax,%eax
		jmp    _06ee0e_jump

	_06edf0_jump:
		cmp    $0x0001a0,%ax
		jle    _06ee08_jump
		mov    $0x00007f,%eax
		cmp    $0x00007f,%ax
		jle    _06ee19_jump
		mov    $0x00007f,%eax
		pop    %edx
		ret    

	_06ee08_jump:
		lea    0x000060(%edx),%eax
		sar    $0x000002,%eax

	_06ee0e_jump:
		cmp    $0x00007f,%ax
		jle    _06ee19_jump
		mov    $0x00007f,%eax

	_06ee19_jump:
		pop    %edx
		ret    



_06ee1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x000008(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x000010(%esp),%ebx
		lea    0x000008(%esp),%edx
		call   _01d294_func
		xor    %edx,%edx
		mov    _0cdbcc_data,%ebx
		mov    _0cdc0c_data,%dl
		add    %ebx,%edx
		mov    -0x000002(%esp),%ebx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    %ebx
		add    %ebx,%eax
		sub    %edx,%eax
		cltd   
		xor    %edx,%eax
		sub    %edx,%eax
		mov    0x000006(%esp),%ecx
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdbd0_data,%edx
		mov    _0cdc0d_data,%al
		sar    $0x000010,%ecx
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    %ecx
		sar    $0x000010,%eax
		add    %eax,%ecx
		lea    -0x000028(%edx),%eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		cltd   
		xor    %edx,%eax
		sub    %edx,%eax
		movswl %bx,%edx
		cwtl   
		add    %edx,%eax
		mov    $0x00007f,%edx
		sar    $0x000002,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %dx,%dx
		jge    _06eea7_jump
		xor    %edx,%eax

	_06eea7_jump:
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06eeb0_func:
		push   %ebx
		push   %edx
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000007,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x000014,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _06ed34_func
		pop    %edx
		pop    %ebx



_06eed0_func:
		ret    



_06eed4_func:
		test   %ax,%ax
		ret    



_06eed8_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0cef72_data
		je     _06ef6d_jump
		mov    $0xfffffffe,%ebx
		xor    %eax,%eax

	_06eeee_jump:
		add    $0x000002,%eax
		xor    %edx,%edx
		mov    %bx,_0e3ebe_data(%eax)
		mov    %dx,_0e3ee6_data(%eax)
		cmp    $0x000028,%eax
		jne    _06eeee_jump
		mov    $0x000002,%eax
		mov    %dx,_0e4186_data
		mov    %dx,_0e418a_data
		mov    %dx,_0e4180_data
		mov    $0xfffffffe,%edx
		mov    %ax,_0e4184_data
		xor    %eax,%eax

	_06ef2d_jump:
		add    $0x00000c,%eax
		mov    %dx,_0e3ff4_data(%eax)
		cmp    $0x000180,%eax
		jne    _06ef2d_jump
		xor    %edx,%edx
		mov    _0c4d92_data,%dx
		mov    %edx,%eax
		shl    $0x000007,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x000014,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _06ed34_func
		mov    _0c4d92_data,%eax
		sar    $0x000010,%eax
		call   _06eed4_func

	_06ef6d_jump:
		pop    %edx
		pop    %ebx
		nop
		ret    



_06ef74_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %eax,%eax

	_06ef7a_jump:
		movswl %ax,%edx
		cmp    _0e3ec0_data(,%edx,2),%bx
		je     _06ef8e_jump
		inc    %eax
		cmp    $0x000014,%ax
		jne    _06ef7a_jump

	_06ef8e_jump:
		cmp    $0x000014,%ax
		jne    _06efb2_jump

	_06ef94_jump:
		dec    %eax
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06efa8_jump
		cmpw   $0x000000,_0e3ee8_data(,%edx,2)
		jne    _06ef94_jump

	_06efa8_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _06efb2_jump
		xor    %eax,%eax

	_06efb2_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _06efc2_jump
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

	_06efc2_jump:
		mov    _0e3ee8_data(,%edx,2),%ax
		pop    %edx
		pop    %ebx
		ret    



_06efd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e4186_data,%cx
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		test   %cx,%cx
		je     _06f017_jump
		mov    $_0e3f10_data,%edx
		mov    _0e3f10_data,%si
		xor    %eax,%eax
		cmp    %si,%bx
		je     _06f00d_jump

	_06effb_jump:
		cmp    %cx,%ax
		jge    _06f00d_jump
		inc    %eax
		mov    0x000018(%edx),%di
		add    $0x000018,%edx
		cmp    %di,%bx
		jne    _06effb_jump

	_06f00d_jump:
		cmp    %cx,%ax
		jne    _06f017_jump
		mov    $0xffffffff,%eax

	_06f017_jump:
		mov    %cx,_0e4186_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f024_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    $_0e4000_data,%edx
		mov    _0e4000_data,%cx
		xor    %eax,%eax
		cmp    %cx,%bx
		je     _06f050_jump

	_06f03d_jump:
		cmp    $0x000020,%ax
		jge    _06f050_jump
		inc    %eax
		mov    0x00000c(%edx),%si
		add    $0x00000c,%edx
		cmp    %si,%bx
		jne    _06f03d_jump

	_06f050_jump:
		cmp    $0x000020,%ax
		jne    _06f05b_jump
		mov    $0xffffffff,%eax

	_06f05b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f09c_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $_0e4006_data,%ebx
		mov    $_0e4000_data,%edx
		xor    %eax,%eax
		cmp    $0x000030,%cx
		jne    _06f0ce_jump

	_06f0b5_jump:
		cmp    (%ebx),%cx
		jne    _06f0bf_jump
		cmp    (%edx),%si
		je     _06f0e7_jump

	_06f0bf_jump:
		cmp    $0x000020,%ax
		jge    _06f0e7_jump
		inc    %eax
		add    $0x00000c,%ebx
		add    $0x00000c,%edx
		jmp    _06f0b5_jump

	_06f0ce_jump:
		cmp    (%ebx),%cx
		je     _06f0e7_jump
		cmp    (%edx),%si
		je     _06f0e7_jump
		cmp    $0x000020,%ax
		jge    _06f0e7_jump
		inc    %eax
		add    $0x00000c,%ebx
		add    $0x00000c,%edx
		jmp    _06f0ce_jump

	_06f0e7_jump:
		cmp    $0x000020,%ax
		jne    _06f0f2_jump
		mov    $0xffffffff,%eax

	_06f0f2_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06f0f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0e4186_data,%si
		cwtl   
		call   _06efd0_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06f1db_jump
		mov    _0e4186_data,%si
		mov    %eax,%ebx
		cmp    %si,%ax
		jge    _06f1c7_jump

	_06f127_jump:
		movswl %bx,%eax
		lea    0x000001(%eax),%edx
		imul   $0x000018,%edx,%edx
		imul   $0x000018,%eax,%eax
		mov    _0e3f10_data(%edx),%cx
		mov    %cx,_0e3f10_data(%eax)
		mov    _0e3f12_data(%edx),%cx
		mov    %cx,_0e3f12_data(%eax)
		mov    _0e3f14_data(%edx),%cx
		mov    %cx,_0e3f14_data(%eax)
		mov    _0e3f16_data(%edx),%cx
		mov    %cx,_0e3f16_data(%eax)
		mov    _0e3f18_data(%edx),%cx
		mov    %cx,_0e3f18_data(%eax)
		mov    _0e3f1a_data(%edx),%cx
		mov    %cx,_0e3f1a_data(%eax)
		mov    _0e3f1c_data(%edx),%cx
		mov    %cx,_0e3f1c_data(%eax)
		mov    _0e3f1e_data(%edx),%cx
		mov    %cx,_0e3f1e_data(%eax)
		mov    _0e3f20_data(%edx),%ecx
		mov    %ecx,_0e3f20_data(%eax)
		mov    _0e3f24_data(%edx),%dx
		inc    %ebx
		mov    %dx,_0e3f24_data(%eax)
		cmp    %si,%bx
		jl     _06f127_jump

	_06f1c7_jump:
		mov    %si,_0e4186_data
		test   %si,%si
		jle    _06f1db_jump
		dec    %esi
		mov    %si,_0e4186_data

	_06f1db_jump:
		mov    _0e4186_data,%si
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f1e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0e4186_data,%si
		mov    _0cce24_data,%ebp
		xor    %ebx,%ebx
		test   %si,%si
		jle    _06f2df_jump

	_06f206_jump:
		movswl %bx,%eax
		imul   $0x000018,%eax,%eax
		mov    _0e3f20_data(%eax),%edx
		cmp    %ebp,%edx
		jae    _06f2d5_jump
		test   %edx,%edx
		je     _06f2d5_jump
		mov    %ebx,%ecx
		cmp    %si,%bx
		jge    _06f2cd_jump

	_06f22d_jump:
		movswl %cx,%eax
		lea    0x000001(%eax),%edx
		imul   $0x000018,%edx,%edx
		imul   $0x000018,%eax,%eax
		mov    _0e3f10_data(%edx),%di
		mov    %di,_0e3f10_data(%eax)
		mov    _0e3f12_data(%edx),%di
		mov    %di,_0e3f12_data(%eax)
		mov    _0e3f14_data(%edx),%di
		mov    %di,_0e3f14_data(%eax)
		mov    _0e3f16_data(%edx),%di
		mov    %di,_0e3f16_data(%eax)
		mov    _0e3f18_data(%edx),%di
		mov    %di,_0e3f18_data(%eax)
		mov    _0e3f1a_data(%edx),%di
		mov    %di,_0e3f1a_data(%eax)
		mov    _0e3f1c_data(%edx),%di
		mov    %di,_0e3f1c_data(%eax)
		mov    _0e3f1e_data(%edx),%di
		mov    %di,_0e3f1e_data(%eax)
		mov    _0e3f20_data(%edx),%edi
		mov    %edi,_0e3f20_data(%eax)
		mov    _0e3f24_data(%edx),%dx
		inc    %ecx
		mov    %dx,_0e3f24_data(%eax)
		cmp    %si,%cx
		jl     _06f22d_jump

	_06f2cd_jump:
		test   %si,%si
		jle    _06f2d6_jump
		dec    %esi
		jmp    _06f2d6_jump

	_06f2d5_jump:
		inc    %ebx

	_06f2d6_jump:
		cmp    %si,%bx
		jl     _06f206_jump

	_06f2df_jump:
		mov    %ebp,_0cce24_data
		mov    %si,_0e4186_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f2f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    $_0e4000_data,%edx
		mov    _0e4000_data,%cx
		xor    %eax,%eax
		cmp    %cx,%bx
		je     _06f320_jump

	_06f30d_jump:
		cmp    $0x000020,%ax
		jge    _06f320_jump
		inc    %eax
		mov    0x00000c(%edx),%si
		add    $0x00000c,%edx
		cmp    %si,%bx
		jne    _06f30d_jump

	_06f320_jump:
		cmp    $0x000020,%ax
		je     _06f32b_jump
		movw   $0x00fffe,(%edx)

	_06f32b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f384_func:
		movswl %dx,%edx
		mov    _06ecb0_data(%edx),%dl
		and    $0x0000ff,%edx
		cwtl   
		imul   %edx,%eax
		sar    $0x000008,%eax
		ret    



_06f39c_func:
		push   %ebx
		mov    $0x00007f,%ebx
		movswl %dx,%edx
		sub    %edx,%ebx
		mov    _06ecb0_data(%ebx),%dl
		and    $0x0000ff,%edx
		cwtl   
		imul   %edx,%eax
		sar    $0x000008,%eax
		pop    %ebx
		ret    



_06f3bc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		cmpb   $0x000000,_0cef72_data
		je     _06fa87_jump
		cmpw   $0x000000,_0cdbfe_data
		je     _06f3e8_jump
		cmp    _0ceddc_data,%si
		je     _06f3f1_jump

	_06f3e8_jump:
		cmp    _0cedec_data,%si
		jne    _06f3f6_jump

	_06f3f1_jump:
		mov    $0xffffffff,%esi

	_06f3f6_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		jne    _06f40c_jump
		cmp    $0x00000f,%di
		je     _06f40c_jump
		xor    %eax,%eax
		mov    %ax,_0e4180_data

	_06f40c_jump:
		movswl %si,%ebx
		mov    %ebx,%eax
		call   _06ef74_func
		mov    %eax,0x00001c(%esp)
		cmp    %ax,%di
		je     _06f4b1_jump
		movswl %ax,%edx
		testb  $0x000008,_097138_data(%edx)
		je     _06f4b1_jump
		mov    %ebx,%eax
		call   _06f0f8_func
		mov    %ebx,%eax
		call   _06f09c_func
		test   %ax,%ax
		jl     _06f4b1_jump
		movswl %ax,%ebp
		lea    0x000000(,%ebp,4),%edx
		sub    %ebp,%edx
		xor    %ebx,%ebx
		shl    $0x000002,%edx
		xor    %ecx,%ecx
		mov    _0e4004_data(%edx),%eax
		mov    %edx,0x000008(%esp)
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    _097638_data(,%eax,4),%bl
		mov    _09763a_data(,%eax,4),%cl
		push   %ebx
		xor    %ebx,%ebx
		mov    _097a38_data(%eax),%dl
		mov    _097639_data(,%eax,4),%bl
		mov    %ebp,%eax
		call   _03d9b4_func
		mov    0x000008(%esp),%eax
		mov    $0xfffffffe,%edx
		mov    $0xffffffff,%ebx
		mov    %dx,_0e4000_data(%eax)
		xor    %ch,%ch
		mov    %bx,_0e4006_data(%eax)
		mov    %ch,_097b38_data(%ebp)

	_06f4b1_jump:
		cmpb   $0x000000,_0cefa8_data
		jne    _06fa14_jump
		test   %di,%di
		je     _06fa14_jump
		mov    0x00001c(%esp),%ecx
		cmp    %cx,%di
		jne    _06f4e0_jump
		movswl %cx,%eax
		testb  $0x000004,_097138_data(%eax)
		je     _06fa14_jump

	_06f4e0_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _06f4fe_jump
		cmp    _0cedec_data,%si
		jne    _06f514_jump
		mov    _0cedea_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06f514_jump

	_06f4fe_jump:
		mov    $_0cdba4_data,%eax
		mov    $0x00007f,%cl
		call   _06edd8_func
		mov    %al,0x000028(%esp)
		mov    %cl,0x000024(%esp)
		jmp    _06f554_jump

	_06f514_jump:
		movswl %si,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		call   _06edd8_func
		mov    %al,0x000028(%esp)
		movswl %di,%eax
		testb  $0x000001,_097138_data(%eax)
		jne    _06f544_jump
		movb   $0x00007f,0x000024(%esp)
		jmp    _06f554_jump

	_06f544_jump:
		mov    _0cc300_data,%eax
		add    %edx,%eax
		call   _06ee1c_func
		mov    %al,0x000024(%esp)

	_06f554_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _097639_data,%bl
		mov    _09763a_data,%cl
		cmp    $0x000035,%di
		jb     _06f5bb_jump
		jbe    _06f5f1_jump
		cmp    $0x000050,%di
		jb     _06f59c_jump
		jbe    _06f6d2_jump
		cmp    $0x000067,%di
		jb     _06f790_jump
		jbe    _06f789_jump
		cmp    $0x0000f5,%di
		je     _06f770_jump
		jmp    _06f790_jump

	_06f59c_jump:
		cmp    $0x000037,%di
		jb     _06f790_jump
		jbe    _06f789_jump
		cmp    $0x000039,%di
		je     _06f789_jump
		jmp    _06f790_jump

	_06f5bb_jump:
		cmp    $0x00000f,%di
		jb     _06f5e2_jump
		jbe    _06f689_jump
		cmp    $0x000013,%di
		jb     _06f790_jump
		jbe    _06f757_jump
		cmp    $0x00002f,%di
		je     _06f631_jump
		jmp    _06f790_jump

	_06f5e2_jump:
		cmp    $0x00000e,%di
		je     _06f711_jump
		jmp    _06f790_jump

	_06f5f1_jump:
		movswl %si,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc300_data,%eax
		cmpw   $0x0000ee,0x000060(%eax,%edx,4)
		je     _06f625_jump
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _09770d_data,%bl
		mov    _09770c_data,%al
		mov    _09770e_data,%cl
		jmp    _06f7ae_jump

	_06f625_jump:
		xor    %eax,%eax
		mov    _097638_data,%al
		jmp    _06f7ae_jump

	_06f631_jump:
		cmpw   $0x000005,_0cede4_data
		je     _06f662_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0976f4_data,%al
		mov    _0976f5_data,%bl
		mov    %ax,0x000020(%esp)
		mov    $0x00007f,%ah
		mov    _0976f6_data,%cl
		mov    %ah,0x000024(%esp)
		jmp    _06f7b3_jump

	_06f662_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0978e0_data,%al
		mov    _0978e1_data,%bl
		mov    %ax,0x000020(%esp)
		mov    $0x00007f,%al
		mov    _0978e2_data,%cl
		mov    %al,0x000024(%esp)
		jmp    _06f7b3_jump

	_06f689_jump:
		mov    _0e4180_data,%ax
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0e4180_data
		cmp    $0x000002,%ax
		jle    _06f6c3_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _097674_data,%al
		mov    _097675_data,%bl
		mov    %ax,0x000020(%esp)
		xor    %eax,%eax
		mov    _097676_data,%cl
		mov    %ax,_0e4180_data

	_06f6c3_jump:
		mov    $0xffffffff,%eax
		call   _06f0f8_func
		jmp    _06f7b3_jump

	_06f6d2_jump:
		mov    _0e4184_data,%ax
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0e4184_data
		cmp    $0x000001,%ax
		jle    _06f7b3_jump
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _097779_data,%bl
		mov    _09777a_data,%cl
		mov    _097778_data,%al
		mov    %dx,_0e4184_data
		jmp    _06f7ae_jump

	_06f711_jump:
		movswl %si,%eax
		mov    %eax,%edx
		xor    %ebx,%ebx
		shl    $0x000005,%edx
		xor    %ecx,%ecx
		add    %eax,%edx
		mov    _0cc300_data,%eax
		mov    _097671_data,%bl
		mov    _097672_data,%cl
		mov    0x00006c(%eax,%edx,4),%al
		and    $0x0000ff,%eax
		mov    _097b4a_data(%eax),%al
		xor    %ah,%ah
		mov    %eax,0x000018(%esp)
		mov    0x000018(%esp),%edx
		mov    _097670_data,%al
		add    %eax,%edx
		mov    %dx,0x000020(%esp)
		jmp    _06f7b3_jump

	_06f757_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097685_data,%bl
		mov    _097684_data,%al
		mov    _097686_data,%cl
		jmp    _06f7ae_jump

	_06f770_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097a0d_data,%bl
		mov    _097a0c_data,%al
		mov    _097a0e_data,%cl
		jmp    _06f7ae_jump

	_06f789_jump:
		mov    $0xffffffff,%ebx
		jmp    _06f7b3_jump

	_06f790_jump:
		movswl %di,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097639_data(,%edx,4),%bl
		mov    _097638_data(,%edx,4),%al
		mov    _09763a_data(,%edx,4),%cl

	_06f7ae_jump:
		mov    %ax,0x000020(%esp)

	_06f7b3_jump:
		movswl %bx,%eax
		mov    %eax,0x00000c(%esp)
		cmp    $0xffffffff,%eax
		je     _06f9dc_jump
		cmp    $0x0000ff,%bx
		je     _06f9dc_jump
		movswl %si,%ebp
		mov    %ebp,%eax
		call   _06f0f8_func
		xor    %eax,%eax
		mov    0x000028(%esp),%al
		mov    %eax,0x000004(%esp)
		movswl %di,%eax
		mov    %eax,0x000014(%esp)
		shl    $0x000002,%eax
		mov    %eax,0x000010(%esp)
		mov    0x000010(%esp),%edx
		xor    %eax,%eax
		mov    _09763b_data(%edx),%al
		mov    %eax,0x000008(%esp)
		xor    %edx,%edx
		mov    _097b56_data,%eax
		mov    0x000024(%esp),%dl
		sar    $0x000010,%eax
		imul   %edx,%eax
		mov    %edx,(%esp)
		imul   0x000008(%esp),%eax
		sar    $0x00000e,%eax
		mov    0x000004(%esp),%edx
		cwtl   
		call   _06f39c_func
		mov    0x000010(%esp),%edx
		xor    %eax,%eax
		mov    _09763b_data(%edx),%al
		mov    %eax,0x000008(%esp)
		mov    _097b56_data,%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		imul   %edx,%eax
		imul   0x000008(%esp),%eax
		sar    $0x00000e,%eax
		mov    0x000004(%esp),%edx
		cwtl   
		call   _06f384_func
		mov    0x000014(%esp),%eax
		cmpb   $0x000000,_097238_data(%eax)
		jne    _06f916_jump
		mov    0x000004(%esp),%eax
		mov    0x000010(%esp),%edx
		push   %eax
		xor    %eax,%eax
		mov    _09763b_data(%edx),%al
		mov    _097b56_data,%edx
		mov    0x000004(%esp),%ebx
		sar    $0x000010,%edx
		imul   %ebx,%edx
		imul   %edx,%eax
		movswl %cx,%ebx
		sar    $0x00000e,%eax
		mov    0x000018(%esp),%ecx
		cwtl   
		mov    0x000022(%esp),%edx
		push   %eax
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _097a38_data(%ecx),%al
		mov    %edx,%ecx
		mov    0x000014(%esp),%edx
		call   _03d864_func
		movswl %ax,%ebx
		cmp    $0xffffffff,%ebx
		je     _06f9dc_jump
		mov    %ebp,%eax
		call   _06f2f4_func
		lea    0x000000(,%ebx,4),%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000024(%esp),%al
		mov    %ax,_0e4002_data(,%edx,4)
		xor    %eax,%eax
		mov    %si,_0e4000_data(,%edx,4)
		mov    0x000028(%esp),%al
		mov    %ax,_0e4004_data(,%edx,4)
		mov    0x000014(%esp),%eax
		mov    %di,_0e4006_data(,%edx,4)
		testb  $0x000010,_097138_data(%eax)
		je     _06f9dc_jump
		movb   $0x000001,_097b38_data(%ebx)
		jmp    _06f9dc_jump

	_06f916_jump:
		call   _06f1e8_func
		mov    %ebp,%eax
		call   _06f0f8_func
		mov    _0e4184_data,%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    0x000020(%esp),%eax
		mov    %bx,_0e3f14_data(,%edx,8)
		mov    0x000010(%esp),%ebx
		mov    %ax,_0e3f18_data(,%edx,8)
		xor    %eax,%eax
		mov    _09763b_data(%ebx),%al
		mov    %ax,_0e3f1a_data(,%edx,8)
		xor    %eax,%eax
		mov    0x000024(%esp),%al
		mov    %ax,_0e3f1c_data(,%edx,8)
		xor    %eax,%eax
		mov    0x000028(%esp),%al
		mov    0x000014(%esp),%ebx
		mov    %ax,_0e3f1e_data(,%edx,8)
		xor    %eax,%eax
		mov    _097238_data(%ebx),%al
		mov    _0cce24_data,%ebx
		mov    %si,_0e3f10_data(,%edx,8)
		add    %ebx,%eax
		mov    %eax,_0e3f20_data(,%edx,8)
		mov    0x000014(%esp),%eax
		mov    %di,_0e3f12_data(,%edx,8)
		mov    _097438_data(,%eax,2),%bx
		mov    %cx,_0e3f16_data(,%edx,8)
		test   %bx,%bx
		setne  %al
		xor    %ah,%ah
		mov    _0e4186_data,%cx
		mov    %ax,_0e3f24_data(,%edx,8)
		cmp    $0x000009,%cx
		jge    _06f9dc_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_0e4186_data

	_06f9dc_jump:
		cmp    $0x0000cb,%di
		je     _06f9ff_jump
		cmp    $0x0000ed,%di
		je     _06f9ff_jump
		cmp    $0x0000d1,%di
		je     _06f9ff_jump
		cmp    $0x0000e1,%di
		je     _06f9ff_jump
		cmp    $0x0000ec,%di
		jne    _06fa14_jump

	_06f9ff_jump:
		mov    _0cefd4_data,%ch
		cmp    $0x000040,%ch
		je     _06fa0f_jump
		cmp    $0x000080,%ch
		jne    _06fa14_jump

	_06fa0f_jump:
		call   _01cb68_func

	_06fa14_jump:
		xor    %eax,%eax

	_06fa16_jump:
		movswl %ax,%edx
		add    %edx,%edx
		cmp    _0e3ec0_data(%edx),%si
		je     _06fa39_jump
		mov    _0e3ebe_data(%edx),%edx
		sar    $0x000010,%edx
		cmp    $0xfffffffe,%edx
		je     _06fa39_jump
		inc    %eax
		cmp    $0x000014,%ax
		jne    _06fa16_jump

	_06fa39_jump:
		cmp    $0x000014,%ax
		jne    _06fa74_jump
		test   %di,%di
		je     _06fa87_jump
		mov    _0cc300_data,%ebx

	_06fa4a_jump:
		dec    %eax
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06fa6a_jump
		mov    _0e3ebe_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		cmpl   $0x000000,0x000024(%edx,%ebx,1)
		jne    _06fa4a_jump

	_06fa6a_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _06fa74_jump
		xor    %eax,%eax

	_06fa74_jump:
		movswl %ax,%edx
		mov    %si,_0e3ec0_data(,%edx,2)
		mov    %di,_0e3ee8_data(,%edx,2)

	_06fa87_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06fa90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cef72_data
		je     _06fb44_jump
		movswl %ax,%esi
		lea    0x000000(,%esi,4),%eax
		xor    %edx,%edx
		mov    _097639_data(%eax),%dl
		cmp    $0xffffffff,%edx
		je     _06fb44_jump
		cmp    $0x0000ff,%dl
		je     _06fb44_jump
		mov    _097b56_data,%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    _09763b_data(%eax),%bl
		imul   %ecx,%ebx
		sar    $0x000007,%ebx
		push   $0x000040
		movswl %bx,%ebx
		xor    %ecx,%ecx
		push   %ebx
		xor    %ebx,%ebx
		mov    _097638_data(%eax),%cl
		mov    _09763a_data(%eax),%bl
		xor    %eax,%eax
		mov    _097a38_data(%esi),%al
		call   _03d864_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06fb44_jump
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $0xfffffffe,%ebx
		mov    $0x000040,%ecx
		mov    %bx,_0e4000_data(,%eax,4)
		mov    %cx,_0e4002_data(,%eax,4)
		mov    _097138_data(%esi),%bh
		mov    %cx,_0e4004_data(,%eax,4)
		test   $0x000010,%bh
		je     _06fb44_jump
		movb   $0x000001,_097b38_data(%edx)

	_06fb44_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06fb4c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		cmpb   $0x000000,_0cef72_data
		je     _06ff9a_jump
		cmpw   $0x000000,_0cdbfe_data
		je     _06fb75_jump
		cmp    _0ceddc_data,%si
		je     _06fb7e_jump

	_06fb75_jump:
		cmp    _0cedec_data,%si
		jne    _06fb83_jump

	_06fb7e_jump:
		mov    $0xffffffff,%esi

	_06fb83_jump:
		movswl %si,%edx
		mov    %edx,%eax
		call   _06efd0_func
		mov    %ax,0x000004(%esp)
		cwtl   
		cmp    $0xffffffff,%eax
		je     _06feb1_jump
		cmp    $0xffffffff,%edx
		je     _06fbb7_jump
		cmp    _0cedec_data,%si
		jne    _06fbbb_jump
		mov    _0cedea_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06fbbb_jump

	_06fbb7_jump:
		mov    $0x00007f,%al
		jmp    _06fc03_jump

	_06fbbb_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0e3f10_data(,%eax,8),%eax
		sar    $0x000010,%eax
		mov    _097138_data(%eax),%dl
		test   $0x000001,%dl
		je     _06fbe5_jump
		test   $0x000002,%dl
		jne    _06fbe9_jump

	_06fbe5_jump:
		mov    $0x00007f,%al
		jmp    _06fc03_jump

	_06fbe9_jump:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		call   _06ee1c_func

	_06fc03_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,0x000008(%esp)
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000003,%edi
		mov    0x000008(%esp),%edx
		mov    %dx,_0e3f1c_data(%edi)
		mov    _0cce24_data,%edx
		mov    %edx,(%esp)
		mov    (%esp),%ebx
		cmp    _0e3f20_data(%edi),%ebx
		jne    _06feb1_jump
		mov    _0e3f1c_data(%edi),%edx
		sar    $0x000010,%edx
		mov    _0e3f18_data(%edi),%ebx
		push   %edx
		mov    _097b56_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		imul   %edx,%eax
		imul   %ebx,%eax
		mov    _0e3f16_data(%edi),%ecx
		sar    $0x000010,%ecx
		sar    $0x00000e,%eax
		mov    _0e3f12_data(%edi),%edx
		cwtl   
		sar    $0x000010,%edx
		push   %eax
		mov    _0e3f10_data(%edi),%eax
		mov    _0e3f14_data(%edi),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    _097a38_data(%eax),%al
		and    $0x0000ff,%eax
		call   _03d864_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06fd05_jump
		movswl %si,%eax
		call   _06f2f4_func
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000008(%esp),%ebx
		mov    %si,_0e4000_data(,%eax,4)
		mov    %bx,_0e4002_data(,%eax,4)
		mov    _0e3f1e_data(%edi),%bx
		mov    %bx,_0e4004_data(,%eax,4)
		mov    _0e3f12_data(%edi),%bx
		mov    %bx,_0e4006_data(,%eax,4)
		mov    _0e3f10_data(%edi),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_097138_data(%eax)
		je     _06fd05_jump
		movb   $0x000001,_097b38_data(%edx)

	_06fd05_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		shl    $0x000003,%ebx
		cmpw   $0x000000,_0e3f24_data(%ebx)
		je     _06fde4_jump
		mov    _0e3f10_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _097338_data(%eax),%al
		mov    (%esp),%ecx
		and    $0x0000ff,%eax
		add    %ecx,%eax
		mov    %eax,_0e3f20_data(%ebx)
		mov    _0e3f10_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _097438_data(,%eax,2),%ax
		mov    %ax,_0e3f12_data(%ebx)
		mov    _0e3f10_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _097639_data(,%eax,4),%al
		xor    %ah,%ah
		mov    %ax,_0e3f14_data(%ebx)
		mov    _0e4184_data,%edx
		mov    _0e3f10_data(%ebx),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    _09763a_data(,%eax,4),%cl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %cx,_0e3f16_data(,%eax,8)
		mov    _0e3f10_data(%ebx),%edx
		sar    $0x000010,%edx
		mov    _097638_data(,%edx,4),%dl
		xor    %dh,%dh
		mov    %dx,_0e3f18_data(,%eax,8)
		mov    _0e3f10_data(%ebx),%edx
		sar    $0x000010,%edx
		mov    _09763b_data(,%edx,4),%dl
		xor    %dh,%dh
		xor    %ecx,%ecx
		mov    %dx,_0e3f1a_data(,%eax,8)
		mov    %cx,_0e3f24_data(%ebx)
		jmp    _06feb1_jump

	_06fde4_jump:
		mov    0x000004(%esp),%ebx
		cmp    _0e4186_data,%bx
		jge    _06fe9c_jump
		mov    _0e4186_data,%di

	_06fdfc_jump:
		movswl %bx,%eax
		lea    0x000001(%eax),%edx
		imul   $0x000018,%edx,%edx
		imul   $0x000018,%eax,%eax
		mov    _0e3f10_data(%edx),%cx
		mov    %cx,_0e3f10_data(%eax)
		mov    _0e3f12_data(%edx),%cx
		mov    %cx,_0e3f12_data(%eax)
		mov    _0e3f14_data(%edx),%cx
		mov    %cx,_0e3f14_data(%eax)
		mov    _0e3f16_data(%edx),%cx
		mov    %cx,_0e3f16_data(%eax)
		mov    _0e3f18_data(%edx),%cx
		mov    %cx,_0e3f18_data(%eax)
		mov    _0e3f1a_data(%edx),%cx
		mov    %cx,_0e3f1a_data(%eax)
		mov    _0e3f1c_data(%edx),%cx
		mov    %cx,_0e3f1c_data(%eax)
		mov    _0e3f1e_data(%edx),%cx
		mov    %cx,_0e3f1e_data(%eax)
		mov    _0e3f20_data(%edx),%ecx
		mov    %ecx,_0e3f20_data(%eax)
		mov    _0e3f24_data(%edx),%dx
		inc    %ebx
		mov    %dx,_0e3f24_data(%eax)
		cmp    %di,%bx
		jl     _06fdfc_jump

	_06fe9c_jump:
		mov    _0e4186_data,%ax
		test   %ax,%ax
		jle    _06feb1_jump
		mov    %eax,%edx
		dec    %edx
		mov    %dx,_0e4186_data

	_06feb1_jump:
		movswl %si,%edx
		mov    %edx,%eax
		call   _06f024_func
		mov    %eax,%ebx
		cwtl   
		cmp    $0xffffffff,%eax
		je     _06ff9a_jump
		cmp    $0xffffffff,%edx
		je     _06fee2_jump
		cmp    _0cedec_data,%si
		jne    _06fee6_jump
		mov    _0cedea_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06fee6_jump

	_06fee2_jump:
		mov    $0x00007f,%dl
		jmp    _06ff39_jump

	_06fee6_jump:
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		cmpw   $0x0000cc,_0e4006_data(%eax)
		je     _06ff19_jump
		mov    _0e4004_data(%eax),%eax
		sar    $0x000010,%eax
		mov    _097138_data(%eax),%cl
		test   $0x000001,%cl
		je     _06ff19_jump
		test   $0x000002,%cl
		jne    _06ff1d_jump

	_06ff19_jump:
		mov    $0x00007f,%dl
		jmp    _06ff39_jump

	_06ff1d_jump:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		call   _06ee1c_func
		mov    %al,%dl

	_06ff39_jump:
		movswl %bx,%ecx
		mov    %ecx,%ebx
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		xor    %ecx,%ebx
		shl    $0x000002,%eax
		mov    %dl,%bl
		mov    _0e4004_data(%eax),%si
		mov    _097b38_data(%ecx),%dh
		mov    %bx,_0e4002_data(%eax)
		test   %dh,%dh
		je     _06ff9a_jump
		mov    _0e4004_data(%eax),%eax
		mov    _097b56_data,%edi
		sar    $0x000010,%eax
		movswl %si,%ebx
		movzbl _09763b_data(,%eax,4),%esi
		xor    %eax,%eax
		sar    $0x000010,%edi
		mov    %dl,%al
		imul   %edi,%eax
		imul   %esi,%eax
		sar    $0x00000e,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _03d9c4_func

	_06ff9a_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06ffa4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,_0cef72_data
		je     _070062_jump
		cmpw   $0x000000,_0cdbfe_data
		je     _06ffcf_jump
		cmp    _0ceddc_data,%bx
		jne    _06ffcf_jump
		mov    $0xffffffff,%ebx

	_06ffcf_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		call   _06f024_func
		mov    %eax,%esi
		movswl %ax,%edi
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		cmp    $0xffffffff,%edi
		je     _070023_jump
		cmp    $0xffffffff,%edx
		jne    _06fff9_jump
		mov    $_0cdba4_data,%eax
		jmp    _070001_jump

	_06fff9_jump:
		mov    _0cc300_data,%edx
		add    %edx,%eax

	_070001_jump:
		call   _06edd8_func
		xor    %ebx,%ebx
		movswl %si,%edx
		mov    %al,%bl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %bx,_0e4004_data(,%eax,4)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_070023_jump:
		cmp    %edi,%edx
		jne    _07002e_jump
		mov    $_0cdba4_data,%eax
		jmp    _070036_jump

	_07002e_jump:
		mov    _0cc300_data,%edx
		add    %edx,%eax

	_070036_jump:
		call   _06edd8_func
		mov    %al,%cl
		movswl %bx,%eax
		call   _06efd0_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _070062_jump
		lea    0x000000(,%edx,4),%eax
		xor    %ebx,%ebx
		sub    %edx,%eax
		mov    %cl,%bl
		mov    %bx,_0e3f1e_data(,%eax,8)

	_070062_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_070068_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		cmpb   $0x000000,_0cef72_data
		je     _070200_jump
		mov    $_0e4006_data,%ebp
		xor    %edi,%edi
		mov    $_0e4000_data,%esi
		mov    %edi,0x000004(%esp)

	_07008e_jump:
		mov    (%esi),%dx
		test   %dx,%dx
		jl     _0700ab_jump
		movswl %dx,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc300_data,%eax
		cmpl   $0x000000,0x000024(%edx,%eax,1)
		je     _0700cc_jump

	_0700ab_jump:
		movswl (%esi),%eax
		cmp    $0xfffffffe,%eax
		jne    _0700bc_jump
		movswl 0x000000(%ebp),%eax
		cmp    $0xffffffff,%eax
		jne    _0700cc_jump

	_0700bc_jump:
		mov    _0cc304_data,%bx
		cmp    (%esi),%bx
		jg     _07015c_jump

	_0700cc_jump:
		mov    0x000004(%esp),%eax
		mov    _0e4004_data(%eax),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_097138_data(%eax)
		je     _070151_jump
		movswl 0x000000(%ebp),%edx
		xor    %ecx,%ecx
		mov    _097638_data(,%edx,4),%cl
		push   %ecx
		xor    %ecx,%ecx
		mov    _097639_data(,%edx,4),%al
		mov    _09763a_data(,%edx,4),%cl
		and    $0x0000ff,%eax
		mov    _097a38_data(%edx),%dl
		mov    %eax,0x000004(%esp)
		mov    0x000004(%esp),%ebx
		and    $0x0000ff,%edx
		movswl %di,%eax
		call   _03d9b4_func
		xor    %dh,%dh
		xor    %eax,%eax
		mov    %dh,_097b38_data(%edi)
		xor    %edx,%edx

	_07012d_jump:
		mov    _0e3ec0_data(%eax),%bx
		cmp    (%esi),%bx
		je     _070142_jump
		add    $0x000002,%eax
		inc    %edx
		cmp    $0x000028,%eax
		jne    _07012d_jump

	_070142_jump:
		cmp    $0x000014,%edx
		jge    _070151_jump
		movw   $0x00ffff,_0e3ee8_data(,%edx,2)

	_070151_jump:
		movw   $0x00fffe,(%esi)
		movw   $0x00ffff,0x000000(%ebp)

	_07015c_jump:
		mov    (%esi),%dx
		test   %dx,%dx
		jl     _07018b_jump
		movswl %dx,%eax
		imul   $0x000084,%eax,%edx
		mov    _0cc300_data,%ecx
		cmpl   $0x000000,0x000024(%ecx,%edx,1)
		je     _07018b_jump
		xor    %edx,%edx
		call   _06fb4c_func
		movswl (%esi),%eax
		xor    %edx,%edx
		call   _06ffa4_func

	_07018b_jump:
		mov    0x000004(%esp),%ecx
		inc    %edi
		add    $0x00000c,%ebp
		add    $0x00000c,%ecx
		add    $0x00000c,%esi
		mov    %ecx,0x000004(%esp)
		cmp    $0x000020,%edi
		jl     _07008e_jump
		xor    %edi,%edi
		xor    %esi,%esi
		xor    %ebp,%ebp
		jmp    _0701f4_jump

	_0701ae_jump:
		mov    _0cc304_data,%bx
		cmp    _0e3f10_data(%esi),%bx
		jle    _0701f0_jump
		mov    _0e3f0e_data(%esi),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%edx
		mov    _0cc300_data,%ecx
		cmp    0x000024(%ecx,%edx,1),%ebp
		je     _0701f0_jump
		mov    %ebp,%edx
		call   _06fb4c_func
		mov    _0e3f0e_data(%esi),%eax
		mov    %ebp,%edx
		sar    $0x000010,%eax
		call   _06ffa4_func

	_0701f0_jump:
		add    $0x000018,%esi
		inc    %edi

	_0701f4_jump:
		mov    _0e4184_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jl     _0701ae_jump

	_070200_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07020c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cef72_data
		je     _070262_jump
		xor    %ecx,%ecx
		xor    %esi,%esi

	_07021d_jump:
		movswl %cx,%eax
		imul   $0x00000c,%eax,%eax
		mov    _0e4006_data(%eax),%dx
		cmp    $0x000006,%dx
		je     _07024f_jump
		cmp    $0x0000f5,%dx
		je     _07024f_jump
		cmp    $0x000002,%dx
		je     _07024f_jump
		mov    _0e4004_data(%eax),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_097138_data(%eax)
		je     _07025b_jump

	_07024f_jump:
		movswl %cx,%eax
		mov    %esi,%ebx
		mov    %esi,%edx
		call   _03d9c4_func

	_07025b_jump:
		inc    %ecx
		cmp    $0x000020,%cx
		jl     _07021d_jump

	_070262_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070268_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cef72_data
		je     _07028c_jump
		xor    %ecx,%ecx
		xor    %esi,%esi

	_070279_jump:
		movswl %cx,%eax
		mov    %esi,%ebx
		mov    %esi,%edx
		inc    %ecx
		call   _03d9c4_func
		cmp    $0x000020,%cx
		jl     _070279_jump

	_07028c_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070294_func:
		push   %edx
		mov    $0x000001,%edx
		call   _070268_func
		mov    %dx,_097b6a_data
		pop    %edx
		ret    



_0702a8_func:
		push   %edx
		xor    %edx,%edx
		mov    %dx,_097b6a_data
		pop    %edx
		ret    

_0702b4_switch:
		.long   _0702f6_case
		.long   _070328_case
		.long   _0702fd_case
		.long   _070304_case
		.long   _07030b_case
		.long   _070323_case


	_0702cc_jump:
		push   %edx
		cmpb   $0x000000,_0cef72_data
		je     _070336_jump
		test   %eax,%eax
		jne    _070328_case
		mov    _0ced92_data,%dx
		dec    %edx
		cmp    $0x000005,%dx
		ja     _070328_case
		and    $0x00ffff,%edx
		jmp    *%cs:_0702b4_switch(,%edx,4)

	_0702f6_case:
		mov    $0x000001,%eax
		jmp    _070328_case

	_0702fd_case:
		mov    $0x000002,%eax
		jmp    _070328_case

	_070304_case:
		mov    $0x000004,%eax
		jmp    _070328_case

	_07030b_case:
		cmpw   $0x000003,_0ced84_data
		jne    _07031c_jump
		mov    $0x000003,%eax
		jmp    _070328_case

	_07031c_jump:
		mov    $0x000009,%eax
		jmp    _070328_case

	_070323_case:
		mov    $0x000007,%eax

	_070328_case:
		mov    _097b56_data,%edx
		sar    $0x000010,%edx
		call   _03da6c_func

	_070336_jump:
		pop    %edx
		ret    



_070338_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cce0c_data,%edx
		test   %edx,%edx
		jne    _07039d_jump
		mov    $_0ccdb4_data,%esi
		call   _012748_func
		mov    _0cede2_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cedce_data,%eax
		sar    $0x000010,%eax
		mov    _094c23_data(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _02a164_func
		xor    %bh,%bh
		mov    $0x000001,%eax
		mov    %bh,_097b6d_data
		mov    %eax,_0cce0c_data
		jmp    _0704af_jump

	_07039d_jump:
		cmp    $0xffffffff,%edx
		je     _0704af_jump
		mov    $_0ccdc8_data,%esi
		call   _012748_func
		mov    _0ccdc8_data,%edx
		sub    _0ccdb4_data,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x0000b6,%ebx
		add    %eax,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %eax,_0cce0c_data
		mov    _0cede2_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,8),%edx
		mov    _0cedce_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		mov    _0cce0c_data,%esi
		add    %eax,%edx
		add    $0x000002,%esi
		mov    _094ca4_data(%edx),%edi
		mov    %esi,_0cce0c_data
		cmp    %edi,%esi
		jb     _0704af_jump
		mov    _097b6c_data,%al
		inc    %al
		mov    _097b6c_data,%ah
		test   %ah,%ah
		jne    _070440_jump
		mov    %al,_097b6c_data
		call   _02a118_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_070440_jump:
		cmp    $0x000004,%ah
		jae    _070450_jump
		mov    %al,_097b6c_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_070450_jump:
		mov    $_0ccdb4_data,%esi
		call   _012748_func
		mov    _0cede2_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0cedce_data,%edx
		sar    $0x000010,%edx
		mov    _094c23_data(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		mov    $0x000001,%ebp
		call   _02a0a8_func
		xor    %bl,%bl
		mov    _097b6d_data,%dh
		mov    %bl,_097b6c_data
		test   %dh,%dh
		sete   %al
		mov    %ebp,_0cce0c_data
		mov    %al,_097b6d_data

	_0704af_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_0704b8_func:
		xor    %ah,%ah
		mov    %ah,_0cef7d_data
		call   _029210_func
		test   %al,%al
		je     _0704f7_jump
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _029dcc_func
		test   %al,%al
		je     _0704f7_jump
		movb   $0x000001,_0cef7d_data
		call   _02a110_func
		call   _028e30_func
		and    $0x0000ff,%eax
		jmp    _029e1c_jump

	_0704f7_jump:
		mov    %al,_0cefa7_data
		ret    



_070500_func:
		call   _02a110_func
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _029df0_func
		jmp    _0291e8_jump



_070520_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0e4190_data,%ebp
		movw   $0x000000,0x000000(%ebp)
		test   %ax,%ax
		jl     _07054c_jump
		movswl %ax,%ebx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _070548_jump
		mov    %ebx,%eax

	_070548_jump:
		neg    %eax
		jmp    _07055c_jump

	_07054c_jump:
		movswl %ax,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _07055c_jump
		mov    %ebx,%eax

	_07055c_jump:
		mov    %ax,0x000002(%ebp)
		test   %ax,%ax
		jle    _070569_jump
		xor    %eax,%eax
		jmp    _07056e_jump

	_070569_jump:
		mov    $0x000003,%eax

	_07056e_jump:
		mov    %al,0x000018(%ebp)
		mov    0x00001c(%ebp),%ax
		mov    %eax,%ebx
		mov    %ax,0x000008(%esp)
		neg    %ebx
		movb   $0x000000,0x000019(%ebp)
		mov    %bx,0x000008(%esp)
		jmp    _0705de_jump

	_070589_jump:
		xor    %eax,%eax
		mov    0x00001c(%ebp),%ax
		call   _07b95f_func
		mov    %eax,%esi
		mov    %edx,%edi
		mov    0x000006(%esp),%eax
		mov    %esi,%ebx
		sar    $0x000010,%eax
		mov    %edi,%ecx
		call   _07b952_func
		call   _07c4c8_func
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _08170c_func
		call   _07bb4f_func
		call   _07c19c_func
		mov    0x000004(%esp),%edx
		add    (%esp),%edx
		mov    0x000008(%esp),%ecx
		lea    0x000000(,%edx,4),%esi
		inc    %ecx
		mov    0x000024(%ebp),%edx
		mov    %cx,0x000008(%esp)
		mov    %eax,(%edx,%esi,1)

	_0705de_jump:
		xor    %eax,%eax
		mov    0x00001c(%ebp),%ax
		mov    %eax,0x000004(%esp)
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000004(%esp),%edx
		mov    %eax,(%esp)
		cmp    %edx,%eax
		jl     _070589_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_070603_jump:
		ret    

	_070604_case:
		mov    _0e4190_data,%eax
		test   %eax,%eax
		je     _070603_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _07061b_jump
		add    $0x000024,%eax
		call   _07b83c_func

	_07061b_jump:
		cmpl   $0x000000,_0e4190_data
		je     _070603_jump
		mov    $_0e4190_data,%eax
		jmp    _07b83c_func



_070630_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %dx,0x000004(%esp)
		mov    %ebx,%esi
		mov    %ecx,(%esp)
		xor    %ah,%ah
		mov    %ah,0x000008(%esp)
		test   %ebx,%ebx
		je     _07072e_jump
		test   %ecx,%ecx
		je     _07072e_jump
		mov    $0x000030,%eax
		call   _07b824_func
		mov    %eax,%ebp
		mov    %eax,_0e4190_data
		test   %eax,%eax
		je     _07072e_jump
		xor    %eax,%eax
		mov    $0x000028,%ebx
		mov    %di,%ax
		cmp    %ebx,%eax
		jle    _070681_jump
		mov    %ebx,%eax

	_070681_jump:
		mov    %eax,%ebx
		mov    $0x000008,%eax
		cmp    %ebx,%eax
		jge    _07068e_jump
		mov    %ebx,%eax

	_07068e_jump:
		mov    %ax,0x00001c(%ebp)
		add    %eax,%eax
		mov    %ax,0x00001e(%ebp)
		xor    %eax,%eax
		mov    $0x400921fb,%ecx
		mov    0x00001c(%ebp),%ax
		mov    $0x54442eea,%ebx
		call   _07b95f_func
		call   _07bb4f_func
		call   _07c1a0_func
		mov    %ax,0x000020(%ebp)
		xor    %eax,%eax
		mov    $0x54442eea,%ebx
		mov    0x00001c(%ebp),%ax
		mov    $0x400921fb,%ecx
		call   _07b95f_func
		call   _07bb4f_func
		mov    $0x3fe00000,%ecx
		xor    %ebx,%ebx
		call   _07bb4f_func
		call   _07c1a0_func
		mov    $0x00fa00,%ecx
		mov    _0cc638_data,%edi
		mov    %ax,0x000022(%ebp)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0706ff_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0706ff_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0cc638_data,%eax
		mov    %eax,0x000028(%ebp)
		mov    (%esp),%eax
		mov    %eax,0x00002c(%ebp)
		xor    %eax,%eax
		mov    0x00001e(%ebp),%ax
		shl    $0x000002,%eax
		call   _07b824_func
		mov    %eax,0x000024(%ebp)
		test   %eax,%eax
		je     _07072e_jump
		movb   $0x000001,0x000008(%esp)

	_07072e_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _070743_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		call   _070520_func
		jmp    _070748_jump

	_070743_jump:
		call   _070604_case

	_070748_jump:
		mov    0x000008(%esp),%al
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_070754_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0e4190_data,%esi
		mov    0x000018(%esi),%al
		cmp    $0x000001,%al
		jb     _07077d_jump
		jbe    _070813_jump
		cmp    $0x000002,%al
		je     _0708d3_jump
		jmp    _070934_jump

	_07077d_jump:
		test   %al,%al
		jne    _070934_jump
		cmpb   $0x000000,0x000019(%esi)
		jne    _0707c2_jump
		cmpw   $0x000000,0x000002(%esi)
		jle    _0707b1_jump
		movl   $0x00013f,0x000004(%esi)
		mov    0x000004(%esi),%eax
		mov    %eax,0x000014(%esi)
		xor    %eax,%eax
		mov    $0x00013f,%edx
		mov    0x000022(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x000008(%esi)
		jmp    _0707be_jump

	_0707b1_jump:
		mov    0x000014(%esi),%eax
		movl   $0x00013f,0x000004(%esi)
		mov    %eax,0x000008(%esi)

	_0707be_jump:
		movb   $0x000001,0x000019(%esi)

	_0707c2_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		call   _07b952_func
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %edx,%ebx
		call   _07b95f_func
		mov    %eax,%ebp
		mov    %edx,%edi
		mov    %ecx,%eax
		mov    %ebx,%edx
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _07c4c8_func
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _07c45a_func
		call   _07bb4f_func
		call   _07c19c_func
		xor    %edx,%edx
		mov    %eax,0x00000c(%esi)
		mov    0x000022(%esi),%dx
		mov    0x000014(%esi),%eax
		sub    %edx,%eax
		jmp    _070931_jump

	_070813_jump:
		cmpb   $0x000000,0x000019(%esi)
		jne    _07084b_jump
		cmpw   $0x000000,0x000002(%esi)
		jle    _070831_jump
		mov    0x000014(%esi),%eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,0x000008(%esi)
		jmp    _070847_jump

	_070831_jump:
		mov    0x000014(%esi),%eax
		mov    %eax,0x000008(%esi)
		xor    %eax,%eax
		mov    $0x00013f,%edx
		mov    0x000022(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x000004(%esi)

	_070847_jump:
		movb   $0x000001,0x000019(%esi)

	_07084b_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		call   _07b952_func
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    0x000020(%esi),%ax
		mov    %edx,0x000004(%esp)
		call   _07b95f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		call   _081794_func
		jg     _0708b1_jump
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		call   _07b95f_func
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		mov    %edi,%ebx
		mov    %ebp,%ecx
		call   _07c4c8_func
		mov    %edi,%ebx
		mov    %ebp,%ecx
		call   _07c481_func
		call   _07bb4f_func
		call   _07c19c_func
		mov    %eax,0x00000c(%esi)
		jmp    _0708c1_jump

	_0708b1_jump:
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,%ebp
		mov    %eax,0x00000c(%esi)
		neg    %ebp
		mov    %ebp,0x00000c(%esi)

	_0708c1_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		mov    $0x00013f,%edx
		sub    %eax,%edx
		mov    %edx,0x000010(%esi)
		jmp    _070934_jump

	_0708d3_jump:
		cmpb   $0x000000,0x000019(%esi)
		jne    _070919_jump
		cmpw   $0x000000,0x000002(%esi)
		jle    _0708f8_jump
		mov    0x000014(%esi),%eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,%ebx
		mov    %eax,0x000008(%esi)
		neg    %ebx
		mov    %ebx,0x000008(%esi)
		jmp    _070915_jump

	_0708f8_jump:
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		dec    %eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,%edx
		mov    %eax,0x000014(%esi)
		neg    %edx
		mov    %edx,0x000014(%esi)
		mov    %edx,0x000008(%esi)

	_070915_jump:
		movb   $0x000001,0x000019(%esi)

	_070919_jump:
		mov    0x000014(%esi),%eax
		xor    %edx,%edx
		mov    %eax,0x00000c(%esi)
		mov    %eax,%ecx
		mov    0x000022(%esi),%dx
		mov    0x000014(%esi),%eax
		neg    %ecx
		add    %edx,%eax
		mov    %ecx,0x00000c(%esi)

	_070931_jump:
		mov    %eax,0x000010(%esi)

	_070934_jump:
		mov    (%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _07093f_jump
		neg    %eax

	_07093f_jump:
		mov    (%esi),%di
		add    %eax,%edi
		mov    0x000002(%esi),%ax
		mov    %di,(%esi)
		test   %ax,%ax
		jle    _070958_jump
		cmpb   $0x000004,0x000018(%esi)
		jne    _070968_jump
		jmp    _070963_jump

	_070958_jump:
		mov    0x000015(%esi),%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _070968_jump

	_070963_jump:
		movw   $0x000000,(%esi)

	_070968_jump:
		mov    (%esi),%ax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070978_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0e4190_data,%edx
		cmpb   $0x000003,0x000018(%edx)
		jne    _0709b9_jump
		mov    $0x003e80,%ecx
		mov    0x00002c(%edx),%edi
		cld    
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		cmpw   $0x000000,0x000002(%edx)
		jle    _0709a8_jump
		mov    0x000018(%edx),%al
		inc    %al
		jmp    _0709ad_jump

	_0709a8_jump:
		mov    0x000018(%edx),%al
		dec    %al

	_0709ad_jump:
		movb   $0x000000,0x000019(%edx)
		mov    %al,0x000018(%edx)
		jmp    _070cb0_jump

	_0709b9_jump:
		mov    0x000028(%edx),%eax
		mov    %eax,0x000010(%esp)
		mov    0x000018(%edx),%al
		mov    0x00002c(%edx),%ebp
		cmp    $0x000001,%al
		jb     _0709dd_jump
		jbe    _070ac8_jump
		cmp    $0x000002,%al
		je     _070bc7_jump
		jmp    _070c6e_jump

	_0709dd_jump:
		test   %al,%al
		jne    _070c6e_jump
		cmpw   $0x000000,0x000002(%edx)
		jle    _070a04_jump
		cmpb   $0x000001,0x000019(%edx)
		jne    _070a04_jump
		mov    $0x003e80,%ecx
		mov    0x000010(%esp),%esi
		mov    %ebp,%edi
		cld    
		rep movsl %ds:(%esi),%es:(%edi)
		movb   $0x000002,0x000019(%edx)

	_070a04_jump:
		xor    %esi,%esi
		mov    %esi,0x000008(%esp)
		mov    $0x000140,%edi

	_070a0f_jump:
		mov    0x00000c(%edx),%esi
		xor    %ecx,%ecx
		test   %esi,%esi
		jle    _070a45_jump

	_070a18_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		sub    %ecx,%eax
		mov    0x000024(%edx),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    0x000010(%edx),%eax
		mov    0x000014(%edx),%ebx
		add    (%esi),%eax
		mov    0x000010(%esp),%esi
		add    %ecx,%ebx
		add    %eax,%esi
		lea    (%ebx,%ebp,1),%eax
		mov    (%esi),%bl
		mov    %bl,(%eax)
		inc    %ecx
		cmp    0x00000c(%edx),%ecx
		jl     _070a18_jump

	_070a45_jump:
		cmpw   $0x000000,0x000002(%edx)
		jle    _070a76_jump
		mov    0x00000c(%edx),%ecx
		jmp    _070a62_jump

	_070a51_jump:
		mov    0x000014(%edx),%eax
		add    %ecx,%eax
		cmp    $0x000140,%eax
		jge    _070a61_jump
		movb   $0x000000,(%eax,%ebp,1)

	_070a61_jump:
		inc    %ecx

	_070a62_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _070a6d_jump
		neg    %eax

	_070a6d_jump:
		add    0x00000c(%edx),%eax
		cmp    %eax,%ecx
		jge    _070a9f_jump
		jmp    _070a51_jump

	_070a76_jump:
		mov    $0xffffffff,%ecx
		mov    0x000010(%esp),%ebx
		jmp    _070a8f_jump

	_070a81_jump:
		mov    0x000014(%edx),%eax
		sub    %ecx,%eax
		lea    (%eax,%ebp,1),%esi
		mov    (%ebx,%eax,1),%al
		inc    %ecx
		mov    %al,(%esi)

	_070a8f_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _070a9a_jump
		neg    %eax

	_070a9a_jump:
		dec    %eax
		cmp    %eax,%ecx
		jl     _070a81_jump

	_070a9f_jump:
		mov    0x000010(%esp),%esi
		mov    0x000008(%esp),%eax
		add    $0x000140,%ebp
		add    %edi,%esi
		inc    %eax
		mov    %esi,0x000010(%esp)
		mov    %eax,0x000008(%esp)
		cmp    $0x0000c8,%eax
		jge    _070c6e_jump
		jmp    _070a0f_jump

	_070ac8_jump:
		xor    %ecx,%ecx
		mov    %ecx,0x000004(%esp)
		mov    0x00000c(%edx),%ecx
		jmp    _070b29_jump

	_070ad3_jump:
		add    %ecx,%eax
		mov    0x000024(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x000010(%edx),%eax
		mov    (%ebx),%edi
		lea    (%eax,%edi,1),%ebx
		mov    0x000014(%edx),%esi
		mov    $0x00013f,%eax
		mov    0x000010(%esp),%edi
		cmp    %ebx,%eax
		jle    _070af7_jump
		mov    %ebx,%eax

	_070af7_jump:
		add    %eax,%edi
		mov    (%edi),%bl
		add    %ecx,%esi
		test   %bl,%bl
		jne    _070b1f_jump
		test   %ecx,%ecx
		jg     _070b09_jump
		mov    %esi,%eax
		jmp    _070b1f_jump

	_070b09_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		add    %ecx,%eax
		mov    0x000024(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x000010(%edx),%eax
		sub    (%ebx),%eax
		dec    %eax

	_070b1f_jump:
		add    0x000010(%esp),%eax
		mov    (%eax),%al
		inc    %ecx
		mov    %al,(%esi,%ebp,1)

	_070b29_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		cmp    %eax,%ecx
		jl     _070ad3_jump
		cmpw   $0x000000,0x000002(%edx)
		jle    _070b61_jump
		mov    %eax,%ecx
		jmp    _070b48_jump

	_070b3e_jump:
		mov    0x000014(%edx),%eax
		add    %ecx,%eax
		inc    %ecx
		movb   $0x000000,(%eax,%ebp,1)

	_070b48_jump:
		mov    (%edx),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x00001c(%edx),%bx
		test   %eax,%eax
		jge    _070b59_jump
		neg    %eax

	_070b59_jump:
		add    %ebx,%eax
		cmp    %eax,%ecx
		jge    _070b97_jump
		jmp    _070b3e_jump

	_070b61_jump:
		cmp    0x000014(%edx),%eax
		jge    _070b97_jump
		mov    %eax,%ebx
		mov    (%edx),%eax
		sar    $0x000010,%eax
		neg    %ebx
		test   %eax,%eax
		jge    _070b75_jump
		neg    %eax

	_070b75_jump:
		sub    %eax,%ebx
		mov    0x00000c(%edx),%esi
		mov    %ebx,%eax
		cmp    %esi,%ebx
		jge    _070b97_jump

	_070b80_jump:
		mov    0x000014(%edx),%ebx
		add    %eax,%ebx
		mov    0x000010(%esp),%ecx
		lea    (%ebx,%ebp,1),%esi
		mov    (%ecx,%ebx,1),%bl
		mov    %bl,(%esi)
		inc    %eax
		cmp    0x00000c(%edx),%eax
		jl     _070b80_jump

	_070b97_jump:
		mov    0x000010(%esp),%edi
		mov    0x000004(%esp),%eax
		add    $0x000140,%ebp
		add    $0x000140,%edi
		inc    %eax
		mov    %edi,0x000010(%esp)
		mov    %eax,0x000004(%esp)
		cmp    $0x0000c8,%eax
		jge    _070c6e_jump
		mov    0x00000c(%edx),%ecx
		jmp    _070b29_jump

	_070bc7_jump:
		xor    %ebx,%ebx
		mov    %ebx,(%esp)

	_070bcc_jump:
		mov    0x00000c(%edx),%ecx
		jmp    _070c12_jump

	_070bd1_jump:
		add    %ecx,%eax
		mov    0x000024(%edx),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    0x000014(%edx),%ebx
		mov    0x000010(%edx),%eax
		mov    (%esi),%edi
		add    %ecx,%ebx
		add    %edi,%eax
		mov    0x000010(%esp),%edi
		mov    %ebx,0x00000c(%esp)
		cmpb   $0x000000,(%edi,%eax,1)
		jne    _070c04_jump
		test   %ecx,%ecx
		jge    _070bff_jump
		mov    0x00000c(%esp),%eax
		jmp    _070c04_jump

	_070bff_jump:
		mov    0x000010(%edx),%eax
		sub    (%esi),%eax

	_070c04_jump:
		add    0x000010(%esp),%eax
		mov    0x00000c(%esp),%ebx
		mov    (%eax),%al
		inc    %ecx
		mov    %al,(%ebx,%ebp,1)

	_070c12_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		cmp    %eax,%ecx
		jl     _070bd1_jump
		cmpw   $0x000000,0x000002(%edx)
		jle    _070c48_jump
		mov    %eax,%ecx
		jmp    _070c31_jump

	_070c27_jump:
		mov    0x000014(%edx),%eax
		add    %ecx,%eax
		inc    %ecx
		movb   $0x000000,(%eax,%ebp,1)

	_070c31_jump:
		mov    (%edx),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x00001c(%edx),%bx
		test   %eax,%eax
		jge    _070c42_jump
		neg    %eax

	_070c42_jump:
		add    %ebx,%eax
		cmp    %eax,%ecx
		jl     _070c27_jump

	_070c48_jump:
		mov    0x000010(%esp),%edi
		mov    (%esp),%eax
		add    $0x000140,%ebp
		add    $0x000140,%edi
		inc    %eax
		mov    %edi,0x000010(%esp)
		mov    %eax,(%esp)
		cmp    $0x0000c8,%eax
		jl     _070bcc_jump

	_070c6e_jump:
		mov    (%edx),%eax
		mov    0x000014(%edx),%ecx
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    0x000002(%edx),%bx
		mov    %ecx,0x000014(%edx)
		test   %bx,%bx
		jle    _070c9f_jump
		cmp    0x000008(%edx),%ecx
		jge    _070cb0_jump
		mov    0x000018(%edx),%cl
		movb   $0x000000,0x000019(%edx)
		inc    %cl
		mov    %cl,0x000018(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_070c9f_jump:
		cmp    0x000004(%edx),%ecx
		jle    _070cb0_jump
		mov    0x000018(%edx),%bh
		movb   $0x000000,0x000019(%edx)
		dec    %bh
		mov    %bh,0x000018(%edx)

	_070cb0_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070cc0_func:
		xor    %ah,%ah
		mov    %ah,_0ce039_data
		ret    



_070ccc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    _0ce4b0_data,%al
		mov    %al,0x00025a(%edx)
		mov    _0cee10_data,%ax
		mov    %ax,0x000034(%edx)
		mov    _0cedfa_data,%ax
		mov    %ax,0x000036(%edx)
		mov    _0cdbcc_data,%ax
		mov    %ax,0x000038(%edx)
		mov    _0cdbd0_data,%ax
		mov    %ax,0x00003a(%edx)
		mov    _0cdbda_data,%ax
		mov    %ax,0x00003c(%edx)
		mov    _0cdbdc_data,%ax
		mov    %ax,0x00003e(%edx)
		mov    _0cdc25_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,0x000040(%edx)
		mov    _0ced81_data,%al
		add    %al,%al
		shr    $0x000006,%al
		mov    %al,0x000254(%edx)
		mov    _0ced80_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    %al,0x000255(%edx)
		mov    _0ced80_data,%al
		and    $0x000001,%al
		mov    %al,0x000256(%edx)
		test   %ecx,%ecx
		je     _070d90_jump
		mov    0x000034(%ecx),%ax
		mov    %ax,0x000046(%edx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x000042(%edx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x000044(%edx)
		mov    0x00007b(%ecx),%al
		mov    %al,0x000248(%edx)
		mov    0x000081(%ecx),%al
		and    $0x000001,%al
		mov    %al,0x000249(%edx)
		jmp    _070d96_jump

	_070d90_jump:
		movw   $0x00ffff,0x000046(%edx)

	_070d96_jump:
		mov    _0cc302_data,%ecx
		mov    _0ce434_data,%esi
		sar    $0x000010,%ecx
		lea    0x000048(%edx),%edi
		add    %ecx,%ecx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %al,%al

	_070dbc_jump:
		xor    %ecx,%ecx
		mov    %al,%cl
		mov    _0cdc06_data(%ecx),%ah
		mov    %ah,0x00024a(%ecx,%edx,1)
		inc    %al
		cmp    $0x000005,%al
		jb     _070dbc_jump
		mov    _0cdc0e_data,%al
		mov    %al,0x00024f(%edx)
		mov    _0cdc0f_data,%al
		mov    %al,0x000250(%edx)
		mov    _0cdc11_data,%al
		mov    %al,0x000251(%edx)
		mov    _0cdc10_data,%al
		mov    %al,0x000252(%edx)
		xor    %al,%al

	_070e01_jump:
		xor    %ecx,%ecx
		mov    %al,%cl
		mov    _0ca468_data(,%ecx,2),%bx
		inc    %al
		mov    %bx,0x000020(%edx,%ecx,2)
		cmp    $0x000008,%al
		jb     _070e01_jump
		mov    _0ced7c_data,%ax
		mov    _0cc304_data,%cx
		mov    %ax,0x000030(%edx)
		mov    _0ced7a_data,%ax
		xor    %ebx,%ebx
		mov    %ax,0x000032(%edx)
		mov    _0cdcd0_data,%al
		mov    %ecx,(%esp)
		mov    %al,0x000253(%edx)
		mov    _0cc300_data,%eax
		test   %cx,%cx
		jle    _070ead_jump

	_070e4d_jump:
		mov    0x000060(%eax),%di
		cmp    $0x00008d,%di
		je     _070e6d_jump
		cmp    $0x0000a4,%di
		je     _070e6d_jump
		cmp    $0x0000b3,%di
		je     _070e6d_jump
		cmp    $0x0000f2,%di
		jne    _070e9f_jump

	_070e6d_jump:
		mov    %ebx,%ecx
		xor    %bh,%ch
		and    $0x00001f,%cl
		mov    $0x000001,%esi
		movswl %cx,%ecx
		movswl %bx,%edi
		shl    %cl,%esi
		mov    0x000081(%eax),%cl
		sar    $0x000005,%edi
		test   $0x000004,%cl
		je     _070e97_jump
		movswl %di,%ecx
		or     %esi,(%edx,%ecx,4)
		jmp    _070e9f_jump

	_070e97_jump:
		movswl %di,%ecx
		not    %esi
		and    %esi,(%edx,%ecx,4)

	_070e9f_jump:
		mov    (%esp),%esi
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jl     _070e4d_jump

	_070ead_jump:
		mov    _0cefd4_data,%al
		movb   $0x000001,0x000259(%edx)
		mov    %al,0x000258(%edx)
		mov    _0cefd7_data,%al
		mov    %al,0x000257(%edx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_070ed4_switch:
		.long   _071160_case
		.long   _071167_case
		.long   _071160_case
		.long   _071167_case
		.long   _071157_case
		.long   _071167_case
		.long   _071167_case
		.long   _071160_case
		.long   _071167_case
		.long   _071160_case
		.long   _071167_case
		.long   _071157_case




_070f04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edx
		cmpb   $0x000000,0x000259(%eax)
		je     _0712ff_jump
		mov    _0ced81_data,%bl
		test   $0x000002,%bl
		je     _070f42_jump
		mov    $0x000021,%ecx
		mov    $_0cdba4_data,%edi
		mov    %bl,%bh
		mov    $_0ce32c_data,%esi
		and    $0x0000fd,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %bh,_0ced81_data

	_070f42_jump:
		mov    0x00025a(%edx),%al
		mov    %al,_0ce4b0_data
		mov    0x000034(%edx),%ax
		mov    %ax,_0cee10_data
		mov    0x000036(%edx),%ax
		mov    %ax,_0cedfa_data
		mov    0x000036(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,_0cdbcc_data
		mov    0x000038(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,_0cdbd0_data
		mov    0x00003c(%edx),%ax
		mov    _0cdc25_data,%cl
		mov    %ax,_0cdbda_data
		mov    0x00003e(%edx),%ax
		and    $0x0000f7,%cl
		mov    %ax,_0cdbdc_data
		mov    0x000040(%edx),%al
		mov    %cl,_0cdc25_data
		and    $0x000001,%al
		mov    %cl,%ch
		shl    $0x000003,%al
		or     %al,%ch
		mov    0x000255(%edx),%al
		and    $0x000001,%al
		mov    _0ced80_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0ced80_data
		shl    $0x000003,%al
		mov    %ah,%bl
		or     %al,%bl
		mov    %bl,_0ced80_data
		mov    _0cede4_data,%bx
		mov    %ch,_0cdc25_data
		cmp    $0x000006,%bx
		jne    _07102c_jump
		cmpw   $0x000003,_0cedd0_data
		jne    _07102c_jump
		mov    _0ced80_data,%bh
		mov    0x000256(%edx),%al
		and    $0x0000fe,%bh
		and    $0x000001,%al
		mov    %bh,%cl
		mov    %bh,_0ced80_data
		or     %al,%cl
		mov    %cl,_0ced80_data
		mov    0x000254(%edx),%al
		mov    _0ced81_data,%ch
		and    $0x000003,%al
		and    $0x00009f,%ch
		shl    $0x000005,%al
		mov    %ch,%ah
		mov    %ch,_0ced81_data
		or     %al,%ah
		mov    %ah,_0ced81_data

	_07102c_jump:
		mov    0x000044(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _071085_jump
		mov    %eax,%ebx
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0cc300_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000040(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,0x000028(%eax)
		mov    0x000042(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    0x000248(%edx),%bl
		mov    %bl,0x00007b(%eax)
		mov    0x000249(%edx),%bl
		and    $0x000001,%bl
		mov    0x000081(%eax),%bh
		and    $0x0000fe,%bh
		mov    %bh,%cl
		mov    %bh,0x000081(%eax)
		or     %bl,%cl
		mov    %cl,0x000081(%eax)

	_071085_jump:
		cmp    $_0cdde0_data,%edx
		jne    _0710ed_jump
		mov    _0cc304_data,%si
		xor    %eax,%eax
		test   %si,%si
		jle    _0710ed_jump

	_07109b_jump:
		movswl %ax,%ebx
		lea    0x000000(,%ebx,2),%ecx
		imul   $0x000084,%ebx,%ebx
		mov    _0ce434_data,%esi
		lea    (%edx,%ecx,1),%edi
		add    %esi,%ecx
		mov    0x000048(%edi),%si
		mov    %si,(%ecx)
		cmp    %ax,%si
		je     _0710d2_jump
		mov    _0cc300_data,%ecx
		movl   $0x000001,0x000020(%ecx,%ebx,1)
		jmp    _0710e0_jump

	_0710d2_jump:
		mov    _0cc300_data,%ecx
		movl   $0x000000,0x000020(%ecx,%ebx,1)

	_0710e0_jump:
		mov    _0cc304_data,%di
		inc    %eax
		cmp    %di,%ax
		jl     _07109b_jump

	_0710ed_jump:
		xor    %eax,%eax
		jmp    _071102_jump

	_0710f1_jump:
		movswl %ax,%ecx
		mov    0x00024a(%ecx,%edx,1),%bl
		inc    %eax
		mov    %bl,_0cdc06_data(%ecx)

	_071102_jump:
		movswl %ax,%ebx
		cmp    $0x000005,%ebx
		jb     _0710f1_jump
		mov    0x00024f(%edx),%al
		mov    %al,_0cdc0e_data
		mov    0x000250(%edx),%al
		mov    %al,_0cdc0f_data
		mov    0x000251(%edx),%al
		mov    %al,_0cdc11_data
		mov    0x000252(%edx),%al
		mov    %al,_0cdc10_data
		cmp    $_0cdde0_data,%edx
		jne    _071167_case
		mov    0x000253(%edx),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _071167_case
		and    $0x0000ff,%eax
		jmp    *%cs:_070ed4_switch(,%eax,4)

	_071157_case:
		movb   $0x000003,0x000253(%edx)
		jmp    _071167_case

	_071160_case:
		movb   $0x000001,0x000253(%edx)

	_071167_case:
		mov    _0cdc30_data,%ebx
		mov    0x000253(%edx),%al
		mov    %al,0x00006e(%ebx)
		mov    %al,_0cdcd0_data
		mov    0x000258(%edx),%al
		mov    %al,_0cefd4_data
		xor    %eax,%eax
		mov    %ax,_0cedb2_data
		mov    %ax,_0cedd8_data

	_071194_jump:
		movswl %ax,%ebx
		mov    0x000020(%edx,%ebx,2),%cx
		inc    %eax
		mov    %cx,_0ca468_data(,%ebx,2)
		cmp    $0x000008,%ax
		jl     _071194_jump
		mov    $0xffffffff,%edi
		mov    $0x000001,%ebx
		mov    0x000030(%edx),%ax
		xor    %ecx,%ecx
		mov    %ax,_0ced7c_data
		mov    %cx,_0cdbe4_data
		mov    %cx,_0cdbe6_data
		mov    %di,_0cdbfa_data
		mov    %ebx,_0cdbc8_data
		mov    _0cdc25_data,%ch
		mov    0x000032(%edx),%ax
		xor    %ebx,%ebx
		or     $0x000004,%ch
		mov    %ax,_0ced7a_data
		mov    %ch,_0cdc25_data
		xor    %eax,%eax
		mov    _0cc304_data,%cx
		mov    %ax,_0cee06_data
		mov    %ax,_0cee08_data
		mov    _0cc300_data,%eax
		mov    %ecx,(%esp)
		test   %cx,%cx
		jle    _0712de_jump

	_07121d_jump:
		mov    0x000060(%eax),%di
		cmp    $0x000003,%di
		je     _0712c5_jump
		cmp    $0x00000d,%di
		je     _0712c5_jump
		cmp    $0x00000f,%di
		je     _0712c5_jump
		cmp    $0x00003b,%di
		je     _0712c5_jump
		cmp    $0x000024,%di
		je     _0712c5_jump
		cmp    $0x000042,%di
		je     _0712c5_jump
		cmp    $0x00003e,%di
		je     _0712c5_jump
		cmp    $0x000063,%di
		je     _0712c5_jump
		cmp    $0x00008d,%di
		je     _07129b_jump
		cmp    $0x0000a4,%di
		je     _07129b_jump
		cmp    $0x0000b3,%di
		je     _071289_jump
		cmp    $0x0000f2,%di
		jne    _071295_jump

	_071289_jump:
		movl   $0x000001,0x00001c(%eax)
		mov    0x00001c(%eax),%ecx
		jmp    _071297_jump

	_071295_jump:
		xor    %ecx,%ecx

	_071297_jump:
		test   %ecx,%ecx
		je     _0712cc_jump

	_07129b_jump:
		movswl %bx,%ecx
		sar    $0x000005,%ecx
		mov    %ecx,%edi
		mov    %ebx,%ecx
		xor    %bh,%ch
		and    $0x00001f,%cl
		mov    $0x000001,%esi
		movswl %cx,%ecx
		shl    %cl,%esi
		movswl %di,%ecx
		test   %esi,(%edx,%ecx,4)
		je     _0712c5_jump
		orb    $0x000004,0x000081(%eax)
		jmp    _0712cc_jump

	_0712c5_jump:
		andb   $0x0000fb,0x000081(%eax)

	_0712cc_jump:
		mov    (%esp),%esi
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jl     _07121d_jump

	_0712de_jump:
		xor    %al,%al
		mov    %al,_0cefcd_data
		mov    0x000257(%edx),%al
		inc    %al
		mov    %al,_0cefd7_data
		xor    %eax,%eax
		mov    0x000257(%edx),%al
		call   _03b58c_func

	_0712ff_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071308_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cede4_data,%si
		mov    _0cedd0_data,%di
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		xor    %edx,%edx
		cmp    %ax,%si
		jle    _071343_jump

	_07132d_jump:
		movswl %ax,%ebx
		mov    _09475c_data(%ebx),%bl
		xor    %bh,%bh
		shl    $0x000005,%ebx
		inc    %eax
		add    %ebx,%edx
		cmp    %si,%ax
		jl     _07132d_jump

	_071343_jump:
		mov    $0x000001,%eax
		cmp    %ax,%di
		jle    _071356_jump

	_07134d_jump:
		inc    %eax
		add    $0x000020,%edx
		cmp    %di,%ax
		jl     _07134d_jump

	_071356_jump:
		mov    $0x000003,%cl
		mov    (%esp),%eax
		mov    %si,_0cede4_data
		mov    %di,_0cedd0_data
		test   %ax,%ax
		js     _071373_jump
		sar    %cl,%ax
		jmp    _07137c_jump

	_071373_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07137c_jump:
		mov    _0cede4_data,%si
		add    %edx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0713b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _071308_func
		mov    %dl,%cl
		movswl %ax,%ebx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _0713d2_jump
		sar    %cl,%ax
		jmp    _0713db_jump

	_0713d2_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0713db_jump:
		or     %al,_0cb068_data(%ebx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0713e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _071308_func
		mov    %dl,%cl
		movswl %ax,%ebx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _07140a_jump
		sar    %cl,%ax
		jmp    _071413_jump

	_07140a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_071413_jump:
		and    _0cb068_data(%ebx),%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071540_func:
		xor    %al,%al
		ret    



_071550_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cefbd_data
		jne    _071615_jump
		mov    _0cedc0_data,%ecx
		mov    _0cee04_data,%ebx
		mov    _0cedbe_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sub    %ebx,%eax
		add    %ebx,%ecx
		mov    %eax,%ebx
		mov    _0cee0e_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _071597_jump
		cmp    %ecx,%eax
		jg     _071597_jump
		mov    $0x000001,%eax
		jmp    _071599_jump

	_071597_jump:
		xor    %eax,%eax

	_071599_jump:
		test   %eax,%eax
		je     _0715de_jump
		mov    _0cedc2_data,%ecx
		mov    _0cee06_data,%ebx
		mov    _0cedbc_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sub    %ebx,%eax
		add    %ebx,%ecx
		mov    %eax,%ebx
		mov    _0cedf8_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _0715d4_jump
		cmp    %ecx,%eax
		jg     _0715d4_jump
		mov    $0x000001,%eax
		jmp    _0715d6_jump

	_0715d4_jump:
		xor    %eax,%eax

	_0715d6_jump:
		test   %eax,%eax
		je     _0715de_jump
		mov    $0x000001,%al
		jmp    _0715e0_jump

	_0715de_jump:
		xor    %al,%al

	_0715e0_jump:
		mov    %al,_0cefbd_data
		test   %al,%al
		je     _07162e_jump
		mov    _0cee10_data,%ax
		mov    %ax,_0cedc8_data
		mov    %ax,_0cedba_data
		mov    _0cedbe_data,%ax
		mov    %ax,_0cedbc_data
		mov    _0cedc4_data,%ax
		mov    %ax,_0cedc6_data
		jmp    _07162e_jump

	_071615_jump:
		mov    _0cedbc_data,%ax
		mov    _0cedfa_data,%dx
		cmp    %dx,%ax
		jge    _07162e_jump
		mov    %dx,_0cedbc_data

	_07162e_jump:
		mov    _0cefbd_data,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071638_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%bl
		call   _0188d0_func
		cwtl   
		sub    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01db8c_func
		movl   $0x000000,0x000024(%edx)
		movw   $0x000000,0x000040(%edx)
		xor    %bl,%bl
		movw   $0x000000,0x000042(%edx)
		mov    %bl,_0cefe6_data
		mov    0x000081(%edx),%ah
		mov    0x000060(%edx),%cx
		xor    %bh,%bh
		or     $0x000004,%ah
		mov    %bl,_0cefeb_data
		mov    %bx,_0e41aa_data
		mov    %ah,0x000081(%edx)
		cmp    $0x00004a,%cx
		jne    _0716a7_jump
		mov    _0e41a5_data,%al
		mov    %al,0x000076(%edx)
		mov    %edx,%eax
		call   _018a8c_func

	_0716a7_jump:
		xor    %cl,%cl
		xor    %esi,%esi
		mov    %cl,_0e41a4_data
		mov    %si,_0e41ae_data
		mov    %si,_0e41a8_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0716c4_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ebx
		cmpw   $0x000000,0x000056(%eax)
		jle    _0717c9_jump
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0717c9_jump

	_0716ee_jump:
		cmpw   $0x00005c,0x000060(%ecx)
		jne    _0717b9_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0717b9_jump
		movw   $0x000000,0x000042(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%ecx)
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sar    %eax
		test   %bx,%bx
		je     _07172c_jump
		neg    %eax

	_07172c_jump:
		movswl %ax,%edx
		mov    0x000028(%esi),%eax
		add    %edx,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		add    $0x000002,%bl
		mov    %eax,0x00002c(%ecx)
		mov    %bl,0x00006c(%ecx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    $0x000001,%ebx
		mov    0x00002c(%ecx),%ax
		mov    %ebx,%edx
		mov    %ax,0x00003e(%ecx)
		mov    %ecx,%eax
		movb   $0x000000,0x00006d(%ecx)
		call   _05f030_func
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000081(%ecx),%dl
		or     $0x000004,%dl
		mov    %dl,0x000081(%ecx)
		mov    %dl,%dh
		movl   $0x000001,0x000024(%ecx)
		and    $0x0000bf,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f304_func
		movb   $0x000000,0x000071(%ecx)
		mov    0x000056(%esi),%ax
		dec    %eax
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		call   _01db8c_func
		mov    %ecx,%eax
		movw   $0x00000a,0x000050(%ecx)
		call   _076fac_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0717b9_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _0716ee_jump

	_0717c9_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0717d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movw   $0x000000,0x000040(%eax)
		mov    $0x000001,%ebx
		movw   $0x000000,0x000042(%eax)
		call   _01db8c_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d374_func
		mov    0x000032(%ecx),%edx
		mov    $0x0000f6,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		mov    %ecx,%eax
		call   _076fac_func
		movw   $0x00000a,0x000050(%ecx)
		movw   $0x000003,0x000056(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07181c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    0x000060(%eax),%ax
		cmp    $0x00005d,%ax
		jb     _07183e_jump
		jbe    _071988_jump
		cmp    $0x0000b6,%ax
		je     _07184d_jump
		jmp    _071a18_jump

	_07183e_jump:
		cmp    $0x00005c,%ax
		je     _0718fa_jump
		jmp    _071a18_jump

	_07184d_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _071a18_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%esi),%al
		mov    _0e419c_data,%cx
		add    %ebx,%eax
		sub    %ecx,%eax
		cmp    $0x000014,%ax
		jge    _07189b_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		mov    0x000081(%esi),%ah
		movw   $0x000003,0x000040(%esi)
		or     $0x000008,%ah
		mov    %ah,0x000081(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07189b_jump:
		cmp    $0x0000c8,%ax
		jge    _071a18_jump
		movswl %ax,%edx
		sar    $0x000003,%edx
		sub    $0x000002,%edx
		cmp    $0x000002,%dl
		jae    _0718b5_jump
		mov    $0x000002,%dl

	_0718b5_jump:
		cmp    $0x000032,%ax
		setl   %al
		and    $0x0000ff,%eax
		inc    %eax
		mov    %al,%dh
		xor    %eax,%eax
		mov    %dl,%al
		xor    %ebx,%ebx
		mov    _0cef4d_data(%eax),%bl
		sar    %eax
		cmp    %eax,%ebx
		jge    _0718eb_jump
		mov    0x00003a(%esi),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    %dh,%al
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0718eb_jump:
		mov    0x00003a(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0718fa_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _071a18_jump
		mov    0x000050(%esi),%cx
		dec    %cx
		mov    %cx,0x000050(%esi)
		jne    _071a18_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%al
		jb     _071927_jump
		jbe    _07193b_jump
		cmp    $0x000003,%al
		je     _071960_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071927_jump:
		cmp    $0x000001,%al
		jne    _071a18_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0716c4_func

	_07193b_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0716c4_func
		mov    0x000081(%esi),%ch
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071960_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0716c4_func
		mov    0x000081(%esi),%cl
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%cl
		mov    %cl,0x000081(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071988_jump:
		push   $0x00008c
		mov    _0e419c_data,%eax
		push   $0x000014
		sar    $0x000010,%eax
		push   %eax
		mov    _0e419a_data,%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00002c(%esi),%di
		mov    0x000069(%esi),%al
		add    %edi,%eax
		sub    $0x000018,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		mov    $0x000010,%ecx
		sub    $0x000008,%eax
		mov    %ecx,%ebx
		cwtl   
		call   _02ae60_func
		test   %ax,%ax
		je     _071a18_jump
		cmpb   $0x000000,_0e41a4_data
		jne    _0719e2_jump
		movb   $0x000001,_0e41a4_data

	_0719e2_jump:
		mov    0x00002c(%esi),%edx
		movl   $0x000000,0x000024(%esi)
		add    $0x00001e,%edx
		mov    %edx,0x00002c(%esi)
		mov    $0x0000f3,%eax
		mov    0x000081(%esi),%bl
		mov    0x000032(%esi),%edx
		and    $0x0000fb,%bl
		sar    $0x000010,%edx
		mov    %bl,0x000081(%esi)
		call   _06f3bc_func
		mov    %esi,%eax
		call   _076fac_func

	_071a18_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_071a20_switch:
		.long   _071b10_case
		.long   _071b1e_case
		.long   _071b2c_case
		.long   _071b3a_case




_071a30_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    0x000060(%eax),%dx
		mov    %eax,%ecx
		cmp    $0x000066,%dx
		jne    _071a5a_jump

	_071a41_jump:
		cmpl   $0x000000,0x000024(%ecx)
		je     _071a5a_jump
		mov    0x0000e4(%ecx),%di
		add    $0x000084,%ecx
		cmp    $0x000066,%di
		je     _071a41_jump

	_071a5a_jump:
		cmpw   $0x000066,0x000060(%ecx)
		jne    _071b93_jump
		cmp    $0x000004,%bx
		jge    _071acc_jump
		movswl %bx,%edx
		mov    $0x000002,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x000081(%ecx),%al
		and    $0x000001,%dl
		and    $0x0000f7,%al
		shl    $0x000003,%dl
		mov    %al,0x000081(%ecx)
		mov    %al,%ah
		or     %dl,%ah
		mov    %ah,0x000081(%ecx)
		cmp    $0x000002,%bx
		jge    _071aa5_jump
		mov    $0xffffffff,%edx
		jmp    _071aaa_jump

	_071aa5_jump:
		mov    $0x000001,%edx

	_071aaa_jump:
		mov    %dx,0x000042(%ecx)
		testb  $0x000008,0x000081(%ecx)
		je     _071abe_jump
		mov    $0x000001,%edx
		jmp    _071ac3_jump

	_071abe_jump:
		mov    $0xffffffff,%edx

	_071ac3_jump:
		mov    %dx,0x000040(%ecx)
		jmp    _071b46_jump

	_071acc_jump:
		movswl %bx,%edx
		mov    $0x000002,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x000081(%ecx),%ah
		and    $0x000001,%dl
		and    $0x0000f7,%ah
		shl    $0x000003,%dl
		mov    %ah,%dh
		mov    %ah,0x000081(%ecx)
		or     %dl,%dh
		sub    $0x000004,%ebx
		mov    %dh,0x000081(%ecx)
		cmp    $0x000003,%bx
		ja     _071b46_jump
		xor    %edx,%edx
		mov    %bx,%dx
		jmp    *%cs:_071a20_switch(,%edx,4)

	_071b10_case:
		movw   $0x000000,0x000042(%ecx)
		movw   $0x00fffe,0x000040(%ecx)
		jmp    _071b46_jump

	_071b1e_case:
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _071b46_jump

	_071b2c_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fffe,0x000042(%ecx)
		jmp    _071b46_jump

	_071b3a_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000002,0x000042(%ecx)

	_071b46_jump:
		mov    0x000028(%esi),%edx
		mov    %edx,0x000028(%ecx)
		mov    $0x000001,%ebx
		mov    0x00002c(%esi),%edx
		movb   $0x000002,0x00006d(%ecx)
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    %ebx,%edx
		movb   $0x000005,0x00006c(%ecx)
		call   _05f030_func
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f304_func
		mov    %ecx,%eax
		call   _01db8c_func

	_071b93_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_071b98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _071ca1_jump

	_071bb6_jump:
		cmpw   $0x000066,0x000060(%ecx)
		jne    _071c91_jump
		mov    0x000024(%ecx),%ebx
		test   %ebx,%ebx
		jne    _071c91_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000f4,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		mov    %esi,%eax
		call   _076fac_func
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _071a30_func
		mov    $0x000001,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _071a30_func
		mov    $0x000002,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _071a30_func
		mov    $0x000003,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _071a30_func
		mov    $0x000004,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _071a30_func
		mov    $0x000005,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _071a30_func
		mov    $0x000006,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _071a30_func
		mov    $0x000007,%ebx
		lea    0x000084(%ecx),%eax
		mov    %esi,%edx
		call   _071a30_func
		mov    0x000081(%esi),%ah
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071c91_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _071bb6_jump

	_071ca1_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071ca8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _071dd4_jump

	_071cc6_jump:
		cmpw   $0x00005d,0x000060(%ecx)
		jne    _071dc4_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _071dc4_jump
		cmpw   $0x000000,0x000040(%esi)
		jne    _071d09_jump
		movw   $0x00ffff,0x000040(%ecx)
		movw   $0x00fffc,0x000042(%ecx)
		movb   $0x00000a,0x000072(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x000002,0x000050(%ecx)
		and    $0x0000f7,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _071d4a_jump

	_071d09_jump:
		mov    _0cdc30_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jge    _071d1c_jump
		mov    $0xfffffffc,%eax
		jmp    _071d21_jump

	_071d1c_jump:
		mov    $0x000004,%eax

	_071d21_jump:
		mov    %ax,0x000040(%ecx)
		test   %ax,%ax
		jge    _071d33_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _071d3a_jump

	_071d33_jump:
		orb    $0x000008,0x000081(%ecx)

	_071d3a_jump:
		movb   $0x0000ff,0x000072(%ecx)
		movw   $0x000001,0x000050(%ecx)
		movw   $0x00ffff,0x000042(%ecx)

	_071d4a_jump:
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		movb   $0x000002,0x00006d(%ecx)
		mov    %eax,0x00002c(%ecx)
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%ax
		mov    %ebx,%edx
		mov    %ax,0x00003c(%ecx)
		mov    %ecx,%eax
		movb   $0x000003,0x00006c(%ecx)
		call   _05f030_func
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000081(%ecx),%bl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _01f304_func
		movb   $0x000000,0x000071(%ecx)
		movw   $0x0000c8,0x000056(%ecx)
		mov    0x000081(%esi),%bh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bh
		mov    %ecx,%eax
		mov    %bh,0x000081(%esi)
		call   _01db8c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071dc4_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _071cc6_jump

	_071dd4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071ddc_func:
		push   %ebx
		mov    0x000060(%eax),%dx
		cmp    $0x00005b,%dx
		jb     _071dfa_jump
		jbe    _071e07_jump
		cmp    $0x00005d,%dx
		jb     _071e32_jump
		jbe    _071e0e_jump
		cmp    $0x0000b6,%dx
		je     _071e00_jump
		pop    %ebx
		ret    

	_071dfa_jump:
		cmp    $0x00005a,%dx
		jne    _071e32_jump

	_071e00_jump:
		call   _071ca8_func
		pop    %ebx
		ret    

	_071e07_jump:
		call   _071b98_func
		pop    %ebx
		ret    

	_071e0e_jump:
		mov    _0cdc30_data,%edx
		mov    0x000040(%edx),%dx
		movw   $0x00ffff,0x000042(%eax)
		movb   $0x0000ff,0x000072(%eax)
		mov    0x000040(%eax),%bx
		movw   $0x000001,0x000050(%eax)
		add    %edx,%ebx
		mov    %bx,0x000040(%eax)

	_071e32_jump:
		pop    %ebx
		ret    



_071e34_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x00005c,%ax
		jb     _071e55_jump
		jbe    _071e5f_jump
		cmp    $0x00005d,%ax
		jbe    _071e6a_jump
		cmp    $0x0000b6,%ax
		je     _071e6a_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071e55_jump:
		cmp    $0x00005a,%ax
		je     _071e6a_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071e5f_jump:
		mov    %edx,%eax
		call   _0717d0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071e6a_jump:
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _071e76_jump
		neg    %eax

	_071e76_jump:
		mov    %eax,%ebx
		mov    %ax,0x000042(%edx)
		neg    %ebx
		mov    %bx,0x000042(%edx)
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jle    _071e94_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,0x000042(%edx)

	_071e94_jump:
		mov    $0x00000a,%al
		mov    0x000071(%edx),%ah
		sub    %ah,%al
		mov    %al,0x000071(%edx)
		mov    %edx,%eax
		call   _01db8c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071eac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		cmpb   $0x000006,_0e41b0_data
		jbe    _071ec4_jump
		movb   $0x000006,_0e41b0_data

	_071ec4_jump:
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%di
		xor    %eax,%eax
		test   %di,%di
		jle    _07203b_jump

	_071edc_jump:
		xor    %edx,%edx
		mov    _0e41b0_data,%dl
		imul   $0x00000a,%edx,%edx
		xor    %ebx,%ebx
		xor    %esi,%esi
		mov    _097b70_data(%edx),%bl
		mov    0x000060(%ecx),%si
		add    $0x00005a,%ebx
		cmp    %ebx,%esi
		jne    _07202b_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07202b_jump
		mov    0x000081(%ecx),%bl
		mov    0x000081(%ebp),%al
		and    $0x0000f7,%bl
		and    $0x000008,%al
		mov    %bl,0x000081(%ecx)
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,0x000081(%ecx)
		mov    _097b74_data(%edx),%ax
		mov    %ax,0x000042(%ecx)
		testb  $0x000008,0x000081(%ecx)
		je     _071f5d_jump
		mov    _097b72_data(%edx),%ax
		mov    _0e419e_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%bl
		add    $0x000017,%edx
		mov    %ax,0x000040(%ecx)
		jmp    _071f81_jump

	_071f5d_jump:
		mov    _097b72_data(%edx),%ax
		mov    %eax,%edx
		mov    %ax,0x000040(%ecx)
		neg    %edx
		mov    %dx,0x000040(%ecx)
		mov    _0e419e_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%bl
		add    $0x000009,%edx

	_071f81_jump:
		sub    %ebx,%edx
		mov    %edx,0x000028(%ecx)
		mov    _0e41a0_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000069(%ecx),%dl
		sub    %edx,%ebx
		add    $0x000019,%ebx
		mov    %ebx,0x00002c(%ecx)
		xor    %ebx,%ebx
		mov    _0e41b0_data,%bl
		lea    0x000000(,%ebx,4),%edx
		add    %ebx,%edx
		movb   $0x000002,0x00006d(%ecx)
		mov    $0x000001,%ebx
		mov    _097b70_data(,%edx,2),%al
		mov    %ebx,%edx
		mov    %al,0x00006c(%ecx)
		mov    %ecx,%eax
		call   _05f030_func
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000081(%ecx),%ah
		xor    %ebx,%ebx
		or     $0x000004,%ah
		movl   $0x000001,0x000024(%ecx)
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		and    $0x0000bf,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f304_func
		mov    _0e41b0_data,%bl
		lea    0x000000(,%ebx,4),%edx
		movb   $0x000000,0x000071(%ecx)
		add    %ebx,%edx
		movb   $0x00000a,0x000072(%ecx)
		mov    _097b76_data(,%edx,2),%ax
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		call   _01db8c_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07202b_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %di,%ax
		jl     _071edc_jump

	_07203b_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072044_func:
		push   %ebx
		push   %edx
		mov    _0e41ac_data,%bx
		mov    _0e41a8_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		movswl %bx,%eax
		mov    _097bb6_data(%edx,%eax,4),%eax
		mov    %eax,_0e4194_data
		cmpw   $0x000000,_0e4196_data
		je     _072088_jump
		xor    %ebx,%ebx
		jmp    _072089_jump

	_072088_jump:
		inc    %ebx

	_072089_jump:
		mov    _0e4194_data,%al
		mov    %bx,_0e41ac_data
		pop    %edx
		pop    %ebx
		ret    



_072098_func:
		push   %edx
		cmpw   $0x00004a,0x000060(%eax)
		jne    _0720bd_jump
		call   _071eac_func
		mov    _0e4195_data,%al
		inc    %al
		mov    %al,_0cefe9_data
		call   _072044_func
		mov    %al,_0e41b0_data
		pop    %edx
		ret    

	_0720bd_jump:
		xor    %dl,%dl
		mov    %dl,_0e41b0_data
		call   _071eac_func
		pop    %edx
		ret    



_0720cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000064,_0cefe6_data
		je     _07215b_jump
		mov    0x000076(%eax),%dh
		dec    %dh
		mov    %dh,0x000076(%eax)
		test   %dh,%dh
		jbe    _072153_jump
		mov    0x00006d(%eax),%cl
		cmp    $0x000002,%cl
		je     _072115_jump
		mov    $0x000003,%ebx
		mov    0x00006c(%eax),%dl
		mov    %cl,_0e41a6_data
		mov    %dl,_0e41a7_data
		xor    %edx,%edx
		mov    $0x000002,%ch
		call   _01d374_func
		mov    %ch,_0e41a4_data
		jmp    _07211c_jump

	_072115_jump:
		xor    %al,%al
		mov    %al,_0e41a4_data

	_07211c_jump:
		mov    _0e41aa_data,%dx
		inc    %edx
		mov    %dx,_0e41aa_data
		cmp    $0x000003,%dx
		jle    _07213c_jump
		movw   $0x000003,_0e41aa_data
		jmp    _072145_jump

	_07213c_jump:
		xor    %ecx,%ecx
		mov    %cx,_0e41ac_data

	_072145_jump:
		call   _072044_func
		mov    %al,_0e41b0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_072153_jump:
		xor    %bh,%bh
		mov    %bh,_0e41a4_data

	_07215b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072160_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cefe6_data,%al
		cmp    $0x000002,%al
		jb     _072178_jump
		jbe    _0721bf_jump
		cmp    $0x000003,%al
		je     _0721ce_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_072178_jump:
		cmp    $0x000001,%al
		jne    _0721fa_jump
		mov    0x000076(%ecx),%al
		dec    %al
		xor    %edx,%edx
		mov    %al,0x000076(%ecx)
		xor    %eax,%eax
		mov    0x000076(%ecx),%dl
		mov    0x000077(%ecx),%al
		sub    %edx,%eax
		cmp    $0x000003,%eax
		jl     _0721a0_jump
		movb   $0x000002,_0cefe6_data

	_0721a0_jump:
		xor    %dl,%dl
		mov    %ecx,%eax
		mov    %dl,_0cefe5_data
		mov    $0x000003,%edx
		call   _01d364_func
		movb   $0x000002,_0e41a4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0721bf_jump:
		xor    %bl,%bl
		mov    %bl,_0e41a4_data
		decb   0x000076(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0721ce_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000076(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		dec    %dl
		xor    %ah,%ah
		mov    %dl,0x000076(%ecx)
		mov    $0x000002,%dh
		mov    %ah,_0cefe5_data
		mov    %dh,_0e41a4_data

	_0721fa_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072200_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %esp,%eax
		mov    $_0e41a2_data,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $_0e41a0_data,%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d710_func
		testb  $0x000008,0x000081(%esi)
		je     _072247_jump
		mov    0x000004(%esp),%esi
		mov    _0e41a0_data,%dx
		sub    $0x000020,%esi
		add    %esi,%edx
		mov    %dx,_0e41a0_data

	_072247_jump:
		mov    _0e41a0_data,%bx
		mov    _0e41a2_data,%cx
		add    $0x00000c,%ebx
		add    $0x00000c,%ecx
		mov    %bx,_0e41a0_data
		mov    %cx,_0e41a2_data
		add    $0x000008,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072274_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000020,%esp
		mov    %eax,%esi
		lea    0x000018(%esp),%ebx
		push   %ebx
		lea    0x000020(%esp),%ebx
		lea    0x000010(%esp),%ecx
		push   %ebx
		mov    $0x000002,%edx
		lea    0x000018(%esp),%ebx
		call   _01d710_func
		lea    0x000004(%esp),%ebx
		lea    0x000008(%esp),%ecx
		push   %ebx
		lea    0x000018(%esp),%ebx
		mov    $0x000005,%edx
		push   %ebx
		mov    %esi,%eax
		lea    0x000008(%esp),%ebx
		call   _01d710_func
		mov    0x00001a(%esp),%ebx
		mov    0x000008(%esp),%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%esp),%ecx
		sub    $0x000014,%ebx
		sar    $0x000010,%ecx
		sar    %ebx
		add    $0x000014,%eax
		add    %ecx,%ebx
		mov    %ax,_0e419e_data
		mov    %bx,_0e419c_data
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0722ec_switch:
		.long   _0726cb_case
		.long   _07258d_case
		.long   _07260f_case
		.long   _0725f5_case

_0722fc_switch:
		.long   _072643_case
		.long   _072643_case
		.long   _072643_case
		.long   _072643_case
		.long   _072643_case
		.long   _072643_case
		.long   _072643_case
		.long   _072654_case
		.long   _07267b_case
		.long   _0726a2_case




_072324_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		call   _071550_func
		mov    %esi,%eax
		call   _072200_func
		mov    %esi,%eax
		call   _072274_func
		cmpb   $0x000001,0x000076(%esi)
		jae    _0723f0_jump
		cmpb   $0x000064,_0cefe6_data
		je     _0723f0_jump
		xor    %dh,%dh
		xor    %eax,%eax
		mov    %dh,_0e41a4_data
		mov    0x000069(%esi),%al
		add    0x00002c(%esi),%eax
		mov    _0cdb96_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _0723f0_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		movb   $0x0000ff,0x00006b(%esi)
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000001,%cl
		call   _05f030_func
		mov    $0x000064,%bh
		mov    $0x0001a4,%edx
		movw   $0x000000,0x000040(%esi)
		mov    %cl,_0cefca_data
		movw   $0x000000,0x000042(%esi)
		mov    %bh,_0cefe6_data
		mov    %dx,_0e41a8_data

	_0723f0_jump:
		cmpb   $0x000001,_0e41a4_data
		jne    _07240a_jump
		mov    %esi,%eax
		xor    %cl,%cl
		call   _0720cc_func
		mov    %cl,_0cefe5_data
		jmp    _072470_jump

	_07240a_jump:
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _072468_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0cef4d_data(%eax),%dl
		test   %dl,%dl
		jne    _072468_jump
		mov    $0x000001,%bl
		mov    %dl,_0cefe1_data
		mov    %bl,_0cefe5_data
		jmp    _072470_jump

	_072468_jump:
		xor    %dh,%dh
		mov    %dh,_0cefe5_data

	_072470_jump:
		mov    _0cefe6_data,%al
		mov    0x000028(%esi),%dx
		cmp    $0x000002,%al
		jb     _07249e_jump
		jbe    _0726f3_jump
		cmp    $0x000004,%al
		jb     _0728c8_jump
		jbe    _072abd_jump
		cmp    $0x000064,%al
		je     _072dc9_jump
		jmp    _072dfe_jump

	_07249e_jump:
		test   %al,%al
		ja     _07253a_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0724b6_jump
		cmpb   $0x000000,0x00006c(%esi)
		je     _072dfe_jump

	_0724b6_jump:
		movswl %dx,%eax
		mov    _0cdbcc_data,%ebx
		lea    0x0000dc(%eax),%edx
		cmp    %ebx,%edx
		jle    _0724d9_jump
		lea    0x00006e(%ebx),%edx
		cmp    %eax,%edx
		jle    _0724d9_jump
		movb   $0x000001,_0cefe1_data
		jmp    _0724e7_jump

	_0724d9_jump:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func

	_0724e7_jump:
		cmpb   $0x000000,_0cefe1_data
		je     _072dfe_jump
		cmpb   $0x000000,_0cefe5_data
		je     _072dfe_jump
		mov    $0x000001,%ah
		mov    $0x000001,%ebx
		mov    %ah,_0cefe6_data
		mov    %ah,_0cefe4_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %ax,_0e41ac_data
		mov    %ax,_0e41aa_data
		call   _072044_func
		mov    %al,_0e41b0_data
		mov    %esi,%eax
		call   _01d374_func
		jmp    _072dfe_jump

	_07253a_jump:
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		call   _01db14_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _072576_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		xor    %bl,%bl
		movw   $0x000000,0x000040(%esi)
		mov    %bl,_0cefe5_data

	_072576_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%al
		ja     _072dfe_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_0722ec_switch(,%edx,4)

	_07258d_case:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%esi),%edx
		and    $0x0000ff,%eax
		mov    (%edx,%ebx,1),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _072dfe_jump
		mov    0x00006b(%esi),%cl
		cmp    $0x000018,%cl
		je     _0725e9_jump
		cmp    $0x00001c,%cl
		jne    _0725d2_jump
		cmpb   $0x000000,_0cefe9_data
		je     _0725e9_jump

	_0725d2_jump:
		cmpb   $0x000020,0x00006b(%esi)
		jne    _072dfe_jump
		cmpb   $0x000000,_0cefe9_data
		jne    _072dfe_jump

	_0725e9_jump:
		mov    %esi,%eax
		call   _072098_func
		jmp    _072dfe_jump

	_0725f5_case:
		cmpb   $0x000000,_0cefe5_data
		je     _072dfe_jump
		xor    %cl,%cl
		mov    %cl,_0e41a4_data
		jmp    _072dfe_jump

	_07260f_case:
		cmpb   $0x000000,_0cefe5_data
		je     _072dfe_jump
		mov    _0cefe9_data,%al
		cmp    $0x000001,%al
		ja     _0726bc_jump
		mov    _0e4194_data,%al
		cmp    $0x000009,%al
		ja     _072dfe_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0722fc_switch(,%eax,4)

	_072643_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d364_func
		jmp    _072dfe_jump

	_072654_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000003,%edi
		call   _01d374_func
		mov    $0x000002,%bl
		mov    %di,_0e41a8_data
		mov    %bl,_0cefe6_data
		jmp    _072dfe_jump

	_07267b_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000002,%ecx
		call   _01d374_func
		mov    $0x000003,%dh
		mov    %cx,_0e41a8_data
		mov    %dh,_0cefe6_data
		jmp    _072dfe_jump

	_0726a2_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x000004,_0cefe6_data
		jmp    _072dfe_jump

	_0726bc_jump:
		mov    %al,%ah
		dec    %ah
		mov    %ah,_0cefe9_data
		jmp    _072dfe_jump

	_0726cb_case:
		cmpb   $0x000000,_0cefe5_data
		je     _072dfe_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d364_func
		call   _072044_func
		mov    %al,_0e41b0_data
		jmp    _072dfe_jump

	_0726f3_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _07272d_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _07272d_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _07272d_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0e41a7_data,%bl
		mov    _0e41a6_data,%dl
		xor    %cl,%cl
		call   _01d374_func
		mov    %cl,_0e41a4_data
		mov    %cl,_0cefe5_data

	_07272d_jump:
		mov    0x00006d(%esi),%al
		test   %al,%al
		jne    _07282c_jump
		testb  $0x000008,0x000081(%esi)
		jne    _07274f_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edi
		mov    0x000068(%esi),%al
		add    %edi,%eax
		test   %eax,%eax
		jl     _072773_jump

	_07274f_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072779_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    _0cede6_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _072779_jump

	_072773_jump:
		movw   $0x000000,0x000040(%esi)

	_072779_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _072dfe_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _072dfe_jump
		jbe    _07279c_jump
		cmp    $0x00000b,%al
		je     _0727d3_jump
		jmp    _072dfe_jump

	_07279c_jump:
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ebp
		movw   $0x00fffa,0x000042(%esi)
		sub    $0x000006,%ebp
		mov    0x000081(%esi),%dh
		mov    %ebp,0x00002c(%esi)
		test   $0x000008,%dh
		je     _0727c5_jump
		mov    $0x000001,%eax
		jmp    _0727ca_jump

	_0727c5_jump:
		mov    $0xffffffff,%eax

	_0727ca_jump:
		mov    %ax,0x000040(%esi)
		jmp    _072dfe_jump

	_0727d3_jump:
		mov    _0e41a8_data,%dx
		dec    %edx
		mov    %dx,_0e41a8_data
		test   %dx,%dx
		jle    _072800_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%esi)
		jmp    _072dfe_jump

	_072800_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _07281e_jump
		mov    $0x000002,%eax
		jmp    _072823_jump

	_07281e_jump:
		mov    $0xfffffffe,%eax

	_072823_jump:
		mov    %ax,0x000040(%esi)
		jmp    _072dfe_jump

	_07282c_jump:
		cmp    $0x000001,%al
		jne    _072dfe_jump
		testb  $0x000008,0x000081(%esi)
		jne    _072847_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _072872_jump

	_072847_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072dfe_jump
		mov    _0cede6_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _072dfe_jump

	_072872_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%bl
		sub    %eax,%edx
		and    $0x0000f7,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%esi)
		and    $0x000001,%al
		mov    %bl,%bh
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		xor    %ebx,%ebx
		mov    $0x000001,%cl
		call   _01d374_func
		mov    %cl,_0cefe6_data
		movw   $0x000000,0x000040(%esi)
		jmp    _072dfe_jump

	_0728c8_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _072902_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _072902_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _072902_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0e41a7_data,%bl
		mov    _0e41a6_data,%dl
		call   _01d374_func
		xor    %bh,%bh
		mov    %bh,_0e41a4_data
		mov    %bh,_0cefe5_data

	_072902_jump:
		mov    0x00006d(%esi),%ch
		test   %ch,%ch
		jne    _0729e7_jump
		testb  $0x000008,0x000081(%esi)
		jne    _072924_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		test   %eax,%eax
		jl     _072948_jump

	_072924_jump:
		testb  $0x000008,0x000081(%esi)
		je     _07294e_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    _0cede6_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _07294e_jump

	_072948_jump:
		movw   $0x000000,0x000040(%esi)

	_07294e_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _072dfe_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _072dfe_jump
		jbe    _072971_jump
		cmp    $0x00000b,%al
		je     _0729a8_jump
		jmp    _072dfe_jump

	_072971_jump:
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ecx
		movw   $0x00fffa,0x000042(%esi)
		sub    $0x000006,%ecx
		mov    0x000081(%esi),%dl
		mov    %ecx,0x00002c(%esi)
		test   $0x000008,%dl
		je     _07299a_jump
		mov    $0x000001,%eax
		jmp    _07299f_jump

	_07299a_jump:
		mov    $0xffffffff,%eax

	_07299f_jump:
		mov    %ax,0x000040(%esi)
		jmp    _072dfe_jump

	_0729a8_jump:
		mov    _0e41a8_data,%ax
		mov    $0x000001,%edx
		dec    %eax
		xor    %ebx,%ebx
		mov    %ax,_0e41a8_data
		mov    %esi,%eax
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _0729d3_jump
		mov    $0x000002,%eax
		jmp    _0729d8_jump

	_0729d3_jump:
		mov    $0xfffffffe,%eax

	_0729d8_jump:
		movw   $0x00001e,0x000056(%esi)
		mov    %ax,0x000040(%esi)
		jmp    _072dfe_jump

	_0729e7_jump:
		cmp    $0x000001,%ch
		jne    _072dfe_jump
		mov    _0e41a8_data,%bx
		cmp    $0x000001,%bx
		jne    _072a29_jump
		mov    0x000056(%esi),%cx
		sub    %ebx,%ecx
		mov    %cx,0x000056(%esi)
		cmp    %bx,%cx
		jge    _072dfe_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%esi)
		jmp    _072dfe_jump

	_072a29_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _072a3c_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _072a67_jump

	_072a3c_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072dfe_jump
		mov    _0cede6_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _072dfe_jump

	_072a67_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,0x000081(%esi)
		or     %al,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		xor    %ebx,%ebx
		call   _01d374_func
		mov    $0x000001,%bh
		movw   $0x000000,0x000040(%esi)
		mov    %bh,_0cefe6_data
		jmp    _072dfe_jump

	_072abd_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _072af7_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _072af7_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _072af7_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0e41a7_data,%bl
		mov    _0e41a6_data,%dl
		call   _01d374_func
		xor    %bl,%bl
		mov    %bl,_0e41a4_data
		mov    %bl,_0cefe5_data

	_072af7_jump:
		mov    0x00006d(%esi),%cl
		test   %cl,%cl
		jne    _072d2f_jump
		testb  $0x000008,0x000081(%esi)
		jne    _072b19_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		add    %ecx,%eax
		test   %eax,%eax
		jl     _072b3d_jump

	_072b19_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072b43_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    _0cede6_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _072b43_jump

	_072b3d_jump:
		movw   $0x000000,0x000040(%esi)

	_072b43_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _072dfe_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _072dfe_jump
		jbe    _072b6a_jump
		cmp    $0x00000b,%al
		je     _072c32_jump
		jmp    _072dfe_jump

	_072b6a_jump:
		mov    0x000028(%esi),%ax
		mov    _0cdbcc_data,%dx
		add    $0x000030,%eax
		movb   $0x000005,0x000072(%esi)
		sub    %edx,%eax
		movb   $0x000000,0x000071(%esi)
		test   %ax,%ax
		jge    _072b8b_jump
		neg    %eax

	_072b8b_jump:
		cmp    $0x000064,%ax
		jle    _072bd5_jump
		movswl %ax,%edx
		mov    $0x000014,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		cmp    $0x000009,%ax
		jle    _072bb2_jump
		movw   $0x000009,0x000042(%esi)
		jmp    _072bbe_jump

	_072bb2_jump:
		cmp    $0x000004,%ax
		jge    _072bbe_jump
		movw   $0x000004,0x000042(%esi)

	_072bbe_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072bce_jump
		mov    $0x000002,%eax
		jmp    _072c17_jump

	_072bce_jump:
		mov    $0xfffffffe,%eax
		jmp    _072c17_jump

	_072bd5_jump:
		movswl %ax,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		cmp    $0x000009,%ax
		jle    _072bf6_jump
		movw   $0x000009,0x000042(%esi)
		jmp    _072c02_jump

	_072bf6_jump:
		cmp    $0x000004,%ax
		jge    _072c02_jump
		movw   $0x000004,0x000042(%esi)

	_072c02_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072c12_jump
		mov    $0x000001,%eax
		jmp    _072c17_jump

	_072c12_jump:
		mov    $0xffffffff,%eax

	_072c17_jump:
		mov    %ax,0x000040(%esi)
		mov    0x000040(%esi),%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x00002c(%esi)
		negw   0x000042(%esi)
		jmp    _072dfe_jump

	_072c32_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072c4b_jump
		mov    0x000028(%esi),%eax
		mov    _0cdbcc_data,%edi
		add    $0x000030,%eax
		cmp    %edi,%eax
		jl     _072c64_jump

	_072c4b_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _072c77_jump
		mov    0x000028(%esi),%eax
		mov    _0cdbcc_data,%ebp
		add    $0x000030,%eax
		cmp    %ebp,%eax
		jle    _072c77_jump

	_072c64_jump:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _072dfe_jump

	_072c77_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _072c8a_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _072cad_jump

	_072c8a_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072d03_jump
		mov    _0cede6_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _072d03_jump

	_072cad_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%bh
		sub    %eax,%edx
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,%cl
		mov    %bh,0x000081(%esi)
		and    $0x000001,%al
		xor    %ebx,%ebx
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%cl
		mov    %esi,%eax
		mov    %cl,0x000081(%esi)
		call   _01d374_func
		mov    $0x000001,%ch
		movw   $0x000000,0x000040(%esi)
		mov    %ch,_0cefe6_data
		jmp    _072dfe_jump

	_072d03_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _072d21_jump
		mov    $0x000002,%eax
		jmp    _072d26_jump

	_072d21_jump:
		mov    $0xfffffffe,%eax

	_072d26_jump:
		mov    %ax,0x000040(%esi)
		jmp    _072dfe_jump

	_072d2f_jump:
		cmp    $0x000001,%cl
		jne    _072dfe_jump
		testb  $0x000008,0x000081(%esi)
		jne    _072d4b_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _072d76_jump

	_072d4b_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072dfe_jump
		mov    _0cede6_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _072dfe_jump

	_072d76_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%esi)
		mov    %dl,%dh
		xor    %ebx,%ebx
		or     %al,%dh
		mov    %esi,%eax
		mov    %dh,0x000081(%esi)
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%bl
		movw   $0x000000,0x000040(%esi)
		mov    %bl,_0cefe6_data
		jmp    _072dfe_jump

	_072dc9_jump:
		mov    _0e41a8_data,%bx
		dec    %ebx
		mov    %bx,_0e41a8_data
		cmp    $0x000001,%bx
		jge    _072dfe_jump
		mov    $0x0003e7,%edi
		mov    $0x000001,%ch
		mov    _0ced88_data,%al
		mov    %di,_0e41a8_data
		or     $0x000004,%al
		mov    %ch,_0cefc8_data
		mov    %al,_0ced88_data

	_072dfe_jump:
		mov    _0cede6_data,%ecx
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		xor    %ebx,%ebx
		add    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		add    $0x00012f,%ecx
		add    %edx,%eax
		cmp    %ebx,%eax
		jl     _072e30_jump
		cmp    %ecx,%eax
		jg     _072e30_jump
		mov    $0x000001,%eax
		jmp    _072e32_jump

	_072e30_jump:
		xor    %eax,%eax

	_072e32_jump:
		test   %eax,%eax
		jne    _072e3c_jump
		movw   $0x000000,0x000040(%esi)

	_072e3c_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072e44_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpw   $0x000000,0x000042(%eax)
		jle    _072e82_jump
		call   _0252c0_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    %bx,_0ceda6_data
		mov    $0x00000b,%ebx
		call   _01d374_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _053b78_func

	_072e82_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_072e88_switch:
		.long   _072fc5_case
		.long   _073036_case
		.long   _073114_case
		.long   _07320d_case

_072e98_switch:
		.long   _07324c_case
		.long   _073368_case
		.long   _07324c_case
		.long   _07324c_case
		.long   _073368_case
		.long   _073368_case
		.long   _073368_case
		.long   _073368_case
		.long   _073368_case
		.long   _073368_case
		.long   _073271_case
		.long   _07324c_case




_072ec8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		movb   $0x000001,_0cefbd_data
		mov    %esi,%eax
		call   _072200_func
		mov    0x000028(%esi),%ax
		mov    %ax,_0e4198_data
		mov    0x00002c(%esi),%ax
		mov    %ax,_0e419a_data
		mov    %esi,%eax
		call   _072274_func
		cmpb   $0x000001,_0e41a4_data
		jne    _072f09_jump
		mov    %esi,%eax
		call   _072160_func

	_072f09_jump:
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _072f67_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0cef4d_data(%eax),%dh
		test   %dh,%dh
		jne    _072f67_jump
		mov    $0x000001,%bh
		mov    %dh,_0cefe1_data
		mov    %bh,_0cefe5_data
		jmp    _072f6f_jump

	_072f67_jump:
		xor    %bl,%bl
		mov    %bl,_0cefe5_data

	_072f6f_jump:
		mov    _0cdbcc_data,%ebx
		mov    _0cede6_data,%eax
		add    $0x000096,%ebx
		sar    $0x000010,%eax
		mov    0x000028(%esi),%dx
		cmp    %eax,%ebx
		jle    _072fab_jump
		mov    _0cdb98_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    _0cdbd0_data,%ebx
		sub    $0x00006e,%eax
		cmp    %ebx,%eax
		jge    _072fab_jump
		mov    0x000076(%esi),%al
		mov    %al,_0e41a5_data

	_072fab_jump:
		mov    _0cefe6_data,%al
		cmp    $0x000003,%al
		ja     _073368_case
		and    $0x0000ff,%eax
		jmp    *%cs:_072e88_switch(,%eax,4)

	_072fc5_case:
		mov    %esi,%eax
		call   _0252c0_func
		movswl %dx,%eax
		mov    _0cdbcc_data,%ebx
		add    $0x0000dc,%eax
		cmp    %ebx,%eax
		jle    _072ff2_jump
		lea    0x0000dc(%ebx),%eax
		movswl %dx,%edx
		cmp    %edx,%eax
		jle    _072ff2_jump
		movb   $0x000001,_0cefe1_data

	_072ff2_jump:
		cmpb   $0x000000,_0cefe1_data
		je     _073368_case
		cmpb   $0x000000,_0cefe5_data
		je     _073368_case
		mov    $0x000001,%cl
		mov    $0x000001,%ebx
		xor    %al,%al
		xor    %edx,%edx
		mov    %cl,_0cefe6_data
		mov    %al,_0cefe4_data
		mov    $0x000002,%ch
		mov    %esi,%eax
		mov    %ch,_0cefe9_data
		call   _01d374_func
		jmp    _073368_case

	_073036_case:
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%al
		jb     _073050_jump
		jbe    _0730c3_jump
		cmp    $0x000003,%al
		je     _0730fb_jump
		jmp    _073368_case

	_073050_jump:
		cmp    $0x000001,%al
		jne    _073368_case
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _073368_case
		mov    0x00006b(%esi),%bh
		cmp    $0x000018,%bh
		je     _0730b1_jump
		cmp    $0x00001c,%bh
		jne    _07309a_jump
		cmpb   $0x000001,_0cefe4_data
		ja     _0730b1_jump

	_07309a_jump:
		cmpb   $0x000020,0x00006b(%esi)
		jne    _073368_case
		cmpb   $0x000003,_0cefe4_data
		jbe    _073368_case

	_0730b1_jump:
		mov    %esi,%eax
		call   _072098_func
		incb   _0cefe4_data
		jmp    _073368_case

	_0730c3_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _073368_case
		mov    _0cefe9_data,%dl
		cmp    $0x000001,%dl
		ja     _0730ec_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d364_func
		jmp    _073368_case

	_0730ec_jump:
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0cefe9_data
		jmp    _073368_case

	_0730fb_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _073368_case
		xor    %al,%al
		mov    %al,_0e41a4_data
		jmp    _073368_case

	_073114_case:
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _073126_jump
		jbe    _073156_jump
		cmp    $0x00000b,%al
		je     _073191_jump
		jmp    _073368_case

	_073126_jump:
		cmp    $0x000003,%al
		jne    _073368_case
		cmpb   $0x000000,_0cefe5_data
		je     _073368_case
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %cl,%cl
		xor    %edx,%edx
		mov    %cl,_0e41a4_data
		call   _01d374_func
		jmp    _073368_case

	_073156_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _073368_case
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fffa,0x000042(%esi)
		mov    $0x000002,%ebx
		mov    0x00002c(%esi),%eax
		movw   $0x00ffff,0x000040(%esi)
		sub    $0x000006,%eax
		mov    %bx,_0e41a8_data
		mov    %eax,0x00002c(%esi)
		jmp    _073368_case

	_073191_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _073368_case
		mov    _0cdbcc_data,%eax
		mov    0x000028(%esi),%ebp
		sub    $0x000032,%eax
		cmp    %ebp,%eax
		jle    _0731fa_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%esi)
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		xor    %edx,%edx
		call   _01d364_func
		movb   $0x000003,_0cefe6_data
		jmp    _073368_case

	_0731fa_jump:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _073368_case

	_07320d_case:
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%al
		jb     _07321f_jump
		jbe    _0732aa_jump
		jmp    _073368_case

	_07321f_jump:
		test   %al,%al
		jne    _073368_case
		cmpb   $0x000000,_0cefe5_data
		je     _073368_case
		mov    0x00006c(%esi),%al
		cmp    $0x00000b,%al
		ja     _073368_case
		and    $0x0000ff,%eax
		jmp    *%cs:_072e98_switch(,%eax,4)

	_07324c_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		xor    %cl,%cl
		mov    _0e41a8_data,%ax
		mov    %cl,_0e41a4_data
		mov    %ax,0x000040(%esi)
		jmp    _073368_case

	_073271_case:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fff9,0x000042(%esi)
		movw   $0x000002,0x000040(%esi)
		mov    0x000072(%esi),%al
		mov    0x00002c(%esi),%edi
		movb   $0x000005,0x000072(%esi)
		sub    $0x000007,%edi
		mov    %al,0x00006b(%esi)
		mov    %edi,0x00002c(%esi)
		jmp    _073368_case

	_0732aa_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		mov    _0cdb96_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%bl
		add    $0x000032,%edx
		add    %ebx,%edx
		sar    $0x000004,%edx
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _073312_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%esi)
		jmp    _073368_case

	_073312_jump:
		mov    0x000028(%esi),%edx
		mov    _0cee0e_data,%eax
		add    $0x000096,%edx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _073362_jump
		cmpw   $0x000002,_0e41a8_data
		jne    _07334e_jump
		cmpb   $0x000000,_0cef4f_data
		je     _073362_jump
		movw   $0x000001,0x000040(%esi)
		cmpb   $0x000002,_0cef51_data
		jae    _073368_case
		decb   0x00006b(%esi)
		jmp    _073368_case

	_07334e_jump:
		movw   $0x000001,0x000040(%esi)
		cmpb   $0x000000,_0cef4f_data
		je     _073368_case
		decb   0x00006b(%esi)
		jmp    _073368_case

	_073362_jump:
		movw   $0x000002,0x000040(%esi)

	_073368_case:
		mov    _0cede6_data,%ecx
		mov    0x000028(%esi),%edi
		mov    0x00003e(%esi),%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		add    %edi,%eax
		add    $0x00012f,%ecx
		add    %edx,%eax
		cmp    %ebx,%eax
		jl     _07339a_jump
		cmp    %ecx,%eax
		jg     _07339a_jump
		mov    $0x000001,%eax
		jmp    _07339c_jump

	_07339a_jump:
		xor    %eax,%eax

	_07339c_jump:
		test   %eax,%eax
		jne    _0733a6_jump
		movw   $0x000000,0x000040(%esi)

	_0733a6_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0733b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cefe6_data,%al
		cmp    $0x000002,%al
		jb     _0733fd_jump
		cmp    $0x000003,%al
		ja     _0733fd_jump
		cmpw   $0x000000,0x000042(%ecx)
		jle    _0733fd_jump
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _0252c0_func
		xor    %edx,%edx
		mov    %bx,_0ceda0_data
		mov    %ecx,%eax
		mov    $0x00000b,%ebx
		call   _01d374_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _053b78_func

	_0733fd_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073404_func:
		mov    0x000076(%eax),%al
		xor    %ah,%ah
		inc    %eax
		mov    %ax,_0e41a8_data
		ret    



_073414_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _072200_func
		mov    0x000028(%ecx),%ax
		mov    %ax,_0e4198_data
		mov    0x00002c(%ecx),%ax
		mov    %ax,_0e419a_data
		mov    %ecx,%eax
		call   _072274_func
		cmpb   $0x000002,_0cefe6_data
		jne    _073455_jump
		mov    0x00006d(%ecx),%dl
		test   %dl,%dl
		jne    _073455_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _073455_jump
		mov    %dl,_0cefe6_data

	_073455_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jne    _0734b3_jump
		xor    %eax,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0cef4d_data(%eax),%bh
		test   %bh,%bh
		jne    _0734b3_jump
		mov    $0x000001,%ah
		mov    %bh,_0cefe1_data
		mov    %ah,_0cefe5_data
		jmp    _0734ba_jump

	_0734b3_jump:
		xor    %al,%al
		mov    %al,_0cefe5_data

	_0734ba_jump:
		mov    _0cefe6_data,%al
		cmp    $0x000001,%al
		jb     _0735af_jump
		jbe    _0734d5_jump
		cmp    $0x000002,%al
		je     _07358c_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0734d5_jump:
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%al
		jb     _0735af_jump
		jbe    _0734ee_jump
		cmp    $0x000003,%al
		je     _073577_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0734ee_jump:
		cmpb   $0x000018,0x00006b(%ecx)
		jne    _07351f_jump
		xor    %edx,%edx
		mov    0x00000c(%ecx),%ebx
		mov    0x00006d(%ecx),%dl
		and    $0x0000ff,%eax
		mov    (%ebx,%edx,4),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _07351f_jump
		mov    %ecx,%eax
		call   _072098_func

	_07351f_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _0735af_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%ecx),%bl
		sub    %eax,%edx
		and    $0x0000f7,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%ecx)
		and    $0x000001,%al
		mov    %bl,%bh
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%bh
		mov    %ecx,%eax
		mov    %bh,0x000081(%ecx)
		call   _01d364_func
		incb   _0cefe6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_073577_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _0735af_jump
		xor    %cl,%cl
		mov    %cl,_0e41a4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07358c_jump:
		cmpb   $0x000000,_0cefe5_data
		je     _0735af_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _0735af_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		movw   $0x000002,0x000040(%ecx)
		call   _01d374_func

	_0735af_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0735b4_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0cefe6_data
		jne    _0735d9_jump
		mov    $0x000001,%dh
		mov    $0x000001,%ebx
		mov    %dh,_0cefe6_data
		mov    %dh,_0cefe9_data
		xor    %edx,%edx
		call   _01d374_func

	_0735d9_jump:
		pop    %edx
		pop    %ebx
		ret    



_0735dc_func:
		cmpb   $0x000002,_0cefe6_data
		jae    _0735eb_jump
		mov    $0xffffffff,%eax
		ret    

	_0735eb_jump:
		mov    $0x000001,%eax
		ret    



_073600_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %edx,0x00000c(%esp)
		mov    %ecx,0x000008(%esp)
		xor    %ah,%ah
		mov    %ax,_0e5e7c_data
		cmp    $0x0000c8,%bx
		jbe    _073648_jump
		mov    _0cdb98_data,%eax
		sar    $0x000010,%eax
		xor    %esi,%esi
		shl    $0x000004,%eax
		mov    %bx,%si
		lea    -0x0000c8(%eax),%edx
		sub    $0x0000c8,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ax,_0e5e74_data
		jmp    _073651_jump

	_073648_jump:
		movw   $0x000001,_0e5e74_data

	_073651_jump:
		mov    _0e5e74_data,%cx
		test   %cx,%cx
		jne    _073668_jump
		movw   $0x000002,_0e5e74_data
		jmp    _073672_jump

	_073668_jump:
		mov    %ecx,%esi
		inc    %esi
		mov    %si,_0e5e74_data

	_073672_jump:
		mov    _0cdb98_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		xor    %esi,%esi
		lea    -0x0000c8(%eax),%edx
		mov    _0e5e74_data,%si
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    %bx,%ax
		lea    -0x0000c8(%eax),%esi
		sub    %edx,%esi
		lea    -0x000001(%esi),%edx
		mov    %dx,_0e5e78_data
		cmpw   $0x000005,_0cede4_data
		jne    _0736dd_jump
		cmpw   $0x00000a,_0cedd0_data
		jne    _0736dd_jump
		mov    0x000020(%esp),%ecx
		xor    %esi,%esi
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%si
		mov    %eax,%edx
		mov    %esi,%eax
		call   _074924_func
		jmp    _0738a4_jump

	_0736dd_jump:
		mov    _0cede2_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0e5e7c_data,%dx
		mov    _097cb4_data(%edx,%eax,2),%al
		xor    %ah,%ah
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ax,_0e5e7a_data
		jmp    _0737fe_jump

	_073712_jump:
		imul   $0x000018,%esi,%eax
		mov    _0cede2_data,%edi
		sar    $0x000010,%edi
		dec    %edi
		imul   $0x005dc0,%edi,%ebp
		mov    %ebp,(%esp)
		movzwl _0e5e7c_data,%ebp
		imul   $0x000960,%ebp,%ecx
		mov    %ecx,0x000004(%esp)
		mov    (%esp),%ecx
		shl    $0x000003,%esi
		add    0x000004(%esp),%ecx
		add    %ecx,%esi
		mov    _097cf0_data(%esi),%cx
		mov    %cx,_0e4254_data(%eax)
		mov    _097cf2_data(%esi),%cl
		mov    %cl,_0e425c_data(%eax)
		mov    _097cf4_data(%esi),%cl
		mov    %cl,_0e425d_data(%eax)
		mov    _097cf6_data(%esi),%cl
		imul   $0x00000a,%edi,%esi
		mov    %cl,_0e4258_data(%eax)
		xor    %ecx,%ecx
		mov    %cx,_0e425a_data(%eax)
		add    %ebp,%esi
		mov    %cx,_0e4268_data(%eax)
		mov    _097c78_data(%esi),%cl
		mov    %bx,_0e4256_data(%eax)
		test   %cl,%cl
		je     _0737a2_jump
		cmp    $0x000002,%cl
		jne    _0737d3_jump

	_0737a2_jump:
		xor    %esi,%esi
		movswl %bx,%eax
		mov    0x00000c(%esp),%si
		imul   %eax,%esi
		imul   $0x000140,%eax,%eax
		mov    0x000008(%esp),%edi
		add    %esi,%edi
		movswl %dx,%esi
		imul   $0x000018,%esi,%esi
		add    0x000020(%esp),%eax
		mov    %edi,_0e4260_data(%esi)
		mov    %eax,_0e4264_data(%esi)
		jmp    _0737ee_jump

	_0737d3_jump:
		mov    0x000008(%esp),%edi
		movswl %bx,%esi
		add    %esi,%edi
		mov    %edi,_0e4260_data(%eax)
		mov    0x000020(%esp),%edi
		add    %edi,%esi
		mov    %esi,_0e4264_data(%eax)

	_0737ee_jump:
		movswl %dx,%eax
		imul   $0x000018,%eax,%eax
		mov    _0e4254_data(%eax),%di
		inc    %edx
		add    %edi,%ebx

	_0737fe_jump:
		xor    %eax,%eax
		movswl %dx,%esi
		mov    _0e5e7a_data,%ax
		cmp    %eax,%esi
		jl     _073712_jump
		mov    _0cede2_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e5e7c_data,%ax
		mov    _0baf70_data(%edx,%eax,1),%al
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ax,_0e5e76_data
		jmp    _073894_jump

	_073842_jump:
		mov    _0cede2_data,%esi
		sar    $0x000010,%esi
		dec    %esi
		imul   $0x000640,%esi,%edi
		xor    %esi,%esi
		mov    _0e5e7c_data,%si
		imul   $0x0000a0,%esi,%esi
		add    %edi,%esi
		mov    _0bafac_data(%esi,%eax,8),%bx
		mov    %bx,_0e41b4_data(,%eax,8)
		mov    _0bafae_data(%esi,%eax,8),%bx
		mov    %bx,_0e41b6_data(,%eax,8)
		mov    _0bafb0_data(%esi,%eax,8),%bx
		inc    %edx
		mov    %bx,_0e41b8_data(,%eax,8)

	_073894_jump:
		xor    %esi,%esi
		movswl %dx,%eax
		mov    _0e5e76_data,%si
		cmp    %esi,%eax
		jl     _073842_jump

	_0738a4_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_0738b0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000064,%esp
		mov    %eax,0x000034(%esp)
		mov    %edx,0x000054(%esp)
		mov    %ebx,0x000060(%esp)
		mov    %ecx,0x000028(%esp)
		mov    _0cede2_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e5e7c_data,%ax
		add    %edx,%eax
		mov    _097c78_data(%eax),%dl
		test   %dl,%dl
		je     _0738f8_jump
		cmp    $0x000002,%dl
		jne    _073d9c_jump

	_0738f8_jump:
		mov    0x000074(%esp),%eax
		mov    0x000060(%esp),%ecx
		mov    0x000054(%esp),%ebx
		mov    _0cede4_data,%si
		sub    %ecx,%eax
		sub    $0x0000c8,%ebx
		mov    %ax,0x00003c(%esp)
		cmp    $0x000004,%si
		jne    _0739b3_jump
		mov    _0cedd0_data,%di
		cmp    %si,%di
		je     _073938_jump
		cmp    $0x00000b,%di
		jne    _0739b3_jump

	_073938_jump:
		mov    _0cee20_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _0739b3_jump
		xor    %edx,%edx
		mov    $0x0000c8,%esi
		mov    0x000078(%esp),%dx
		sub    %edx,%esi
		mov    0x00002c(%eax),%ecx
		mov    %esi,%edx
		sub    $0x00006e,%ecx
		xor    %esi,%edx
		sub    %esi,%ecx
		mov    0x000028(%esp),%dx
		cmp    %ecx,%edx
		jge    _07399f_jump
		mov    $0x0000c8,%edx
		mov    0x00002c(%eax),%ax
		mov    0x000078(%esp),%ecx
		sub    $0x00006e,%eax
		sub    %ecx,%edx
		sub    %edx,%eax
		mov    %eax,0x000028(%esp)
		test   %ax,%ax
		jge    _07399f_jump
		xor    %edi,%edi
		mov    %edi,0x000028(%esp)

	_07399f_jump:
		mov    0x000028(%esp),%eax
		mov    0x000078(%esp),%edx
		cmp    %dx,%ax
		jb     _0739b3_jump
		mov    %edx,%eax
		dec    %eax
		mov    %eax,0x000028(%esp)

	_0739b3_jump:
		mov    _0cede2_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e5e7c_data,%ax
		cmpb   $0x000000,_097c78_data(%edx,%eax,1)
		jne    _073a3e_jump
		cmpw   $0x000003,_0cede4_data
		jne    _073a13_jump
		cmpw   $0x00000a,_0cedd0_data
		jne    _073a13_jump
		mov    $0x0000c8,%ecx
		mov    _0cedf8_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000078(%esp),%dx
		sar    %eax
		sub    %edx,%ecx
		add    $0x00000b,%eax
		add    %ecx,%eax
		mov    %ax,0x000020(%esp)
		jmp    _073a52_jump

	_073a13_jump:
		mov    _0cedf8_data,%edx
		xor    %ecx,%ecx
		sar    $0x000010,%edx
		mov    _0e5e74_data,%cx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		xor    %edx,%edx
		mov    _0e5e78_data,%dx
		add    %edx,%eax
		mov    %ax,0x000020(%esp)
		jmp    _073a52_jump

	_073a3e_jump:
		mov    $0x0000c8,%eax
		mov    0x000078(%esp),%ecx
		mov    %ebx,%edx
		sub    %ecx,%eax
		add    %eax,%edx
		mov    %dx,0x000020(%esp)

	_073a52_jump:
		xor    %eax,%eax
		mov    $0x0000c8,%edx
		mov    0x000078(%esp),%ax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %bx,%edx
		add    %edx,%eax
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jle    _073a82_jump
		mov    $0x0000c8,%eax
		sub    0x000078(%esp),%eax
		add    %eax,%ebx
		mov    %bx,0x000020(%esp)

	_073a82_jump:
		xor    %ebx,%ebx
		mov    _0e5e7a_data,%cx
		mov    %ebx,0x000050(%esp)
		test   %cx,%cx
		jbe    _073c13_jump
		mov    0x000078(%esp),%eax
		mov    0x000028(%esp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x00002c(%esp)

	_073aa6_jump:
		xor    %eax,%eax
		mov    0x000050(%esp),%ax
		imul   $0x000018,%eax,%eax
		xor    %edx,%edx
		mov    0x000060(%esp),%dx
		movzwl _0e425a_data(%eax),%ebp
		mov    _0e4260_data(%eax),%ebx
		mov    _0e4264_data(%eax),%edi
		add    %ebx,%ebp
		add    %edx,%edi
		add    %edx,%ebp
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		mov    0x000020(%esp),%ecx
		mov    %edx,%ebx
		mov    _0e4254_data(%eax),%si
		shl    $0x000008,%ebx
		shl    $0x000006,%edx
		mov    _0e4256_data(%eax),%ax
		add    %ebx,%edx
		sub    %ecx,%eax
		sub    %edx,%edi
		mov    %eax,%edx
		add    %esi,%edx
		test   %ax,%ax
		jge    _073b2b_jump
		test   %dx,%dx
		jle    _073b2b_jump
		test   %si,%si
		je     _073b2b_jump
		cwtl   
		neg    %eax
		mov    %eax,%ecx
		mov    %eax,%ebx
		shl    $0x000008,%ecx
		shl    $0x000006,%ebx
		add    %ecx,%ebx
		add    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x000034(%esp),%bx
		imul   %ebx,%eax
		mov    %edx,%esi
		add    %eax,%ebp
		xor    %eax,%eax

	_073b2b_jump:
		movswl %dx,%ebx
		mov    %ebx,0x00000c(%esp)
		xor    %ebx,%ebx
		mov    0x00000c(%esp),%ecx
		mov    0x000028(%esp),%bx
		cmp    %ecx,%ebx
		jge    _073bfa_jump
		movswl %ax,%ecx
		mov    %ecx,0x000008(%esp)
		xor    %ecx,%ecx
		mov    0x000078(%esp),%cx
		mov    %ecx,(%esp)
		mov    0x000008(%esp),%ecx
		cmp    (%esp),%ecx
		jge    _073bfa_jump
		cmp    %ecx,%ebx
		jle    _073b94_jump
		mov    0x00000c(%esp),%ecx
		cmp    (%esp),%ecx
		jle    _073b94_jump
		xor    %eax,%eax
		mov    0x000008(%esp),%esi
		mov    0x000034(%esp),%ax
		sub    %esi,%ebx
		imul   %ebx,%eax
		add    %eax,%ebp
		mov    %ebx,%eax
		shl    $0x000008,%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		mov    0x00002c(%esp),%esi
		add    %eax,%edi
		jmp    _073bda_jump

	_073b94_jump:
		xor    %ecx,%ecx
		mov    0x000028(%esp),%cx
		movswl %ax,%ebx
		cmp    %ecx,%ebx
		jge    _073bc8_jump
		mov    %ecx,%edx
		sub    %ebx,%edx
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    0x000034(%esp),%dx
		imul   %ebx,%edx
		add    %edx,%ebp
		mov    %ebx,%edx
		shl    $0x000008,%edx
		shl    $0x000006,%ebx
		add    %edx,%ebx
		mov    %ecx,%edx
		sub    %eax,%edx
		add    %ebx,%edi
		sub    %edx,%esi
		jmp    _073bda_jump

	_073bc8_jump:
		movswl %dx,%ebx
		xor    %edx,%edx
		mov    0x000078(%esp),%dx
		cmp    %edx,%ebx
		jle    _073bda_jump
		mov    %edx,%esi
		sub    %eax,%esi

	_073bda_jump:
		mov    0x00003a(%esp),%ecx
		mov    _0cc63c_data,%eax
		xor    %edx,%edx
		movswl %si,%ebx
		mov    0x000034(%esp),%dx
		mov    %ebp,%esi
		sar    $0x000010,%ecx
		sub    %eax,%esi
		call   *_0cc624_data

	_073bfa_jump:
		mov    0x000050(%esp),%ebx
		inc    %ebx
		mov    _0e5e7a_data,%cx
		mov    %ebx,0x000050(%esp)
		cmp    %cx,%bx
		jb     _073aa6_jump

	_073c13_jump:
		mov    0x000034(%esp),%esi
		mov    $0x000001,%eax
		mov    _0e5e76_data,%dx
		xor    %edi,%edi
		shr    %si
		mov    %edi,0x000024(%esp)
		mov    %eax,0x000048(%esp)
		mov    %esi,0x000034(%esp)
		test   %dx,%dx
		jbe    _0741ac_jump

	_073c3d_jump:
		xor    %eax,%eax
		mov    0x000024(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0e41b8_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		cmpw   $0x000000,_0e4254_data(%edx)
		je     _073d75_jump
		xor    %ebx,%ebx
		mov    0x000048(%esp),%bx
		imul   $0x00000c,%ebx,%ebp
		mov    _0e41b4_data(%eax),%ax
		mov    _0e425a_data(%edx),%cx
		mov    _0ce298_data,%ebx
		sub    %ecx,%eax
		mov    (%ebx),%ebx
		mov    %ax,0x000040(%esp)
		add    %ebx,%ebp
		cmp    $0x000140,%ax
		jle    _073c99_jump
		mov    0x000034(%esp),%eax
		sub    %ax,0x000040(%esp)

	_073c99_jump:
		mov    0x00003e(%esp),%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000005(%ebp),%dl
		mov    0x000060(%esp),%bx
		add    %eax,%edx
		cmp    %ebx,%edx
		jle    _073d06_jump
		xor    %edx,%edx
		mov    0x000024(%esp),%dx
		mov    0x000020(%esp),%ecx
		mov    _0e41b6_data(,%edx,8),%bx
		sub    %ecx,%ebx
		movswl %bx,%ebx
		mov    %ebx,0x000004(%esp)
		xor    %bh,%bh
		mov    0x000006(%ebp),%bl
		mov    %ebx,%ecx
		mov    _0cccb4_data,%edi
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%bl
		mov    _0ce298_data,%esi
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    0x000008(%esi),%esi
		mov    %bx,%cx
		mov    0x000000(%ebp),%ebx
		mov    _0c1a4c_data(,%edx,4),%edx
		add    %ebx,%esi
		mov    0x000004(%esp),%ebx
		call   _016d61_func

	_073d06_jump:
		mov    0x000034(%esp),%eax
		add    %ax,0x000040(%esp)
		xor    %edx,%edx
		mov    0x00003e(%esp),%eax
		mov    0x000074(%esp),%dx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _073d75_jump
		xor    %edx,%edx
		mov    0x000024(%esp),%dx
		mov    0x000020(%esp),%edi
		mov    _0e41b6_data(,%edx,8),%bx
		sub    %edi,%ebx
		movswl %bx,%ebx
		mov    _0ce298_data,%esi
		mov    %ebx,0x000004(%esp)
		xor    %bh,%bh
		xor    %ch,%ch
		mov    0x000006(%ebp),%bl
		mov    0x000005(%ebp),%cl
		shl    $0x000008,%ebx
		mov    0x000008(%esi),%esi
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    _0c1a4c_data(,%edx,4),%edx
		mov    %bx,%cx
		mov    0x000000(%ebp),%ebx
		mov    _0cccb4_data,%edi
		add    %ebx,%esi
		mov    0x000004(%esp),%ebx
		call   _016d61_func

	_073d75_jump:
		mov    0x000024(%esp),%esi
		mov    0x000048(%esp),%edi
		mov    _0e5e76_data,%dx
		inc    %esi
		inc    %edi
		mov    %esi,0x000024(%esp)
		mov    %edi,0x000048(%esp)
		cmp    %dx,%si
		jae    _0741ac_jump
		jmp    _073c3d_jump

	_073d9c_jump:
		xor    %edx,%edx
		mov    _0e5e7a_data,%bx
		mov    %edx,0x000018(%esp)
		test   %bx,%bx
		jbe    _07403a_jump
		mov    0x000078(%esp),%eax
		sub    %ecx,%eax
		mov    0x000060(%esp),%esi
		mov    %eax,0x000058(%esp)
		mov    0x000074(%esp),%eax
		sub    %esi,%eax
		mov    %eax,0x000014(%esp)

	_073dca_jump:
		xor    %edi,%edi
		mov    0x000018(%esp),%di
		imul   $0x000018,%edi,%edi
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000034(%esp),%ax
		mov    _0e425a_data(%edi),%dx
		imul   %eax,%edx
		mov    _0e4260_data(%edi),%esi
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x000028(%esp),%dx
		imul   %edx,%eax
		add    %eax,%esi
		imul   $0x000140,%edx,%eax
		mov    _0e4264_data(%edi),%ebx
		mov    _0e4254_data(%edi),%dx
		add    %ebx,%eax
		mov    %dx,0x000030(%esp)
		mov    _0e425a_data(%edi),%bx
		mov    0x000054(%esp),%edx
		mov    0x000028(%esp),%ecx
		sub    %ebx,%edx
		sub    %ecx,%edx
		xor    %ebx,%ebx
		mov    %dx,0x000038(%esp)
		mov    _0e4256_data(%edi),%dx
		mov    0x000030(%esp),%edi
		mov    %dx,0x00005c(%esp)
		add    %edi,%edx
		mov    0x000060(%esp),%bx
		movswl %dx,%ebp
		cmp    %ebx,%ebp
		jle    _074021_jump
		xor    %ecx,%ecx
		mov    0x00005a(%esp),%edi
		mov    0x000074(%esp),%cx
		sar    $0x000010,%edi
		mov    %ecx,0x000010(%esp)
		cmp    %ecx,%edi
		jge    _074021_jump
		cmpw   $0x000000,0x000030(%esp)
		je     _074021_jump
		cmp    %ebx,%edi
		jge    _073e92_jump
		cmp    0x000010(%esp),%ebp
		jle    _073e92_jump
		mov    0x000014(%esp),%edx
		sub    %edi,%ebx
		mov    %dx,0x000030(%esp)
		add    %ebx,%esi
		add    %ebx,%eax
		jmp    _073ed6_jump

	_073e92_jump:
		xor    %ecx,%ecx
		mov    0x00005a(%esp),%ebx
		mov    0x000060(%esp),%cx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jge    _073ec1_jump
		mov    %ecx,%edx
		sub    %ebx,%edx
		add    %edx,%esi
		add    %edx,%eax
		mov    %ecx,%edx
		mov    0x00005c(%esp),%ecx
		mov    0x000030(%esp),%edi
		sub    %ecx,%edx
		sub    %edx,%edi
		mov    %di,0x000030(%esp)
		jmp    _073ed6_jump

	_073ec1_jump:
		xor    %ebx,%ebx
		movswl %dx,%ecx
		mov    0x000074(%esp),%bx
		cmp    %ebx,%ecx
		jle    _073ed6_jump
		sub    %ebx,%edx
		sub    %dx,0x000030(%esp)

	_073ed6_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000078(%esp),%dx
		mov    0x000028(%esp),%bx
		sub    %ebx,%edx
		mov    0x000036(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    %edx,%ebx
		jle    _073efa_jump
		mov    0x000058(%esp),%edx
		mov    %dx,0x000038(%esp)

	_073efa_jump:
		cmpw   $0x000000,0x000038(%esp)
		jle    _073f6a_jump
		mov    0x00002e(%esp),%ecx
		mov    0x000036(%esp),%ebx
		xor    %edx,%edx
		mov    _0cc63c_data,%edi
		mov    0x000034(%esp),%dx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		add    %eax,%edi
		call   *_0cc624_data
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		imul   $0x000018,%eax,%eax
		mov    0x000036(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000140,%edx,%edx
		mov    _0e4260_data(%eax),%esi
		mov    _0e4264_data(%eax),%edi
		xor    %eax,%eax
		mov    0x000028(%esp),%ax
		imul   $0x000140,%eax,%eax
		add    %edi,%edx
		mov    0x000038(%esp),%ebx
		add    %edx,%eax
		mov    0x000058(%esp),%edx
		sub    %ebx,%edx
		mov    %dx,0x000038(%esp)
		jmp    _073fba_jump

	_073f6a_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		imul   $0x000018,%eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000054(%esp),%bx
		mov    _0e425a_data(%eax),%dx
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    0x000028(%esp),%dx
		mov    %edx,%ecx
		imul   $0x000140,%edx,%edx
		sub    %ebx,%ecx
		xor    %ebx,%ebx
		mov    0x000034(%esp),%bx
		imul   %ecx,%ebx
		mov    _0e4260_data(%eax),%esi
		mov    _0e4264_data(%eax),%eax
		add    %edx,%eax
		mov    0x000058(%esp),%edx
		mov    %dx,0x000038(%esp)
		add    %ebx,%esi

	_073fba_jump:
		xor    %ebx,%ebx
		mov    0x00005a(%esp),%edx
		mov    0x000060(%esp),%bx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jge    _073fd2_jump
		sub    %edx,%ebx
		add    %ebx,%esi
		add    %ebx,%eax

	_073fd2_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000078(%esp),%bx
		mov    0x000028(%esp),%dx
		sub    %edx,%ebx
		mov    0x000036(%esp),%edx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jle    _073ff6_jump
		mov    0x000058(%esp),%edx
		mov    %dx,0x000038(%esp)

	_073ff6_jump:
		cmpw   $0x000000,0x000038(%esp)
		jle    _074021_jump
		mov    0x00002e(%esp),%ecx
		mov    0x000036(%esp),%ebx
		xor    %edx,%edx
		mov    _0cc63c_data,%edi
		mov    0x000034(%esp),%dx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		add    %eax,%edi
		call   *_0cc624_data

	_074021_jump:
		mov    0x000018(%esp),%esi
		inc    %esi
		mov    _0e5e7a_data,%di
		mov    %esi,0x000018(%esp)
		cmp    %di,%si
		jb     _073dca_jump

	_07403a_jump:
		mov    $0x000001,%edx
		xor    %eax,%eax
		mov    _0e5e76_data,%bx
		mov    %eax,0x00001c(%esp)
		mov    %edx,0x00004c(%esp)
		test   %bx,%bx
		jbe    _0741ac_jump

	_074059_jump:
		xor    %eax,%eax
		mov    0x00001c(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0e41b8_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		cmpw   $0x000000,_0e4254_data(%edx)
		je     _07418a_jump
		xor    %ebx,%ebx
		mov    0x00004c(%esp),%bx
		imul   $0x00000c,%ebx,%ebp
		mov    _0e41b6_data(%eax),%ax
		mov    _0e425a_data(%edx),%cx
		mov    _0ce298_data,%ebx
		sub    %ecx,%eax
		mov    (%ebx),%ebx
		mov    %ax,0x000044(%esp)
		add    %ebx,%ebp
		cmp    $0x0000c8,%ax
		jle    _0740b5_jump
		mov    0x000054(%esp),%eax
		sub    %ax,0x000044(%esp)

	_0740b5_jump:
		mov    0x000042(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000006(%ebp),%al
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    0x000028(%esp),%ax
		cmp    %eax,%edx
		jle    _07411c_jump
		xor    %eax,%eax
		mov    0x00001c(%esp),%ax
		mov    _0e41b2_data(,%eax,8),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000004(%esp)
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0ce298_data,%edx
		mov    0x000008(%edx),%esi
		mov    0x000000(%ebp),%edx
		mov    _0cccb4_data,%edi
		add    %edx,%esi
		mov    _0c1a4c_data(,%eax,4),%edx
		mov    0x000004(%esp),%eax
		call   _016d61_func

	_07411c_jump:
		mov    0x000054(%esp),%eax
		add    %ax,0x000044(%esp)
		xor    %eax,%eax
		mov    0x000042(%esp),%ebx
		mov    0x000078(%esp),%ax
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jge    _07418a_jump
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%esi
		shl    $0x000008,%esi
		mov    0x000005(%ebp),%dl
		xor    %eax,%eax
		add    %esi,%edx
		xor    %esi,%esi
		mov    0x00001c(%esp),%ax
		mov    %dx,%si
		mov    _0cccb4_data,%edx
		mov    _0e41b2_data(,%eax,8),%ecx
		mov    %edx,0x000004(%esp)
		mov    _0ce298_data,%edx
		sar    $0x000010,%ecx
		mov    0x000000(%ebp),%ebp
		mov    0x000008(%edx),%edx
		mov    0x000004(%esp),%edi
		add    %edx,%ebp
		mov    _0c1a4c_data(,%eax,4),%edx
		mov    %ecx,%eax
		mov    %esi,%ecx
		mov    %ebp,%esi
		call   _016d61_func

	_07418a_jump:
		mov    0x00001c(%esp),%esi
		mov    0x00004c(%esp),%edi
		mov    _0e5e76_data,%dx
		inc    %esi
		inc    %edi
		mov    %esi,0x00001c(%esp)
		mov    %edi,0x00004c(%esp)
		cmp    %dx,%si
		jb     _074059_jump

	_0741ac_jump:
		add    $0x000064,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_0741b8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000028(%esp)
		mov    %ebx,0x000008(%esp)
		mov    %ecx,0x000018(%esp)
		mov    _0cede2_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e5e7c_data,%ax
		add    %edx,%eax
		mov    _097c78_data(%eax),%dl
		test   %dl,%dl
		je     _074200_jump
		cmp    $0x000002,%dl
		jne    _074387_jump

	_074200_jump:
		mov    0x000004(%esp),%esi
		mov    _0cedda_data,%dx
		mov    _0cedfa_data,%ax
		xor    %edi,%edi
		shr    %si
		add    %edx,%edx
		add    %eax,%eax
		mov    %edi,0x000024(%esp)
		sub    %eax,%edx
		mov    %esi,0x000004(%esp)
		add    $0x0000c8,%edx
		mov    $0x000001,%eax
		mov    %edx,0x00002c(%esp)
		mov    _0e5e76_data,%dx
		mov    %eax,0x000010(%esp)
		test   %dx,%dx
		jbe    _0744ef_jump

	_074247_jump:
		xor    %eax,%eax
		mov    0x000024(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0e41b8_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		cmpw   $0x000000,_0e4254_data(%edx)
		jne    _074360_jump
		movzwl 0x000010(%esp),%ebp
		imul   $0x00000c,%ebp,%ebp
		mov    _0e41b4_data(%eax),%ax
		mov    _0e425a_data(%edx),%cx
		mov    _0ce298_data,%ebx
		sub    %ecx,%eax
		mov    (%ebx),%ebx
		mov    %ax,0x000020(%esp)
		add    %ebx,%ebp
		cmp    $0x000140,%ax
		jle    _0742a1_jump
		mov    0x000004(%esp),%eax
		sub    %ax,0x000020(%esp)

	_0742a1_jump:
		mov    0x00001e(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000005(%ebp),%dl
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    0x000008(%esp),%dx
		cmp    %edx,%ebx
		jle    _074301_jump
		xor    %edx,%edx
		mov    0x00002c(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		xor    %dh,%dh
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0ce298_data,%edx
		mov    0x000008(%edx),%esi
		add    0x000000(%ebp),%esi
		xor    %edx,%edx
		mov    0x000024(%esp),%dx
		mov    _0cccb4_data,%edi
		shl    $0x000002,%edx
		movswl %bx,%ebx
		mov    _0c1a4c_data(%edx),%edx
		call   _016d61_func

	_074301_jump:
		mov    0x000004(%esp),%eax
		add    %ax,0x000020(%esp)
		xor    %edx,%edx
		mov    0x00001e(%esp),%eax
		mov    0x000040(%esp),%dx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _074360_jump
		xor    %edx,%edx
		mov    0x00002c(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		xor    %dh,%dh
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		mov    _0ce298_data,%esi
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000008(%esi),%esi
		mov    %dx,%cx
		add    0x000000(%ebp),%esi
		xor    %edx,%edx
		mov    _0cccb4_data,%edi
		mov    0x000024(%esp),%dx
		movswl %bx,%ebx
		mov    _0c1a4c_data(,%edx,4),%edx
		call   _016d61_func

	_074360_jump:
		mov    0x000024(%esp),%edi
		mov    0x000010(%esp),%eax
		mov    _0e5e76_data,%dx
		inc    %edi
		inc    %eax
		mov    %edi,0x000024(%esp)
		mov    %eax,0x000010(%esp)
		cmp    %dx,%di
		jae    _0744ef_jump
		jmp    _074247_jump

	_074387_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    _0e5e76_data,%cx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x00000c(%esp)
		test   %cx,%cx
		jbe    _0744ef_jump

	_0743a6_jump:
		xor    %eax,%eax
		mov    0x000014(%esp),%ax
		shl    $0x000003,%eax
		xor    %ebx,%ebx
		mov    _0e41b8_data(%eax),%bx
		imul   $0x000018,%ebx,%ebx
		cmpw   $0x000000,_0e4254_data(%ebx)
		jne    _0744cd_jump
		xor    %edx,%edx
		mov    0x00000c(%esp),%dx
		imul   $0x00000c,%edx,%ebp
		mov    _0ce298_data,%edx
		mov    (%edx),%edx
		mov    _0e41b6_data(%eax),%ax
		add    %edx,%ebp
		mov    _0e425a_data(%ebx),%dx
		sub    %edx,%eax
		mov    %ax,0x00001c(%esp)
		cmp    $0x0000c8,%ax
		jle    _074402_jump
		mov    0x000028(%esp),%eax
		sub    %ax,0x00001c(%esp)

	_074402_jump:
		mov    0x00001a(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000006(%ebp),%al
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		cmp    %eax,%edx
		jle    _074467_jump
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		mov    _0cccb4_data,%edi
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		xor    %eax,%eax
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000014(%esp),%ax
		mov    %dx,%cx
		mov    _0ce298_data,%edx
		mov    0x000000(%ebp),%esi
		mov    %eax,(%esp)
		mov    0x000008(%edx),%edx
		mov    _0e41b2_data(,%eax,8),%eax
		add    %edx,%esi
		mov    (%esp),%edx
		sar    $0x000010,%eax
		mov    _0c1a4c_data(,%edx,4),%edx
		call   _016d61_func

	_074467_jump:
		mov    0x000028(%esp),%eax
		add    %ax,0x00001c(%esp)
		xor    %eax,%eax
		mov    0x00001a(%esp),%ebx
		mov    0x000044(%esp),%ax
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jge    _0744cd_jump
		xor    %eax,%eax
		mov    0x000014(%esp),%ax
		mov    _0e41b2_data(,%eax,8),%edx
		sar    $0x000010,%edx
		mov    %edx,(%esp)
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		mov    _0ce298_data,%esi
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000008(%esi),%esi
		mov    %dx,%cx
		mov    0x000000(%ebp),%edx
		mov    _0cccb4_data,%edi
		add    %edx,%esi
		mov    _0c1a4c_data(,%eax,4),%edx
		mov    (%esp),%eax
		call   _016d61_func

	_0744cd_jump:
		mov    0x000014(%esp),%ebx
		mov    0x00000c(%esp),%ecx
		mov    _0e5e76_data,%si
		inc    %ebx
		inc    %ecx
		mov    %ebx,0x000014(%esp)
		mov    %ecx,0x00000c(%esp)
		cmp    %si,%bx
		jb     _0743a6_jump

	_0744ef_jump:
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_0744f8_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %ax,0x00000c(%esp)
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    _0cede2_data,%eax
		sar    $0x000010,%eax
		dec    %eax
		lea    0x000000(,%eax,4),%edx
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e5e7c_data,%ax
		add    %edx,%eax
		mov    _097c78_data(%eax),%dl
		test   %dl,%dl
		jne    _074737_jump
		mov    _0e5e7a_data,%bx
		shr    %si
		xor    %ecx,%ecx
		test   %bx,%bx
		jbe    _074704_jump
		mov    %esi,%eax
		shl    $0x000004,%eax
		mov    %eax,0x000008(%esp)

	_074552_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		cmpw   $0x000000,_0e4254_data(%ebx)
		jne    _07457c_jump
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		add    %edx,%edx
		movzwl %si,%ebp
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		jmp    _0746ed_jump

	_07457c_jump:
		mov    _0e4258_data(%ebx),%dh
		test   %dh,%dh
		jne    _0745b9_jump
		xor    %eax,%eax
		mov    %si,%ax
		movzbl _0e425c_data(%ebx),%ebp
		mov    %eax,%edx
		imul   %ebp,%edx
		mov    %eax,(%esp)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		mov    (%esp),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		jmp    _0746ed_jump

	_0745b9_jump:
		cmp    $0x000001,%dh
		je     _0745c3_jump
		cmp    $0x000004,%dh
		jne    _07462f_jump

	_0745c3_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %edx,%edx
		mov    _0e4268_data(%ebx),%dx
		movzbl _0e425d_data(%ebx),%ebp
		add    %ebp,%edx
		movzwl %si,%ebp
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    _0e4258_data(%ebx),%ah
		mov    %dx,_0e4268_data(%ebx)
		cmp    $0x000001,%ah
		jne    _074613_jump
		xor    %edx,%edx
		mov    _0e4268_data(%ebx),%dx
		sar    $0x000004,%edx
		jmp    _0746ed_jump

	_074613_jump:
		xor    %eax,%eax
		mov    _0e425c_data(%ebx),%al
		mov    %eax,%edx
		imul   %ebp,%edx
		mov    %eax,(%esp)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		jmp    _0746a9_jump

	_07462f_jump:
		cmp    $0x000002,%dh
		je     _07463d_jump
		cmp    $0x000005,%dh
		jne    _0746f4_jump

	_07463d_jump:
		xor    %edx,%edx
		mov    %cx,%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		mov    _0e425d_data(%edx),%bl
		movzwl _0e4268_data(%edx),%ebp
		cmp    %ebp,%ebx
		jle    _074663_jump
		mov    0x000008(%esp),%eax
		add    %ax,_0e4268_data(%edx)

	_074663_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %dh,%dh
		mov    _0e425d_data(%ebx),%dl
		sub    %dx,_0e4268_data(%ebx)
		cmpb   $0x000002,_0e4258_data(%ebx)
		jne    _074691_jump
		xor    %edx,%edx
		mov    _0e4268_data(%ebx),%dx
		sar    $0x000004,%edx
		jmp    _0746ed_jump

	_074691_jump:
		xor    %eax,%eax
		mov    _0e425c_data(%ebx),%al
		movzwl %si,%ebp
		mov    %eax,(%esp)
		imul   %ebp,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx

	_0746a9_jump:
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %dx,_0e425a_data(%ebx)
		xor    %edx,%edx
		mov    _0e4268_data(%ebx),%dx
		mov    %edx,%ebp
		xor    %edx,%edx
		sar    $0x000004,%ebp
		mov    _0e425a_data(%ebx),%dx
		add    %ebp,%edx
		mov    %dx,_0e425a_data(%ebx)
		mov    _0e425a_data(%ebx),%ax
		xor    %edx,%edx
		div    %si

	_0746ed_jump:
		mov    %dx,_0e425a_data(%ebx)

	_0746f4_jump:
		mov    _0e5e7a_data,%ax
		inc    %ecx
		cmp    %ax,%cx
		jb     _074552_jump

	_074704_jump:
		cmpw   $0x000005,_0cede4_data
		jne    _07491b_jump
		cmpw   $0x00000a,_0cedd0_data
		jne    _07491b_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %di,%dx
		mov    %si,%ax
		call   _0749b8_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_074737_jump:
		cmp    $0x000001,%dl
		jne    _07491b_jump
		mov    _0e5e7a_data,%dx
		xor    %ecx,%ecx
		test   %dx,%dx
		jbe    _07491b_jump
		mov    %ebx,%eax
		shl    $0x000004,%eax
		mov    %eax,0x000004(%esp)

	_07475b_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		cmpw   $0x000000,_0e4254_data(%ebx)
		jne    _074789_jump
		mov    _0cedf8_data,%edx
		sar    $0x000010,%edx
		xor    %esi,%esi
		add    %edx,%edx
		mov    %di,%si
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		jmp    _074903_jump

	_074789_jump:
		mov    _0e4258_data(%ebx),%al
		test   %al,%al
		jne    _0747c1_jump
		xor    %esi,%esi
		mov    %di,%si
		movzbl _0e425c_data(%ebx),%ebp
		mov    %esi,%edx
		imul   %ebp,%edx
		mov    _0cedf8_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		jmp    _074903_jump

	_0747c1_jump:
		cmp    $0x000001,%al
		je     _0747c9_jump
		cmp    $0x000004,%al
		jne    _07483f_jump

	_0747c9_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %edx,%edx
		mov    _0e4268_data(%ebx),%dx
		movzbl _0e425d_data(%ebx),%esi
		add    %esi,%edx
		xor    %esi,%esi
		mov    %di,%si
		mov    %edx,%eax
		mov    %esi,%ebp
		sar    $0x00001f,%edx
		shl    $0x000004,%ebp
		idiv   %ebp
		mov    %dx,_0e4268_data(%ebx)
		cmpb   $0x000001,_0e4258_data(%ebx)
		jne    _074815_jump
		xor    %edx,%edx
		mov    _0e4268_data(%ebx),%dx
		sar    $0x000004,%edx
		jmp    _074903_jump

	_074815_jump:
		mov    %esi,%eax
		movzbl _0e425c_data(%ebx),%ebp
		imul   %ebp,%eax
		mov    _0cedf8_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		jmp    _0748d0_jump

	_07483f_jump:
		cmp    $0x000002,%al
		je     _07484b_jump
		cmp    $0x000005,%al
		jne    _07490a_jump

	_07484b_jump:
		xor    %edx,%edx
		mov    %cx,%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		movzbl _0e425d_data(%edx),%esi
		mov    _0e4268_data(%edx),%bx
		cmp    %ebx,%esi
		jle    _074874_jump
		mov    0x000004(%esp),%eax
		add    %eax,%ebx
		mov    %bx,_0e4268_data(%edx)

	_074874_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %dh,%dh
		mov    _0e425d_data(%ebx),%dl
		mov    _0e4268_data(%ebx),%si
		sub    %edx,%esi
		mov    _0e4258_data(%ebx),%ah
		mov    %si,_0e4268_data(%ebx)
		cmp    $0x000002,%ah
		jne    _0748a9_jump
		xor    %edx,%edx
		mov    %si,%dx
		sar    $0x000004,%edx
		jmp    _074903_jump

	_0748a9_jump:
		movzwl %di,%ebp
		movzbl _0e425c_data(%ebx),%esi
		mov    %ebp,%edx
		imul   %esi,%edx
		mov    _0cedf8_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp

	_0748d0_jump:
		mov    %dx,_0e425a_data(%ebx)
		xor    %edx,%edx
		mov    _0e4268_data(%ebx),%dx
		mov    %edx,%esi
		xor    %edx,%edx
		sar    $0x000004,%esi
		mov    _0e425a_data(%ebx),%dx
		add    %esi,%edx
		mov    %dx,_0e425a_data(%ebx)
		mov    _0e425a_data(%ebx),%ax
		xor    %edx,%edx
		div    %di

	_074903_jump:
		mov    %dx,_0e425a_data(%ebx)

	_07490a_jump:
		mov    _0e5e7a_data,%si
		inc    %ecx
		cmp    %si,%cx
		jb     _07475b_jump

	_07491b_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_074924_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %ebx,(%esp)
		mov    %ecx,%edi
		mov    (%esp),%ebp
		mov    %dx,_0e5e7a_data
		xor    %ebx,%ebx
		jmp    _074996_jump

	_07493f_jump:
		imul   $0x000018,%edx,%eax
		movw   $0x000001,_0e4254_data(%eax)
		movb   $0x000002,_0e425c_data(%eax)
		xor    %ch,%ch
		mov    %ch,_0e425d_data(%eax)
		xor    %cl,%cl
		mov    %ch,_0e4258_data(%eax)
		mov    %cx,_0e425a_data(%eax)
		mov    %cx,_0e4268_data(%eax)
		xor    %ecx,%ecx
		mov    %si,%cx
		imul   %edx,%ecx
		imul   $0x000140,%edx,%edx
		mov    %bx,_0e4256_data(%eax)
		add    %ebp,%ecx
		mov    %ecx,_0e4260_data(%eax)
		add    %edi,%edx
		inc    %ebx
		mov    %edx,_0e4264_data(%eax)

	_074996_jump:
		xor    %eax,%eax
		movswl %bx,%edx
		mov    _0e5e7a_data,%ax
		cmp    %eax,%edx
		jl     _07493f_jump
		xor    %esi,%esi
		mov    %si,_0e5e76_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0749b8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,(%esp)
		mov    %edx,0x000004(%esp)
		mov    %edx,%eax
		mov    _0cedf8_data,%edx
		sar    $0x000010,%edx
		sub    $0x0000c9,%eax
		sar    $0x000002,%edx
		cmp    %ax,%dx
		jle    _0749e1_jump
		mov    %eax,%edx

	_0749e1_jump:
		call   _076048_func
		sub    _0cedfa_data,%ax
		add    %edx,%eax
		sub    $0x000014,%eax
		mov    %ax,0x000008(%esp)
		cmpb   $0x000000,_0cefb6_data
		jne    _074a06_jump
		incb   _0bd53c_data

	_074a06_jump:
		cmpb   $0x000010,_0bd53c_data
		jne    _074a17_jump
		xor    %bl,%bl
		mov    %bl,_0bd53c_data

	_074a17_jump:
		mov    0x000008(%esp),%ecx
		mov    _0bd53c_data,%al
		mov    $0x00005a,%ebx
		mov    %al,0x00000c(%esp)
		jmp    _074a98_jump

	_074a2b_jump:
		dec    %ebx
		cmp    $0x000010,%bx
		jge    _074a37_jump
		mov    $0x000010,%ebx

	_074a37_jump:
		test   %cx,%cx
		jle    _074a83_jump
		xor    %edx,%edx
		mov    0x00000c(%esp),%dl
		mov    _0bd52c_data(%edx),%dl
		and    $0x0000ff,%edx
		shl    $0x000004,%edx
		movswl %bx,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %cx,%edi
		imul   $0x000018,%edi,%edi
		xor    %esi,%esi
		xor    %edx,%edx
		mov    (%esp),%si
		mov    _0e425a_data(%edi),%dx
		cwtl   
		add    %esi,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %dx,_0e425a_data(%edi)

	_074a83_jump:
		mov    0x00000c(%esp),%al
		inc    %al
		mov    %al,0x00000c(%esp)
		cmp    $0x000010,%al
		jne    _074a97_jump
		xor    %dl,%dl
		mov    %dl,0x00000c(%esp)

	_074a97_jump:
		inc    %ecx

	_074a98_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		movswl %cx,%eax
		add    $0x00005a,%edx
		cmp    %edx,%eax
		jge    _074ab8_jump
		xor    %edx,%edx
		mov    0x000004(%esp),%dx
		cmp    %edx,%eax
		jl     _074a2b_jump

	_074ab8_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_074ac0_func:
		push   %ebx
		push   %ecx
		mov    _0cc310_data(%edx),%bl
		mov    _0cc310_data(%eax),%cl
		mov    %bl,_0cc310_data(%eax)
		mov    %cl,_0cc310_data(%edx)
		pop    %ecx
		pop    %ebx
		ret    



_074ae0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000001,%edx
		mov    _0cc302_data,%esi
		xor    %ebx,%ebx
		xor    %ah,%ah
		mov    %dx,_0cee4c_data
		mov    %ah,_0cefea_data
		sar    $0x000010,%esi
		mov    _0cc300_data,%eax
		xor    %edx,%edx
		test   %esi,%esi
		jle    _074b5d_jump

	_074b0f_jump:
		mov    0x000060(%eax),%cx
		cmp    $0x0000bc,%cx
		jne    _074b26_jump
		inc    %ebx
		mov    0x000034(%eax),%cl
		mov    %cl,_0cc30f_data(%ebx)
		jmp    _074b53_jump

	_074b26_jump:
		cmp    $0x0000f8,%cx
		jne    _074b36_jump
		mov    %dx,_0cee3a_data
		jmp    _074b53_jump

	_074b36_jump:
		cmp    $0x0000ea,%cx
		jne    _074b53_jump
		xor    %ecx,%ecx
		mov    _0cefea_data,%cl
		mov    %dl,_0ce438_data(%ecx)
		inc    %cl
		mov    %cl,_0cefea_data

	_074b53_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %esi,%edx
		jl     _074b0f_jump

	_074b5d_jump:
		mov    $0x000001,%edi

	_074b62_jump:
		xor    %esi,%esi
		xor    %ebx,%ebx

	_074b66_jump:
		xor    %eax,%eax
		mov    _0cc311_data(%ebx),%al
		imul   $0x000084,%eax,%edx
		xor    %ecx,%ecx
		mov    _0cc310_data(%ebx),%cl
		imul   $0x000084,%ecx,%ecx
		mov    _0cc300_data,%eax
		add    %eax,%edx
		mov    0x000028(%ecx,%eax,1),%eax
		cmp    0x000028(%edx),%eax
		jle    _074b9e_jump
		lea    0x000001(%ebx),%edx
		mov    %ebx,%eax
		mov    %edi,%esi
		call   _074ac0_func

	_074b9e_jump:
		inc    %ebx
		cmp    $0x000007,%ebx
		jl     _074b66_jump
		test   %esi,%esi
		jne    _074b62_jump
		cmpb   $0x000000,_0cef89_data
		jne    _074bba_jump
		cmpb   $0x000000,_0ca424_data
		je     _074bc3_jump

	_074bba_jump:
		movb   $0x000008,_0cefe3_data
		jmp    _074be5_jump

	_074bc3_jump:
		mov    $0x0000b1,%eax
		call   _069140_func
		movswl %ax,%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		shl    $0x000003,%edx
		mov    %dl,_0cefe3_data

	_074be5_jump:
		xor    %eax,%eax
		mov    _0cefe3_data,%al
		mov    _09220c_data(%eax),%al
		and    $0x0000ff,%eax
		mov    _0cc310_data(%eax),%al
		mov    $0x000020,%esi
		mov    $0x000138,%edi
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ax,_0ced5c_data
		mov    %ah,_0cefe0_data
		mov    %si,_0cdb9a_data
		mov    %di,_0cedc6_data
		mov    %di,_0cedda_data
		mov    %edx,_0e5e80_data
		xor    %eax,%eax
		jmp    _074c90_jump

	_074c36_jump:
		xor    %edx,%edx
		mov    _0ce438_data(%eax),%dl
		imul   $0x000084,%edx,%ebx
		mov    _0cdb9a_data,%cx
		shl    $0x000004,%ecx
		mov    _0cc300_data,%edx
		sub    $0x00003c,%ecx
		mov    %cx,0x00003e(%edx,%ebx,1)
		xor    %ebx,%ebx
		mov    _0ce438_data(%eax),%bl
		imul   $0x000084,%ebx,%ebx
		mov    0x00003c(%edx,%ebx,1),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,0x00002c(%edx,%ebx,1)
		xor    %ebx,%ebx
		mov    _0ce438_data(%eax),%bl
		imul   $0x000084,%ebx,%ebx
		mov    0x00003e(%edx,%ebx,1),%dx
		inc    %eax
		mov    %dx,_0e5e84_data

	_074c90_jump:
		xor    %edx,%edx
		mov    _0cefea_data,%dl
		cmp    %edx,%eax
		jl     _074c36_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074ca4_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %ax,(%esp)
		mov    %edx,%esi
		mov    _0cc300_data,%ebx
		mov    _0cc304_data,%cx
		xor    %edx,%edx
		xor    %eax,%eax

	_074cc1_jump:
		cmpw   $0x0000aa,0x000060(%ebx)
		jne    _074cd4_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _074cd4_jump
		mov    $0x000001,%edx

	_074cd4_jump:
		add    $0x000084,%ebx
		inc    %eax
		test   %dx,%dx
		jne    _074ce5_jump
		cmp    %cx,%ax
		jl     _074cc1_jump

	_074ce5_jump:
		sub    $0x000084,%ebx
		test   %dx,%dx
		je     _074d45_jump
		orb    $0x000004,0x000081(%ebx)
		mov    %ebx,%eax
		movl   $0x000001,0x000024(%ebx)
		call   _01f304_func
		mov    -0x000002(%esp),%eax
		mov    0x000081(%ebx),%dl
		movw   $0x000000,0x000040(%ebx)
		and    $0x0000bf,%dl
		sar    $0x000010,%eax
		mov    %dl,0x000081(%ebx)
		mov    %eax,0x000028(%ebx)
		movswl %si,%eax
		mov    $0x000003,%edx
		mov    %eax,0x00002c(%ebx)
		mov    %ebx,%eax
		movw   $0x000000,0x000042(%ebx)
		call   _01d36c_func
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _01d364_func

	_074d45_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_074d4c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%ecx
		call   _07727c_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _074d90_jump
		movswl %di,%eax
		add    $0x000040,%eax
		mov    %eax,0x000028(%edx)
		movswl %cx,%eax
		add    $0x000040,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f304_func
		movb   $0x000001,0x00007e(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000050(%edx)
		call   _01db8c_func

	_074d90_jump:
		mov    %ecx,%eax
		add    $0x000020,%eax
		movswl %ax,%edx
		mov    %edi,%eax
		add    $0x00008c,%eax
		cwtl   
		call   _077a30_func
		mov    $0x0000aa,%eax
		xor    %ebx,%ebx
		call   _01d020_func
		lea    0x000528(%eax),%edx

	_074db9_jump:
		cmpl   $0x000000,0x000024(%edx)
		jne    _074dc6_jump
		mov    %edx,%eax
		call   _01f304_func

	_074dc6_jump:
		mov    0x000081(%edx),%ah
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		movswl %di,%eax
		movb   $0x000003,0x00006d(%edx)
		add    $0x000008,%eax
		mov    %eax,0x000028(%edx)
		movswl %cx,%eax
		mov    %eax,0x00002c(%edx)
		movswl %bx,%eax
		movb   $0x000002,0x00006c(%edx)
		mov    _0bd540_data(,%eax,2),%si
		mov    %si,0x000040(%edx)
		add    $0x000084,%edx
		mov    _0bd550_data(,%eax,2),%ax
		movb   $0x000002,-0x000019(%edx)
		inc    %ebx
		mov    %ax,-0x000042(%edx)
		cmp    $0x000008,%bx
		jl     _074db9_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_074e24_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpw   $0x000000,_0cee46_data
		je     _074fb5_jump
		mov    $0x000003,%ebx
		mov    _0ced5a_data,%edx
		mov    _0cc300_data,%ecx
		sar    $0x000010,%edx
		mov    _0cee46_data,%si
		mov    %edx,%eax
		mov    _0cee44_data,%di
		shl    $0x000005,%eax
		mov    %bx,_0cee3c_data
		add    %edx,%eax
		dec    %esi
		shl    $0x000002,%eax
		mov    _0cee36_data,%bx
		add    %eax,%ecx
		mov    _0cee42_data,%ax
		mov    %si,_0cee46_data
		sub    %eax,%ebx
		mov    _0cee38_data,%si
		movswl %bx,%eax
		sub    %edi,%esi
		test   %eax,%eax
		jge    _074e96_jump
		neg    %eax

	_074e96_jump:
		mov    %eax,%edx
		movswl %si,%eax
		mov    %edx,%edi
		test   %eax,%eax
		jge    _074ea3_jump
		neg    %eax

	_074ea3_jump:
		add    %eax,%edi
		cmp    $0x000008,%di
		jge    _074ec3_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d36c_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d364_func

	_074ec3_jump:
		test   %di,%di
		jle    _074ef3_jump
		mov    _0cee3c_data,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %di,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    _0cee3c_data,%cl
		mov    %eax,%ebx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%esi

	_074ef3_jump:
		cmpb   $0x000000,_0cef51_data
		jne    _074f0d_jump
		cmpw   $0x000032,_0cee46_data
		jge    _074f0d_jump
		mov    $0x000001,%eax
		jmp    _074f0f_jump

	_074f0d_jump:
		xor    %eax,%eax

	_074f0f_jump:
		test   %ax,%ax
		je     _074f64_jump
		mov    _0cee3c_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _074f31_jump
		mov    $0x000001,%eax
		jg     _074f31_jump
		neg    %eax

	_074f31_jump:
		mov    _0cee3e_data,%edx
		mov    _0cee3e_data,%bx
		sar    $0x000010,%edx
		add    %eax,%ebx
		movswl %si,%eax
		sub    %edx,%eax
		mov    %bx,_0cee3e_data
		cmp    $0x000000,%eax
		je     _074f5d_jump
		mov    $0x000001,%eax
		jg     _074f5d_jump
		neg    %eax

	_074f5d_jump:
		add    %ax,_0cee40_data

	_074f64_jump:
		mov    _0cee3e_data,%ax
		mov    _0cee42_data,%si
		mov    _0cee44_data,%dx
		add    %eax,%esi
		mov    _0cee40_data,%ax
		add    %eax,%edx
		mov    %dx,_0cee44_data
		mov    _0cef50_data,%dl
		mov    %si,_0cee42_data
		test   %dl,%dl
		jne    _074fb5_jump
		test   %di,%di
		je     _074fb5_jump
		mov    _0cee42_data,%edx
		mov    _0cee40_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _074ca4_func

	_074fb5_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074fbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0cee46_data,%dx
		test   %dx,%dx
		je     _0751d7_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    _0cdcd2_data,%ah
		mov    %bx,_0cee46_data
		test   %ah,%ah
		je     _07502c_jump
		mov    $0x000003,%eax
		mov    _0cdc30_data,%edx
		mov    %ax,_0cee3c_data
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		add    %ebx,%eax
		sub    $0x000068,%eax
		mov    %ax,_0cee36_data
		xor    %eax,%eax
		mov    0x00002c(%edx),%cx
		mov    0x000074(%edx),%al
		add    %ecx,%eax
		sub    $0x000078,%eax
		mov    _0cef4f_data,%dh
		mov    %ax,_0cee38_data
		test   %dh,%dh
		jmp    _075071_jump

	_07502c_jump:
		mov    _0cdc0c_data,%al
		add    _0cdbcc_data,%ax
		sub    $0x000078,%eax
		mov    %ax,_0cee36_data
		xor    %eax,%eax
		mov    _0cdbd0_data,%di
		mov    _0cdc0d_data,%al
		mov    $0x000003,%ecx
		add    %edi,%eax
		mov    _0cef55_data,%dl
		sub    $0x00008c,%eax
		mov    %cx,_0cee3c_data
		mov    %ax,_0cee38_data
		test   %dl,%dl

	_075071_jump:
		sete   %al
		xor    %ah,%ah
		mov    %eax,(%esp)
		mov    _0cee36_data,%bx
		mov    _0cee42_data,%ax
		mov    _0cee38_data,%si
		sub    %eax,%ebx
		mov    _0cee44_data,%di
		movswl %bx,%eax
		sub    %edi,%esi
		test   %eax,%eax
		jge    _0750a1_jump
		neg    %eax

	_0750a1_jump:
		mov    %eax,%edx
		movswl %si,%eax
		mov    %edx,%edi
		test   %eax,%eax
		jge    _0750ae_jump
		neg    %eax

	_0750ae_jump:
		add    %eax,%edi
		test   %di,%di
		jle    _0750e0_jump
		mov    _0cee3c_data,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %di,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    _0cee3c_data,%cl
		mov    %eax,%ebx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%esi

	_0750e0_jump:
		cmpw   $0x000000,(%esp)
		je     _075137_jump
		mov    _0cee3c_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _075104_jump
		mov    $0x000001,%eax
		jg     _075104_jump
		neg    %eax

	_075104_jump:
		mov    _0cee3e_data,%edx
		mov    _0cee3e_data,%bx
		sar    $0x000010,%edx
		add    %eax,%ebx
		movswl %si,%eax
		sub    %edx,%eax
		mov    %bx,_0cee3e_data
		cmp    $0x000000,%eax
		je     _075130_jump
		mov    $0x000001,%eax
		jg     _075130_jump
		neg    %eax

	_075130_jump:
		add    %ax,_0cee40_data

	_075137_jump:
		mov    _0cee3e_data,%ax
		mov    _0cee42_data,%si
		mov    _0cee44_data,%dx
		add    %eax,%esi
		mov    _0cee40_data,%ax
		mov    %si,_0cee42_data
		add    %eax,%edx
		mov    _0cee40_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0cee44_data
		cmp    $0xffffff6a,%eax
		jge    _075198_jump
		mov    _0cee3e_data,%bx
		mov    %esi,%ecx
		neg    %ebx
		add    %ebx,%ecx
		mov    %ecx,%esi
		mov    %cx,_0cee42_data
		add    %ebx,%esi
		mov    %bx,_0cee3e_data
		mov    %si,_0cee42_data

	_075198_jump:
		cmpb   $0x000000,_0cef50_data
		jne    _0751bc_jump
		test   %di,%di
		je     _0751bc_jump
		mov    _0cee42_data,%edx
		mov    _0cee40_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _074ca4_func

	_0751bc_jump:
		cmpw   $0x000000,_0cee46_data
		jne    _0751d7_jump
		mov    $0xffff8300,%eax
		mov    %ax,_0cee42_data
		mov    %ax,_0cee44_data

	_0751d7_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0751e4_func:
		push   %ebx
		push   %ecx
		push   %edi
		mov    %eax,%ebx
		mov    %edx,%ecx
		incb   _0cefe3_data
		xor    %eax,%eax
		mov    _0cefe3_data,%al
		mov    _09220c_data(%eax),%al
		and    $0x0000ff,%eax
		xor    %edx,%edx
		mov    _0cc310_data(%eax),%dl
		mov    %dx,_0ced5c_data
		xor    %edx,%edx
		mov    _0cc310_data(%eax),%dl
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		cmpw   $0x0000ff,_0cee46_data
		je     _07523f_jump
		movw   $0x00003c,_0cee46_data

	_07523f_jump:
		sub    $0x000050,%ebx
		mov    $0x000004,%edx
		mov    %bx,_0cee42_data
		mov    %dx,_0cee40_data
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000068(%eax),%dl
		add    %ebx,%edx
		sub    $0x000078,%edx
		mov    %dx,_0cee36_data
		xor    %edx,%edx
		mov    $0xfffffffc,%edi
		mov    0x000074(%eax),%dl
		mov    0x00002c(%eax),%ax
		sub    $0x00000a,%ecx
		add    %edx,%eax
		mov    %cx,_0cee44_data
		sub    $0x000078,%eax
		mov    _0cee42_data,%edx
		mov    %ax,_0cee38_data
		mov    _0cee40_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %di,_0cee3e_data
		call   _074ca4_func
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret    



_0752b0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,_0cdcd2_data
		je     _0752c6_jump
		mov    _0cdc30_data,%eax
		jmp    _0752cb_jump

	_0752c6_jump:
		mov    $_0cdba4_data,%eax

	_0752cb_jump:
		sub    $0x000050,%ebx
		sub    $0x00000a,%edx
		mov    %bx,_0cee42_data
		mov    %dx,_0cee44_data
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000068(%eax),%dl
		mov    $0x000078,%ecx
		add    %ebx,%edx
		sub    %ecx,%edx
		mov    $0xfffffffc,%esi
		mov    %dx,_0cee36_data
		xor    %edx,%edx
		mov    $0x000002,%edi
		mov    0x000074(%eax),%dl
		mov    0x00002c(%eax),%ax
		mov    %cx,_0cee46_data
		add    %edx,%eax
		mov    %si,_0cee3e_data
		sub    %ecx,%eax
		mov    _0cee42_data,%edx
		mov    %ax,_0cee38_data
		mov    _0cee40_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %di,_0cee40_data
		call   _074ca4_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_075348_func:
		push   %ebx
		push   %edx
		mov    _0cee38_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc300_data,%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		orb    $0x000004,0x000081(%edx)
		mov    0x000028(%eax),%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%eax),%eax
		movw   $0x00ff80,0x000040(%edx)
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000042(%edx)
		call   _01db8c_func
		mov    %edx,%eax
		call   _01f304_func
		pop    %edx
		pop    %ebx
		ret    



_075398_func:
		push   %edx
		mov    $0x000028,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0cdbfa_data
		pop    %edx
		ret    



_0753ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cedda_data,%si
		mov    _0e5e84_data,%di
		mov    _0e5e80_data,%ebp
		cmpw   $0x000003,_0cedb4_data
		je     _0753fb_jump
		cmpb   $0x000002,_0cdc11_data
		jne    _0753e2_jump
		cmpb   $0x000009,_0cdc10_data
		je     _0753fb_jump

	_0753e2_jump:
		cmpb   $0x000003,_0cdc11_data
		jne    _07540b_jump
		mov    _0cdc10_data,%bl
		cmp    $0x000017,%bl
		je     _0753fb_jump
		cmp    $0x000007,%bl
		jne    _07540b_jump

	_0753fb_jump:
		xor    %cl,%cl
		xor    %edx,%edx
		mov    %cl,_0cefe0_data
		mov    %edx,_0ce44c_data

	_07540b_jump:
		test   %ebp,%ebp
		je     _07542d_jump
		mov    _0cef51_data,%ch
		dec    %ebp
		cmp    $0x000002,%ch
		jb     _075425_jump
		addw   $0x000002,_0cee10_data
		jmp    _07542d_jump

	_075425_jump:
		subw   $0x000002,_0cee10_data

	_07542d_jump:
		cmpl   $0x000060,_0ce44c_data
		jge    _07543f_jump
		cmpb   $0x000001,_0cefe0_data
		je     _07545c_jump

	_07543f_jump:
		cmpl   $0x0000c4,_0ce44c_data
		jge    _0755a7_jump
		cmpb   $0x000002,_0cefe0_data
		jne    _0755a7_jump

	_07545c_jump:
		cmpb   $0x000001,_0cefe0_data
		jne    _07546e_jump
		cmpb   $0x000000,_0cef4f_data
		je     _075488_jump

	_07546e_jump:
		cmpb   $0x000002,_0cefe0_data
		jne    _0755a7_jump
		cmpb   $0x000000,_0cef51_data
		jne    _0755a7_jump

	_075488_jump:
		cmpb   $0x000002,_0cef51_data
		jb     _07549b_jump
		addw   $0x000003,_0cee10_data
		jmp    _0754a3_jump

	_07549b_jump:
		subw   $0x000003,_0cee10_data

	_0754a3_jump:
		mov    _0cedc6_data,%ax
		mov    _0cedbc_data,%bx
		dec    %esi
		cmp    %bx,%ax
		jle    _0754c0_jump
		mov    %eax,%ecx
		dec    %ecx
		mov    %cx,_0cedc6_data

	_0754c0_jump:
		incl   _0ce44c_data
		testb  $0x00000f,_0ce44c_data
		jne    _0754d6_jump
		decw   _0cdb9a_data

	_0754d6_jump:
		xor    %eax,%eax
		jmp    _075596_jump

	_0754dd_jump:
		movswl %ax,%ebx
		xor    %edx,%edx
		mov    _0ce438_data(%ebx),%dl
		imul   $0x000084,%edx,%ecx
		mov    _0cc300_data,%edx
		decl   0x00002c(%ecx,%edx,1)
		xor    %ecx,%ecx
		mov    _0ce438_data(%ebx),%cl
		imul   $0x000084,%ecx,%ecx
		decw   0x00003e(%ecx,%edx,1)
		cmpb   $0x000001,_0cefe0_data
		jne    _075546_jump
		cmpb   $0x000000,_0cef57_data
		jne    _075546_jump
		xor    %ecx,%ecx
		mov    _0ce438_data(%ebx),%cl
		imul   $0x000084,%ecx,%ecx
		decl   0x00002c(%ecx,%edx,1)
		mov    _0ce438_data(%ebx),%bl
		and    $0x0000ff,%ebx
		imul   $0x000084,%ebx,%ebx
		decw   0x00003e(%edx,%ebx,1)

	_075546_jump:
		movswl %ax,%ebx
		mov    _0ce438_data(%ebx),%bl
		and    $0x0000ff,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0cc300_data,%edx
		add    %edx,%ebx
		movswl %si,%edx
		mov    0x00002c(%ebx),%ecx
		add    $0x000078,%edx
		cmp    %ecx,%edx
		jle    _075573_jump
		mov    %edx,0x00002c(%ebx)

	_075573_jump:
		movswl %ax,%edx
		mov    _0ce438_data(%edx),%dl
		and    $0x0000ff,%edx
		imul   $0x000084,%edx,%ebx
		mov    _0cc300_data,%edx
		mov    0x00002c(%edx,%ebx,1),%dx
		inc    %eax
		mov    %edx,%edi

	_075596_jump:
		xor    %edx,%edx
		mov    _0cefea_data,%dl
		cmp    %dx,%ax
		jl     _0754dd_jump

	_0755a7_jump:
		cmpl   $0x000060,_0ce44c_data
		jne    _0755ce_jump
		cmpb   $0x000001,_0cefe0_data
		jne    _0755ce_jump
		mov    $0x00003c,%ebp
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %edx,_0ce44c_data
		mov    %ah,_0cefe0_data

	_0755ce_jump:
		cmpl   $0x0000c4,_0ce44c_data
		jne    _0755f8_jump
		cmpb   $0x000002,_0cefe0_data
		jne    _0755f8_jump
		mov    $0x00003c,%ebp
		xor    %ecx,%ecx
		xor    %dh,%dh
		mov    %ecx,_0ce44c_data
		mov    %dh,_0cefe0_data

	_0755f8_jump:
		mov    %ebp,_0e5e80_data
		mov    %di,_0e5e84_data
		mov    %si,_0cedda_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075614_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0ced5a_data,%ebx
		movzbw 0x00006d(%eax),%si
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x00006c(%eax),%dl
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc300_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		test   %si,%si
		jne    _075799_jump
		cmp    $0x000002,%dx
		jb     _075799_jump
		cmp    $0x000003,%dx
		jbe    _07574b_jump
		cmp    $0x000004,%dx
		jne    _075799_jump
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _075799_jump
		cmpw   $0x000000,_0ceda6_data
		jne    _075799_jump
		mov    $0x000001,%esi
		mov    _0ced66_data,%di
		mov    0x00006c(%ebx),%dl
		add    %esi,%edi
		mov    %si,_0ceda6_data
		mov    %di,_0ced66_data
		cmp    $0x000007,%dl
		jne    _0756e6_jump
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d36c_func
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d364_func
		mov    _0cefe3_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    %dh,%al
		mov    %dh,_0cefe3_data
		mov    _09220c_data(%eax),%al
		and    $0x0000ff,%eax
		mov    _0cc310_data(%eax),%al
		xor    %ah,%ah
		mov    %ax,_0ced5c_data

	_0756e6_jump:
		cmpw   $0x000004,_0ced66_data
		jne    _075701_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _05f030_func

	_075701_jump:
		cmpw   $0x000005,_0ced66_data
		jne    _075799_jump
		mov    $0x000005,%edx
		mov    _0ced6e_data,%di
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %bx,_0ced66_data
		mov    %bx,_0ced62_data
		inc    %edi
		mov    $0x000001,%ebx
		mov    %di,_0ced6e_data
		call   _05f030_func
		decb   _0cefe3_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07574b_jump:
		cmpw   $0x000004,_0cee34_data
		jne    _075773_jump
		mov    $0x000008,%edx
		mov    %ecx,%eax
		mov    $0x000008,%ebx
		call   _01d364_func
		mov    %bx,_0cee34_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075773_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05f030_func
		movw   $0x000004,_0cee34_data

	_075799_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0757a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %dx,%dx
		jne    _075865_jump
		cmp    $0x000004,%ax
		jb     _075865_jump
		ja     _075865_jump
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _075865_jump
		cmpw   $0x000000,_0ceda6_data
		jne    _075865_jump
		mov    $0x000001,%ebx
		mov    _0ced66_data,%si
		mov    _0cdc11_data,%dl
		add    %ebx,%esi
		mov    %bx,_0ceda6_data
		mov    %si,_0ced66_data
		cmp    $0x000005,%dl
		jne    _075826_jump
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _01d36c_func
		mov    $0x000002,%edx
		mov    $_0cdba4_data,%eax
		call   _01d364_func

	_075826_jump:
		cmpw   $0x000003,_0ced66_data
		jne    _075865_jump
		mov    $0x000001,%ebx
		mov    _0ced6e_data,%dx
		xor    %eax,%eax
		inc    %edx
		mov    %ax,_0cee46_data
		mov    %dx,_0ced6e_data
		mov    %ecx,%eax
		mov    $0x000006,%edx
		call   _05f030_func
		xor    %ebx,%ebx
		movb   $0x000000,0x00006b(%ecx)
		mov    %bx,_0ced66_data

	_075865_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07586c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006d(%eax),%bl
		mov    0x00006c(%eax),%dl
		call   _074e24_func
		test   %bx,%bx
		jne    _075981_jump
		cmp    $0x000004,%dx
		jb     _0758a1_jump
		jbe    _0758ad_jump
		cmp    $0x000007,%dx
		je     _075916_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0758a1_jump:
		cmp    $0x000002,%dx
		jb     _0759a0_jump
		jmp    _075905_jump

	_0758ad_jump:
		mov    _0ced66_data,%dx
		mov    %edx,%eax
		inc    %eax
		test   %dx,%dx
		jbe    _0758c7_jump
		cmp    $0x000001,%dx
		je     _0758e4_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0758c7_jump:
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _0759a0_jump
		mov    $0x000001,%bl
		mov    %ax,_0ced66_data
		mov    %bl,_0cefe0_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0758e4_jump:
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _0759a0_jump
		mov    $0x000001,%ebx
		mov    %ax,_0ced66_data
		mov    %bx,_0ceda6_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075905_jump:
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d364_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075916_jump:
		cmpb   $0x000009,0x00006b(%ecx)
		jne    _0759a0_jump
		cmpw   $0x000000,_0cee46_data
		jne    _0759a0_jump
		mov    0x00002a(%ecx),%edx
		mov    0x000026(%ecx),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0751e4_func
		mov    _0ced66_data,%si
		inc    %esi
		mov    %si,_0ced66_data
		cmp    $0x000005,%si
		jne    _0759a0_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _05f030_func
		mov    _0ced6e_data,%dx
		xor    %eax,%eax
		inc    %edx
		mov    %ax,_0ced66_data
		mov    %dx,_0ced6e_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075981_jump:
		cmp    $0x000001,%bx
		jne    _0759a0_jump
		cmp    $0x00000f,%dx
		jne    _0759a0_jump
		mov    _0ced62_data,%dx
		cmp    0x000048(%ecx),%dx
		jne    _0759a0_jump
		movw   $0x000000,0x000048(%ecx)

	_0759a0_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0759a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006d(%eax),%bl
		mov    0x00006c(%eax),%dl
		call   _074e24_func
		test   %bx,%bx
		jne    _075a53_jump
		cmp    $0x000002,%dx
		jb     _075a53_jump
		mov    _0ced66_data,%ax
		inc    %eax
		cmp    $0x000002,%dx
		jbe    _075a08_jump
		cmp    $0x000004,%dx
		jne    _075a53_jump
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _075a53_jump
		cmpw   $0x000001,_0ced66_data
		jne    _075a53_jump
		mov    $0x000002,%dh
		mov    %ax,_0ced66_data
		mov    %dh,_0cefe0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075a08_jump:
		mov    _0ced66_data,%bx
		test   %bx,%bx
		jne    _075a2f_jump
		mov    $0x000001,%ebx
		mov    $0x00000b,%edx
		mov    %ax,_0ced66_data
		mov    %ecx,%eax
		call   _05f030_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075a2f_jump:
		cmp    $0x000002,%bx
		jne    _075a53_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d36c_func
		mov    $0x00000f,%edx
		mov    %ecx,%eax
		call   _01d364_func
		movw   $0x000003,0x000040(%ecx)

	_075a53_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075a58_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _075b22_jump
		mov    0x00006c(%ecx),%dl
		cmp    $0x000008,%dl
		jne    _075aa1_jump
		cmpb   $0x000041,0x00006b(%ecx)
		jne    _075b22_jump
		mov    %ecx,%eax
		mov    $0x000009,%edx
		call   _075348_func
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    $0x000009,%edx
		mov    %ecx,%eax
		call   _05f030_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075aa1_jump:
		cmp    $0x000009,%dl
		jne    _075ae0_jump
		mov    _0cee38_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		addw   $0x000002,0x000040(%edx,%eax,4)
		mov    0x00003e(%edx,%eax,4),%eax
		sar    $0x000010,%eax
		neg    %eax
		cmp    $0xffffff92,%eax
		jne    _075b22_jump
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d364_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075ae0_jump:
		cmp    $0x00000a,%dl
		jne    _075b22_jump
		cmpb   $0x000007,0x00006b(%ecx)
		jne    _075b22_jump
		mov    _0cee38_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		mov    _0cc300_data,%edx
		add    %ecx,%eax
		movl   $0xffff8300,0x000028(%edx,%eax,4)
		mov    0x000081(%edx,%eax,4),%cl
		movl   $0xffff8300,0x00002c(%edx,%eax,4)
		and    $0x0000fb,%cl
		mov    %cl,0x000081(%edx,%eax,4)

	_075b22_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075b28_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    $0x000010,%ebx
		mov    $0xffffffff,%edx
		mov    _0cee44_data,%ax
		mov    _0cee42_data,%di
		add    $0x000078,%eax
		add    $0x000078,%edi
		mov    %ax,(%esp)
		mov    0x00006d(%esi),%ah
		mov    %ebx,%ecx
		test   %ah,%ah
		jne    _075b64_jump
		cmpb   $0x00000b,0x00006c(%esi)
		je     _075b6b_jump

	_075b64_jump:
		mov    $0x000001,%eax
		jmp    _075b6d_jump

	_075b6b_jump:
		xor    %eax,%eax

	_075b6d_jump:
		test   %eax,%eax
		je     _075ba8_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _075b7d_jump
		cmpb   $0x00000c,0x00006c(%esi)
		je     _075b84_jump

	_075b7d_jump:
		mov    $0x000001,%eax
		jmp    _075b86_jump

	_075b84_jump:
		xor    %eax,%eax

	_075b86_jump:
		test   %eax,%eax
		je     _075ba8_jump
		push   %esi
		movswl %cx,%eax
		movswl %di,%edx
		push   %eax
		movswl %bx,%ecx
		mov    0x000006(%esp),%ebx
		mov    $0x000096,%eax
		sar    $0x000010,%ebx
		call   _02c0a0_func
		mov    %eax,%edx

	_075ba8_jump:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _075c2a_jump
		mov    $0x00000b,%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    _0cee42_data,%edx
		mov    _0cee40_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		call   _074d4c_func
		mov    $0xffff8300,%edx
		mov    %cx,_0cee46_data
		mov    0x000076(%esi),%ah
		mov    %dx,_0cee42_data
		dec    %ah
		mov    %dx,_0cee44_data
		mov    %ah,0x000076(%esi)
		cmp    $0x000001,%ah
		jne    _075c10_jump
		mov    $0x000001,%ebx
		mov    $0x00000d,%edx
		mov    %esi,%eax
		call   _05f030_func

	_075c10_jump:
		cmpb   $0x000000,0x000076(%esi)
		jne    _075c2a_jump
		mov    $0x00000c,%edx
		mov    %esi,%eax
		mov    $0x000001,%bl
		call   _01d364_func
		mov    %bl,_0cefca_data

	_075c2a_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075c34_func:
		push   %ecx
		orb    $0x000040,_0ced88_data
		cmpb   $0x000000,0x00006d(%eax)
		jne    _075c5f_jump
		cmpb   $0x00000c,0x00006c(%eax)
		jne    _075c5f_jump
		cmpb   $0x00007f,0x00006b(%eax)
		jb     _075c5f_jump
		mov    $0x000001,%cl
		movb   $0x000081,0x00006b(%eax)
		mov    %cl,_0cefc8_data
		call   _05fc34_func

	_075c5f_jump:
		pop    %ecx
		ret    

_075c64_switch:
		.long   _075d52_case
		.long   _075d62_case
		.long   _075d72_case
		.long   _075d82_case




_075c74_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		movzbw 0x00006c(%ecx),%si
		mov    %eax,(%esp)
		test   %ax,%ax
		jne    _075cd8_jump
		cmp    $0x000001,%si
		jne    _075cd8_jump
		cmpb   $0x000000,0x00006b(%ecx)
		jne    _075cac_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000ac,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func

	_075cac_jump:
		cmpb   $0x000032,0x00006b(%ecx)
		jne    _075cc2_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000ad,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func

	_075cc2_jump:
		cmpb   $0x000064,0x00006b(%ecx)
		jne    _075cd8_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000b1,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func

	_075cd8_jump:
		mov    _0cedd0_data,%bx
		cmp    $0x00000a,%bx
		jne    _075d92_jump
		mov    %ecx,%eax
		call   _02f088_func
		cmpw   $0x000000,_0cee4c_data
		jne    _075cff_jump
		call   _074ae0_func

	_075cff_jump:
		mov    %ecx,%eax
		call   _075a58_func
		call   _0753ac_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		mov    _0cdbcc_data,%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jge    _075d35_jump
		cmpw   $0x000003,_0cedb4_data
		je     _075d35_jump
		mov    $0x000001,%eax
		mov    %ecx,%edx
		call   _02d60c_func

	_075d35_jump:
		mov    _0ced6e_data,%ax
		cmp    $0x000003,%ax
		ja     _075ee2_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_075c64_switch(,%eax,4)

	_075d52_case:
		mov    %ecx,%eax
		call   _075614_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075d62_case:
		mov    %ecx,%eax
		call   _0757a0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075d72_case:
		mov    %ecx,%eax
		call   _07586c_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075d82_case:
		mov    %ecx,%eax
		call   _0759a8_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075d92_jump:
		cmp    $0x00000b,%bx
		jne    _075ee2_jump
		cmpw   $0x000000,_0cee4c_data
		jne    _075e25_jump
		mov    $0x000001,%bl
		mov    _0cc300_data,%edx
		mov    0x000077(%ecx),%al
		mov    %bl,_0cefbd_data
		mov    %al,0x000076(%ecx)
		mov    _0cc304_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _075de8_jump

	_075dcc_jump:
		cmpw   $0x0000f8,0x000060(%edx)
		jne    _075ddc_jump
		mov    %ax,_0cee3a_data
		jmp    _075de8_jump

	_075ddc_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _075dcc_jump

	_075de8_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _05f030_func
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d36c_func
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d364_func
		mov    $0x000001,%eax
		mov    $0x000004,%edx
		mov    %ax,_0cee4c_data
		mov    %dx,_0ced6e_data

	_075e25_jump:
		mov    %ecx,%eax
		call   _02f088_func
		call   _074fbc_func
		mov    %ecx,%eax
		call   _075a58_func
		mov    %ecx,%eax
		call   _075b28_func
		mov    %ecx,%eax
		mov    (%esp),%ebx
		call   _075c34_func
		test   %bx,%bx
		jne    _075ee2_jump
		cmp    $0x000002,%si
		jb     _075ee2_jump
		cmp    $0x000003,%si
		jbe    _075ea2_jump
		cmp    $0x000007,%si
		jne    _075ee2_jump
		cmpb   $0x000009,0x00006b(%ecx)
		jne    _075ee2_jump
		cmpw   $0x000000,_0cee46_data
		jne    _075ee2_jump
		mov    $0x0000ff,%edi
		mov    0x00002a(%ecx),%edx
		mov    0x000026(%ecx),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %di,_0cee46_data
		call   _0752b0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075ea2_jump:
		cmpw   $0x000005,_0cee34_data
		jne    _075ecd_jump
		mov    $0x000008,%edx
		mov    %ecx,%eax
		mov    $0x000008,%ebx
		call   _01d364_func
		mov    %bx,_0cee34_data
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075ecd_jump:
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d364_func
		movw   $0x000005,_0cee34_data

	_075ee2_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075eec_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		xor    %eax,%eax
		mov    _0ced6e_data,%dx
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%dx
		jae    _075f6e_jump
		test   %dx,%dx
		jne    _075f6e_jump
		test   %bx,%bx
		jne    _075f6e_jump
		test   %ax,%ax
		jbe    _075f27_jump
		cmp    $0x000002,%ax
		jb     _075f6e_jump
		cmp    $0x000003,%ax
		jbe    _075f51_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075f27_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05f030_func
		xor    %edx,%edx
		mov    %dx,_0ced66_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075f51_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05f030_func

	_075f6e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075f74_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		xor    %eax,%eax
		mov    _0ced6e_data,%dx
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%dx
		jb     _075f98_jump
		jbe    _076022_jump
		pop    %ecx
		pop    %ebx
		ret    

	_075f98_jump:
		test   %dx,%dx
		jne    _076042_jump
		test   %bx,%bx
		jne    _076042_jump
		cmp    $0x000001,%ax
		jb     _075fbb_jump
		jbe    _075ff5_jump
		cmp    $0x000003,%ax
		jbe    _076002_jump
		pop    %ecx
		pop    %ebx
		ret    

	_075fbb_jump:
		test   %ax,%ax
		jne    _076042_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05f030_func
		movb   $0x000000,0x000073(%ecx)
		xor    %ebx,%ebx
		movb   $0x000051,0x00006b(%ecx)
		mov    %bx,_0ced66_data
		pop    %ecx
		pop    %ebx
		ret    

	_075ff5_jump:
		cmpb   $0x000051,0x00006b(%ecx)
		jae    _076042_jump
		movb   $0x000051,0x00006b(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_076002_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05f030_func
		pop    %ecx
		pop    %ebx
		ret    

	_076022_jump:
		test   %bx,%bx
		jne    _076042_jump
		addl   $0x000002,0x000028(%ecx)
		incw   _0ced62_data
		cmp    $0x000002,%ax
		jb     _076042_jump
		cmp    $0x000003,%ax
		ja     _076042_jump
		mov    %bx,0x000048(%ecx)

	_076042_jump:
		pop    %ecx
		pop    %ebx
		ret    



_076048_func:
		mov    _0e5e84_data,%ax
		ret    



_076050_func:
		push   %edx
		mov    _0cdbcc_data,%ax
		mov    %ax,_0cedfe_data
		mov    _0cdbd0_data,%ax
		mov    %ax,_0cedf6_data
		mov    _0cee10_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0cee0a_data
		mov    _0cedfa_data,%ax
		mov    %dx,_0cedf4_data
		mov    %ax,_0cee0e_data
		pop    %edx
		ret    

_076090_switch:
		.long   _0761cb_case
		.long   _076271_case
		.long   _0762e5_case
		.long   _076347_case
		.long   _076378_case
		.long   _07638d_case

_0760a8_switch:
		.long   _0763c7_case
		.long   _0765a3_case
		.long   _0766d6_case
		.long   _0767ec_case
		.long   _076901_case
		.long   _0769c1_case

_0760c0_switch:
		.long   _0765c3_case
		.long   _0769ea_case
		.long   _0765e1_case
		.long   _0769ea_case
		.long   _0769ea_case
		.long   _07661b_case
		.long   _0769ea_case
		.long   _07663c_case
		.long   _0769ea_case
		.long   _07667b_case
		.long   _0769ea_case
		.long   _0769ea_case
		.long   _076553_case
		.long   _0766aa_case
		.long   _0766c0_case

_0760fc_switch:
		.long   _0766f6_case
		.long   _0769ea_case
		.long   _07671f_case
		.long   _07673d_case
		.long   _0769ea_case
		.long   _0769ea_case
		.long   _0769ea_case
		.long   _076777_case
		.long   _0769ea_case
		.long   _076798_case
		.long   _0767c1_case
		.long   _0767d6_case

_07612c_switch:
		.long   _07680c_case
		.long   _07682d_case
		.long   _0769ea_case
		.long   _0769ea_case
		.long   _076857_case
		.long   _0769ea_case
		.long   _076882_case
		.long   _0769ea_case
		.long   _0768a3_case
		.long   _0768d5_case
		.long   _0768eb_case

_076158_switch:
		.long   _076921_case
		.long   _0769ea_case
		.long   _0769ea_case
		.long   _0769ea_case
		.long   _0769ea_case
		.long   _0769ea_case
		.long   _076975_case
		.long   _0769ea_case
		.long   _0769ea_case
		.long   _07699e_case
		.long   _0769ae_case




_076184_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		mov    _0cedf4_data,%cx
		xor    %edx,%edx
		test   %cx,%cx
		je     _0763a9_jump
		call   _076050_func
		cmpw   $0x000005,0x000060(%ebx)
		je     _0763a9_jump
		mov    _0cede4_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _0763a9_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_076090_switch(,%eax,4)

	_0761cb_case:
		cmpw   $0x000002,_0cedd0_data
		jne    _0761e5_jump
		testb  $0x000001,_0ced80_data
		je     _0761e5_jump
		incw   _0ced84_data

	_0761e5_jump:
		cmpw   $0x000005,_0cedd0_data
		jne    _0761ff_jump
		testb  $0x000001,_0ced88_data
		je     _0761ff_jump
		incw   _0ced84_data

	_0761ff_jump:
		cmpw   $0x000007,_0cedd0_data
		jne    _07621b_jump
		testb  $0x000002,_0ced80_data
		je     _07621b_jump
		movw   $0x000008,_0cedd0_data

	_07621b_jump:
		cmpw   $0x00000d,_0cedd0_data
		jne    _076235_jump
		testb  $0x000002,_0ced88_data
		je     _076235_jump
		incw   _0ced84_data

	_076235_jump:
		cmpw   $0x00000f,_0cedd0_data
		jne    _076251_jump
		testb  $0x000002,_0ced88_data
		je     _076251_jump
		movw   $0x000001,_0cedea_data

	_076251_jump:
		cmpw   $0x000010,_0cedd0_data
		jne    _0763a9_jump
		testb  $0x000080,_0ced80_data
		je     _0763a9_jump
		jmp    _0763a0_jump

	_076271_case:
		cmpw   $0x000005,_0cedd0_data
		jne    _07628d_jump
		testb  $0x000001,_0ced89_data
		je     _07628d_jump
		movw   $0x000001,_0cedea_data

	_07628d_jump:
		cmpw   $0x000009,_0cedd0_data
		jne    _0762a9_jump
		testb  $0x000004,_0ced88_data
		je     _0762a9_jump
		movw   $0x000001,_0cedea_data

	_0762a9_jump:
		cmpw   $0x00000a,_0cedd0_data
		jne    _0762c5_jump
		testb  $0x000004,_0ced80_data
		je     _0762c5_jump
		movw   $0x00000b,_0cedd0_data

	_0762c5_jump:
		cmpw   $0x00000e,_0cedd0_data
		jne    _0763a9_jump
		testb  $0x000004,_0ced88_data
		je     _0763a9_jump
		jmp    _0763a0_jump

	_0762e5_case:
		mov    _0cedd0_data,%di
		cmp    $0x000001,%di
		jne    _076302_jump
		testb  $0x000008,_0ced88_data
		je     _076302_jump
		mov    %di,_0cedea_data

	_076302_jump:
		cmpw   $0x000009,_0cedd0_data
		jne    _07631e_jump
		testb  $0x000008,_0ced88_data
		je     _07631e_jump
		movw   $0x000001,_0cedea_data

	_07631e_jump:
		cmpw   $0x00000a,_0cedd0_data
		jne    _0763a9_jump
		testb  $0x000001,_0ced81_data
		je     _0763a9_jump
		movw   $0x00000b,_0cedd0_data
		jmp    _0763a9_jump

	_076347_case:
		cmpw   $0x000003,_0cedd0_data
		jne    _076363_jump
		testb  $0x000010,_0ced88_data
		je     _076363_jump
		movw   $0x000001,_0cedea_data

	_076363_jump:
		cmpw   $0x00000a,_0cedd0_data
		jne    _0763a9_jump
		testb  $0x000020,_0ced88_data
		je     _0763a9_jump
		jmp    _0763a0_jump

	_076378_case:
		cmpw   $0x000009,_0cedd0_data
		jne    _0763a9_jump
		testb  $0x000040,_0ced88_data
		je     _0763a9_jump
		jmp    _0763a0_jump

	_07638d_case:
		cmpw   $0x000003,_0cedd0_data
		jne    _0763a9_jump
		testb  $0x000080,_0ced88_data
		je     _0763a9_jump

	_0763a0_jump:
		movw   $0x000001,_0cedea_data

	_0763a9_jump:
		mov    _0cede4_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _0769ea_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0760a8_switch(,%eax,4)

	_0763c7_case:
		mov    _0cedd0_data,%ax
		cmp    $0x00000c,%ax
		jb     _076413_jump
		jbe    _076532_jump
		cmp    $0x000013,%ax
		jb     _0763fe_jump
		jbe    _076817_jump
		cmp    $0x000014,%ax
		jbe    _076577_jump
		cmp    $0x000015,%ax
		je     _07658d_jump
		jmp    _0769ea_case

	_0763fe_jump:
		cmp    $0x000011,%ax
		jb     _0769ea_case
		jbe    _076553_case
		jmp    _076561_jump

	_076413_jump:
		cmp    $0x000004,%ax
		jb     _07643a_jump
		jbe    _076462_jump
		cmp    $0x000008,%ax
		jb     _0769ea_case
		jbe    _0764af_jump
		cmp    $0x00000b,%ax
		je     _0764f0_jump
		jmp    _0769ea_case

	_07643a_jump:
		cmp    $0x000002,%ax
		jne    _0769ea_case
		cmpw   $0x000005,0x000060(%ebx)
		jne    _0769ea_case
		movw   $0x000015,_0ced84_data
		mov    $0x000001,%edx
		jmp    _0769ea_case

	_076462_jump:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07647f_jump
		mov    $0x000014,%edi
		mov    $0x000001,%edx
		mov    %di,_0ced84_data
		jmp    _0769ea_case

	_07647f_jump:
		mov    $0x000001,%esi
		mov    _094a60_data,%ch
		mov    %si,_0cedea_data
		test   $0x000001,%ch
		jne    _0769ea_case
		mov    %ch,%al
		or     $0x000004,%al
		mov    %al,_094a60_data
		orb    $0x000004,_094bb4_data
		jmp    _0769ea_case

	_0764af_jump:
		mov    $0x000001,%ebx
		mov    _094a74_data,%ah
		mov    %bx,_0cedea_data
		test   $0x000001,%ah
		jne    _0764d1_jump
		mov    %ah,%bl
		or     $0x000004,%bl
		mov    %bl,_094a74_data

	_0764d1_jump:
		mov    _094a9c_data,%bh
		test   $0x000001,%bh
		jne    _0769ea_case
		mov    %bh,%cl
		or     $0x000004,%cl
		mov    %cl,_094a9c_data
		jmp    _0769ea_case

	_0764f0_jump:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07650a_jump
		movw   $0x000012,_0ced84_data
		mov    $0x000001,%edx
		jmp    _0769ea_case

	_07650a_jump:
		mov    $0x000001,%eax
		mov    _094a88_data,%ch
		mov    %ax,_0cedea_data
		test   $0x000001,%ch
		jne    _0769ea_case
		mov    %ch,%al
		or     $0x000004,%al
		mov    %al,_094a88_data
		jmp    _0769ea_case

	_076532_jump:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _0769ea_case
		mov    $0x000013,%esi
		mov    $0x000001,%edx
		mov    %si,_0ced84_data
		jmp    _0769ea_case

	_076553_case:
		movw   $0x000001,_0cedea_data
		jmp    _0769ea_case

	_076561_jump:
		mov    $0x00000b,%edi
		mov    $0x000001,%edx
		mov    %di,_0ced84_data
		jmp    _0769ea_case

	_076577_jump:
		mov    $0x000004,%ecx
		mov    $0x000001,%edx
		mov    %cx,_0ced84_data
		jmp    _0769ea_case

	_07658d_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %bx,_0ced84_data
		jmp    _0769ea_case

	_0765a3_case:
		mov    _0cedd0_data,%ax
		sub    $0x000004,%eax
		cmp    $0x00000e,%ax
		ja     _0769ea_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0760c0_switch(,%eax,4)

	_0765c3_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _0769ea_case
		movw   $0x000011,_0ced84_data
		mov    $0x000001,%edx
		jmp    _0769ea_case

	_0765e1_case:
		mov    $0x000001,%edi
		mov    _094ab0_data,%bl
		mov    %di,_0cedea_data
		test   $0x000001,%bl
		jne    _0769ea_case
		mov    %bl,%bh
		mov    _094bc8_data,%cl
		or     $0x000004,%bh
		or     $0x000004,%cl
		mov    %bh,_094ab0_data
		mov    %cl,_094bc8_data
		jmp    _0769ea_case

	_07661b_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _0769ea_case
		mov    $0x000012,%esi
		mov    $0x000001,%edx
		mov    %si,_0ced84_data
		jmp    _0769ea_case

	_07663c_case:
		mov    $0x000001,%ebx
		mov    _094ac4_data,%cl
		mov    %bx,_0cedea_data
		test   $0x000001,%cl
		jne    _07665e_jump
		mov    %cl,%ch
		or     $0x000004,%ch
		mov    %ch,_094ac4_data

	_07665e_jump:
		mov    _094aec_data,%al
		test   $0x000001,%al
		jne    _0769ea_case
		mov    %al,%ah
		or     $0x000004,%ah
		mov    %ah,_094aec_data
		jmp    _0769ea_case

	_07667b_case:
		movw   $0x000001,_0cedea_data
		mov    _094ad8_data,%ah
		test   $0x000001,%ah
		jne    _0769ea_case
		mov    %ah,%bl
		or     $0x000004,%bl
		mov    %bl,_094ad8_data
		orb    $0x000004,_094bdc_data
		jmp    _0769ea_case

	_0766aa_case:
		mov    $0x000004,%esi
		mov    $0x000001,%edx
		mov    %si,_0ced84_data
		jmp    _0769ea_case

	_0766c0_case:
		mov    $0x000009,%ecx
		mov    $0x000001,%edx
		mov    %cx,_0ced84_data
		jmp    _0769ea_case

	_0766d6_case:
		mov    _0cedd0_data,%ax
		sub    $0x000002,%eax
		cmp    $0x00000b,%ax
		ja     _0769ea_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0760fc_switch(,%eax,4)

	_0766f6_case:
		mov    $0x000001,%ebx
		mov    _094b00_data,%ch
		mov    %bx,_0cedea_data
		test   $0x000001,%ch
		jne    _0769ea_case
		mov    %ch,%al
		or     $0x000004,%al
		mov    %al,_094b00_data
		jmp    _0769ea_case

	_07671f_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _0769ea_case
		movw   $0x00000c,_0ced84_data
		mov    $0x000001,%edx
		jmp    _0769ea_case

	_07673d_case:
		mov    $0x000001,%edi
		mov    _094b14_data,%bl
		mov    %di,_0cedea_data
		test   $0x000001,%bl
		jne    _0769ea_case
		mov    %bl,%bh
		mov    _094bf0_data,%cl
		or     $0x000004,%bh
		or     $0x000004,%cl
		mov    %bh,_094b14_data
		mov    %cl,_094bf0_data
		jmp    _0769ea_case

	_076777_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _0769ea_case
		mov    $0x00000d,%esi
		mov    $0x000001,%edx
		mov    %si,_0ced84_data
		jmp    _0769ea_case

	_076798_case:
		mov    $0x000001,%ebx
		mov    _094b28_data,%al
		mov    %bx,_0cedea_data
		test   $0x000001,%al
		jne    _0769ea_case
		mov    %al,%ah
		or     $0x000004,%ah
		mov    %ah,_094b28_data
		jmp    _0769ea_case

	_0767c1_case:
		mov    $0x000004,%eax
		mov    $0x000001,%edx
		mov    %ax,_0ced84_data
		jmp    _0769ea_case

	_0767d6_case:
		mov    $0x000009,%edi
		mov    $0x000001,%edx
		mov    %di,_0ced84_data
		jmp    _0769ea_case

	_0767ec_case:
		mov    _0cedd0_data,%ax
		sub    $0x000003,%eax
		cmp    $0x00000a,%ax
		ja     _0769ea_case
		and    $0x00ffff,%eax
		jmp    *%cs:_07612c_switch(,%eax,4)

	_07680c_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _0769ea_case

	_076817_jump:
		mov    $0x00000c,%esi
		mov    $0x000001,%edx
		mov    %si,_0ced84_data
		jmp    _0769ea_case

	_07682d_case:
		mov    $0x000001,%eax
		mov    _094b3c_data,%cl
		mov    %ax,_0cedea_data
		test   $0x000001,%cl
		jne    _0769ea_case
		mov    %cl,%ch
		or     $0x000004,%ch
		mov    %ch,_094b3c_data
		jmp    _0769ea_case

	_076857_case:
		mov    $0x000001,%edi
		mov    _094b50_data,%bl
		mov    %di,_0cedea_data
		test   $0x000001,%bl
		jne    _0769ea_case
		mov    %bl,%bh
		or     $0x000004,%bh
		mov    %bh,_094b50_data
		jmp    _0769ea_case

	_076882_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _0769ea_case
		mov    $0x00000d,%esi
		mov    $0x000001,%edx
		mov    %si,_0ced84_data
		jmp    _0769ea_case

	_0768a3_case:
		mov    $0x000001,%eax
		mov    _094b64_data,%ch
		mov    %ax,_0cedea_data
		test   $0x000001,%ch
		jne    _0769ea_case
		call   _034de0_func
		orb    $0x000004,_094b64_data
		orb    $0x000004,_094c04_data
		jmp    _0769ea_case

	_0768d5_case:
		mov    $0x000003,%edi
		mov    $0x000001,%edx
		mov    %di,_0ced84_data
		jmp    _0769ea_case

	_0768eb_case:
		mov    $0x000009,%esi
		mov    $0x000001,%edx
		mov    %si,_0ced84_data
		jmp    _0769ea_case

	_076901_case:
		mov    _0cedd0_data,%ax
		sub    $0x000002,%eax
		cmp    $0x00000a,%ax
		ja     _0769ea_case
		and    $0x00ffff,%eax
		jmp    *%cs:_076158_switch(,%eax,4)

	_076921_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07693e_jump
		mov    $0x00000c,%ecx
		mov    $0x000001,%edx
		mov    %cx,_0ced84_data
		jmp    _0769ea_case

	_07693e_jump:
		movw   $0x000001,_0cedea_data
		mov    _094b78_data,%bl
		test   $0x000001,%bl
		jne    _0769ea_case
		mov    %bl,%bh
		mov    _094c04_data,%cl
		or     $0x000004,%bh
		or     $0x000004,%cl
		mov    %bh,_094b78_data
		mov    %cl,_094c04_data
		jmp    _0769ea_case

	_076975_case:
		mov    $0x000001,%edi
		mov    _094b8c_data,%ch
		mov    %di,_0cedea_data
		test   $0x000001,%ch
		jne    _0769ea_case
		mov    %ch,%al
		or     $0x000004,%al
		mov    %al,_094b8c_data
		orb    $0x000004,_094c18_data
		jmp    _0769ea_case

	_07699e_case:
		movw   $0x000001,_0cedea_data
		call   _034de0_func
		jmp    _0769ea_case

	_0769ae_case:
		mov    $0x000002,%ecx
		mov    $0x000001,%edx
		mov    %cx,_0ced84_data
		jmp    _0769ea_case

	_0769c1_case:
		mov    _0cedd0_data,%ax
		cmp    $0x000004,%ax
		jne    _0769ea_case
		movw   $0x000001,_0cedea_data
		mov    $0x000001,%bl
		mov    %bl,_0cef96_data
		mov    %bl,_0cef90_data
		mov    %bl,_0cefd1_data

	_0769ea_case:
		mov    _094ba0_data,%bl
		test   $0x000001,%bl
		jne    _076a09_jump
		cmpb   $0x000066,_0cefb3_data
		jb     _076a09_jump
		mov    %bl,%cl
		or     $0x000004,%cl
		mov    %cl,_094ba0_data

	_076a09_jump:
		cmpw   $0x000000,_0cedea_data
		jne    _076a1f_jump
		test   %dx,%dx
		jne    _076a1f_jump
		incw   _0ced84_data

	_076a1f_jump:
		movw   $0x000001,_0cedd4_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076a30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    %eax,%esi
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _076b25_jump

	_076a4f_jump:
		cmpw   $0x000013,0x000060(%ecx)
		jne    _076b15_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _076b15_jump
		mov    0x000081(%ecx),%ah
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		call   _053dbc_func
		cmpl   $0x000000,0x000024(%ecx)
		je     _076a89_jump
		mov    %ecx,%eax
		call   _01f304_func

	_076a89_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x000062(%esi),%dl
		cmp    $0x00000a,%dl
		jne    _076ab6_jump
		mov    0x00002c(%esi),%ebp
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%dl
		mov    0x000069(%ecx),%al
		add    %ebp,%edx
		jmp    _076aed_jump

	_076ab6_jump:
		xor    %eax,%eax
		mov    %dl,%al
		testb  $0x000002,_092224_data(%eax)
		jne    _076ad9_jump
		mov    _0cdb98_data,%edx
		sar    $0x000010,%edx
		xor    %eax,%eax
		shl    $0x000004,%edx
		mov    0x000069(%ecx),%al
		sub    $0x000010,%edx
		jmp    _076aed_jump

	_076ad9_jump:
		mov    _0cdb98_data,%edx
		sar    $0x000010,%edx
		xor    %eax,%eax
		shl    $0x000004,%edx
		mov    0x000069(%ecx),%al
		sub    $0x000006,%edx

	_076aed_jump:
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01db8c_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d374_func
		movb   $0x000000,0x00006b(%ecx)
		orb    $0x000040,0x000081(%esi)
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076b15_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _076a4f_jump

	_076b25_jump:
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076b2c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		mov    (%ebx),%ebx
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000060(%edx),%bx
		cmp    $0x00000f,%bx
		jne    _076b6e_jump
		mov    0x000005(%eax),%dh
		movb   $0x0000ff,0x000001(%eax)
		and    $0x00000f,%dh
		movb   $0x000001,(%eax)
		mov    %dh,%bl
		mov    %dh,0x000005(%eax)
		or     $0x0000a0,%bl
		mov    %bl,0x000005(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_076b6e_jump:
		cmp    $0x00000d,%bx
		jne    _076b84_jump
		movb   $0x0000fe,0x000001(%eax)
		mov    0x000005(%eax),%dl
		movb   $0x000002,(%eax)
		and    $0x00000f,%dl
		mov    %dl,0x000005(%eax)

	_076b84_jump:
		pop    %edx
		pop    %ebx
		ret    



_076b88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    0x00006d(%eax),%ah
		test   %ah,%ah
		jne    _076d57_jump
		cmpb   $0x00000b,0x00006c(%esi)
		jne    _076d57_jump
		cmpw   $0x000000,0x000052(%esi)
		jne    _076d69_jump
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%dx
		xor    %al,%al
		test   %dx,%dx
		jle    _076d4a_jump

	_076bc8_jump:
		mov    0x000060(%ecx),%bx
		cmp    $0x00000d,%bx
		je     _076bdc_jump
		cmp    $0x00000f,%bx
		jne    _076d3a_jump

	_076bdc_jump:
		cmpl   $0x000000,0x000024(%ecx)
		jne    _076d3a_jump
		mov    0x000081(%esi),%al
		mov    0x000081(%ecx),%bh
		and    $0x000008,%al
		and    $0x0000f7,%bh
		movl   $0x000001,0x000024(%ecx)
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    $0x000002,%ebx
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f304_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _01d374_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000008(%eax),%eax
		mov    0x000012(%eax),%al
		mov    %al,0x00006a(%ecx)
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		mov    0x000081(%ecx),%bl
		sub    %eax,%edx
		test   $0x000008,%bl
		je     _076c61_jump
		mov    $0x000040,%eax
		jmp    _076c66_jump

	_076c61_jump:
		mov    $0xffffffc0,%eax

	_076c66_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000032(%ecx),%edx
		mov    $0x000018,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		testb  $0x000008,0x000081(%ecx)
		je     _076caf_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		jmp    _076cb8_jump

	_076caf_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_076cb8_jump:
		call   _05f030_func
		cmpw   $0x00000e,0x000060(%esi)
		jne    _076d1a_jump
		mov    _0cdbcc_data,%edi
		mov    0x000028(%esi),%eax
		sub    %edi,%eax
		test   %eax,%eax
		jge    _076cd5_jump
		neg    %eax

	_076cd5_jump:
		sar    $0x000005,%eax
		movw   $0x00000f,0x000060(%ecx)
		mov    %eax,%edi
		mov    0x00002c(%esi),%ebp
		mov    _0cdbd0_data,%eax
		sub    %ebp,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0cdbcc_data,%ebx
		mov    0x000028(%esi),%eax
		sub    %ebx,%eax
		test   %eax,%eax
		jge    _076d02_jump
		neg    %eax

	_076d02_jump:
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %di,%edx
		movb   $0x00000a,0x000072(%ecx)
		sub    %edx,%eax
		mov    %ax,0x000042(%ecx)
		jmp    _076d26_jump

	_076d1a_jump:
		movw   $0x00000d,0x000060(%ecx)
		movw   $0x000000,0x000042(%ecx)

	_076d26_jump:
		mov    %ecx,%eax
		call   _01db8c_func
		movw   $0x000001,0x000052(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076d3a_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _076bc8_jump

	_076d4a_jump:
		movw   $0x000001,0x000052(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076d57_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _076d69_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _076d69_jump
		movw   $0x000000,0x000052(%esi)

	_076d69_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076d70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    0x000032(%eax),%edx
		mov    _0ce434_data,%ebx
		sar    $0x000010,%edx
		mov    (%ebx,%edx,2),%dx
		cmp    0x000034(%eax),%dx
		je     _076deb_jump
		movswl %dx,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc300_data,%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		mov    0x000081(%edx),%bl
		movw   $0x000018,0x000060(%edx)
		and    $0x0000ef,%bl
		mov    %bl,0x000081(%edx)
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%cx
		mov    0x000069(%edx),%bl
		mov    0x00002c(%eax),%si
		add    %ecx,%ebx
		mov    0x000069(%eax),%al
		sub    %esi,%ebx
		xor    %ah,%ah
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %bx,%bx
		setle  %bl
		and    $0x0000ff,%ebx
		add    $0x000003,%ebx
		cwtl   
		mov    %bl,0x000070(%edx)
		test   %eax,%eax
		jge    _076de7_jump
		neg    %eax

	_076de7_jump:
		mov    %ax,0x000048(%edx)

	_076deb_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076df0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0cc300_data,%eax
		mov    _0cc304_data,%si
		xor    %dl,%dl
		xor    %ebx,%ebx
		test   %si,%si
		jle    _076e45_jump

	_076e0e_jump:
		cmpw   $0x000027,0x000060(%eax)
		jne    _076e3a_jump
		movzbl %dl,%edi
		mov    0x000034(%eax),%cx
		mov    %cx,(%esp,%edi,2)
		mov    0x000024(%eax),%ecx
		inc    %dl
		test   %ecx,%ecx
		jne    _076e31_jump
		movw   $0x00000a,0x000056(%eax)
		jmp    _076e35_jump

	_076e31_jump:
		incw   0x000056(%eax)

	_076e35_jump:
		cmp    $0x000002,%dl
		jae    _076e45_jump

	_076e3a_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jl     _076e0e_jump

	_076e45_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		mov    (%esp),%esi
		lea    (%eax,%edx,1),%ebp
		mov    %esi,%ebx
		xor    %al,%al

	_076e65_jump:
		movswl %bx,%edx
		imul   $0x000084,%edx,%edx
		movswl %si,%edi
		imul   $0x000084,%edi,%edi
		mov    _0cc300_data,%ecx
		add    %ecx,%edx
		add    %ecx,%edi
		mov    0x000056(%edx),%cx
		cmp    0x000056(%edi),%cx
		jle    _076e8f_jump
		mov    %ebx,%esi
		mov    %edx,%ebp

	_076e8f_jump:
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		mov    (%esp,%edx,2),%bx
		cmp    $0x000002,%al
		jb     _076e65_jump
		mov    %ebp,%eax
		movw   $0x000001,0x000056(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076eb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %ebp
		cmpl   $0x000001,_0bd560_data
		je     _076ec6_jump
		xor    %ebx,%ebx
		mov    %ebx,_0bd560_data

	_076ec6_jump:
		xor    %eax,%eax
		mov    _0cdc0e_data,%al
		lea    0x000000(,%eax,4),%ecx
		sub    %eax,%ecx
		mov    _0cdba8_data,%eax
		mov    0x00000a(%eax,%ecx,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0cdc0f_data,%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _076f9c_jump
		cmpl   $0x000000,_0bd560_data
		jne    _076fa4_jump
		call   _076df0_func
		mov    0x000024(%eax),%edi
		mov    %eax,%ecx
		test   %edi,%edi
		je     _076f18_jump
		call   _077338_func
		jmp    _076f1d_jump

	_076f18_jump:
		call   _01f304_func

	_076f1d_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000026,%ebx
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01d374_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    (%eax),%eax
		mov    0x000132(%eax),%al
		mov    _0cdbcc_data,%ebp
		mov    %al,0x00006a(%ecx)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cdc0c_data,%al
		mov    0x000068(%ecx),%dl
		add    %ebp,%eax
		sub    %edx,%eax
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		mov    _0cdbd0_data,%edx
		mov    _0cdc0d_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    %eax,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01db8c_func
		movl   $0x000001,_0bd560_data
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076f9c_jump:
		xor    %ecx,%ecx
		mov    %ecx,_0bd560_data

	_076fa4_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076fac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%dx
		xor    %ebx,%ebx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _077077_jump

	_076fcc_jump:
		cmpw   $0x000053,0x000060(%ecx)
		jne    _077067_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _077067_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%ecx),%ah
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01f304_func
		mov    0x000068(%esi),%bl
		mov    0x000028(%esi),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		sub    %ebx,%eax
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000069(%esi),%al
		mov    0x00002c(%esi),%esi
		mov    0x000069(%ecx),%bl
		add    %eax,%esi
		sub    %ebx,%esi
		mov    %ecx,%eax
		add    $0x00000a,%esi
		xor    %ebx,%ebx
		mov    %esi,0x00002c(%ecx)
		call   _01db8c_func
		mov    0x00006d(%ecx),%bl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%ecx),%al
		mov    0x000002(%ebx,%eax,8),%al
		movb   $0x000000,0x00006b(%ecx)
		movb   $0x000002,0x000073(%ecx)
		mov    %ecx,%ebx
		mov    %al,0x00006a(%ecx)
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_077067_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _076fcc_jump

	_077077_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077080_func:
		push   %edx
		mov    %eax,%edx
		call   _076fac_func
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%edx)
		pop    %edx
		ret    



_0770a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _077143_jump

	_0770be_jump:
		cmpw   $0x00008b,0x000060(%ecx)
		jne    _077133_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _077133_jump
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000042(%ecx)
		and    $0x0000f7,%ah
		movw   $0x000000,0x000040(%ecx)
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f304_func
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000007,0x000072(%ecx)
		jmp    _077143_jump

	_077133_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _0770be_jump

	_077143_jump:
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _05f030_func
		cmpb   $0x000014,0x000070(%esi)
		jne    _07716a_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%esi)

	_07716a_jump:
		mov    $0x00000c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077180_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0cdbcc_data,%ax
		mov    0x000028(%edx),%bx
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdc0c_data,%al
		mov    0x00002c(%edx),%cx
		add    %ebx,%eax
		mov    _0cdbd0_data,%bx
		mov    0x000069(%edx),%dl
		sub    %ecx,%ebx
		xor    %dh,%dh
		sub    %edx,%ebx
		mov    _0cdc0d_data,%dl
		add    %ebx,%edx
		test   %ax,%ax
		setg   %cl
		test   %dx,%dx
		setg   %ch
		test   %cl,%cl
		jne    _0771d2_jump
		neg    %eax

	_0771d2_jump:
		test   %ch,%ch
		jne    _0771d8_jump
		neg    %edx

	_0771d8_jump:
		cmp    $0x0000c8,%ax
		jle    _0771e6_jump
		cwtl   
		movswl %dx,%edx
		sar    %eax
		sar    %edx

	_0771e6_jump:
		test   %dx,%dx
		jne    _077203_jump
		test   %cl,%cl
		je     _0771f9_jump
		mov    $0x000180,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0771f9_jump:
		mov    $0x000080,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_077203_jump:
		cmp    %ax,%dx
		jle    _077223_jump
		movswl %ax,%ebx
		shl    $0x000006,%ebx
		movswl %dx,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cwtl   
		mov    _094a00_data(%eax),%al
		jmp    _077240_jump

	_077223_jump:
		movswl %dx,%edx
		shl    $0x000006,%edx
		movswl %ax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000080,%dl
		mov    _094a00_data(%eax),%dh
		mov    %dl,%al
		sub    %dh,%al

	_077240_jump:
		test   %cl,%cl
		je     _07725b_jump
		test   %ch,%ch
		je     _07724f_jump
		mov    $0x000180,%edx
		jmp    _077270_jump

	_07724f_jump:
		xor    %ah,%ah
		add    $0x000180,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07725b_jump:
		test   %ch,%ch
		je     _07726b_jump
		xor    %ah,%ah
		add    $0x000080,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07726b_jump:
		mov    $0x000080,%edx

	_077270_jump:
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07727c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cc2f8_data,%edx
		movswl (%edx),%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0cc300_data,%ecx
		shl    $0x000002,%edx
		xor    %ebx,%ebx
		add    %edx,%ecx
		mov    _0cc2fc_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07732f_jump
		mov    _0cc2fc_data,%si

	_0772b6_jump:
		cmpw   $0x00008f,0x000060(%ecx)
		jne    _07730e_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07730e_jump
		mov    $0x000014,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d374_func
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01f304_func
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		lea    (%ebx,%edx,1),%eax
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		lea    0x000000(,%edx,8),%ebx
		mov    (%eax),%edx
		mov    0x000002(%edx,%ebx,1),%al
		movb   $0x000000,0x00006b(%ecx)
		mov    %ecx,%ebx
		mov    %al,0x00006a(%ecx)
		jmp    _07732f_jump

	_07730e_jump:
		inc    %eax
		mov    _0cc2f8_data,%edx
		movswl %ax,%ecx
		movswl (%edx,%ecx,2),%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0cc300_data,%edx
		add    %edx,%ecx
		cmp    %si,%ax
		jl     _0772b6_jump

	_07732f_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077338_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%edi
		call   _07727c_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _0773f9_jump
		mov    0x000028(%edi),%edx
		mov    %edx,0x000028(%eax)
		mov    0x00002c(%edi),%edx
		mov    %edx,0x00002c(%eax)
		lea    0x00001c(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x000014(%esp),%ebx
		lea    0x000018(%esp),%edx
		call   _01d294_func
		lea    0x000018(%esp),%edx
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		lea    0x000010(%esp),%edx
		call   _01d294_func
		movl   $0x000001,0x000024(%esi)
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%ebx
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		sar    $0x000010,%ecx
		add    %edx,%ebx
		mov    0x000012(%esp),%edx
		sar    %ecx
		sar    $0x000010,%edx
		add    %ecx,%edx
		sub    %edx,%ebx
		add    %ebx,0x000028(%esi)
		mov    0x000016(%esp),%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		lea    (%ebx,%edx,1),%ecx
		mov    0x00001a(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		movb   $0x000001,0x00007e(%esi)
		add    %ebx,%edx
		mov    0x00002c(%esi),%ebx
		sub    %edx,%ecx
		movw   $0x000000,0x000050(%esi)
		add    %ecx,%ebx
		mov    %esi,%eax
		mov    %ebx,0x00002c(%esi)
		call   _01db8c_func

	_0773f9_jump:
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_077404_switch:
		.long   _077500_case
		.long   _0774cc_case
		.long   _0774d2_case
		.long   _0774e0_case
		.long   _0774e6_case




_077418_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		xor    %edx,%edx
		mov    %edx,0x000020(%esp)

	_077429_jump:
		call   _07727c_func
		mov    %eax,%esi
		mov    %eax,%edi
		test   %eax,%eax
		je     _077528_jump
		mov    0x000028(%ebp),%eax
		mov    %eax,0x000028(%esi)
		mov    0x00002c(%ebp),%eax
		lea    0x00000c(%esp),%ecx
		mov    %eax,0x00002c(%esi)
		mov    %esp,%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		lea    0x000014(%esp),%eax
		lea    0x000018(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%edx
		mov    %ebp,%eax
		call   _01d294_func
		mov    0x00000a(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    -0x000002(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %ebx,%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		movl   $0x000001,0x000024(%esi)
		sub    %edx,%ebx
		mov    0x000020(%esp),%esi
		mov    %ebx,%edx
		cmp    $0x000004,%si
		ja     _077500_case
		xor    %ebx,%ebx
		mov    %si,%bx
		jmp    *%cs:_077404_switch(,%ebx,4)

	_0774cc_case:
		add    0x000018(%esp),%eax
		jmp    _077500_case

	_0774d2_case:
		mov    0x000018(%esp),%ecx
		mov    0x000014(%esp),%esi
		add    %ecx,%eax
		add    %esi,%edx
		jmp    _077500_case

	_0774e0_case:
		add    0x000014(%esp),%edx
		jmp    _077500_case

	_0774e6_case:
		mov    0x000016(%esp),%ebx
		sar    $0x000010,%ebx
		cwtl   
		sar    %ebx
		add    %ebx,%eax
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%ebx
		movswl %dx,%edx
		sar    %ebx
		add    %ebx,%edx

	_077500_case:
		cwtl   
		mov    0x000028(%edi),%ebx
		mov    0x00002c(%edi),%ecx
		add    %eax,%ebx
		movswl %dx,%eax
		add    %eax,%ecx
		mov    %ecx,0x00002c(%edi)
		imul   $0x000005,0x000020(%esp),%eax
		movb   $0x000000,0x00007e(%edi)
		mov    %ax,0x000050(%edi)
		mov    %edi,%eax
		mov    %ebx,0x000028(%edi)
		call   _01db8c_func

	_077528_jump:
		mov    0x000020(%esp),%ebx
		inc    %ebx
		mov    %ebx,0x000020(%esp)
		cmp    $0x000004,%bx
		jle    _077429_jump
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077548_func:
		push   %ebx
		push   %edx
		call   _07727c_func
		test   %eax,%eax
		je     _077595_jump
		movb   $0x000000,0x00007e(%eax)
		mov    _0cee0e_data,%edx
		movb   $0x00000a,0x00007f(%eax)
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%eax),%bl
		movw   $0x0000ff,0x000050(%eax)
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x000028(%eax)
		mov    _0cedf8_data,%edx
		mov    0x000069(%eax),%bl
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%eax)
		add    %ebx,%edx
		mov    %edx,0x00002c(%eax)
		mov    0x000034(%eax),%ax
		pop    %edx
		pop    %ebx
		ret    

	_077595_jump:
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

_0775a0_switch:
		.long   _077688_case
		.long   _077699_case
		.long   _0776aa_case
		.long   _0776bb_case
		.long   _0776cc_case
		.long   _0776dd_case
		.long   _0776ee_case
		.long   _0776ff_case
		.long   _077710_case
		.long   _077721_case
		.long   _077732_case
		.long   _077743_case
		.long   _077754_case
		.long   _077765_case
		.long   _077776_case
		.long   _077787_case
		.long   _077798_case
		.long   _0777a9_case
		.long   _0777ba_case
		.long   _0777cb_case
		.long   _0777dc_case
		.long   _0777ed_case
		.long   _0777fe_case
		.long   _07780f_case
		.long   _077820_case
		.long   _077831_case
		.long   _077842_case
		.long   _077853_case
		.long   _077864_case
		.long   _077872_case
		.long   _077880_case
		.long   _07788e_case
		.long   _07789c_case
		.long   _0778aa_case
		.long   _0778b8_case
		.long   _0778c6_case




_077630_func:
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %dx,(%esp)
		mov    %ebx,%ecx
		mov    _0cc300_data,%edx
		mov    _0cc304_data,%ax
		xor    %ebx,%ebx
		test   %ax,%ax
		jle    _077948_jump

	_077654_jump:
		cmpw   $0x000092,0x000060(%edx)
		jne    _077938_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _077938_jump
		andb   $0x0000f7,0x000081(%edx)
		cmp    $0x000023,%cx
		ja     _0778d2_jump
		xor    %eax,%eax
		mov    %cx,%ax
		jmp    *%cs:_0775a0_switch(,%eax,4)

	_077688_case:
		movw   $0x000100,0x000056(%edx)
		movw   $0x000000,0x00004a(%edx)
		jmp    _0778d2_jump

	_077699_case:
		movw   $0x0000fc,0x000056(%edx)
		movw   $0x00ffd4,0x00004a(%edx)
		jmp    _0778d2_jump

	_0776aa_case:
		movw   $0x0000f0,0x000056(%edx)
		movw   $0x00ffa9,0x00004a(%edx)
		jmp    _0778d2_jump

	_0776bb_case:
		movw   $0x0000dd,0x000056(%edx)
		movw   $0x00ff80,0x00004a(%edx)
		jmp    _0778d2_jump

	_0776cc_case:
		movw   $0x0000c4,0x000056(%edx)
		movw   $0x00ff5c,0x00004a(%edx)
		jmp    _0778d2_jump

	_0776dd_case:
		movw   $0x0000a4,0x000056(%edx)
		movw   $0x00ff3c,0x00004a(%edx)
		jmp    _0778d2_jump

	_0776ee_case:
		movw   $0x000080,0x000056(%edx)
		movw   $0x00ff23,0x00004a(%edx)
		jmp    _0778d2_jump

	_0776ff_case:
		movw   $0x000057,0x000056(%edx)
		movw   $0x00ff10,0x00004a(%edx)
		jmp    _0778d2_jump

	_077710_case:
		movw   $0x00002c,0x000056(%edx)
		movw   $0x00ff04,0x00004a(%edx)
		jmp    _0778d2_jump

	_077721_case:
		movw   $0x00ff04,0x000056(%edx)
		movw   $0x00ffd4,0x00004a(%edx)
		jmp    _0778d2_jump

	_077732_case:
		movw   $0x00ff10,0x000056(%edx)
		movw   $0x00ffa9,0x00004a(%edx)
		jmp    _0778d2_jump

	_077743_case:
		movw   $0x00ff23,0x000056(%edx)
		movw   $0x00ff80,0x00004a(%edx)
		jmp    _0778d2_jump

	_077754_case:
		movw   $0x00ff3c,0x000056(%edx)
		movw   $0x00ff5c,0x00004a(%edx)
		jmp    _0778d2_jump

	_077765_case:
		movw   $0x00ff5c,0x000056(%edx)
		movw   $0x00ff3c,0x00004a(%edx)
		jmp    _0778d2_jump

	_077776_case:
		movw   $0x00ff80,0x000056(%edx)
		movw   $0x00ff23,0x00004a(%edx)
		jmp    _0778d2_jump

	_077787_case:
		movw   $0x00ffa9,0x000056(%edx)
		movw   $0x00ff10,0x00004a(%edx)
		jmp    _0778d2_jump

	_077798_case:
		movw   $0x00ffd4,0x000056(%edx)
		movw   $0x00ff04,0x00004a(%edx)
		jmp    _0778d2_jump

	_0777a9_case:
		movw   $0x000000,0x000056(%edx)
		movw   $0x00ff00,0x00004a(%edx)
		jmp    _0778d2_jump

	_0777ba_case:
		movw   $0x00ff00,0x000056(%edx)
		movw   $0x000000,0x00004a(%edx)
		jmp    _0778d2_jump

	_0777cb_case:
		movw   $0x00ff04,0x000056(%edx)
		movw   $0x00002c,0x00004a(%edx)
		jmp    _0778d2_jump

	_0777dc_case:
		movw   $0x00ff10,0x000056(%edx)
		movw   $0x000057,0x00004a(%edx)
		jmp    _0778d2_jump

	_0777ed_case:
		movw   $0x00ff23,0x000056(%edx)
		movw   $0x000080,0x00004a(%edx)
		jmp    _0778d2_jump

	_0777fe_case:
		movw   $0x00ff3c,0x000056(%edx)
		movw   $0x0000a4,0x00004a(%edx)
		jmp    _0778d2_jump

	_07780f_case:
		movw   $0x00ff5c,0x000056(%edx)
		movw   $0x0000c4,0x00004a(%edx)
		jmp    _0778d2_jump

	_077820_case:
		movw   $0x00ff80,0x000056(%edx)
		movw   $0x0000dd,0x00004a(%edx)
		jmp    _0778d2_jump

	_077831_case:
		movw   $0x00ffa9,0x000056(%edx)
		movw   $0x0000f0,0x00004a(%edx)
		jmp    _0778d2_jump

	_077842_case:
		movw   $0x00ffd4,0x000056(%edx)
		movw   $0x0000fc,0x00004a(%edx)
		jmp    _0778d2_jump

	_077853_case:
		movw   $0x0000fc,0x000056(%edx)
		movw   $0x00002c,0x00004a(%edx)
		jmp    _0778d2_jump

	_077864_case:
		movw   $0x0000f0,0x000056(%edx)
		movw   $0x000057,0x00004a(%edx)
		jmp    _0778d2_jump

	_077872_case:
		movw   $0x0000dd,0x000056(%edx)
		movw   $0x000080,0x00004a(%edx)
		jmp    _0778d2_jump

	_077880_case:
		movw   $0x0000c4,0x000056(%edx)
		movw   $0x0000a4,0x00004a(%edx)
		jmp    _0778d2_jump

	_07788e_case:
		movw   $0x0000a4,0x000056(%edx)
		movw   $0x0000c4,0x00004a(%edx)
		jmp    _0778d2_jump

	_07789c_case:
		movw   $0x000080,0x000056(%edx)
		movw   $0x0000dd,0x00004a(%edx)
		jmp    _0778d2_jump

	_0778aa_case:
		movw   $0x000057,0x000056(%edx)
		movw   $0x0000f0,0x00004a(%edx)
		jmp    _0778d2_jump

	_0778b8_case:
		movw   $0x00002c,0x000056(%edx)
		movw   $0x0000fc,0x00004a(%edx)
		jmp    _0778d2_jump

	_0778c6_case:
		movw   $0x000000,0x000056(%edx)
		movw   $0x000100,0x00004a(%edx)

	_0778d2_jump:
		movswl %si,%eax
		movw   $0x000000,0x000040(%edx)
		mov    %eax,0x000028(%edx)
		mov    -0x000002(%esp),%eax
		movw   $0x000000,0x000042(%edx)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000056(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    %cl,0x000076(%edx)
		call   _01db8c_func
		mov    0x000081(%edx),%cl
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%cl
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _01f304_func
		mov    $0x0000cd,%eax
		movswl %bx,%edx
		call   _06f3bc_func
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		ret    

	_077938_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %ax,%bx
		jl     _077654_jump

	_077948_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		ret    



_077950_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    _0cdc30_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _077991_jump
		mov    _0cedae_data,%edx
		mov    _0cedaa_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		mov    %eax,%edx
		mov    _0cedc8_data,%eax
		mov    _0cedac_data,%edi
		sar    $0x000010,%eax
		sar    $0x000010,%edi
		sar    %eax
		jmp    _0779a7_jump

	_077991_jump:
		xor    %edx,%edx
		mov    0x000028(%eax),%di
		mov    0x000068(%eax),%dl
		add    %edi,%edx
		movzbl 0x000069(%eax),%edi
		add    %edi,%edi
		mov    0x00002c(%eax),%eax
		sar    %edi

	_0779a7_jump:
		add    %edi,%eax
		mov    0x000028(%esi),%di
		sub    %edi,%edx
		mov    %edx,(%esp)
		xor    %edx,%edx
		mov    (%esp),%edi
		mov    0x000068(%esi),%dl
		sub    %edx,%edi
		mov    %di,0x000000(%ebp)
		xor    %edx,%edx
		movzbl 0x000074(%esi),%edi
		mov    0x000069(%esi),%dl
		add    %edx,%edi
		mov    0x00002c(%esi),%ebp
		sar    %edi
		cwtl   
		add    %ebp,%edi
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _0779dd_jump
		neg    %eax

	_0779dd_jump:
		mov    %ax,(%ebx)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		shl    $0x000002,%eax
		mov    %ax,(%ecx)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0779f4_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    $0xffffffff,%ebx
		xor    %eax,%eax

	_0779fe_jump:
		movswl %ax,%edx
		imul   $0x000282,%edx,%edx
		cmpw   $0x000000,_0c9200_data(%edx)
		jne    _077a21_jump
		mov    $0x000001,%esi
		mov    %eax,%ebx
		mov    %si,_0c9200_data(%edx)
		jmp    _077a28_jump

	_077a21_jump:
		inc    %eax
		cmp    $0x000008,%ax
		jl     _0779fe_jump

	_077a28_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_077a30_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ecx
		mov    %edx,%ebx
		call   _0779f4_func
		movswl %ax,%edx
		mov    %ax,0x00000c(%esp)
		cmp    $0xffffffff,%edx
		je     _077b28_jump
		mov    $0x000100,%edi
		lea    0x000000(,%edx,4),%eax
		shl    $0x000006,%ecx
		xor    %esi,%esi
		shl    $0x000006,%ebx
		mov    %si,0x000010(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)
		add    %edx,%eax
		mov    $0x000040,%esi
		shl    $0x000006,%eax
		mov    $0x000020,%ecx
		add    %edx,%eax
		mov    $_0c8f80_data,%edx
		add    %eax,%eax
		mov    $0x000080,%ebx
		add    %eax,%edx
		jmp    _077b06_jump

	_077a94_jump:
		mov    0x000004(%esp),%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    %ax,0x000002(%edx)
		movswl %bx,%eax
		add    $0x000002,%edx
		call   _069140_func
		sub    %edi,%eax
		add    $0x000002,%edx
		mov    %eax,(%esp)
		movswl %si,%eax
		add    $0x000002,%edx
		call   _069140_func
		sub    %ecx,%eax
		add    $0x000002,%edx
		mov    %ax,-0x000004(%edx)
		mov    (%esp),%eax
		mov    %ax,-0x000002(%edx)
		mov    $0x000008,%eax
		add    $0x000002,%edx
		call   _069140_func
		mov    %ax,0x000014(%esp)
		add    $0x000004,%ebx
		mov    0x000014(%esp),%al
		add    $0x000002,%edi
		add    $0x000008,%al
		add    $0x000004,%esi
		mov    %al,-0x000002(%edx)
		mov    0x000010(%esp),%eax
		add    $0x000002,%ecx
		inc    %eax
		movb   $0x000080,-0x000001(%edx)
		mov    %ax,0x000010(%esp)

	_077b06_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000040,%ebp
		shl    $0x000003,%eax
		sub    %eax,%ebp
		mov    %ebp,%eax
		mov    0x00000e(%esp),%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%eax
		jg     _077a94_jump

	_077b28_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_077b34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0cc58c_data,%ebp
		mov    _0cee06_data,%ax
		mov    _0cee08_data,%di
		xor    %edx,%edx
		shl    $0x000006,%eax
		shl    $0x000006,%edi
		mov    %dx,0x000004(%esp)
		mov    %eax,(%esp)

	_077b60_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000282,%eax,%eax
		cmpw   $0x000001,_0c9200_data(%eax)
		jne    _077c09_jump
		add    $_0c8f80_data,%eax
		xor    %esi,%esi
		xor    %edx,%edx

	_077b84_jump:
		cmpb   $0x000080,0x000009(%eax)
		jb     _077beb_jump
		mov    (%esp),%ecx
		mov    0x000004(%eax),%bx
		sub    %ecx,%ebx
		add    %bx,(%eax)
		mov    0x000006(%eax),%bx
		mov    0x000002(%eax),%cx
		sub    %edi,%ebx
		add    %ebx,%ecx
		mov    %cx,0x000002(%eax)
		mov    _0cc594_data,%ecx
		movswl (%eax),%ebx
		shl    $0x000006,%ecx
		cmp    %ecx,%ebx
		jg     _077bd1_jump
		mov    _0cc5a0_data,%ecx
		shl    $0x000006,%ecx
		cmp    %ecx,%ebx
		jl     _077bd1_jump
		mov    (%eax),%ecx
		mov    %ebp,%ebx
		sar    $0x000010,%ecx
		shl    $0x000006,%ebx
		cmp    %ebx,%ecx
		jl     _077bd7_jump

	_077bd1_jump:
		movb   $0x000000,0x000009(%eax)
		jmp    _077bdc_jump

	_077bd7_jump:
		mov    $0x000001,%esi

	_077bdc_jump:
		xor    %ebx,%ebx
		mov    0x000006(%eax),%cx
		mov    0x000008(%eax),%bl
		add    %ebx,%ecx
		mov    %cx,0x000006(%eax)

	_077beb_jump:
		inc    %edx
		add    $0x00000a,%eax
		cmp    $0x000040,%dx
		jl     _077b84_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000282,%eax,%eax
		mov    %si,_0c9200_data(%eax)

	_077c09_jump:
		mov    0x000004(%esp),%ebx
		inc    %ebx
		mov    %bx,0x000004(%esp)
		cmp    $0x000008,%bx
		jl     _077b60_jump
		mov    %ebp,_0cc58c_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077c30_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		call   _05f030_func
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0ce434_data,%eax
		movw   $0x000001,0x000052(%ecx)
		mov    (%edx,%eax,1),%ax
		cmp    0x000034(%ecx),%ax
		je     _077c9a_jump
		movswl %ax,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0cc300_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		cmpw   $0x0000a8,0x000060(%ecx)
		jne    _077c9a_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _05f030_func
		movw   $0x000001,0x000052(%ecx)

	_077c9a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077ca0_func:
		push   %edx
		mov    $_0cdba4_data,%eax
		mov    $0x000001,%edx
		call   _076184_func
		mov    %dx,_0cedd4_data
		pop    %edx
		ret    



_077cbc_func:
		push   %edx
		cmpb   $0x000000,_0cefd1_data
		jne    _077ce1_jump
		mov    _0cedea_data,%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		cmp    $0xffffffff,%eax
		setne  %al
		mov    %dl,_0cef9e_data
		mov    %al,_0cefdd_data

	_077ce1_jump:
		pop    %edx
		ret    



_077ce4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000015,%edx
		call   _01d364_func
		mov    _0cede4_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		cmpb   $0x00000a,0x000076(%eax)
		jne    _077d18_jump
		movb   $0x000005,0x000076(%eax)
		jmp    _077d28_jump

	_077d18_jump:
		mov    $0x000017,%ebx
		xor    %edx,%edx
		movb   $0x000001,0x000076(%eax)
		call   _01d374_func

	_077d28_jump:
		mov    _0cc300_data,%edx
		mov    _0cc304_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _077d8d_jump

	_077d3c_jump:
		cmpw   $0x0000de,0x000060(%edx)
		jne    _077d81_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _077d81_jump
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		movw   $0x000001,0x000042(%edx)
		mov    0x000081(%edx),%bl
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%bl
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		mov    %bl,0x000081(%edx)
		call   _01f304_func
		movb   $0x000004,0x000072(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_077d81_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _077d3c_jump

	_077d8d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077d94_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    _0cc300_data,%edx
		mov    _0cc304_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _077df8_jump

	_077daf_jump:
		cmpw   $0x0000dd,0x000060(%edx)
		jne    _077dec_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _077dec_jump
		movswl %cx,%eax
		sub    $0x00008e,%eax
		mov    %eax,0x000028(%edx)
		movswl %si,%eax
		sub    $0x000080,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f304_func
		orb    $0x000004,0x000081(%edx)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_077dec_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _077daf_jump

	_077df8_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_077dfc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cedd4_data,%esi
		sar    $0x000010,%esi
		cmp    $0xffffffff,%esi
		jne    _077e16_jump
		xor    %eax,%eax
		jmp    _077eac_jump

	_077e16_jump:
		movswl %ax,%ecx
		lea    0x000032(%ecx),%edx
		mov    $0x000065,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %ax,%ebx
		mov    $0x000005,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		imul   $0x000065,%ebx,%eax
		add    %esi,%edx
		sub    %eax,%ecx
		movswl %dx,%edx
		mov    %ecx,%eax
		mov    $0x000033,%ecx
		test   %eax,%eax
		jge    _077e50_jump
		neg    %eax

	_077e50_jump:
		sub    %eax,%ecx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006a(%ebx),%al
		mov    _0949f6_data(,%eax,2),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00006b(%ebx),%al
		add    %eax,%edx
		mov    $0x00000e,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %dx,%eax
		mov    _0949da_data(,%eax,2),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    $0x000032,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    0x00002c(%ebx),%edx
		sub    %eax,%edx
		mov    %edx,%eax

	_077eac_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077eb4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ebx
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _077f5c_jump

	_077ed2_jump:
		cmpw   $0x000085,0x000060(%ecx)
		jne    _077f4c_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _077f4c_jump
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f304_func
		mov    0x000028(%ebx),%eax
		mov    %eax,0x000028(%ecx)
		mov    $0x000002,%edx
		mov    0x00002c(%ebx),%ebx
		mov    %ecx,%eax
		mov    %ebx,0x00002c(%ecx)
		mov    $0x000012,%ebx
		call   _01d374_func
		mov    _0cee10_data,%di
		mov    0x000028(%ecx),%ax
		sub    %edi,%eax
		mov    %ax,0x000036(%ecx)
		mov    _0cedfa_data,%dx
		mov    0x00002c(%ecx),%ax
		movw   $0x00fffe,0x000042(%ecx)
		sub    %edx,%eax
		mov    %ax,0x000038(%ecx)
		mov    %ecx,%eax
		movw   $0x000001,0x000040(%ecx)
		call   _01db8c_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_077f4c_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _077ed2_jump

	_077f5c_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077f64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc300_data,%eax
		mov    _0cc304_data,%cx
		xor    %ebx,%ebx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _077f9b_jump

	_077f7f_jump:
		cmpw   $0x00004b,0x000060(%eax)
		jne    _077f90_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _077f90_jump
		mov    %eax,%ebx
		jmp    _077f9b_jump

	_077f90_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %cx,%dx
		jl     _077f7f_jump

	_077f9b_jump:
		test   %ebx,%ebx
		jne    _077fad_jump
		mov    $0x00004b,%eax
		call   _01d020_func
		mov    %eax,%ebx
		jmp    _077fb4_jump

	_077fad_jump:
		mov    %ebx,%eax
		call   _01f304_func

	_077fb4_jump:
		mov    0x000081(%ebx),%ah
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ebx)
		mov    0x000081(%ebx),%dl
		movw   $0x000000,0x00005e(%ebx)
		and    $0x0000bf,%dl
		mov    %dl,0x000081(%ebx)
		mov    0x000028(%esi),%eax
		sub    $0x000028,%eax
		mov    %eax,0x000028(%ebx)
		mov    0x00002c(%esi),%eax
		movb   $0x000000,0x00006a(%ebx)
		movb   $0x000001,0x00006b(%ebx)
		movb   $0x000000,0x00006d(%ebx)
		movb   $0x000000,0x00006f(%ebx)
		sub    $0x000014,%eax
		movb   $0x000000,0x00006e(%ebx)
		mov    %eax,0x00002c(%ebx)
		mov    %ebx,%eax
		movb   $0x000000,0x00006c(%ebx)
		call   _01db8c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078018_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ced80_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _078054_jump
		movw   $0x00ffff,_0ced82_data
		call   _056444_func
		mov    _0ced80_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,4)

	_078054_jump:
		mov    _0ced98_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _078091_jump
		mov    $0xffffffff,%ebx
		mov    _0cc300_data,%eax
		mov    %bx,_0ced9a_data
		mov    -0x000003(%eax),%ch
		sub    $0x000084,%eax
		mov    $0x000004,%bh
		and    $0x0000fb,%ch
		mov    %bh,_0cdc1a_data
		mov    %bh,_0ce4b3_data
		mov    %ch,0x000081(%eax)

	_078091_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0780a0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000050,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%edx
		mov    _0e5e90_data,%eax
		mov    %eax,0x000030(%esp)
		mov    0x000014(%eax),%eax
		xor    %ebx,%ebx
		mov    %eax,0x000044(%esp)
		mov    0x000030(%esp),%eax
		mov    %cx,%bx
		movw   $0x000000,(%eax)
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _0780d5_jump
		mov    %ebx,%eax

	_0780d5_jump:
		mov    0x000030(%esp),%ebx
		mov    %ax,0x000002(%ebx)
		test   %dx,%dx
		jl     _0780f2_jump
		mov    $0x000001,%eax
		movswl %dx,%ebx
		cmp    %ebx,%eax
		jge    _0780f0_jump
		mov    %ebx,%eax

	_0780f0_jump:
		jmp    _078104_jump

	_0780f2_jump:
		movswl %dx,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _078102_jump
		mov    %ebx,%eax

	_078102_jump:
		neg    %eax

	_078104_jump:
		mov    0x000030(%esp),%edx
		mov    %ax,0x00000c(%edx)
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     _078118_jump
		mov    %di,0x000004(%edx)

	_078118_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _078128_jump
		mov    0x000030(%esp),%eax
		mov    %si,0x000006(%eax)

	_078128_jump:
		mov    0x000030(%esp),%eax
		xor    %ebx,%ebx
		mov    0x00000e(%eax),%bx
		mov    $0x00013f,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000030(%esp),%eax
		mov    0x000002(%eax),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _07814b_jump
		mov    %ebx,%eax

	_07814b_jump:
		mov    0x000030(%esp),%ebx
		xor    %edx,%edx
		mov    0x00000e(%ebx),%dx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    0x000030(%esp),%edx
		cmp    %ebx,%eax
		jge    _078163_jump
		mov    %ebx,%eax

	_078163_jump:
		xor    %ebx,%ebx
		mov    0x00000e(%edx),%bx
		mov    %ax,0x000004(%edx)
		mov    $0x0000c7,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000004(%edx),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _078182_jump
		mov    %ebx,%eax

	_078182_jump:
		mov    0x000030(%esp),%ebx
		xor    %edx,%edx
		mov    0x00000e(%ebx),%dx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    0x000030(%esp),%edx
		cmp    %ebx,%eax
		jge    _07819a_jump
		mov    %ebx,%eax

	_07819a_jump:
		mov    %ax,0x000006(%edx)
		call   _07cf7e_func
		and    $0x000007,%eax
		cmp    $0x000004,%eax
		jge    _0781b1_jump
		mov    0x00000c(%edx),%ax
		jmp    _0781b7_jump

	_0781b1_jump:
		mov    0x00000c(%edx),%ax
		neg    %eax

	_0781b7_jump:
		mov    0x000030(%esp),%edx
		mov    %ax,0x000008(%edx)
		call   _07cf7e_func
		and    $0x000007,%eax
		cmp    $0x000004,%eax
		jge    _0781d2_jump
		mov    0x00000c(%edx),%ax
		jmp    _0781d8_jump

	_0781d2_jump:
		mov    0x00000c(%edx),%ax
		neg    %eax

	_0781d8_jump:
		mov    0x000030(%esp),%edx
		mov    %ax,0x00000a(%edx)
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     _078486_jump
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _078486_jump
		xor    %esi,%esi
		mov    0x00000e(%edx),%si
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		add    %eax,%eax
		call   _07b952_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x40590000,%edx
		xor    %eax,%eax
		call   _07c4c8_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07bb4f_func
		mov    %eax,0x000020(%esp)
		mov    %esi,%eax
		neg    %eax
		mov    %edx,0x000024(%esp)
		call   _07b952_func
		jmp    _078458_jump

	_078242_jump:
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07bb4f_func
		mov    %edx,0x00002c(%esp)
		mov    0x000030(%esp),%edx
		mov    %eax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		neg    %eax
		call   _07b952_func
		jmp    _07841e_jump

	_078271_jump:
		mov    %esi,%eax
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07bb4f_func
		mov    0x000028(%esp),%ebx
		mov    0x00002c(%esp),%ecx
		call   _07b998_func
		call   _07c13a_func
		mov    %eax,0x00004c(%esp)
		mov    %edx,%ebp
		mov    0x000020(%esp),%eax
		mov    0x000024(%esp),%edx
		mov    0x00004c(%esp),%ebx
		mov    %ebp,%ecx
		call   _07c6ce_func
		call   _07bb4f_func
		mov    0x00004c(%esp),%ebx
		mov    %ebp,%ecx
		call   _07bb4f_func
		call   _081302_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00004c(%esp),%eax
		mov    %ebp,%edx
		call   _07bb4f_func
		mov    %eax,0x00000c(%esp)
		mov    %edx,0x000038(%esp)
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   _081794_func
		jne    _078310_jump
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		call   _081794_func
		jne    _078310_jump
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%ebp
		mov    %esi,0x000034(%esp)
		mov    %edi,0x00003c(%esp)
		mov    %eax,0x000040(%esp)
		jmp    _0783cc_jump

	_078310_jump:
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _081821_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07c481_func
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000008(%esp)
		mov    %ebx,%eax
		mov    %ecx,%edx
		call   _07c45a_func
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    %eax,0x00001c(%esp)
		mov    %edx,(%esp)
		mov    0x00004c(%esp),%eax
		mov    %ebp,%edx
		call   _07bb4f_func
		mov    0x00001c(%esp),%ebx
		mov    (%esp),%ecx
		mov    %eax,0x000010(%esp)
		mov    %edx,0x000014(%esp)
		mov    0x00000c(%esp),%eax
		mov    0x000038(%esp),%edx
		call   _07bb4f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000010(%esp),%eax
		mov    0x000014(%esp),%edx
		call   _07b992_func
		mov    0x00001c(%esp),%ebx
		mov    (%esp),%ecx
		mov    %eax,0x000034(%esp)
		mov    %edx,0x00003c(%esp)
		mov    0x00004c(%esp),%eax
		mov    %ebp,%edx
		call   _07bb4f_func
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    %eax,0x000014(%esp)
		mov    %edx,%ebp
		mov    0x00000c(%esp),%eax
		mov    0x000038(%esp),%edx
		call   _07bb4f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000014(%esp),%eax
		mov    %ebp,%edx
		call   _07b998_func
		mov    %eax,0x000040(%esp)
		mov    %edx,%ebp

	_0783cc_jump:
		mov    0x000034(%esp),%eax
		mov    0x00003c(%esp),%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07b992_func
		call   _07c19c_func
		mov    0x000044(%esp),%edx
		mov    0x000048(%esp),%ebx
		mov    0x000018(%esp),%ecx
		mov    %al,(%edx)
		mov    0x000040(%esp),%eax
		mov    %ebp,%edx
		call   _07b992_func
		call   _07c19c_func
		mov    0x000044(%esp),%edx
		add    $0x000002,%edx
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		mov    %al,-0x000001(%edx)
		mov    %edx,0x000044(%esp)
		mov    %esi,%eax
		mov    %edi,%edx
		call   _07b998_func

	_07841e_jump:
		mov    %eax,%esi
		mov    %edx,%edi
		mov    0x000030(%esp),%edx
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		call   _07b95f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   _081794_func
		jle    _078271_jump
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		call   _07b998_func

	_078458_jump:
		mov    %eax,0x000048(%esp)
		mov    %edx,0x000018(%esp)
		mov    0x000030(%esp),%edx
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		call   _07b95f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		call   _081794_func
		jle    _078242_jump

	_078486_jump:
		add    $0x000050,%esp
		pop    %ebp
		pop    %edi
		pop    %esi

	_07848c_jump:
		ret    

	_078490_case:
		mov    _0e5e90_data,%eax
		test   %eax,%eax
		je     _07848c_jump
		cmpl   $0x000000,0x000014(%eax)
		je     _0784a7_jump
		add    $0x000014,%eax
		call   _07b83c_func

	_0784a7_jump:
		cmpl   $0x000000,_0e5e90_data
		je     _07848c_jump
		mov    $_0e5e90_data,%eax
		jmp    _07b83c_func



_0784bc_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    0x000020(%esp),%esi
		mov    %ax,0x000004(%esp)
		mov    %dx,0x000008(%esp)
		mov    %cx,(%esp)
		xor    %ah,%ah
		mov    %ah,0x00000c(%esp)
		test   %esi,%esi
		je     _078587_jump
		cmpl   $0x000000,0x000024(%esp)
		je     _078587_jump
		mov    $0x000020,%eax
		call   _07b824_func
		mov    %eax,%edx
		mov    %eax,_0e5e90_data
		test   %eax,%eax
		je     _078587_jump
		xor    %eax,%eax
		mov    %bx,%ax
		mov    $0x000030,%ebx
		cmp    %ebx,%eax
		jle    _078515_jump
		mov    %ebx,%eax

	_078515_jump:
		mov    %eax,%ebx
		mov    $0x000008,%eax
		cmp    %ebx,%eax
		jge    _078522_jump
		mov    %ebx,%eax

	_078522_jump:
		mov    %ax,0x00000e(%edx)
		add    %eax,%eax
		inc    %eax
		mov    %ax,0x000010(%edx)
		mov    0x00000e(%edx),%ax
		add    %eax,%eax
		mov    $0x00fa00,%ecx
		inc    %eax
		mov    _0cc638_data,%edi
		mov    %ax,0x000012(%edx)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07854d_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07854d_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _078556_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_078556_jump:
		mov    _0cc638_data,%eax
		mov    %eax,0x000018(%edx)
		mov    0x000024(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x00001c(%edx)
		xor    %eax,%eax
		mov    0x000012(%edx),%bx
		mov    0x000010(%edx),%ax
		imul   %ebx,%eax
		add    %eax,%eax
		call   _07b824_func
		mov    %eax,0x000014(%edx)
		test   %eax,%eax
		je     _078587_jump
		movb   $0x000001,0x00000c(%esp)

	_078587_jump:
		cmpb   $0x000000,0x00000c(%esp)
		je     _0785b1_jump
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%edx
		xor    %ecx,%ecx
		mov    0x000002(%esp),%eax
		mov    0x00001c(%esp),%cx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0780a0_func
		jmp    _0785b6_jump

	_0785b1_jump:
		call   _078490_case

	_0785b6_jump:
		mov    0x00000c(%esp),%al
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_0785c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e5e90_data,%edx
		mov    0x000008(%edx),%ax
		add    %ax,0x000004(%edx)
		mov    0x000006(%edx),%cx
		mov    0x00000a(%edx),%ax
		mov    0x000002(%edx),%ebx
		add    %eax,%ecx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		add    %ebx,%eax
		mov    %cx,0x000006(%edx)
		cmp    $0x000140,%eax
		jl     _078613_jump
		mov    $0x00013f,%ebx
		mov    0x00000e(%edx),%ax
		mov    0x000008(%edx),%si
		sub    %eax,%ebx
		neg    %esi
		mov    %bx,0x000004(%edx)
		mov    %si,0x000008(%edx)

	_078613_jump:
		mov    0x000002(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jge    _078633_jump
		mov    0x000008(%edx),%di
		mov    %ax,0x000004(%edx)
		neg    %edi
		mov    %di,0x000008(%edx)

	_078633_jump:
		mov    0x000004(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		add    %ebx,%eax
		cmp    $0x0000c8,%eax
		jl     _078661_jump
		mov    $0x0000c7,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		mov    0x00000a(%edx),%ax
		mov    %bx,0x000006(%edx)
		neg    %eax
		mov    %ax,0x00000a(%edx)

	_078661_jump:
		mov    0x000004(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jge    _078681_jump
		mov    0x00000a(%edx),%bx
		mov    %ax,0x000006(%edx)
		neg    %ebx
		mov    %bx,0x00000a(%edx)

	_078681_jump:
		mov    0x00000a(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _07868d_jump
		neg    %eax

	_07868d_jump:
		mov    (%edx),%cx
		add    %eax,%ecx
		mov    0x000002(%edx),%si
		mov    %cx,(%edx)
		cmp    %si,%cx
		jbe    _0786a3_jump
		movw   $0x000000,(%edx)

	_0786a3_jump:
		mov    (%edx),%ax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0786ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0e5e90_data,%ebp
		mov    $0x00fa00,%ecx
		xor    %ebx,%ebx
		mov    0x00001c(%ebp),%edi
		mov    0x000018(%ebp),%esi
		mov    0x000014(%ebp),%edx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0786d5_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0786d5_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _0786de_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_0786de_jump:
		mov    0x000002(%ebp),%eax
		mov    0x000004(%ebp),%ecx
		mov    0x00000e(%ebp),%bx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sub    %ebx,%ecx
		sub    %ebx,%eax
		mov    %ecx,%ebx
		mov    %ecx,0x000004(%esp)
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000018(%ebp),%esi
		mov    0x00001c(%ebp),%ecx
		add    %eax,%esi
		add    %eax,%ecx
		xor    %eax,%eax
		mov    $0x000140,%ebx
		mov    0x000010(%ebp),%ax
		sub    %eax,%ebx
		mov    %ebx,(%esp)
		xor    %ebx,%ebx
		mov    %ebx,0x000004(%esp)
		jmp    _078760_jump

	_078724_jump:
		xor    %edi,%edi
		jmp    _078746_jump

	_078728_jump:
		movsbl 0x000001(%edx),%ebx
		movsbl (%edx),%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		inc    %esi
		inc    %ecx
		add    $0x000002,%edx
		mov    -0x000001(%esi,%eax,1),%al
		inc    %edi
		mov    %al,-0x000001(%ecx)

	_078746_jump:
		xor    %eax,%eax
		mov    0x000010(%ebp),%ax
		cmp    %eax,%edi
		jl     _078728_jump
		mov    0x000004(%esp),%edi
		mov    (%esp),%eax
		inc    %edi
		add    %eax,%esi
		add    %eax,%ecx
		mov    %edi,0x000004(%esp)

	_078760_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x000012(%ebp),%ax
		cmp    %edi,%eax
		jg     _078724_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078780_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		cmp    $0x000001,%al
		ja     _078832_jump
		test   %al,%al
		jne    _07879d_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _0787a4_jump

	_07879d_jump:
		orb    $0x000008,0x000081(%ecx)

	_0787a4_jump:
		mov    %ecx,%eax
		call   _053ce4_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0787bf_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func

	_0787bf_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _078824_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _0787f7_jump
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		or     $0x000008,%ah
		mov    $0x000005,%edx
		mov    %ah,0x000081(%ecx)
		jmp    _07880f_jump

	_0787f7_jump:
		mov    0x000081(%ecx),%al
		mov    $0x000001,%ebx
		and    $0x0000f7,%al
		mov    $0x000004,%edx
		mov    %al,0x000081(%ecx)

	_07880f_jump:
		mov    %ecx,%eax
		call   _05f030_func
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)

	_078824_jump:
		mov    %ecx,%eax
		call   _053ce4_func
		mov    %ecx,%eax
		call   _0252c0_func

	_078832_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078838_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000003,0x00006c(%eax)
		jne    _078861_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%al
		mov    %al,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078861_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000001,%al
		jbe    _078884_jump
		cmp    $0x000014,%al
		jne    _0789d9_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078884_jump:
		test   %al,%al
		jne    _078891_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _078898_jump

	_078891_jump:
		orb    $0x000008,0x000081(%ecx)

	_078898_jump:
		mov    %ecx,%eax
		call   _053ce4_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0788b3_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func

	_0788b3_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _0788ef_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _0788d9_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _0788e0_jump

	_0788d9_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_0788e0_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _078960_jump

	_0788ef_jump:
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _07896f_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _07896f_jump
		cmpw   $0x000028,0x000060(%ecx)
		jne    _07896f_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _07893d_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _078944_jump

	_07893d_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_078944_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _078956_jump
		mov    $0x000001,%ebx
		mov    $0x000009,%edx
		jmp    _078960_jump

	_078956_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_078960_jump:
		mov    %ecx,%eax
		call   _05f030_func
		movb   $0x000005,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)

	_07896f_jump:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000074(%ecx),%al
		add    %edx,%eax
		test   %eax,%eax
		jl     _07898b_jump
		xor    %eax,%eax
		mov    0x000065(%ecx),%al
		testb  $0x000010,_092224_data(%eax)
		je     _07898f_jump

	_07898b_jump:
		incw   0x000042(%ecx)

	_07898f_jump:
		mov    %ecx,%eax
		call   _053ce4_func
		cmpb   $0x000002,0x00006d(%ecx)
		je     _0789a7_jump
		mov    %ecx,%eax
		call   _0252c0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0789a7_jump:
		mov    0x00006c(%ecx),%bl
		cmp    $0x000001,%bl
		je     _0789b4_jump
		cmp    $0x000003,%bl
		jne    _0789d9_jump

	_0789b4_jump:
		mov    0x000081(%ecx),%dh
		lea    0x000081(%ecx),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_0789d9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0789e0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _078a07_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		andb   $0x0000ef,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_078a07_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _05f030_func
		movb   $0x000007,0x000072(%ecx)
		mov    _0cdc30_data,%eax
		movb   $0x000002,0x000073(%ecx)
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _078a38_jump
		andb   $0x0000f7,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_078a38_jump:
		jge    _078a41_jump
		orb    $0x000008,0x000081(%ecx)

	_078a41_jump:
		pop    %ecx
		pop    %ebx
		ret    



_078a44_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x000060(%esi),%dx
		xor    %al,%al
		cmp    $0x000024,%dx
		jne    _078a7e_jump
		mov    0x00007f(%esi),%ah
		test   %ah,%ah
		je     _078a6d_jump
		cmpb   $0x000000,_0cef50_data
		jne    _078a6d_jump
		mov    %ah,%dh
		dec    %dh
		mov    %dh,0x00007f(%esi)

	_078a6d_jump:
		cmpb   $0x000000,0x00007f(%esi)
		jne    _078a7e_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _07912c_func
		mov    $0x000001,%al

	_078a7e_jump:
		test   %al,%al
		jne    _078ac9_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _024c98_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000001,_092224_data(%edx)
		je     _078aa9_jump
		mov    $0xffffffff,%edx
		mov    %esi,%eax
		call   _07912c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078aa9_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _078ac9_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _078ac9_jump
		lea    0x000042(%esi),%ebx
		push   $0x000003
		lea    0x000040(%esi),%edx
		mov    $0x00001e,%ecx
		mov    %esi,%eax
		call   _01e6fc_func

	_078ac9_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078ad0_func:
		push   %ebx
		push   %edx
		xor    %dl,%dl
		cmpb   $0x000000,0x00006d(%eax)
		jne    _078aed_jump
		mov    0x00006c(%eax),%bl
		test   %bl,%bl
		je     _078aeb_jump
		cmp    $0x00000e,%bl
		je     _078aeb_jump
		cmp    $0x000008,%bl
		jne    _078aed_jump

	_078aeb_jump:
		mov    $0x000001,%dl

	_078aed_jump:
		mov    %dl,%al
		pop    %edx
		pop    %ebx
		ret    



_078af4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		call   _078ad0_func
		test   %al,%al
		je     _078b3c_jump
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01db14_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _078b3c_jump
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _05f030_func

	_078b3c_jump:
		xor    %eax,%eax
		mov    _0cdbcc_data,%edx
		mov    _0cdc0c_data,%al
		mov    0x000028(%ecx),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%ecx),%dl
		sub    %edx,%eax
		test   %eax,%eax
		jge    _078b5d_jump
		neg    %eax

	_078b5d_jump:
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdbd0_data,%edi
		mov    _0cdc0d_data,%al
		lea    (%eax,%edi,1),%edx
		mov    0x00002c(%ecx),%ebp
		xor    %eax,%eax
		sub    %ebp,%edx
		mov    0x000069(%ecx),%al
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _078b83_jump
		neg    %eax

	_078b83_jump:
		mov    %eax,%edx
		mov    0x00006d(%ecx),%ah
		cmp    $0x000002,%ah
		je     _078c41_jump
		cmp    $0x000001,%ah
		je     _078c41_jump
		test   %ah,%ah
		jne    _078bdc_jump
		cmpb   $0x00000b,0x00006c(%ecx)
		jne    _078bdc_jump
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _078bdc_jump
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d374_func
		movw   $0x00fff9,0x000042(%ecx)
		movb   $0x000000,0x000071(%ecx)
		mov    0x00002c(%ecx),%eax
		movb   $0x000004,0x000072(%ecx)
		sub    $0x00000e,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _078c41_jump

	_078bdc_jump:
		mov    0x00007b(%ecx),%ah
		xor    %esi,%esi
		test   %ah,%ah
		je     _078c33_jump
		cmp    $0x0000aa,%bx
		jge    _078bf6_jump
		cmp    $0x000026,%dx
		jge    _078bf6_jump
		movb   $0x000001,0x00007d(%ecx)

	_078bf6_jump:
		mov    %ecx,%eax
		call   _078ad0_func
		test   %al,%al
		je     _078c33_jump
		cmp    $0x00005f,%bx
		jge    _078c1e_jump
		cmp    $0x000032,%dx
		jge    _078c1e_jump
		cmpb   $0x000000,0x00007f(%ecx)
		jne    _078c1e_jump
		mov    $0x000001,%esi
		movb   $0x000064,0x00007f(%ecx)
		jmp    _078c33_jump

	_078c1e_jump:
		cmpb   $0x000000,0x00007d(%ecx)
		je     _078c33_jump
		mov    0x00007f(%ecx),%bl
		test   %bl,%bl
		jne    _078c33_jump
		mov    $0xffffffff,%esi
		mov    %bl,0x00007d(%ecx)

	_078c33_jump:
		cmpw   $0x000000,0x000040(%ecx)
		jne    _078c41_jump
		mov    %ecx,%eax
		call   _07994c_func

	_078c41_jump:
		mov    0x00007f(%ecx),%bh
		test   %bh,%bh
		je     _078c4f_jump
		mov    %bh,%al
		dec    %al
		mov    %al,0x00007f(%ecx)

	_078c4f_jump:
		cmpw   $0x000000,0x000040(%ecx)
		jne    _078c5f_jump
		test   %si,%si
		je     _078d45_jump

	_078c5f_jump:
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _078c8a_jump
		mov    $0x000001,%ebx
		mov    $0x00000e,%edx
		jmp    _078d3e_jump

	_078c8a_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		jne    _078cc3_jump
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %edx,%eax
		cmp    $0x000020,%eax
		jl     _078cc3_jump
		mov    _0cede6_data,%edx
		sar    $0x000010,%edx
		add    $0x00010c,%edx
		cmp    %edx,%eax
		jle    _078d16_jump

	_078cc3_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		setne  %al
		and    $0x0000ff,%eax
		je     _078d16_jump
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%ebx
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    0x00007b(%ecx),%al
		mov    %ebx,0x000028(%ecx)
		test   %al,%al
		je     _078cfd_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _05f030_func
		movb   $0x000000,0x00006b(%ecx)
		jmp    _078d0e_jump

	_078cfd_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _05f030_func

	_078d0e_jump:
		movw   $0x000000,0x000040(%ecx)
		jmp    _078d45_jump

	_078d16_jump:
		mov    0x00006d(%ecx),%bl
		cmp    $0x000001,%bl
		je     _078d45_jump
		cmp    $0x000002,%bl
		je     _078d45_jump
		test   %si,%si
		jge    _078d34_jump
		mov    $0x000001,%ebx
		mov    $0x00000d,%edx
		jmp    _078d3e_jump

	_078d34_jump:
		mov    $0x000001,%ebx
		mov    $0x000011,%edx

	_078d3e_jump:
		mov    %ecx,%eax
		call   _05f030_func

	_078d45_jump:
		mov    %ecx,%eax
		call   _053ce4_func
		cmpb   $0x000002,0x00006d(%ecx)
		je     _078d59_jump
		mov    %ecx,%eax
		call   _0252c0_func

	_078d59_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078d60_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _078ad0_func
		test   %al,%al
		je     _078dbe_jump
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01db14_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _078da5_jump
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _05f030_func

	_078da5_jump:
		mov    0x00007f(%ecx),%dh
		test   %dh,%dh
		jne    _078db5_jump
		mov    %ecx,%eax
		call   _07994c_func
		jmp    _078dd5_jump

	_078db5_jump:
		mov    %dh,%bl
		dec    %bl
		mov    %bl,0x00007f(%ecx)
		jmp    _078dd5_jump

	_078dbe_jump:
		mov    %ecx,%eax
		call   _07994c_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _078dd5_jump
		cmpb   $0x000009,0x00006c(%ecx)
		jne    _078dd5_jump
		movb   $0x0000fa,0x00007f(%ecx)

	_078dd5_jump:
		mov    %ecx,%eax
		call   _0252c0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078de0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000070(%eax),%al
		test   %al,%al
		jbe    _078df5_jump
		cmp    $0x000001,%al
		je     _078e48_jump
		jmp    _078e8e_jump

	_078df5_jump:
		mov    0x000081(%edx),%bh
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%edx)
		call   _053ce4_func
		mov    0x00006c(%edx),%al
		cmp    $0x00000b,%al
		jb     _078e20_jump
		jbe    _078e94_jump
		cmp    $0x00000d,%al
		je     _078e34_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078e20_jump:
		cmp    $0x000009,%al
		jne    _078e9a_jump

	_078e28_jump:
		mov    0x000040(%edx),%ax
		mov    %ax,0x000042(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078e34_jump:
		mov    0x000040(%edx),%ax
		mov    %eax,%ecx
		mov    %ax,0x000042(%edx)
		neg    %ecx
		mov    %cx,0x000042(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078e48_jump:
		orb    $0x000008,0x000081(%edx)
		mov    %edx,%eax
		call   _053ce4_func
		mov    0x000081(%edx),%bl
		and    $0x0000f7,%bl
		mov    0x00006c(%edx),%al
		mov    %bl,0x000081(%edx)
		cmp    $0x00000c,%al
		jb     _078e76_jump
		jbe    _078e94_jump
		cmp    $0x00000e,%al
		je     _078e28_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078e76_jump:
		cmp    $0x00000a,%al
		jne    _078e9a_jump
		mov    0x000040(%edx),%ax
		mov    %eax,%ebx
		mov    %ax,0x000042(%edx)
		neg    %ebx
		mov    %bx,0x000042(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078e8e_jump:
		movw   $0x000000,0x000040(%edx)

	_078e94_jump:
		movw   $0x000000,0x000042(%edx)

	_078e9a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_078ea0_switch:
		.long   _078f0b_case
		.long   _078f47_case
		.long   _078f7b_case
		.long   _078fa7_case
		.long   _078fcd_case
		.long   _079006_case




_078eb8_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%ecx
		mov    %ebx,%esi
		cmpb   $0x000000,(%ebx)
		jne    _079066_jump
		xor    %ebx,%ebx
		mov    0x000028(%eax),%edi
		mov    0x000068(%eax),%bl
		add    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		sub    %ebx,%edi
		xor    %ebx,%ebx
		mov    %edi,0x000028(%ecx)
		mov    0x000069(%eax),%bl
		mov    0x00002c(%eax),%edx
		xor    %eax,%eax
		add    %edx,%ebx
		mov    0x000069(%ecx),%al
		sub    %eax,%ebx
		mov    0x00006c(%ecx),%al
		sub    $0x000009,%al
		mov    %ebx,0x00002c(%ecx)
		cmp    $0x000005,%al
		ja     _079038_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_078ea0_switch(,%eax,4)

	_078f0b_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000003,%edi
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%ebp
		mov    0x000069(%ecx),%bl
		sub    %eax,%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edx
		add    %ebx,%eax
		mov    %ebp,0x000028(%ecx)
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _079038_jump

	_078f47_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		add    %eax,0x000028(%ecx)
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		mov    $0x000003,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edi
		add    %ebx,%eax
		sub    %eax,%edi
		jmp    _079035_jump

	_078f7b_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000028(%ecx),%ebp
		sub    %ebx,%eax
		sub    %eax,%ebp
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		mov    %ebp,0x000028(%ecx)
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _079038_jump

	_078fa7_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		mov    0x000028(%ecx),%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edi
		mov    0x000069(%ecx),%al
		mov    %ebx,0x000028(%ecx)
		sub    %eax,%edi
		jmp    _079035_jump

	_078fcd_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000003,%edi
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%ebp
		mov    0x000069(%ecx),%bl
		sub    %eax,%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edx
		sub    %ebx,%eax
		mov    %ebp,0x000028(%ecx)
		add    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _079038_jump

	_079006_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		add    %eax,0x000028(%ecx)
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		mov    $0x000003,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edi
		sub    %ebx,%eax
		add    %eax,%edi

	_079035_jump:
		mov    %edi,0x00002c(%ecx)

	_079038_jump:
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f304_func
		andb   $0x0000bf,0x000081(%ecx)
		movb   $0x000001,(%esi)

	_079066_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07906c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		mov    %ah,0x000008(%esp)
		mov    %ah,0x000014(%esp)
		cmpw   $0x000000,0x000040(%esi)
		setg   %bl
		test   %bl,%bl
		jbe    _079097_jump
		cmp    $0x000001,%bl
		je     _0790ab_jump
		jmp    _0790bd_jump

	_079097_jump:
		mov    $0x00000c,%al
		mov    $0x00000a,%ch
		mov    %al,0x000018(%esp)
		mov    $0x00000e,%ah
		mov    %ch,0x00000c(%esp)
		mov    %ah,0x000010(%esp)
		jmp    _0790bd_jump

	_0790ab_jump:
		mov    $0x000009,%bl
		mov    $0x00000d,%cl
		mov    %bl,0x00000c(%esp)
		mov    $0x00000b,%bh
		mov    %cl,0x000010(%esp)
		mov    %bh,0x000018(%esp)

	_0790bd_jump:
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%bx
		xor    %edi,%edi
		mov    %ebx,(%esp)
		test   %bx,%bx
		jle    _079120_jump

	_0790d4_jump:
		cmpw   $0x00004f,0x000060(%ecx)
		jne    _079111_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _079111_jump
		mov    0x00000c(%esp),%dl
		mov    0x00006c(%ecx),%bl
		cmp    %dl,%bl
		jne    _0790f2_jump
		lea    0x000014(%esp),%ebx
		jmp    _079108_jump

	_0790f2_jump:
		cmp    0x000018(%esp),%bl
		jne    _0790fe_jump
		lea    0x000008(%esp),%ebx
		jmp    _079108_jump

	_0790fe_jump:
		cmp    0x000010(%esp),%bl
		jne    _079111_jump
		lea    0x000004(%esp),%ebx

	_079108_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _078eb8_func

	_079111_jump:
		mov    (%esp),%eax
		inc    %edi
		add    $0x000084,%ecx
		cmp    %ax,%di
		jl     _0790d4_jump

	_079120_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07912c_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _079145_jump
		mov    $0x000001,%edx
		mov    %ebx,%eax
		call   _01d364_func

	_079145_jump:
		mov    $0x000054,%eax
		call   _06fa90_func
		cmpl   $0x000000,0x000024(%ebx)
		je     _0791cf_jump
		cmpb   $0x000002,0x00006d(%ebx)
		jne    _079197_jump
		cmpb   $0x000001,0x00006c(%ebx)
		jne    _079197_jump
		mov    0x000028(%ebx),%ecx
		movw   $0x00ffff,0x000040(%ebx)
		add    $0x000014,%ecx
		mov    %ebx,%eax
		mov    %ecx,0x000028(%ebx)
		call   _07906c_func
		mov    0x000028(%ebx),%esi
		movw   $0x000001,0x000040(%ebx)
		sub    $0x000014,%esi
		mov    %ebx,%eax
		mov    %esi,0x000028(%ebx)
		call   _07906c_func
		addl   $0x00000a,0x000028(%ebx)
		jmp    _07919e_jump

	_079197_jump:
		mov    %ebx,%eax
		call   _07906c_func

	_07919e_jump:
		mov    0x000060(%ebx),%dx
		movl   $0x000000,0x000024(%ebx)
		cmp    $0x000024,%dx
		jne    _0791b8_jump
		andb   $0x0000fb,0x000081(%ebx)
		jmp    _0791c8_jump

	_0791b8_jump:
		mov    _0cedf8_data,%eax
		sar    $0x000010,%eax
		add    $0x0001e4,%eax
		mov    %eax,0x00002c(%ebx)

	_0791c8_jump:
		mov    %ebx,%eax
		call   _076fac_func

	_0791cf_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0791d4_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%ecx
		mov    %bl,0x000010(%esp)
		cmpw   $0x000023,0x000060(%eax)
		jne    _0793bc_jump
		mov    _0cc300_data,%esi
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _079524_jump

	_079205_jump:
		cmpw   $0x000024,0x000060(%esi)
		jne    _0793a5_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _0793a5_jump
		mov    0x000010(%esp),%bh
		movb   $0x0000c8,0x00007f(%esi)
		test   %bh,%bh
		je     _079249_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _07926e_jump

	_079249_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_07926e_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    %cx,0x000042(%esi)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		movsbw (%eax,%edx,8),%ax
		testb  $0x000008,0x000081(%esi)
		je     _079297_jump
		cwtl   
		jmp    _07929a_jump

	_079297_jump:
		cwtl   
		neg    %eax

	_07929a_jump:
		mov    $0x00007a,%ecx
		mov    %ax,0x000040(%esi)
		xor    %eax,%eax
		mov    $0x000035,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _0792bc_jump
		cmp    %ecx,%eax
		jg     _0792bc_jump
		mov    $0x000001,%eax
		jmp    _0792be_jump

	_0792bc_jump:
		xor    %eax,%eax

	_0792be_jump:
		test   %eax,%eax
		je     _0792c9_jump
		mov    $0x000003,%eax
		jmp    _0792f4_jump

	_0792c9_jump:
		mov    $0x000090,%ecx
		mov    $0x00007b,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _0792e5_jump
		cmp    %ecx,%eax
		jg     _0792e5_jump
		mov    $0x000001,%eax
		jmp    _0792e7_jump

	_0792e5_jump:
		xor    %eax,%eax

	_0792e7_jump:
		test   %eax,%eax
		je     _0792ef_jump
		xor    %eax,%eax
		jmp    _0792f4_jump

	_0792ef_jump:
		mov    $0xffffffff,%eax

	_0792f4_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _079524_jump
		lea    0x000008(%esp),%eax
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%ebx
		mov    %edi,%eax
		call   _01d710_func
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		xor    %eax,%eax
		mov    0x00000a(%esp),%edx
		mov    0x000074(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000028(%esi),%ax
		mov    %edx,0x00002c(%esi)
		mov    %ax,0x00003c(%esi)
		mov    $0x000002,%ebx
		mov    0x00002c(%esi),%ax
		mov    %ebx,%edx
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		call   _01d374_func
		mov    %esi,%eax
		call   _053ce4_func
		mov    %esi,%eax
		call   _01db8c_func
		movb   $0x000000,0x000071(%esi)
		movb   $0x000007,0x000072(%esi)
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f304_func
		andb   $0x0000bf,0x000081(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0793a5_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _079205_jump
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0793bc_jump:
		mov    _0cc300_data,%esi
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _079524_jump

	_0793d4_jump:
		cmpw   $0x00002c,0x000060(%esi)
		jne    _079514_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _079514_jump
		mov    0x000032(%esi),%edx
		mov    $0x00005a,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		cmpb   $0x000000,0x000010(%esp)
		je     _079423_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _079448_jump

	_079423_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_079448_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %cx,0x000042(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbw (%edx,%eax,8),%ax
		testb  $0x000008,0x000081(%esi)
		je     _079471_jump
		cwtl   
		jmp    _079474_jump

	_079471_jump:
		cwtl   
		neg    %eax

	_079474_jump:
		mov    %ax,0x000040(%esi)
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000007,%edx
		mov    %edi,%eax
		call   _01d710_func
		mov    -0x000002(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000006,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _05f030_func
		mov    %esi,%eax
		call   _01db8c_func
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f304_func
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_079514_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _0793d4_jump

	_079524_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07952c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _078780_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0795ee_jump
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _07954c_jump
		cmpb   $0x000090,0x00006b(%ecx)
		jae    _079552_jump

	_07954c_jump:
		movw   $0x000000,0x000052(%ecx)

	_079552_jump:
		mov    0x00006c(%ecx),%bl
		cmp    $0x000001,%bl
		je     _07955f_jump
		cmp    $0x000002,%bl
		jne    _07958d_jump

	_07955f_jump:
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _07958d_jump
		cmpb   $0x000000,0x00007b(%ecx)
		je     _07957c_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _079586_jump

	_07957c_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_079586_jump:
		mov    %ecx,%eax
		call   _05f030_func

	_07958d_jump:
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _0795f4_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _0795f4_jump
		cmpb   $0x000090,0x00006b(%ecx)
		jne    _0795f4_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _0795f4_jump
		mov    $0x000001,%ebx
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		call   _0791d4_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0795ee_jump:
		movw   $0x000000,0x000052(%ecx)

	_0795f4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0795f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _078780_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0796a4_jump
		cmpb   $0x000006,0x00006c(%ecx)
		je     _079618_jump
		movw   $0x000000,0x000052(%ecx)

	_079618_jump:
		mov    0x00006c(%ecx),%dh
		cmp    $0x000001,%dh
		je     _079625_jump
		cmp    $0x000006,%dh
		jne    _079653_jump

	_079625_jump:
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _079653_jump
		cmpb   $0x000000,0x00007b(%ecx)
		je     _079642_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _07964c_jump

	_079642_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_07964c_jump:
		mov    %ecx,%eax
		call   _05f030_func

	_079653_jump:
		cmpb   $0x000006,0x00006c(%ecx)
		jne    _0796aa_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _0796aa_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		dec    %eax
		xor    %edx,%edx
		mov    _0cef4e_data(%eax),%dl
		cmp    %eax,%edx
		jne    _0796aa_jump
		mov    $0x000001,%ebx
		xor    %eax,%edx
		mov    %ecx,%eax
		call   _0791d4_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0796a4_jump:
		movw   $0x000000,0x000052(%ecx)

	_0796aa_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0796b0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    %eax,%edi
		mov    %edx,0x000018(%esp)
		mov    _0cc300_data,%esi
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _079943_jump

	_0796d5_jump:
		cmpw   $0x000024,0x000060(%esi)
		jne    _079933_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _079933_jump
		mov    0x000018(%esp),%ecx
		movb   $0x0000c8,0x00007f(%esi)
		test   %cx,%cx
		je     _07971a_jump
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000081(%esi)
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _07973f_jump

	_07971a_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_07973f_jump:
		mov    0x00006d(%edi),%al
		mov    $0xffffffff,%edx
		test   %al,%al
		jne    _079777_jump
		cmpb   $0x00000d,0x00006c(%edi)
		jne    _079777_jump
		mov    $0x000065,%ecx
		xor    %eax,%eax
		mov    $0x000034,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _07976f_jump
		cmp    %ecx,%eax
		jg     _07976f_jump
		mov    $0x000001,%eax
		jmp    _079771_jump

	_07976f_jump:
		xor    %eax,%eax

	_079771_jump:
		test   %eax,%eax
		je     _0797ac_jump
		jmp    _0797a7_jump

	_079777_jump:
		cmpb   $0x000000,0x00006d(%edi)
		jne    _0797ac_jump
		cmpb   $0x000009,0x00006c(%edi)
		jne    _0797ac_jump
		mov    $0x000037,%ecx
		xor    %eax,%eax
		mov    $0x000010,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _0797a1_jump
		cmp    %ecx,%eax
		jg     _0797a1_jump
		mov    $0x000001,%eax
		jmp    _0797a3_jump

	_0797a1_jump:
		xor    %eax,%eax

	_0797a3_jump:
		test   %eax,%eax
		je     _0797ac_jump

	_0797a7_jump:
		mov    $0x000003,%edx

	_0797ac_jump:
		movswl %dx,%edx
		cmp    $0xffffffff,%edx
		je     _079943_jump
		lea    0x00000c(%esp),%eax
		push   %eax
		lea    0x000014(%esp),%eax
		lea    0x000018(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%ebx
		mov    %edi,%eax
		call   _01d710_func
		mov    0x000018(%esp),%eax
		cmp    $0x000001,%ax
		jb     _0797e5_jump
		jbe    _0797ff_jump
		cmp    $0x000002,%ax
		je     _079809_jump
		jmp    _079838_jump

	_0797e5_jump:
		test   %ax,%ax
		jne    _079838_jump
		mov    $0xfffffffe,%edx
		mov    _0cdcd3_data,%al
		mov    %edx,0x000004(%esp)
		dec    %al
		add    %al,0x000076(%edi)
		jmp    _079838_jump

	_0797ff_jump:
		movl   $0x000001,0x000004(%esp)
		jmp    _079838_jump

	_079809_jump:
		cmpb   $0x000002,_0cdc11_data
		jne    _079824_jump
		mov    _0cedf2_data,%ax
		mov    %ax,0x00004e(%esi)
		mov    _0cedf0_data,%ax
		jmp    _079834_jump

	_079824_jump:
		mov    _0cdbcc_data,%ax
		mov    %ax,0x00004e(%esi)
		mov    _0cdbd0_data,%ax

	_079834_jump:
		mov    %ax,0x00004c(%esi)

	_079838_jump:
		mov    0x000006(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		xor    %eax,%eax
		mov    0x000012(%esp),%edx
		mov    0x000074(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000028(%esi),%ax
		mov    %edx,0x00002c(%esi)
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    0x000018(%esp),%ebx
		mov    %ax,0x00003e(%esi)
		cmp    $0x000002,%bx
		je     _0798c7_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000081(%esi),%dl
		movsbw (%ebx,%eax,1),%ax
		test   $0x000008,%dl
		je     _0798af_jump
		cwtl   
		jmp    _0798b2_jump

	_0798af_jump:
		cwtl   
		neg    %eax

	_0798b2_jump:
		mov    %eax,(%esp)
		mov    %esi,%eax
		xor    %edx,%edx
		call   _053ce4_func
		mov    %esi,%eax
		call   _01d364_func
		jmp    _0798e9_jump

	_0798c7_jump:
		mov    $0x000001,%edx
		mov    $0x00001e,%ecx
		mov    %esi,%eax
		lea    0x000004(%esp),%ebx
		call   _01d364_func
		push   $0x000003
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _01e6fc_func

	_0798e9_jump:
		mov    (%esp),%eax
		mov    %ax,0x000040(%esi)
		mov    0x000004(%esp),%eax
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01db8c_func
		movb   $0x000000,0x000071(%esi)
		movb   $0x000007,0x000072(%esi)
		mov    0x000081(%esi),%dh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dh
		mov    %esi,%eax
		mov    %dh,0x000081(%esi)
		call   _01f304_func
		andb   $0x0000bf,0x000081(%esi)
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_079933_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _0796d5_jump

	_079943_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07994c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _079a5b_jump
		cmpb   $0x00000d,0x00006c(%ecx)
		jne    _079967_jump
		cmpb   $0x000065,0x00006b(%ecx)
		jae    _079979_jump

	_079967_jump:
		cmpb   $0x000009,0x00006c(%ecx)
		jne    _079973_jump
		cmpb   $0x000037,0x00006b(%ecx)
		jae    _079979_jump

	_079973_jump:
		movw   $0x000000,0x000052(%ecx)

	_079979_jump:
		mov    0x00006c(%ecx),%al
		test   %al,%al
		je     _079988_jump
		cmp    $0x00000e,%al
		je     _079988_jump
		cmp    $0x000008,%al
		jne    _0799b1_jump

	_079988_jump:
		cmpb   $0x000001,0x00006b(%ecx)
		jae    _0799b1_jump
		cmpb   $0x000002,0x00007b(%ecx)
		jb     _0799a0_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _0799aa_jump

	_0799a0_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx

	_0799aa_jump:
		mov    %ecx,%eax
		call   _05f030_func

	_0799b1_jump:
		mov    0x00006c(%ecx),%bh
		cmp    $0x00000d,%bh
		jne    _079a0c_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _079a61_jump
		cmpb   $0x000065,0x00006b(%ecx)
		jne    _079a61_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _079a61_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _0796b0_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079a0c_jump:
		cmp    $0x000009,%bh
		jne    _079a61_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _079a61_jump
		cmpb   $0x000037,0x00006b(%ecx)
		jne    _079a61_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %bh,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cef4d_data(%eax)
		jne    _079a61_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _0796b0_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079a5b_jump:
		movw   $0x000000,0x000052(%ecx)

	_079a61_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079a68_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %ebp
		mov    %eax,%ebp
		mov    %edx,%ebx
		cmp    $0x000008,%dx
		jb     _079a80_jump
		jbe    _079a8d_jump
		cmp    $0x000009,%dx
		je     _079a94_jump
		jmp    _079a99_jump

	_079a80_jump:
		cmp    $0x000007,%dx
		jne    _079a99_jump
		mov    $0xfffffffd,%esi
		jmp    _079a99_jump

	_079a8d_jump:
		mov    $0x000002,%esi
		jmp    _079a99_jump

	_079a94_jump:
		mov    $0xffffffff,%esi

	_079a99_jump:
		mov    _0cc300_data,%ecx
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _079b3c_jump

	_079ab1_jump:
		cmpw   $0x00006e,0x000060(%ecx)
		jne    _079b2c_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _079b2c_jump
		mov    $0x000002,%edx
		and    $0x0000ff,%ebx
		mov    %ecx,%eax
		call   _01d374_func
		movw   $0x00fffa,0x000042(%ecx)
		mov    %si,0x000040(%ecx)
		mov    0x000028(%ebp),%ebx
		mov    %ebx,0x000028(%ecx)
		mov    0x00002c(%ebp),%ebx
		mov    %ebx,0x00002c(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _05f030_func
		mov    %ecx,%eax
		call   _01db8c_func
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f304_func
		movb   $0x000000,0x000071(%ecx)
		mov    0x000081(%ecx),%dl
		movb   $0x000005,0x000072(%ecx)
		and    $0x0000bf,%dl
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_079b2c_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _079ab1_jump

	_079b3c_jump:
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_079b44_switch:
		.long   _079c14_case
		.long   _079c22_case
		.long   _079c30_case
		.long   _079c3e_case
		.long   _079c4c_case




_079b58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,(%esp)
		mov    $0x000054,%eax
		call   _06fa90_func
		mov    _0cc300_data,%ebp
		mov    _0cc304_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _079bac_jump

	_079b82_jump:
		cmpw   $0x00006e,0x000060(%ebp)
		jne    _079ba0_jump
		mov    %ebp,%edi

	_079b8b_jump:
		mov    0x0000e4(%edi),%cx
		add    $0x000084,%edi
		cmp    $0x00006e,%cx
		je     _079b8b_jump
		jmp    _079bac_jump

	_079ba0_jump:
		inc    %eax
		add    $0x000084,%ebp
		cmp    %dx,%ax
		jl     _079b82_jump

	_079bac_jump:
		cmpw   $0x00006e,0x000060(%ebp)
		jne    _079cd4_jump
		xor    %eax,%eax
		mov    %ax,0x00000c(%esp)

	_079bbe_jump:
		mov    %ebp,%esi
		cmp    %edi,%ebp
		ja     _079bd4_jump

	_079bc4_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _079bd4_jump
		add    $0x000084,%esi
		cmp    %edi,%esi
		jbe    _079bc4_jump

	_079bd4_jump:
		cmp    %edi,%esi
		ja     _079cc0_jump
		mov    $0x000002,%edx
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    0x00000c(%esp),%bl
		call   _01d374_func
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    0x00000c(%esp),%ecx
		mov    %ah,0x000081(%esi)
		cmp    $0x000004,%cx
		ja     _079c58_jump
		xor    %eax,%eax
		mov    %cx,%ax
		jmp    *%cs:_079b44_switch(,%eax,4)

	_079c14_case:
		movw   $0x000000,0x000042(%esi)
		movw   $0x000004,0x000040(%esi)
		jmp    _079c58_jump

	_079c22_case:
		movw   $0x000000,0x000042(%esi)
		movw   $0x00fffe,0x000040(%esi)
		jmp    _079c58_jump

	_079c30_case:
		movw   $0x00fffc,0x000042(%esi)
		movw   $0x00fffc,0x000040(%esi)
		jmp    _079c58_jump

	_079c3e_case:
		movw   $0x00fffc,0x000042(%esi)
		movw   $0x000002,0x000040(%esi)
		jmp    _079c58_jump

	_079c4c_case:
		movw   $0x00fffa,0x000042(%esi)
		movw   $0x00ffff,0x000040(%esi)

	_079c58_jump:
		lea    0x000004(%esp),%eax
		mov    0x00000a(%esp),%edx
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000018(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    0x000008(%esp),%eax
		call   _01d710_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		mov    $0x000001,%ebx
		sar    $0x000010,%eax
		mov    %ebx,%edx
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		call   _05f030_func
		mov    %esi,%eax
		call   _01db8c_func
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f304_func

	_079cc0_jump:
		mov    0x00000c(%esp),%edx
		inc    %edx
		mov    %dx,0x00000c(%esp)
		cmp    $0x000005,%dx
		jl     _079bbe_jump

	_079cd4_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_079ce0_switch:
		.long   _079dac_case
		.long   _079d92_case
		.long   _079d78_case
		.long   _079d3b_case




_079cf0_func:
		push   %ebx
		mov    %eax,%ebx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _079e0b_jump
		cmpw   $0x000000,_0cedee_data
		jl     _079e0b_jump
		mov    0x000032(%ebx),%edx
		mov    $0x000053,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		mov    0x000076(%ebx),%dl
		dec    %dl
		mov    %dl,%al
		mov    %dl,0x000076(%ebx)
		cmp    $0x000003,%dl
		ja     _079e0b_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_079ce0_switch(,%eax,4)

	_079d3b_case:
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d364_func
		mov    $0x000007,%edx
		mov    %ebx,%eax
		call   _079a68_func
		mov    _0cedec_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ebx
		shl    $0x000005,%ebx
		add    %eax,%ebx
		mov    _0cc300_data,%eax
		shl    $0x000002,%ebx
		mov    $0x000006,%edx
		add    %ebx,%eax
		call   _01d364_func
		pop    %ebx
		ret    

	_079d78_case:
		mov    $0x000006,%edx
		mov    %ebx,%eax
		call   _01d364_func
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _079a68_func
		pop    %ebx
		ret    

	_079d92_case:
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d364_func
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _079a68_func
		pop    %ebx
		ret    

	_079dac_case:
		mov    _0cedec_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc300_data,%edx
		cmpb   $0x000006,0x00006c(%edx,%eax,4)
		jne    _079e0b_jump
		mov    0x000032(%ebx),%edx
		mov    $0x000053,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _01d364_func
		mov    _0cedec_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc300_data,%eax
		shl    $0x000002,%edx
		movb   $0x000003,0x00006c(%edx,%eax,1)
		movb   $0x000004,0x00006e(%edx,%eax,1)
		movb   $0x00000a,0x00006e(%ebx)

	_079e0b_jump:
		pop    %ebx
		ret    



_079e10_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _079e7c_jump
		mov    %ecx,%eax
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _079e6c_jump
		mov    %ecx,%eax
		call   _079b58_func
		movl   $0x000000,0x000024(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0cdbee_data,%dx
		jne    _079e62_jump
		movw   $0x00ffff,_0cdbee_data
		mov    $0x000002,%ebx
		mov    $_0cdba4_data,%eax
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d374_func

	_079e62_jump:
		andb   $0x0000fb,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_079e6c_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d364_func
		movb   $0x000000,0x00006b(%ecx)

	_079e7c_jump:
		pop    %ecx
		pop    %ebx
		ret    



_079e80_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _079e93_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _079e9a_jump

	_079e93_jump:
		mov    %ecx,%eax
		call   _01e6dc_func

	_079e9a_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,(%esp)
		mov    %ecx,%eax
		mov    $0x000008,%edx
		call   _01db14_func
		mov    %ecx,%eax
		call   _05f030_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		mov    (%esp),%dh
		shr    $0x000007,%al
		cmp    %dh,%al
		je     _079ef7_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _05f030_func
		cmpw   $0x000023,0x000060(%ecx)
		jne    _079ef7_jump
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _0791d4_func

	_079ef7_jump:
		cmpb   $0x000003,0x000076(%ecx)
		jae    _079f40_jump
		cmpw   $0x000023,0x000060(%ecx)
		jne    _079f12_jump
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _0791d4_func

	_079f12_jump:
		cmpb   $0x000000,0x000076(%ecx)
		jne    _079f2e_jump
		mov    $0x000001,%ebx
		mov    0x000077(%ecx),%al
		xor    %edx,%edx
		mov    %al,0x000076(%ecx)
		mov    %ecx,%eax
		call   _05f030_func
		jmp    _079f40_jump

	_079f2e_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _05f030_func
		movb   $0x000002,0x000073(%ecx)

	_079f40_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_079f48_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		movb   $0x000000,0x00007f(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%bl
		call   _01db14_func
		mov    0x000032(%ecx),%edx
		mov    $0x000056,%eax
		sar    $0x000010,%edx
		call   _06f3bc_func
		mov    0x000081(%ecx),%dl
		shl    $0x000004,%bl
		shl    $0x000004,%dl
		shr    $0x000007,%bl
		shr    $0x000007,%dl
		cmp    %bl,%dl
		je     _079fa2_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000001,%ebx
		call   _0796b0_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _05f030_func
		pop    %ecx
		pop    %ebx
		ret    

	_079fa2_jump:
		cmpb   $0x00000f,0x000076(%ecx)
		jae    _079fe6_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _0796b0_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _079fce_jump
		mov    $0x000001,%ebx
		mov    0x000077(%ecx),%dl
		mov    %ecx,%eax
		mov    %dl,0x000076(%ecx)
		xor    %edx,%edx
		call   _05f030_func
		pop    %ecx
		pop    %ebx
		ret    

	_079fce_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		je     _079fe2_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _05f030_func

	_079fe2_jump:
		movb   $0x000002,0x000073(%ecx)

	_079fe6_jump:
		pop    %ecx
		pop    %ebx
		ret    



_079fec_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07a01a_jump
		mov    0x00006c(%eax),%dh
		cmp    $0x000001,%dh
		je     _07a029_jump
		cmp    $0x000002,%dh
		je     _07a029_jump
		cmp    $0x000005,%dh
		je     _07a029_jump
		cmp    $0x000006,%dh
		je     _07a029_jump
		cmp    $0x000003,%dh
		je     _07a029_jump
		cmp    $0x000007,%dh
		je     _07a029_jump
		cmp    $0x000004,%dh
		je     _07a029_jump

	_07a01a_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		call   _05f030_func

	_07a029_jump:
		pop    %edx
		pop    %ebx
		ret    



_07a02c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07a03d_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _07a049_jump

	_07a03d_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _07a062_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _07a062_jump

	_07a049_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05f030_func
		movb   $0x000007,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)

	_07a062_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a070_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%ebp
		mov    %edx,%eax
		lea    0x00c800(%edx),%eax
		mov    %ecx,%ebx
		mov    %eax,(%esp)

	_07a088_jump:
		mov    %ebp,%ecx
		mov    %edx,%edi
		mov    %ebx,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07a098_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07a098_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    (%esp),%ecx
		add    $0x000100,%edx
		add    $0x000140,%ebx
		cmp    %ecx,%edx
		jne    _07a088_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07a0bc_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %edx,%ecx
		mov    %ebx,%ebp
		mov    %eax,%edx
		add    $0x00c800,%eax
		mov    %ecx,%ebx
		mov    %eax,(%esp)

	_07a0d3_jump:
		mov    %ebp,%ecx
		mov    %ebx,%edi
		mov    %edx,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07a0e3_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07a0e3_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    (%esp),%ecx
		add    $0x000100,%edx
		add    $0x000140,%ebx
		cmp    %ecx,%edx
		jne    _07a0d3_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07a110_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07a132_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _07a132_jump
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		jmp    _07a1ac_jump

	_07a132_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000002,%al
		jb     _07a164_jump
		jbe    _07a1a5_jump
		cmp    $0x000014,%al
		jb     _07a1ac_jump
		ja     _07a1ac_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		mov    %ecx,%eax
		call   _07a340_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a164_jump:
		test   %al,%al
		jne    _07a171_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _07a178_jump

	_07a171_jump:
		orb    $0x000008,0x000081(%ecx)

	_07a178_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _07a184_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _07a190_jump

	_07a184_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _07a1ac_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _07a1ac_jump

	_07a190_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		mov    %ecx,%eax
		call   _053ce4_func

	_07a1a5_jump:
		mov    %ecx,%eax
		call   _0252c0_func

	_07a1ac_jump:
		mov    %ecx,%eax
		call   _07a340_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a1b8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dl,0x000010(%esp)
		lea    0x000008(%esp),%ecx
		movb   $0x000064,0x00007f(%eax)
		lea    0x000004(%esp),%eax
		mov    %esp,%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		testb  $0x000008,0x000081(%esi)
		je     _07a1fc_jump
		mov    0x000008(%esp),%eax
		mov    0x00000c(%esp),%ebx
		sub    $0x000010,%eax
		add    %eax,%ebx
		mov    %bx,0x00000c(%esp)
		jmp    _07a210_jump

	_07a1fc_jump:
		mov    0x000008(%esp),%eax
		mov    0x00000c(%esp),%edx
		add    $0x00004c,%eax
		sub    %eax,%edx
		mov    %dx,0x00000c(%esp)

	_07a210_jump:
		mov    0x000008(%esp),%ecx
		add    $0x00005c,%ecx
		mov    0x000004(%esp),%eax
		mov    %cx,0x000008(%esp)
		mov    $0x000001,%cl
		test   %ax,%ax
		js     _07a22c_jump
		sar    %cl,%ax
		jmp    _07a235_jump

	_07a22c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07a235_jump:
		add    $0x000002,%eax
		mov    $0x000002,%cl
		mov    %ax,0x000004(%esp)
		test   %ax,%ax
		js     _07a24b_jump
		sar    %cl,%ax
		jmp    _07a254_jump

	_07a24b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07a254_jump:
		mov    (%esp),%edi
		add    %eax,%edi
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000a(%esp),%eax
		mov    _0cedc8_data,%ecx
		sar    $0x000010,%eax
		mov    %di,0x000004(%esp)
		push   %eax
		mov    0x000006(%esp),%eax
		mov    _0cedae_data,%ebx
		sar    $0x000010,%eax
		mov    _0cedac_data,%edx
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    _0cedaa_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _07a30a_jump
		mov    $0x000001,%cl
		mov    _0cedb0_data,%ax
		test   %ax,%ax
		js     _07a2bd_jump
		sar    %cl,%ax
		jmp    _07a2c6_jump

	_07a2bd_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07a2c6_jump:
		mov    $0x000001,%cl
		mov    _0cedca_data,%ax
		test   %ax,%ax
		js     _07a2d8_jump
		sar    %cl,%ax
		jmp    _07a2e1_jump

	_07a2d8_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07a2e1_jump:
		mov    0x000081(%esi),%dl
		mov    $0x000007,%eax
		test   $0x000008,%dl
		jne    _07a2f8_jump
		cmpb   $0x000000,0x000010(%esp)
		je     _07a308_jump

	_07a2f8_jump:
		testb  $0x000008,0x000081(%esi)
		je     _07a30a_jump
		cmpb   $0x000001,0x000010(%esp)
		jne    _07a30a_jump

	_07a308_jump:
		neg    %eax

	_07a30a_jump:
		test   %ax,%ax
		je     _07a337_jump
		mov    _0cedd8_data,%dx
		add    %eax,%edx
		mov    _0cdc11_data,%cl
		mov    %dx,_0cedd8_data
		cmp    $0x000005,%cl
		je     _07a337_jump
		mov    $0x000008,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %ax,_0cedb2_data

	_07a337_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07a340_func:
		push   %ecx
		push   %edx
		mov    0x00007f(%eax),%dl
		test   %dl,%dl
		je     _07a350_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x00007f(%eax)

	_07a350_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07a389_jump
		cmpb   $0x000002,0x00006c(%eax)
		jne    _07a362_jump
		cmpb   $0x00000a,0x00006b(%eax)
		jae    _07a36a_jump

	_07a362_jump:
		mov    0x00006c(%eax),%ch
		cmp    $0x000004,%ch
		jne    _07a36e_jump

	_07a36a_jump:
		xor    %edx,%edx
		jmp    _07a384_jump

	_07a36e_jump:
		cmp    $0x000006,%ch
		jne    _07a379_jump
		cmpb   $0x00000a,0x00006b(%eax)
		jae    _07a37f_jump

	_07a379_jump:
		cmpb   $0x000007,0x00006c(%eax)
		jne    _07a389_jump

	_07a37f_jump:
		mov    $0x000001,%edx

	_07a384_jump:
		call   _07a1b8_func

	_07a389_jump:
		pop    %edx
		pop    %ecx
		ret    



_07a38c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		call   _05f030_func
		mov    %ecx,%eax
		call   _0255d0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a3ac_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		mov    _0cdc30_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _07a3cc_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _07a3d5_jump

	_07a3cc_jump:
		jge    _07a3d5_jump
		orb    $0x000008,0x000081(%ecx)

	_07a3d5_jump:
		cmpb   $0x000000,0x000076(%ecx)
		je     _07a3f8_jump
		mov    0x00002c(%ecx),%edx
		mov    $0x000001,%ebx
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000004,%edx
		call   _05f030_func
		pop    %ecx
		pop    %ebx
		ret    

	_07a3f8_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%ecx),%bl
		movb   $0x000002,0x000070(%ecx)
		and    $0x0000ef,%bl
		mov    %bl,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_07a41c_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00007f(%eax)
		jne    _07a44b_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07a430_jump
		cmpb   $0x000000,0x00006c(%eax)
		je     _07a43c_jump

	_07a430_jump:
		cmpb   $0x000001,0x00006d(%eax)
		jne    _07a44b_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _07a44b_jump

	_07a43c_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		call   _05f030_func

	_07a44b_jump:
		pop    %edx
		pop    %ebx
		ret    



_07a450_func:
		push   %esi
		push   %edi
		push   %ebp
		movswl %bx,%ebx
		movswl %cx,%ecx
		mov    0x000028(%eax),%edi
		mov    0x00002c(%eax),%ebp
		add    %edi,%ebx
		lea    (%ecx,%ebp,1),%edi
		mov    _0cdb98_data,%cx
		sar    $0x000004,%edi
		imul   %edi,%ecx
		sar    $0x000004,%ebx
		add    %ebx,%ecx
		xor    %esi,%esi
		mov    %cx,(%edx)
		cmp    0x000058(%eax),%cx
		je     _07a4eb_jump
		mov    %cx,0x000058(%eax)
		mov    _0cdb96_data,%ecx
		movswl %bx,%eax
		sar    $0x000010,%ecx
		xor    %ebx,%ebx
		dec    %ecx
		cmp    %ebx,%eax
		jl     _07a4a3_jump
		cmp    %ecx,%eax
		jg     _07a4a3_jump
		mov    $0x000001,%eax
		jmp    _07a4a5_jump

	_07a4a3_jump:
		xor    %eax,%eax

	_07a4a5_jump:
		test   %eax,%eax
		je     _07a4eb_jump
		mov    _0cdb98_data,%ecx
		movswl %di,%eax
		sar    $0x000010,%ecx
		xor    %ebx,%ebx
		dec    %ecx
		cmp    %ebx,%eax
		jl     _07a4c7_jump
		cmp    %ecx,%eax
		jg     _07a4c7_jump
		mov    $0x000001,%eax
		jmp    _07a4c9_jump

	_07a4c7_jump:
		xor    %eax,%eax

	_07a4c9_jump:
		test   %eax,%eax
		je     _07a4eb_jump
		movswl (%edx),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdba0_data,%edx
		cmpb   $0x000001,0x000002(%edx,%eax,2)
		sete   %al
		xor    %ah,%ah
		mov    %eax,%esi

	_07a4eb_jump:
		mov    %esi,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

_07a4f4_switch:
		.long   _07a7b3_case
		.long   _07a828_case
		.long   _07a80c_case
		.long   _07a7f0_case
		.long   _07a774_case
		.long   _07a7ae_case
		.long   _07a7cf_case
		.long   _07a807_case
		.long   _07a61d_case
		.long   _07a682_case
		.long   _07a682_case
		.long   _07a6fc_case
		.long   _07a6fc_case




_07a528_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    0x000081(%eax),%ah
		and    $0x0000f7,%ah
		mov    0x00006d(%edi),%dl
		mov    %ah,0x000081(%edi)
		test   %dl,%dl
		jne    _07a869_jump
		cmpb   $0x00000e,0x00006c(%edi)
		jne    _07a869_jump
		mov    %esp,%edx
		mov    %edi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    0x000069(%edi),%cl
		mov    0x000068(%edi),%bl
		call   _07a450_func
		test   %ax,%ax
		je     _07a869_jump
		mov    _0ce4b2_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc300_data,%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		mov    _0ce57c_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _07a869_jump

	_07a59f_jump:
		cmpw   $0x0000a3,0x000060(%edx)
		jne    _07a83d_jump
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%ecx
		mov    0x000069(%edx),%bl
		add    %ecx,%ebx
		mov    _0cdb96_data,%ecx
		sar    $0x000004,%ebx
		sar    $0x000010,%ecx
		imul   %ebx,%ecx
		xor    %ebx,%ebx
		mov    0x000028(%edx),%esi
		mov    0x000068(%edx),%bl
		add    %esi,%ebx
		sar    $0x000004,%ebx
		add    %ecx,%ebx
		cmp    (%esp),%bx
		jne    _07a83d_jump
		mov    0x000042(%edi),%si
		movswl %si,%eax
		mov    0x000040(%edi),%cx
		test   %eax,%eax
		jge    _07a5ee_jump
		neg    %eax

	_07a5ee_jump:
		mov    %eax,%ebx
		movswl %cx,%eax
		test   %eax,%eax
		jge    _07a5f9_jump
		neg    %eax

	_07a5f9_jump:
		cmp    %ebx,%eax
		jge    _07a5ff_jump
		mov    %ebx,%eax

	_07a5ff_jump:
		mov    0x00006c(%edx),%bl
		mov    %eax,0x000004(%esp)
		cmp    $0x00000c,%bl
		ja     _07a82c_jump
		and    $0x0000ff,%ebx
		jmp    *%cs:_07a4f4_switch(,%ebx,4)

	_07a61d_case:
		test   %cx,%cx
		jne    _07a63d_jump
		test   %si,%si
		jle    _07a630_jump
		mov    %eax,%esi
		neg    %esi
		jmp    _07a82c_jump

	_07a630_jump:
		jge    _07a82c_jump
		mov    %eax,%esi
		jmp    _07a82c_jump

	_07a63d_jump:
		test   %si,%si
		jne    _07a66d_jump
		test   %cx,%cx
		jle    _07a658_jump
		mov    %eax,%ecx
		neg    %ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		jmp    _07a869_jump

	_07a658_jump:
		jge    _07a82c_jump
		mov    %eax,%ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		jmp    _07a869_jump

	_07a66d_jump:
		neg    %ecx
		neg    %esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a682_case:
		cmpb   $0x000009,0x00006c(%edx)
		jne    _07a68f_jump
		mov    $0x000001,%eax
		jmp    _07a694_jump

	_07a68f_jump:
		mov    $0xffffffff,%eax

	_07a694_jump:
		test   %si,%si
		jne    _07a6e0_jump
		test   %cx,%cx
		jle    _07a6bc_jump
		mov    0x000004(%esp),%ecx
		add    %eax,%ecx
		cmp    $0x000004,%cx
		jle    _07a6af_jump
		mov    $0x000004,%ecx

	_07a6af_jump:
		cmp    $0x000002,%cx
		jge    _07a6e0_jump
		mov    $0x000002,%ecx
		jmp    _07a6e0_jump

	_07a6bc_jump:
		jge    _07a6e0_jump
		mov    0x000004(%esp),%edx
		mov    %eax,%ecx
		sub    %edx,%ecx
		movswl %cx,%eax
		cmp    $0xfffffffe,%eax
		jle    _07a6d3_jump
		mov    $0xfffffffe,%ecx

	_07a6d3_jump:
		movswl %cx,%eax
		cmp    $0xfffffffc,%eax
		jge    _07a6e0_jump
		mov    $0xfffffffc,%ecx

	_07a6e0_jump:
		test   %cx,%cx
		je     _07a82c_jump
		xor    %esi,%esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a6fc_case:
		cmpb   $0x00000b,0x00006c(%edx)
		jne    _07a709_jump
		mov    $0x000001,%eax
		jmp    _07a70e_jump

	_07a709_jump:
		mov    $0xffffffff,%eax

	_07a70e_jump:
		test   %cx,%cx
		jne    _07a758_jump
		test   %si,%si
		jle    _07a736_jump
		mov    0x000004(%esp),%esi
		add    %eax,%esi
		cmp    $0x000004,%si
		jle    _07a729_jump
		mov    $0x000004,%esi

	_07a729_jump:
		cmp    $0x000002,%si
		jge    _07a758_jump
		mov    $0x000002,%esi
		jmp    _07a758_jump

	_07a736_jump:
		jge    _07a758_jump
		mov    0x000004(%esp),%esi
		sub    %esi,%eax
		mov    %eax,%esi
		cwtl   
		cmp    $0xfffffffe,%eax
		jle    _07a74b_jump
		mov    $0xfffffffe,%esi

	_07a74b_jump:
		movswl %si,%eax
		cmp    $0xfffffffc,%eax
		jge    _07a758_jump
		mov    $0xfffffffc,%esi

	_07a758_jump:
		test   %si,%si
		je     _07a82c_jump
		xor    %ecx,%ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a774_case:
		test   %cx,%cx
		jne    _07a78e_jump
		mov    %eax,%ecx
		xor    %esi,%esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a78e_jump:
		test   %si,%si
		jne    _07a82c_jump
		mov    %eax,%esi
		xor    %ecx,%ecx
		neg    %esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a7ae_case:
		test   %cx,%cx
		jne    _07a7c8_jump

	_07a7b3_case:
		mov    %eax,%ecx
		xor    %esi,%esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a7c8_jump:
		test   %si,%si
		jne    _07a82c_jump
		jmp    _07a828_case

	_07a7cf_case:
		test   %cx,%cx
		jne    _07a7eb_jump
		mov    %eax,%ecx
		xor    %esi,%esi
		neg    %ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a7eb_jump:
		test   %si,%si
		jne    _07a82c_jump

	_07a7f0_case:
		mov    %eax,%esi
		xor    %ecx,%ecx
		neg    %esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a807_case:
		test   %cx,%cx
		jne    _07a823_jump

	_07a80c_case:
		mov    %eax,%ecx
		xor    %esi,%esi
		neg    %ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a823_jump:
		test   %si,%si
		jne    _07a82c_jump

	_07a828_case:
		mov    %eax,%esi
		xor    %ecx,%ecx

	_07a82c_jump:
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a83d_jump:
		inc    %eax
		movswl %ax,%edx
		mov    _0ce4b2_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc300_data,%ebx
		mov    _0ce57c_data,%cx
		add    %ebx,%edx
		cmp    %cx,%ax
		jl     _07a59f_jump

	_07a869_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a874_func:
		push   %edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000003,%dl
		ja     _07a892_jump
		mov    0x000081(%eax),%dl
		movb   $0x000004,0x00007e(%eax)
		and    $0x0000f7,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    

	_07a892_jump:
		movb   $0x000000,0x00007e(%eax)
		pop    %edx
		ret    

_07a898_switch:
		.long   _07a91f_case
		.long   _07a926_case
		.long   _07a92d_case
		.long   _07a934_case




_07a8a8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000005,0x00006d(%eax)
		jne    _07a93b_jump
		cmpb   $0x000035,0x00006c(%ecx)
		jne    _07a93b_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000eb,%eax
		sar    $0x000010,%edx
		mov    $0x000036,%ebx
		call   _06f3bc_func
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d374_func
		mov    0x000032(%ecx),%eax
		mov    _0ce434_data,%edx
		sar    $0x000010,%eax
		movswl (%edx,%eax,2),%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0cc300_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpw   $0x0000a3,0x000060(%eax)
		jne    _07a93b_jump
		mov    0x00006c(%eax),%cl
		cmp    $0x000003,%cl
		ja     _07a93b_jump
		xor    %edx,%edx
		mov    %cl,%dl
		jmp    *%cs:_07a898_switch(,%edx,4)

	_07a91f_case:
		mov    $0x000001,%edx
		jmp    _07a936_jump

	_07a926_case:
		mov    $0x000002,%edx
		jmp    _07a936_jump

	_07a92d_case:
		mov    $0x000003,%edx
		jmp    _07a936_jump

	_07a934_case:
		xor    %edx,%edx

	_07a936_jump:
		call   _01d364_func

	_07a93b_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07a940_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07a96b_jump
		cmpb   $0x00000d,0x00006c(%ecx)
		jne    _07a96b_jump
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)

	_07a96b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a970_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%edi
		mov    %edx,%ebx
		mov    $0x000140,%eax
		mov    _0e5e94_data,%esi
		mov    %eax,%edx
		movzbl (%esi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %al,0x000018(%esp)
		mov    $0x0000c8,%eax
		mov    %eax,%edx
		movzbl 0x000001(%esi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00001c(%esi),%ecx
		mov    %al,0x000014(%esp)
		call   _010010_func
		movw   $0x000000,0x000004(%esi)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _07a9c8_jump
		mov    %ebx,%eax

	_07a9c8_jump:
		mov    %ax,0x000006(%esi)
		test   %di,%di
		jl     _07a9e1_jump
		mov    $0x000001,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _07a9df_jump
		mov    %ebx,%eax

	_07a9df_jump:
		jmp    _07a9f3_jump

	_07a9e1_jump:
		movswl %di,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _07a9f1_jump
		mov    %ebx,%eax

	_07a9f1_jump:
		neg    %eax

	_07a9f3_jump:
		mov    %ax,0x000008(%esi)
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		mov    0x000014(%esp),%al
		mov    %al,(%esp)
		mul    %ah
		mov    %al,0x00000c(%esp)

	_07aa0a_jump:
		xor    %dl,%dl
		mov    0x00000c(%esp),%al
		mov    0x000018(%esp),%dh
		mov    %al,0x00001c(%esp)

	_07aa18_jump:
		xor    %ah,%ah
		xor    %bh,%bh
		mov    0x000018(%esp),%al
		mov    %dl,%bl
		imul   %ebx,%eax
		mov    %eax,%ebx
		mov    %ax,0x000004(%ecx)
		xor    %ah,%bh
		mov    %ax,(%ecx)
		mov    0x00001c(%esp),%bl
		mov    %bl,0x000006(%ecx)
		mov    %bl,0x000002(%ecx)
		cmp    $0x0000a0,%ax
		jae    _07aa45_jump
		mov    0x000014(%esi),%edi
		jmp    _07aa4e_jump

	_07aa45_jump:
		mov    0x000018(%esi),%edi
		sub    $0x0000a0,%eax

	_07aa4e_jump:
		mov    %edi,0x000008(%ecx)
		mov    %al,0x00002e(%ecx)
		mov    %al,0x00002c(%ecx)
		add    %dh,%al
		dec    %al
		mov    %al,0x000032(%ecx)
		mov    %al,0x000030(%ecx)
		mov    0x000014(%esp),%al
		mov    %bl,0x000033(%ecx)
		add    %bl,%al
		mov    %bl,0x00002d(%ecx)
		dec    %al
		mov    %al,0x000031(%ecx)
		mov    %al,0x00002f(%ecx)
		inc    %dl
		mov    (%esi),%bl
		add    $0x000034,%ecx
		cmp    %bl,%dl
		jbe    _07aa18_jump
		mov    (%esp),%al
		add    %al,0x00000c(%esp)
		mov    0x000004(%esp),%dh
		inc    %dh
		mov    0x000001(%esi),%bl
		mov    %dh,0x000004(%esp)
		cmp    %bl,%dh
		jbe    _07aa0a_jump
		xor    %bh,%bh
		mov    %bh,0x000008(%esp)
		mov    %bh,0x000010(%esp)

	_07aaa6_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		movzbl 0x000010(%esp),%edi
		add    %eax,%eax
		mov    $0xc0440000,%ecx
		cwtl   
		movb   $0x000000,0x000020(%edi,%esi,1)
		call   _05be40_func
		cwtl   
		xor    %ebx,%ebx
		call   _07b952_func
		call   _07bb4f_func
		mov    $0x3f600000,%ecx
		xor    %ebx,%ebx
		call   _07bb4f_func
		call   _07c19c_func
		mov    0x000008(%esp),%ch
		mov    %al,0x00006b(%edi,%esi,1)
		mov    0x000010(%esp),%al
		add    $0x00000a,%ch
		inc    %al
		mov    %ch,0x000008(%esp)
		mov    %al,0x000010(%esp)
		cmp    $0x00004b,%al
		jb     _07aaa6_jump
		movw   $0x000000,0x0000b6(%esi)
		movb   $0x00004b,0x0000b8(%esi)
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx

	_07ab16_jump:
		ret    

	_07ab18_case:
		mov    _0e5e94_data,%eax
		test   %eax,%eax
		je     _07ab16_jump
		cmpl   $0x000000,0x00001c(%eax)
		je     _07ab2f_jump
		add    $0x00001c,%eax
		call   _07b83c_func

	_07ab2f_jump:
		cmpl   $0x000000,_0e5e94_data
		je     _07ab16_jump
		mov    $_0e5e94_data,%eax
		jmp    _07b83c_func



_07ab44_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %edx,0x000008(%esp)
		mov    %bx,0x000004(%esp)
		mov    %ecx,(%esp)
		mov    0x000018(%esp),%edx
		xor    %cl,%cl
		test   %edx,%edx
		je     _07abfe_jump
		cmpl   $0x000000,0x00001c(%esp)
		je     _07abfe_jump
		mov    $0x0000bc,%eax
		call   _07b824_func
		mov    %eax,%edx
		mov    %eax,_0e5e94_data
		test   %eax,%eax
		je     _07abfe_jump
		mov    %eax,%esi
		xor    %ebx,%ebx
		mov    $0x000002,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _07ab97_jump
		mov    %ebx,%eax

	_07ab97_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    0x000008(%esp),%bx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _07abab_jump
		mov    %ebx,%eax

	_07abab_jump:
		mov    %al,0x000001(%edx)
		mov    0x000008(%esp),%eax
		inc    %edi
		inc    %eax
		imul   %eax,%edi
		mov    0x000018(%esp),%eax
		mov    %di,0x000002(%edx)
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%edx)
		mov    0x00001c(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		call   _07b824_func
		mov    %eax,0x00001c(%edx)
		test   %eax,%eax
		je     _07abfe_jump
		mov    _0cc638_data,%eax
		mov    %eax,0x000014(%edx)
		add    $0x00c800,%eax
		mov    $0x000001,%cl
		mov    %eax,0x000018(%edx)

	_07abfe_jump:
		test   %cl,%cl
		je     _07ac3b_jump
		mov    $0x0000a0,%ebx
		mov    0x000014(%esi),%edx
		mov    0x00000c(%esi),%eax
		call   _07a070_func
		mov    $0x0000a0,%ebx
		mov    0x00000c(%esi),%eax
		mov    0x000018(%esi),%edx
		add    $0x0000a0,%eax
		call   _07a070_func
		xor    %edx,%edx
		mov    0x000002(%esp),%eax
		mov    (%esp),%dx
		sar    $0x000010,%eax
		call   _07a970_func
		jmp    _07ac40_jump

	_07ac3b_jump:
		call   _07ab18_case

	_07ac40_jump:
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_07ac4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		xor    %ah,%ah
		mov    _0e5e94_data,%ebp
		mov    %ah,(%esp)
		jmp    _07ad82_jump

	_07ac65_jump:
		mov    $0x000001,%dl
		mov    0x0000b6(%ebp),%cx
		mov    %dl,0x000008(%esp)
		add    $0x000002,%ecx
		mov    0x000001(%ebp),%dh
		mov    %cx,0x0000b6(%ebp)
		cmp    %dl,%dh
		jbe    _07ad2f_jump

	_07ac87_jump:
		xor    %ah,%ah
		xor    %dh,%dh
		mov    0x000000(%ebp),%al
		mov    0x000008(%esp),%dl
		inc    %eax
		imul   %edx,%eax
		xor    %ebx,%ebx
		inc    %eax
		mov    %ax,%bx
		imul   $0x000034,%ebx,%ebx
		mov    0x00001c(%ebp),%eax
		add    %eax,%ebx
		mov    $0x000001,%ah
		mov    0x000000(%ebp),%dl
		mov    %ah,0x000004(%esp)
		cmp    %ah,%dl
		jbe    _07ad1c_jump

	_07acb1_jump:
		xor    %esi,%esi
		mov    (%ebx),%si
		sub    $0x0000a0,%esi
		mov    %esi,%eax
		imul   %esi,%eax
		xor    %ecx,%ecx
		mov    0x000002(%ebx),%cl
		sub    $0x000064,%ecx
		mov    %ecx,%edx
		imul   %ecx,%edx
		add    %edx,%eax
		sar    $0x000009,%eax
		mov    %esi,%edx
		mov    0x00001d(%eax,%ebp,1),%edi
		shl    $0x000009,%edx
		sar    $0x000018,%edi
		mov    %edx,%eax
		add    $0x000200,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %ecx,%edx
		lea    0x0000a0(%eax),%esi
		shl    $0x000009,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		lea    0x000064(%eax),%ecx
		mov    %cl,0x000006(%ebx)
		mov    0x000004(%esp),%cl
		inc    %cl
		mov    %si,0x000004(%ebx)
		mov    %cl,0x000004(%esp)
		mov    0x000000(%ebp),%ch
		add    $0x000034,%ebx
		cmp    %ch,%cl
		jb     _07acb1_jump

	_07ad1c_jump:
		mov    0x000008(%esp),%bl
		inc    %bl
		mov    %bl,0x000008(%esp)
		cmp    0x000001(%ebp),%bl
		jb     _07ac87_jump

	_07ad2f_jump:
		mov    0x0000b8(%ebp),%cl
		test   %cl,%cl
		je     _07ad4d_jump
		mov    %cl,%ch
		xor    %ebx,%ebx
		dec    %ch
		mov    %ch,%bl
		mov    %ch,0x0000b8(%ebp)
		mov    0x00006b(%ebx,%ebp,1),%bl
		jmp    _07ad50_jump

	_07ad4d_jump:
		mov    0x00006a(%ebp),%bl

	_07ad50_jump:
		cmpw   $0x000258,0x0000b6(%ebp)
		jbe    _07ad63_jump
		cmpb   $0x000000,0x000020(%ebp)
		jne    _07ad63_jump
		xor    %bl,%bl

	_07ad63_jump:
		mov    $0x00004a,%al

	_07ad65_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    0x00001f(%edx,%ebp,1),%ah
		mov    %ah,0x000020(%edx,%ebp,1)
		dec    %al
		test   %al,%al
		ja     _07ad65_jump
		mov    (%esp),%dh
		inc    %dh
		mov    %bl,0x000020(%ebp)
		mov    %dh,(%esp)

	_07ad82_jump:
		mov    0x000006(%ebp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    (%esp),%dl
		test   %eax,%eax
		jge    _07ad93_jump
		neg    %eax

	_07ad93_jump:
		cmp    %eax,%edx
		jl     _07ac65_jump
		mov    0x000006(%ebp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _07ada7_jump
		neg    %eax

	_07ada7_jump:
		mov    0x000004(%ebp),%dx
		add    %eax,%edx
		mov    0x000006(%ebp),%bx
		mov    %dx,0x000004(%ebp)
		cmp    %bx,%dx
		jbe    _07adc0_jump
		movw   $0x000000,0x000004(%ebp)

	_07adc0_jump:
		mov    0x000004(%ebp),%ax
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07add0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0e5e94_data,%ebx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %edx,(%esp)
		mov    %ah,0x000004(%esp)
		mov    0x00001c(%ebx),%edx
		mov    0x000001(%ebx),%al
		mov    %edx,%ecx
		test   %al,%al
		jbe    _07aedd_jump

	_07adfa_jump:
		xor    %al,%al
		mov    %al,0x000008(%esp)
		cmpb   $0x000000,(%ebx)
		jbe    _07aebc_jump
		lea    0x000008(%edx),%edi

	_07ae0c_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		imul   $0x000034,%eax,%esi
		movzwl 0x000004(%ecx,%esi,1),%ebp
		mov    %ebp,0x00000c(%edx)
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000010(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		inc    %esi
		imul   $0x000034,%esi,%esi
		mov    0x000004(%ecx,%esi,1),%si
		and    $0x00ffff,%esi
		mov    %esi,0x000014(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		inc    %esi
		imul   $0x000034,%esi,%esi
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000018(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		add    $0x000002,%esi
		imul   $0x000034,%esi,%esi
		mov    0x000004(%ecx,%esi,1),%si
		and    $0x00ffff,%esi
		dec    %esi
		mov    %esi,0x00001c(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		add    $0x000002,%esi
		imul   $0x000034,%esi,%esi
		inc    %eax
		imul   $0x000034,%eax,%eax
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000020(%edx)
		xor    %esi,%esi
		mov    0x000004(%ecx,%eax,1),%si
		dec    %esi
		mov    %esi,0x000024(%edx)
		mov    0x000006(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    %eax,0x000028(%edx)
		mov    %edi,%esi
		mov    0x000010(%ebx),%eax
		call   _010045_func
		incl   (%esp)
		mov    0x000008(%esp),%al
		inc    %al
		add    $0x000034,%edx
		mov    %al,0x000008(%esp)
		mov    (%ebx),%ah
		add    $0x000034,%edi
		cmp    %ah,%al
		jb     _07ae0c_jump

	_07aebc_jump:
		mov    0x000004(%esp),%ah
		mov    (%esp),%esi
		inc    %ah
		add    $0x000034,%edx
		mov    %ah,0x000004(%esp)
		mov    %ah,%al
		inc    %esi
		mov    0x000001(%ebx),%ah
		mov    %esi,(%esp)
		cmp    %ah,%al
		jb     _07adfa_jump

	_07aedd_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07aef0_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $0x000016,%ebx
		movb   $0x000000,(%eax)
		mov    %esp,%eax
		movb   $0x000000,(%edx)
		xor    %edx,%edx
		call   _07c0b0_func
		mov    $0x001600,%edx
		mov    $0x00002f,%eax
		mov    %dx,(%esp)
		mov    %esp,%edx
		call   _063fb8_func
		mov    (%esp),%ah
		cmp    $0x000001,%ah
		jb     _07af42_jump
		jbe    _07af4b_jump
		cmp    $0x000080,%ah
		jb     _07b005_jump
		jbe    _07af58_jump
		cmp    $0x0000ff,%ah
		je     _07af4b_jump
		jmp    _07b005_jump

	_07af42_jump:
		test   %ah,%ah
		je     _07af58_jump
		jmp    _07b005_jump

	_07af4b_jump:
		movb   $0x000002,(%esi)
		mov    $0x000001,%al
		movb   $0x000000,(%ecx)
		jmp    _07b012_jump

	_07af58_jump:
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _07c0b0_func
		mov    $0x004680,%ebx
		mov    %esp,%edx
		mov    $0x00002f,%eax
		mov    %bx,(%esp)
		call   _063fb8_func
		cmpb   $0x000080,(%esp)
		jne    _07af8a_jump
		xor    %al,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07af8a_jump:
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $0x001605,%ecx
		call   _07c0b0_func
		xor    %esi,%esi
		mov    $0x000001,%edx
		mov    $0x00002f,%eax
		mov    %cx,(%esp)
		mov    %si,0x000004(%esp)
		mov    %si,0x000008(%esp)
		mov    %dx,0x000006(%esp)
		mov    %esp,%edx
		mov    %si,0x000002(%esp)
		call   _063fb8_func
		cmpw   $0x000000,0x000004(%esp)
		jne    _07affc_jump
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $0x001606,%ecx
		call   _07c0b0_func
		mov    %esp,%edx
		mov    $0x00002f,%eax
		mov    %cx,(%esp)
		call   _063fb8_func
		mov    $0x000081,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07affc_jump:
		mov    $0x000082,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07b005_jump:
		mov    (%esp),%al
		mov    %al,(%esi)
		mov    0x000001(%esp),%al
		mov    %al,(%ecx)
		mov    $0x000083,%al

	_07b012_jump:
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07b020_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000028,%esp
		mov    $0x00001c,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _07c0b0_func
		mov    $0x00000c,%ebx
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		lea    0x00001c(%esp),%ecx
		call   _07c0b0_func
		mov    $0x000500,%edx
		mov    $_0c1a00_data,%eax
		mov    %edx,(%esp)
		mov    %ds,%edx
		mov    $_0c1a00_data,%ebx
		mov    $0x000031,%eax
		mov    %dx,0x00001c(%esp)
		mov    %ebx,0x000014(%esp)
		mov    %esp,%ebx
		mov    %esp,%edx
		call   _0815e3_func
		mov    _0c1a00_data,%eax
		add    $0x000028,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b220_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    %edx,%eax
		and    $0x000003,%eax
		add    %eax,%edx
		je     _07b242_jump
		mov    (%ebx),%ecx
		mov    0x000008(%ebx),%esi
		add    %edx,%ecx
		cmp    %esi,%ecx
		jbe    _07b2d5_jump

	_07b242_jump:
		mov    $0x000064,%eax
		call   _07b548_func
		mov    %eax,%ecx
		cmp    $_0ccdcc_data,%ebx
		jne    _07b260_jump
		mov    _0c10a0_data,%eax
		mov    %eax,(%esp)
		jmp    _07b2a7_jump

	_07b260_jump:
		cmp    $_0ccdd8_data,%ebx
		jne    _07b274_jump
		mov    %esp,%edi
		mov    $_0c10a4_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		jmp    _07b2a7_jump

	_07b274_jump:
		cmp    $_0ccda8_data,%ebx
		jne    _07b288_jump
		mov    %esp,%edi
		mov    $_0c10ac_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		jmp    _07b2a7_jump

	_07b288_jump:
		cmp    $_0ccdb8_data,%ebx
		jne    _07b29d_jump
		mov    %esp,%edi
		mov    $_0c10b4_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		jmp    _07b2a7_jump

	_07b29d_jump:
		mov    %esp,%edi
		mov    $_0c10bc_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)

	_07b2a7_jump:
		push   %edx
		push   %ebx
		lea    0x000008(%esp),%eax
		push   %eax
		push   $_0c10c8_data
		push   %ecx
		call   _07c0db_func
		add    $0x000014,%esp
		mov    %ecx,%eax
		call   _01f3a4_func
		mov    %ecx,%eax
		call   _07b6e0_func
		xor    %eax,%eax
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07b2d5_jump:
		mov    (%ebx),%edi
		mov    %ecx,(%ebx)
		mov    _0bd568_data,%edx
		mov    0x000004(%ebx),%eax
		mov    _0ccdcc_data,%ebp
		add    %edi,%eax
		cmp    %ebp,%edx
		jae    _07b310_jump
		mov    _0cede4_data,%dx
		mov    %dx,_0bd56c_data
		mov    _0cedd0_data,%dx
		mov    %ebp,_0bd568_data
		mov    %dx,_0bd56e_data

	_07b310_jump:
		mov    _0bd570_data,%edx
		mov    _0ccdd8_data,%ebx
		cmp    %ebx,%edx
		jae    _07b342_jump
		mov    _0cede4_data,%dx
		mov    %dx,_0bd574_data
		mov    _0cedd0_data,%dx
		mov    %ebx,_0bd570_data
		mov    %dx,_0bd576_data

	_07b342_jump:
		mov    _0bd578_data,%edx
		mov    _0ccda8_data,%ecx
		cmp    %ecx,%edx
		jae    _07b374_jump
		mov    _0cede4_data,%dx
		mov    %dx,_0bd57c_data
		mov    _0cedd0_data,%dx
		mov    %ecx,_0bd578_data
		mov    %dx,_0bd57e_data

	_07b374_jump:
		mov    _0bd580_data,%edx
		mov    _0ccdb8_data,%esi
		cmp    %esi,%edx
		jae    _07b3a6_jump
		mov    _0cede4_data,%dx
		mov    %dx,_0bd584_data
		mov    _0cedd0_data,%dx
		mov    %esi,_0bd580_data
		mov    %dx,_0bd586_data

	_07b3a6_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07b3b0_func:
		push   %ebx
		push   %edx
		mov    $_0ccde8_data,%eax
		mov    $0x000168,%ebx
		call   _07b83c_func
		xor    %edx,%edx
		mov    $_0c8b98_data,%eax
		mov    %edx,_0ccde8_data
		call   _07c0b0_func
		pop    %edx
		pop    %ebx
		ret    



_07b3d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%edx
		mov    $_0ccde4_data,%eax
		call   _07b440_func
		mov    %eax,%ecx
		mov    %eax,_0bd564_data
		mov    _0ccde8_data,%eax
		mov    %eax,_0c8b9c_data
		mov    _0ccdec_data,%eax
		mov    %eax,_0c8b98_data
		xor    %ah,%ah
		mov    %ah,_0c8ba0_data
		mov    $0x000001,%eax

	_07b411_jump:
		movswl %ax,%edx
		imul   $0x00000c,%edx,%edx
		mov    _0ccde8_data,%ebx
		add    %ecx,%ebx
		mov    %ebx,_0c8b9c_data(%edx)
		xor    %ebx,%ebx
		mov    %ebx,_0c8b98_data(%edx)
		xor    %bl,%bl
		inc    %eax
		mov    %bl,_0c8ba0_data(%edx)
		cmp    $0x00001e,%ax
		jl     _07b411_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b440_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%eax
		and    $0x000003,%eax
		add    %eax,%edx
		mov    %edx,%eax
		call   _08191a_func
		mov    %eax,0x000004(%ecx)
		test   %eax,%eax
		jne    _07b482_jump
		mov    $0x000064,%eax
		call   _07b548_func
		push   %edx
		push   $_0c1100_data
		push   %eax
		mov    %eax,%ebx
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %ebx,%eax
		call   _01f3a4_func
		mov    %ebx,%eax
		call   _07b6e0_func

	_07b482_jump:
		mov    0x000004(%ecx),%ebx
		mov    %edx,0x000008(%ecx)
		and    $0x000003,%ebx
		mov    %edx,%eax
		mov    %ebx,(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_07b494_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		xor    %ecx,%ecx

	_07b49b_jump:
		movswl %cx,%edx
		imul   $0x00000c,%edx,%edx
		cmpb   $0x000000,_0c8ba0_data(%edx)
		jne    _07b537_jump
		cmpl   $0x000000,_0c8b98_data(%edx)
		je     _07b537_jump

	_07b4bb_jump:
		xor    %esi,%esi
		xor    %eax,%eax

	_07b4bf_jump:
		movswl %cx,%edx
		imul   $0x00000c,%edx,%edx
		mov    _0c8b9c_data(%edx),%ebx
		mov    _0c8b98_data(%edx),%ebp
		movswl %ax,%edx
		imul   $0x00000c,%edx,%edx
		add    %ebp,%ebx
		cmp    _0c8b9c_data(%edx),%ebx
		jne    _07b4ea_jump
		cmpb   $0x000000,_0c8ba0_data(%edx)
		je     _07b4f1_jump

	_07b4ea_jump:
		inc    %eax
		cmp    $0x00001e,%ax
		jl     _07b4bf_jump

	_07b4f1_jump:
		cmp    $0x00001e,%ax
		jge    _07b533_jump
		movswl %ax,%edx
		imul   $0x00000c,%edx,%edx
		movswl %cx,%ebx
		imul   $0x00000c,%ebx,%ebx
		mov    _0c8b98_data(%edx),%esi
		mov    _0c8b98_data(%ebx),%eax
		add    %esi,%eax
		mov    _0ccdec_data,%ebp
		mov    %eax,_0c8b98_data(%ebx)
		mov    _0ccde8_data,%ebx
		xor    %eax,%eax
		add    %ebp,%ebx
		mov    %eax,_0c8b98_data(%edx)
		mov    %ebx,_0c8b9c_data(%edx)

	_07b533_jump:
		test   %esi,%esi
		jne    _07b4bb_jump

	_07b537_jump:
		inc    %ecx
		cmp    $0x00001e,%cx
		jl     _07b49b_jump
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b548_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    %eax,%ebp
		mov    $0x00001e,%edx
		mov    _0ccdec_data,%edi
		and    $0x000003,%eax
		mov    %edx,0x000064(%esp)
		add    %eax,%ebp
		xor    %edx,%edx

	_07b569_jump:
		movswl %dx,%esi
		imul   $0x00000c,%esi,%esi
		cmpb   $0x000000,_0c8ba0_data(%esi)
		jne    _07b5a1_jump
		mov    %edi,%ecx
		mov    %ebp,%ebx
		mov    _0c8b98_data(%esi),%eax
		cmp    %ebx,%eax
		jl     _07b591_jump
		cmp    %ecx,%eax
		jg     _07b591_jump
		mov    $0x000001,%eax
		jmp    _07b593_jump

	_07b591_jump:
		xor    %eax,%eax

	_07b593_jump:
		test   %eax,%eax
		je     _07b5a1_jump
		mov    %edx,0x000064(%esp)
		mov    _0c8b98_data(%esi),%edi

	_07b5a1_jump:
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _07b569_jump
		mov    0x000064(%esp),%edi
		cmp    $0x00001e,%di
		jge    _07b694_jump
		xor    %edx,%edx

	_07b5b8_jump:
		movswl %di,%esi
		imul   $0x00000c,%esi,%esi
		mov    _0c8b9c_data(%esi),%eax
		mov    _0c8b98_data(%esi),%esi
		add    %eax,%esi
		movswl %dx,%eax
		imul   $0x00000c,%eax,%eax
		cmp    _0c8b9c_data(%eax),%esi
		je     _07b5e1_jump
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _07b5b8_jump

	_07b5e1_jump:
		movswl %dx,%esi
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		cmpb   $0x000000,_0c8ba0_data(,%eax,4)
		je     _07b61b_jump
		mov    _0ccdec_data,%ecx
		xor    %edx,%edx

	_07b5ff_jump:
		movswl %dx,%esi
		imul   $0x00000c,%esi,%esi
		mov    _0ccde8_data,%eax
		add    %ecx,%eax
		cmp    _0c8b9c_data(%esi),%eax
		je     _07b61b_jump
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _07b5ff_jump

	_07b61b_jump:
		movswl %di,%esi
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		movswl %dx,%edi
		lea    0x000000(,%eax,4),%esi
		lea    0x000000(,%edi,4),%eax
		mov    _0c8b9c_data(%esi),%ebx
		sub    %edi,%eax
		add    %ebp,%ebx
		mov    %ebx,_0c8b9c_data(,%eax,4)
		mov    _0c8b98_data(%esi),%ebx
		mov    _0c8b98_data(,%eax,4),%ecx
		sub    %ebp,%ebx
		mov    _0ccde4_data,%edi
		add    %ebx,%ecx
		add    %ebp,%edi
		mov    %ecx,_0c8b98_data(,%eax,4)
		mov    $0x000001,%bh
		mov    %ebp,_0c8b98_data(%esi)
		mov    %edi,_0ccde4_data
		mov    %bh,_0c8ba0_data(%esi)
		mov    _0bd588_data,%eax
		mov    _0c8b9c_data(%esi),%esi
		cmp    %edi,%eax
		jae    _07b6d1_jump
		mov    %edi,_0bd588_data
		jmp    _07b6d1_jump

	_07b694_jump:
		mov    %ebp,%eax
		call   _08191a_func
		mov    %eax,%esi
		mov    _0bd564_data,%eax
		mov    _0bd588_data,%edx
		add    %ebp,%eax
		cmp    %edx,%eax
		jbe    _07b6b3_jump
		mov    %eax,_0bd588_data

	_07b6b3_jump:
		test   %esi,%esi
		jne    _07b6d1_jump
		push   %ebp
		push   $_0c1128_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _07c0db_func
		add    $0x00000c,%esp
		mov    %esp,%eax
		call   _01f3a4_func

	_07b6d1_jump:
		mov    %esi,%eax
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b6e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    (%esp),%esi
		xor    %cl,%cl
		xor    %edx,%edx

	_07b6f2_jump:
		movswl %dx,%ebx
		imul   $0x00000c,%ebx,%ebx
		cmp    _0c8b9c_data(%ebx),%esi
		jne    _07b72e_jump
		cmpb   $0x000000,_0c8ba0_data(%ebx)
		je     _07b735_jump
		mov    $0x000001,%cl
		mov    _0ccde4_data,%edi
		mov    _0c8b98_data(%ebx),%eax
		xor    %dl,%dl
		sub    %eax,%edi
		mov    %dl,_0c8ba0_data(%ebx)
		mov    %edi,_0ccde4_data
		call   _07b494_func
		jmp    _07b735_jump

	_07b72e_jump:
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _07b6f2_jump

	_07b735_jump:
		test   %cl,%cl
		jne    _07b740_jump
		mov    %esp,%eax
		call   _07b83c_func

	_07b740_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b74c_func:
		push   %edx
		mov    %eax,%edx
		cmp    $_0ccdcc_data,%eax
		lea    0x000004(%edx),%eax
		call   _07b83c_func
		movl   $0x000000,0x000004(%edx)
		movl   $0x000000,0x000008(%edx)
		movl   $0x000000,(%edx)
		pop    %edx
		ret    



_07b774_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ceff0_data,%bl
		xor    %eax,%eax
		mov    _0cefef_data,%al
		jmp    _07b793_jump

	_07b786_jump:
		movswl %ax,%edx
		xor    %ecx,%ecx
		inc    %eax
		mov    %ecx,_0cc318_data(,%edx,4)

	_07b793_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		cmp    %dx,%ax
		jl     _07b786_jump
		mov    _0cefef_data,%bl
		mov    _092206_data,%ax
		mov    %bl,_0ceff0_data
		mov    %ax,_092204_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b7b8_func:
		push   %ebx
		push   %edx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		add    %ebx,%edx
		and    $0x000003,%edx
		lea    (%ebx,%edx,1),%eax
		mov    %eax,_0e5ea4_data
		pop    %edx
		pop    %ebx
		ret    



_07b7d0_func:
		push   %ebx
		push   %edx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		add    %ebx,%edx
		and    $0x000003,%edx
		lea    (%ebx,%edx,1),%eax
		mov    %eax,_0e5ea0_data
		pop    %edx
		pop    %ebx
		ret    



_07b7e8_func:
		push   %edx
		mov    _0e5ea4_data,%edx
		mov    %edx,(%eax)
		pop    %edx
		ret    



_07b7f4_func:
		push   %edx
		mov    _0e5ea0_data,%edx
		mov    %edx,(%eax)
		pop    %edx
		ret    



_07b800_func:
		push   %edx
		mov    %eax,%edx
		call   _07b774_func
		mov    0x000004(%edx),%eax
		and    $0x000003,%eax
		mov    %eax,(%edx)
		pop    %edx
		ret    



_07b814_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000004(%eax),%eax
		and    $0x000003,%eax
		mov    %eax,(%edx)
		pop    %edx
		ret    



_07b824_func:
		jmp    _08191a_func



_07b82c_func:
		push   %ebx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _0819fd_func
		pop    %ebx
		ret    



_07b83c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    (%eax),%ebx
		test   %ebx,%ebx
		je     _07b853_jump
		mov    %ebx,%eax
		call   _081a15_func
		movl   $0x000000,(%edx)

	_07b853_jump:
		pop    %edx
		pop    %ebx
		ret    



_07b856_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%edx

	_07b85d_jump:
		mov    (%edx),%al
		test   %al,%al
		je     _07b875_jump
		sub    $0x000061,%al
		xor    %ebx,%ebx
		mov    %al,%bl
		cmp    $0x000019,%ebx
		jg     _07b872_jump
		add    $0x000041,%al
		mov    %al,(%edx)

	_07b872_jump:
		inc    %edx
		jmp    _07b85d_jump

	_07b875_jump:
		mov    %ecx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b8b0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmp    %edx,%eax
		je     _07b924_jump

	_07b8b8_jump:
		mov    (%ebx),%eax
		mov    (%edx),%ecx
		cmp    %eax,%ecx
		jne    _07b929_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _07b924_jump
		mov    0x000004(%ebx),%eax
		mov    0x000004(%edx),%ecx
		cmp    %eax,%ecx
		jne    _07b929_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _07b924_jump
		mov    0x000008(%ebx),%eax
		mov    0x000008(%edx),%ecx
		cmp    %eax,%ecx
		jne    _07b929_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _07b924_jump
		mov    0x00000c(%ebx),%eax
		mov    0x00000c(%edx),%ecx
		cmp    %eax,%ecx
		jne    _07b929_jump
		add    $0x000010,%ebx
		add    $0x000010,%edx
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		je     _07b8b8_jump

	_07b924_jump:
		sub    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_07b929_jump:
		cmp    %cl,%al
		jne    _07b94a_jump
		cmp    $0x000000,%al
		je     _07b924_jump
		cmp    %ch,%ah
		jne    _07b94a_jump
		cmp    $0x000000,%ah
		je     _07b924_jump
		shr    $0x000010,%eax
		shr    $0x000010,%ecx
		cmp    %cl,%al
		jne    _07b94a_jump
		cmp    $0x000000,%al
		je     _07b924_jump
		cmp    %ch,%ah

	_07b94a_jump:
		sbb    %eax,%eax
		or     $0x000001,%al
		pop    %ecx
		pop    %ebx
		ret    



_07b952_func:
		or     %eax,%eax
		jns    _07b95f_func
		neg    %eax
		mov    $0x000bff,%edx
		jmp    _07b964_jump



_07b95f_func:
		mov    $0x0003ff,%edx

	_07b964_jump:
		or     %eax,%eax
		je     _07b98f_jump
		push   %ecx
		bsr    %eax,%ecx
		mov    %cl,%ch
		mov    $0x00001f,%cl
		sub    %ch,%cl
		shl    %cl,%eax
		add    %eax,%eax
		mov    %ch,%cl
		movzbl %ch,%ecx
		add    %edx,%ecx
		mov    %eax,%edx
		and    $0xfffff000,%edx
		or     %ecx,%edx
		ror    $0x00000c,%edx
		shl    $0x000014,%eax
		pop    %ecx
		ret    

	_07b98f_jump:
		sub    %edx,%edx
		ret    



_07b992_func:
		xor    $0x80000000,%ecx



_07b998_func:
		or     %ebx,%ebx
		jne    _07b9a2_jump
		add    %ecx,%ecx
		je     _07b9ae_jump
		rcr    %ecx

	_07b9a2_jump:
		or     %eax,%eax
		jne    _07b9b1_jump
		add    %edx,%edx
		jne    _07b9af_jump
		mov    %ecx,%edx
		mov    %ebx,%eax

	_07b9ae_jump:
		ret    

	_07b9af_jump:
		rcr    %edx

	_07b9b1_jump:
		cmpb   $0x000000,_0bd5b9_data
		je     _07b9db_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		faddl  (%esp)

	_07b9c4_jump:
		fstpl  0x000008(%esp)
		add    $0x000008,%esp
		fwait
		pop    %eax
		pop    %edx
		cmp    $0x80000000,%edx
		jne    _07b9da_jump
		sub    %edx,%edx
		mov    %edx,%eax

	_07b9da_jump:
		ret    

	_07b9db_jump:
		push   %ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		mov    %ecx,%ebp
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %di,%cx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		je     _07ba1c_jump
		or     $0x100000,%edx

	_07ba1c_jump:
		or     %cx,%cx
		je     _07ba27_jump
		or     $0x100000,%esi

	_07ba27_jump:
		add    %eax,%eax
		adc    %edx,%edx
		add    %ebx,%ebx
		adc    %esi,%esi
		sub    %di,%cx
		je     _07ba63_jump
		jae    _07ba3e_jump
		mov    %edi,%ebp
		neg    %cx
		xchg   %eax,%ebx
		xchg   %esi,%edx

	_07ba3e_jump:
		cmp    $0x000036,%cx
		jbe    _07ba63_jump
		mov    %esi,%edx
		mov    %ebx,%eax
		add    %ebp,%ebp
		rcr    %edx
		rcr    %eax
		and    $0x800fffff,%edx
		ror    $0x00000d,%ebp
		and    $0x7ff00000,%ebp
		or     %ebp,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07ba63_jump:
		or     %ecx,%ecx
		jns    _07ba74_jump
		neg    %esi
		neg    %ebx
		sbb    $0x000000,%esi
		xor    $0x80000000,%ebp

	_07ba74_jump:
		sub    %edi,%edi
		cmp    $0x000000,%cl
		je     _07ba9e_jump
		push   %ebx
		sub    %ebx,%ebx
		cmp    $0x000020,%cl
		jb     _07ba90_jump
		or     %eax,%eax
		setne  %bl
		mov    %ebx,%edi
		sub    %ebx,%ebx
		mov    %edx,%eax
		sub    %edx,%edx

	_07ba90_jump:
		shrd   %cl,%eax,%ebx
		or     %ebx,%edi
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		pop    %ebx

	_07ba9e_jump:
		add    %ebx,%eax
		adc    %esi,%edx
		jns    _07bac7_jump
		cmp    $0x000035,%cl
		jb     _07baba_jump
		test   $0x7fffffff,%edi
		setne  %bl
		shr    %ebx
		adc    $0x000000,%eax
		adc    $0x000000,%edx

	_07baba_jump:
		neg    %edx
		neg    %eax
		sbb    $0x000000,%edx
		xor    $0x80000000,%ebp

	_07bac7_jump:
		mov    %eax,%ebx
		or     %edx,%ebx
		je     _07bb37_jump
		or     %bp,%bp
		je     _07bb3b_jump

	_07bad2_jump:
		test   $0x7fe00000,%edx
		jne    _07bae4_jump
		dec    %bp
		je     _07bb3b_jump
		add    %eax,%eax
		adc    %edx,%edx
		jmp    _07bad2_jump

	_07bae4_jump:
		test   $0x400000,%edx
		je     _07bafc_jump
		shr    %edx
		rcr    %eax
		adc    $0x000000,%edi
		inc    %bp
		cmp    $0x0007ff,%bp
		je     _07bb45_jump

	_07bafc_jump:
		shr    %edx
		rcr    %eax
		jae    _07bb26_jump
		or     %edi,%edi
		setne  %bl
		or     %eax,%ebx
		shr    %ebx
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		test   $0x200000,%edx
		je     _07bb26_jump
		shr    %edx
		rcr    %eax
		inc    %bp
		cmp    $0x0007ff,%bp
		je     _07bb45_jump

	_07bb26_jump:
		and    $0x0fffff,%edx
		mov    %ebp,%ecx
		shl    $0x000015,%ebp
		add    %ecx,%ecx
		rcr    %ebp
		or     %ebp,%edx

	_07bb37_jump:
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07bb3b_jump:
		add    %ebp,%ebp
		rcr    %edx
		rcr    %eax
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07bb45_jump:
		mov    %ebp,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _081aa9_jump



_07bb4f_func:
		or     %eax,%eax
		jne    _07bb5a_jump
		add    %edx,%edx
		jne    _07bb58_jump
		ret    

	_07bb58_jump:
		rcr    %edx

	_07bb5a_jump:
		or     %ebx,%ebx
		jne    _07bb69_jump
		add    %ecx,%ecx
		jne    _07bb67_jump
		sub    %eax,%eax
		sub    %edx,%edx
		ret    

	_07bb67_jump:
		rcr    %ecx

	_07bb69_jump:
		cmpb   $0x000000,_0bd5b9_data
		je     _07bb81_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		fmull  (%esp)
		jmp    _07b9c4_jump

	_07bb81_jump:
		push   %ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %di,%cx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		jne    _07bbca_jump
		inc    %di

	_07bbbc_jump:
		dec    %di
		add    %eax,%eax
		adc    %edx,%edx
		test   $0x100000,%edx
		je     _07bbbc_jump

	_07bbca_jump:
		or     $0x100000,%edx
		or     %cx,%cx
		jne    _07bbe5_jump
		inc    %cx

	_07bbd7_jump:
		dec    %cx
		add    %ebx,%ebx
		adc    %esi,%esi
		test   $0x100000,%esi
		je     _07bbd7_jump

	_07bbe5_jump:
		or     $0x100000,%esi
		add    %di,%cx
		sub    $0x0003ff,%cx
		js     _07bc06_jump
		cmp    $0x0007ff,%cx
		jb     _07bc06_jump
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _081aa9_jump

	_07bc06_jump:
		cmp    $0x00ffcb,%cx
		jge    _07bc14_jump
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _081a98_jump

	_07bc14_jump:
		push   %ecx
		mov    $0x00000b,%cl
		shld   %cl,%eax,%edx
		shld   %cl,%ebp,%eax
		and    $0xfffff800,%eax
		shld   %cl,%ebx,%esi
		shld   %cl,%ebp,%ebx
		and    $0xfffff800,%ebx
		sub    %ebp,%ebp
		push   %esi
		push   %edx
		push   %eax
		mul    %ebx
		xchg   %eax,%esi
		mov    %edx,%ecx
		pop    %edx
		mul    %edx
		mov    %edx,%edi
		add    %eax,%ecx
		adc    %ebp,%edi
		adc    %ebp,%ebp
		pop    %eax
		xchg   %eax,%ebx
		mul    %ebx
		add    %eax,%ecx
		adc    %edx,%edi
		adc    $0x000000,%ebp
		mov    %ebx,%eax
		pop    %edx
		mul    %edx
		add    %edi,%eax
		adc    %ebp,%edx
		sub    %ebx,%ebx
		mov    $0x00000a,%cl
		shrd   %cl,%eax,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		pop    %ecx

	_07bc65_jump:
		test   $0x200000,%edx
		je     _07bc7e_jump
		shr    %edx
		rcr    %eax
		rcr    %ebx
		inc    %cx
		cmp    $0x0007ff,%cx
		je     _07bce2_jump
		jmp    _07bc65_jump

	_07bc7e_jump:
		add    %ebx,%ebx
		jae    _07bcac_jump
		jne    _07bc91_jump
		or     %esi,%esi
		setne  %bl
		shr    %ebx
		jb     _07bc91_jump
		mov    %eax,%esi
		shr    %esi

	_07bc91_jump:
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		test   $0x200000,%edx
		je     _07bcac_jump
		shr    %edx
		rcr    %eax
		inc    %cx
		cmp    $0x0007ff,%cx
		je     _07bce2_jump

	_07bcac_jump:
		or     %cx,%cx
		jg     _07bcc7_jump
		jne    _07bcb7_jump
		mov    $0x000001,%cl
		jmp    _07bcbc_jump

	_07bcb7_jump:
		neg    %cx
		dec    %cx

	_07bcbc_jump:
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %cx,%cx

	_07bcc7_jump:
		and    $0x0fffff,%edx
		mov    %ecx,%esi
		ror    $0x00000b,%ecx
		add    %esi,%esi
		rcr    %ecx
		and    $0xfff00000,%ecx
		or     %ecx,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07bce2_jump:
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _081aa9_jump



_07bcec_func:
		push   %ebx
		push   %edx
		sub    $0x000004,%esp
		lea    0x000014(%esp),%eax
		mov    %esp,%ebx
		mov    0x000010(%esp),%edx
		mov    %eax,(%esp)
		mov    $_0bd5d6_data,%eax
		call   _081b02_func
		add    $0x000004,%esp
		pop    %edx
		pop    %ebx
		ret    

	_07bd0e_jump:
		ret    



_07bd0f_func:
		push   %edx
		mov    %eax,%edx
		call   *_0bd58c_data
		call   *_0bd590_data
		mov    %edx,%eax
		call   _07bd27_func
		pop    %edx
		ret    



_07bd27_func:
		push   %edx
		mov    %eax,%edx
		call   *_0bd590_data
		call   *_0bd594_data
		mov    %edx,%eax
		jmp    _07c067_jump



_07bd3e_func:
		jmp    _081bb3_jump

	_07bd43_jump:
		push   %edx
		mov    %eax,%edx
		mov    $0x000041,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _07bd60_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _081bf4_func
		pop    %edx
		ret    

	_07bd60_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_07bd64_func:
		push   %ebx
		push   %edx
		sub    $0x000004,%esp
		mov    $0x000020,%edx
		mov    _0e5f28_data,%ebx
		mov    %edx,_0e5f28_data
		mov    %ebx,%edx
		shl    $0x000002,%edx

	_07bd7f_jump:
		test   %edx,%edx
		je     _07bd95_jump
		mov    _0e5ea4_data(%edx),%eax
		sub    $0x000004,%edx
		mov    %eax,(%esp)
		dec    %ebx
		call   *(%esp)
		jmp    _07bd7f_jump

	_07bd95_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ebx
		ret    



_07bd9b_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $_07bd64_func,%edx
		mov    _0e5f28_data,%ecx
		mov    %edx,_0bd58c_data
		cmp    $0x000020,%ecx
		jge    _07bdce_jump
		mov    %ecx,%eax
		xor    %ecx,%eax
		lea    0x000001(%ecx),%edx
		mov    %ebx,_0e5ea8_data(,%ecx,4)
		mov    %edx,_0e5f28_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07bdce_jump:
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07bdd8_func:
		jmp    _07be50_jump



_07be4c_func:
		arpl   %bp,0x00006e(%edi)
	_07be50_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %bh,%bl
		and    $0xfffffffc,%esp
		mov    %esp,%ebx
		mov    %ebx,_0bd7fc_data
		mov    %ebx,_0bd7e8_data
		mov    $0x000024,%ax
		mov    %ax,_0bd7f4_data
		mov    $0x50484152,%ebx
		sub    %eax,%eax
		mov    $0x000030,%ah
		int    $0x000021
		mov    %al,_0bd81f_data
		mov    %ah,_0bd820_data
		mov    %eax,%ecx
		sub    %esi,%esi
		mov    $0x000081,%edi
		shr    $0x000010,%eax
		cmp    $0x004458,%ax
		jne    _07bed2_jump
		sub    $0x000030,%bl
		mov    %bl,%al
		mov    $0x000000,%ah
		push   %eax
		data16 mov _0bd7f4_data,%es
		mov    %es:0x00005c,%ebx
		add    $0x000fff,%ebx
		and    $0xfffff000,%ebx
		mov    %ebx,_0bd7e8_data
		shr    $0x00000c,%ebx
		mov    %ds,%ax
		mov    %eax,%es
		mov    $0x00004a,%ah
		int    $0x000021
		pop    %eax
		mov    %ds,%bx
		mov    $0x00002c,%cx
		jmp    _07bf0a_jump

	_07bed2_jump:
		cmp    $0x004243,%ax
		jne    _07bf0c_jump
		mov    %edx,_0bd598_data
		mov    %edx,%esi
		mov    0x00001c(%esi),%edx
		mov    %esp,%ebx
		sub    %edx,%ebx
		mov    $0x00004a,%ah
		int    $0x000021
		mov    %ds,%bx
		data16 mov %ds,_0bd7f4_data
		mov    0x000010(%esi),%eax
		add    %eax,%edi
		sub    %esi,%esi
		mov    0x00002c(%eax),%si
		shl    $0x000004,%esi
		mov    %ds,%cx
		mov    $0x000009,%al
		mov    $0x000000,%ah

	_07bf0a_jump:
		jmp    _07bf65_jump

	_07bf0c_jump:
		mov    $0x000078,%dx
		mov    $0x00ff00,%ax
		int    $0x000021
		cmp    $0x000000,%al
		je     _07bf4e_jump
		mov    %gs,%ax
		cmp    $0x000000,%ax
		je     _07bf29_jump
		mov    %ax,_0bd59c_data

	_07bf29_jump:
		mov    $0x000006,%ax
		mov    %ds,%bx
		int    $0x000031
		mov    $0x000001,%al
		mov    $0x000000,%ah
		or     %cx,%dx
		je     _07bf3d_jump
		mov    $0x000001,%ah

	_07bf3d_jump:
		data16 mov %es,_0bd7f4_data
		mov    %es:0x00002c,%cx
		jmp    _07bf65_jump

	_07bf4e_jump:
		mov    %ds,%dx
		mov    $0x000024,%cx
		mov    %ecx,%ds
		mov    $0x00002c,%cx
		mov    %edx,%ds
		mov    $0x000017,%bx
		mov    $0x000000,%al
		mov    $0x000000,%ah

	_07bf65_jump:
		mov    %al,_0bd816_data
		mov    %ah,_0bd817_data
		mov    %ebx,%es
		data16 mov %ds,%es:_07c0ad_jump
		mov    %esi,_0bd819_data
		mov    %cx,_0bd81d_data
		push   %esi
		data16 mov _0bd7f4_data,%es
		ds mov $_0e5f78_data,%edx
		add    $0x00000f,%edx
		and    $0x0000f0,%dl
		sub    %ecx,%ecx
		mov    %es:-0x000001(%edi),%cl
		cld    
		mov    $0x000020,%al
		repz scas %es:(%edi),%al
		lea    -0x000001(%edi),%esi
		mov    %edx,%edi
		mov    %es,%bx
		mov    %ds,%dx
		mov    %ebx,%ds
		mov    %edx,%es
		je     _07bfba_jump
		inc    %ecx
		rep movsb %ds:(%esi),%es:(%edi)

	_07bfba_jump:
		sub    %al,%al
		stos   %al,%es:(%edi)
		stos   %al,%es:(%edi)
		pop    %esi
		dec    %edi
		push   %edi
		push   %edx
		data16 mov %es:_0bd81d_data,%ds
		sub    %ebp,%ebp

	_07bfcc_jump:
		mov    (%esi),%eax
		or     $0x20202020,%eax
		cmp    $0x37386f6e,%eax
		jne    _07bfe1_jump
		cmpb   $0x00003d,0x000004(%esi)
		jne    _07bfe1_jump
		inc    %ebp

	_07bfe1_jump:
		cmpb   $0x000000,(%esi)
		lods   %ds:(%esi),%al
		jne    _07bfe1_jump
		cmpb   $0x000000,(%esi)
		jne    _07bfcc_jump
		lods   %ds:(%esi),%al
		inc    %esi
		inc    %esi

	_07bfef_jump:
		cmpb   $0x000000,(%esi)
		movsb  %ds:(%esi),%es:(%edi)
		jne    _07bfef_jump
		pop    %ds
		pop    %esi
		mov    %esp,%ebx
		mov    %bp,_0bd814_data
		mov    %edi,_0bd7f8_data
		mov    %ebx,_0bd7e4_data
		ds mov $_0e5f78_data,%ecx
		ds mov $_0c1a00_data,%edi
		sub    %edi,%ecx
		cmpb   $0x000001,_0bd816_data
		jne    _07c030_jump
		cmp    $0x001000,%ecx
		jbe    _07c030_jump
		mov    $0x001000,%ecx

	_07c030_jump:
		mov    %cl,%dl
		shr    $0x000002,%ecx
		sub    %eax,%eax
		rep stos %eax,%es:(%edi)
		mov    %dl,%cl
		and    $0x000003,%cl
		rep stos %al,%es:(%edi)
		ds mov $_0e5f78_data,%eax
		add    $0x00000f,%eax
		and    $0x0000f0,%al
		mov    %eax,_0bd7ec_data
		mov    %esi,_0bd7f0_data
		mov    $0x0000ff,%eax
		call   _081cb4_func
		sub    %ebp,%ebp
		call   _081c65_func

	_07c067_jump:
		jmp    _07c08c_jump



_07c069_func:
		push   %edx
		push   %eax
		mov    $_07be4c_func,%edx
		mov    $0x003d01,%ax
		int    $0x000021
		mov    %ax,%bx
		pop    %edx
		mov    %edx,%esi
		cld    

	_07c07d_jump:
		lods   %ds:(%esi),%al
		cmp    $0x000000,%al
		jne    _07c07d_jump
		mov    %esi,%ecx
		sub    %edx,%ecx
		dec    %ecx
		mov    $0x000040,%ah
		int    $0x000021
		pop    %eax

	_07c08c_jump:
		push   %eax
		mov    $0x000000,%eax
		mov    $0x0000ff,%edx
		call   _081cff_func
		pop    %eax
		mov    $0x00004c,%ah
		int    $0x000021
		lea    0x000000(%eax),%eax



_07c0a4_func:
		data16 mov %cs:_07c0ad_jump,%ds
		ret    

	_07c0ad_jump:
		add    %al,(%eax)


_07c0b0_func:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %dl,0x000051(%eax)
		mov    %dl,%dh
		shl    $0x000008,%edx
		mov    %dh,%dl
		shl    $0x000008,%edx
		mov    %dh,%dl
		mov    %ebx,%ecx
		call   _081540_func
		pop    %ecx
		pop    %eax
		ret    



_07c0c8_func:
		push   %ebx
		push   %ecx
		mov    %dl,%bl
		mov    (%eax),%edx
		lea    0x000001(%edx),%ecx
		mov    %ecx,(%eax)
		mov    %bl,(%edx)
		incl   0x000010(%eax)
		pop    %ecx
		pop    %ebx
		ret    



_07c0db_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		lea    0x00001c(%esp),%eax
		mov    $_07c0c8_func,%ecx
		mov    %esp,%ebx
		mov    0x000018(%esp),%edx
		mov    %eax,(%esp)
		mov    0x000014(%esp),%eax
		call   _081f1e_func
		mov    0x000014(%esp),%edx
		movb   $0x000000,(%edx,%eax,1)
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c10b_func:
		push   %edx
		xor    %edx,%edx
		mov    _0bd808_data,%eax
		mov    %edx,_0bd808_data
		test   %eax,%eax
		jne    _07c126_jump
		mov    $0x000008,%ah
		int    $0x000021
		and    $0x0000ff,%eax

	_07c126_jump:
		pop    %edx
		ret    



_07c13a_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		test   %edx,%edx
		jge    _07c159_jump
		lea    -0x000008(%ebp),%edx
		mov    $0x002043,%eax
		call   _082ada_func
		jmp    _07c184_jump

	_07c159_jump:
		cmpb   $0x000000,_0bd5b9_data
		je     _07c178_jump
		mov    -0x000008(%ebp),%eax
		push   %ebp
		push   %edx
		push   %eax
		mov    %esp,%ebp
		fldl   0x000000(%ebp)
		fsqrt  
		fstpl  0x000000(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		jmp    _07c184_jump

	_07c178_jump:
		test   %edx,%edx
		je     _07c18a_jump
		mov    -0x000008(%ebp),%eax
		call   _082bca_func

	_07c184_jump:
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)

	_07c18a_jump:
		mov    -0x000008(%ebp),%eax
		mov    -0x000004(%ebp),%edx
		mov    %ebp,%esp
		pop    %ebp
		ret    



_07c19c_func:
		mov    $0x00001f,%al
		jmp    _07c1a2_jump



_07c1a0_func:
		mov    $0x000020,%al

	_07c1a2_jump:
		add    %edx,%edx
		rcr    %ah
		shr    %ah
		or     %al,%ah
		shr    %edx
		push   %ecx
		mov    %edx,%ecx
		sar    $0x000014,%ecx
		and    $0x0007ff,%cx
		sub    $0x0003fe,%cx
		jl     _07c211_jump
		cmp    $0x000020,%cx
		jg     _07c20a_jump
		and    $0x00003f,%al
		cmp    %al,%cl
		jg     _07c20a_jump
		mov    %ah,%ch
		and    $0x0fffff,%edx
		and    $0xfff00000,%eax
		or     %eax,%edx
		rol    $0x00000c,%edx
		stc    
		rcr    %edx
		rcr    %ch
		cmp    $0x000020,%cl
		jne    _07c1ec_jump
		mov    %edx,%eax
		add    %ch,%ch
		jmp    _07c1f7_jump

	_07c1ec_jump:
		sub    %eax,%eax
		shld   %cl,%edx,%eax
		shl    %cl,%edx
		add    %ch,%ch
		add    %edx,%edx

	_07c1f7_jump:
		mov    $0x0000ff,%cl
		rcr    %cl
		and    %cl,%ch
		add    %ch,%ch
		adc    $0x000000,%eax
		add    %ch,%ch
		jae    _07c208_jump
		neg    %eax

	_07c208_jump:
		pop    %ecx
		ret    

	_07c20a_jump:
		mov    $0x80000000,%eax
		pop    %ecx
		ret    

	_07c211_jump:
		sub    %eax,%eax
		pop    %ecx
		ret    



_07c215_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000038,%esp
		mov    %eax,-0x000044(%ebp)
		mov    %edx,-0x000040(%ebp)
		mov    %ebx,%esi
		lea    -0x00002c(%ebp),%ebx
		call   _082dfc_func
		cmpl   $0x000020,-0x00002c(%ebp)
		jl     _07c24b_jump
		mov    _0c1584_data(,%esi,4),%eax
		lea    -0x000044(%ebp),%edx
		or     $0x000024,%ah
		call   _082ada_func
		jmp    _07c440_jump

	_07c24b_jump:
		lea    -0x000034(%ebp),%eax
		push   %eax
		lea    -0x000028(%ebp),%eax
		push   %eax
		push   $0x3fe921fb
		push   $0x54442d18
		mov    -0x000040(%ebp),%ebx
		push   %ebx
		mov    -0x000044(%ebp),%ecx
		push   %ecx
		call   _082e50_func
		mov    %esi,%eax
		mov    -0x000028(%ebp),%edx
		and    $0x000002,%eax
		add    %edx,%eax
		and    $0x000007,%eax
		mov    %eax,-0x000028(%ebp)
		testb  $0x000001,-0x000028(%ebp)
		je     _07c29b_jump
		mov    $0x54442d18,%eax
		mov    $0x3fe921fb,%edx
		mov    -0x000034(%ebp),%ebx
		mov    -0x000030(%ebp),%ecx
		call   _07b992_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_07c29b_jump:
		lea    -0x00001c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _082dfc_func
		mov    -0x00001c(%ebp),%ebx
		cmp    $0xffffffe6,%ebx
		jge    _07c2cc_jump
		mov    -0x000034(%ebp),%edi
		mov    -0x000030(%ebp),%eax
		xor    %ecx,%ecx
		mov    %eax,-0x000014(%ebp)
		mov    $0x3ff00000,%eax
		mov    %ecx,-0x000018(%ebp)
		mov    %eax,-0x000010(%ebp)
		jmp    _07c36f_jump

	_07c2cc_jump:
		test   %ebx,%ebx
		jle    _07c2d5_jump
		xor    %eax,%eax
		mov    %eax,-0x00001c(%ebp)

	_07c2d5_jump:
		mov    -0x00001c(%ebp),%edx
		neg    %edx
		mov    %edx,-0x00001c(%ebp)
		cmp    $0x000008,%edx
		jle    _07c2e9_jump
		movl   $0x000008,-0x00001c(%ebp)

	_07c2e9_jump:
		mov    -0x00001c(%ebp),%eax
		mov    _0c1560_data(,%eax,4),%eax
		mov    %eax,-0x00001c(%ebp)
		mov    -0x000028(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		jne    _07c303_jump
		cmp    $0x000001,%esi
		jne    _07c33f_jump

	_07c303_jump:
		mov    $0x000008,%eax
		mov    -0x00001c(%ebp),%edx
		sub    %edx,%eax
		mov    %eax,-0x000024(%ebp)
		mov    %edx,%eax
		mov    $_0c1518_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    -0x000034(%ebp),%eax
		mov    %edx,-0x000020(%ebp)
		mov    -0x000030(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07bb4f_func
		mov    -0x000024(%ebp),%ecx
		mov    -0x000020(%ebp),%ebx
		call   _082f49_func
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000010(%ebp)

	_07c33f_jump:
		mov    -0x000028(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		je     _07c34c_jump
		cmp    $0x000001,%esi
		jne    _07c36f_jump

	_07c34c_jump:
		mov    $0x000008,%ecx
		mov    -0x00001c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		sub    %ebx,%ecx
		shl    $0x000003,%ebx
		mov    -0x000030(%ebp),%edx
		add    $_0c14d0_data,%ebx
		call   _082f7e_func
		mov    %eax,%edi
		mov    %edx,-0x000014(%ebp)

	_07c36f_jump:
		mov    -0x000028(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		je     _07c382_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,-0x00003c(%ebp)
		mov    -0x000010(%ebp),%eax
		jmp    _07c388_jump

	_07c382_jump:
		mov    -0x000014(%ebp),%eax
		mov    %edi,-0x00003c(%ebp)

	_07c388_jump:
		mov    %eax,-0x000038(%ebp)
		testb  $0x000004,-0x000028(%ebp)
		je     _07c3a2_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _07c6ce_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_07c3a2_jump:
		cmp    $0x000001,%esi
		jne    _07c41d_jump
		mov    -0x000028(%ebp),%edx
		mov    -0x000028(%ebp),%eax
		add    $0x000002,%edx
		add    $0x000003,%eax
		mov    %edx,-0x000028(%ebp)
		test   $0x000002,%al
		je     _07c3c6_jump
		mov    -0x000018(%ebp),%ebx
		mov    -0x000010(%ebp),%ecx
		jmp    _07c3cb_jump

	_07c3c6_jump:
		mov    -0x000014(%ebp),%ecx
		mov    %edi,%ebx

	_07c3cb_jump:
		testb  $0x000004,-0x000028(%ebp)
		je     _07c3de_jump
		mov    %ebx,%eax
		mov    %ecx,%edx
		call   _07c6ce_func
		mov    %eax,%ebx
		mov    %edx,%ecx

	_07c3de_jump:
		test   %ecx,%ecx
		jne    _07c40c_jump
		call   _082fc5_func
		cmpl   $0x000000,-0x000038(%ebp)
		jle    _07c3fa_jump
		mov    _0c15b0_data,%eax
		mov    _0c15b4_data,%edx
		jmp    _07c440_jump

	_07c3fa_jump:
		mov    _0c15b0_data,%eax
		mov    _0c15b4_data,%edx
		call   _07c6ce_func
		jmp    _07c440_jump

	_07c40c_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _07c4c8_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_07c41d_jump:
		cmpl   $0x00001c,-0x00002c(%ebp)
		jl     _07c43a_jump
		lea    -0x00003c(%ebp),%ebx
		mov    _0c1584_data(,%esi,4),%eax
		lea    -0x000044(%ebp),%edx
		or     $0x000002,%ah
		call   _082ae4_func
		jmp    _07c440_jump

	_07c43a_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx

	_07c440_jump:
		lea    -0x00000c(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_07c45a_func:
		push   %ebx
		cmpb   $0x000000,_0bd5b9_data
		je     _07c46b_jump
		call   _082ffb_func
		pop    %ebx
		ret    

	_07c46b_jump:
		xor    %ebx,%ebx
		call   _07c215_func
		pop    %ebx
		ret    



_07c481_func:
		push   %ebx
		cmpb   $0x000000,_0bd5b9_data
		je     _07c492_jump
		call   _082ff2_func
		pop    %ebx
		ret    

	_07c492_jump:
		mov    $0x000002,%ebx
		call   _07c215_func
		pop    %ebx
		ret    



_07c4c8_func:
		or     %ebx,%ebx
		jne    _07c4d7_jump
		add    %ecx,%ecx
		jne    _07c4d5_jump
		jmp    _081a9d_jump

	_07c4d5_jump:
		rcr    %ecx

	_07c4d7_jump:
		or     %eax,%eax
		jne    _07c4e2_jump
		add    %edx,%edx
		jne    _07c4e0_jump
		ret    

	_07c4e0_jump:
		rcr    %edx

	_07c4e2_jump:
		cmpb   $0x000000,_0bd5b9_data
		je     _07c51b_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		testb  $0x000001,_0bd884_data
		je     _07c502_jump
		call   _083798_func
		jmp    _07c508_jump

	_07c502_jump:
		fdivl  (%esp)
		add    $0x000008,%esp

	_07c508_jump:
		fstpl  (%esp)
		fwait
		pop    %eax
		pop    %edx
		cmp    $0x80000000,%edx
		jne    _07c51a_jump
		sub    %edx,%edx
		mov    %edx,%eax

	_07c51a_jump:
		ret    

	_07c51b_jump:
		push   %ebp
		mov    %esp,%ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %cx,%di
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		je     _07c55e_jump
		or     $0x100000,%edx
		jmp    _07c56c_jump

	_07c55e_jump:
		add    %eax,%eax
		adc    %edx,%edx
		dec    %di
		test   $0x100000,%edx
		je     _07c55e_jump

	_07c56c_jump:
		or     %cx,%cx
		je     _07c579_jump
		or     $0x100000,%esi
		jmp    _07c587_jump

	_07c579_jump:
		add    %ebx,%ebx
		adc    %esi,%esi
		dec    %cx
		test   $0x100000,%esi
		je     _07c579_jump

	_07c587_jump:
		sub    %cx,%di
		add    $0x0003ff,%di
		js     _07c5a2_jump
		cmp    $0x0007ff,%di
		jb     _07c5a2_jump
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _081aa9_jump

	_07c5a2_jump:
		cmp    $0x00ffcc,%di
		jge    _07c5b0_jump
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _081a98_jump

	_07c5b0_jump:
		push   %edi
		mov    $0x00000b,%cl
		shld   %cl,%eax,%edx
		shld   %cl,%ebp,%eax
		and    $0xfffff800,%eax
		shld   %cl,%ebx,%esi
		shld   %cl,%ebp,%ebx
		and    $0xfffff800,%ebx
		push   %esi
		push   %ebx
		mov    %esi,%ecx
		mov    %edx,%edi
		mov    %eax,%esi
		sub    %eax,%eax
		cmp    %edx,%ecx
		ja     _07c5db_jump
		sub    %ecx,%edx
		inc    %eax

	_07c5db_jump:
		push   %eax
		mov    %esi,%eax
		div    %ecx
		push   %eax
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %edx,%ebx
		mul    %edx
		add    %ebx,%eax
		adc    $0x000000,%edx
		mov    -0x000014(%ebp),%ebx
		testb  $0x000001,-0x000018(%ebp)
		je     _07c5fc_jump
		add    %ebx,%eax
		adc    -0x000010(%ebp),%edx

	_07c5fc_jump:
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     _07c616_jump

	_07c604_jump:
		subl   $0x000001,-0x00001c(%ebp)
		sbbl   $0x000000,-0x000018(%ebp)
		add    %ebx,%ecx
		adc    -0x000010(%ebp),%esi
		adc    $0x000000,%edi
		jne    _07c604_jump

	_07c616_jump:
		mov    %esi,%edi
		mov    %ecx,%esi
		mov    -0x000010(%ebp),%ecx
		cmp    %edi,%ecx
		ja     _07c62b_jump
		sub    %ecx,%edi
		addl   $0x000001,-0x00001c(%ebp)
		adcl   $0x000000,-0x000018(%ebp)

	_07c62b_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		div    %ecx
		push   %eax
		or     %eax,%eax
		je     _07c662_jump
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %edx,%ebx
		mul    %edx
		add    %ebx,%eax
		adc    $0x000000,%edx
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     _07c662_jump

	_07c64b_jump:
		subl   $0x000001,-0x000020(%ebp)
		sbbl   $0x000000,-0x00001c(%ebp)
		sbbl   $0x000000,-0x000018(%ebp)
		add    -0x000014(%ebp),%ecx
		adc    -0x000010(%ebp),%esi
		adc    $0x000000,%edi
		jne    _07c64b_jump

	_07c662_jump:
		pop    %eax
		pop    %edx
		pop    %ebx
		add    $0x000008,%esp
		pop    %edi
		dec    %di
		shr    %ebx
		jae    _07c674_jump
		rcr    %edx
		rcr    %eax
		inc    %edi

	_07c674_jump:
		sub    %esi,%esi
		mov    $0x00000b,%cl
		shrd   %cl,%edx,%eax
		rcr    %esi
		shrd   %cl,%esi,%edx
		or     $0xfff00000,%edx
		add    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		adc    $0x000000,%edi
		or     %di,%di
		jg     _07c6b3_jump
		jne    _07c69c_jump
		mov    $0x000001,%cl
		jmp    _07c6a2_jump

	_07c69c_jump:
		neg    %di
		mov    %di,%cx

	_07c6a2_jump:
		and    $0x1fffff,%edx
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %di,%di

	_07c6b3_jump:
		and    $0x0fffff,%edx
		mov    %edi,%esi
		ror    $0x00000b,%edi
		add    %esi,%esi
		rcr    %edi
		and    $0xfff00000,%edi
		or     %edi,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    



_07c6ce_func:
		test   %edx,%edx
		jne    _07c6d4_jump
		test   %eax,%eax

	_07c6d4_jump:
		je     _07c6dc_jump
		xor    $0x80000000,%edx

	_07c6dc_jump:
		ret    



_07c6dd_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		push   %eax
		push   %edx
		mov    %ecx,%ebp
		testb  $0x000001,0x00000c(%ecx)
		jne    _07c707_jump
		mov    $0x000004,%eax
		call   _082fb9_func
		mov    0x00000c(%ecx),%dh
		or     $0x000020,%dh
		xor    %eax,%eax
		mov    %dh,0x00000c(%ecx)
		jmp    _07c8b1_jump

	_07c707_jump:
		imul   %edx,%ebx
		test   %ebx,%ebx
		jne    _07c715_jump
		mov    %ebx,%eax
		jmp    _07c8b1_jump

	_07c715_jump:
		cmpl   $0x000000,0x000008(%ecx)
		jne    _07c722_jump
		mov    %ebp,%eax
		call   _08387c_func

	_07c722_jump:
		xor    %esi,%esi
		mov    0x00000c(%ebp),%dl
		mov    %esi,0x000008(%esp)
		test   $0x000040,%dl
		je     _07c832_jump
		mov    %ebx,0x00000c(%esp)

	_07c738_jump:
		mov    0x000004(%ebp),%edx
		test   %edx,%edx
		je     _07c793_jump
		mov    0x00000c(%esp),%ebx
		cmp    %ebx,%edx
		jbe    _07c749_jump
		mov    %ebx,%edx

	_07c749_jump:
		mov    0x000004(%esp),%edi
		mov    %edx,%ecx
		mov    0x000000(%ebp),%esi
		mov    0x000008(%esp),%ebx
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x00000c(%esp),%eax
		mov    0x000000(%ebp),%ecx
		lea    (%edi,%edx,1),%esi
		add    %edx,%ebx
		mov    %esi,0x000004(%esp)
		mov    %ebx,0x000008(%esp)
		mov    0x000004(%ebp),%edi
		add    %edx,%ecx
		sub    %edx,%eax
		sub    %edx,%edi
		mov    %ecx,0x000000(%ebp)
		mov    %eax,0x00000c(%esp)
		mov    %edi,0x000004(%ebp)

	_07c793_jump:
		mov    0x00000c(%esp),%ecx
		test   %ecx,%ecx
		je     _07c8a6_jump
		cmp    0x000014(%ebp),%ecx
		jae    _07c7ae_jump
		testb  $0x000004,0x00000d(%ebp)
		je     _07c81e_jump

	_07c7ae_jump:
		movl   $0x000000,0x000004(%ebp)
		mov    0x00000c(%esp),%ebx
		mov    0x000008(%ebp),%eax
		mov    0x00000d(%ebp),%cl
		mov    %eax,0x000000(%ebp)
		test   $0x000004,%cl
		jne    _07c7d4_jump
		cmp    $0x000200,%ebx
		jbe    _07c7d4_jump
		xor    %bl,%bl
		and    $0x0000fe,%bh

	_07c7d4_jump:
		mov    0x000004(%esp),%edx
		mov    0x000010(%ebp),%eax
		call   _0838f3_func
		cmp    $0xffffffff,%eax
		jne    _07c7ee_jump
		orb    $0x000020,0x00000c(%ebp)
		jmp    _07c8a6_jump

	_07c7ee_jump:
		test   %eax,%eax
		jne    _07c7fb_jump

	_07c7f2_jump:
		orb    $0x000010,0x00000c(%ebp)
		jmp    _07c8a6_jump

	_07c7fb_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000008(%esp),%ecx
		add    %eax,%edx
		sub    %eax,%ebx
		add    %eax,%ecx
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %ecx,0x000008(%esp)
		jmp    _07c738_jump

	_07c81e_jump:
		mov    %ebp,%eax
		call   _07cc6e_func
		test   %eax,%eax
		je     _07c8a6_jump
		jmp    _07c738_jump

	_07c832_jump:
		mov    0x000004(%esp),%edx
		add    %edx,%ebx

	_07c838_jump:
		cmpl   $0x000000,0x000004(%ebp)
		jne    _07c849_jump
		mov    %ebp,%eax
		call   _07cc6e_func
		test   %eax,%eax
		je     _07c8a6_jump

	_07c849_jump:
		mov    0x000004(%ebp),%ecx
		mov    0x000000(%ebp),%eax
		dec    %ecx
		lea    0x000001(%eax),%esi
		mov    %ecx,0x000004(%ebp)
		mov    %esi,0x000000(%ebp)
		mov    (%eax),%al
		and    $0x0000ff,%eax
		cmp    $0x00000d,%eax
		jne    _07c88d_jump
		cmpl   $0x000000,0x000004(%ebp)
		jne    _07c876_jump
		mov    %ebp,%eax
		call   _07cc6e_func
		test   %eax,%eax
		je     _07c8a6_jump

	_07c876_jump:
		mov    0x000004(%ebp),%edi
		mov    0x000000(%ebp),%eax
		dec    %edi
		lea    0x000001(%eax),%esi
		mov    %edi,0x000004(%ebp)
		mov    %esi,0x000000(%ebp)
		mov    (%eax),%al
		and    $0x0000ff,%eax

	_07c88d_jump:
		cmp    $0x00001a,%eax
		je     _07c7f2_jump
		mov    %al,(%edx)
		mov    0x000008(%esp),%eax
		inc    %eax
		inc    %edx
		mov    %eax,0x000008(%esp)
		cmp    %ebx,%edx
		jne    _07c838_jump

	_07c8a6_jump:
		mov    0x000008(%esp),%eax
		mov    (%esp),%esi
		xor    %edx,%edx
		div    %esi

	_07c8b1_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_07c8b8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		andb   $0x0000ef,0x00000c(%edx)
		cmp    0x000004(%edx),%eax
		jg     _07c8e4_jump
		mov    0x000008(%edx),%ebx
		mov    (%edx),%ecx
		sub    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _07c8e4_jump
		mov    0x000004(%edx),%edi
		lea    (%ecx,%eax,1),%esi
		sub    %eax,%edi
		mov    %esi,(%edx)
		xor    %eax,%eax
		mov    %edi,0x000004(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07c8e4_jump:
		mov    0x000008(%edx),%eax
		movl   $0x000000,0x000004(%edx)
		mov    %eax,(%edx)
		mov    $0x000001,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07c8fa_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%esi
		testb  $0x000006,0x00000c(%eax)
		je     _07c962_jump
		testb  $0x000010,0x00000d(%ecx)
		je     _07c933_jump
		mov    %ecx,%eax
		call   _083912_func
		test   %eax,%eax
		je     _07c947_jump
		test   %ebx,%ebx
		jne    _07c92a_jump
		test   %esi,%esi
		jge    _07c92a_jump

	_07c920_jump:
		mov    $0x000009,%eax
		call   _082fb9_func

	_07c92a_jump:
		mov    $0xffffffff,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07c933_jump:
		cmp    $0x000001,%ebx
		jne    _07c93b_jump
		sub    0x000004(%ecx),%esi

	_07c93b_jump:
		mov    0x000008(%ecx),%eax
		movl   $0x000000,0x000004(%ecx)
		mov    %eax,(%ecx)

	_07c947_jump:
		andb   $0x0000eb,0x00000c(%ecx)
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		call   _07d278_func
		cmp    $0xffffffff,%eax
		jne    _07c9f0_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07c962_jump:
		cmp    $0x000001,%ebx
		jb     _07c970_jump
		jbe    _07c976_jump
		cmp    $0x000002,%ebx
		je     _07c9cc_jump
		jmp    _07c920_jump

	_07c970_jump:
		test   %ebx,%ebx
		je     _07c99b_jump
		jmp    _07c920_jump

	_07c976_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		mov    0x000004(%ecx),%edi
		call   _07c8b8_func
		test   %eax,%eax
		je     _07c9f0_jump
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		sub    %edi,%edx
		call   _07d278_func
		cmp    $0xffffffff,%eax
		jne    _07c9f0_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07c99b_jump:
		mov    0x000010(%ecx),%eax
		call   _0839eb_func
		mov    0x000004(%ecx),%edx
		mov    %esi,%edi
		sub    %edx,%eax
		sub    %eax,%edi
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _07c8b8_func
		test   %eax,%eax
		je     _07c9f0_jump
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		call   _07d278_func
		cmp    $0xffffffff,%eax
		jne    _07c9f0_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07c9cc_jump:
		mov    0x000008(%ecx),%eax
		mov    0x00000c(%ecx),%dl
		mov    %eax,(%ecx)
		and    $0x0000ef,%dl
		mov    0x000010(%ecx),%eax
		mov    %dl,0x00000c(%ecx)
		mov    %esi,%edx
		movl   $0x000000,0x000004(%ecx)
		call   _07d278_func
		cmp    $0xffffffff,%eax
		je     _07c9f2_jump

	_07c9f0_jump:
		xor    %eax,%eax

	_07c9f2_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07cc6e_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpl   $0x000000,0x000008(%eax)
		jne    _07cc7f_jump
		call   _08387c_func

	_07cc7f_jump:
		mov    0x00000d(%ecx),%ah
		test   $0x000020,%ah
		je     _07cc96_jump
		test   $0x000006,%ah
		je     _07cc96_jump
		mov    $0x002000,%eax
		call   _083a81_func

	_07cc96_jump:
		mov    0x000008(%ecx),%edx
		mov    %edx,(%ecx)
		mov    0x00000c(%ecx),%dh
		mov    0x00000c(%ecx),%eax
		and    $0x0000fb,%dh
		and    $0x002400,%eax
		mov    %dh,0x00000c(%ecx)
		cmp    $0x002400,%eax
		jne    _07ccd6_jump
		mov    0x000010(%ecx),%ebx
		test   %ebx,%ebx
		jne    _07ccd6_jump
		mov    %ebx,0x000004(%ecx)
		call   _0812d3_func
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		je     _07ccf3_jump
		mov    (%ecx),%eax
		mov    %dl,(%eax)
		movl   $0x000001,0x000004(%ecx)
		jmp    _07ccf3_jump

	_07ccd6_jump:
		testb  $0x000004,0x00000d(%ecx)
		je     _07cce3_jump
		mov    $0x000001,%ebx
		jmp    _07cce6_jump

	_07cce3_jump:
		mov    0x000014(%ecx),%ebx

	_07cce6_jump:
		mov    (%ecx),%edx
		mov    0x000010(%ecx),%eax
		call   _0838f3_func
		mov    %eax,0x000004(%ecx)

	_07ccf3_jump:
		mov    0x000004(%ecx),%esi
		test   %esi,%esi
		jg     _07cd12_jump
		jne    _07cd02_jump
		orb    $0x000010,0x00000c(%ecx)
		jmp    _07cd12_jump

	_07cd02_jump:
		mov    0x00000c(%ecx),%bh
		movl   $0x000000,0x000004(%ecx)
		or     $0x000020,%bh
		mov    %bh,0x00000c(%ecx)

	_07cd12_jump:
		mov    0x000004(%ecx),%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07cd1a_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		testb  $0x000002,0x00000c(%edx)
		jne    _07cd3f_jump
		mov    $0x000004,%eax
		call   _082fb9_func
		orb    $0x000020,0x00000c(%edx)

	_07cd35_jump:
		mov    $0xffffffff,%eax
		jmp    _07cdb8_jump

	_07cd3f_jump:
		cmpl   $0x000000,0x000008(%edx)
		jne    _07cd4c_jump
		mov    %edx,%eax
		call   _08387c_func

	_07cd4c_jump:
		mov    $0x000400,%ecx
		cmp    $0x00000a,%ebx
		jne    _07cd89_jump
		mov    0x00000c(%edx),%al
		mov    $0x000600,%ecx
		test   $0x000040,%al
		jne    _07cd89_jump
		orb    $0x000010,0x00000d(%edx)
		mov    (%edx),%eax
		movb   $0x00000d,(%eax)
		mov    (%edx),%esi
		inc    %esi
		mov    0x000004(%edx),%edi
		mov    %esi,(%edx)
		inc    %edi
		mov    0x000014(%edx),%ebp
		mov    %edi,0x000004(%edx)
		cmp    %ebp,%edi
		jne    _07cd89_jump
		mov    %edx,%eax
		call   _083912_func
		test   %eax,%eax
		jne    _07cd35_jump

	_07cd89_jump:
		orb    $0x000010,0x00000d(%edx)
		mov    (%edx),%eax
		mov    %bl,(%eax)
		mov    (%edx),%eax
		inc    %eax
		mov    0x000004(%edx),%esi
		mov    %eax,(%edx)
		inc    %esi
		mov    0x00000c(%edx),%edi
		mov    %esi,0x000004(%edx)
		test   %edi,%ecx
		jne    _07cda9_jump
		cmp    0x000014(%edx),%esi
		jne    _07cdb4_jump

	_07cda9_jump:
		mov    %edx,%eax
		call   _083912_func
		test   %eax,%eax
		jne    _07cd35_jump

	_07cdb4_jump:
		xor    %eax,%eax
		mov    %bl,%al

	_07cdb8_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

.data

_07cdcf_data:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"

.text



_07cdf4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x000001(%esp),%ecx
		mov    %dl,(%esp)

	_07ce0a_jump:
		lea    0x000024(%esp),%ebx
		mov    %edi,0x000024(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %eax,(%ebx)
		mov    %cs:_07cdcf_data(%edx),%al
		mov    %al,(%ecx)
		mov    0x000024(%esp),%eax
		inc    %ecx
		test   %eax,%eax
		jne    _07ce0a_jump

	_07ce2a_jump:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    _07ce2a_jump
		mov    %ebp,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07ce3e_func:
		push   %ecx
		mov    %edx,%ecx
		cmp    $0x00000a,%ebx
		jne    _07ce50_jump
		test   %eax,%eax
		jge    _07ce50_jump
		neg    %eax
		movb   $0x00002d,(%edx)
		inc    %edx

	_07ce50_jump:
		call   _07cdf4_func
		mov    %ecx,%eax
		pop    %ecx
		ret    

.data

_07ce59_data:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"

.text



_07ce7e_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x000001(%esp),%ecx
		mov    %dl,(%esp)

	_07ce94_jump:
		lea    0x000024(%esp),%ebx
		mov    %edi,0x000024(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %edx,(%ebx)
		mov    0x000024(%esp),%edx
		mov    %cs:_07ce59_data(%edx),%dl
		mov    %dl,(%ecx)
		inc    %ecx
		test   %eax,%eax
		jne    _07ce94_jump

	_07ceb4_jump:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    _07ceb4_jump
		mov    %ebp,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07cec8_func:
		push   %ecx
		mov    %edx,%ecx
		cmp    $0x00000a,%ebx
		jne    _07ceda_jump
		test   %eax,%eax
		jge    _07ceda_jump
		neg    %eax
		movb   $0x00002d,(%edx)
		inc    %edx

	_07ceda_jump:
		call   _07ce7e_func
		mov    %ecx,%eax
		pop    %ecx
		ret    



_07cee3_func:
		jmp    _07bd43_jump



_07cee8_func:
		cmpl   $0x000000,_0bd808_data
		je     _07cef7_jump
		mov    $0x000001,%eax
		ret    

	_07cef7_jump:
		mov    $0x00000b,%ah
		int    $0x000021
		movsbl %al,%eax
		ret    



_07cf00_func:
		mov    %eax,%ecx
		mov    %edx,%eax
		mov    %ebp,%esp
		xchg   %ecx,0x000028(%ebp)
		xchg   %eax,0x00002c(%ebp)
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		pop    %ebp
		pop    %ebx
		pop    %ebx
		pop    %edx
		lret   



_07cf19_func:
		push   %ebx
		push   %ecx
		xor    %edx,%edx
		mov    _0bd816_data,%dl
		cmp    $0x000002,%edx
		jl     _07cf36_jump
		cmp    $0x000008,%edx
		jg     _07cf36_jump
		mov    %al,%cl
		mov    $0x002502,%eax
		jmp    _07cf40_jump

	_07cf36_jump:
		and    $0x0000ff,%eax
		xor    %cl,%cl
		or     $0x000035,%ah

	_07cf40_jump:
		push   %es
		int    $0x000021
		mov    %es,%edx
		pop    %es
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_07cf4b_func:
		push   %edx
		mov    %ebx,%edx
		xor    %ebx,%ebx
		mov    _0bd816_data,%bl
		cmp    $0x000002,%ebx
		jl     _07cf6e_jump
		cmp    $0x000008,%ebx
		jg     _07cf6e_jump
		push   %ds
		mov    %ecx,%ds
		mov    %al,%cl
		mov    $0x000004,%al
		mov    $0x000025,%ah
		int    $0x000021
		pop    %ds
		pop    %edx
		ret    

	_07cf6e_jump:
		push   %ds
		mov    %ecx,%ds
		mov    $0x000025,%ah
		int    $0x000021
		pop    %ds
		pop    %edx
		ret    



_07cf78_func:
		mov    $_0bd5a8_data,%eax
		ret    



_07cf7e_func:
		push   %edx
		call   _07cf78_func
		test   %eax,%eax
		je     _07cfa0_jump
		imul   $0x41c64e6d,(%eax),%edx
		add    $0x003039,%edx
		mov    %edx,(%eax)
		mov    %edx,%eax
		shr    $0x000010,%eax
		and    $0x007fff,%eax

	_07cfa0_jump:
		pop    %edx
		ret    



_07cfa2_func:
		push   %edx
		mov    %eax,%edx
		call   _07cf78_func
		test   %eax,%eax
		je     _07cfb0_jump
		mov    %edx,(%eax)

	_07cfb0_jump:
		pop    %edx
		ret    



_07cfb2_func:
		push   %ecx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %esp,%eax
		mov    %esp,%ecx
		call   _083ab0_func
		mov    %esi,%eax
		call   _0815e3_func
		add    $0x00000c,%esp
		pop    %esi
		pop    %ecx
		ret    



_07cfcf_func:
		push   %ebx
		push   %edx
		lea    0x000014(%esp),%eax
		add    $0x000004,%eax
		mov    -0x000004(%eax),%eax
		push   %eax
		push   $0x000000
		mov    0x000018(%esp),%edx
		push   %edx
		mov    0x000018(%esp),%ebx
		push   %ebx
		call   _07cff3_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ebx
		ret    



_07cff3_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    0x000024(%esp),%esi

	_07cfff_jump:
		movzbl (%esi),%edi
		cmp    $0x000020,%edi
		jne    _07d00a_jump
		inc    %esi
		jmp    _07cfff_jump

	_07d00a_jump:
		mov    0x000028(%esp),%eax
		and    $0x000083,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000004(%esp),%al
		mov    0x00002c(%esp),%ah
		mov    %esi,%edx
		or     %ah,%al
		mov    $0xffffffff,%edi
		mov    $0x00003d,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _07d03d_jump
		xor    %edi,%edi
		mov    (%esp),%di

	_07d03d_jump:
		mov    0x000028(%esp),%dl
		test   $0x000003,%dl
		je     _07d0c0_jump
		cmp    $0xffffffff,%edi
		je     _07d0c0_jump
		mov    %edi,%eax
		call   _083ad8_func
		test   %eax,%eax
		jne    _07d0c0_jump
		testb  $0x000004,0x000029(%esp)
		je     _07d088_jump
		test   $0x000020,%dl
		je     _07d088_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    $0x000007,%eax
		call   _082fb9_func
		mov    $0xffffffff,%eax
		jmp    _07d1d3_jump

	_07d088_jump:
		testb  $0x000040,0x000028(%esp)
		je     _07d0c0_jump
		lea    0x000008(%esp),%edx
		mov    %edi,%ebx
		xor    %ecx,%ecx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jge    _07d0c0_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax

	_07d0b0_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		call   _081bf4_func
		jmp    _07d1d3_jump

	_07d0c0_jump:
		cmp    $0xffffffff,%edi
		jne    _07d162_jump
		testb  $0x000020,0x000028(%esp)
		je     _07d0b0_jump
		xor    %eax,%eax
		mov    (%esp),%ax
		cmp    $0x000002,%eax
		jne    _07d0b0_jump
		lea    0x000030(%esp),%eax
		add    $0x000004,%eax
		mov    -0x000004(%eax),%eax
		test   %eax,%eax
		jne    _07d0ee_jump
		mov    $0x000180,%eax

	_07d0ee_jump:
		mov    _0bd888_data,%edx
		not    %edx
		and    %edx,%eax
		xor    %ecx,%ecx
		test   $0x000080,%al
		jne    _07d103_jump
		mov    $0x000001,%ecx

	_07d103_jump:
		and    $0x0000ff,%ecx
		mov    %esi,%edx
		mov    $0x00003c,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _07d0b0_jump
		xor    %edi,%edi
		mov    0x00002c(%esp),%edx
		mov    (%esp),%di
		test   %edx,%edx
		je     _07d162_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _07d0b0_jump
		mov    0x000004(%esp),%al
		mov    0x00002c(%esp),%ch
		mov    %esi,%edx
		or     %ch,%al
		mov    $0x00003d,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _07d0b0_jump
		xor    %edi,%edi
		mov    (%esp),%di

	_07d162_jump:
		mov    %edi,%eax
		call   _083aff_func
		and    $0x00003c,%al
		mov    %eax,%edx
		mov    %edi,%eax
		call   _083ad8_func
		test   %eax,%eax
		je     _07d17b_jump
		or     $0x000020,%dh

	_07d17b_jump:
		andb   $0x00007f,0x000004(%esp)
		cmpl   $0x000002,0x000004(%esp)
		jne    _07d18a_jump
		or     $0x000003,%dl

	_07d18a_jump:
		cmpl   $0x000000,0x000004(%esp)
		jne    _07d194_jump
		or     $0x000001,%dl

	_07d194_jump:
		cmpl   $0x000001,0x000004(%esp)
		jne    _07d19e_jump
		or     $0x000002,%dl

	_07d19e_jump:
		testb  $0x000010,0x000028(%esp)
		je     _07d1a8_jump
		or     $0x000080,%dl

	_07d1a8_jump:
		mov    %edx,%eax
		mov    0x000029(%esp),%bl
		or     $0x000040,%al
		test   $0x000003,%bl
		je     _07d1bc_jump
		test   $0x000002,%bl
		je     _07d1ca_jump
		jmp    _07d1c8_jump

	_07d1bc_jump:
		cmpl   $0x000200,_0bd7c5_data
		jne    _07d1ca_jump

	_07d1c8_jump:
		mov    %eax,%edx

	_07d1ca_jump:
		mov    %edi,%eax
		call   _083b54_func
		mov    %edi,%eax

	_07d1d3_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d242_func:
		push   $0x003f00
		push   %ds
		mov    %ecx,%ds
		mov    %edx,%ecx
		mov    %ebx,%edx
		mov    %eax,%ebx
		mov    0x000004(%esp),%eax
		int    $0x000021
		pop    %ds
		push   %ds
		jb     _07d260_jump
		mov    0x00000c(%esp),%ebx
		mov    %eax,(%ebx)

	_07d260_jump:
		call   _083b6a_func
		pop    %ds
		add    $0x000004,%esp
		ret    $0x000004



_07d273_func:
		jmp    _083b7d_func



_07d278_func:
		push   %ecx
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %esp,%edi
		mov    %bl,%al
		mov    %ecx,%ebx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		mov    %ax,%ss:(%edi)
		mov    %dx,%ss:0x000002(%edi)
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _07d2b2_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _081bf4_func
		mov    $0xffffffff,%eax
		jmp    _07d2b5_jump

	_07d2b2_jump:
		mov    (%esp),%eax

	_07d2b5_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %ecx
		ret    



_07d2bb_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx

	_07d2bf_jump:
		mov    (%ebx),%al
		xor    %ecx,%ecx
		mov    (%edx),%ah
		mov    %al,%cl
		cmp    $0x000041,%ecx
		jl     _07d2d3_jump
		cmp    $0x00005a,%ecx
		jg     _07d2d3_jump
		add    $0x000020,%al

	_07d2d3_jump:
		xor    %ecx,%ecx
		mov    %ah,%cl
		cmp    $0x000041,%ecx
		jl     _07d2e4_jump
		cmp    $0x00005a,%ecx
		jg     _07d2e4_jump
		add    $0x000020,%ah

	_07d2e4_jump:
		cmp    %ah,%al
		jne    _07d2f0_jump
		test   %ah,%ah
		je     _07d2f0_jump
		inc    %ebx
		inc    %edx
		jmp    _07d2bf_jump

	_07d2f0_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ah,%al
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_07d302_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%al
		xor    %edx,%edx
		call   _083bb2_func
		mov    %al,(%esp)
		and    $0x0000ff,%eax
		cmp    $0x000072,%eax
		je     _07d33e_jump
		cmp    $0x000077,%eax
		je     _07d33e_jump
		cmp    $0x000061,%eax
		je     _07d33e_jump
		mov    $0x000009,%eax
		call   _082fb9_func
		xor    %eax,%eax
		jmp    _07d3cb_jump

	_07d33e_jump:
		xor    %ecx,%ecx
		mov    %edx,%esi
		mov    0x000001(%ebx),%cl
		or     $0x000003,%si
		cmp    $0x00002b,%ecx
		jne    _07d373_jump
		xor    %eax,%eax
		mov    %esi,%edx
		mov    0x000002(%ebx),%al
		or     $0x000040,%si
		cmp    $0x000062,%eax
		je     _07d36f_jump
		cmp    $0x000074,%eax
		je     _07d3ad_jump
		cmpl   $0x000200,_0bd7c5_data

	_07d36d_jump:
		jne    _07d3ad_jump

	_07d36f_jump:
		mov    %esi,%edx
		jmp    _07d3ad_jump

	_07d373_jump:
		mov    %edx,%eax
		or     $0x000040,%al
		cmp    $0x000062,%ecx
		jne    _07d390_jump
		mov    %eax,%edx
		mov    0x000002(%ebx),%bl
		and    $0x0000ff,%ebx
		cmp    $0x00002b,%ebx
		jne    _07d3ad_jump
		or     $0x000003,%al
		jmp    _07d3ab_jump

	_07d390_jump:
		cmp    $0x000074,%ecx
		jne    _07d39f_jump
		xor    %eax,%eax
		mov    0x000002(%ebx),%al
		cmp    $0x00002b,%eax
		jmp    _07d36d_jump

	_07d39f_jump:
		cmpl   $0x000200,_0bd7c5_data
		jne    _07d3ad_jump

	_07d3ab_jump:
		mov    %eax,%edx

	_07d3ad_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x000077,%eax
		jne    _07d3bc_jump
		or     $0x000002,%dl
		jmp    _07d3c9_jump

	_07d3bc_jump:
		cmp    $0x000061,%eax
		jne    _07d3c6_jump
		or     $0x000082,%dl
		jmp    _07d3c9_jump

	_07d3c6_jump:
		or     $0x000001,%dl

	_07d3c9_jump:
		mov    %edx,%eax

	_07d3cb_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d3d3_func:
		push   %esi
		mov    %eax,%esi
		mov    %dl,%al
		mov    %ecx,%edx
		mov    0x000008(%esp),%ecx
		andb   $0x0000fc,0x00000c(%ecx)
		or     %ebx,0x00000c(%ecx)
		and    $0x0000ff,%eax
		call   _083bb2_func
		and    $0x0000ff,%eax
		cmp    $0x000072,%eax
		jne    _07d416_jump
		xor    %eax,%eax
		test   $0x000002,%bl
		je     _07d405_jump
		mov    $0x000002,%eax

	_07d405_jump:
		test   $0x000040,%bl
		je     _07d40f_jump
		or     $0x000002,%ah
		jmp    _07d412_jump

	_07d40f_jump:
		or     $0x000001,%ah

	_07d412_jump:
		push   $0x000000
		jmp    _07d441_jump

	_07d416_jump:
		test   $0x000001,%bl
		setne  %al
		and    $0x0000ff,%eax
		add    $0x000021,%eax
		test   $0x000080,%bl
		je     _07d42d_jump
		or     $0x000010,%al
		jmp    _07d42f_jump

	_07d42d_jump:
		or     $0x000040,%al

	_07d42f_jump:
		test   $0x000040,%bl
		je     _07d439_jump
		or     $0x000002,%ah
		jmp    _07d43c_jump

	_07d439_jump:
		or     $0x000001,%ah

	_07d43c_jump:
		push   $0x000180

	_07d441_jump:
		push   %edx
		push   %eax
		push   %esi
		call   _07cff3_func
		add    $0x000010,%esp
		mov    %eax,0x000010(%ecx)
		cmpl   $0xffffffff,0x000010(%ecx)
		jne    _07d462_jump
		mov    %ecx,%eax
		call   _083c66_func
		xor    %eax,%eax
		pop    %esi
		ret    $0x000004

	_07d462_jump:
		movl   $0x000000,0x000004(%ecx)
		movl   $0x000000,0x000008(%ecx)
		movl   $0x000000,0x000014(%ecx)
		test   $0x000080,%bl
		je     _07d48a_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07c8fa_func

	_07d48a_jump:
		mov    %ecx,%eax
		call   _083cbd_func
		mov    %ecx,%eax
		pop    %esi
		ret    $0x000004



_07d497_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %ebx,%ecx
		mov    %edx,%eax
		call   _07d302_func
		mov    %eax,%ebx
		test   %eax,%eax
		je     _07d4cc_jump
		xor    %eax,%eax
		call   _083bc0_func
		mov    %eax,%edi
		test   %eax,%eax
		je     _07d4ca_jump
		push   %eax
		mov    (%edx),%dl
		and    $0x0000ff,%edx
		mov    %esi,%eax
		call   _07d3d3_func
		mov    %eax,%edi

	_07d4ca_jump:
		mov    %edi,%eax

	_07d4cc_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07d4d0_func:
		push   %ebx
		xor    %ebx,%ebx
		call   _07d497_func
		pop    %ebx
		ret    



_07d584_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    _0e5f40_data,%eax

	_07d58d_jump:
		test   %eax,%eax
		jne    _07d599_jump
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

	_07d599_jump:
		cmp    0x000004(%eax),%ebx
		je     _07d5a2_jump
		mov    (%eax),%eax
		jmp    _07d58d_jump

	_07d5a2_jump:
		mov    $0x000001,%edx
		mov    %ebx,%eax
		call   _07d5b1_func
		pop    %edx
		pop    %ebx
		ret    



_07d5b1_func:
		push   %ebx
		mov    %eax,%ebx
		call   _07d637_func
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _083c66_func
		mov    %edx,%eax
		pop    %ebx
		ret    



_07d5c6_func:
		add    $0x000030,%eax
		cmp    $0x000039,%eax
		jle    _07d5d1_jump
		add    $0x000027,%eax

	_07d5d1_jump:
		ret    



_07d5d2_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%edi
		call   _083cee_func
		mov    %eax,%ebx
		lea    0x000004(%ecx),%edx
		movb   $0x000074,(%ecx)
		mov    %ecx,%esi

	_07d5e9_jump:
		mov    %ebx,%eax
		and    $0x00000f,%eax
		call   _07d5c6_func
		mov    %al,(%edx)
		dec    %edx
		shr    $0x000004,%ebx
		cmp    %esi,%edx
		jne    _07d5e9_jump
		mov    %edi,%eax
		sar    $0x000004,%eax
		and    $0x00000f,%eax
		movb   $0x00005f,0x000005(%ecx)
		call   _07d5c6_func
		mov    %al,0x000006(%ecx)
		mov    %edi,%eax
		and    $0x00000f,%eax
		call   _07d5c6_func
		movb   $0x00002e,0x000008(%ecx)
		movb   $0x000074,0x000009(%ecx)
		movb   $0x00006d,0x00000a(%ecx)
		movb   $0x000070,0x00000b(%ecx)
		movb   $0x000000,0x00000c(%ecx)
		mov    %al,0x000007(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07d637_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		cmpl   $0x000000,0x00000c(%eax)
		jne    _07d653_jump
		mov    $0xffffffff,%eax
		jmp    _07d6be_jump

	_07d653_jump:
		mov    0x00000d(%eax),%ah
		xor    %esi,%esi
		test   $0x000010,%ah
		je     _07d666_jump
		mov    %ecx,%eax
		call   _083912_func
		mov    %eax,%esi

	_07d666_jump:
		mov    %ecx,%eax
		call   _0817cc_func
		cmp    $0xffffffff,%eax
		je     _07d680_jump
		mov    %eax,%edx
		mov    0x000010(%ecx),%ebp
		xor    %ebx,%ebx
		mov    %ebp,%eax
		call   _07d278_func

	_07d680_jump:
		test   %edi,%edi
		je     _07d68e_jump
		mov    0x000010(%ecx),%eax
		call   _083b7d_func
		or     %eax,%esi

	_07d68e_jump:
		testb  $0x000008,0x00000c(%ecx)
		je     _07d6a3_jump
		mov    0x000008(%ecx),%eax
		call   _081a15_func
		movl   $0x000000,0x000008(%ecx)

	_07d6a3_jump:
		testb  $0x000008,0x00000d(%ecx)
		je     _07d6bc_jump
		xor    %edx,%edx
		mov    %esp,%eax
		mov    0x000019(%ecx),%dl
		call   _07d5d2_func
		mov    %esp,%eax
		call   _07cee3_func

	_07d6bc_jump:
		mov    %esi,%eax

	_07d6be_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07d6c7_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d6dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		movl   $0x000000,-0x000008(%ebp)
		movl   $0x000000,-0x000004(%ebp)

	_07d6fb_jump:
		cmpl   $0x000020,-0x000004(%ebp)
		jb     _07d708_jump
		jmp    _07d72b_jump

	_07d703_jump:
		incl   -0x000004(%ebp)
		jmp    _07d6fb_jump

	_07d708_jump:
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _07d729_jump
		incl   -0x000008(%ebp)

	_07d729_jump:
		jmp    _07d703_jump

	_07d72b_jump:
		mov    -0x000008(%ebp),%eax
		mov    %eax,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d73b_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d750_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d765_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		testb  $0x000002,-0x00000c(%ebp)
		je     _07d787_jump
		movb   $0x000001,_0bf838_data
		jmp    _07d78e_jump

	_07d787_jump:
		movb   $0x000000,_0bf838_data

	_07d78e_jump:
		testb  $0x000001,-0x00000c(%ebp)
		jne    _07d7c0_jump
		movb   $0x000001,_0bf834_data
		call   _083e79_func
		mov    %cs,%eax
		mov    $_07de0e_func,%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		push   $0x00ffff
		call   _083db7_func
		add    $0x00000c,%esp
		call   _083ea5_func
		jmp    _07d7c7_jump

	_07d7c0_jump:
		movb   $0x000000,_0bf834_data

	_07d7c7_jump:
		cmpl   $0x000000,-0x000010(%ebp)
		je     _07d7d3_jump
		testb  $0x000001,-0x00000c(%ebp)
		je     _07d7d5_jump

	_07d7d3_jump:
		jmp    _07d827_jump

	_07d7d5_jump:
		cmpl   $0x00ff00,-0x000010(%ebp)
		jne    _07d7f4_jump
		mov    $0x00ffff,%eax
		call   _07ddd9_func
		movl   $0x00ff00,_0be37b_data
		jmp    _07d80b_jump

	_07d7f4_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000010(%ebp)
		call   _07ddd9_func
		mov    -0x000010(%ebp),%eax
		mov    %eax,_0be37b_data

	_07d80b_jump:
		mov    %cs,_0be33d_data
		movl   $_07ded8_func,_0be339_data
		movl   $0x010000,_0be3bb_data
		jmp    _07d831_jump

	_07d827_jump:
		movl   $0x00ffff,_0be2db_data

	_07d831_jump:
		movl   $0x000000,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07d841_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		cmpb   $0x000000,_0bf834_data
		je     _07d86a_jump
		call   _083e79_func
		call   _083ed1_func
		call   _083ea5_func

	_07d86a_jump:
		movl   $0x000000,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d87b_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000020,%esp
		mov    %eax,-0x000018(%ebp)
		mov    %cx,-0x00001c(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x00000c(%ebp)
		movl   $0x000000,-0x000004(%ebp)

	_07d89f_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07d8ac_jump
		jmp    _07d8c5_jump

	_07d8a7_jump:
		incl   -0x000004(%ebp)
		jmp    _07d89f_jump

	_07d8ac_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0be2df_data(%eax)
		jne    _07d8c3_jump
		cmpw   $0x000000,_0be2e3_data(%eax)
		je     _07d8c5_jump

	_07d8c3_jump:
		jmp    _07d8a7_jump

	_07d8c5_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07d8d7_jump
		movl   $0x00000b,-0x000014(%ebp)
		jmp    _07da7e_jump

	_07d8d7_jump:
		cmpb   $0x000000,_0bf834_data
		je     _07d8e5_jump
		call   _083e79_func

	_07d8e5_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		imul   $0x000006,-0x000004(%ebp),%edx
		mov    -0x00001c(%ebp),%eax
		mov    %ax,_0be2e3_data(%edx)
		mov    -0x000020(%ebp),%eax
		mov    %eax,_0be2df_data(%edx)
		mov    -0x000004(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000018(%ebp),%eax
		mov    %eax,_0be33f_data(%edx)
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		cmp    _0be2db_data,%eax
		jae    _07d950_jump
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		call   _07ddd9_func
		mov    _0be2db_data,%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,-0x00000c(%ebp)

	_07d950_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07d957_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07d967_jump
		jmp    _07da5f_jump

	_07d962_jump:
		incl   -0x000004(%ebp)
		jmp    _07d957_jump

	_07d967_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0be2df_data(%eax)
		jne    _07d982_jump
		cmpw   $0x000000,_0be2e3_data(%eax)
		je     _07da5a_jump

	_07d982_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0be33f_data(%eax)
		jne    _07d9da_jump
		cmpl   $0x00ffff,_0be2db_data
		jne    _07d9b2_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x010000,_0be37f_data(%eax)
		jmp    _07d9d8_jump

	_07d9b2_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0be2db_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    $0x123333,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be37f_data(%eax)

	_07d9d8_jump:
		jmp    _07da0c_jump

	_07d9da_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be33f_data(%eax),%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0be2db_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be37f_data(%eax)

	_07da0c_jump:
		cmpl   $0x000000,-0x00000c(%ebp)
		je     _07da5a_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    -0x00000c(%ebp),%edx
		and    $0x00ffff,%edx
		mov    _0be3bf_data(%eax),%eax
		imul   %edx,%eax
		shr    $0x000010,%eax
		mov    %eax,-0x000010(%ebp)
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    -0x00000c(%ebp),%edx
		shr    $0x000010,%edx
		mov    _0be3bf_data(%eax),%eax
		imul   %edx,%eax
		shr    $0x000010,%eax
		add    %eax,-0x000010(%ebp)
		mov    -0x000004(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000010(%ebp),%eax
		mov    %eax,_0be3bf_data(%edx)

	_07da5a_jump:
		jmp    _07d962_jump

	_07da5f_jump:
		cmpb   $0x000000,_0bf834_data
		je     _07da6d_jump
		call   _083ea5_func

	_07da6d_jump:
		mov    -0x000008(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000014(%ebp)

	_07da7e_jump:
		mov    -0x000014(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000008



_07dc00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		movl   $0x000000,-0x000008(%ebp)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0be2e3_data(%eax)
		movl   $0x000000,_0be2df_data(%eax)
		movl   $0x000000,-0x000004(%ebp)

	_07dc36_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07dc43_jump
		jmp    _07dc90_jump

	_07dc3e_jump:
		incl   -0x000004(%ebp)
		jmp    _07dc36_jump

	_07dc43_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0be2df_data(%eax)
		jne    _07dc5a_jump
		cmpw   $0x000000,_0be2e3_data(%eax)
		je     _07dc8e_jump

	_07dc5a_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be33f_data(%eax),%eax
		cmp    -0x000008(%ebp),%eax
		jbe    _07dc7d_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0be33f_data(%eax)
		jne    _07dc7f_jump

	_07dc7d_jump:
		jmp    _07dc8e_jump

	_07dc7f_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be33f_data(%eax),%eax
		mov    %eax,-0x000008(%ebp)

	_07dc8e_jump:
		jmp    _07dc3e_jump

	_07dc90_jump:
		cmpl   $0x000000,-0x000008(%ebp)
		je     _07dca7_jump
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000008(%ebp)
		call   _07ddd9_func
		jmp    _07dcb1_jump

	_07dca7_jump:
		mov    $0x00ffff,%eax
		call   _07ddd9_func

	_07dcb1_jump:
		cmpb   $0x000000,_0bf834_data
		je     _07dcbf_jump
		call   _083e79_func

	_07dcbf_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07dcc6_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07dcd6_jump
		jmp    _07dd90_jump

	_07dcd1_jump:
		incl   -0x000004(%ebp)
		jmp    _07dcc6_jump

	_07dcd6_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0be2df_data(%eax)
		jne    _07dcf1_jump
		cmpw   $0x000000,_0be2e3_data(%eax)
		je     _07dd8b_jump

	_07dcf1_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0be33f_data(%eax)
		jne    _07dd49_jump
		cmpl   $0x00ffff,_0be2db_data
		jne    _07dd21_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x010000,_0be37f_data(%eax)
		jmp    _07dd47_jump

	_07dd21_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0be2db_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    $0x123333,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be37f_data(%eax)

	_07dd47_jump:
		jmp    _07dd7b_jump

	_07dd49_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be33f_data(%eax),%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0be2db_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be37f_data(%eax)

	_07dd7b_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0be3bf_data(%eax)

	_07dd8b_jump:
		jmp    _07dcd1_jump

	_07dd90_jump:
		cmpb   $0x000000,_0bf834_data
		je     _07dd9e_jump
		call   _083ea5_func

	_07dd9e_jump:
		movl   $0x000000,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ddd9_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %eax,_0be2db_data
		pushl  -0x000008(%ebp)
		call   _083d71_func
		add    $0x000004,%esp
		movl   $0x000000,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07de0e_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		incl   _0be60e_data
		movl   $0x000000,_0be7f8_data

	_07de2c_jump:
		cmpl   $0x000010,_0be7f8_data
		jb     _07de42_jump
		jmp    _07decb_jump

	_07de3a_jump:
		incl   _0be7f8_data
		jmp    _07de2c_jump

	_07de42_jump:
		imul   $0x000006,_0be7f8_data,%eax
		cmpl   $0x000000,_0be2df_data(%eax)
		jne    _07de5c_jump
		cmpw   $0x000000,_0be2e3_data(%eax)
		je     _07dec6_jump

	_07de5c_jump:
		mov    _0be7f8_data,%eax
		shl    $0x000002,%eax
		mov    _0be7f8_data,%edx
		shl    $0x000002,%edx
		mov    _0be37f_data(%edx),%edx
		add    %edx,_0be3bf_data(%eax)
		mov    _0be7f8_data,%eax
		shl    $0x000002,%eax
		testb  $0x000001,_0be3c1_data(%eax)
		je     _07dec6_jump
		mov    _0be7f8_data,%eax
		shl    $0x000002,%eax
		movw   $0x000000,_0be3c1_data(%eax)
		mov    _0be7f8_data,%eax
		cmpb   $0x0000ff,_0be3ff_data(%eax)
		je     _07deb9_jump
		mov    _0be7f8_data,%eax
		mov    _0be3ff_data(%eax),%al
		mov    %al,_0be40f_data

	_07deb9_jump:
		imul   $0x000006,_0be7f8_data,%eax
		lcall  *_0be2df_data(%eax)

	_07dec6_jump:
		jmp    _07de3a_jump

	_07decb_jump:
		decl   _0be60e_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lret   



_07ded8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		call   _083f4d_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lret   



_07def2_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07df07_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07df1c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %dx,-0x000010(%ebp)
		mov    %eax,-0x000014(%ebp)
		cmpl   $0x000000,_0be66e_data
		je     _07df45_jump
		movl   $0x000003,-0x00000c(%ebp)
		jmp    _07e05d_jump

	_07df45_jump:
		movl   $0x00002c,-0x000008(%ebp)
		cmpl   $0x000000,-0x000014(%ebp)
		jne    _07df59_jump
		cmpw   $0x000000,-0x000010(%ebp)
		je     _07df77_jump

	_07df59_jump:
		mov    -0x000014(%ebp),%edx
		mov    $_0be50f_data,%eax
		call   _083fa7_func
		mov    $_0c1170_data,%edx
		mov    $_0be50f_data,%eax
		call   _083fc6_func
		jmp    _07df86_jump

	_07df77_jump:
		mov    $_0c1170_data,%edx
		mov    $_0be50f_data,%eax
		call   _083fa7_func

	_07df86_jump:
		push   $0x000200
		mov    $_0be50f_data,%eax
		push   %eax
		call   _07cfcf_func
		add    $0x000008,%esp
		mov    %eax,_0be67e_data
		cmpl   $0xffffffff,_0be67e_data
		jne    _07dfb3_jump
		movl   $0x00000f,-0x00000c(%ebp)
		jmp    _07e05d_jump

	_07dfb3_jump:
		mov    -0x000008(%ebp),%ebx
		mov    $_0be612_data,%edx
		mov    _0be67e_data,%eax
		call   _0811d8_func
		mov    _0be63a_data,%eax
		mov    %eax,-0x000004(%ebp)
		mov    $_0be68e_data,%eax
		push   %eax
		mov    $_0be68a_data,%eax
		push   %eax
		push   $0x001000
		call   _084077_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,_0be676_data
		mov    %ecx,_0be672_data
		movzwl _0be676_data,%eax
		push   %eax
		pushl  _0be672_data
		call   _08413b_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,_0be67c_data
		mov    %ecx,_0be678_data
		push   $0x001000
		pushl  _0be68e_data
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07e03e_jump
		movl   $0x000005,-0x00000c(%ebp)
		jmp    _07e05d_jump

	_07e03e_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0be67e_data,%eax
		call   _07d278_func
		movl   $0x000001,_0be66e_data
		movl   $0x000000,-0x00000c(%ebp)

	_07e05d_jump:
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07e066_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		movl   $0x000000,_0be66e_data
		mov    _0be67e_data,%eax
		call   _07d273_func
		push   $0x001000
		pushl  _0be68e_data
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07e0a8_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07e0e7_jump

	_07e0a8_jump:
		pushl  _0be68a_data
		movzwl _0be676_data,%eax
		push   %eax
		pushl  _0be672_data
		call   _084105_func
		add    $0x00000c,%esp
		pushl  _0be68a_data
		movzwl _0be67c_data,%eax
		push   %eax
		pushl  _0be678_data
		call   _084105_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_07e0e7_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e50a_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000038,%esp
		mov    %dx,-0x000034(%ebp)
		mov    %eax,-0x000038(%ebp)
		mov    %cx,-0x00002c(%ebp)
		mov    %ebx,-0x000030(%ebp)
		movl   $0xffffffff,-0x000008(%ebp)
		movl   $0x000030,-0x000014(%ebp)
		movl   $0x000000,-0x000020(%ebp)
		movl   $0x000000,-0x000024(%ebp)
		cmpl   $0x000000,-0x000038(%ebp)
		jne    _07e558_jump
		cmpw   $0x000000,-0x000034(%ebp)
		jne    _07e558_jump
		movl   $0x000002,-0x000028(%ebp)
		jmp    _07e755_jump

	_07e558_jump:
		movl   $0x000000,-0x00000c(%ebp)
		movl   $0x000000,-0x000010(%ebp)
		movl   $0x000000,_0be686_data
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0be67e_data,%eax
		call   _07d278_func
		mov    $0x00002c,%ebx
		mov    $_0be612_data,%edx
		mov    _0be67e_data,%eax
		call   _0811d8_func

	_07e592_jump:
		mov    _0be686_data,%eax
		cmp    _0be632_data,%eax
		ja     _07e5a5_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		je     _07e5aa_jump

	_07e5a5_jump:
		jmp    _07e74e_jump

	_07e5aa_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    _0be67e_data,%eax
		call   _07d278_func
		mov    %eax,-0x000018(%ebp)
		mov    -0x000014(%ebp),%ebx
		mov    $_0be63e_data,%edx
		mov    _0be67e_data,%eax
		call   _0811d8_func
		mov    _0be662_data,%eax
		mov    %eax,-0x000004(%ebp)
		mov    _0be666_data,%eax
		mov    %eax,-0x000008(%ebp)
		testb  $0x000080,_0be66b_data
		je     _07e731_jump
		lea    -0x00001c(%ebp),%eax
		push   %eax
		mov    -0x000004(%ebp),%edx
		mov    _0be676_data,%bx
		mov    _0be672_data,%eax
		mov    _0be67e_data,%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _07d242_func
		mov    %ds,%eax
		mov    $_0be698_data,%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		movzwl _0be676_data,%eax
		push   %eax
		pushl  _0be672_data
		movzwl _0be67c_data,%eax
		push   %eax
		pushl  _0be678_data
		call   _084336_func
		add    $0x000018,%esp
		testb  $0x000001,_0be6d5_data
		je     _07e6aa_jump
		movzwl _0be676_data,%eax
		push   %eax
		pushl  _0be672_data
		movzwl _0be67c_data,%eax
		push   %eax
		pushl  _0be678_data
		call   _084569_func
		add    $0x000010,%esp
		movl   $0x000000,-0x000020(%ebp)

	_07e675_jump:
		pushl  -0x000020(%ebp)
		call   _0845a8_func
		add    $0x000004,%esp
		test   %eax,%eax
		je     _07e6aa_jump
		pushl  -0x000020(%ebp)
		call   _0845a8_func
		add    $0x000004,%esp
		call   _084880_func
		mov    %eax,-0x000024(%ebp)
		pushl  -0x000024(%ebp)
		pushl  -0x000020(%ebp)
		call   _0845f2_func
		add    $0x000008,%esp
		incl   -0x000020(%ebp)
		jmp    _07e675_jump

	_07e6aa_jump:
		movzwl _0be676_data,%eax
		push   %eax
		pushl  _0be672_data
		movzwl _0be67c_data,%eax
		push   %eax
		pushl  _0be678_data
		call   _0842cf_func
		add    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		cmpl   $0x000000,-0x000010(%ebp)
		je     _07e72f_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,_0be682_data
		movzwl -0x000034(%ebp),%eax
		push   %eax
		pushl  -0x000038(%ebp)
		movzwl _0be676_data,%eax
		push   %eax
		pushl  _0be672_data
		movzwl _0be67c_data,%eax
		push   %eax
		pushl  _0be678_data
		call   _084336_func
		add    $0x000018,%esp
		mov    -0x000034(%ebp),%eax
		mov    %ax,_0be696_data
		mov    -0x000038(%ebp),%eax
		mov    %eax,_0be692_data
		mov    -0x000010(%ebp),%eax
		lgs    -0x000030(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000028(%ebp)
		jmp    _07e755_jump

	_07e72f_jump:
		jmp    _07e743_jump

	_07e731_jump:
		mov    $0x000001,%ebx
		mov    -0x000004(%ebp),%edx
		mov    _0be67e_data,%eax
		call   _07d278_func

	_07e743_jump:
		incl   _0be686_data
		jmp    _07e592_jump

	_07e74e_jump:
		movl   $0x000007,-0x000028(%ebp)

	_07e755_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		ret    



_07e982_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00002c,%esp
		mov    %dx,-0x000028(%ebp)
		mov    %eax,-0x00002c(%ebp)
		movl   $0x000030,-0x000018(%ebp)
		cmpl   $0x000000,-0x00002c(%ebp)
		jne    _07e9b6_jump
		cmpw   $0x000000,-0x000028(%ebp)
		jne    _07e9b6_jump
		movl   $0x000002,-0x000024(%ebp)
		jmp    _07eb01_jump

	_07e9b6_jump:
		xor    %ebx,%ebx
		mov    _0be682_data,%edx
		mov    _0be67e_data,%eax
		call   _07d278_func
		movl   $0x000000,-0x00001c(%ebp)

	_07e9cf_jump:
		lgs    _0be692_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		cmpw   $0x00ffff,%gs:(%eax)
		je     _07ea1c_jump
		lgs    _0be692_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		movswl %gs:(%eax),%eax
		push   %eax
		call   _0844ff_func
		add    $0x000004,%esp
		incl   -0x00001c(%ebp)
		jmp    _07e9cf_jump

	_07ea1c_jump:
		movzwl _0be676_data,%eax
		push   %eax
		pushl  _0be672_data
		movzwl _0be67c_data,%eax
		push   %eax
		pushl  _0be678_data
		call   _0842f2_func
		add    $0x000010,%esp
		movl   $0x000000,-0x00001c(%ebp)

	_07ea47_jump:
		lgs    _0be692_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		cmpw   $0x00ffff,%gs:(%eax)
		je     _07ea94_jump
		lgs    _0be692_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		movswl %gs:(%eax),%eax
		push   %eax
		call   _084534_func
		add    $0x000004,%esp
		incl   -0x00001c(%ebp)
		jmp    _07ea47_jump

	_07ea94_jump:
		mov    _0bf930_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:(%eax)
		mov    _0bf934_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:0x000008(%eax)
		mov    _0bf938_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:0x000004(%eax)
		mov    _0bf93c_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:0x00000c(%eax)
		testb  $0x000001,_0be6d4_data
		jne    _07eafa_jump
		cmpl   $0x000001,_0bf938_data
		jbe    _07eae6_jump
		cmpl   $0x000010,_0bf938_data
		jb     _07eae8_jump

	_07eae6_jump:
		jmp    _07eaf1_jump

	_07eae8_jump:
		movl   $0x000000,-0x000024(%ebp)
		jmp    _07eb01_jump

	_07eaf1_jump:
		movl   $0x000011,-0x000024(%ebp)
		jmp    _07eb01_jump

	_07eafa_jump:
		movl   $0x000000,-0x000024(%ebp)

	_07eb01_jump:
		mov    -0x000024(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07ebdb_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ebf0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ec05_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    $_0848e1_func,%edx
		mov    $_084920_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0848e1_func,%eax
		push   %eax
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ec3e_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07eec1_jump

	_07ec3e_jump:
		mov    $_084935_func,%edx
		mov    $_0849db_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_084935_func,%eax
		push   %eax
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ec69_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07eec1_jump

	_07ec69_jump:
		mov    $_08109b_func,%edx
		mov    $_081186_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08109b_func,%eax
		push   %eax
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ec94_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07eec1_jump

	_07ec94_jump:
		mov    $_07ebf0_func,%edx
		mov    $_07ff9a_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07ebf0_func,%eax
		push   %eax
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ecbf_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07eec1_jump

	_07ecbf_jump:
		mov    $_0849f0_func,%edx
		mov    $_084f9c_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0849f0_func,%eax
		push   %eax
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ecea_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07eec1_jump

	_07ecea_jump:
		mov    $_07d6c7_func,%edx
		mov    $_07d73b_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07d6c7_func,%eax
		push   %eax
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ed15_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07eec1_jump

	_07ed15_jump:
		mov    $_084fb1_func,%edx
		mov    $_085028_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_084fb1_func,%eax
		push   %eax
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ed40_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07eec1_jump

	_07ed40_jump:
		mov    $_07ffaf_func,%edx
		mov    $_080a02_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07ffaf_func,%eax
		push   %eax
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ed6b_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07eec1_jump

	_07ed6b_jump:
		mov    $_07d750_func,%edx
		mov    $_07def2_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07d750_func,%eax
		push   %eax
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ed96_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07eec1_jump

	_07ed96_jump:
		mov    $_080a17_func,%edx
		mov    $_081086_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_080a17_func,%eax
		push   %eax
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07edc1_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07eec1_jump

	_07edc1_jump:
		mov    $_07df07_func,%edx
		mov    $_07ebdb_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07df07_func,%eax
		push   %eax
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07edec_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07eec1_jump

	_07edec_jump:
		mov    $_083cf4_jump,%edx
		mov    $_083fa6_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_083cf4_jump,%eax
		push   %eax
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ee17_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07eec1_jump

	_07ee17_jump:
		mov    $_083ffc_jump,%edx
		mov    $_08487f_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_083ffc_jump,%eax
		push   %eax
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ee42_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07eec1_jump

	_07ee42_jump:
		mov    $_0bd8e4_data,%edx
		mov    $_0be7fc_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bd8e4_data,%eax
		push   %eax
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ee6a_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07eec1_jump

	_07ee6a_jump:
		mov    $_0be800_data,%edx
		mov    $_0bf83c_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0be800_data,%eax
		push   %eax
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ee92_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07eec1_jump

	_07ee92_jump:
		mov    $_0bf840_data,%edx
		mov    $_0bf940_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bf840_data,%eax
		push   %eax
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07eeba_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07eec1_jump

	_07eeba_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07eec1_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07eecb_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    $_0848e1_func,%edx
		mov    $_084920_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0848e1_func,%eax
		push   %eax
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ef04_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f187_jump

	_07ef04_jump:
		mov    $_084935_func,%edx
		mov    $_0849db_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_084935_func,%eax
		push   %eax
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ef2f_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f187_jump

	_07ef2f_jump:
		mov    $_08109b_func,%edx
		mov    $_081186_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08109b_func,%eax
		push   %eax
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ef5a_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f187_jump

	_07ef5a_jump:
		mov    $_07ebf0_func,%edx
		mov    $_07ff9a_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07ebf0_func,%eax
		push   %eax
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ef85_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f187_jump

	_07ef85_jump:
		mov    $_0849f0_func,%edx
		mov    $_084f9c_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0849f0_func,%eax
		push   %eax
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07efb0_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f187_jump

	_07efb0_jump:
		mov    $_07d6c7_func,%edx
		mov    $_07d73b_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07d6c7_func,%eax
		push   %eax
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07efdb_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f187_jump

	_07efdb_jump:
		mov    $_084fb1_func,%edx
		mov    $_085028_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_084fb1_func,%eax
		push   %eax
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f006_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f187_jump

	_07f006_jump:
		mov    $_07ffaf_func,%edx
		mov    $_080a02_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07ffaf_func,%eax
		push   %eax
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f031_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f187_jump

	_07f031_jump:
		mov    $_07d750_func,%edx
		mov    $_07def2_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07d750_func,%eax
		push   %eax
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f05c_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f187_jump

	_07f05c_jump:
		mov    $_080a17_func,%edx
		mov    $_081086_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_080a17_func,%eax
		push   %eax
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f087_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f187_jump

	_07f087_jump:
		mov    $_07df07_func,%edx
		mov    $_07ebdb_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07df07_func,%eax
		push   %eax
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f0b2_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f187_jump

	_07f0b2_jump:
		mov    $_083cf4_jump,%edx
		mov    $_083fa6_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_083cf4_jump,%eax
		push   %eax
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f0dd_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f187_jump

	_07f0dd_jump:
		mov    $_083ffc_jump,%edx
		mov    $_08487f_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_083ffc_jump,%eax
		push   %eax
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f108_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f187_jump

	_07f108_jump:
		mov    $_0bd8e4_data,%edx
		mov    $_0be7fc_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bd8e4_data,%eax
		push   %eax
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f130_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f187_jump

	_07f130_jump:
		mov    $_0be800_data,%edx
		mov    $_0bf83c_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0be800_data,%eax
		push   %eax
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f158_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f187_jump

	_07f158_jump:
		mov    $_0bf840_data,%edx
		mov    $_0bf940_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bf840_data,%eax
		push   %eax
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f180_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f187_jump

	_07f180_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07f187_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f191_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %dx,-0x000010(%ebp)
		mov    %eax,-0x000014(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		call   _07ec05_func
		mov    %eax,-0x000004(%ebp)
		cmpl   $0x000000,-0x000004(%ebp)
		je     _07f1bd_jump
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		jmp    _07f202_jump

	_07f1bd_jump:
		movl   $0x000001,_0be768_data
		cmpl   $0x000000,-0x000014(%ebp)
		jne    _07f1d4_jump
		cmpw   $0x000000,-0x000010(%ebp)
		je     _07f1f4_jump

	_07f1d4_jump:
		mov    -0x000010(%ebp),%ebx
		mov    -0x000014(%ebp),%eax
		mov    %ds,%edi
		mov    $_0be410_data,%edx
		mov    %edi,%esi
		mov    %edx,%edi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _08503d_func
		jmp    _07f1fb_jump

	_07f1f4_jump:
		movb   $0x000000,_0be410_data

	_07f1fb_jump:
		movl   $0x000000,-0x000008(%ebp)

	_07f202_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07f20a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		call   _07eecb_func
		mov    %eax,-0x000004(%ebp)
		cmpl   $0x000000,-0x000004(%ebp)
		je     _07f22f_jump
		movl   $0x000000,-0x000008(%ebp)
		jmp    _07f240_jump

	_07f22f_jump:
		movl   $0x000000,_0be768_data
		movl   $0x000000,-0x000008(%ebp)

	_07f240_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f24a_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000084,%esp
		mov    %eax,-0x000034(%ebp)
		mov    %cx,-0x000078(%ebp)
		mov    %ebx,-0x00007c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000004(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000010(%eax),%eax
		mov    %eax,-0x000008(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000008(%eax),%ax
		mov    %ax,-0x000048(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000004(%eax),%eax
		mov    %eax,-0x00004c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00000c(%eax),%eax
		mov    %eax,-0x000010(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000010(%eax),%eax
		mov    %eax,-0x000014(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000014(%eax),%eax
		mov    %eax,-0x000018(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000018(%eax),%eax
		mov    %eax,-0x00001c(%ebp)
		movl   $0x000006,-0x00002c(%ebp)
		movl   $0x000000,-0x000028(%ebp)

	_07f2c7_jump:
		cmpl   $0x000005,-0x000028(%ebp)
		jb     _07f2d4_jump
		jmp    _07f2ed_jump

	_07f2cf_jump:
		incl   -0x000028(%ebp)
		jmp    _07f2c7_jump

	_07f2d4_jump:
		mov    -0x000028(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bde96_data(%eax)
		jne    _07f2eb_jump
		mov    -0x000028(%ebp),%eax
		mov    %eax,-0x00002c(%ebp)
		jmp    _07f2ed_jump

	_07f2eb_jump:
		jmp    _07f2cf_jump

	_07f2ed_jump:
		cmpl   $0x000006,-0x00002c(%ebp)
		jne    _07f2ff_jump
		movl   $0x00000b,-0x000024(%ebp)
		jmp    _07fb00_jump

	_07f2ff_jump:
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000034(%ebp),%eax
		mov    %eax,_0bde96_data(%edx)
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000024(%eax)
		jne    _07f325_jump
		lgs    0x000014(%ebp),%eax
		cmpw   $0x000000,%gs:0x000028(%eax)
		je     _07f388_jump

	_07f325_jump:
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000028(%eax),%ax
		mov    %ax,-0x000058(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000024(%eax),%eax
		mov    %eax,-0x00005c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000030(%eax),%ax
		mov    %ax,-0x000060(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00002c(%eax),%eax
		mov    %eax,-0x000064(%ebp)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000058(%ebp),%eax
		mov    %ax,_0bd914_data(%edx)
		mov    -0x00005c(%ebp),%eax
		mov    %eax,_0bd910_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000060(%ebp),%eax
		mov    %ax,_0bd932_data(%edx)
		mov    -0x000064(%ebp),%eax
		mov    %eax,_0bd92e_data(%edx)
		jmp    _07f446_jump

	_07f388_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd8e8_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd94c_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    $_0bd9b0_data,%eax
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00005c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000064(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    -0x00002c(%ebp),%edx
		mov    -0x000034(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _084a05_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _07f3ea_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _07fb00_jump

	_07f3ea_jump:
		mov    -0x000058(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000028(%edx)
		mov    -0x00005c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000024(%edx)
		mov    -0x000060(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000030(%edx)
		mov    -0x000064(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x00002c(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000058(%ebp),%eax
		mov    %ax,_0bd914_data(%edx)
		mov    -0x00005c(%ebp),%eax
		mov    %eax,_0bd910_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000060(%ebp),%eax
		mov    %ax,_0bd932_data(%edx)
		mov    -0x000064(%ebp),%eax
		mov    %eax,_0bd92e_data(%edx)

	_07f446_jump:
		imul   $0x00006c,-0x00002c(%ebp),%eax
		mov    $_0bdeae_data,%edx
		add    %edx,%eax
		mov    %ds,%ebx
		mov    -0x00002c(%ebp),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _08494a_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _07f475_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _07fb00_jump

	_07f475_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0bde96_data(%eax)
		jae    _07f884_jump
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000004(%ebp),%eax
		mov    %eax,_0bda28_data(%edx)
		cmpl   $0x000000,-0x000010(%ebp)
		je     _07f5bf_jump
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0be754_data(%eax)
		movw   $0x000000,-0x000080(%ebp)
		movl   $0x000000,-0x000084(%ebp)
		mov    -0x00002c(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    $_0bda6e_data,%eax
		add    %eax,%ebx
		lea    -0x00003c(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _07fd22_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		mov    %bx,-0x000048(%ebp)
		mov    %ecx,-0x00004c(%ebp)
		mov    -0x00004c(%ebp),%eax
		cmp    -0x000084(%ebp),%eax
		jne    _07f51f_jump
		mov    -0x000048(%ebp),%eax
		cmp    -0x000080(%ebp),%ax
		jne    _07f51f_jump
		mov    -0x00002c(%ebp),%eax
		call   _084c28_func
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bde96_data(%eax)
		movl   $0x000005,-0x000024(%ebp)
		jmp    _07fb00_jump

	_07f51f_jump:
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000048(%ebp),%eax
		mov    %ax,_0bda40_data(%edx)
		mov    -0x00004c(%ebp),%eax
		mov    %eax,_0bda3c_data(%edx)
		imul   $0x00006c,-0x00002c(%ebp),%eax
		cmpl   $0x000008,_0bded2_data(%eax)
		jne    _07f59a_jump
		imul   $0x00006c,-0x00002c(%ebp),%eax
		testb  $0x000080,_0bdeeb_data(%eax)
		je     _07f575_jump
		movl   $0x000000,-0x000044(%ebp)

	_07f557_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _07f566_jump
		jmp    _07f573_jump

	_07f561_jump:
		incl   -0x000044(%ebp)
		jmp    _07f557_jump

	_07f566_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000000,%gs:(%eax)
		jmp    _07f561_jump

	_07f573_jump:
		jmp    _07f598_jump

	_07f575_jump:
		movl   $0x000000,-0x000044(%ebp)

	_07f57c_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _07f58b_jump
		jmp    _07f598_jump

	_07f586_jump:
		incl   -0x000044(%ebp)
		jmp    _07f57c_jump

	_07f58b_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000080,%gs:(%eax)
		jmp    _07f586_jump

	_07f598_jump:
		jmp    _07f5bd_jump

	_07f59a_jump:
		movl   $0x000000,-0x000044(%ebp)

	_07f5a1_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _07f5b0_jump
		jmp    _07f5bd_jump

	_07f5ab_jump:
		incl   -0x000044(%ebp)
		jmp    _07f5a1_jump

	_07f5b0_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000000,%gs:(%eax)
		jmp    _07f5ab_jump

	_07f5bd_jump:
		jmp    _07f5e1_jump

	_07f5bf_jump:
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000048(%ebp),%eax
		mov    %ax,_0bda40_data(%edx)
		mov    -0x00004c(%ebp),%eax
		mov    %eax,_0bda3c_data(%edx)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000048(%eax),%eax
		mov    %eax,-0x00003c(%ebp)

	_07f5e1_jump:
		mov    -0x000048(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000008(%edx)
		mov    -0x00004c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000004(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000048(%edx)
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000034(%eax)
		jne    _07f6fb_jump
		lgs    0x000014(%ebp),%eax
		cmpw   $0x000000,%gs:0x000038(%eax)
		jne    _07f6fb_jump
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000044(%eax)
		je     _07f693_jump
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd8fc_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd960_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd9c4_data,%edx
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00006c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000074(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000044(%edx),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _084d00_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _07f691_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _07fb00_jump

	_07f691_jump:
		jmp    _07f6f9_jump

	_07f693_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd8fc_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd960_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    $_0bd9c4_data,%eax
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00006c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000074(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		imul   $0x00006c,-0x00002c(%ebp),%edx
		mov    _0bdf16_data(%edx),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _084d00_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _07f6f9_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _07fb00_jump

	_07f6f9_jump:
		jmp    _07f72b_jump

	_07f6fb_jump:
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000038(%eax),%ax
		mov    %ax,-0x000068(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000034(%eax),%eax
		mov    %eax,-0x00006c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000040(%eax),%ax
		mov    %ax,-0x000070(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00003c(%eax),%eax
		mov    %eax,-0x000074(%ebp)

	_07f72b_jump:
		imul   $0x00006c,-0x00002c(%ebp),%eax
		testb  $0x000002,_0bdeeb_data(%eax)
		je     _07f760_jump
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		movzwl -0x000068(%ebp),%eax
		push   %eax
		pushl  -0x00006c(%ebp)
		movzwl -0x000070(%ebp),%eax
		push   %eax
		pushl  -0x000074(%ebp)
		call   _084628_func
		add    $0x000020,%esp

	_07f760_jump:
		mov    -0x000068(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000038(%edx)
		mov    -0x00006c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000034(%edx)
		mov    -0x000070(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000040(%edx)
		mov    -0x000074(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x00003c(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000068(%ebp),%eax
		mov    %ax,_0bd978_data(%edx)
		mov    -0x00006c(%ebp),%eax
		mov    %eax,_0bd974_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000070(%ebp),%eax
		mov    %ax,_0bd996_data(%edx)
		mov    -0x000074(%ebp),%eax
		mov    %eax,_0bd992_data(%edx)
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bd9ec_data(%eax)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		mov    -0x000038(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be136_data(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		mov    $_0be77c_data,%eax
		push   %eax
		pushl  -0x00002c(%ebp)
		pushl  -0x000038(%ebp)
		pushl  -0x000004(%ebp)
		movzwl -0x000048(%ebp),%eax
		push   %eax
		pushl  -0x00004c(%ebp)
		movzwl -0x000068(%ebp),%eax
		push   %eax
		pushl  -0x00006c(%ebp)
		movzwl -0x000070(%ebp),%eax
		push   %eax
		pushl  -0x000074(%ebp)
		call   _0843d7_func
		add    $0x000028,%esp
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0be780_data,%dx
		mov    _0be77c_data,%ebx
		mov    %dx,_0bda9a_data(%eax)
		mov    %ebx,_0bda96_data(%eax)
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0be788_data,%dx
		mov    _0be784_data,%ebx
		mov    %dx,_0bde78_data(%eax)
		mov    %ebx,_0bde74_data(%eax)
		mov    _0be790_data,%ax
		mov    %ax,-0x000050(%ebp)
		mov    _0be78c_data,%eax
		mov    %eax,-0x000054(%ebp)
		movzwl -0x000050(%ebp),%eax
		push   %eax
		pushl  -0x000054(%ebp)
		imul   $0x0000c0,-0x00002c(%ebp),%eax
		mov    $_0bdab4_data,%edx
		add    %edx,%eax
		push   %eax
		call   _084198_func
		add    $0x00000c,%esp
		jmp    _07f89b_jump

	_07f884_jump:
		imul   $0x000006,-0x00002c(%ebp),%eax
		movw   $0x000000,_0bda9a_data(%eax)
		movl   $0x000000,_0bda96_data(%eax)

	_07f89b_jump:
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0bda9a_data(%eax),%dx
		mov    _0bda96_data(%eax),%ebx
		lgs    0x000014(%ebp),%eax
		mov    %dx,%gs:0x000020(%eax)
		lgs    0x000014(%ebp),%eax
		mov    %ebx,%gs:0x00001c(%eax)
		lgs    -0x00007c(%ebp),%eax
		pushl  %gs:0x000008(%eax)
		call   _0844ff_func
		add    $0x000004,%esp
		mov    -0x00002c(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    -0x00003c(%ebp),%eax
		mov    %eax,_0bda5a_data(%ebx)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000040(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000004(%eax),%eax
		mov    %eax,-0x00000c(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x00000c(%eax),%eax
		mov    %eax,-0x000020(%ebp)
		mov    -0x000038(%ebp),%al
		mov    -0x00002c(%ebp),%edx
		mov    %al,_0be156_data(%edx)
		pushl  -0x000020(%ebp)
		pushl  -0x00001c(%ebp)
		pushl  -0x000018(%ebp)
		pushl  -0x000038(%ebp)
		pushl  -0x00000c(%ebp)
		pushl  -0x000040(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _08442a_func
		add    $0x000028,%esp
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _0844ae_func
		add    $0x000010,%esp
		pushl  -0x000014(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _084488_func
		add    $0x000014,%esp
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bda5a_data(%eax),%eax
		mov    %eax,-0x00003c(%ebp)
		pushl  -0x000004(%ebp)
		pushl  -0x00003c(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _08445f_func
		add    $0x000018,%esp
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bd9d8_data(%eax)
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bda00_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:(%ebx),%ebx
		mov    %ebx,_0be15b_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000008(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000004(%ebx),%ebx
		mov    %dx,_0be163_data(%eax)
		mov    %ebx,_0be15f_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00000c(%ebx),%ebx
		mov    %ebx,_0be167_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000010(%ebx),%ebx
		mov    %ebx,_0be16b_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		mov    %eax,_0be16f_data(%ebx)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000018(%ebx),%ebx
		mov    %ebx,_0be173_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000020(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00001c(%ebx),%ebx
		mov    %dx,_0be17b_data(%eax)
		mov    %ebx,_0be177_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000028(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000024(%ebx),%ebx
		mov    %dx,_0be183_data(%eax)
		mov    %ebx,_0be17f_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000038(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000034(%ebx),%ebx
		mov    %dx,_0be193_data(%eax)
		mov    %ebx,_0be18f_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000030(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00002c(%ebx),%ebx
		mov    %dx,_0be18b_data(%eax)
		mov    %ebx,_0be187_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000040(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00003c(%ebx),%ebx
		mov    %dx,_0be19b_data(%eax)
		mov    %ebx,_0be197_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000044(%edx),%edx
		mov    %edx,_0be19f_data(%eax)
		mov    -0x00002c(%ebp),%eax
		lgs    0x00001c(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000024(%ebp)

	_07fb00_jump:
		mov    -0x000024(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000010



_07fb0a_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000028,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bd9d8_data(%eax)
		jne    _07fb3a_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _07fd1a_jump

	_07fb3a_jump:
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bda00_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0bda82_data(%eax)
		jae    _07fbf7_jump
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0be754_data(%eax)
		je     _07fb75_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		jne    _07fb7a_jump

	_07fb75_jump:
		jmp    _07fbf7_jump

	_07fb7a_jump:
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bda40_data(%edx),%ax
		mov    %ax,-0x00001c(%ebp)
		mov    _0bda3c_data(%edx),%eax
		mov    %eax,-0x000020(%ebp)
		call   _084688_func
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _07fbd1_jump
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    _0bda5a_data(%ebx),%ecx
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    _0bda6e_data(%ebx),%esi
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		movzwl %dx,%eax
		mov    %ecx,%ebx
		mov    %esi,%edx
		call   _07ff1e_func
		jmp    _07fbe7_jump

	_07fbd1_jump:
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		movzwl %dx,%ebx
		push   %ebx
		call   _0841fe_func
		add    $0x000004,%esp

	_07fbe7_jump:
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0be754_data(%eax)

	_07fbf7_jump:
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bd914_data(%edx),%ax
		mov    %ax,-0x000024(%ebp)
		mov    _0bd910_data(%edx),%eax
		mov    %eax,-0x000028(%ebp)
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bd932_data(%edx),%ax
		mov    %ax,-0x000014(%ebp)
		mov    _0bd92e_data(%edx),%eax
		mov    %eax,-0x000018(%ebp)
		movzwl -0x000024(%ebp),%eax
		push   %eax
		pushl  -0x000028(%ebp)
		movzwl -0x000014(%ebp),%eax
		push   %eax
		pushl  -0x000018(%ebp)
		call   _0842ac_func
		add    $0x000010,%esp
		movzwl -0x000024(%ebp),%eax
		push   %eax
		pushl  -0x000028(%ebp)
		movzwl -0x000014(%ebp),%eax
		push   %eax
		pushl  -0x000018(%ebp)
		call   _0843b4_func
		add    $0x000010,%esp
		mov    -0x000010(%ebp),%eax
		movzbl _0be156_data(%eax),%eax
		push   %eax
		call   _084534_func
		add    $0x000004,%esp
		cmpl   $0x000000,-0x000008(%ebp)
		je     _07fc80_jump
		mov    -0x000010(%ebp),%eax
		call   _084c28_func
		mov    -0x000010(%ebp),%eax
		call   _084eda_func

	_07fc80_jump:
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd914_data(%eax)
		movl   $0x000000,_0bd910_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd932_data(%eax)
		movl   $0x000000,_0bd92e_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bda9a_data(%eax)
		movl   $0x000000,_0bda96_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd978_data(%eax)
		movl   $0x000000,_0bd974_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd996_data(%eax)
		movl   $0x000000,_0bd992_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bde96_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bd9d8_data(%eax)
		movl   $0x000000,-0x000004(%ebp)

	_07fd1a_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07fd22_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000030,%esp
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000018(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x00000c(%ebp)
		call   _084688_func
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _07fd90_jump
		lea    -0x000014(%ebp),%ebx
		lea    -0x000010(%ebp),%edx
		lea    -0x000028(%ebp),%eax
		call   _07fe02_func
		test   %eax,%eax
		je     _07fd71_jump
		movw   $0x000000,-0x00002c(%ebp)
		movl   $0x000000,-0x000030(%ebp)
		jmp    _07fdf7_jump

	_07fd71_jump:
		mov    -0x000014(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)
		mov    -0x000010(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %eax,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    %ax,-0x00002c(%ebp)
		mov    -0x000028(%ebp),%eax
		mov    %eax,-0x000030(%ebp)
		jmp    _07fdf7_jump

	_07fd90_jump:
		lea    -0x00000c(%ebp),%eax
		push   %eax
		lea    -0x000004(%ebp),%eax
		push   %eax
		mov    -0x00001c(%ebp),%eax
		shr    $0x000004,%eax
		add    $0x000004,%eax
		push   %eax
		call   _0841c8_func
		add    $0x00000c,%esp
		mov    -0x000004(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)

	_07fdb2_jump:
		mov    -0x000004(%ebp),%edx
		and    $0x00ffff,%edx
		mov    $0x00ffff,%eax
		sub    -0x00001c(%ebp),%eax
		cmp    %eax,%edx
		jbe    _07fdeb_jump
		lea    -0x00000c(%ebp),%eax
		push   %eax
		lea    -0x000004(%ebp),%eax
		push   %eax
		mov    -0x00001c(%ebp),%eax
		shr    $0x000004,%eax
		add    $0x000004,%eax
		push   %eax
		call   _0841c8_func
		add    $0x00000c,%esp
		mov    -0x000004(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _07fdb2_jump

	_07fdeb_jump:
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,-0x00002c(%ebp)
		mov    %edx,-0x000030(%ebp)

	_07fdf7_jump:
		mov    -0x00002c(%ebp),%edx
		mov    -0x000030(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07fe02_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00002c,%esp
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		mov    -0x000024(%ebp),%eax
		movw   $0x000000,0x000004(%eax)
		mov    -0x000024(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    -0x000010(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    -0x000020(%ebp),%eax
		movl   $0x000000,(%eax)
		movl   $0x000000,-0x000004(%ebp)
		lea    -0x000004(%ebp),%eax
		push   %eax
		lea    -0x00000c(%ebp),%eax
		push   %eax
		push   $0x000020
		call   _0846a5_func
		add    $0x00000c,%esp
		test   %eax,%eax
		je     _07fe72_jump
		movl   $0x000000,-0x00001c(%ebp)
		jmp    _07ff16_jump

	_07fe72_jump:
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,-0x000028(%ebp)
		mov    %edx,-0x00002c(%ebp)
		lgs    -0x00002c(%ebp),%edx
		movl   $0x001000,%gs:(%edx)
		pushl  -0x000004(%ebp)
		call   _084714_func
		add    $0x000004,%esp
		mov    %eax,-0x000018(%ebp)
		push   $0x000010
		mov    -0x000028(%ebp),%ebx
		mov    -0x00002c(%ebp),%edx
		mov    %ds,%esi
		mov    $_0be76c_data,%ecx
		mov    %esi,%eax
		mov    %ecx,%esi
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _08506c_func
		pushl  -0x000004(%ebp)
		pushl  -0x00000c(%ebp)
		call   _0846e6_func
		add    $0x000008,%esp
		cmpl   $0x000000,-0x000018(%ebp)
		jne    _07ff0f_jump
		andw   $0x00f000,_0be778_data
		pushl  _0be778_data
		call   _0847cd_func
		add    $0x000004,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    _0be778_data,%eax
		mov    %eax,-0x000014(%ebp)
		xor    %ebx,%ebx
		mov    -0x00000c(%ebp),%edx
		mov    -0x000024(%ebp),%eax
		mov    %dx,0x000004(%eax)
		mov    -0x000024(%ebp),%eax
		mov    %ebx,(%eax)
		mov    -0x000014(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %eax,(%edx)
		movl   $0x000000,-0x00001c(%ebp)
		jmp    _07ff16_jump

	_07ff0f_jump:
		movl   $0x000005,-0x00001c(%ebp)

	_07ff16_jump:
		mov    -0x00001c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07ff1e_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00001c,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %ebx,-0x000004(%ebp)
		pushl  -0x000010(%ebp)
		call   _08484d_func
		add    $0x000004,%esp
		lea    -0x00000c(%ebp),%edx
		push   %edx
		lea    -0x000008(%ebp),%edx
		push   %edx
		push   $0x000020
		call   _0846a5_func
		add    $0x00000c,%esp
		xor    %edx,%edx
		mov    -0x000008(%ebp),%eax
		mov    %ax,-0x000018(%ebp)
		mov    %edx,-0x00001c(%ebp)
		push   $0x000010
		mov    %ds,%edx
		mov    $_0be76c_data,%esi
		mov    %edx,%ebx
		mov    %esi,%edx
		mov    -0x000018(%ebp),%eax
		mov    -0x00001c(%ebp),%esi
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _08506c_func
		pushl  -0x00000c(%ebp)
		call   _084780_func
		add    $0x000004,%esp
		pushl  -0x00000c(%ebp)
		pushl  -0x000008(%ebp)
		call   _0846e6_func
		add    $0x000008,%esp
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07ff9a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ffaf_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ffc4_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000030,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %cx,-0x00001c(%ebp)
		mov    %ebx,-0x000020(%ebp)
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bd914_data(%edx),%ax
		mov    %ax,-0x000024(%ebp)
		mov    _0bd910_data(%edx),%eax
		mov    %eax,-0x000028(%ebp)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0bda82_data(%eax)
		jb     _08002b_jump
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000004(%eax),%ax
		mov    %ax,-0x000014(%ebp)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000018(%ebp)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x00000c(%ebp)
		jmp    _0805ce_jump

	_08002b_jump:
		movl   $0x000000,-0x000004(%ebp)

	_080032_jump:
		cmpl   $0x000020,-0x000004(%ebp)
		jb     _080042_jump
		jmp    _0805c5_jump

	_08003d_jump:
		incl   -0x000004(%ebp)
		jmp    _080032_jump

	_080042_jump:
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		jne    _0805c0_jump
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%eax
		lgs    -0x000020(%ebp),%ebx
		mov    %gs:0x000004(%ebx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x000004(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x000004(%edx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x00000c(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:0x000008(%eax)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000004(%eax),%ax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%edx
		mov    %eax,%ebx
		lgs    -0x000020(%ebp),%eax
		add    %gs:0x000030(%eax),%edx
		mov    %ebx,%eax
		mov    %eax,%ebx
		mov    %edx,%ecx
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%eax
		mov    %bx,%gs:0x000014(%eax)
		mov    %ecx,%gs:0x000010(%eax)
		lgs    -0x000020(%ebp),%eax
		testb  $0x000040,%gs:0x000028(%eax)
		je     _0801e4_jump
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000018(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x00001c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000034(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000020(%edx)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		add    %gs:0x000034(%edx),%eax
		lgs    -0x000020(%ebp),%ebx
		mov    %gs:0x00002c(%ebx),%ebx
		sub    %eax,%ebx
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		mov    %ebx,%gs:0x00002c(%edx)
		jmp    _08023e_jump

	_0801e4_jump:
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000018(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x00001c(%edx)

	_08023e_jump:
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000014(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000032(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000018(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000034(%edx)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000028(%eax),%dx
		or     $0x0000a0,%dh
		imul   $0x0000c0,-0x000010(%ebp),%ebx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %ebx,%eax
		lgs    _0bdab4_data(%eax),%eax
		mov    %dx,%gs:0x000030(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000010(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000036(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x000020(%edx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x00001c(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x000040(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:0x00003c(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x00000c(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000038(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000024(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00004a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movw   $0x000000,%gs:0x00003a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000038(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000044(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movw   $0x000000,%gs:0x000048(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movl   $0x000000,%gs:0x00004c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000050(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000040(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000054(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000044(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000056(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000048(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000058(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x00004c(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000050(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000054(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005e(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000058(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000060(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movl   $0x000000,%gs:0x000064(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movw   $0x000000,%gs:0x000068(%edx)
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		jmp    _0805d5_jump

	_0805c0_jump:
		jmp    _08003d_jump

	_0805c5_jump:
		movl   $0xffffffff,-0x000008(%ebp)
		jmp    _0805d5_jump

	_0805ce_jump:
		movl   $0x000000,-0x000008(%ebp)

	_0805d5_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_0805dd_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		cmpl   $0x000020,-0x000008(%ebp)
		jae    _08067b_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _080633_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		testb  $0x000010,%gs:0x000031(%edx)
		je     _080635_jump

	_080633_jump:
		jmp    _080672_jump

	_080635_jump:
		imul   $0x0000c0,-0x00000c(%ebp),%eax
		imul   $0x000006,-0x000008(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%eax
		andb   $0x00007f,%gs:0x000031(%eax)
		imul   $0x0000c0,-0x00000c(%ebp),%eax
		imul   $0x000006,-0x000008(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movw   $0x000000,%gs:0x000034(%edx)
		movl   $0x000000,-0x000004(%ebp)
		jmp    _080682_jump

	_080672_jump:
		movl   $0x000000,-0x000004(%ebp)
		jmp    _080682_jump

	_08067b_jump:
		movl   $0x00000a,-0x000004(%ebp)

	_080682_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_080a02_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_080a17_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_080a58_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000014(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%edx
		imul   $0x000006,-0x000010(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _080ac5_jump
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movswl %gs:0x000032(%edx),%eax
		mov    %eax,-0x000004(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,%gs:0x000032(%edx)
		jmp    _080ace_jump

	_080ac5_jump:
		movl   $0x000000,-0x000008(%ebp)
		jmp    _080ad4_jump

	_080ace_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)

	_080ad4_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_080cfb_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000014(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%edx
		imul   $0x000006,-0x000010(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _080d68_jump
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movswl %gs:0x000054(%edx),%eax
		mov    %eax,-0x000004(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,%gs:0x000054(%edx)
		jmp    _080d71_jump

	_080d68_jump:
		movl   $0x000000,-0x000008(%ebp)
		jmp    _080d77_jump

	_080d71_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)

	_080d77_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_081086_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08109b_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0810b0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		cmpl   $0x000020,-0x000008(%ebp)
		jae    _0810f9_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		jne    _0810f0_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _081100_jump

	_0810f0_jump:
		movl   $0x000000,-0x000004(%ebp)
		jmp    _081100_jump

	_0810f9_jump:
		movl   $0x00000a,-0x000004(%ebp)

	_081100_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_081186_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08119b_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _07d278_func
		mov    %eax,%esi
		cmp    $0xffffffff,%eax
		je     _0811d2_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07d278_func
		mov    %eax,%edi
		mov    %esi,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   _07d278_func
		mov    %edi,%eax

	_0811d2_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0811d8_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		push   %eax
		mov    %edx,%ebp
		call   _083aff_func
		mov    %eax,0x000008(%esp)
		test   %eax,%eax
		jne    _081203_jump
		mov    $0x000004,%eax

	_0811f4_jump:
		call   _082fb9_func
		mov    $0xffffffff,%eax
		jmp    _0812cb_jump

	_081203_jump:
		test   $0x000001,%al
		jne    _08120e_jump
		mov    $0x000006,%eax
		jmp    _0811f4_jump

	_08120e_jump:
		test   $0x000040,%al
		je     _08123a_jump
		mov    %ebx,%ecx
		mov    (%esp),%ebx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edi
		mov    %eax,%esi
		test   %eax,%eax
		jge    _0812c9_jump
		xor    %eax,%eax
		mov    %di,%ax

	_081230_jump:
		call   _081bf4_func
		jmp    _0812cb_jump

	_08123a_jump:
		mov    %ebx,0x00000c(%esp)
		xor    %esi,%esi

	_081240_jump:
		mov    0x00000c(%esp),%ecx
		mov    (%esp),%ebx
		mov    %ebp,%edx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%ebx
		mov    %eax,%edi
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		jge    _081264_jump
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    _081230_jump

	_081264_jump:
		je     _0812c9_jump
		xor    %eax,%edi
		mov    %ebp,%eax
		lea    (%ebx,%ebp,1),%ecx
		xor    %edx,%edx
		mov    %ecx,0x000010(%esp)
		jmp    _0812a6_jump

	_081275_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x00001a,%ebx
		jne    _081296_jump
		mov    0x000004(%esp),%ebp
		mov    %edi,%edx
		mov    $0x000001,%ebx
		sub    %ebp,%edx
		mov    (%esp),%eax
		inc    %edx
		call   _07d278_func
		jmp    _0812c9_jump

	_081296_jump:
		cmp    $0x00000d,%ebx
		je     _0812a4_jump
		mov    %edx,%ebx
		inc    %esi
		mov    (%eax),%cl
		inc    %edx
		mov    %cl,(%ebx,%ebp,1)

	_0812a4_jump:
		inc    %eax
		inc    %edi

	_0812a6_jump:
		cmp    0x000010(%esp),%eax
		jb     _081275_jump
		mov    0x00000c(%esp),%ecx
		mov    0x000009(%esp),%ah
		sub    %edx,%ecx
		add    %edx,%ebp
		mov    %ecx,0x00000c(%esp)
		test   $0x000020,%ah
		jne    _0812c9_jump
		test   %ecx,%ecx
		jne    _081240_jump

	_0812c9_jump:
		mov    %esi,%eax

	_0812cb_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0812d3_func:
		push   %edx
		xor    %edx,%edx
		mov    _0bd808_data,%eax
		mov    %edx,_0bd808_data
		test   %eax,%eax
		jne    _0812ee_jump
		mov    $0x000001,%ah
		int    $0x000021
		and    $0x0000ff,%eax

	_0812ee_jump:
		pop    %edx
		ret    



_081302_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		call   _08509d_func
		mov    $0xf368cb40,%ebx
		mov    $0x3cc003c9,%ecx
		mov    %eax,%edi
		mov    %edx,%esi
		call   _081794_func
		jge    _08133e_jump
		xor    %esi,%esi
		mov    $0x3ff00000,%edi
		mov    %esi,-0x00003c(%ebp)
		mov    %edi,-0x000038(%ebp)
		jmp    _081525_jump

	_08133e_jump:
		mov    $0xfefa39ef,%ebx
		mov    $0x40862e42,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _081794_func
		jle    _081378_jump
		cmpl   $0x000000,-0x000038(%ebp)
		jge    _081366_jump
		xor    %ebx,%ebx
		mov    %ebx,-0x00003c(%ebp)
		mov    %ebx,-0x000038(%ebp)
		jmp    _081525_jump

	_081366_jump:
		lea    -0x00003c(%ebp),%edx
		mov    $0x008104,%eax
		call   _082ada_func
		jmp    _08151f_jump

	_081378_jump:
		cmpb   $0x000000,_0bd5b9_data
		je     _081391_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _0850a6_func
		jmp    _08151f_jump

	_081391_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		mov    $0x652b8301,%ebx
		mov    $0x3ff71547,%ecx
		call   _07bb4f_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		call   _08514f_func
		mov    -0x000038(%ebp),%edx
		mov    %eax,%esi
		mov    -0x00003c(%ebp),%eax
		lea    -0x000034(%ebp),%ebx
		call   _08509d_func
		call   _085164_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _07c19c_func
		mov    %eax,-0x000014(%ebp)
		test   %esi,%esi
		jge    _081405_jump
		mov    %eax,%edx
		neg    %edx
		mov    %edx,-0x000014(%ebp)
		test   %ecx,%ecx
		je     _081405_jump
		lea    -0x000001(%edx),%esi
		xor    %eax,%eax
		mov    $0x3ff00000,%edx
		mov    %esi,-0x000014(%ebp)
		call   _07b992_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_081405_jump:
		mov    -0x000038(%ebp),%eax
		xor    %edi,%edi
		test   %eax,%eax
		je     _08144d_jump
		mov    $0x000004,%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _085190_func
		lea    -0x000034(%ebp),%ebx
		call   _085164_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		test   %edx,%edx
		je     _081440_jump
		mov    $0xfffffffc,%ebx
		call   _085190_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_081440_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _07c19c_func
		mov    %eax,%edi

	_08144d_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07bb4f_func
		mov    $0x4f237e45,%ebx
		mov    $0x4034d053,%ecx
		mov    %eax,%esi
		mov    %edx,-0x00002c(%ebp)
		call   _07b998_func
		mov    $0x1ac13af9,%ebx
		mov    $0x3fad92de,%ecx
		mov    %eax,-0x000028(%ebp)
		mov    %edx,-0x000024(%ebp)
		mov    -0x00002c(%ebp),%edx
		mov    %esi,%eax
		call   _07bb4f_func
		mov    $0xa35ca6dc,%ebx
		mov    $0x401cdaa0,%ecx
		call   _07b998_func
		mov    -0x00003c(%ebp),%ebx
		mov    -0x000038(%ebp),%ecx
		call   _07bb4f_func
		mov    %eax,-0x000020(%ebp)
		mov    %edx,%esi
		mov    -0x000028(%ebp),%eax
		mov    -0x000024(%ebp),%edx
		mov    -0x000020(%ebp),%ebx
		mov    %esi,%ecx
		call   _07b998_func
		mov    -0x000020(%ebp),%ebx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000018(%ebp)
		mov    %esi,%ecx
		mov    -0x000028(%ebp),%eax
		mov    -0x000024(%ebp),%edx
		call   _07b992_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    $_0c1590_data,%esi
		call   _07c4c8_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_0814e9_jump:
		test   %edi,%edi
		je     _081511_jump
		test   $0x000001,%di
		je     _08150a_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		call   _07bb4f_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_08150a_jump:
		sar    %edi
		add    $0x000008,%esi
		jmp    _0814e9_jump

	_081511_jump:
		mov    -0x000014(%ebp),%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _085190_func

	_08151f_jump:
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_081525_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_081540_func:
		or     %ecx,%ecx
		je     _081570_jump
		cmp    %dl,(%eax)

	_081546_jump:
		test   $0x000003,%al
		je     _081553_jump
		mov    %dl,(%eax)
		inc    %eax
		ror    $0x000008,%edx
		dec    %ecx
		jne    _081546_jump

	_081553_jump:
		push   %ecx
		shr    $0x000002,%ecx
		call   _081577_func
		pop    %ecx
		and    $0x000003,%ecx
		je     _081570_jump
		mov    %dl,(%eax)
		dec    %ecx
		je     _081570_jump
		mov    %dh,0x000001(%eax)
		dec    %ecx
		je     _081570_jump
		mov    %dl,0x000002(%eax)

	_081570_jump:
		ret    



_081577_func:
		or     %ecx,%ecx
		je     _0815e2_jump

	_08157b_jump:
		test   $0x00001f,%al
		je     _081587_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		jne    _08157b_jump

	_081587_jump:
		push   %ecx
		shr    $0x000002,%ecx
		je     _0815c7_jump
		dec    %ecx
		je     _0815b9_jump

	_081590_jump:
		mov    %edx,(%eax)
		mov    %edx,0x000004(%eax)
		dec    %ecx
		mov    %edx,0x000008(%eax)
		mov    %edx,0x00000c(%eax)
		je     _0815b6_jump
		cmp    %dl,0x000020(%eax)
		mov    %edx,0x000010(%eax)
		mov    %edx,0x000014(%eax)
		dec    %ecx
		mov    %edx,0x000018(%eax)
		mov    %edx,0x00001c(%eax)
		lea    0x000020(%eax),%eax
		jne    _081590_jump
		lea    -0x000010(%eax),%eax

	_0815b6_jump:
		lea    0x000010(%eax),%eax

	_0815b9_jump:
		mov    %edx,(%eax)
		mov    %edx,0x000004(%eax)
		mov    %edx,0x000008(%eax)
		mov    %edx,0x00000c(%eax)
		lea    0x000010(%eax),%eax

	_0815c7_jump:
		pop    %ecx
		and    $0x000003,%ecx
		je     _0815e2_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		je     _0815e2_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		je     _0815e2_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax

	_0815e2_jump:
		ret    



_0815e3_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,%ebx
		mov    %ebp,%edx
		mov    %eax,%esi
		call   _08522e_func
		mov    0x000000(%ebp),%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0815fc_func:
		push   %ecx
		push   %eax
		push   %edx
		mov    %ebx,%edx
		mov    $0x00001a,%ah
		int    $0x000021
		pop    %ecx
		pop    %edx
		mov    $0x00004e,%ah
		int    $0x000021
		call   _083b6a_func
		mov    %ebx,%edx
		call   _081638_func
		pop    %ecx
		ret    



_081638_func:
		cmpb   $0x000009,_0bd816_data
		jne    _08165a_jump
		push   %eax
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x00002f,%ah
		int    $0x000021
		mov    %ebx,%esi
		mov    %edx,%edi
		mov    $0x00002b,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %eax

	_08165a_jump:
		ret    



_08167e_func:
		push   %ebx
		push   %edx
		sub    $0x000024,%esp
		mov    %eax,%edx
		mov    %esp,%eax
		call   _08560c_func
		cmp    $0x0001f4,%eax
		jl     _081696_jump
		incl   (%esp)

	_081696_jump:
		mov    %esp,%eax
		call   _0856cf_func
		mov    %eax,%ebx
		test   %edx,%edx
		je     _0816a5_jump
		mov    %eax,(%edx)

	_0816a5_jump:
		mov    %ebx,%eax
		add    $0x000024,%esp
		pop    %edx
		pop    %ebx
		ret    



_0816ad_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %ebx,%ecx
		cmp    %eax,%edx
		je     _0816f6_jump
		jae    _0816e0_jump
		lea    (%edx,%ebx,1),%edi
		cmp    %eax,%edi
		jbe    _0816e0_jump
		lea    -0x000001(%edi),%esi
		lea    (%eax,%ebx,1),%edi
		mov    %ds,%edx
		dec    %edi
		push   %es
		mov    %edx,%es
		std    
		dec    %esi
		dec    %edi
		shr    %ecx
		rep movsw %ds:(%esi),%es:(%edi)
		adc    %ecx,%ecx
		inc    %esi
		inc    %edi
		data16 rep movsb %ds:(%esi),%es:(%edi)
		pop    %es
		cld    
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0816e0_jump:
		mov    %edx,%esi
		mov    %eax,%edi
		mov    %ds,%edx
		push   %es
		mov    %edx,%es
		push   %ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %ecx
		and    $0x000003,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		pop    %es

	_0816f6_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08170c_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07bb4f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x3ff00000,%edx
		xor    %eax,%eax
		call   _07b992_func
		test   %edx,%edx
		jge    _081746_jump
		lea    -0x000010(%ebp),%edx
		mov    $0x002041,%eax
		call   _082ada_func
		jmp    _08178c_jump

	_081746_jump:
		jne    _081760_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		jge    _08175a_jump
		mov    $0x54442d18,%eax
		mov    $0x400921fb,%edx
		jmp    _08178c_jump

	_08175a_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		jmp    _08178c_jump

	_081760_jump:
		call   _07c13a_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		call   _07c4c8_func
		call   _085835_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54442d15,%eax
		mov    $0x3ff921fb,%edx
		call   _07b992_func

	_08178c_jump:
		lea    -0x000008(%ebp),%esp
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_081794_func:
		push   %ebp
		test   $0x7ff00000,%edx
		jne    _08179f_jump
		sub    %edx,%edx

	_08179f_jump:
		test   $0x7ff00000,%ecx
		jne    _0817a9_jump
		sub    %ecx,%ecx

	_0817a9_jump:
		mov    %ecx,%ebp
		xor    %edx,%ebp
		mov    $0x000000,%ebp
		js     _0817c0_jump
		cmp    %ecx,%edx
		jne    _0817ba_jump
		cmp    %ebx,%eax

	_0817ba_jump:
		je     _0817c8_jump
		rcr    %ecx
		xor    %ecx,%edx

	_0817c0_jump:
		add    %edx,%edx
		sbb    $0x000000,%ebp
		add    %ebp,%ebp
		inc    %ebp

	_0817c8_jump:
		mov    %ebp,%eax
		pop    %ebp
		ret    



_0817cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000010(%eax),%eax
		call   _0839eb_func
		mov    %eax,%ebx
		cmp    $0xffffffff,%eax
		je     _0817f8_jump
		mov    0x000004(%edx),%ecx
		test   %ecx,%ecx
		je     _0817f6_jump
		testb  $0x000010,0x00000d(%edx)
		je     _0817f2_jump
		lea    (%ecx,%eax,1),%ebx
		jmp    _0817f6_jump

	_0817f2_jump:
		mov    %eax,%ebx
		sub    %ecx,%ebx

	_0817f6_jump:
		mov    %ebx,%eax

	_0817f8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081821_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		call   _08514f_func
		mov    -0x00000c(%ebp),%edx
		mov    %eax,%esi
		mov    -0x000010(%ebp),%eax
		call   _08514f_func
		test   %esi,%esi
		jne    _081888_jump
		test   %eax,%eax
		jne    _081864_jump
		lea    -0x000010(%ebp),%ebx
		lea    -0x000018(%ebp),%edx
		mov    $0x00204d,%eax
		call   _082ae4_func
		jmp    _081907_jump

	_081864_jump:
		jge    _08187b_jump
		mov    $0x54442d18,%edx
		mov    $0x400921fb,%ebx

	_081870_jump:
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		jmp    _08190d_jump

	_08187b_jump:
		xor    %edi,%edi
		mov    %esi,-0x00000c(%ebp)
		mov    %edi,-0x000010(%ebp)
		jmp    _08190d_jump

	_081888_jump:
		test   %eax,%eax
		jne    _0818ae_jump
		test   %esi,%esi
		jge    _0818a2_jump
		mov    $0x54442d15,%ecx
		mov    $0xbff921fb,%esi
		mov    %ecx,-0x000010(%ebp)
		mov    %esi,-0x00000c(%ebp)
		jmp    _08190d_jump

	_0818a2_jump:
		mov    $0x54442d15,%edx
		mov    $0x3ff921fb,%ebx
		jmp    _081870_jump

	_0818ae_jump:
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    -0x000010(%ebp),%ebx
		mov    -0x00000c(%ebp),%ecx
		call   _07c4c8_func
		call   _085835_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		call   _08514f_func
		test   %esi,%esi
		jl     _0818ee_jump
		test   %eax,%eax
		jge    _08190d_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0x54442d18,%ebx
		mov    $0x400921fb,%ecx
		call   _07b998_func
		jmp    _081907_jump

	_0818ee_jump:
		test   %eax,%eax
		jle    _08190d_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0x54442d18,%ebx
		mov    $0xc00921fb,%ecx
		call   _07b998_func

	_081907_jump:
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)

	_08190d_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08191a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		push   %gs
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		test   %eax,%eax
		je     _081933_jump
		cmp    $0xffffffd4,%eax
		jbe    _08193a_jump

	_081933_jump:
		xor    %eax,%eax
		jmp    _0819ee_jump

	_08193a_jump:
		mov    $_0bd5ac_data,%ebp
		lea    0x000003(%esi),%edi
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ah,(%esp)
		and    $0x00fffc,%di

	_08194d_jump:
		mov    %edi,%eax
		cmp    $0x00000c,%edi
		jae    _081959_jump
		mov    $0x00000c,%eax

	_081959_jump:
		cmp    _0bd5b4_data,%eax
		jbe    _081979_jump
		mov    _0bd5b0_data,%ecx
		test   %ecx,%ecx
		jne    _0819b1_jump

	_08196b_jump:
		mov    %ecx,_0bd5b4_data
		mov    _0bd5ac_data,%ecx
		jmp    _0819b1_jump

	_081979_jump:
		xor    %ecx,%ecx
		jmp    _08196b_jump

	_08197d_jump:
		mov    %ds,%edx
		mov    %ebp,%eax
		mov    %ecx,_0bd5b0_data
		and    $0x00ffff,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _0859a6_func
		mov    %eax,%edx
		test   %eax,%eax
		jne    _0819e4_jump
		mov    _0bd5b4_data,%ebx
		mov    0x000014(%ecx),%eax
		cmp    %ebx,%eax
		jbe    _0819ae_jump
		mov    %eax,_0bd5b4_data

	_0819ae_jump:
		mov    0x000008(%ecx),%ecx

	_0819b1_jump:
		test   %ecx,%ecx
		jne    _08197d_jump
		cmpb   $0x000000,(%esp)
		jne    _0819c6_jump
		mov    %esi,%eax
		call   _085f38_func
		test   %eax,%eax
		jne    _0819db_jump

	_0819c6_jump:
		mov    %esi,%eax
		call   _086101_func
		test   %eax,%eax
		je     _0819e4_jump
		xor    %cl,%cl
		mov    %cl,(%esp)
		jmp    _08194d_jump

	_0819db_jump:
		movb   $0x000001,(%esp)
		jmp    _08194d_jump

	_0819e4_jump:
		xor    %ch,%ch
		mov    %edx,%eax
		mov    %ch,_0e5f44_data

	_0819ee_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %gs
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0819fd_func:
		push   %ebx
		imul   %edx,%eax
		mov    %eax,%ebx
		call   _08191a_func
		test   %eax,%eax
		je     _081a13_jump
		xor    %edx,%edx
		call   _07c0b0_func

	_081a13_jump:
		pop    %ebx
		ret    



_081a15_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    %eax,%esi
		test   %eax,%eax
		je     _081a91_jump
		mov    _0e5f2c_data,%ecx
		test   %ecx,%ecx
		je     _081a37_jump
		cmp    %eax,%ecx
		ja     _081a37_jump
		cmp    0x000008(%ecx),%eax
		jb     _081a51_jump

	_081a37_jump:
		mov    _0bd5ac_data,%ecx
		jmp    _081a4a_jump

	_081a3f_jump:
		cmp    %esi,%ecx
		ja     _081a47_jump
		cmp    %ebx,%esi
		jb     _081a51_jump

	_081a47_jump:
		mov    0x000008(%ecx),%ecx

	_081a4a_jump:
		mov    0x000008(%ecx),%ebx
		test   %ebx,%ebx
		jne    _081a3f_jump

	_081a51_jump:
		mov    $_0bd5ac_data,%eax
		mov    %ds,%edx
		and    $0x00ffff,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _085a4e_func
		mov    _0bd5b0_data,%ebp
		mov    %ecx,_0e5f2c_data
		cmp    %ebp,%ecx
		jae    _081a89_jump
		mov    _0bd5b4_data,%eax
		mov    0x000014(%ecx),%edx
		cmp    %eax,%edx
		jbe    _081a89_jump
		mov    %edx,_0bd5b4_data

	_081a89_jump:
		xor    %ah,%ah
		mov    %ah,_0e5f44_data

	_081a91_jump:
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_081a98_jump:
		sub    %edx,%edx
		sub    %eax,%eax
		ret    

	_081a9d_jump:
		mov    $0x000083,%eax
		call   _08618e_func
		jmp    _081aba_jump

	_081aa9_jump:
		push   %eax
		call   _082fc5_func
		mov    $0x000084,%eax
		call   _08618e_func
		pop    %eax

	_081aba_jump:
		and    $0x80000000,%eax
		or     $0x7ff00000,%eax
		mov    %eax,%edx
		sub    %eax,%eax
		ret    



_081af1_func:
		push   %ebx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    (%ebx),%edx
		call   _07cd1a_func
		incl   0x000010(%ebx)
		pop    %ebx
		ret    



_081b02_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    0x00000c(%eax),%ebp
		mov    0x00000c(%eax),%ah
		mov    0x000008(%esi),%ecx
		and    $0x0000cf,%ah
		and    $0x000030,%ebp
		mov    %ah,0x00000c(%esi)
		test   %ecx,%ecx
		jne    _081b25_jump
		mov    %esi,%eax
		call   _08387c_func

	_081b25_jump:
		mov    0x00000d(%esi),%cl
		xor    %edi,%edi
		test   $0x000004,%cl
		je     _081b40_jump
		mov    %cl,%ch
		and    $0x0000fa,%ch
		mov    %ch,%al
		or     $0x000001,%al
		mov    $0x000001,%edi
		mov    %al,0x00000d(%esi)

	_081b40_jump:
		mov    $_081af1_func,%ecx
		mov    %esi,%eax
		call   _081f1e_func
		mov    %eax,%edx
		test   %edi,%edi
		je     _081b67_jump
		mov    0x00000d(%esi),%ah
		and    $0x0000fa,%ah
		mov    %ah,%bl
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x00000d(%esi)
		call   _083912_func

	_081b67_jump:
		testb  $0x000020,0x00000c(%esi)
		je     _081b72_jump
		mov    $0xffffffff,%edx

	_081b72_jump:
		mov    0x00000c(%esi),%edi
		or     %ebp,%edi
		mov    %edx,%eax
		mov    %edi,0x00000c(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_081b81_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x00002c,%ah
		int    $0x000021
		xor    %eax,%eax
		mov    %dh,%al
		mov    %eax,%ebx

	_081b8f_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		xor    %eax,%eax
		mov    %dh,%al
		cmp    %eax,%ebx
		je     _081b8f_jump
		xor    %esi,%esi
		mov    %al,%bl

	_081b9f_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		inc    %esi
		cmp    %dh,%bl
		je     _081b9f_jump
		mov    %esi,_0e5f34_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_081bb3_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		test   %eax,%eax
		je     _081be4_jump
		imul   _0e5f34_data,%eax
		mov    $0x0003e8,%ebx
		add    $0x0001f4,%eax
		xor    %edx,%edx
		div    %ebx
		test   %eax,%eax
		jne    _081bd5_jump
		inc    %eax

	_081bd5_jump:
		mov    %eax,%esi
		xor    %eax,%eax
		mov    %al,%bl

	_081bdb_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		cmp    %dh,%bl
		dec    %esi
		jne    _081bdb_jump

	_081be4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081bf4_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    %al,%dl
		xor    %eax,%eax
		mov    %bl,%al
		call   _082fdc_func
		cmp    $0x000100,%ebx
		jae    _081c4e_jump
		xor    %eax,%eax
		mov    _0bd81f_data,%al
		cmp    $0x000003,%eax
		jl     _081c34_jump
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000050,%ebx
		jne    _081c24_jump
		mov    $0x00000e,%dl
		jmp    _081c34_jump

	_081c24_jump:
		cmp    $0x000022,%ebx
		jl     _081c2d_jump
		mov    $0x000013,%dl
		jmp    _081c34_jump

	_081c2d_jump:
		cmp    $0x000020,%ebx
		jl     _081c34_jump
		mov    $0x000005,%dl

	_081c34_jump:
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x000013,%eax
		jle    _081c3f_jump
		mov    $0x000013,%dl

	_081c3f_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    _0bd7cd_data(%ebx),%eax
		sar    $0x000018,%eax
		jmp    _081c58_jump

	_081c4e_jump:
		mov    %ebx,%eax
		shr    $0x000008,%eax
		and    $0x0000ff,%eax

	_081c58_jump:
		call   _082fb9_func
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    



_081c65_func:
		push   %edx
		push   %ebp
		mov    %esp,%ebp
		mov    _0bd800_data,%edx
		add    $0x000003,%edx
		and    $0x0000fc,%dl
		call   _086195_func
		cmp    %eax,%edx
		jae    _081c86_jump
		mov    %edx,%eax
		sub    %eax,%esp
		mov    %esp,%eax
		jmp    _081c88_jump

	_081c86_jump:
		xor    %eax,%eax

	_081c88_jump:
		mov    _0bd800_data,%edx
		add    %edx,%eax
		mov    %eax,_0bd804_data
		call   _08619e_func
		mov    _0e5f4c_data,%edx
		mov    _0e5f48_data,%eax
		call   _018198_func
		call   _07bd0f_func
		mov    %ebp,%esp
		pop    %ebp
		pop    %edx
		ret    



_081cb4_func:
		push   %esi
		push   %edi
		push   %ebx
		push   %edx
		push   %es
		mov    %eax,%edx

	_081cbb_jump:
		ds mov $_0c16f8_data,%esi
		ds mov $_0c1722_data,%edi
		mov    %edi,%ebx
		mov    %dl,%al

	_081ccb_jump:
		cmp    %edi,%esi
		jae    _081ce3_jump
		cmpb   $0x000002,(%esi)
		je     _081cde_jump
		cmp    %al,0x000001(%esi)
		ja     _081cde_jump
		mov    %esi,%ebx
		mov    0x000001(%esi),%al

	_081cde_jump:
		add    $0x000006,%esi
		jmp    _081ccb_jump

	_081ce3_jump:
		cmp    %edi,%ebx
		je     _081cf9_jump
		mov    0x000002(%ebx),%eax
		or     %eax,%eax
		je     _081cf4_jump
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx

	_081cf4_jump:
		movb   $0x000002,(%ebx)
		jmp    _081cbb_jump

	_081cf9_jump:
		pop    %es
		pop    %edx
		pop    %ebx
		pop    %edi
		pop    %esi
		ret    



_081cff_func:
		push   %esi
		push   %edi
		push   %ebx
		push   %es
		mov    %dl,%dh
		mov    %al,%dl

	_081d07_jump:
		ds mov $_0c1722_data,%esi
		ds mov $_0c1728_data,%edi
		mov    %edi,%ebx
		mov    %dl,%al

	_081d17_jump:
		cmp    %edi,%esi
		jae    _081d2f_jump
		cmpb   $0x000002,(%esi)
		je     _081d2a_jump
		cmp    0x000001(%esi),%al
		ja     _081d2a_jump
		mov    %esi,%ebx
		mov    0x000001(%esi),%al

	_081d2a_jump:
		add    $0x000006,%esi
		jmp    _081d17_jump

	_081d2f_jump:
		cmp    %edi,%ebx
		je     _081d49_jump
		cmp    %dh,%al
		ja     _081d44_jump
		mov    0x000002(%ebx),%eax
		or     %eax,%eax
		je     _081d44_jump
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx

	_081d44_jump:
		movb   $0x000002,(%ebx)
		jmp    _081d07_jump

	_081d49_jump:
		pop    %es
		pop    %ebx
		pop    %edi
		pop    %esi
		ret    



_081d4e_func:
		ret    



_081d4f_func:
		push   %ebx
		push   %edx
		mov    $_0861a9_func,%edx
		mov    $_086311_func,%ebx
		mov    %edx,_0bf944_data
		mov    %ebx,_0bf948_data
		pop    %edx
		pop    %ebx
		ret    



_081d6a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %esp,%ebx
		mov    _0bd7ec_data,%eax
		xor    %edx,%edx
		call   _081e2b_func
		mov    (%esp),%ecx
		inc    %eax
		mov    _0bd7ec_data,%edx
		mov    %eax,0x000008(%esp)
		sub    %edx,%ecx
		shl    $0x000002,%eax
		inc    %ecx
		mov    %eax,0x000004(%esp)
		add    $0x000004,%eax
		add    %ecx,%eax
		call   _08191a_func
		mov    %eax,%ebp
		test   %eax,%eax
		je     _081e04_jump
		mov    %esp,%ebx
		mov    _0bd7ec_data,%esi
		add    %ecx,%eax
		mov    %ebp,%edi
		mov    %eax,_0bd5a4_data
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    _0bd5a4_data,%ecx
		mov    _0bd7f0_data,%eax
		lea    0x000004(%ecx),%edx
		mov    %eax,(%ecx)
		mov    %ebp,%eax
		mov    0x000004(%esp),%esi
		call   _081e2b_func
		mov    _0bd5a4_data,%ecx
		mov    0x000008(%esp),%eax
		add    %esi,%ecx
		mov    %eax,_0bd5a0_data
		movl   $0x000000,(%ecx)
		jmp    _081e0e_jump

	_081e04_jump:
		mov    %eax,_0bd5a4_data
		mov    %eax,_0bd5a0_data

	_081e0e_jump:
		mov    0x000008(%esp),%eax
		mov    %eax,_0e5f48_data
		mov    _0bd5a4_data,%eax
		mov    %eax,_0e5f4c_data
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081e2b_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %edx,%esi
		mov    %ebx,(%esp)
		xor    %edi,%edi

	_081e39_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000020,%edx
		je     _081e47_jump
		cmp    $0x000009,%edx
		jne    _081e4a_jump

	_081e47_jump:
		inc    %eax
		jmp    _081e39_jump

	_081e4a_jump:
		test   %dl,%dl
		je     _081f0f_jump
		cmp    $0x000022,%edx
		jne    _081e9a_jump
		inc    %eax
		mov    %eax,%ebp
		mov    %eax,%edx

	_081e5c_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x000022,%ebx
		je     _081ed5_jump
		test   %bl,%bl
		je     _081ed5_jump
		cmp    $0x00005c,%ebx
		jne    _081e86_jump
		xor    %ebx,%ebx
		mov    0x000001(%eax),%bl
		cmp    $0x000022,%ebx
		je     _081e85_jump
		cmp    $0x00005c,%ebx
		jne    _081e86_jump

	_081e85_jump:
		inc    %eax

	_081e86_jump:
		lea    0x000001(%eax),%ebx
		test   %esi,%esi
		je     _081e96_jump
		mov    (%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		inc    %edx
		jmp    _081e5c_jump

	_081e96_jump:
		mov    %ebx,%eax
		jmp    _081e5c_jump

	_081e9a_jump:
		mov    %eax,%ebp
		mov    %eax,%edx

	_081e9e_jump:
		cmpb   $0x000000,(%eax)
		je     _081ed5_jump
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x000020,%ebx
		je     _081ed5_jump
		cmp    $0x000009,%ebx
		je     _081ed5_jump
		cmp    $0x00005c,%ebx
		jne    _081ec1_jump
		xor    %ebx,%ebx
		mov    0x000001(%eax),%bl
		cmp    $0x000022,%ebx
		jne    _081ec1_jump
		inc    %eax

	_081ec1_jump:
		lea    0x000001(%eax),%ebx
		test   %esi,%esi
		je     _081ed1_jump
		mov    (%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		inc    %edx
		jmp    _081e9e_jump

	_081ed1_jump:
		mov    %ebx,%eax
		jmp    _081e9e_jump

	_081ed5_jump:
		lea    0x000001(%eax),%ebx
		mov    %ebx,0x000004(%esp)
		lea    0x000001(%edi),%ebx
		test   %esi,%esi
		je     _081efe_jump
		mov    %ebp,(%esi,%edi,4)
		mov    %ebx,%edi
		mov    (%eax),%bl
		test   %bl,%bl
		jne    _081ef2_jump
		mov    %bl,(%edx)
		jmp    _081f0f_jump

	_081ef2_jump:
		mov    0x000004(%esp),%eax
		movb   $0x000000,(%edx)
		jmp    _081e39_jump

	_081efe_jump:
		mov    (%eax),%ch
		mov    %ebx,%edi
		test   %ch,%ch
		je     _081f0f_jump
		mov    0x000004(%esp),%eax
		jmp    _081e39_jump

	_081f0f_jump:
		mov    (%esp),%edx
		mov    %eax,(%edx)
		mov    %edi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_081f1e_func:
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x00004c,%esp
		mov    %ebx,%esi
		mov    %ecx,0x000044(%esp)
		xor    %bl,%bl
		mov    %eax,0x000028(%esp)
		mov    %bl,0x000048(%esp)
		mov    %bl,0x00003c(%esp)
		xor    %ebx,%ebx
		mov    %edx,%edi
		mov    %ebx,0x000038(%esp)
		mov    $0x000004,%ebp
		jmp    _081fc4_jump

	_081f4b_jump:
		lea    0x000028(%esp),%ebx
		mov    %esi,%edx
		call   _0821f8_func
		mov    %eax,%edi
		mov    (%eax),%al
		inc    %edi
		mov    %al,0x00003d(%esp)
		test   %al,%al
		je     _0821ec_jump
		xor    %eax,%eax
		mov    0x00003d(%esp),%al
		cmp    $0x00006e,%eax
		jne    _082080_jump
		mov    0x00003c(%esp),%al
		xor    %edx,%edx
		and    $0x000020,%al
		mov    %al,%dl
		mov    0x00003c(%esp),%ah
		and    $0x000040,%ah
		mov    0x00003c(%esp),%al
		and    $0x000080,%al
		test   %edx,%edx
		je     _081ff5_jump
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _081fac_jump
		mov    (%esi),%ecx
		add    $0x000008,%ecx
		mov    %ecx,(%esi)
		les    -0x000008(%ecx),%edx

	_081fa3_jump:
		mov    0x000038(%esp),%eax
		mov    %eax,%es:(%edx)
		jmp    _081fc4_jump

	_081fac_jump:
		mov    %ah,%al
		and    $0x0000ff,%eax
		je     _081fea_jump
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x000004(%ebx),%edx

	_081fbe_jump:
		mov    0x000038(%esp),%eax
		mov    %eax,(%edx)

	_081fc4_jump:
		mov    (%edi),%cl
		test   %cl,%cl
		je     _0821ec_jump
		xor    %edx,%edx
		mov    %cl,%dl
		lea    0x000001(%edi),%eax
		cmp    $0x000025,%edx
		je     _081f4b_jump
		mov    %eax,%edi
		lea    0x000028(%esp),%eax
		call   *0x000044(%esp)
		jmp    _081fc4_jump

	_081fea_jump:
		mov    (%esi),%edx
		add    %ebp,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		jmp    _081fbe_jump

	_081ff5_jump:
		mov    0x00003c(%esp),%dl
		and    $0x000010,%dl
		and    $0x0000ff,%edx
		je     _082046_jump
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _082020_jump
		mov    (%esi),%eax
		add    $0x000008,%eax
		mov    %eax,(%esi)
		les    -0x000008(%eax),%edx
		mov    0x000038(%esp),%eax
		mov    %ax,%es:(%edx)
		jmp    _081fc4_jump

	_082020_jump:
		mov    %ah,%al
		and    $0x0000ff,%eax
		je     _08203b_jump
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x000004(%ecx),%edx

	_082032_jump:
		mov    0x000038(%esp),%eax
		mov    %ax,(%edx)
		jmp    _081fc4_jump

	_08203b_jump:
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x000004(%ebx),%edx
		jmp    _082032_jump

	_082046_jump:
		mov    %al,%dl
		test   %edx,%edx
		je     _08205b_jump
		mov    (%esi),%edx
		add    $0x000008,%edx
		mov    %edx,(%esi)
		les    -0x000008(%edx),%edx
		jmp    _081fa3_jump

	_08205b_jump:
		mov    %ah,%al
		and    $0x0000ff,%eax
		je     _082072_jump
		mov    (%esi),%eax
		add    %ebp,%eax
		mov    %eax,(%esi)
		mov    -0x000004(%eax),%edx
		jmp    _081fbe_jump

	_082072_jump:
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x000004(%ecx),%edx
		jmp    _081fbe_jump

	_082080_jump:
		lea    0x000048(%esp),%ecx
		lea    0x000028(%esp),%ebx
		mov    %esp,%eax
		mov    %esi,%edx
		call   _082536_func
		mov    %eax,%ebx
		mov    0x00003c(%esp),%al
		mov    %edx,%es
		and    $0x000008,%al
		and    $0x0000ff,%eax
		jne    _0820c8_jump
		mov    0x00003e(%esp),%al
		cmp    $0x000020,%eax
		jne    _0820c8_jump

	_0820ab_jump:
		mov    0x00002c(%esp),%eax
		dec    %eax
		mov    %eax,0x00002c(%esp)
		test   %eax,%eax
		jl     _0820c8_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    0x00003e(%esp),%dl
		call   *0x000044(%esp)
		jmp    _0820ab_jump

	_0820c8_jump:
		lea    0x00003f(%esp),%ecx

	_0820cc_jump:
		mov    (%ecx),%al
		test   %al,%al
		je     _0820e1_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000028(%esp),%eax
		inc    %ecx
		call   *0x000044(%esp)
		jmp    _0820cc_jump

	_0820e1_jump:
		mov    0x000034(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000034(%esp)
		test   %eax,%eax
		je     _0820ff_jump
		mov    $0x000030,%edx
		lea    0x000028(%esp),%eax
		call   *0x000044(%esp)
		jmp    _0820e1_jump

	_0820ff_jump:
		mov    0x00003c(%esp),%al
		and    $0x000008,%al
		and    $0x0000ff,%eax
		jne    _082132_jump
		mov    0x00003e(%esp),%al
		cmp    $0x000020,%eax
		je     _082132_jump

	_082115_jump:
		mov    0x00002c(%esp),%eax
		dec    %eax
		mov    %eax,0x00002c(%esp)
		test   %eax,%eax
		jl     _082132_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    0x00003e(%esp),%dl
		call   *0x000044(%esp)
		jmp    _082115_jump

	_082132_jump:
		xor    %eax,%eax
		mov    0x00003d(%esp),%al
		cmp    $0x000073,%eax
		je     _082142_jump
		cmp    $0x000053,%eax
		jne    _08218f_jump

	_082142_jump:
		mov    0x00003c(%esp),%al
		and    $0x000020,%al
		and    $0x0000ff,%eax
		je     _082170_jump

	_08214f_jump:
		mov    0x000030(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000030(%esp)
		test   %eax,%eax
		je     _0821ae_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x000044(%esp)
		add    $0x000002,%ebx
		jmp    _08214f_jump

	_082170_jump:
		mov    0x000030(%esp),%eax
		lea    -0x000001(%eax),%edx
		mov    %edx,0x000030(%esp)
		test   %eax,%eax
		je     _0821ae_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x000044(%esp)
		inc    %ebx
		jmp    _082170_jump

	_08218f_jump:
		mov    0x000030(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000030(%esp)
		test   %eax,%eax
		je     _0821ae_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x000044(%esp)
		inc    %ebx
		jmp    _08218f_jump

	_0821ae_jump:
		mov    0x00003c(%esp),%al
		and    $0x000008,%al
		and    $0x0000ff,%eax
		je     _081fc4_jump
		cmpl   $0x000000,0x00002c(%esp)
		jle    _081fc4_jump

	_0821ca_jump:
		mov    0x00002c(%esp),%eax
		lea    -0x000001(%eax),%edx
		mov    %edx,0x00002c(%esp)
		test   %eax,%eax
		je     _081fc4_jump
		mov    $0x000020,%edx
		lea    0x000028(%esp),%eax
		call   *0x000044(%esp)
		jmp    _0821ca_jump

	_0821ec_jump:
		mov    0x000038(%esp),%eax
		add    $0x00004c,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret    



_0821f8_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		movb   $0x000000,0x000017(%ebx)
		mov    %ebx,%edx
		movb   $0x000020,0x000016(%ebx)
		call   _082336_func
		movl   $0x000000,0x000004(%ebx)
		mov    (%eax),%dl
		and    $0x0000ff,%edx
		cmp    $0x000030,%edx
		jl     _082246_jump
		cmp    $0x000039,%edx
		jg     _082246_jump

	_082225_jump:
		imul   $0x00000a,0x000004(%ebx),%ecx
		xor    %edx,%edx
		mov    (%eax),%dl
		sub    $0x000030,%edx
		inc    %eax
		add    %edx,%ecx
		xor    %edx,%edx
		mov    %ecx,0x000004(%ebx)
		mov    (%eax),%dl
		cmp    $0x000030,%edx
		jl     _082271_jump
		cmp    $0x000039,%edx
		jle    _082225_jump
		jmp    _082271_jump

	_082246_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x00002a,%edx
		jne    _082271_jump
		mov    (%esi),%edx
		add    $0x000004,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		mov    %edx,0x000004(%ebx)
		test   %edx,%edx
		jge    _082270_jump
		mov    %edx,%edi
		mov    0x000014(%ebx),%dl
		neg    %edi
		or     $0x000008,%dl
		mov    %edi,0x000004(%ebx)
		mov    %dl,0x000014(%ebx)

	_082270_jump:
		inc    %eax

	_082271_jump:
		movl   $0xffffffff,0x000008(%ebx)
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x00002e,%edx
		jne    _0822ca_jump
		inc    %eax
		movl   $0x000000,0x000008(%ebx)
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x00002a,%edx
		jne    _0822ad_jump
		mov    (%esi),%edx
		add    $0x000004,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		mov    %edx,0x000008(%ebx)
		test   %edx,%edx
		jge    _0822aa_jump
		movl   $0xffffffff,0x000008(%ebx)

	_0822aa_jump:
		inc    %eax
		jmp    _0822ca_jump

	_0822ad_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000030,%edx
		jl     _0822ca_jump
		cmp    $0x000039,%edx
		jg     _0822ca_jump
		imul   $0x00000a,0x000008(%ebx),%ecx
		sub    $0x000030,%edx
		add    %edx,%ecx
		inc    %eax
		mov    %ecx,0x000008(%ebx)
		jmp    _0822ad_jump

	_0822ca_jump:
		mov    (%eax),%dl
		lea    0x000001(%eax),%ecx
		cmp    $0x00004e,%dl
		jb     _0822ef_jump
		jbe    _08232c_jump
		cmp    $0x00006c,%dl
		jb     _0822e6_jump
		jbe    _0822ff_jump
		cmp    $0x000077,%dl
		je     _0822ff_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0822e6_jump:
		cmp    $0x000068,%dl
		je     _08230d_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0822ef_jump:
		cmp    $0x000046,%dl
		jb     _082332_jump
		jbe    _082322_jump
		cmp    $0x00004c,%dl
		je     _082313_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0822ff_jump:
		mov    0x000014(%ebx),%dh
		or     $0x000020,%dh
		inc    %eax

	_082306_jump:
		mov    %dh,0x000014(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_08230d_jump:
		orb    $0x000010,0x000014(%ebx)
		jmp    _082330_jump

	_082313_jump:
		mov    0x000014(%ebx),%dl
		or     $0x000040,%dl
		mov    %ecx,%eax
		mov    %dl,0x000014(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_082322_jump:
		mov    0x000014(%ebx),%dh
		or     $0x000080,%dh
		mov    %ecx,%eax
		jmp    _082306_jump

	_08232c_jump:
		orb    $0x000040,0x000014(%ebx)

	_082330_jump:
		mov    %ecx,%eax

	_082332_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_082336_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		movb   $0x000000,0x000014(%edx)

	_08233e_jump:
		xor    %eax,%eax
		mov    (%ebx),%al
		cmp    $0x00002d,%eax
		jne    _08234d_jump
		orb    $0x000008,0x000014(%edx)
		jmp    _08238d_jump

	_08234d_jump:
		cmp    $0x000023,%eax
		jne    _082358_jump
		orb    $0x000001,0x000014(%edx)
		jmp    _08238d_jump

	_082358_jump:
		cmp    $0x00002b,%eax
		jne    _08236d_jump
		mov    0x000014(%edx),%cl
		or     $0x000004,%cl
		mov    %cl,%ch
		and    $0x0000fd,%ch
		mov    %ch,0x000014(%edx)
		jmp    _08238d_jump

	_08236d_jump:
		cmp    $0x000020,%eax
		jne    _082384_jump
		mov    0x000014(%edx),%al
		and    $0x000004,%al
		and    $0x0000ff,%eax
		jne    _08238d_jump
		orb    $0x000002,0x000014(%edx)
		jmp    _08238d_jump

	_082384_jump:
		cmp    $0x000030,%eax
		jne    _082390_jump
		movb   $0x000030,0x000016(%edx)

	_08238d_jump:
		inc    %ebx
		jmp    _08233e_jump

	_082390_jump:
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_082395_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %edx,%ecx
		mov    %ebx,%edi
		mov    %eax,%edx
		mov    %ecx,%es
		xor    %eax,%eax

	_0823a3_jump:
		mov    %edx,%esi
		mov    %es:(%esi),%bl
		inc    %edx
		test   %bl,%bl
		je     _0823b4_jump
		cmp    %edi,%eax
		je     _0823b4_jump
		inc    %eax
		jmp    _0823a3_jump

	_0823b4_jump:
		pop    %es
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0823b9_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %eax,%ecx
		mov    %ebx,%esi
		mov    %ecx,%ebx
		mov    %edx,%es
		xor    %eax,%eax

	_0823c7_jump:
		mov    %ebx,%ecx
		mov    %es:(%ecx),%di
		add    $0x000002,%ebx
		test   %di,%di
		je     _0823b4_jump
		cmp    %esi,%eax
		je     _0823b4_jump
		inc    %eax
		jmp    _0823c7_jump



_0823dc_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    $0x000010,%ebx
		mov    %ebp,%edi
		call   _07ce3e_func
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    (%esp),%eax
		mov    %ebp,%esi
		dec    %eax
		lea    (%ecx,%ebp,1),%edx
		lea    (%eax,%ebp,1),%ebx
		jmp    _082419_jump

	_082412_jump:
		dec    %edx
		mov    (%edx),%cl
		dec    %eax
		mov    %cl,(%ebx)
		dec    %ebx

	_082419_jump:
		cmp    %esi,%edx
		jne    _082412_jump
		lea    (%eax,%ebp,1),%edx

	_082420_jump:
		test   %eax,%eax
		jl     _08242b_jump
		dec    %eax
		movb   $0x000030,(%edx)
		dec    %edx
		jmp    _082420_jump

	_08242b_jump:
		add    (%esp),%ebp
		movb   $0x000000,0x000000(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08243a_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%esi
		mov    %edx,(%esp)
		test   %edx,%edx
		jge    _082456_jump
		neg    %edx
		lea    0x000001(%eax),%ecx
		movb   $0x00002d,(%eax)
		mov    %edx,(%esp)

	_082456_jump:
		cmpl   $0xffffffff,0x000008(%esi)
		jne    _082463_jump
		movl   $0x000004,0x000008(%esi)

	_082463_jump:
		mov    $0x00000a,%ebx
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    0x000002(%esp),%ax
		call   _07ce3e_func
		mov    %ecx,%ebx

	_082478_jump:
		mov    (%ecx),%ah
		lea    0x000001(%ecx),%edx
		test   %ah,%ah
		je     _082485_jump
		mov    %edx,%ecx
		jmp    _082478_jump

	_082485_jump:
		cmpl   $0x000000,0x000008(%esi)
		je     _0824b7_jump
		movb   $0x00002e,(%ecx)
		xor    %eax,%eax
		mov    %edx,%ecx
		jmp    _0824af_jump

	_082494_jump:
		xor    %edx,%edx
		mov    %dx,0x000002(%esp)
		mov    (%esp),%edi
		imul   $0x00000a,%edi,%edx
		mov    %edx,(%esp)
		mov    0x000002(%esp),%dl
		add    $0x000030,%dl
		inc    %eax
		mov    %dl,(%ecx)
		inc    %ecx

	_0824af_jump:
		cmp    0x000008(%esi),%eax
		jl     _082494_jump
		movb   $0x000000,(%ecx)

	_0824b7_jump:
		mov    (%esp),%eax
		xor    %al,%al
		and    $0x000080,%ah
		and    $0x00ffff,%eax
		je     _082528_jump

	_0824ca_jump:
		cmp    %ebx,%ecx
		jne    _082507_jump
		lea    0x000001(%ebx),%ecx
		movb   $0x000031,(%ebx)

	_0824d4_jump:
		xor    %edx,%edx
		mov    (%ecx),%dl
		lea    0x000001(%ecx),%eax
		cmp    $0x000030,%edx
		jne    _0824e4_jump
		mov    %eax,%ecx
		jmp    _0824d4_jump

	_0824e4_jump:
		cmp    $0x00002e,%edx
		jne    _0824fe_jump
		movb   $0x000030,(%ecx)
		lea    0x000001(%eax),%ecx
		movb   $0x00002e,(%eax)

	_0824f2_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		cmp    $0x000030,%eax
		jne    _0824fe_jump
		inc    %ecx
		jmp    _0824f2_jump

	_0824fe_jump:
		movb   $0x000030,(%ecx)
		inc    %ecx
		movb   $0x000000,(%ecx)
		jmp    _082528_jump

	_082507_jump:
		dec    %ecx
		xor    %eax,%eax
		mov    (%ecx),%al
		cmp    $0x00002e,%eax
		jne    _082512_jump
		dec    %ecx

	_082512_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		cmp    $0x000039,%eax
		je     _082523_jump
		mov    %al,%dl
		inc    %dl
		mov    %dl,(%ecx)
		jmp    _082528_jump

	_082523_jump:
		movb   $0x000030,(%ecx)
		jmp    _0824ca_jump

	_082528_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08252f_func:
		call   *_0bf944_data
		ret    



_082536_func:
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    %ecx,0x000004(%esp)
		mov    %edx,%eax
		movl   $0x000001,(%esp)
		mov    %ds,%edx
		mov    %edi,%ecx
		mov    %edx,%es
		mov    0x000015(%ebx),%dl
		movl   $0x000000,0x00000c(%ebx)
		cmp    $0x000069,%dl
		jb     _08257f_jump
		jbe    _0825d0_jump
		cmp    $0x000075,%dl
		jb     _08257a_jump
		jbe    _08258d_jump
		cmp    $0x000078,%dl

	_082573_jump:
		je     _08258d_jump
		jmp    _0825da_jump

	_08257a_jump:
		cmp    $0x00006f,%dl
		jmp    _082573_jump

	_08257f_jump:
		cmp    $0x000058,%dl
		jb     _0825da_jump
		jbe    _08258d_jump
		cmp    $0x000064,%dl
		je     _0825d0_jump
		jmp    _0825da_jump

	_08258d_jump:
		mov    0x000014(%esi),%dl
		and    $0x000020,%dl
		and    $0x0000ff,%edx
		je     _0825a7_jump
		mov    (%eax),%edx
		add    $0x000004,%edx
		mov    %edx,(%eax)
		mov    -0x000004(%edx),%ebp
		jmp    _0825cc_jump

	_0825a7_jump:
		mov    0x000014(%esi),%dl
		and    $0x000010,%dl
		and    $0x0000ff,%edx
		je     _0825c2_jump
		mov    (%eax),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%eax)
		movzwl -0x000004(%ebp),%ebp
		jmp    _0825cc_jump

	_0825c2_jump:
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    -0x000004(%ebx),%ebp

	_0825cc_jump:
		andb   $0x0000f9,0x000014(%esi)

	_0825d0_jump:
		cmpl   $0xffffffff,0x000008(%esi)
		je     _0825da_jump
		movb   $0x000020,0x000016(%esi)

	_0825da_jump:
		mov    0x000015(%esi),%dl
		mov    $0x00000a,%ebx
		cmp    $0x000065,%dl
		jb     _082647_jump
		jbe    _0826c7_jump
		cmp    $0x00006f,%dl
		jb     _08262e_jump
		jbe    _0826dd_jump
		cmp    $0x000073,%dl
		jb     _082620_jump
		jbe    _082772_jump
		cmp    $0x000075,%dl
		jb     _082944_jump
		jbe    _08285e_jump
		cmp    $0x000078,%dl
		je     _08283b_jump
		jmp    _082944_jump

	_082620_jump:
		cmp    $0x000070,%dl
		je     _082881_jump
		jmp    _082944_jump

	_08262e_jump:
		cmp    $0x000067,%dl
		jb     _082695_jump
		jbe    _0826c7_jump
		cmp    $0x000069,%dl
		je     _082721_jump
		jmp    _082944_jump

	_082647_jump:
		cmp    $0x000050,%dl
		jb     _08267f_jump
		jbe    _082881_jump
		cmp    $0x000058,%dl
		jb     _082671_jump
		jbe    _08283b_jump
		cmp    $0x000063,%dl
		jb     _082944_jump
		jbe    _082918_jump
		jmp    _082721_jump

	_082671_jump:
		cmp    $0x000053,%dl
		je     _082772_jump
		jmp    _082944_jump

	_08267f_jump:
		cmp    $0x000046,%dl
		jb     _082690_jump
		jbe    _082695_jump
		cmp    $0x000047,%dl

	_082689_jump:
		je     _0826c7_jump
		jmp    _082944_jump

	_082690_jump:
		cmp    $0x000045,%dl
		jmp    _082689_jump

	_082695_jump:
		mov    0x000014(%esi),%dl
		and    $0x000010,%dl
		and    $0x0000ff,%edx
		je     _0826c7_jump
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    %edi,%eax
		mov    -0x000004(%ebx),%edx
		mov    %esi,%ebx
		call   _08243a_func
		mov    $0xffffffff,%ebx
		mov    %ds,%eax
		mov    %ds,%edx
		mov    %eax,%es
		mov    %edi,%eax
		mov    %edi,%ecx
		jmp    _082717_jump

	_0826c7_jump:
		mov    %esi,%ebx
		mov    %eax,%edx
		mov    %edi,%eax
		call   _08252f_func
		mov    $0xffffffff,%ebx
		mov    %edx,%es
		mov    %eax,%ecx
		jmp    _082717_jump

	_0826dd_jump:
		mov    0x000014(%esi),%al
		mov    $0x000008,%ebx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _0826f2_jump
		movb   $0x000030,(%edi)
		inc    %edi

	_0826f2_jump:
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _07cec8_func

	_0826fb_jump:
		cmpl   $0x000000,0x000008(%esi)
		jne    _08270e_jump
		xor    %eax,%eax
		mov    (%edi),%al
		cmp    $0x000030,%eax
		jne    _08270e_jump
		movb   $0x000000,%es:(%ecx)

	_08270e_jump:
		mov    $0xffffffff,%ebx
		mov    %es,%edx
		mov    %ecx,%eax

	_082717_jump:
		call   _082395_func
		jmp    _08296d_jump

	_082721_jump:
		mov    0x000014(%esi),%dl
		and    $0x000020,%dl
		and    $0x0000ff,%edx
		je     _082742_jump
		mov    (%eax),%edx
		add    $0x000004,%edx
		mov    %edx,(%eax)
		mov    -0x000004(%edx),%eax
		mov    %edi,%edx

	_08273b_jump:
		call   _07cec8_func
		jmp    _0826fb_jump

	_082742_jump:
		mov    0x000014(%esi),%dl
		and    $0x000010,%dl
		and    $0x0000ff,%edx
		je     _08275f_jump
		mov    (%eax),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%eax)
		mov    %edi,%edx
		movswl -0x000004(%ebp),%eax
		jmp    _08273b_jump

	_08275f_jump:
		mov    (%eax),%edx
		add    $0x000004,%edx
		mov    %edx,(%eax)
		mov    -0x000004(%edx),%eax
		mov    %edi,%edx
		call   _07ce3e_func
		jmp    _0826fb_jump

	_082772_jump:
		mov    0x000014(%esi),%dl
		and    $0x000080,%dl
		and    $0x0000ff,%edx
		je     _0827a3_jump
		mov    (%eax),%edi
		add    $0x000008,%edi
		mov    %edi,(%eax)
		mov    -0x000008(%edi),%ecx
		mov    -0x000004(%edi),%dx
		test   %ecx,%ecx
		jne    _082797_jump
		test   %dx,%dx
		je     _08279b_jump

	_082797_jump:
		mov    %edx,%es
		jmp    _0827d9_jump

	_08279b_jump:
		mov    %ds,%eax
		mov    0x000004(%esp),%ecx
		jmp    _0827d7_jump

	_0827a3_jump:
		mov    0x000014(%esi),%dl
		and    $0x000040,%dl
		and    $0x0000ff,%edx
		je     _0827c3_jump
		mov    (%eax),%ecx
		add    $0x000004,%ecx
		mov    %ecx,(%eax)
		mov    -0x000004(%ecx),%ecx
		test   %ecx,%ecx
		je     _08279b_jump

	_0827bf_jump:
		mov    %ds,%eax
		jmp    _0827d7_jump

	_0827c3_jump:
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    -0x000004(%ebx),%ecx
		test   %ecx,%ecx
		jne    _0827bf_jump
		mov    %ds,%eax
		mov    0x000004(%esp),%ecx

	_0827d7_jump:
		mov    %eax,%es

	_0827d9_jump:
		mov    0x000014(%esi),%bl
		xor    %ebp,%ebp
		xor    %eax,%eax
		and    $0x0000f9,%bl
		mov    %ebp,(%esp)
		mov    0x000015(%esi),%al
		mov    %bl,0x000014(%esi)
		cmp    $0x000053,%eax
		jne    _082813_jump
		mov    %bl,%al
		and    $0x000020,%al
		and    $0x0000ff,%eax
		je     _08280a_jump
		xor    %eax,%eax
		mov    %es:(%ecx),%ax
		add    $0x000002,%ecx
		jmp    _08296d_jump

	_08280a_jump:
		mov    %es:(%ecx),%al
		inc    %ecx
		jmp    _08296d_jump

	_082813_jump:
		mov    %bl,%al
		and    $0x000020,%al
		and    $0x0000ff,%eax
		je     _08282f_jump
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x000008(%esi),%ebx
		call   _0823b9_func
		jmp    _08296d_jump

	_08282f_jump:
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x000008(%esi),%ebx
		jmp    _082717_jump

	_08283b_jump:
		mov    0x000014(%esi),%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _082859_jump
		test   %ebp,%ebp
		je     _082859_jump
		movb   $0x000030,0x000017(%esi)
		mov    0x000015(%esi),%al
		movb   $0x000000,0x000019(%esi)
		mov    %al,0x000018(%esi)

	_082859_jump:
		mov    $0x000010,%ebx

	_08285e_jump:
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _07ce7e_func
		xor    %eax,%eax
		mov    0x000015(%esi),%al
		cmp    $0x000058,%eax
		jne    _0826fb_jump
		mov    %edi,%eax
		call   _082a1f_func
		jmp    _0826fb_jump

	_082881_jump:
		cmpl   $0x000000,0x000004(%esi)
		jne    _0828a5_jump
		mov    0x000014(%esi),%dl
		and    $0x000080,%dl
		and    $0x0000ff,%edx
		je     _08289e_jump
		movl   $0x00000d,0x000004(%esi)
		jmp    _0828a5_jump

	_08289e_jump:
		movl   $0x000008,0x000004(%esi)

	_0828a5_jump:
		andb   $0x0000f9,0x000014(%esi)
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    0x000014(%esi),%dl
		and    $0x000080,%dl
		mov    %dl,0x000008(%esp)
		xor    %edx,%edx
		mov    0x000008(%esp),%dl
		mov    -0x000004(%ebx),%ebp
		test   %edx,%edx
		je     _0828f0_jump
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    %edi,%edx
		mov    -0x000004(%ebx),%eax
		mov    $0x000004,%ebx
		and    $0x00ffff,%eax
		call   _0823dc_func
		mov    $0x000008,%ebx
		lea    0x000005(%edi),%edx
		mov    %ebp,%eax
		movb   $0x00003a,0x000004(%edi)
		jmp    _0828f9_jump

	_0828f0_jump:
		mov    $0x000008,%ebx
		mov    %edi,%edx
		mov    %ebp,%eax

	_0828f9_jump:
		call   _0823dc_func
		xor    %eax,%eax
		mov    0x000015(%esi),%al
		cmp    $0x000050,%eax
		jne    _08270e_jump
		mov    %edi,%eax
		call   _082a1f_func
		jmp    _08270e_jump

	_082918_jump:
		mov    (%eax),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%eax)
		mov    -0x000004(%ebp),%al
		movb   $0x000000,0x000001(%edi)
		mov    %al,(%edi)
		movl   $0x000001,0x000008(%esi)
		mov    0x000014(%esi),%dh
		xor    %eax,%eax
		and    $0x0000f9,%dh
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		mov    %dh,0x000014(%esi)
		jmp    _08296d_jump

	_082944_jump:
		movl   $0x000000,0x000004(%esi)
		mov    0x000015(%esi),%al
		movb   $0x000000,0x000001(%edi)
		mov    %al,(%edi)
		movl   $0x000001,0x000008(%esi)
		mov    0x000014(%esi),%al
		xor    %edi,%edi
		and    $0x0000f9,%al
		mov    %edi,(%esp)
		mov    %al,0x000014(%esi)
		mov    $0x000001,%eax

	_08296d_jump:
		cmpl   $0x000000,(%esp)
		je     _0829c2_jump
		xor    %edx,%edx
		mov    %es:(%ecx),%dl
		cmp    $0x00002d,%edx
		jne    _082985_jump
		inc    %ecx
		movb   $0x00002d,0x000017(%esi)
		dec    %eax
		jmp    _0829ab_jump

	_082985_jump:
		mov    0x000014(%esi),%dl
		and    $0x000002,%dl
		and    $0x0000ff,%edx
		je     _082999_jump
		movb   $0x000020,0x000017(%esi)
		jmp    _0829ab_jump

	_082999_jump:
		mov    0x000014(%esi),%dl
		and    $0x000004,%dl
		and    $0x0000ff,%edx
		je     _0829af_jump
		movb   $0x00002b,0x000017(%esi)

	_0829ab_jump:
		movb   $0x000000,0x000018(%esi)

	_0829af_jump:
		mov    0x000008(%esi),%edx
		cmp    %edx,%eax
		jle    _0829bb_jump
		mov    %eax,0x000008(%esi)
		jmp    _0829c2_jump

	_0829bb_jump:
		mov    %edx,%ebx
		sub    %eax,%ebx
		mov    %ebx,0x00000c(%esi)

	_0829c2_jump:
		xor    %edx,%edx
		mov    0x000016(%esi),%dl
		cmp    $0x00002a,%edx
		jne    _0829d9_jump
		mov    0x000014(%esi),%dl
		movb   $0x000000,0x000017(%esi)
		and    $0x0000f9,%dl
		mov    %dl,0x000014(%esi)

	_0829d9_jump:
		mov    0x000008(%esi),%ebx
		cmp    $0xffffffff,%ebx
		je     _0829e5_jump
		cmp    %ebx,%eax
		jge    _0829f2_jump

	_0829e5_jump:
		xor    %edx,%edx
		mov    0x000015(%esi),%dl
		cmp    $0x000063,%edx
		je     _0829f2_jump
		mov    %eax,0x000008(%esi)

	_0829f2_jump:
		mov    $0xffffffff,%ebx
		lea    0x000017(%esi),%eax
		mov    %ds,%edx
		call   _082395_func
		mov    0x000008(%esi),%ebp
		mov    0x00000c(%esi),%edx
		add    %ebp,%eax
		mov    0x000004(%esi),%ebx
		add    %edx,%eax
		mov    %es,%edx
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %ebx,0x000004(%esi)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret    



_082a1f_func:
		push   %edx
		mov    %eax,%edx

	_082a22_jump:
		cmpb   $0x000000,(%edx)
		je     _082a35_jump
		xor    %eax,%eax
		mov    (%edx),%al
		call   _086334_func
		mov    %al,(%edx)
		inc    %edx
		jmp    _082a22_jump

	_082a35_jump:
		pop    %edx
		ret    



_082ada_func:
		push   %ebx
		mov    %edx,%ebx
		call   _082ae4_func
		pop    %ebx
		ret    



_082ae4_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		sub    $0x000020,%esp
		mov    %eax,%ecx
		mov    (%edx),%eax
		mov    %eax,-0x000020(%ebp)
		mov    0x000004(%edx),%eax
		mov    %eax,-0x00001c(%ebp)
		mov    (%ebx),%eax
		mov    %eax,-0x000018(%ebp)
		mov    0x000004(%ebx),%eax
		mov    %eax,-0x000014(%ebp)
		test   $0x000040,%cl
		je     _082b10_jump
		mov    $0x000001,%esi
		jmp    _082b4a_jump

	_082b10_jump:
		test   $0x000080,%cl
		je     _082b1c_jump
		mov    $0x000002,%esi
		jmp    _082b4a_jump

	_082b1c_jump:
		test   $0x000001,%ch
		je     _082b28_jump
		mov    $0x000003,%esi
		jmp    _082b4a_jump

	_082b28_jump:
		test   $0x000008,%ch
		je     _082b34_jump
		mov    $0x000004,%esi
		jmp    _082b4a_jump

	_082b34_jump:
		test   $0x000002,%ch
		je     _082b40_jump
		mov    $0x000006,%esi
		jmp    _082b4a_jump

	_082b40_jump:
		test   $0x000004,%ch
		je     _082b4a_jump
		mov    $0x000005,%esi

	_082b4a_jump:
		mov    %ecx,%eax
		and    $0x00001f,%eax
		mov    _0bd824_data(,%eax,4),%eax
		mov    %esi,-0x000028(%ebp)
		mov    %eax,-0x000024(%ebp)
		test   $0x000010,%ch
		je     _082b79_jump
		mov    _0c15b0_data,%eax
		mov    _0c15b4_data,%edx
		call   _07c6ce_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		jmp    _082bbb_jump

	_082b79_jump:
		test   $0x000020,%ch
		je     _082b88_jump
		xor    %ecx,%ecx
		mov    %ecx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		jmp    _082bbb_jump

	_082b88_jump:
		test   $0x000040,%ch
		je     _082b9c_jump
		xor    %edx,%edx
		mov    $0x3ff00000,%ebx
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		jmp    _082bbb_jump

	_082b9c_jump:
		test   $0x000080,%ch
		je     _082bb0_jump
		mov    _0c15b0_data,%eax
		mov    %eax,-0x000010(%ebp)
		mov    _0c15b4_data,%eax
		jmp    _082bb8_jump

	_082bb0_jump:
		mov    (%ebx),%eax
		mov    %eax,-0x000010(%ebp)
		mov    0x000004(%ebx),%eax

	_082bb8_jump:
		mov    %eax,-0x00000c(%ebp)

	_082bbb_jump:
		lea    -0x000028(%ebp),%eax
		call   _086390_func
		lea    -0x000008(%ebp),%esp
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_082bca_func:
		push   %ebx
		sub    $0x00000c,%esp
		mov    %esp,%ebx
		call   _082cb5_func
		mov    %esp,%eax
		call   _082be9_func
		mov    %esp,%eax
		call   _082d35_func
		add    $0x00000c,%esp
		pop    %ebx
		ret    



_082be8_func:
		ret    



_082be9_func:
		push   %edi
		push   %esi
		push   %edx
		push   %ecx
		push   %ebx
		mov    0x000008(%eax),%cx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		or     %ebx,%ebx
		jne    _082c2f_jump
		or     %edx,%edx
		jne    _082c24_jump
		add    %cx,%cx
		je     _082caf_jump

	_082c08_jump:
		movw   $0x00ffff,0x000008(%eax)
		movl   $0x000000,0x000004(%eax)
		movl   $0x000000,(%eax)

	_082c1b_jump:
		orb    $0x0000c0,0x000007(%eax)
		jmp    _082caf_jump

	_082c24_jump:
		cmp    $0x007fff,%cx
		je     _082caf_jump

	_082c2f_jump:
		mov    %ecx,%edx
		and    $0x00007f,%dh
		cmp    $0x007fff,%dx
		je     _082c1b_jump
		add    %cx,%cx
		jb     _082c1b_jump
		shr    %cx
		je     _082c4c_jump
		mov    0x000004(%eax),%edx
		add    %edx,%edx
		jae    _082c08_jump

	_082c4c_jump:
		mov    0x000004(%eax),%edx
		sub    %edi,%edi
		push   %eax
		sub    $0x003fff,%cx
		sar    %cx
		jb     _082c62_jump
		shr    %edx
		rcr    %ebx
		rcr    %edi

	_082c62_jump:
		add    $0x003fff,%cx
		mov    %cx,0x000008(%eax)
		mov    %edx,%ecx
		mov    %ebx,%eax
		mov    %edx,%esi
		stc    
		rcr    %esi
		inc    %edx
		je     _082c95_jump
		dec    %edx

	_082c78_jump:
		div    %esi
		dec    %esi
		cmp    %eax,%esi
		jbe    _082c8a_jump
		inc    %esi
		add    %eax,%esi
		rcr    %esi
		mov    %ecx,%edx
		mov    %ebx,%eax
		jmp    _082c78_jump

	_082c8a_jump:
		inc    %esi
		mov    %eax,%ecx
		mov    %edi,%eax
		div    %esi
		add    %ecx,%esi
		jmp    _082c9e_jump

	_082c95_jump:
		cmp    %esi,%eax
		je     _082ca7_jump
		xchg   %eax,%edx
		mov    %edi,%eax
		div    %esi

	_082c9e_jump:
		sub    %edx,%edx
		stc    
		rcr    %esi
		rcr    %eax
		adc    %edx,%eax

	_082ca7_jump:
		adc    %esi,%edx
		pop    %esi
		mov    %eax,(%esi)
		mov    %edx,0x000004(%esi)

	_082caf_jump:
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %esi
		pop    %edi
		ret    



_082cb5_func:
		push   %ecx
		mov    %edx,%ecx
		shld   $0x00000b,%eax,%edx
		shl    $0x00000b,%eax
		sar    $0x000014,%ecx
		and    $0x0007ff,%cx
		je     _082d00_jump
		cmp    $0x0007ff,%cx
		je     _082cd7_jump
		add    $0x003c00,%cx
		jmp    _082cf8_jump

	_082cd7_jump:
		mov    $0x007fff,%cx
		test   $0x7fffffff,%edx
		jne    _082ce5_jump
		or     %eax,%eax

	_082ce5_jump:
		je     _082cf8_jump
		push   %eax
		mov    $0x000001,%al
		mov    $0x000081,%ah
		call   _082be8_func
		pop    %eax
		or     $0x40000000,%edx

	_082cf8_jump:
		or     $0x80000000,%edx
		jmp    _082d25_jump

	_082d00_jump:
		or     %edx,%edx
		jne    _082d0c_jump
		or     %eax,%eax
		jne    _082d0c_jump
		sub    %ecx,%ecx
		jmp    _082d25_jump

	_082d0c_jump:
		mov    $0x003c01,%cx
		or     %edx,%edx
		jne    _082d19_jump
		xchg   %eax,%edx
		sub    $0x000020,%cx

	_082d19_jump:
		or     %edx,%edx
		js     _082d25_jump
		add    %eax,%eax
		adc    %edx,%edx
		dec    %cx
		jmp    _082d19_jump

	_082d25_jump:
		mov    %eax,(%ebx)
		mov    %edx,0x000004(%ebx)
		add    %ecx,%ecx
		rcr    %cx
		mov    %cx,0x000008(%ebx)
		pop    %ecx
		ret    



_082d35_func:
		push   %ecx
		push   %ebx
		push   %esi
		mov    0x000008(%eax),%cx
		mov    0x000004(%eax),%edx
		mov    (%eax),%eax
		mov    $0xfffff800,%esi
		mov    %eax,%ebx
		shl    $0x000016,%ebx
		jae    _082d62_jump
		jne    _082d51_jump
		add    %esi,%esi

	_082d51_jump:
		add    $0x000800,%eax
		adc    $0x000000,%edx
		jae    _082d62_jump
		mov    $0x80000000,%edx
		inc    %cx

	_082d62_jump:
		and    %esi,%eax
		mov    %ecx,%ebx
		and    $0x007fff,%cx
		add    $0x00c400,%cx
		cmp    $0x0007ff,%cx
		jae    _082d98_jump
		or     %cx,%cx
		jne    _082d87_jump
		shrd   $0x00000c,%edx,%eax
		add    %edx,%edx
		shr    $0x00000c,%edx
		jmp    _082d91_jump

	_082d87_jump:
		shrd   $0x00000b,%edx,%eax
		add    %edx,%edx
		shrd   $0x00000b,%ecx,%edx

	_082d91_jump:
		add    %bx,%bx
		rcr    %edx
		jmp    _082df8_jump

	_082d98_jump:
		cmp    $0x00c400,%cx
		jb     _082dd2_jump
		cmp    $0x00ffcc,%cx
		jl     _082dcc_jump
		sub    $0x00000c,%cx
		neg    %cx
		cmp    $0x000020,%cl
		jb     _082dba_jump
		sub    $0x000020,%cl
		mov    %eax,%esi
		mov    %edx,%eax
		sub    %edx,%edx

	_082dba_jump:
		shrd   %cl,%eax,%esi
		shrd   %cl,%edx,%eax
		shr    %cl,%edx
		add    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		jmp    _082dd0_jump

	_082dcc_jump:
		sub    %eax,%eax
		sub    %edx,%edx

	_082dd0_jump:
		jmp    _082df8_jump

	_082dd2_jump:
		shrd   $0x00000b,%edx,%eax
		add    %edx,%edx
		shr    $0x00000b,%edx
		add    %bx,%bx
		rcr    %edx
		or     $0x7ff00000,%edx
		cmp    $0x0043ff,%cx
		je     _082df8_jump
		push   %eax
		mov    $0x000008,%al
		mov    $0x000084,%ah
		call   _082be8_func
		pop    %eax

	_082df8_jump:
		pop    %esi
		pop    %ebx
		pop    %ecx
		ret    



_082dfc_func:
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    %ecx,(%esp)
		mov    %edx,0x000004(%esp)
		xor    %eax,%eax
		test   %edx,%edx
		je     _082e41_jump
		mov    0x000006(%esp),%eax
		and    $0x007ff0,%eax
		mov    0x000006(%esp),%edx
		and    $0x00ffff,%eax
		and    $0x00800f,%edx
		sar    $0x000004,%eax
		mov    %edx,%ecx
		mov    %dx,0x000006(%esp)
		or     $0x003fe0,%ecx
		sub    $0x0003fe,%eax
		mov    %cx,0x000006(%esp)

	_082e41_jump:
		mov    0x000004(%esp),%edx
		mov    %eax,(%ebx)
		mov    (%esp),%eax
		add    $0x000008,%esp
		pop    %ecx
		ret    



_082e50_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %ecx
		push   %ebx
		push   %eax
		mov    0x000008(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		mov    0x000010(%ebp),%ebx
		mov    0x000014(%ebp),%ecx
		or     %ecx,%ecx
		jne    _082e7c_jump
		sub    %eax,%eax
		mov    0x000018(%ebp),%ebx
		mov    %eax,(%ebx)
		mov    0x00001c(%ebp),%ebx
		mov    %eax,(%ebx)
		mov    %eax,0x000004(%ebx)
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %ebp
		ret    

	_082e7c_jump:
		push   %esi
		push   %edi
		push   %edx
		push   %ecx
		mov    %edx,%esi
		mov    %ecx,%edi
		and    $0x7ff00000,%esi
		and    $0x7ff00000,%edi
		and    $0x0fffff,%edx
		and    $0x0fffff,%ecx
		or     $0x100000,%edx
		or     $0x100000,%ecx
		sub    %edi,%esi
		jl     _082f14_jump
		sub    %edi,%edi

	_082eae_jump:
		cmp    %edx,%ecx
		jne    _082eb6_jump
		cmp    %eax,%ebx
		je     _082eb8_jump

	_082eb6_jump:
		jae    _082ebd_jump

	_082eb8_jump:
		sub    %ebx,%eax
		sbb    %ecx,%edx
		stc    

	_082ebd_jump:
		adc    %edi,%edi
		sub    $0x100000,%esi
		jl     _082ede_jump
		add    %eax,%eax
		adc    %edx,%edx
		cmp    $0x200000,%edx
		jae    _082eb8_jump
		cmp    $0x100000,%edx
		jae    _082eae_jump
		cmc    
		jmp    _082ebd_jump

	_082ede_jump:
		sub    %esi,%esi
		or     %eax,%eax
		jne    _082eea_jump
		or     %edx,%edx
		jne    _082eea_jump
		jmp    _082f12_jump

	_082eea_jump:
		test   $0x200000,%edx
		jne    _082efe_jump
		adc    %eax,%eax
		adc    %edx,%edx
		sub    $0x100000,%esi
		jmp    _082eea_jump

	_082efe_jump:
		shr    %edx
		rcr    %eax
		add    $0x100000,%esi
		pop    %ecx
		push   %ecx
		and    $0x7ff00000,%ecx
		add    %ecx,%esi

	_082f12_jump:
		jmp    _082f18_jump

	_082f14_jump:
		add    %edi,%esi
		sub    %edi,%edi

	_082f18_jump:
		and    $0x0fffff,%edx
		add    %esi,%edx
		pop    %ecx
		pop    %esi
		and    $0x80000000,%esi
		or     %edx,%edx
		je     _082f2e_jump
		or     %esi,%edx

	_082f2e_jump:
		xor    %ecx,%esi
		jns    _082f34_jump
		neg    %edi

	_082f34_jump:
		mov    0x000018(%ebp),%esi
		mov    %edi,(%esi)
		mov    0x00001c(%ebp),%esi
		mov    %eax,(%esi)
		mov    %edx,0x000004(%esi)
		pop    %edi
		pop    %esi
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %ebp
		ret    



_082f49_func:
		push   %esi
		push   %edi
		push   %ebp
		push   %eax
		mov    %edx,%ebp
		mov    %ebx,%esi
		mov    %ecx,%edi
		lea    0x000008(%ebx),%esi
		mov    (%ebx),%eax
		mov    0x000004(%ebx),%edx

	_082f5b_jump:
		mov    (%esp),%ebx
		mov    %ebp,%ecx
		call   _07bb4f_func
		mov    %esi,%ecx
		mov    (%ecx),%ebx
		mov    0x000004(%ecx),%ecx
		add    $0x000008,%esi
		call   _07b998_func
		dec    %edi
		jne    _082f5b_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_082f7e_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07bb4f_func
		mov    -0x00000c(%ebp),%ecx
		mov    -0x000010(%ebp),%ebx
		call   _082f49_func
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07bb4f_func
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082fb4_func:
		mov    $0x00000d,%eax



_082fb9_func:
		push   %edx
		mov    %eax,%edx
		call   _083a70_func
		mov    %edx,(%eax)
		pop    %edx
		ret    



_082fc5_func:
		mov    $0x00000e,%eax
		jmp    _082fb9_func



_082fdc_func:
		push   %edx
		mov    %eax,%edx
		call   _083a76_func
		mov    %edx,(%eax)
		pop    %edx
		ret    

.data

_082fe8_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f"

.text



_082ff2_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		mov    $0x000002,%al
		jmp    _083002_jump



_082ffb_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		mov    $0x000000,%al

	_083002_jump:
		mov    %al,%dl
		fldt   %cs:_082fe8_data
		fldl   -0x000008(%ebp)
		ftst   
		fnstsw %ax
		and    $0x004100,%ax
		cmp    $0x000100,%ax
		jne    _083025_jump
		fchs   
		cmp    $0x000000,%dl
		jne    _083025_jump
		mov    $0x000004,%dl

	_083025_jump:
		fprem  
		fnstsw %ax
		test   $0x000400,%ax
		jne    _083025_jump
		mov    $0x000000,%al
		test   $0x000002,%ah
		je     _08303c_jump
		or     $0x000001,%al
		fsub   %st(1),%st
		fchs   

	_08303c_jump:
		test   $0x000040,%ah
		je     _083043_jump
		or     $0x000002,%al

	_083043_jump:
		test   $0x000001,%ah
		je     _08304a_jump
		add    $0x000004,%al

	_08304a_jump:
		fstp   %st(1)
		fptan  
		fld    %st(0)
		fmul   %st(0),%st
		fld    %st(2)
		fmul   %st(0),%st
		faddp  %st,%st(1)
		fsqrt  
		add    %dl,%al
		and    $0x000007,%al
		cmp    $0x000004,%al
		jl     _083064_jump
		fchs   

	_083064_jump:
		and    $0x000003,%al
		cmp    $0x000000,%al
		je     _08306c_jump
		cmp    $0x000003,%al

	_08306c_jump:
		jne    _083089_jump
		fstp   %st(1)
		testb  $0x000001,_0bd884_data
		jne    _08307d_jump
		fdivrp %st,%st(1)
		jmp    _083087_jump

	_08307d_jump:
		mov    $0x00000d,%eax
		call   _083277_func

	_083087_jump:
		jmp    _0830a2_jump

	_083089_jump:
		testb  $0x000001,_0bd884_data
		jne    _083096_jump
		fdivrp %st,%st(1)
		jmp    _0830a0_jump

	_083096_jump:
		mov    $0x00000d,%eax
		call   _083277_func

	_0830a0_jump:
		fstp   %st(1)

	_0830a2_jump:
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    

.data

_0830aa_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xff\x3f"

_0830b4_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f\x55\x89\xe5\x52\x50\xd9"
		.ascii  "\xeb\xb2\x00\xb6\x00\xdd\x45\xf8"
		.ascii  "\xd9\xe4\xdf\xe0\x9e\x73\x04\xd9"
		.ascii  "\xe0\xf6\xd6\xd9\xf8\xdf\xe0\x9e"
		.ascii  "\x7a\xf9\x2e\xdb\x2d"
		.long   _0830aa_data
		.ascii  "\xdd\xda\xd8\xd1\xdf\xe0\x9e\x76"
		.ascii  "\x06\xd8\xe1\xf6\xd2\xf6\xd6\x2e"
		.ascii  "\xdb\x2d"
		.long   _0830b4_func
		.ascii  "\xd8\xd9\xdf\xe0\x9e\x73\x04\xd8"
		.ascii  "\xe9\xf6\xd2\xdd\xd9\xf6\x05"
		.long   _0bd884_data
		.ascii  "\x01\x75\x04\xd9\xf2\xeb\x05"

.text



_083160_func:
		fldt   0x000010(%esp)
		fldt   0x000004(%esp)

	_083168_jump:
		mov    0x000008(%esp),%eax
		add    %eax,%eax
		jae    _0831fa_jump
		xor    $0xe000000,%eax
		test   $0xe000000,%eax
		je     _083183_jump
		fdivrp %st,%st(1)
		ret    

	_083183_jump:
		shr    $0x00001c,%eax
		cmpb   $0x000000,_0c1728_data(%eax)
		jne    _083192_jump
		fdivrp %st,%st(1)
		ret    

	_083192_jump:
		mov    0x00000c(%esp),%eax
		and    $0x007fff,%eax
		je     _083204_jump
		cmp    $0x007fff,%eax
		je     _083204_jump
		fnstcw 0x00001c(%esp)
		mov    0x00001c(%esp),%eax
		or     $0x00033f,%eax
		and    $0x00f3ff,%eax
		mov    %eax,0x000020(%esp)
		fldcw  0x000020(%esp)
		mov    0x000018(%esp),%eax
		and    $0x007fff,%eax
		cmp    $0x000001,%eax
		je     _0831e3_jump
		fmuls  _0c1738_data
		fxch   %st(1)
		fmuls  _0c1738_data
		fxch   %st(1)
		fldcw  0x00001c(%esp)
		fdivrp %st,%st(1)
		ret    

	_0831e3_jump:
		fmuls  _0c173c_data
		fxch   %st(1)
		fmuls  _0c173c_data
		fxch   %st(1)
		fldcw  0x00001c(%esp)
		fdivrp %st,%st(1)
		ret    

	_0831fa_jump:
		mov    0x000004(%esp),%eax
		or     0x000008(%esp),%eax
		jne    _083207_jump

	_083204_jump:
		fdivrp %st,%st(1)
		ret    

	_083207_jump:
		mov    0x00000c(%esp),%eax
		and    $0x007fff,%eax
		jne    _083204_jump
		fnstcw 0x00001c(%esp)
		mov    0x00001c(%esp),%eax
		or     $0x00033f,%eax
		and    $0x00f3ff,%eax
		mov    %eax,0x000020(%esp)
		fldcw  0x000020(%esp)
		mov    0x000018(%esp),%eax
		and    $0x007fff,%eax
		je     _083248_jump
		cmp    $0x007fff,%eax
		je     _083270_jump
		mov    0x000014(%esp),%eax
		add    %eax,%eax
		jae    _083270_jump
		jmp    _083250_jump

	_083248_jump:
		mov    0x000014(%esp),%eax
		add    %eax,%eax
		jb     _083270_jump

	_083250_jump:
		fxch   %st(1)
		fstp   %st(0)
		fld    %st(0)
		fmuls  _0c1740_data
		fstpt  0x000004(%esp)
		fldt   0x000010(%esp)
		fxch   %st(1)
		fldcw  0x00001c(%esp)
		jmp    _083168_jump

	_083270_jump:
		fldcw  0x00001c(%esp)
		fdivrp %st,%st(1)
		ret    



_083277_func:
		sub    $0x00002c,%esp
		jmp    *_0c1744_data(,%eax,4)



_083281_func:
		fdiv   %st(0),%st
		add    $0x00002c,%esp
		ret    



_083287_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08328c_jump:
		fdivr  %st(0),%st
		add    $0x00002c,%esp
		ret    



_083292_func:
		add    $0x00002c,%esp
		int    $0x000006

	_083297_jump:
		fdiv   %st(0),%st
		add    $0x00002c,%esp
		ret    



_08329d_func:
		fdivrp %st,%st(0)
		add    $0x00002c,%esp
		ret    



_0832a3_func:
		fdivr  %st(0),%st
		add    $0x00002c,%esp
		ret    



_0832a9_func:
		fdivp  %st,%st(0)
		add    $0x00002c,%esp
		ret    



_0832af_func:
		fstpt  0x00000c(%esp)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083160_func
		fldt   0x000020(%esp)
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_0832cb_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0832d0_jump:
		fstpt  (%esp)
		fstpt  0x00000c(%esp)
		call   _083160_func
		fldt   0x00000c(%esp)
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_0832e6_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0832eb_jump:
		fxch   %st(1)
		fstpt  0x00000c(%esp)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083160_func
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_083307_func:
		fstpt  (%esp)
		fstpt  0x00000c(%esp)
		call   _083160_func
		add    $0x00002c,%esp
		ret    



_083317_func:
		fstpt  0x00000c(%esp)
		fstpt  (%esp)
		call   _083160_func
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_08332b_func:
		fstpt  0x00000c(%esp)
		fstpt  (%esp)
		call   _083160_func
		add    $0x00002c,%esp
		ret    



_08333b_func:
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083160_func
		fxch   %st(1)
		fldt   0x000020(%esp)
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_08335b_func:
		add    $0x00002c,%esp
		int    $0x000006

	_083360_jump:
		fstpt  (%esp)
		fxch   %st(1)
		fstpt  0x00000c(%esp)
		call   _083160_func
		fxch   %st(1)
		fldt   0x00000c(%esp)
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_08337a_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08337f_jump:
		fxch   %st(2)
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083160_func
		fxch   %st(1)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_08339f_func:
		fstpt  (%esp)
		fxch   %st(1)
		fstpt  0x00000c(%esp)
		call   _083160_func
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_0833b3_func:
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fstpt  (%esp)
		call   _083160_func
		fxch   %st(1)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_0833cb_func:
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fstpt  (%esp)
		call   _083160_func
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_0833df_func:
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083160_func
		fxch   %st(2)
		fldt   0x000020(%esp)
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_0833ff_func:
		add    $0x00002c,%esp
		int    $0x000006

	_083404_jump:
		fstpt  (%esp)
		fxch   %st(2)
		fstpt  0x00000c(%esp)
		call   _083160_func
		fxch   %st(2)
		fldt   0x00000c(%esp)
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_08341e_func:
		add    $0x00002c,%esp
		int    $0x000006

	_083423_jump:
		fxch   %st(3)
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083160_func
		fxch   %st(2)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_083443_func:
		fstpt  (%esp)
		fxch   %st(2)
		fstpt  0x00000c(%esp)
		call   _083160_func
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_083457_func:
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fstpt  (%esp)
		call   _083160_func
		fxch   %st(2)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_08346f_func:
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fstpt  (%esp)
		call   _083160_func
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_083483_func:
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083160_func
		fxch   %st(3)
		fldt   0x000020(%esp)
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_0834a3_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0834a8_jump:
		fstpt  (%esp)
		fxch   %st(3)
		fstpt  0x00000c(%esp)
		call   _083160_func
		fxch   %st(3)
		fldt   0x00000c(%esp)
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_0834c2_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0834c7_jump:
		fxch   %st(4)
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083160_func
		fxch   %st(3)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_0834e7_func:
		fstpt  (%esp)
		fxch   %st(3)
		fstpt  0x00000c(%esp)
		call   _083160_func
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_0834fb_func:
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fstpt  (%esp)
		call   _083160_func
		fxch   %st(3)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_083513_func:
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fstpt  (%esp)
		call   _083160_func
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_083527_func:
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083160_func
		fxch   %st(4)
		fldt   0x000020(%esp)
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_083547_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08354c_jump:
		fstpt  (%esp)
		fxch   %st(4)
		fstpt  0x00000c(%esp)
		call   _083160_func
		fxch   %st(4)
		fldt   0x00000c(%esp)
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_083566_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08356b_jump:
		fxch   %st(5)
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083160_func
		fxch   %st(4)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_08358b_func:
		fstpt  (%esp)
		fxch   %st(4)
		fstpt  0x00000c(%esp)
		call   _083160_func
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_08359f_func:
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fstpt  (%esp)
		call   _083160_func
		fxch   %st(4)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_0835b7_func:
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fstpt  (%esp)
		call   _083160_func
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_0835cb_func:
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083160_func
		fxch   %st(5)
		fldt   0x000020(%esp)
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_0835eb_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0835f0_jump:
		fstpt  (%esp)
		fxch   %st(5)
		fstpt  0x00000c(%esp)
		call   _083160_func
		fxch   %st(5)
		fldt   0x00000c(%esp)
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_08360a_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08360f_jump:
		fxch   %st(6)
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083160_func
		fxch   %st(5)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_08362f_func:
		fstpt  (%esp)
		fxch   %st(5)
		fstpt  0x00000c(%esp)
		call   _083160_func
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_083643_func:
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fstpt  (%esp)
		call   _083160_func
		fxch   %st(5)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_08365b_func:
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fstpt  (%esp)
		call   _083160_func
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_08366f_func:
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083160_func
		fxch   %st(6)
		fldt   0x000020(%esp)
		fxch   %st(7)
		add    $0x00002c,%esp
		ret    



_08368f_func:
		add    $0x00002c,%esp
		int    $0x000006

	_083694_jump:
		fstpt  (%esp)
		fxch   %st(6)
		fstpt  0x00000c(%esp)
		call   _083160_func
		fxch   %st(6)
		fldt   0x00000c(%esp)
		fxch   %st(7)
		add    $0x00002c,%esp
		ret    



_0836ae_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0836b3_jump:
		fxch   %st(7)
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083160_func
		fxch   %st(6)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_0836d3_func:
		fstpt  (%esp)
		fxch   %st(6)
		fstpt  0x00000c(%esp)
		call   _083160_func
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_0836e7_func:
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fstpt  (%esp)
		call   _083160_func
		fxch   %st(6)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_0836ff_func:
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fstpt  (%esp)
		call   _083160_func
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_083713_func:
		sub    $0x00002c,%esp
		fstpt  (%esp)
		fstpt  0x00000c(%esp)
		call   _083160_func
		add    $0x00002c,%esp
		ret    



_083798_func:
		push   %eax
		mov    0x00000c(%esp),%eax
		and    $0x7ff00000,%eax
		cmp    $0x7ff00000,%eax
		je     _0837dc_jump
		fnstsw %ax
		and    $0x003800,%eax
		je     _0837bf_jump
		fldl   0x000008(%esp)
		call   _083713_func
		pop    %eax
		ret    $0x000008

	_0837bf_jump:
		fxch   %st(1)
		sub    $0x00000c,%esp
		fstpt  (%esp)
		fldl   0x000014(%esp)
		call   _083713_func
		fldt   (%esp)
		fxch   %st(1)
		add    $0x00000c,%esp
		pop    %eax
		ret    $0x000008

	_0837dc_jump:
		fdivl  0x000008(%esp)
		pop    %eax
		ret    $0x000008



_08387c_func:
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _083cbd_func
		cmpl   $0x000000,0x000014(%edx)
		jne    _0838b1_jump
		mov    0x00000d(%edx),%ah
		test   $0x000002,%ah
		je     _08389c_jump
		movl   $0x000086,0x000014(%edx)
		jmp    _0838b1_jump

	_08389c_jump:
		test   $0x000004,%ah
		je     _0838aa_jump
		movl   $0x000001,0x000014(%edx)
		jmp    _0838b1_jump

	_0838aa_jump:
		movl   $0x001000,0x000014(%edx)

	_0838b1_jump:
		mov    0x000014(%edx),%eax
		call   _08191a_func
		mov    %eax,0x000008(%edx)
		test   %eax,%eax
		jne    _0838e0_jump
		mov    0x00000d(%edx),%cl
		movl   $0x000001,0x000014(%edx)
		and    $0x0000f8,%cl
		lea    0x000018(%edx),%eax
		mov    %cl,0x00000d(%edx)
		mov    %cl,%ch
		mov    %eax,0x000008(%edx)
		or     $0x000004,%ch
		mov    %ch,0x00000d(%edx)
		jmp    _0838e4_jump

	_0838e0_jump:
		orb    $0x000008,0x00000c(%edx)

	_0838e4_jump:
		mov    0x000008(%edx),%eax
		movl   $0x000000,0x000004(%edx)
		mov    %eax,(%edx)
		pop    %edx
		pop    %ecx
		ret    



_0838f3_func:
		push   %ecx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _083910_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _081bf4_func

	_083910_jump:
		pop    %ecx
		ret    



_083912_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    0x00000d(%eax),%ah
		xor    %ebp,%ebp
		test   $0x000010,%ah
		je     _08399e_jump
		mov    0x00000d(%ecx),%bh
		and    $0x0000ef,%bh
		mov    0x00000c(%ecx),%al
		mov    %bh,0x00000d(%ecx)
		test   $0x000002,%al
		je     _0839d6_jump
		mov    0x000008(%ecx),%ebx
		test   %ebx,%ebx
		je     _0839d6_jump
		mov    %ebx,%edi
		mov    0x000004(%ecx),%esi

	_08394c_jump:
		test   %esi,%esi
		je     _0839d6_jump
		test   %ebp,%ebp
		jne    _0839d6_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    0x000010(%ecx),%eax
		call   _0839fc_func
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		jne    _08397c_jump
		mov    0x00000c(%ecx),%bl
		or     $0x000020,%bl
		mov    %eax,%ebp
		mov    %bl,0x00000c(%ecx)
		jmp    _083998_jump

	_08397c_jump:
		test   %eax,%eax
		jne    _083998_jump
		mov    $0x00000c,%eax
		call   _082fb9_func
		mov    0x00000c(%ecx),%ah
		or     $0x000020,%ah
		mov    $0xffffffff,%ebp
		mov    %ah,0x00000c(%ecx)

	_083998_jump:
		add    %edx,%edi
		sub    %edx,%esi
		jmp    _08394c_jump

	_08399e_jump:
		cmpl   $0x000000,0x000008(%ecx)
		je     _0839d6_jump
		andb   $0x0000ef,0x00000c(%ecx)
		testb  $0x000020,0x00000d(%ecx)
		jne    _0839d6_jump
		mov    0x000004(%ecx),%eax
		test   %eax,%eax
		je     _0839c6_jump
		mov    %eax,%edx
		mov    $0x000001,%ebx
		neg    %edx
		mov    0x000010(%ecx),%eax
		call   _07d278_func

	_0839c6_jump:
		cmp    $0xffffffff,%eax
		jne    _0839d6_jump
		mov    0x00000c(%ecx),%bl
		or     $0x000020,%bl
		mov    %eax,%ebp
		mov    %bl,0x00000c(%ecx)

	_0839d6_jump:
		mov    0x000008(%ecx),%eax
		movl   $0x000000,0x000004(%ecx)
		mov    %eax,(%ecx)
		mov    %ebp,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0839eb_func:
		push   %ebx
		push   %edx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _07d278_func
		pop    %edx
		pop    %ebx
		ret    



_0839fc_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,%edi
		call   _083aff_func
		test   $0x000080,%al
		je     _083a41_jump
		mov    $0x000002,%al
		mov    %esi,%ebx
		xor    %edx,%edx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		rcl    %dx
		ror    %dx
		shl    $0x000010,%edx
		mov    %ax,%dx
		mov    %edx,(%esp)
		test   %edx,%edx
		jge    _083a41_jump

	_083a34_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		call   _081bf4_func
		jmp    _083a68_jump

	_083a41_jump:
		mov    %edi,%ecx
		mov    %ebp,%edx
		mov    %esi,%ebx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		mov    %eax,%edx
		test   %eax,%eax
		jl     _083a34_jump
		cmp    %edi,%eax
		je     _083a66_jump
		mov    $0x00000c,%eax
		call   _082fb9_func

	_083a66_jump:
		mov    %edx,%eax

	_083a68_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_083a70_func:
		mov    $_0e5f38_data,%eax
		ret    



_083a76_func:
		mov    $_0e5f3c_data,%eax
		ret    



_083a81_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0e5f40_data,%edx
		xor    %ebx,%ebx
		jmp    _083aa6_jump

	_083a90_jump:
		mov    0x000004(%edx),%eax
		test   %ecx,0x00000c(%eax)
		je     _083aa4_jump
		inc    %ebx
		testb  $0x000010,0x00000d(%eax)
		je     _083aa4_jump
		call   _083912_func

	_083aa4_jump:
		mov    (%edx),%edx

	_083aa6_jump:
		test   %edx,%edx
		jne    _083a90_jump
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083ab0_func:
		push   %edx
		mov    %eax,%edx
		mov    %cs,%eax
		mov    %ax,0x000002(%edx)
		mov    %ds,%eax
		mov    %ax,0x000006(%edx)
		mov    %es,%eax
		mov    %ax,(%edx)
		mov    %ss,%eax
		mov    %ax,0x000004(%edx)
		mov    %fs,%eax
		mov    %ax,0x000008(%edx)
		mov    %gs,%eax
		mov    %ax,0x00000a(%edx)
		pop    %edx
		ret    



_083ad8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $0x000000,%al
		mov    $0x000044,%ah
		int    $0x000021
		rcl    %edx
		ror    %edx
		xor    %dh,%dh
		xor    %eax,%eax
		and    $0x000080,%dl
		mov    %dx,%ax
		test   %eax,%eax
		setne  %al
		and    $0x0000ff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083aff_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmp    _0bd88c_data,%eax
		jb     _083b12_jump
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_083b12_jump:
		cmp    $0x000005,%eax
		jg     _083b48_jump
		mov    %eax,%ebx
		mov    _0bd8e0_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000001(%eax),%cl
		test   $0x000040,%cl
		jne    _083b48_jump
		mov    %cl,%ch
		or     $0x000040,%ch
		mov    %ch,0x000001(%eax)
		mov    %edx,%eax
		call   _083ad8_func
		test   %eax,%eax
		je     _083b48_jump
		mov    _0bd8e0_data,%eax
		orb    $0x000020,0x000001(%ebx,%eax,1)

	_083b48_jump:
		mov    _0bd8e0_data,%eax
		mov    (%eax,%edx,4),%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083b54_func:
		push   %ebx
		or     $0x000040,%dh
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    _0bd8e0_data,%eax
		shl    $0x000002,%edx
		mov    %ebx,(%edx,%eax,1)
		pop    %ebx
		ret    



_083b6a_func:
		jae    _083b7a_jump
		and    $0x00ffff,%eax
		push   %eax
		call   _081bf4_func
		pop    %eax
		jmp    _083b7c_jump

	_083b7a_jump:
		sub    %eax,%eax

	_083b7c_jump:
		ret    



_083b7d_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     _083b9f_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _083b54_func
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_083b9f_jump:
		mov    $0x000004,%eax
		call   _082fb9_func
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083bb2_func:
		cmp    $0x000041,%eax
		jl     _083bbf_jump
		cmp    $0x00005a,%eax
		jg     _083bbf_jump
		add    $0x000020,%eax

	_083bbf_jump:
		ret    



_083bc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e5f30_data,%esi
		test   %esi,%esi
		je     _083be8_jump
		mov    0x000004(%esi),%ecx
		mov    0x00000c(%ecx),%edi
		mov    (%esi),%eax
		and    $0x004003,%edi
		mov    %eax,_0e5f30_data
		or     $0x000003,%di
		jmp    _083c2f_jump

	_083be8_jump:
		mov    $_0bd5bc_data,%ecx
		jmp    _083c0f_jump

	_083bef_jump:
		testb  $0x000003,0x00000c(%ecx)
		jne    _083c0c_jump
		mov    $0x000008,%eax
		call   _08191a_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _083c54_jump
		mov    $0x000003,%edi
		jmp    _083c2f_jump

	_083c0c_jump:
		add    $0x00001a,%ecx

	_083c0f_jump:
		cmp    $_0bd7c4_data,%ecx
		jb     _083bef_jump
		mov    $0x000022,%eax
		mov    $0x004003,%edi
		call   _08191a_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _083c54_jump
		lea    0x000008(%eax),%ecx

	_083c2f_jump:
		mov    $0x00001a,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07c0b0_func
		mov    %edi,0x00000c(%ecx)
		mov    _0e5f40_data,%eax
		mov    %ecx,0x000004(%esi)
		mov    %esi,_0e5f40_data
		mov    %eax,(%esi)
		mov    %ecx,%eax
		jmp    _083c60_jump

	_083c54_jump:
		mov    $0x000005,%eax
		call   _082fb9_func
		xor    %eax,%eax

	_083c60_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083c66_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $_0e5f40_data,%edx

	_083c70_jump:
		mov    (%edx),%eax
		test   %eax,%eax
		je     _083c9b_jump
		mov    0x000004(%eax),%ecx
		cmp    %ecx,%ebx
		je     _083c81_jump
		mov    %eax,%edx
		jmp    _083c70_jump

	_083c81_jump:
		mov    0x00000c(%ecx),%cl
		or     $0x000003,%cl
		mov    %cl,0x00000c(%ebx)
		mov    (%eax),%ebx
		mov    %ebx,(%edx)
		mov    _0e5f30_data,%edx
		mov    %eax,_0e5f30_data
		mov    %edx,(%eax)

	_083c9b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_083c9f_jump:
		push   %edx

	_083ca0_jump:
		mov    _0e5f30_data,%edx
		test   %edx,%edx
		je     _083cbb_jump
		mov    %edx,%eax
		mov    (%edx),%edx
		call   _081a15_func
		mov    %edx,_0e5f30_data
		jmp    _083ca0_jump

	_083cbb_jump:
		pop    %edx
		ret    



_083cbd_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		testb  $0x000020,0x00000d(%eax)
		jne    _083cea_jump
		mov    0x000010(%edx),%eax
		call   _083ad8_func
		test   %eax,%eax
		je     _083cea_jump
		mov    0x00000d(%edx),%bl
		or     $0x000020,%bl
		mov    %bl,0x00000d(%edx)
		test   $0x000007,%bl
		jne    _083cea_jump
		mov    %bl,%cl
		or     $0x000002,%cl
		mov    %cl,0x00000d(%edx)

	_083cea_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083cee_func:
		mov    _0bd7f4_data,%eax
		ret    

	_083cf4_jump:
		ret    



_083cf5_func:
		push   %ds
		call   _07c0a4_func
		cmpw   $0x000001,_0bf832_data
		je     _083d50_jump
		nop
		nop
		nop
		nop
		movw   $0x000001,_0bf832_data
		mov    %esp,_0be822_data
		data16 mov %ss,_0be826_data
		lss    _0be81a_data,%esp
		pusha  
		push   %es
		push   %fs
		push   %gs
		push   %ds
		pop    %es
		mov    %esp,_0bf82a_data
		lcall  *_0be810_data
		pop    %gs
		pop    %fs
		pop    %es
		popa   
		lss    _0be822_data,%esp
		movw   $0x000000,_0bf832_data

	_083d50_jump:
		pop    %ds
		push   %ax
		mov    $0x000020,%ax
		out    %al,$0x000020
		pop    %ax
		iret   



_083d71_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bf834_data
		je     _083dac_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		mov    $0x000043,%dx
		mov    $0x000036,%al
		out    %al,(%dx)
		mov    $0x000040,%dx
		mov    0x000008(%ebp),%eax
		out    %al,(%dx)
		mov    %ah,%al
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_083dac_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_083db7_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		les    0x00000c(%ebp),%edi
		mov    %edi,_0be810_data
		data16 mov %es,_0be814_data
		data16 mov %ds,_0be818_data
		data16 mov %ds,_0be81e_data
		cmpl   $0x000000,_0bf834_data
		je     _083e6e_jump
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		cmpl   $0x000000,_0bf838_data
		je     _083e2d_jump
		nop
		nop
		nop
		nop
		mov    $0x000204,%ax
		mov    $0x000008,%bl
		int    $0x000031
		mov    %edx,_0be804_data
		mov    %cx,_0be808_data
		mov    $0x000205,%ax
		mov    $0x000008,%bl
		mov    $_083cf5_func,%edx
		mov    %cs,%cx
		int    $0x000031
		jmp    _083e54_jump

	_083e2d_jump:
		mov    $0x003508,%ax
		int    $0x000021
		mov    %ebx,_0be804_data
		data16 mov %es,_0be808_data
		push   %ds
		xor    %ax,%ax
		mov    %eax,%es
		mov    $0x002508,%ax
		mov    $_083cf5_func,%edx
		push   %cs
		pop    %ds
		int    $0x000021
		pop    %ds

	_083e54_jump:
		mov    $0x000043,%dx
		mov    $0x000036,%al
		out    %al,(%dx)
		mov    $0x000040,%dx
		mov    0x000008(%ebp),%eax
		out    %al,(%dx)
		mov    %ah,%al
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_083e6e_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_083e79_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bf834_data
		je     _083e9a_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)

	_083e9a_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_083ea5_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bf834_data
		je     _083ec6_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_083ec6_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_083ed1_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bf834_data
		je     _083f42_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		cmpl   $0x000000,_0bf838_data
		je     _083f19_jump
		nop
		nop
		nop
		nop
		mov    $0x000205,%ax
		mov    $0x000008,%bl
		mov    _0be808_data,%cx
		mov    _0be804_data,%edx
		int    $0x000031
		jmp    _083f30_jump

	_083f19_jump:
		push   %ds
		mov    $0x002508,%ax
		mov    _0be808_data,%cx
		mov    _0be804_data,%edx
		mov    %ecx,%ds
		int    $0x000021
		pop    %ds

	_083f30_jump:
		mov    $0x000040,%dx
		mov    $0x000000,%ax
		out    %al,(%dx)
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_083f42_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_083f4d_func:
		cmpl   $0x000000,_0bf834_data
		je     _083fa5_jump
		nop
		nop
		nop
		nop
		movw   $0x000000,_0bf832_data
		mov    _0bf82a_data,%esp
		pop    %gs
		pop    %fs
		pop    %es
		popa   
		lss    _0be822_data,%esp
		mov    %eax,_0bf82e_data
		pop    %eax
		mov    %ax,_0bf82a_data
		push   %eax
		push   %eax
		mov    _0be804_data,%eax
		mov    %eax,(%esp)
		mov    _0be808_data,%eax
		mov    %eax,0x000004(%esp)
		mov    _0bf82e_data,%eax
		push   %eax
		mov    _0bf82a_data,%ax
		mov    %eax,%ds
		pop    %eax
		lret   

	_083fa5_jump:
		ret    

	_083fa6_jump:
		ret    



_083fa7_func:
		push   %ecx
		push   %eax

	_083fa9_jump:
		mov    (%edx),%cl
		mov    %cl,(%eax)
		cmp    $0x000000,%cl
		je     _083fc3_jump
		mov    0x000001(%edx),%cl
		add    $0x000002,%edx
		mov    %cl,0x000001(%eax)
		add    $0x000002,%eax
		cmp    $0x000000,%cl
		jne    _083fa9_jump

	_083fc3_jump:
		pop    %eax
		pop    %ecx
		ret    



_083fc6_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    %eax,%edi
		push   %es
		push   %ds
		pop    %es
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_083fd9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _083ff1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _083fd9_jump

	_083ff1_jump:
		pop    %edi
		pop    %es
		mov    %edi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_083ffc_jump:
		ret    



_083ffd_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%cx
		mov    0x00000a(%ebp),%bx
		mov    0x00000c(%ebp),%di
		mov    0x00000e(%ebp),%si
		mov    $0x000600,%ax
		int    $0x000031
		mov    $0x000000,%eax
		jae    _08402f_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax

	_08402f_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08403a_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%cx
		mov    0x00000a(%ebp),%bx
		mov    0x00000c(%ebp),%di
		mov    0x00000e(%ebp),%si
		mov    $0x000601,%ax
		int    $0x000031
		mov    $0x000000,%eax
		jae    _08406c_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax

	_08406c_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084077_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		push   %eax
		mov    %ax,-0x000002(%ebp)
		push   %eax
		mov    %ax,%bx
		mov    $0x000008,%ax
		xor    %cx,%cx
		mov    0x000008(%ebp),%edx
		int    $0x000031
		pop    %eax
		mov    $0x000501,%ax
		xor    %ebx,%ebx
		mov    0x000008(%ebp),%ecx
		add    $0x000050,%cx
		int    $0x000031
		push   %ebx
		mov    0x00000c(%ebp),%ebx
		mov    %si,(%ebx)
		mov    %di,0x000002(%ebx)
		pop    %ebx
		pop    %eax
		push   %eax
		mov    0x000010(%ebp),%esi
		mov    %cx,(%esi)
		mov    %bx,0x000002(%esi)
		mov    %cx,%dx
		mov    %bx,%cx
		mov    %ax,%bx
		mov    $0x000007,%ax
		int    $0x000031
		movzwl -0x000002(%ebp),%ecx
		lar    %ecx,%ecx
		shr    $0x000008,%ecx
		or     $0x004000,%cx
		mov    -0x000002(%ebp),%bx
		mov    $0x000009,%ax
		int    $0x000031
		pop    %eax
		xor    %edx,%edx
		mov    %ax,%dx
		xor    %eax,%eax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084105_func:
		push   %eax
		mov    %ds,%ax
		mov    %eax,%gs
		pop    %eax
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000010(%ebp),%si
		mov    0x000012(%ebp),%di
		mov    $0x000502,%ax
		int    $0x000031
		mov    $0x000001,%ax
		mov    0x00000c(%ebp),%bx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08413b_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		push   %eax
		push   %eax
		push   %eax
		push   %eax
		mov    0x00000c(%ebp),%bx
		mov    $0x000006,%ax
		int    $0x000031
		pop    %ebx
		mov    $0x000007,%ax
		int    $0x000031
		xor    %ebx,%ebx
		mov    0x00000c(%ebp),%bx
		lsl    %bx,%edx
		mov    $0x000008,%ax
		pop    %ebx
		xor    %ecx,%ecx
		int    $0x000031
		mov    $0x000009,%ax
		pop    %ebx
		lar    %bx,%ecx
		shr    $0x000008,%ecx
		or     $0x004008,%cx
		int    $0x000031
		pop    %edx
		xor    %eax,%eax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084198_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%esi
		les    0x00000c(%ebp),%edi
		mov    $0x000020,%ecx

	_0841af_jump:
		mov    %edi,(%esi)
		data16 mov %es,0x000004(%esi)
		add    $0x00006c,%edi
		add    $0x000006,%esi
		loop   _0841af_jump
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0841c8_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		xor    %eax,%eax
		mov    $0x000100,%ax
		mov    0x000008(%ebp),%ebx
		add    $0x000100,%ebx
		int    $0x000031
		mov    0x00000c(%ebp),%esi
		shl    $0x000004,%eax
		mov    %eax,(%esi)
		mov    0x000010(%ebp),%esi
		mov    %dx,(%esi)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0841fe_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%es
		mov    %eax,%fs
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		xor    %eax,%eax
		mov    $0x000101,%ax
		mov    0x000008(%ebp),%edx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08425e_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000008,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		push   %ds
		push   %es
		les    0x000018(%ebp),%edi
		lds    0x000010(%ebp),%esi
		mov    %edx,%esi
		mov    $0x00006a,%ecx
		cld    
		rep movsb %ds:(%esi),%es:(%edi)
		les    0x000018(%ebp),%edi
		data16 mov %ds,%es:0x000044(%edi)
		data16 mov %ds,%es:0x00004c(%edi)
		data16 mov %ds,%es:0x000054(%edi)
		data16 mov %ds,%es:0x00005c(%edi)
		pop    %es
		pop    %ds
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0842ac_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000005,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0842cf_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0842f2_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		mov    %ax,_0bf930_data
		mov    %ch,%al
		cbtw   
		mov    %ax,_0bf938_data
		mov    %cl,%al
		cbtw   
		mov    %ax,_0bf934_data
		mov    %dx,_0bf93c_data
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084336_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %es
		mov    $0x000002,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		push   %ds
		les    0x000018(%ebp),%edi
		lds    0x000010(%ebp),%esi
		mov    %edx,%esi
		mov    $0x00006a,%ecx
		cld    
		rep movsb %ds:(%esi),%es:(%edi)
		les    0x000018(%ebp),%edi
		data16 mov %ds,%es:0x000044(%edi)
		data16 mov %ds,%es:0x00004c(%edi)
		data16 mov %ds,%es:0x000054(%edi)
		data16 mov %ds,%es:0x00005c(%edi)
		pop    %ds
		pop    %es
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0843b4_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0843d7_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x00000a,%eax
		mov    0x000020(%ebp),%ecx
		les    0x000018(%ebp),%edi
		mov    0x000024(%ebp),%edx
		mov    0x000028(%ebp),%ebx
		push   %ds
		pop    %gs
		lcall  *0x000008(%ebp)
		cli    
		mov    0x00002c(%ebp),%ebx
		mov    %edi,(%ebx)
		mov    %ecx,0x000008(%ebx)
		mov    %esi,0x000010(%ebx)
		mov    0x00000c(%ebp),%ax
		mov    %ax,0x000004(%ebx)
		mov    0x000014(%ebp),%ax
		mov    %ax,0x00000c(%ebx)
		mov    %ax,0x000014(%ebx)
		sti    
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08442a_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000000,%eax
		mov    0x000018(%ebp),%bx
		mov    0x00001c(%ebp),%cx
		mov    0x000020(%ebp),%dx
		mov    %dl,%ch
		mov    0x00002c(%ebp),%si
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08445f_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000004,%eax
		mov    0x00001c(%ebp),%ecx
		mov    0x000018(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084488_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000002,%eax
		mov    0x000018(%ebp),%ebx
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0844ae_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000003,%eax
		mov    $0x000008,%bx
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0844ff_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		cmp    $0x000003,%al
		jne    _084529_jump
		nop
		nop
		nop
		nop
		mov    $0x000081,%ah
		mov    $0x00000b,%al
		mov    0x000008(%ebp),%ebx
		xor    %dx,%dx
		int    $0x00004b
		mov    $0x000000,%ax

	_084529_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084534_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		cmp    $0x000003,%al
		jne    _08455e_jump
		nop
		nop
		nop
		nop
		mov    $0x000081,%ah
		mov    $0x00000c,%al
		mov    0x000008(%ebp),%ebx
		xor    %dx,%dx
		int    $0x00004b
		mov    $0x000000,%ax

	_08455e_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084569_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000004,%eax
		lcall  *0x000008(%ebp)
		mov    %esi,_0bf894_data
		mov    %edi,_0bf89c_data
		mov    0x000014(%ebp),%ax
		mov    %ax,_0bf898_data
		mov    %ax,_0bf8a0_data
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0845a8_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %ds
		push   %ds
		pop    %es
		mov    $_0bf844_data,%edi
		mov    0x000008(%ebp),%ebx
		lds    _0bf894_data,%esi
		mov    (%esi,%ebx,4),%esi
		cmp    $0xffffffff,%esi
		jne    _0845d9_jump
		nop
		nop
		nop
		nop
		xor    %eax,%eax
		pop    %ds
		jmp    _0845e7_jump

	_0845d9_jump:
		mov    $0x000050,%ecx
		cld    
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %ds
		mov    $_0bf844_data,%eax

	_0845e7_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0845f2_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		les    _0bf89c_data,%esi
		mov    0x000008(%ebp),%eax
		mov    %eax,%ebx
		shl    %eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		mov    0x00000c(%ebp),%eax
		mov    %eax,%es:(%esi,%ebx,1)
		data16 mov %ds,%es:0x000004(%esi,%ebx,1)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084628_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %esi
		push   %es
		mov    $0x00000b,%ax
		lfs    0x000020(%ebp),%edi
		lcall  *0x000018(%ebp)
		mov    %eax,%esi
		mov    %edx,%es
		mov    $0x00000c,%ax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %esi
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084688_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0846a5_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000100,%ax
		mov    0x000008(%ebp),%ebx
		int    $0x000031
		jae    _0846ca_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax
		jmp    _0846db_jump

	_0846ca_jump:
		mov    0x00000c(%ebp),%esi
		mov    %dx,(%esi)
		mov    0x000010(%ebp),%esi
		mov    %ax,(%esi)
		mov    $0x000000,%eax

	_0846db_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0846e6_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%fs
		mov    %eax,%es
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000101,%ax
		mov    0x000008(%ebp),%dx
		int    $0x000031
		mov    $0x000000,%ax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084714_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $_0bf8e0_data,%esi
		movl   $0x008107,0x00001c(%esi)
		movl   $0x000000,0x000014(%esi)
		mov    0x000008(%ebp),%ax
		mov    %ax,0x000022(%esi)
		movl   $0x000000,(%esi)
		mov    $0x000300,%ax
		mov    $0x00004b,%bl
		mov    $0x000000,%bh
		mov    $0x000000,%cx
		mov    $_0bf8e0_data,%edi
		push   %ds
		pop    %es
		int    $0x000031
		mov    $_0bf8e0_data,%esi
		andw   $0x000001,0x000020(%esi)
		jne    _084770_jump
		nop
		nop
		nop
		nop
		mov    $0x000000,%eax
		jmp    _084775_jump

	_084770_jump:
		mov    $0x000001,%eax

	_084775_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084780_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $_0bf8e0_data,%esi
		movl   $0x008108,0x00001c(%esi)
		movl   $0x000000,0x000014(%esi)
		mov    0x000008(%ebp),%ax
		mov    %ax,0x000022(%esi)
		movl   $0x000000,(%esi)
		mov    $0x000300,%ax
		mov    $0x00004b,%bl
		mov    $0x000000,%bh
		mov    $0x000000,%cx
		mov    $_0bf8e0_data,%edi
		push   %ds
		pop    %es
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0847cd_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000800,%ax
		mov    0x00000a(%ebp),%bx
		mov    0x000008(%ebp),%cx
		mov    $0x000000,%si
		mov    $0x004000,%di
		int    $0x000031
		mov    %cx,-0x000008(%ebp)
		mov    %bx,-0x000006(%ebp)
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		mov    %ax,-0x000004(%ebp)
		mov    $0x000007,%ax
		mov    -0x000004(%ebp),%bx
		mov    -0x000006(%ebp),%cx
		mov    -0x000008(%ebp),%dx
		int    $0x000031
		mov    $0x000008,%ax
		mov    -0x000004(%ebp),%bx
		mov    $0x00ffff,%cx
		mov    $0x00ffff,%dx
		int    $0x000031
		mov    $0x000009,%ax
		xor    %ecx,%ecx
		mov    %ds,%cx
		lar    %ecx,%ecx
		shr    $0x000008,%ecx
		mov    -0x000004(%ebp),%bx
		int    $0x000031
		mov    -0x000004(%ebp),%ax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08484d_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%fs
		mov    %eax,%es
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%ax
		mov    0x000008(%ebp),%bx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    

	_08487f_jump:
		ret    



_084880_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    _0bf950_data,%esi
		test   %esi,%esi
		je     _0848d8_jump
		test   %eax,%eax
		je     _0848d8_jump
		mov    %eax,%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    %ecx,%edi
		jmp    _0848d2_jump

	_0848ac_jump:
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _0865a6_func
		test   %eax,%eax
		jne    _0848cf_jump
		mov    (%ecx,%edi,1),%al
		and    $0x0000ff,%eax
		cmp    $0x00003d,%eax
		jne    _0848cf_jump
		lea    0x000001(%edi),%eax
		add    %ecx,%eax
		jmp    _0848da_jump

	_0848cf_jump:
		add    $0x000004,%esi

	_0848d2_jump:
		mov    (%esi),%ecx
		test   %ecx,%ecx
		jne    _0848ac_jump

	_0848d8_jump:
		xor    %eax,%eax

	_0848da_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0848e1_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084920_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084935_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08494a_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %cx,-0x00000c(%ebp)
		mov    %ebx,-0x000010(%ebp)
		imul   $0x000006,-0x000008(%ebp),%eax
		cmpl   $0x000000,_0bd910_data(%eax)
		jne    _084980_jump
		cmpw   $0x000000,_0bd914_data(%eax)
		jne    _084980_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _0849d3_jump

	_084980_jump:
		cmpl   $0x000000,-0x000010(%ebp)
		jne    _08498d_jump
		cmpw   $0x000000,-0x00000c(%ebp)
		je     _0849c3_jump

	_08498d_jump:
		movzwl -0x00000c(%ebp),%eax
		push   %eax
		pushl  -0x000010(%ebp)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd914_data(%eax),%edx
		push   %edx
		pushl  _0bd910_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd932_data(%eax),%edx
		push   %edx
		pushl  _0bd92e_data(%eax)
		call   _08425e_func
		add    $0x000018,%esp
		jmp    _0849cc_jump

	_0849c3_jump:
		movl   $0x000002,-0x000004(%ebp)
		jmp    _0849d3_jump

	_0849cc_jump:
		movl   $0x000000,-0x000004(%ebp)

	_0849d3_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_0849db_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0849f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084a05_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000048,%esp
		mov    %eax,-0x00002c(%ebp)
		mov    %edx,-0x000030(%ebp)
		mov    %cx,-0x000044(%ebp)
		mov    %ebx,-0x000048(%ebp)
		movl   $0x00002c,-0x00000c(%ebp)
		movl   $0x000030,-0x000010(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		cmpl   $0x000005,-0x000030(%ebp)
		jbe    _084a4b_jump
		movl   $0x00000a,-0x000028(%ebp)
		jmp    _084c1f_jump

	_084a4b_jump:
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bd9d8_data(%eax)
		je     _084a66_jump
		movl   $0x000009,-0x000028(%ebp)
		jmp    _084c1f_jump

	_084a66_jump:
		cmpl   $0x00e000,-0x00002c(%ebp)
		jb     _084a78_jump
		cmpl   $0x00e200,-0x00002c(%ebp)
		jbe    _084a84_jump

	_084a78_jump:
		movl   $0x000006,-0x000028(%ebp)
		jmp    _084c1f_jump

	_084a84_jump:
		mov    $_0be410_data,%edx
		mov    $_0be50f_data,%eax
		call   _083fa7_func
		mov    $_0c13d0_data,%edx
		mov    $_0be50f_data,%eax
		call   _083fc6_func
		push   $0x000200
		mov    $_0be50f_data,%eax
		push   %eax
		call   _07cfcf_func
		add    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		cmpl   $0xffffffff,-0x000004(%ebp)
		jne    _084aca_jump
		movl   $0x00000f,-0x000028(%ebp)
		jmp    _084c1f_jump

	_084aca_jump:
		mov    -0x00000c(%ebp),%ebx
		mov    $_0be79c_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _0811d8_func

	_084ada_jump:
		mov    -0x000018(%ebp),%eax
		cmp    _0be7bc_data,%eax
		ja     _084aeb_jump
		cmpl   $0x000000,-0x000014(%ebp)
		je     _084af0_jump

	_084aeb_jump:
		jmp    _084bee_jump

	_084af0_jump:
		mov    -0x000010(%ebp),%ebx
		mov    $_0be7c8_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _0811d8_func
		mov    _0be7ec_data,%eax
		mov    %eax,-0x000008(%ebp)
		mov    _0be7f0_data,%eax
		cmp    -0x00002c(%ebp),%eax
		jne    _084b1b_jump
		testb  $0x000080,_0be7f5_data
		jne    _084b20_jump

	_084b1b_jump:
		jmp    _084bd6_jump

	_084b20_jump:
		movl   $0x000001,-0x000014(%ebp)
		lea    -0x000024(%ebp),%eax
		push   %eax
		pushl  0x000018(%ebp)
		pushl  -0x000008(%ebp)
		call   _084077_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,-0x00003c(%ebp)
		mov    %ecx,-0x000040(%ebp)
		movzwl -0x00003c(%ebp),%eax
		push   %eax
		pushl  -0x000040(%ebp)
		call   _08413b_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,-0x000034(%ebp)
		mov    %ecx,-0x000038(%ebp)
		pushl  -0x000008(%ebp)
		pushl  -0x000024(%ebp)
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _084b7d_jump
		movl   $0x000005,-0x000028(%ebp)
		jmp    _084c1f_jump

	_084b7d_jump:
		lea    -0x000020(%ebp),%eax
		push   %eax
		mov    -0x000008(%ebp),%edx
		mov    -0x00003c(%ebp),%ebx
		mov    -0x000040(%ebp),%eax
		mov    -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _07d242_func
		mov    -0x000034(%ebp),%eax
		lgs    -0x000048(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000038(%ebp),%eax
		lgs    -0x000048(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000010(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000040(%ebp),%eax
		lgs    0x000010(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000008(%ebp),%al
		mov    0x00001c(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    0x000020(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _084be6_jump

	_084bd6_jump:
		mov    $0x000001,%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _07d278_func

	_084be6_jump:
		incl   -0x000018(%ebp)
		jmp    _084ada_jump

	_084bee_jump:
		mov    -0x000004(%ebp),%eax
		call   _07d273_func
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be7f0_data,%edx
		mov    %edx,_0bda82_data(%eax)
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bd9d8_data(%eax)
		movl   $0x000000,-0x000028(%ebp)

	_084c1f_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		ret    $0x000014



_084c28_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		cmpl   $0x000005,-0x000008(%ebp)
		jbe    _084c4b_jump
		movl   $0x00000a,-0x000004(%ebp)
		jmp    _084cf6_jump

	_084c4b_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bd9d8_data(%eax)
		jne    _084c66_jump
		movl   $0x00000a,-0x000004(%ebp)
		jmp    _084cf6_jump

	_084c66_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bd9d8_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd94c_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd8e8_data(%eax)
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _084ca3_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _084cf6_jump

	_084ca3_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd9b0_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd914_data(%eax),%edx
		push   %edx
		pushl  _0bd910_data(%eax)
		call   _084105_func
		add    $0x00000c,%esp
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd9b0_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd932_data(%eax),%edx
		push   %edx
		pushl  _0bd92e_data(%eax)
		call   _084105_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_084cf6_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084d00_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000044,%esp
		mov    %eax,-0x00002c(%ebp)
		mov    %cx,-0x000040(%ebp)
		mov    %ebx,-0x000044(%ebp)
		movl   $0x00002c,-0x00000c(%ebp)
		movl   $0x000030,-0x000010(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		cmpl   $0x001000,-0x00002c(%ebp)
		jb     _084d44_jump
		cmpl   $0x001023,-0x00002c(%ebp)
		jbe    _084d50_jump

	_084d44_jump:
		movl   $0x000006,-0x000028(%ebp)
		jmp    _084ed0_jump

	_084d50_jump:
		mov    $_0be410_data,%edx
		mov    $_0be50f_data,%eax
		call   _083fa7_func
		mov    $_0c13d0_data,%edx
		mov    $_0be50f_data,%eax
		call   _083fc6_func
		push   $0x000200
		mov    $_0be50f_data,%eax
		push   %eax
		call   _07cfcf_func
		add    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		cmpl   $0xffffffff,-0x000004(%ebp)
		jne    _084d96_jump
		movl   $0x00000f,-0x000028(%ebp)
		jmp    _084ed0_jump

	_084d96_jump:
		mov    -0x00000c(%ebp),%ebx
		mov    $_0be79c_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _0811d8_func

	_084da6_jump:
		mov    -0x000018(%ebp),%eax
		cmp    _0be7bc_data,%eax
		ja     _084db7_jump
		cmpl   $0x000000,-0x000014(%ebp)
		je     _084dbc_jump

	_084db7_jump:
		jmp    _084ec1_jump

	_084dbc_jump:
		mov    -0x000010(%ebp),%ebx
		mov    $_0be7c8_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _0811d8_func
		mov    _0be7ec_data,%eax
		mov    %eax,-0x000008(%ebp)
		mov    _0be7f0_data,%eax
		cmp    -0x00002c(%ebp),%eax
		jne    _084de7_jump
		testb  $0x000040,_0be7f5_data
		jne    _084dec_jump

	_084de7_jump:
		jmp    _084ea9_jump

	_084dec_jump:
		movl   $0x000001,-0x000014(%ebp)
		addl   $0x004000,-0x000008(%ebp)
		lea    -0x000024(%ebp),%eax
		push   %eax
		pushl  0x00001c(%ebp)
		pushl  -0x000008(%ebp)
		call   _084077_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,-0x000038(%ebp)
		mov    %ecx,-0x00003c(%ebp)
		movzwl -0x000038(%ebp),%eax
		push   %eax
		pushl  -0x00003c(%ebp)
		call   _08413b_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,-0x000030(%ebp)
		mov    %ecx,-0x000034(%ebp)
		pushl  -0x000008(%ebp)
		pushl  -0x000024(%ebp)
		call   _083ffd_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _084e50_jump
		movl   $0x000005,-0x000028(%ebp)
		jmp    _084ed0_jump

	_084e50_jump:
		lea    -0x000020(%ebp),%eax
		push   %eax
		mov    -0x000008(%ebp),%edx
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _07d242_func
		mov    -0x000030(%ebp),%eax
		lgs    -0x000044(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000034(%ebp),%eax
		lgs    -0x000044(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000038(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000008(%ebp),%al
		mov    0x000020(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    0x000024(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _084eb9_jump

	_084ea9_jump:
		mov    $0x000001,%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _07d278_func

	_084eb9_jump:
		incl   -0x000018(%ebp)
		jmp    _084da6_jump

	_084ec1_jump:
		mov    -0x000004(%ebp),%eax
		call   _07d273_func
		movl   $0x000000,-0x000028(%ebp)

	_084ed0_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000014



_084eda_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd960_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd8fc_data(%eax)
		call   _08403a_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _084f18_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _084f6b_jump

	_084f18_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd9c4_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd978_data(%eax),%edx
		push   %edx
		pushl  _0bd974_data(%eax)
		call   _084105_func
		add    $0x00000c,%esp
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd9c4_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd996_data(%eax),%edx
		push   %edx
		pushl  _0bd992_data(%eax)
		call   _084105_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_084f6b_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084f9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084fb1_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_085028_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08503d_func:
		push   %esi
		push   %edi
		push   %ds
		push   %es
		push   %eax
		mov    %dx,%es
		mov    %cx,%ds
		mov    %ebx,%esi
		mov    %eax,%edi

	_08504c_jump:
		mov    (%esi),%al
		mov    %al,%es:(%edi)
		cmp    $0x000000,%al
		je     _085066_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,%es:0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _08504c_jump

	_085066_jump:
		pop    %eax
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		ret    



_08506c_func:
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    0x00000c(%esp),%eax
		mov    %ebx,%esi
		push   %ds
		push   %es
		push   %edi
		xchg   %eax,%ecx
		mov    %eax,%ds
		mov    %edx,%es
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %eax
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		ret    $0x000004

	_08509c_jump:
		ret    



_08509d_func:
		test   %edx,%edx
		jge    _08509c_jump
		jmp    _07c6ce_func



_0850a6_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		call   _0850bb_func
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    



_0850bb_func:
		fldl2e 
		fmulp  %st,%st(1)
		push   %ebp
		mov    %esp,%ebp
		mov    $0x008001,%ax
		push   %eax
		filds  -0x000004(%ebp)
		fcom   %st(1)
		fnstsw %ax
		sahf   
		mov    %ebp,%esp
		fstp   %st(0)
		jbe    _0850db_jump
		fstp   %st(0)
		fldz   
		pop    %ebp
		ret    

	_0850db_jump:
		fld    %st(0)
		call   _08512c_func
		push   %eax
		fists  -0x000004(%ebp)
		fwait
		pop    %eax
		cmp    $0x008000,%ax
		jne    _0850fb_jump
		dec    %ax
		push   %eax
		fstp   %st(0)
		fstp   %st(0)
		filds  -0x000004(%ebp)
		fld    %st(0)
		pop    %eax

	_0850fb_jump:
		fld    %st(0)
		fld1   
		fscale 
		fstp   %st(1)
		fxch   %st(1)
		fld    %st(2)
		fsubp  %st,%st(1)
		ftst   
		fnstsw %ax
		sahf   
		je     _085126_jump
		fld1   
		fchs   
		fxch   %st(1)
		fscale 
		fstp   %st(1)
		f2xm1  
		fld1   
		faddp  %st,%st(1)
		fmul   %st(0),%st
		fmulp  %st,%st(1)
		jmp    _085128_jump

	_085126_jump:
		fstp   %st(0)

	_085128_jump:
		fstp   %st(1)
		pop    %ebp
		ret    



_08512c_func:
		push   %ebp
		mov    %esp,%ebp
		push   %eax
		fstcw  -0x000002(%ebp)
		fwait
		mov    -0x000002(%ebp),%ax
		and    $0x00f3ff,%ax
		or     $0x000400,%ax
		push   %eax
		fldcw  -0x000008(%ebp)
		frndint 
		fldcw  -0x000002(%ebp)
		fwait
		mov    %ebp,%esp
		pop    %ebp
		ret    



_08514f_func:
		test   %edx,%edx
		jne    _085156_jump
		xor    %eax,%eax
		ret    

	_085156_jump:
		jge    _08515e_jump
		mov    $0xffffffff,%eax
		ret    

	_08515e_jump:
		mov    $0x000001,%eax
		ret    



_085164_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		lea    -0x000010(%ebp),%edx
		lea    -0x000008(%ebp),%eax
		call   _086604_func
		mov    -0x000010(%ebp),%eax
		mov    %eax,(%ebx)
		mov    -0x00000c(%ebp),%eax
		mov    %eax,0x000004(%ebx)
		mov    -0x000008(%ebp),%eax
		mov    -0x000004(%ebp),%edx
		mov    %ebp,%esp
		pop    %ebp
		ret    



_085190_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		test   %edx,%edx
		je     _085222_jump
		mov    -0x000006(%ebp),%eax
		and    $0x007ff0,%eax
		cwtl   
		sar    $0x000004,%eax
		cmp    $0x003e80,%ebx
		jle    _0851be_jump
		mov    $0x003e80,%ebx

	_0851be_jump:
		cmp    $0xffffc180,%ebx
		jge    _0851cb_jump
		mov    $0xffffc180,%ebx

	_0851cb_jump:
		add    %ebx,%eax
		test   %eax,%eax
		jg     _0851d7_jump
		xor    %eax,%eax
		xor    %edx,%edx
		jmp    _085228_jump

	_0851d7_jump:
		cmp    $0x0007ff,%eax
		jl     _08520a_jump
		mov    -0x000006(%ebp),%ecx
		call   _082fc5_func
		test   %cx,%cx
		jle    _0851f8_jump
		mov    _0c15b0_data,%eax
		mov    _0c15b4_data,%edx
		jmp    _085228_jump

	_0851f8_jump:
		mov    _0c15b0_data,%eax
		mov    _0c15b4_data,%edx
		call   _07c6ce_func
		jmp    _085228_jump

	_08520a_jump:
		mov    -0x000006(%ebp),%edx
		and    $0x00800f,%edx
		shl    $0x000004,%eax
		mov    %edx,%ebx
		mov    %dx,-0x000006(%ebp)
		or     %eax,%ebx
		mov    %bx,-0x000006(%ebp)

	_085222_jump:
		mov    -0x00000c(%ebp),%eax
		mov    -0x000008(%ebp),%edx

	_085228_jump:
		lea    -0x000004(%ebp),%esp
		pop    %ecx
		pop    %ebp
		ret    



_08522e_func:
		push   %ebp
		push   %es
		push   %ebx
		push   %ds
		push   %edx
		call   _085266_func
		push   %ds
		push   %edi
		mov    %esp,%ebp
		mov    0x000008(%ebp),%edi
		mov    0x00000c(%ebp),%ds
		mov    %eax,(%edi)
		mov    %ebx,0x000004(%edi)
		mov    %ecx,0x000008(%edi)
		mov    %edx,0x00000c(%edi)
		mov    %esi,0x000010(%edi)
		popl   0x000014(%edi)
		sbb    %eax,%eax
		mov    %eax,0x000018(%edi)
		pop    %eax
		pop    %ebx
		pop    %ebx
		pop    %ebx
		mov    %ax,0x000006(%ebx)
		data16 mov %es,(%ebx)
		pop    %es
		pop    %ebp
		ret    



_085266_func:
		lea    (%esi,%esi,2),%esi
		lea    %cs:_08530c_jump(%esi),%eax
		push   %eax
		mov    (%ebx),%es
		mov    0x000006(%ebx),%bp
		mov    (%edi),%eax
		mov    0x000004(%edi),%ebx
		mov    0x000008(%edi),%ecx
		mov    0x00000c(%edi),%edx
		mov    0x000010(%edi),%esi
		mov    0x000014(%edi),%edi
		mov    %ebp,%ds
		ret    

	_08530c_jump:
		int    $0x000000
		ret    



_08560c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    $0x00002a,%ah
		int    $0x000021
		sub    $0x00076c,%cx
		mov    %al,%ch
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00000a(%esp),%al
		mov    %eax,0x000014(%ebx)
		xor    %eax,%eax
		mov    0x000009(%esp),%al
		dec    %eax
		mov    %eax,0x000010(%ebx)
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    %eax,0x00000c(%ebx)
		mov    $0x00002c,%ah
		int    $0x000021
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,(%esp)
		xor    %eax,%eax
		mov    0x000003(%esp),%al
		xor    %ecx,%ecx
		mov    %eax,0x000008(%ebx)
		xor    %eax,%eax
		mov    (%esp),%cl
		mov    0x000002(%esp),%al
		mov    %ecx,%esi
		mov    %eax,0x000004(%ebx)
		xor    %eax,%eax
		shl    $0x000002,%esi
		mov    0x000001(%esp),%al
		add    %ecx,%esi
		mov    %eax,(%ebx)
		mov    $0x00002a,%ah
		int    $0x000021
		sub    $0x00076c,%cx
		mov    %al,%ch
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,0x000004(%esp)
		mov    0x000004(%esp),%al
		mov    0x000008(%esp),%ah
		add    %esi,%esi
		cmp    %ah,%al
		je     _0856be_jump
		cmpl   $0x000017,0x000008(%ebx)
		je     _0856be_jump
		xor    %eax,%eax
		mov    0x000006(%esp),%al
		mov    %eax,0x000014(%ebx)
		xor    %eax,%eax
		mov    0x000005(%esp),%al
		dec    %eax
		mov    %eax,0x000010(%ebx)
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		mov    %eax,0x00000c(%ebx)

	_0856be_jump:
		mov    %esi,%eax
		movl   $0xffffffff,0x000020(%ebx)
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0856cf_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    $0x00000c,%esi
		mov    0x000010(%ebp),%edx
		mov    0x000010(%eax),%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $_0c161c_data,%ebx
		mov    0x000014(%ebp),%esi
		mov    %edx,%edi
		cmp    $0xf4fb7ea1,%esi
		jge    _085703_jump

	_0856f9_jump:
		mov    $0xffffffff,%eax
		jmp    _08581c_jump

	_085703_jump:
		mov    0x000010(%ebp),%eax
		mov    %eax,%edx
		mov    $0x00000c,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %eax,%esi

	_085714_jump:
		test   %edi,%edi
		jge    _08571e_jump
		dec    %esi
		add    $0x00000c,%edi
		jmp    _085714_jump

	_08571e_jump:
		test   %esi,%esi
		jl     _0856f9_jump
		lea    0x00076c(%esi),%eax
		call   _086730_func
		test   %eax,%eax
		je     _085736_jump
		mov    $_0c1636_data,%ebx

	_085736_jump:
		lea    0x000003(%esi),%ecx
		mov    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sar    $0x000002,%ecx
		add    %edx,%eax
		lea    (%eax,%ecx,1),%edx
		movswl (%ebx,%edi,2),%eax
		mov    0x00000c(%ebp),%edi
		add    %edx,%eax
		add    %eax,%edi
		dec    %edi
		test   %esi,%esi
		je     _085763_jump
		dec    %edi

	_085763_jump:
		mov    0x000008(%ebp),%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%ebp),%edx
		add    %eax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    0x000000(%ebp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi

	_085784_jump:
		test   %esi,%esi
		jge    _085791_jump
		dec    %edi
		add    $0x015180,%esi
		jmp    _085784_jump

	_085791_jump:
		mov    %ebp,%ecx
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _086b77_func
		call   _086d23_func
		mov    _0bf9a0_data,%edx
		mov    0x000020(%ebp),%ebx
		add    %edx,%esi
		test   %ebx,%ebx
		jge    _0857b9_jump
		mov    %ebp,%eax
		call   _086884_func

	_0857b9_jump:
		cmpl   $0x000000,0x000020(%ebp)
		jle    _0857c5_jump
		sub    _0bf9a4_data,%esi

	_0857c5_jump:
		test   %esi,%esi
		jge    _0857d2_jump
		dec    %edi
		add    $0x015180,%esi
		jmp    _0857c5_jump

	_0857d2_jump:
		cmp    $0x0063de,%edi
		jl     _0856f9_jump
		jne    _0857fc_jump
		mov    _0bf9a0_data,%eax
		sub    $0x015180,%esi
		test   %eax,%eax
		jle    _0856f9_jump
		test   %esi,%esi
		jge    _08581a_jump
		jmp    _0856f9_jump

	_0857fc_jump:
		lea    -0x0063df(%edi),%eax
		mov    %eax,%edi
		shl    $0x000003,%edi
		sub    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		shl    $0x000007,%edi
		mov    %edi,%eax
		shl    $0x000002,%edi
		sub    %eax,%edi
		add    %edi,%esi

	_08581a_jump:
		mov    %esi,%eax

	_08581c_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_085835_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    _0bd5b9_data,%ah
		test   %ah,%ah
		je     _085859_jump
		mov    %edi,%eax
		call   _087088_func
		jmp    _08599d_jump

	_085859_jump:
		mov    %ah,-0x000018(%ebp)
		mov    %ah,-0x000014(%ebp)
		mov    %edi,%eax
		mov    $0x3ff00000,%ecx
		call   _08514f_func
		mov    %eax,-0x00001c(%ebp)
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _08509d_func
		mov    %eax,%edi
		mov    %edx,%esi
		call   _081794_func
		jne    _085893_jump
		mov    $0x54442d18,%edi
		mov    $0x3fe921fb,%esi
		jmp    _085986_jump

	_085893_jump:
		mov    $0x3ff00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _081794_func
		jle    _0858be_jump
		mov    $0x3ff00000,%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		xor    %eax,%eax
		call   _07c4c8_func
		mov    $0x000001,%bl
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bl,-0x000018(%ebp)

	_0858be_jump:
		mov    $0x5e9ecd56,%ebx
		mov    $0x3fd12614,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _081794_func
		jle    _085938_jump
		mov    $0xd0b09955,%ebx
		mov    $0x3fe76cf5,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07bb4f_func
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _07b998_func
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _07b998_func
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07b998_func
		mov    $0xe8584ca9,%ebx
		mov    $0x3ffbb67a,%ecx
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07b998_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _07c4c8_func
		mov    $0x000001,%bh
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bh,-0x000014(%ebp)

	_085938_jump:
		mov    $0x000008,%ecx
		mov    $_0c15b8_data,%ebx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _082f7e_func
		mov    -0x000014(%ebp),%cl
		mov    %eax,%edi
		mov    %edx,%esi
		test   %cl,%cl
		je     _085969_jump
		mov    $0x382d7366,%ebx
		mov    $0x3fe0c152,%ecx
		call   _07b998_func
		mov    %eax,%edi
		mov    %edx,%esi

	_085969_jump:
		cmpb   $0x000000,-0x000018(%ebp)
		je     _085986_jump
		mov    $0x54442d15,%eax
		mov    $0x3ff921fb,%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07b992_func
		mov    %eax,%edi
		mov    %edx,%esi

	_085986_jump:
		cmpl   $0x000000,-0x00001c(%ebp)
		jge    _085999_jump
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07c6ce_func
		mov    %eax,%edi
		mov    %edx,%esi

	_085999_jump:
		mov    %edi,%eax
		mov    %esi,%edx

	_08599d_jump:
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_0859a6_func:
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     _0859f5_jump
		add    $0x000007,%eax
		jb     _0859f5_jump
		and    $0x0000fc,%al
		mov    $0x00000c,%edx
		sub    %edx,%eax
		cmc    
		sbb    %ecx,%ecx
		and    %ecx,%eax
		add    %edx,%eax
		cmp    0x000014(%ebx),%eax
		ja     _0859f5_jump
		mov    0x00000c(%ebx),%esi
		mov    0x000010(%ebx),%edi
		cmp    %edi,%eax
		ja     _0859d9_jump
		mov    0x000028(%ebx),%esi
		sub    %edi,%edi

	_0859d9_jump:
		mov    (%esi),%edx
		cmp    %edx,%eax
		jbe    _0859f9_jump
		sub    %edx,%edi
		cmc    
		sbb    %ecx,%ecx
		and    %ecx,%edi
		add    %edx,%edi
		lea    0x000020(%ebx),%edx
		mov    0x000008(%esi),%esi
		cmp    %edx,%esi
		jne    _0859d9_jump
		mov    %edi,0x000014(%ebx)

	_0859f5_jump:
		sub    %eax,%eax
		jmp    _085a44_jump

	_0859f9_jump:
		sub    %eax,%edx
		mov    %edi,0x000010(%ebx)
		incl   0x000018(%ebx)
		mov    0x000008(%esi),%ecx
		cmp    $0x00000c,%edx
		jb     _085a27_jump
		mov    %esi,%edi
		add    %eax,%edi
		mov    %edi,0x00000c(%ebx)
		mov    %edx,(%edi)
		mov    %eax,(%esi)
		mov    0x000004(%esi),%ebx
		mov    %ebx,0x000004(%edi)
		mov    %ecx,0x000008(%edi)
		mov    %edi,0x000008(%ebx)
		mov    %ecx,%ebx
		mov    %edi,0x000004(%ebx)
		jmp    _085a3c_jump

	_085a27_jump:
		decl   0x00001c(%ebx)
		mov    %esi,%eax
		mov    %ecx,%edi
		mov    0x000004(%esi),%esi
		mov    %edi,0x000008(%esi)
		mov    %esi,0x000004(%edi)
		mov    %esi,0x00000c(%ebx)
		mov    %eax,%esi

	_085a3c_jump:
		orl    $0x000001,(%esi)
		mov    %esi,%eax
		add    $0x000004,%eax

	_085a44_jump:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret    

	_085a49_jump:
		jmp    _085b54_jump



_085a4e_func:
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     _085a49_jump
		mov    %eax,%esi
		sub    $0x000004,%esi
		mov    (%esi),%eax
		test   $0x000001,%al
		je     _085a49_jump
		and    $0x0000fe,%al
		mov    %esi,%edi
		add    %eax,%edi
		testl  $0x000001,(%edi)
		jne    _085a90_jump
		cmp    0x00000c(%ebx),%edi
		jne    _085a79_jump
		mov    %esi,0x00000c(%ebx)

	_085a79_jump:
		add    (%edi),%eax
		mov    %eax,(%esi)
		push   %ebx
		mov    0x000004(%edi),%ebx
		mov    0x000008(%edi),%edi
		mov    %edi,0x000008(%ebx)
		mov    %ebx,0x000004(%edi)
		pop    %ebx
		decl   0x00001c(%ebx)
		jmp    _085b0c_jump

	_085a90_jump:
		mov    %eax,(%esi)
		mov    0x00000c(%ebx),%edi
		cmp    %edi,%esi
		jae    _085aa7_jump
		cmp    0x000004(%edi),%esi
		ja     _085b0c_jump
		mov    0x000028(%ebx),%edi
		cmp    %edi,%esi
		jb     _085b0c_jump
		jmp    _085ab6_jump

	_085aa7_jump:
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _085b0c_jump
		lea    0x000020(%ebx),%edi
		cmp    0x000024(%ebx),%esi
		ja     _085b0c_jump

	_085ab6_jump:
		sub    %edx,%edx
		mov    0x000018(%ebx),%eax
		mov    0x00001c(%ebx),%ecx
		inc    %ecx
		div    %ecx
		dec    %ecx
		cmp    %ecx,%eax
		jae    _085aeb_jump
		mov    0x000018(%ebx),%edx
		sub    %ecx,%edx
		add    %eax,%eax
		cmp    %ecx,%edx
		ja     _085ad3_jump
		sub    %eax,%eax

	_085ad3_jump:
		mov    %esi,%edi
		add    (%esi),%edi

	_085ad7_jump:
		mov    (%edi),%edx
		test   $0x000001,%dl
		je     _085b0c_jump
		cmp    $0xffffffff,%edx
		je     _085aeb_jump
		and    $0x0000fe,%dl
		add    %edx,%edi
		dec    %eax
		jne    _085ad7_jump

	_085aeb_jump:
		mov    0x00000c(%ebx),%edi
		cmp    %edi,%esi
		jae    _085af5_jump
		mov    0x000028(%ebx),%edi

	_085af5_jump:
		cmp    %edi,%esi
		jb     _085b0c_jump
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _085b0c_jump
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _085b0c_jump
		mov    0x000008(%edi),%edi
		jmp    _085af5_jump

	_085b0c_jump:
		mov    0x000004(%edi),%edx
		mov    (%esi),%ecx
		xchg   %edi,%edx
		mov    %edi,%eax
		add    (%edi),%eax
		cmp    %esi,%eax
		jne    _085b2b_jump
		add    (%edi),%ecx
		mov    %ecx,(%edi)
		cmp    0x00000c(%ebx),%esi
		jne    _085b27_jump
		mov    %edi,0x00000c(%ebx)

	_085b27_jump:
		mov    %edi,%esi
		jmp    _085b3c_jump

	_085b2b_jump:
		incl   0x00001c(%ebx)
		mov    %edx,0x000008(%esi)
		mov    %edi,0x000004(%esi)
		mov    %esi,0x000008(%edi)
		mov    %edx,%edi
		mov    %esi,0x000004(%edi)

	_085b3c_jump:
		decl   0x000018(%ebx)
		cmp    0x00000c(%ebx),%esi
		jae    _085b4c_jump
		cmp    0x000010(%ebx),%ecx
		jbe    _085b4c_jump
		mov    %ecx,0x000010(%ebx)

	_085b4c_jump:
		cmp    0x000014(%ebx),%ecx
		jbe    _085b54_jump
		mov    %ecx,0x000014(%ebx)

	_085b54_jump:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret    



_085b59_func:
		push   %ebx
		push   %edx
		mov    _0bd5b0_data,%edx
		cmp    %edx,%eax
		jne    _085b6e_jump
		mov    0x000008(%edx),%edx
		mov    %edx,_0bd5b0_data

	_085b6e_jump:
		mov    _0bd5ac_data,%ebx
		cmp    %ebx,%eax
		jne    _085b81_jump
		mov    0x000008(%ebx),%edx
		mov    %edx,_0bd5ac_data

	_085b81_jump:
		mov    0x000004(%eax),%edx
		mov    0x000008(%eax),%eax
		test   %edx,%edx
		je     _085b8e_jump
		mov    %eax,0x000008(%edx)

	_085b8e_jump:
		test   %eax,%eax
		je     _085b95_jump
		mov    %edx,0x000004(%eax)

	_085b95_jump:
		pop    %edx
		pop    %ebx
		ret    



_085b98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0bd5ac_data,%edx

	_085ba3_jump:
		test   %edx,%edx
		je     _085e82_jump
		mov    0x000024(%edx),%eax
		mov    (%eax),%eax
		mov    (%edx),%ebx
		add    $0x00002c,%eax
		cmp    %ebx,%eax
		jne    _085bef_jump
		lea    -0x000008(%edx),%ebx
		mov    %edx,%eax
		mov    0x000008(%edx),%ecx
		call   _085b59_func
		mov    %ecx,%edx
		mov    0x000004(%ebx),%ecx
		test   %ecx,%ecx
		jne    _085bdf_jump
		mov    (%ebx),%esi
		mov    (%ebx),%di
		shr    $0x000010,%esi
		mov    $0x000005,%ah
		mov    $0x000002,%al
		int    $0x000031
		jmp    _085ba3_jump

	_085bdf_jump:
		mov    %ecx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x000049,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		pop    %es
		jmp    _085ba3_jump

	_085bef_jump:
		mov    0x000008(%edx),%edx
		jmp    _085ba3_jump



_085cf3_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0bd5ac_data,%eax
		xor    %ebx,%ebx
		jmp    _085d09_jump

	_085d00_jump:
		cmp    %eax,%edx
		jb     _085d0d_jump
		mov    %eax,%ebx
		mov    0x000008(%eax),%eax

	_085d09_jump:
		test   %eax,%eax
		jne    _085d00_jump

	_085d0d_jump:
		mov    %ebx,0x000004(%edx)
		mov    %eax,0x000008(%edx)
		test   %ebx,%ebx
		je     _085d1c_jump
		mov    %edx,0x000008(%ebx)
		jmp    _085d22_jump

	_085d1c_jump:
		mov    %edx,_0bd5ac_data

	_085d22_jump:
		test   %eax,%eax
		je     _085d29_jump
		mov    %edx,0x000004(%eax)

	_085d29_jump:
		lea    0x000020(%edx),%ebx
		mov    (%edx),%eax
		add    $0x00002c,%edx
		movl   $0x000000,-0x00000c(%edx)
		movl   $0x000000,-0x00001c(%edx)
		movl   $0x000000,-0x000014(%edx)
		movl   $0x000000,-0x000010(%edx)
		mov    %ebx,-0x000008(%edx)
		mov    %ebx,-0x000004(%edx)
		sub    $0x00002c,%eax
		mov    %ebx,-0x000020(%edx)
		mov    %eax,(%edx)
		movl   $0xffffffff,(%edx,%eax,1)
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_085d67_func:
		push   %ebx
		push   %edx
		mov    _0bd5ac_data,%edx
		test   %edx,%edx
		je     _085db2_jump
		mov    0x000024(%edx),%edx
		mov    (%edx),%eax
		add    %edx,%eax
		lea    0x000004(%eax),%ebx
		xor    %eax,%eax
		mov    _0bd816_data,%al
		cmp    $0x000002,%eax
		jl     _085da5_jump
		cmp    $0x000008,%eax
		jg     _085da5_jump
		cmpb   $0x000000,_0bd818_data
		jne    _085da5_jump
		xor    %eax,%eax
		mov    %ds,%ax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,_0bd7e8_data

	_085da5_jump:
		cmp    _0bd7e8_data,%ebx
		jne    _085db2_jump
		mov    (%edx),%eax
		pop    %edx
		pop    %ebx
		ret    

	_085db2_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret    



_085db7_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		mov    (%esp),%ebx
		mov    (%esp),%ecx
		shr    $0x000010,%ebx
		call   _085b98_func
		mov    $0x000005,%ah
		mov    $0x000001,%al
		int    $0x000031
		sbb    %eax,%eax
		inc    %eax
		je     _085de6_jump
		mov    %bx,%ax
		shl    $0x000010,%eax
		mov    %cx,%ax
		mov    %di,(%eax)
		mov    %si,0x000002(%eax)

	_085de6_jump:
		test   %eax,%eax
		je     _085e03_jump
		mov    (%esp),%ebx
		lea    0x000008(%eax),%edx
		sub    $0x000008,%ebx
		mov    %ebx,(%edx)
		movl   $0x000000,0x000004(%eax)
		mov    %edx,%eax
		jmp    _085e7f_jump

	_085e03_jump:
		testw  $0x00fff0,_0e5f76_data
		je     _085e18_jump
		movl   $0x0fffff,_0e5f74_data

	_085e18_jump:
		cmpl   $0x010000,(%esp)
		ja     _085e7d_jump
		mov    _0e5f74_data,%ebx
		shr    $0x000004,%ebx
		or     $0x000001,%bl
		mov    $0x000048,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jl     _085e7d_jump
		mov    (%esp),%ebx
		shr    $0x000004,%ebx
		mov    $0x000048,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,%ebx
		mov    %edx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x000049,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		pop    %es
		test   %esi,%esi
		jl     _085e7d_jump
		mov    $0x000000,%ah
		mov    $0x000006,%al
		int    $0x000031
		mov    %ecx,%eax
		shl    $0x000010,%eax
		mov    %dx,%ax
		add    $0x000008,%eax
		mov    (%esp),%edx
		mov    %esi,-0x000004(%eax)
		sub    $0x000008,%edx
		mov    %edx,(%eax)
		jmp    _085e7f_jump

	_085e7d_jump:
		xor    %eax,%eax

	_085e7f_jump:
		add    $0x000004,%esp

	_085e82_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_085e88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		cmpl   $0x000000,_0bf9f8_data
		jne    _085e9b_jump

	_085e97_jump:
		xor    %eax,%eax
		jmp    _085e7f_jump

	_085e9b_jump:
		cmpl   $0xfffffffe,_0bd7e8_data
		je     _085e97_jump
		mov    %esp,%eax
		call   _086084_func
		test   %eax,%eax
		je     _085e7f_jump
		xor    %eax,%eax
		mov    _0bd816_data,%al
		cmp    $0x000001,%eax
		jne    _085ed0_jump
		mov    (%esp),%eax
		call   _085db7_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _085eeb_jump
		mov    (%eax),%eax
		mov    %eax,(%esp)
		jmp    _085eeb_jump

	_085ed0_jump:
		mov    (%esp),%ebx
		mov    $0x80004800,%eax
		int    $0x000021
		sbb    %ebx,%ebx
		not    %ebx
		and    %ebx,%eax
		mov    (%esp),%ecx
		sub    $0x000004,%ecx
		mov    %eax,%edx
		mov    %ecx,(%esp)

	_085eeb_jump:
		test   %edx,%edx
		je     _085e97_jump
		mov    (%esp),%eax
		mov    (%esp),%esi
		sub    $0x000004,%eax
		cmp    %esi,%eax
		ja     _085e97_jump
		mov    %eax,(%esp)
		cmp    $0x000038,%eax
		jb     _085e97_jump
		mov    %eax,(%edx)
		mov    %edx,%eax
		call   _085cf3_func
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)
		or     $0x000001,%al
		mov    %eax,(%ebx)
		mov    0x000018(%edx),%edi
		movl   $0xffffffff,0x000014(%edx)
		inc    %edi
		lea    0x000004(%ebx),%eax
		mov    %edi,0x000018(%edx)
		call   _081a15_func
		mov    $0x000001,%eax
		jmp    _085e7f_jump



_085f38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		push   %eax
		xor    %eax,%eax
		mov    _0bd816_data,%al
		cmp    $0x000001,%eax
		jne    _085f53_jump
		cmpb   $0x000000,_0bd817_data
		je     _085f5f_jump

	_085f53_jump:
		xor    %eax,%eax
		mov    _0bd816_data,%al
		cmp    $0x000009,%eax
		jne    _085f6c_jump

	_085f5f_jump:
		mov    (%esp),%eax
		call   _085e88_func
		jmp    _08607b_jump

	_085f6c_jump:
		cmpl   $0x000000,_0bf9f8_data
		jne    _085f7c_jump

	_085f75_jump:
		xor    %eax,%eax
		jmp    _08607b_jump

	_085f7c_jump:
		cmpl   $0xfffffffe,_0bd7e8_data
		je     _085f75_jump
		mov    %esp,%eax
		call   _086084_func
		test   %eax,%eax
		je     _08607b_jump
		xor    %eax,%eax
		mov    _0bd816_data,%al
		cmp    $0x000002,%eax
		jl     _085fbc_jump
		cmp    $0x000008,%eax
		jg     _085fbc_jump
		cmpb   $0x000000,_0bd818_data
		jne    _085fbc_jump
		xor    %eax,%eax
		mov    %ds,%ax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,_0bd7e8_data

	_085fbc_jump:
		mov    (%esp),%edx
		mov    _0bd7e8_data,%ecx
		add    %ecx,%edx
		cmp    %ecx,%edx
		jae    _085fd0_jump
		mov    $0xfffffffe,%edx

	_085fd0_jump:
		mov    %edx,%eax
		call   _0871c7_func
		cmp    $0xffffffff,%eax
		je     _085f75_jump
		mov    %eax,%ebx
		cmp    $0xfffffff8,%eax
		ja     _085f75_jump
		cmp    %eax,%edx
		jbe    _085f75_jump
		sub    %eax,%edx
		mov    %edx,(%esp)
		lea    -0x000004(%edx),%eax
		cmp    %edx,%eax
		ja     _085f75_jump
		mov    _0bd5ac_data,%edx
		mov    %eax,(%esp)
		jmp    _086010_jump

	_085ffe_jump:
		mov    0x000008(%edx),%ebp
		test   %ebp,%ebp
		je     _086014_jump
		cmp    %ebx,%edx
		ja     _08600d_jump
		cmp    %ebp,%ebx
		jb     _086014_jump

	_08600d_jump:
		mov    0x000008(%edx),%edx

	_086010_jump:
		test   %edx,%edx
		jne    _085ffe_jump

	_086014_jump:
		test   %edx,%edx
		je     _08603e_jump
		mov    (%edx),%eax
		lea    -0x000004(%ebx),%ecx
		add    %edx,%eax
		cmp    %eax,%ecx
		jne    _08603e_jump
		mov    (%esp),%esi
		add    $0x000004,%esi
		mov    %esi,(%esp)
		add    %esi,(%edx)
		mov    (%esp),%ebp
		mov    %eax,%ebx
		lea    (%eax,%ebp,1),%ecx
		movl   $0xffffffff,(%ecx)
		jmp    _08605d_jump

	_08603e_jump:
		cmpl   $0x000038,(%esp)
		jb     _085f75_jump
		mov    (%esp),%eax
		mov    %eax,(%ebx)
		mov    %ebx,%eax
		mov    %ebx,%edx
		call   _085cf3_func
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)

	_08605d_jump:
		mov    (%esp),%eax
		or     $0x000001,%al
		mov    %eax,(%ebx)
		incl   0x000018(%edx)
		lea    0x000004(%ebx),%eax
		movl   $0xffffffff,0x000014(%edx)
		call   _081a15_func
		mov    $0x000001,%eax

	_08607b_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_086084_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    (%eax),%edx
		add    $0x000003,%edx
		and    $0x0000fc,%dl
		test   %edx,%edx
		jne    _08609b_jump

	_086095_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_08609b_jump:
		xor    %eax,%eax
		mov    _0bd816_data,%al
		cmp    $0x000001,%eax
		jne    _0860b0_jump
		cmpb   $0x000000,_0bd817_data
		je     _0860bc_jump

	_0860b0_jump:
		xor    %eax,%eax
		mov    _0bd816_data,%al
		cmp    $0x000009,%eax
		jne    _0860c1_jump

	_0860bc_jump:
		add    $0x000008,%edx
		jmp    _0860c8_jump

	_0860c1_jump:
		call   _085d67_func
		sub    %eax,%edx

	_0860c8_jump:
		mov    %edx,(%ebx)
		add    $0x00003c,%edx
		cmp    (%ebx),%edx
		jb     _086095_jump
		mov    _0bf9fc_data,%esi
		cmp    %esi,%edx
		jae    _0860e0_jump
		mov    %esi,%edx
		and    $0x0000fe,%dl

	_0860e0_jump:
		mov    %edx,(%ebx)
		add    $0x000fff,%edx
		cmp    (%ebx),%edx
		jb     _086095_jump
		xor    %dl,%dl
		and    $0x0000f0,%dh
		mov    %edx,(%ebx)
		test   %edx,%edx
		setne  %al
		and    $0x0000ff,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_086101_func:
		xor    %eax,%eax
		ret    



_086104_func:
		fsave  (%eax)
		fwait
		ret    



_086109_func:
		frstor (%eax)
		fwait
		ret    



_08610d_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0bd5b9_data
		je     _08612e_jump
		mov    $_086104_func,%edx
		mov    $_086109_func,%ebx
		mov    %edx,_0bfa00_data
		mov    %ebx,_0bfa04_data

	_08612e_jump:
		xor    %eax,%eax
		mov    _0bfa08_data,%ax
		call   _087294_func
		pop    %edx
		pop    %ebx
		ret    



_086148_func:
		push   %edx
		mov    _0bd5b8_data,%ah
		test   %ah,%ah
		jne    _08618c_jump
		mov    %ah,_0bd5b9_data
		sub    %eax,%eax
		push   %eax
		fninit 
		fnstcw (%esp)
		pop    %eax
		mov    %ah,%al
		xor    %dl,%dl
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _086177_jump
		call   _08610d_func
		mov    %al,%dl

	_086177_jump:
		cmpb   $0x000000,_0bd814_data
		jne    _08618c_jump
		mov    %dl,_0bd5b8_data
		mov    %dl,_0bd5b9_data

	_08618c_jump:
		pop    %edx
		ret    



_08618e_func:
		call   *_0bd821_data
		ret    



_086195_func:
		mov    %esp,%eax
		sub    _0bd7f8_data,%eax
		ret    



_08619e_func:
		movl   $0x008000,_0bf9fc_data
		ret    



_0861a9_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    %edx,%eax
		mov    %ds,%ebx
		movl   $0x000000,0x00000c(%edi)
		mov    %esi,%ecx
		mov    0x000015(%edi),%dl
		xor    %ebp,%ebp
		cmp    $0x000047,%dl
		jb     _0861e8_jump
		jbe    _0861f5_jump
		cmp    $0x000066,%dl
		jb     _0861de_jump
		jbe    _08620a_jump
		cmp    $0x000067,%dl
		je     _0861f5_jump
		jmp    _0862a6_jump

	_0861de_jump:
		cmp    $0x000065,%dl
		je     _086205_jump
		jmp    _0862a6_jump

	_0861e8_jump:
		cmp    $0x000045,%dl
		jb     _0862a6_jump
		jbe    _086205_jump
		jmp    _08620a_jump

	_0861f5_jump:
		cmpl   $0x000000,0x000008(%edi)
		jne    _086202_jump
		movl   $0x000001,0x000008(%edi)

	_086202_jump:
		sub    $0x000002,%dl

	_086205_jump:
		mov    $0x000001,%ebp

	_08620a_jump:
		mov    (%eax),%ecx
		add    $0x000008,%ecx
		mov    %ecx,(%eax)
		mov    -0x000008(%ecx),%eax
		mov    %eax,(%esp)
		mov    -0x000004(%ecx),%eax
		mov    %eax,0x000004(%esp)
		cmpl   $0x000001,0x000008(%edi)
		jle    _086243_jump
		mov    %esp,%eax
		call   _0872bb_func
		test   %eax,%eax
		je     _086243_jump
		xor    %eax,%eax
		mov    0x000015(%edi),%al
		cmp    $0x000067,%eax
		je     _08623e_jump
		cmp    $0x000047,%eax
		jne    _086243_jump

	_08623e_jump:
		decl   0x000008(%edi)
		jmp    _086250_jump

	_086243_jump:
		cmpl   $0xffffffff,0x000008(%edi)
		jne    _086250_jump
		movl   $0x000006,0x000008(%edi)

	_086250_jump:
		mov    0x000015(%edi),%al
		and    $0x00005f,%al
		and    $0x0000ff,%eax
		push   %eax
		xor    %eax,%eax
		mov    %dl,%al
		push   %eax
		push   $0x000003
		push   %ebp
		mov    0x000008(%edi),%ebx
		xor    %ecx,%ecx
		push   $0x000027
		lea    0x000014(%esp),%edx
		mov    %esi,%eax
		call   _087475_func
		xor    %eax,%eax
		mov    (%esi),%al
		cmp    $0x00002a,%eax
		jne    _086282_jump
		movb   $0x00002a,0x000016(%edi)

	_086282_jump:
		movb   $0x000000,0x000027(%esi)

	_086286_jump:
		xor    %eax,%eax
		mov    (%esi),%al
		cmp    $0x000020,%eax
		jne    _086292_jump
		inc    %esi
		jmp    _086286_jump

	_086292_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		call   _0862b2_func
		mov    %ds,%ebx
		mov    %esi,%ecx
		movl   $0xffffffff,0x000008(%edi)

	_0862a6_jump:
		mov    %ebx,%edx
		mov    %ecx,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0862b2_func:
		push   %ebx
		mov    %edx,%ebx
		mov    0x000014(%edx),%dl
		and    $0x000001,%dl
		and    $0x0000ff,%edx
		jne    _08630f_jump

	_0862c3_jump:
		cmpb   $0x000000,(%eax)
		je     _0862d9_jump
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000065,%edx
		je     _0862d9_jump
		cmp    $0x000045,%edx
		je     _0862d9_jump
		inc    %eax
		jmp    _0862c3_jump

	_0862d9_jump:
		mov    %eax,%edx
		mov    0x000015(%ebx),%bl
		and    $0x0000ff,%ebx
		dec    %eax
		cmp    $0x000047,%ebx
		je     _0862ef_jump
		cmp    $0x000067,%ebx
		jne    _0862fb_jump

	_0862ef_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x000030,%ebx
		jne    _0862fb_jump
		dec    %eax
		jmp    _0862ef_jump

	_0862fb_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x00002e,%ebx
		je     _086305_jump
		inc    %eax

	_086305_jump:
		mov    (%edx),%bl
		inc    %edx
		mov    %bl,(%eax)
		inc    %eax
		test   %bl,%bl
		jne    _086305_jump

	_08630f_jump:
		pop    %ebx
		ret    



_086311_func:
		push   %ebx
		mov    %edx,%ebx
		xor    %edx,%edx
		call   _087671_func
		mov    %eax,(%ebx)
		mov    %edx,0x000004(%ebx)
		pop    %ebx
		ret    



_086322_func:
		push   %edx
		mov    $0x000001,%edx
		mov    $_0c13dc_data,%eax
		call   _087883_func
		pop    %edx
		ret    



_086334_func:
		cmp    $0x000061,%eax
		jl     _086341_jump
		cmp    $0x00007a,%eax
		jg     _086341_jump
		sub    $0x000020,%eax

	_086341_jump:
		ret    



_086348_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $0x000002,%eax
		call   _0878a5_func
		mov    %eax,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		mov    _0c1600_data(,%eax,4),%eax
		call   _0878c4_func
		mov    $_0c1485_data,%eax
		mov    %ebx,%edx
		call   _0878c4_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _0878c4_func
		mov    $0x00000a,%eax
		mov    %ebx,%edx
		call   _07cd1a_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_086390_func:
		push   %ebx
		mov    %eax,%ebx
		call   *_0bf94c_data
		test   %eax,%eax
		jne    _0863b8_jump
		mov    0x000004(%ebx),%edx
		mov    (%ebx),%eax
		call   _086348_func
		cmpl   $0x000001,(%ebx)
		jne    _0863b3_jump
		call   _082fb4_func
		jmp    _0863b8_jump

	_0863b3_jump:
		call   _082fc5_func

	_0863b8_jump:
		mov    0x000018(%ebx),%eax
		mov    0x00001c(%ebx),%edx
		pop    %ebx
		ret    



_086471_func:
		sub    $0x000010,%esp
		movl   $0xc0000000,0x000008(%esp)
		movl   $0x4150017e,0x00000c(%esp)
		movl   $0x80000000,(%esp)
		movl   $0x4147ffff,0x000004(%esp)
		xor    %eax,%eax
		mov    _0bd5b9_data,%al
		cmp    $0x000003,%eax
		jl     _0864c2_jump
		fldl   0x000008(%esp)
		fld    %st(0)
		fldl   (%esp)
		fxch   %st(1)
		fdiv   %st(1),%st
		fmulp  %st,%st(1)
		fsubrp %st,%st(1)
		fcompl _0c148c_data
		fnstsw %ax
		sahf   
		jbe    _0864c2_jump
		orb    $0x000001,_0bd884_data

	_0864c2_jump:
		add    $0x000010,%esp
		ret    



_0864c6_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0bd5fd_data,%ah
		and    $0x0000f8,%ah
		mov    %ah,%dl
		mov    %ah,_0bd5fd_data
		or     $0x000004,%dl
		mov    $_0bd5bc_data,%ecx
		mov    %dl,_0bd5fd_data
		jmp    _08652c_jump

	_0864ea_jump:
		mov    $0x000008,%eax
		call   _08191a_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _086519_jump
		mov    $0x000008,%eax
		call   _08191a_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _086519_jump
		mov    $0x000001,%edx
		mov    $_0c1494_data,%eax
		call   _087883_func

	_086519_jump:
		mov    _0e5f40_data,%eax
		mov    %ecx,0x000004(%ebx)
		mov    %ebx,_0e5f40_data
		add    $0x00001a,%ecx
		mov    %eax,(%ebx)

	_08652c_jump:
		mov    0x00000c(%ecx),%edx
		test   %edx,%edx
		jne    _0864ea_jump
		mov    %edx,_0e5f30_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08653d_func:
		xor    %eax,%eax
		call   _08654e_func
		jmp    _083c9f_jump



_08654e_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    $_0bd5bc_data,%esi
		add    %eax,%eax
		xor    %ebx,%ebx
		add    %eax,%esi
		mov    _0e5f40_data,%eax
		jmp    _08659b_jump

	_086570_jump:
		mov    (%eax),%ecx
		mov    0x000004(%eax),%eax
		mov    $0x000001,%edx
		testb  $0x000040,0x00000d(%eax)
		jne    _086593_jump
		testb  $0x000008,0x00000d(%eax)
		jne    _086593_jump
		cmp    %esi,%eax
		jb     _086599_jump
		cmp    $_0bd63e_data,%eax
		jae    _086593_jump
		xor    %edx,%edx

	_086593_jump:
		call   _07d5b1_func
		inc    %ebx

	_086599_jump:
		mov    %ecx,%eax

	_08659b_jump:
		test   %eax,%eax
		jne    _086570_jump
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0865a6_func:
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %ebx,%esi

	_0865ac_jump:
		test   %esi,%esi
		jne    _0865b5_jump

	_0865b0_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		ret    

	_0865b5_jump:
		mov    (%ecx),%al
		xor    %ebx,%ebx
		mov    (%edx),%ah
		mov    %al,%bl
		cmp    $0x000041,%ebx
		jl     _0865c9_jump
		cmp    $0x00005a,%ebx
		jg     _0865c9_jump
		add    $0x000020,%al

	_0865c9_jump:
		xor    %ebx,%ebx
		mov    %ah,%bl
		cmp    $0x000041,%ebx
		jl     _0865da_jump
		cmp    $0x00005a,%ebx
		jg     _0865da_jump
		add    $0x000020,%ah

	_0865da_jump:
		cmp    %ah,%al
		je     _0865f0_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ah,%al
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %esi
		pop    %ecx
		ret    

	_0865f0_jump:
		test   %ah,%ah
		je     _0865b0_jump
		inc    %ecx
		inc    %edx
		dec    %esi
		jmp    _0865ac_jump



_086604_func:
		push   %ebp
		push   %esi
		push   %edi
		push   %ecx
		push   %ebx
		mov    %edx,%esi
		mov    %eax,%ebp
		mov    0x000000(%ebp),%eax
		mov    0x000004(%ebp),%edx
		xchg   %ebp,%esi
		mov    %eax,0x000000(%ebp)
		mov    %edx,0x000004(%ebp)
		mov    %edx,%ecx
		and    $0x7ff00000,%ecx
		je     _08662f_jump
		cmp    $0x43300000,%ecx
		jb     _08663d_jump
		xchg   %esi,%ebp

	_08662f_jump:
		sub    %eax,%eax
		mov    %eax,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    

	_08663d_jump:
		mov    %ecx,%edi
		shr    $0x000014,%ecx
		sub    $0x0003ff,%cx
		jb     _08662f_jump
		push   %edx
		sub    %eax,%eax
		mov    $0xfff00000,%edx
		cmp    $0x000014,%cl
		jbe    _086662_jump
		sar    $0x000015,%edx
		rcr    %eax
		sub    $0x000015,%cl
		sar    %cl,%eax
		jmp    _086664_jump

	_086662_jump:
		sar    %cl,%edx

	_086664_jump:
		and    %edx,0x000004(%ebp)
		and    %eax,0x000000(%ebp)
		not    %edx
		not    %eax
		mov    %esi,%ebp
		and    0x000004(%ebp),%edx
		and    0x000000(%ebp),%eax
		call   _0866df_func
		pop    %esi
		or     %edx,%edx
		je     _086688_jump
		and    $0x80000000,%esi
		or     %esi,%edx

	_086688_jump:
		mov    %edx,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_086694_func:
		push   %ebp
		push   %esi
		push   %edi
		push   %ecx
		push   %ebx
		push   %edx
		mov    %eax,%esi
		sub    %edx,%edx
		sub    %ecx,%ecx
		sub    %eax,%eax

	_0866a2_jump:
		mov    (%esi),%al
		cmp    $0x000000,%al
		je     _0866c6_jump
		mov    %edx,%edi
		mov    %ecx,%ebx
		add    %ecx,%ecx
		adc    %edx,%edx
		add    %ecx,%ecx
		adc    %edx,%edx
		add    %ebx,%ecx
		adc    %edi,%edx
		add    %ecx,%ecx
		adc    %edx,%edx
		and    $0x00000f,%al
		add    %eax,%ecx
		adc    $0x000000,%edx
		inc    %esi
		jmp    _0866a2_jump

	_0866c6_jump:
		mov    %ecx,%eax
		mov    $0x43300000,%edi
		call   _0866df_func
		pop    %ebp
		mov    %edx,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0866df_func:
		sub    %esi,%esi
		or     %eax,%esi
		or     %edx,%esi
		je     _08672f_jump
		test   $0xfff00000,%edx
		jne    _086703_jump

	_0866ef_jump:
		sub    $0x100000,%edi
		add    %eax,%eax
		adc    %edx,%edx
		test   $0xfff00000,%edx
		je     _0866ef_jump
		jmp    _086727_jump

	_086703_jump:
		test   $0xffe00000,%edx
		je     _086727_jump

	_08670b_jump:
		add    $0x100000,%edi
		shr    %edx
		rcr    %eax
		rcr    %esi
		test   $0xffe00000,%edx
		jne    _08670b_jump
		adc    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx

	_086727_jump:
		and    $0x0fffff,%edx
		or     %edi,%edx

	_08672f_jump:
		ret    



_086730_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		test   $0x000003,%bl
		jne    _086765_jump
		mov    %eax,%edx
		mov    $0x000064,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     _086753_jump

	_08674a_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_086753_jump:
		mov    $0x000190,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     _08674a_jump

	_086765_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08676b_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebx
		mov    0x000020(%eax),%ecx
		test   %ecx,%ecx
		jne    _086838_jump
		lea    0x00076c(%edx),%eax
		call   _086730_func
		test   %eax,%eax
		je     _0867a2_jump
		mov    0x000010(%ebx),%eax
		mov    _0c1636_data(,%eax,2),%esi
		mov    _0c1634_data(,%eax,2),%eax
		jmp    _0867b3_jump

	_0867a2_jump:
		mov    0x000010(%ebx),%eax
		mov    _0c161c_data(,%eax,2),%esi
		mov    _0c161a_data(,%eax,2),%eax

	_0867b3_jump:
		sar    $0x000010,%esi
		sar    $0x000010,%eax
		sub    %eax,%esi
		xor    %edi,%edi
		mov    $0x000001,%ecx
		mov    %edi,(%esp)
		mov    %edi,0x000004(%esp)
		mov    %edi,0x000008(%esp)
		mov    %ecx,0x00000c(%esp)
		mov    0x000010(%ebx),%eax
		mov    %eax,0x000010(%esp)
		mov    %edx,0x000014(%esp)
		mov    %esp,%eax
		mov    %edi,0x000020(%esp)
		call   _0856cf_func
		mov    0x000018(%esp),%ebp
		mov    0x000018(%ebx),%edx
		sub    %ebp,%edx
		add    $0x000007,%edx
		mov    $0x000007,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    0x00000c(%ebx),%eax
		cmp    $0x000005,%eax
		jne    _086826_jump
		lea    -0x000001(%eax),%ecx
		mov    %ecx,%edi
		shl    $0x000003,%edi
		lea    0x000001(%edx),%eax
		sub    %ecx,%edi
		add    %edi,%eax
		cmp    %esi,%eax
		jle    _086822_jump
		mov    0x00000c(%ebx),%eax
		sub    $0x000002,%eax
		jmp    _086827_jump

	_086822_jump:
		mov    %ecx,%eax
		jmp    _086827_jump

	_086826_jump:
		dec    %eax

	_086827_jump:
		mov    0x00001c(%esp),%ebx
		add    %edx,%ebx
		mov    %eax,%edx
		shl    $0x000003,%eax
		sub    %edx,%eax
		add    %ebx,%eax
		jmp    _086847_jump

	_086838_jump:
		cmp    $0x000001,%ecx
		jne    _086844_jump
		mov    0x00001c(%eax),%eax
		sub    %ecx,%eax
		jmp    _086847_jump

	_086844_jump:
		mov    0x00001c(%eax),%eax

	_086847_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_086850_func:
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		mov    0x000010(%eax),%esi
		cmp    0x000010(%edx),%esi
		jle    _086864_jump

	_08685c_jump:
		mov    $0x000001,%eax
		pop    %esi
		pop    %ecx
		ret    

	_086864_jump:
		cmp    0x000010(%ecx),%esi
		jl     _08687f_jump
		mov    %ebx,%edx
		call   _08676b_func
		mov    %eax,%esi
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _08676b_func
		cmp    %eax,%esi
		jg     _08685c_jump

	_08687f_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		ret    



_086884_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%ecx
		mov    _0bf9ee_data,%eax
		mov    (%eax),%dl
		xor    %edi,%edi
		test   %dl,%dl
		je     _086b38_jump
		mov    $_0bf97c_data,%edx
		mov    $_0bf958_data,%eax
		mov    0x000014(%ecx),%ebx
		call   _086850_func
		mov    %eax,0x000014(%esp)
		test   %eax,%eax
		je     _0868c6_jump
		mov    $_0bf97c_data,%esi
		mov    $_0bf958_data,%ebx
		jmp    _0868d0_jump

	_0868c6_jump:
		mov    $_0bf958_data,%esi
		mov    $_0bf97c_data,%ebx

	_0868d0_jump:
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		mov    0x000010(%ecx),%ebp
		call   _086730_func
		mov    %eax,%edx
		lea    0x000000(%ebp,%ebp,1),%eax
		test   %edx,%edx
		je     _0868f8_jump
		mov    _0c1636_data(%eax),%edx
		mov    _0c1634_data(%eax),%eax
		jmp    _086904_jump

	_0868f8_jump:
		mov    _0c161c_data(%eax),%edx
		mov    _0c161a_data(%eax),%eax

	_086904_jump:
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x00000c(%esp)
		xor    %edx,%edx
		mov    0x000020(%esi),%eax
		mov    %edx,0x000010(%esp)
		test   %eax,%eax
		jne    _0869d4_jump
		mov    0x000010(%esi),%eax
		cmp    %eax,%ebp
		jle    _086932_jump
		mov    $0x000001,%edi
		jmp    _086a0d_jump

	_086932_jump:
		jne    _086a0d_jump
		mov    0x000018(%ecx),%edx
		mov    0x000018(%esi),%eax
		add    $0x000007,%edx
		sub    %eax,%edx
		movl   $0x000007,0x000018(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		mov    0x00000c(%ecx),%eax
		sub    %edx,%eax
		mov    0x000018(%ecx),%edx
		mov    %eax,(%esp)
		add    $0x000006,%edx
		sub    0x000018(%esi),%edx
		movl   $0x000007,0x000018(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		mov    0x00000c(%ecx),%eax
		dec    %eax
		sub    %edx,%eax
		mov    0x00000c(%esi),%edx
		mov    %eax,0x000008(%esp)
		cmp    $0x000005,%edx
		jne    _0869ad_jump
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000007,%eax
		cmp    %edx,%eax
		jge    _086a0d_jump
		mov    0x000008(%esp),%edx
		mov    $0x000001,%edi
		cmp    %edx,%eax
		jl     _086a0d_jump
		jmp    _086a09_jump

	_0869ad_jump:
		lea    -0x000001(%edx),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000018(%esp),%edx
		shl    $0x000003,%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		inc    %eax
		cmp    %edx,%eax
		jg     _086a0d_jump
		mov    0x000008(%esp),%edx
		mov    $0x000001,%edi
		cmp    %edx,%eax
		jle    _086a0d_jump
		jmp    _086a09_jump

	_0869d4_jump:
		mov    0x00001c(%esi),%edx
		cmp    $0x000001,%eax
		jne    _0869fb_jump
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		call   _086730_func
		test   %eax,%eax
		je     _0869fa_jump
		mov    _0c161e_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _0869fa_jump
		inc    %edx

	_0869fa_jump:
		dec    %edx

	_0869fb_jump:
		mov    0x00001c(%ecx),%eax
		cmp    %eax,%edx
		jg     _086a0d_jump
		mov    $0x000001,%edi
		jne    _086a0d_jump

	_086a09_jump:
		mov    %edi,0x000010(%esp)

	_086a0d_jump:
		cmpl   $0x000000,0x000010(%esp)
		je     _086a2a_jump
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _086b47_func
		test   %eax,%eax
		sete   %al
		mov    %eax,%edi
		and    $0x0000ff,%edi

	_086a2a_jump:
		test   %edi,%edi
		jne    _086a41_jump
		mov    0x000014(%esp),%edx
		test   %edx,%edx
		je     _086b38_jump
		mov    %edx,%edi
		jmp    _086b38_jump

	_086a41_jump:
		mov    0x000020(%ebx),%eax
		xor    %esi,%esi
		test   %eax,%eax
		jne    _086ae4_jump
		mov    0x000010(%ebx),%eax
		cmp    %eax,%ebp
		jle    _086a5c_jump
		xor    %edi,%edi
		jmp    _086b1d_jump

	_086a5c_jump:
		jne    _086b1d_jump
		mov    0x000018(%ecx),%edx
		mov    0x000018(%ebx),%ebp
		add    $0x000007,%edx
		sub    %ebp,%edx
		mov    $0x000007,%ebp
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00000c(%ecx),%eax
		sub    %edx,%eax
		mov    0x000018(%ecx),%edx
		mov    %eax,0x000004(%esp)
		add    $0x000006,%edx
		mov    0x000018(%ebx),%eax
		sub    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00000c(%ecx),%eax
		dec    %eax
		xor    %edi,%edi
		sub    %edx,%eax
		mov    0x00000c(%ebx),%ebp
		mov    %eax,%edx
		cmp    $0x000005,%ebp
		jne    _086ac5_jump
		mov    0x00000c(%esp),%eax
		mov    0x000004(%esp),%ebp
		sub    $0x000007,%eax
		cmp    %ebp,%eax
		jl     _086abf_jump

	_086ab5_jump:
		mov    $0x000001,%edi
		jmp    _086b1d_jump

	_086abf_jump:
		cmp    %eax,%edx
		jg     _086b1d_jump
		jmp    _086b18_jump

	_086ac5_jump:
		lea    -0x000001(%ebp),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000018(%esp),%ebp
		shl    $0x000003,%eax
		sub    %ebp,%eax
		mov    0x000004(%esp),%ebp
		inc    %eax
		cmp    %ebp,%eax
		jg     _086ab5_jump
		cmp    %eax,%edx
		jge    _086b1d_jump
		jmp    _086b18_jump

	_086ae4_jump:
		mov    0x00001c(%ebx),%edx
		cmp    $0x000001,%eax
		jne    _086b0b_jump
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		call   _086730_func
		test   %eax,%eax
		je     _086b0a_jump
		mov    _0c161e_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _086b0a_jump
		inc    %edx

	_086b0a_jump:
		dec    %edx

	_086b0b_jump:
		mov    0x00001c(%ecx),%eax
		cmp    %eax,%edx
		jg     _086b1d_jump
		xor    %edi,%edi
		cmp    %eax,%edx
		jne    _086b1d_jump

	_086b18_jump:
		mov    $0x000001,%esi

	_086b1d_jump:
		test   %esi,%esi
		je     _086b2c_jump
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _086b47_func
		mov    %eax,%edi

	_086b2c_jump:
		mov    0x000014(%esp),%eax
		test   %eax,%eax
		je     _086b38_jump
		sub    %edi,%eax
		mov    %eax,%edi

	_086b38_jump:
		mov    %edi,%eax
		mov    %edi,0x000020(%ecx)
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_086b47_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %ebp
		mov    0x000008(%eax),%ecx
		mov    0x000008(%edx),%esi
		xor    %ebx,%ebx
		cmp    %esi,%ecx
		jl     _086b6b_jump
		jne    _086b70_jump
		mov    0x000004(%eax),%ecx
		mov    0x000004(%edx),%ebp
		cmp    %ebp,%ecx
		jl     _086b6b_jump
		jne    _086b70_jump
		mov    (%eax),%eax
		cmp    (%edx),%eax
		jge    _086b70_jump

	_086b6b_jump:
		mov    $0x000001,%ebx

	_086b70_jump:
		mov    %ebx,%eax
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_086b77_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%eax
		cmp    $0x00a8c0,%edx
		jae    _086ba4_jump
		test   %ebx,%ebx
		jle    _086ba4_jump
		lea    0x015180(%edx),%esi
		sub    %ebx,%esi
		xor    %edx,%edx
		mov    $0x015180,%ebx
		mov    %esi,%eax
		div    %ebx
		add    %eax,%edi
		dec    %edi
		jmp    _086bb3_jump

	_086ba4_jump:
		mov    $0x015180,%ebx
		sub    %eax,%esi
		xor    %edx,%edx
		mov    %esi,%eax
		div    %ebx
		add    %eax,%edi

	_086bb3_jump:
		mov    $0x015180,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %edx,%ebx
		mov    $0x000e10,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		xor    %edx,%edx
		mov    %eax,0x000008(%ecx)
		mov    %ebx,%eax
		div    %esi
		mov    %edx,%ebx
		mov    $0x00003c,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		xor    %edx,%edx
		mov    %eax,0x000004(%ecx)
		mov    %ebx,%eax
		div    %esi
		mov    $0x00016e,%ebx
		mov    %edi,%eax
		mov    %edx,(%ecx)
		xor    %edx,%edx
		div    %ebx
		mov    %eax,%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    %edi,%ebx
		sub    %eax,%ebx
		test   %edx,%edx
		jbe    _086c1a_jump
		lea    -0x000001(%edx),%eax
		shr    $0x000002,%eax
		sub    %eax,%ebx

	_086c1a_jump:
		lea    0x00076c(%edx),%eax
		call   _086730_func
		add    $0x00016d,%eax

	_086c2a_jump:
		cmp    %eax,%ebx
		jb     _086c33_jump
		inc    %edx
		sub    %eax,%ebx
		jmp    _086c2a_jump

	_086c33_jump:
		mov    $_0c161c_data,%esi
		mov    %edx,0x000014(%ecx)
		lea    0x00076c(%edx),%eax
		mov    %ebx,0x00001c(%ecx)
		call   _086730_func
		test   %eax,%eax
		je     _086c52_jump
		mov    $_0c1636_data,%esi

	_086c52_jump:
		mov    $0x00001f,%ebp
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %ebp
		mov    %eax,%edx
		mov    (%esi,%edx,2),%edx
		sar    $0x000010,%edx
		cmp    %edx,%ebx
		jb     _086c6a_jump
		inc    %eax

	_086c6a_jump:
		mov    %eax,0x000010(%ecx)
		movswl (%esi,%eax,2),%eax
		sub    %eax,%ebx
		xor    %edx,%edx
		inc    %ebx
		lea    0x000001(%edi),%eax
		mov    %ebx,0x00000c(%ecx)
		mov    $0x000007,%ebx
		div    %ebx
		mov    %ecx,%eax
		mov    %edx,0x000018(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_086d0b_jump:
		mov    _0bf9f2_data,%ah
		test   $0x000001,%ah
		je     _086d1b_jump
		test   $0x000002,%ah
		jne    _086d22_jump

	_086d1b_jump:
		orb    $0x000002,_0bf9f2_data

	_086d22_jump:
		ret    



_086d23_func:
		mov    $_0c14c4_data,%eax
		call   _084880_func
		test   %eax,%eax
		je     _086d0b_jump
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    $_0bf9a0_data,%ebx
		mov    %edx,_0bf9a8_data
		mov    $_0bf9ac_data,%edx
		call   _086d8c_func
		mov    %eax,%ecx
		mov    (%eax),%ah
		test   %ah,%ah
		jne    _086fb9_jump
		mov    %ah,_0bf9cb_data
		jmp    _08707d_jump



_086d68_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ecx
		xor    %ebx,%ebx

	_086d6e_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000030,%edx
		jl     _086d87_jump
		cmp    $0x000039,%edx
		jg     _086d87_jump
		imul   $0x00000a,%ebx,%ebx
		add    %ebx,%edx
		inc    %eax
		lea    -0x000030(%edx),%ebx
		jmp    _086d6e_jump

	_086d87_jump:
		mov    %ebx,(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_086d8c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,0x000010(%esp)
		xor    %eax,%eax
		mov    0x000000(%ebp),%al
		cmp    $0x00003a,%eax
		jne    _086da4_jump
		inc    %ebp

	_086da4_jump:
		mov    %ebp,%esi

	_086da6_jump:
		mov    0x000000(%ebp),%dl
		test   %dl,%dl
		je     _086dcd_jump
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x00002c,%eax
		je     _086dcd_jump
		cmp    $0x00002d,%eax
		je     _086dcd_jump
		cmp    $0x00002b,%eax
		je     _086dcd_jump
		cmp    $0x000030,%eax
		jl     _086dca_jump
		cmp    $0x000039,%eax
		jle    _086dcd_jump

	_086dca_jump:
		inc    %ebp
		jmp    _086da6_jump

	_086dcd_jump:
		mov    %ebp,%eax
		sub    %esi,%eax
		mov    %eax,0x00000c(%esp)
		cmp    $0x00001e,%eax
		jle    _086de2_jump
		movl   $0x00001e,0x00000c(%esp)

	_086de2_jump:
		mov    0x00000c(%esp),%ecx
		mov    0x000010(%esp),%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x00000c(%esp),%ecx
		lea    (%edi,%ecx,1),%eax
		movb   $0x000000,(%eax)
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    %dl,%al
		lea    0x000001(%ebp),%edx
		cmp    $0x00002d,%eax
		jne    _086e1f_jump
		mov    $0x000001,%ecx
		jmp    _086e24_jump

	_086e1f_jump:
		cmp    $0x00002b,%eax
		jne    _086e26_jump

	_086e24_jump:
		mov    %edx,%ebp

	_086e26_jump:
		mov    0x000000(%ebp),%al
		and    $0x0000ff,%eax
		cmp    $0x000030,%eax
		jl     _086eab_jump
		cmp    $0x000039,%eax
		jg     _086eab_jump
		lea    0x000008(%esp),%edx
		xor    %esi,%esi
		mov    %ebp,%eax
		mov    %esi,(%esp)
		mov    %esi,0x000004(%esp)
		mov    %esi,0x000008(%esp)
		call   _086d68_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebp
		cmp    $0x00003a,%edx
		jne    _086e7e_jump
		lea    0x000004(%esp),%edx
		inc    %eax
		call   _086d68_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebp
		cmp    $0x00003a,%edx
		jne    _086e7e_jump
		mov    %esp,%edx
		inc    %eax
		call   _086d68_func
		mov    %eax,%ebp

	_086e7e_jump:
		mov    0x000008(%esp),%esi
		mov    %esi,%eax
		shl    $0x000004,%eax
		sub    %esi,%eax
		mov    0x000004(%esp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    %esi,%eax
		shl    $0x000004,%eax
		sub    %esi,%eax
		mov    (%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %edx,(%ebx)
		test   %ecx,%ecx
		je     _086eab_jump
		neg    %edx
		mov    %edx,(%ebx)

	_086eab_jump:
		mov    %ebp,%eax
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_086eb5_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%ebx
		mov    %edx,%ecx
		xor    %eax,%eax
		mov    (%ebx),%al
		mov    $0xffffffff,%esi
		cmp    $0x00004a,%eax
		jne    _086ed4_jump
		mov    $0x000001,%esi
		add    %esi,%ebx

	_086ed4_jump:
		xor    %eax,%eax
		mov    (%ebx),%al
		cmp    $0x00004d,%eax
		jne    _086ee0_jump
		inc    %ebx
		xor    %esi,%esi

	_086ee0_jump:
		lea    0x00000c(%esp),%edx
		mov    %ebx,%eax
		mov    %esi,0x000020(%ecx)
		call   _086d68_func
		mov    %eax,%edx
		mov    %eax,%ebx
		test   %esi,%esi
		je     _086eff_jump
		mov    0x00000c(%esp),%eax
		mov    %eax,0x00001c(%ecx)
		jmp    _086f4c_jump

	_086eff_jump:
		mov    0x00000c(%esp),%eax
		dec    %eax
		mov    %eax,0x000010(%ecx)
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00002e,%eax
		jne    _086f45_jump
		lea    0x000001(%edx),%eax
		lea    0x00000c(%esp),%edx
		call   _086d68_func
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %eax,0x00000c(%ecx)
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00002e,%eax
		jne    _086f45_jump
		lea    0x000001(%edx),%eax
		lea    0x00000c(%esp),%edx
		call   _086d68_func
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %eax,0x000018(%ecx)

	_086f45_jump:
		movl   $0x000000,0x00001c(%ecx)

	_086f4c_jump:
		mov    $0x000002,%edx
		xor    %esi,%esi
		xor    %eax,%eax
		mov    %edx,0x000008(%esp)
		mov    %esi,(%esp)
		mov    %esi,0x000004(%esp)
		mov    (%ebx),%al
		cmp    $0x00002f,%eax
		jne    _086f9d_jump
		lea    0x000008(%esp),%edx
		lea    0x000001(%ebx),%eax
		call   _086d68_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebx
		cmp    $0x00003a,%edx
		jne    _086f9d_jump
		lea    0x000004(%esp),%edx
		inc    %eax
		call   _086d68_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebx
		cmp    $0x00003a,%edx
		jne    _086f9d_jump
		mov    %esp,%edx
		inc    %eax
		call   _086d68_func
		mov    %eax,%ebx

	_086f9d_jump:
		mov    (%esp),%eax
		mov    %eax,(%ecx)
		mov    0x000004(%esp),%eax
		mov    %eax,0x000004(%ecx)
		mov    0x000008(%esp),%eax
		mov    %eax,0x000008(%ecx)
		mov    %ebx,%eax
		add    $0x000010,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_086fb9_jump:
		mov    $0x000001,%ebx
		mov    $_0bf9cb_data,%edx
		mov    _0bf9a0_data,%eax
		mov    %ebx,_0bf9a8_data
		sub    $0x000e10,%eax
		mov    %esp,%ebx
		mov    %eax,(%esp)
		mov    %ecx,%eax
		call   _086d8c_func
		mov    (%esp),%ecx
		mov    _0bf9a0_data,%ebx
		sub    %ecx,%ebx
		mov    %ebx,_0bf9a4_data
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    %eax,%edx
		cmp    $0x00002c,%ebx
		jne    _087008_jump
		mov    $_0bf958_data,%edx
		inc    %eax
		call   _086eb5_func
		mov    %eax,%edx

	_087008_jump:
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00002c,%eax
		jne    _08707d_jump
		lea    0x000001(%edx),%eax
		mov    $_0bf97c_data,%edx
		call   _086eb5_func
		mov    _0bf9a4_data,%eax
		mov    %eax,%edx
		mov    $0x000e10,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0bf984_data,%esi
		sub    %eax,%esi
		mov    _0bf9a4_data,%eax
		mov    %eax,%edx
		mov    $0x00003c,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0bf980_data,%edi
		mov    _0bf9a4_data,%eax
		sub    %edx,%edi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0bf97c_data,%ebp
		mov    %esi,_0bf984_data
		sub    %edx,%ebp
		mov    %edi,_0bf980_data
		mov    %ebp,_0bf97c_data

	_08707d_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_087088_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		mov    $0x000000,%dl
		ftst   
		fnstsw %ax
		sahf   
		jae    _08709d_jump
		fchs   
		not    %dl

	_08709d_jump:
		fld1   
		fcom   %st(1)
		fnstsw %ax
		and    $0x004100,%ax
		je     _0870ce_jump
		fxch   %st(1)
		testb  $0x000001,_0bd884_data
		jne    _0870b8_jump
		fpatan 
		jmp    _0870bd_jump

	_0870b8_jump:
		call   _087a14_func

	_0870bd_jump:
		mov    $0x000002,%ax
		mov    %ax,-0x000002(%ebp)
		fldpi  
		fidivs -0x000002(%ebp)
		fsubp  %st,%st(1)
		jmp    _0870e0_jump

	_0870ce_jump:
		testb  $0x000001,_0bd884_data
		jne    _0870db_jump
		fpatan 
		jmp    _0870e0_jump

	_0870db_jump:
		call   _087a14_func

	_0870e0_jump:
		cmp    $0x000000,%dl
		je     _0870e7_jump
		fchs   

	_0870e7_jump:
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    



_0871c7_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		push   %eax
		cmp    _0bd7fc_data,%eax
		jb     _087232_jump
		cmpb   $0x000000,_0bd816_data
		jne    _087244_jump
		mov    (%esp),%ebp
		add    $0x00000f,%ebp
		shr    $0x000004,%ebp
		test   %ebp,%ebp
		jne    _0871f2_jump
		mov    $0xfffffff,%ebp

	_0871f2_jump:
		xor    %ebx,%ebx
		mov    %ds,%ax
		mov    %ax,%bx
		mov    $0x0000ed,%ah
		int    $0x000021
		shl    $0x00001f,%eax
		and    $0x00ffff,%edi
		or     %eax,%edi
		mov    %edi,%eax
		test   %edi,%edi
		jge    _08721f_jump
		mov    %ebp,%ebx
		mov    %edi,%es
		mov    $0x00004a,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     _087232_jump

	_08721f_jump:
		mov    %ds,%ax
		mov    %ebp,%ebx

	_087224_jump:
		mov    %eax,%es
		mov    $0x00004a,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    _087279_jump

	_087232_jump:
		call   _083a70_func
		movl   $0x000005,(%eax)
		mov    $0xffffffff,%eax
		jmp    _087287_jump

	_087244_jump:
		mov    (%esp),%ebx
		add    $0x000fff,%ebx
		shr    $0x00000c,%ebx
		test   %ebx,%ebx
		jne    _087259_jump
		mov    $0x0fffff,%ebx

	_087259_jump:
		xor    %eax,%eax
		mov    _0bd816_data,%al
		cmp    $0x000001,%eax
		jne    _087274_jump
		xor    %eax,%eax
		mov    _0bd817_data,%al
		cmp    $0x000001,%eax
		jne    _087274_jump
		shl    $0x000008,%ebx

	_087274_jump:
		mov    %ds,%ax
		jmp    _087224_jump

	_087279_jump:
		mov    (%esp),%ebx
		mov    _0bd7e8_data,%eax
		mov    %ebx,_0bd7e8_data

	_087287_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_087292_jump:
		ret    



_087294_func:
		push   %ax
		finit  
		fld1   
		fldz   
		fdivrp %st,%st(1)
		fld    %st(0)
		fchs   
		fcompp 
		fnstsw %ax
		mov    $0x000002,%al
		sahf   
		je     _0872ae_jump
		mov    $0x000003,%al

	_0872ae_jump:
		finit  
		fldcw  (%esp)
		xchg   %ax,(%esp)
		pop    %ax
		ret    



_0872bb_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xbff00000,%ecx
		mov    (%eax),%edi
		mov    0x000004(%eax),%esi
		xor    %ebx,%ebx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _081794_func
		jle    _0872f0_jump
		mov    $0x3ff00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _081794_func
		jge    _0872f0_jump
		mov    $0x000001,%eax
		jmp    _0872f2_jump

	_0872f0_jump:
		xor    %eax,%eax

	_0872f2_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0872fe_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ecx,(%esp)
		mov    %ebx,%eax
		test   %edx,%edx
		jge    _087317_jump
		mov    $0x00002d,%cl
		neg    %esi
		jmp    _087319_jump

	_087317_jump:
		mov    $0x00002b,%cl

	_087319_jump:
		mov    $0x000064,%ebx
		mov    $0x000003,%edx
		cmp    %ebx,%esi
		jge    _08733c_jump
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		cmp    %ebx,%esi
		jge    _08733c_jump
		mov    $0x000001,%edx
		mov    %edx,%ebx

	_08733c_jump:
		test   %eax,%eax
		jne    _08734c_jump
		mov    $0x000002,%eax
		cmp    $0x000003,%edx
		jne    _08734c_jump
		mov    %edx,%eax

	_08734c_jump:
		lea    0x000001(%eax),%ebp
		cmp    (%esp),%ebp
		jg     _087398_jump
		cmp    %eax,%edx
		jg     _087395_jump
		mov    %cl,(%edi)

	_08735a_jump:
		inc    %edi
		cmp    %edx,%eax
		jle    _087365_jump
		dec    %eax
		movb   $0x000030,(%edi)
		jmp    _08735a_jump

	_087365_jump:
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esi,%edx
		add    $0x000030,%eax
		sar    $0x00001f,%edx
		mov    %al,(%edi)
		mov    %esi,%eax
		idiv   %ebx
		mov    %edx,%esi
		mov    %ebx,%eax
		mov    %ebx,%edx
		mov    $0x00000a,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		inc    %edi
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _087365_jump
		jmp    _087398_jump

	_087395_jump:
		lea    0x000001(%edx),%ebp

	_087398_jump:
		mov    %ebp,%eax
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi

	_08739f_jump:
		pop    %esi
		ret    



_0873a1_func:
		push   %esi
		mov    %ebx,%esi
		test   %ecx,%ecx
		jne    _0873b6_jump
		test   %ebx,%ebx
		jg     _0873b6_jump
		movb   $0x000030,(%eax)
		inc    %eax
		movb   $0x00002e,(%eax)
		inc    %eax
		pop    %esi
		ret    

	_0873b6_jump:
		test   %esi,%esi
		jle    _0873c7_jump
		mov    (%edx),%bl
		test   %bl,%bl
		je     _0873c7_jump
		inc    %edx
		dec    %esi
		mov    %bl,(%eax)
		inc    %eax
		jmp    _0873b6_jump

	_0873c7_jump:
		test   %esi,%esi
		jle    _0873d4_jump

	_0873cb_jump:
		dec    %esi
		movb   $0x000030,(%eax)
		inc    %eax
		test   %esi,%esi
		jg     _0873cb_jump

	_0873d4_jump:
		movb   $0x00002e,(%eax)
		inc    %eax
		test   %ecx,%ecx
		jle    _0873e8_jump

	_0873dc_jump:
		test   %esi,%esi
		je     _0873e8_jump
		inc    %esi
		movb   $0x000030,(%eax)
		inc    %eax
		dec    %ecx
		jne    _0873dc_jump

	_0873e8_jump:
		test   %ecx,%ecx
		jle    _08739f_jump

	_0873ec_jump:
		mov    (%edx),%bh
		test   %bh,%bh
		je     _0873f9_jump
		inc    %edx
		mov    %bh,(%eax)
		inc    %eax
		dec    %ecx
		jne    _0873ec_jump

	_0873f9_jump:
		test   %ecx,%ecx
		je     _08739f_jump
		dec    %ecx
		movb   $0x000030,(%eax)
		inc    %eax
		jmp    _0873f9_jump



_087404_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		cmp    %ebx,%edx
		je     _08746d_jump
		mov    %edi,-0x000014(%ebp)
		mov    0x000001(%eax),%al
		lea    (%ebx,%edi,1),%edx
		mov    %al,-0x000010(%ebp)
		lea    (%esi,%edi,1),%eax

	_087424_jump:
		dec    %eax
		dec    %edx
		mov    (%eax),%cl
		dec    %esi
		mov    %cl,(%edx)
		mov    -0x000014(%ebp),%ecx
		dec    %ebx
		cmp    %ecx,%eax
		jne    _087424_jump
		xor    %ecx,%eax
		mov    (%edi),%al
		cmp    $0x00002e,%eax
		jne    _087443_jump
		dec    %ebx
		movb   $0x000030,(%edi,%ebx,1)
		jmp    _087461_jump

	_087443_jump:
		cmp    $0x00002b,%eax
		je     _08744d_jump
		cmp    $0x00002d,%eax
		jne    _087461_jump

	_08744d_jump:
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		cmp    $0x00002e,%eax
		jne    _087461_jump
		movb   $0x000030,(%edi,%ebx,1)
		dec    %ebx
		mov    (%edi),%dl
		mov    %dl,(%edi,%ebx,1)

	_087461_jump:
		mov    $0x000020,%edx
		mov    %edi,%eax
		call   _07c0b0_func

	_08746d_jump:
		lea    -0x00000c(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_087475_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000034,%esp
		mov    0x000008(%ebp),%edi
		mov    %eax,-0x000020(%ebp)
		mov    %edx,%esi
		mov    %ebx,-0x000018(%ebp)
		mov    %cl,-0x00000c(%ebp)
		mov    0x000018(%ebp),%cl
		lea    -0x00003c(%ebp),%ebx
		mov    (%edx),%eax
		mov    0x000004(%edx),%edx
		call   _087a48_func
		test   %eax,%eax
		je     _0874bb_jump
		mov    -0x000020(%ebp),%eax
		xor    %esi,%esi
		jmp    _0874ae_jump

	_0874a6_jump:
		cmp    %edi,%esi
		jge    _0874ac_jump
		mov    %ch,(%eax)

	_0874ac_jump:
		inc    %eax
		inc    %esi

	_0874ae_jump:
		mov    -0x00003c(%esi,%ebp,1),%ch
		test   %ch,%ch
		jne    _0874a6_jump
		jmp    _087654_jump

	_0874bb_jump:
		mov    %cl,%al
		mov    %cl,-0x000010(%ebp)
		cmp    $0x000047,%eax
		jne    _087517_jump
		mov    (%esi),%eax
		mov    0x000004(%esi),%edx
		call   _08509d_func
		mov    %edx,%ebx
		test   %edx,%edx
		je     _08750f_jump
		call   _087adc_func
		mov    %edx,%ebx
		call   _087b06_func
		call   _07c19c_func
		cmp    $0xfffffffc,%eax
		jl     _0874f0_jump
		cmp    -0x000018(%ebp),%eax
		jl     _0874f6_jump

	_0874f0_jump:
		movb   $0x000045,-0x000010(%ebp)
		jmp    _087517_jump

	_0874f6_jump:
		test   %ebx,%ebx
		jl     _0874fb_jump
		inc    %eax

	_0874fb_jump:
		mov    $0x000046,%dl
		mov    -0x000018(%ebp),%ebx
		mov    %dl,-0x000010(%ebp)
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    %ebx,-0x000018(%ebp)
		mov    %eax,0x00000c(%ebp)
		jmp    _087517_jump

	_08750f_jump:
		mov    $0x000046,%ah
		mov    %edx,0x00000c(%ebp)
		mov    %ah,-0x000010(%ebp)

	_087517_jump:
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		cmp    $0x000045,%eax
		jne    _08754b_jump
		mov    -0x000018(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		neg    %eax
		cmp    %edx,%eax
		jge    _087537_jump
		mov    -0x000018(%ebp),%eax
		add    $0x000002,%eax
		cmp    %edx,%eax
		jg     _08754b_jump

	_087537_jump:
		mov    $0x00002a,%edx
		mov    -0x000020(%ebp),%eax
		mov    %edi,%ebx
		call   _07c0b0_func
		jmp    _087668_jump

	_08754b_jump:
		mov    -0x000018(%ebp),%eax
		mov    %eax,-0x000014(%ebp)
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x000045,%eax
		jne    _087571_jump
		mov    0x00000c(%ebp),%ecx
		test   %ecx,%ecx
		jle    _087567_jump
		mov    -0x000018(%ebp),%eax
		inc    %eax
		jmp    _08756e_jump

	_087567_jump:
		jge    _087571_jump
		mov    -0x000018(%ebp),%eax
		add    %ecx,%eax

	_08756e_jump:
		mov    %eax,-0x000014(%ebp)

	_087571_jump:
		mov    0x000004(%esi),%edx
		mov    (%esi),%eax
		mov    %edx,-0x00001c(%ebp)
		test   %edx,%edx
		je     _08759b_jump
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		cmp    $0x000045,%edx
		je     _08759b_jump
		mov    0x00000c(%ebp),%ecx
		test   %ecx,%ecx
		je     _08759b_jump
		mov    -0x00001c(%ebp),%edx
		mov    %ecx,%ebx
		call   _087b85_func
		mov    %edx,-0x00001c(%ebp)

	_08759b_jump:
		lea    -0x00003c(%ebp),%edx
		push   %edx
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		push   %edx
		lea    -0x000028(%ebp),%edx
		lea    -0x000024(%ebp),%ecx
		push   %edx
		mov    -0x000014(%ebp),%ebx
		mov    -0x00001c(%ebp),%edx
		call   _087ca7_func
		mov    -0x000020(%ebp),%eax
		mov    -0x000028(%ebp),%esi
		lea    0x000001(%eax),%edx
		test   %esi,%esi
		je     _0875c9_jump
		movb   $0x00002d,(%eax)
		jmp    _0875d2_jump

	_0875c9_jump:
		cmpb   $0x000000,-0x00000c(%ebp)
		je     _0875d4_jump
		movb   $0x00002b,(%eax)

	_0875d2_jump:
		mov    %edx,%eax

	_0875d4_jump:
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		cmp    $0x000045,%edx
		jne    _087627_jump
		mov    0x00000c(%ebp),%edx
		mov    -0x000014(%ebp),%ecx
		mov    %edx,%ebx
		sub    %edx,%ecx
		lea    -0x00003c(%ebp),%edx
		call   _0873a1_func
		mov    -0x000020(%ebp),%ecx
		mov    %eax,%esi
		sub    %ecx,%esi
		mov    0x000014(%ebp),%cl
		mov    %eax,%ebx
		test   %cl,%cl
		je     _087608_jump
		cmp    %edi,%esi
		jge    _087608_jump
		inc    %esi
		mov    %cl,(%eax)
		inc    %eax

	_087608_jump:
		cmpl   $0x000000,-0x00001c(%ebp)
		je     _087614_jump
		mov    0x00000c(%ebp),%edx
		sub    %edx,-0x000024(%ebp)

	_087614_jump:
		mov    0x000010(%ebp),%ebx
		mov    %edi,%ecx
		mov    -0x000024(%ebp),%edx
		sub    %esi,%ecx
		call   _0872fe_func
		add    %eax,%esi
		jmp    _087654_jump

	_087627_jump:
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		sub    %ebx,%edx
		mov    -0x000024(%ebp),%ebx
		mov    -0x000014(%ebp),%ecx
		inc    %ebx
		add    %ecx,%ebx
		add    %ebx,%edx
		cmp    %edx,%edi
		jge    _087642_jump
		lea    0x000001(%edi),%esi
		jmp    _087654_jump

	_087642_jump:
		mov    -0x000024(%ebp),%ebx
		lea    -0x00003c(%ebp),%edx
		mov    -0x000020(%ebp),%esi
		call   _0873a1_func
		sub    %esi,%eax
		mov    %eax,%esi

	_087654_jump:
		cmp    %edi,%esi
		jg     _087537_jump
		mov    -0x000020(%ebp),%eax
		mov    %edi,%ebx
		mov    %esi,%edx
		call   _087404_func

	_087668_jump:
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    $0x000014



_087671_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000028,%esp
		push   %edx
		mov    %eax,-0x000018(%ebp)

	_08767f_jump:
		mov    (%eax),%bl
		xor    %edx,%edx
		mov    %bl,%dl
		cmp    $0x000020,%edx
		je     _087694_jump
		cmp    $0x000009,%edx
		jl     _087697_jump
		cmp    $0x00000d,%edx
		jg     _087697_jump

	_087694_jump:
		inc    %eax
		jmp    _08767f_jump

	_087697_jump:
		xor    %cl,%cl
		and    $0x0000ff,%ebx
		lea    0x000001(%eax),%edx
		cmp    $0x00002b,%ebx
		je     _0876ae_jump
		cmp    $0x00002d,%ebx
		jne    _0876b0_jump
		mov    $0x000001,%cl

	_0876ae_jump:
		mov    %edx,%eax

	_0876b0_jump:
		xor    %ebx,%ebx
		mov    $0x000030,%dh
		mov    %ebx,-0x000014(%ebp)

	_0876b7_jump:
		mov    (%eax),%dl
		mov    %cl,%ch
		movzbl %dl,%esi
		and    $0x000008,%ch
		inc    %eax
		cmp    $0x00002e,%esi
		jne    _0876d3_jump
		movzbl %ch,%esi
		test   %esi,%esi
		jne    _087700_jump
		or     $0x000008,%cl
		jmp    _0876b7_jump

	_0876d3_jump:
		cmp    $0x000030,%esi
		jl     _087700_jump
		cmp    $0x000039,%esi
		jg     _087700_jump
		movzbl %ch,%esi
		test   %esi,%esi
		je     _0876e7_jump
		incl   -0x000014(%ebp)

	_0876e7_jump:
		or     %dl,%dh
		movzbl %dh,%esi
		cmp    $0x000030,%esi
		je     _0876fb_jump
		cmp    $0x000011,%ebx
		jge    _0876fa_jump
		mov    %dl,-0x000038(%ebx,%ebp,1)

	_0876fa_jump:
		inc    %ebx

	_0876fb_jump:
		or     $0x000004,%cl
		jmp    _0876b7_jump

	_087700_jump:
		mov    %cl,%dh
		and    $0x000004,%dh
		movzbl %dh,%edi
		xor    %esi,%esi
		test   %edi,%edi
		je     _087796_jump
		and    $0x0000ff,%edx
		cmp    $0x000065,%edx
		je     _087726_jump
		cmp    $0x000045,%edx
		jne    _087792_jump

	_087726_jump:
		lea    -0x000001(%eax),%edx
		mov    %edx,-0x00001c(%ebp)
		mov    (%eax),%dl
		lea    0x000001(%eax),%edi
		and    $0x0000ff,%edx
		cmp    $0x00002b,%edx
		je     _087744_jump
		cmp    $0x00002d,%edx
		jne    _087746_jump
		or     $0x000002,%cl

	_087744_jump:
		mov    %edi,%eax

	_087746_jump:
		and    $0x0000fb,%cl

	_087749_jump:
		mov    (%eax),%dl
		and    $0x0000ff,%edx
		cmp    $0x000030,%edx
		jl     _087771_jump
		cmp    $0x000039,%edx
		jg     _087771_jump
		cmp    $0x0003e8,%esi
		jge    _08776b_jump
		imul   $0x00000a,%esi,%esi
		add    %esi,%edx
		lea    -0x000030(%edx),%esi

	_08776b_jump:
		or     $0x000004,%cl
		inc    %eax
		jmp    _087749_jump

	_087771_jump:
		mov    %cl,%dl
		and    $0x000002,%dl
		and    $0x0000ff,%edx
		je     _087780_jump
		neg    %esi

	_087780_jump:
		mov    %cl,%dl
		and    $0x000004,%dl
		and    $0x0000ff,%edx
		jne    _087793_jump
		mov    -0x00001c(%ebp),%eax
		jmp    _087793_jump

	_087792_jump:
		dec    %eax

	_087793_jump:
		mov    %eax,-0x000018(%ebp)

	_087796_jump:
		sub    -0x000014(%ebp),%esi
		cmp    $0x000011,%ebx
		jle    _0877a8_jump
		sub    $0x000011,%ebx
		add    %ebx,%esi
		mov    $0x000011,%ebx

	_0877a8_jump:
		test   %ebx,%ebx
		jle    _0877bb_jump
		xor    %eax,%eax
		mov    -0x000039(%ebx,%ebp,1),%al
		cmp    $0x000030,%eax
		jne    _0877bb_jump
		inc    %esi
		dec    %ebx
		jmp    _0877a8_jump

	_0877bb_jump:
		test   %ebx,%ebx
		jne    _0877ca_jump
		mov    %ebx,-0x000024(%ebp)
		mov    %ebx,-0x000020(%ebp)
		jmp    _087863_jump

	_0877ca_jump:
		xor    %ah,%ah
		lea    -0x000024(%ebp),%edx
		mov    %ah,-0x000038(%ebx,%ebp,1)
		lea    -0x000038(%ebp),%eax
		call   _086694_func
		lea    -0x000001(%esi,%ebx,1),%eax
		cmp    $0x000134,%eax
		jle    _08781d_jump
		call   _082fc5_func
		mov    %cl,%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _08780b_jump
		mov    _0c15b0_data,%eax
		mov    _0c15b4_data,%edx
		call   _07c6ce_func
		mov    %eax,-0x000024(%ebp)
		jmp    _087860_jump

	_08780b_jump:
		mov    _0c15b0_data,%eax
		mov    %eax,-0x000024(%ebp)
		mov    _0c15b4_data,%eax
		mov    %eax,-0x000020(%ebp)
		jmp    _087863_jump

	_08781d_jump:
		cmp    $0xfffffecc,%eax
		jge    _087830_jump
		xor    %edx,%edx
		call   _082fc5_func
		mov    %edx,-0x000024(%ebp)
		jmp    _087860_jump

	_087830_jump:
		test   %esi,%esi
		je     _087847_jump
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %esi,%ebx
		call   _087b85_func
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000020(%ebp)

	_087847_jump:
		mov    %cl,%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _087863_jump
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _07c6ce_func
		mov    %eax,-0x000024(%ebp)

	_087860_jump:
		mov    %edx,-0x000020(%ebp)

	_087863_jump:
		mov    -0x00003c(%ebp),%edi
		test   %edi,%edi
		je     _08786f_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,(%edi)

	_08786f_jump:
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_087883_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %ds,%edx
		call   _087e88_func
		test   %eax,%eax
		jne    _08789d_jump
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   _07c069_func

	_08789d_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0878a0_func:
		jmp    _087eae_jump



_0878a5_func:
		push   %edx
		cmp    $0x000005,%eax
		jbe    _0878af_jump
		xor    %eax,%eax
		pop    %edx
		ret    

	_0878af_jump:
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $_0bd5bc_data,%eax
		pop    %edx
		ret    



_0878c4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    %edx,%ebx
		cmpl   $0x000000,0x000008(%edx)
		jne    _0878da_jump
		mov    %ebx,%eax
		call   _08387c_func

	_0878da_jump:
		mov    0x00000d(%ebx),%ah
		xor    %edi,%edi
		test   $0x000004,%ah
		je     _0878f6_jump
		mov    %ah,%dl
		and    $0x0000f9,%dl
		mov    %dl,%dh
		or     $0x000002,%dh
		mov    $0x000001,%edi
		mov    %dh,0x00000d(%ebx)

	_0878f6_jump:
		mov    %ecx,%ebp
		xor    %esi,%esi

	_0878fa_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		test   %eax,%eax
		je     _087911_jump
		mov    %ebx,%edx
		inc    %ecx
		call   _07cd1a_func
		cmp    $0xffffffff,%eax
		jne    _0878fa_jump
		mov    %eax,%esi

	_087911_jump:
		test   %edi,%edi
		je     _08792f_jump
		mov    0x00000d(%ebx),%al
		and    $0x0000f9,%al
		mov    %al,%ah
		or     $0x000004,%ah
		mov    %ah,0x00000d(%ebx)
		test   %esi,%esi
		jne    _08792f_jump
		mov    %ebx,%eax
		call   _083912_func
		mov    %eax,%esi

	_08792f_jump:
		test   %esi,%esi
		jne    _087937_jump
		mov    %ecx,%esi
		sub    %ebp,%esi

	_087937_jump:
		mov    %esi,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_08793f_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		cmpl   $0x000000,_0bf950_data
		jne    _087a0a_jump
		mov    _0bd81d_data,%fs
		xor    %ecx,%ecx
		xor    %dl,%dl
		mov    %fs,%eax
		mov    _0bd819_data,%edi
		mov    %eax,%es
		mov    %edi,%eax

	_08796a_jump:
		cmp    %es:(%eax),%dl
		je     _087982_jump

	_08796f_jump:
		mov    %es:(%eax),%dh
		lea    0x000001(%eax),%ebx
		cmp    %dh,%dl
		je     _08797d_jump
		mov    %ebx,%eax
		jmp    _08796f_jump

	_08797d_jump:
		inc    %ecx
		mov    %ebx,%eax
		jmp    _08796a_jump

	_087982_jump:
		sub    %edi,%eax
		jne    _08798b_jump
		mov    $0x000001,%eax

	_08798b_jump:
		call   _08191a_func
		mov    %eax,%edx
		mov    %eax,%ebx
		test   %eax,%eax
		je     _087a0a_jump
		mov    %ecx,%eax
		shl    $0x000002,%eax
		add    $0x000004,%eax
		add    %ecx,%eax
		call   _08191a_func
		test   %eax,%eax
		je     _087a03_jump
		mov    %eax,_0bf950_data
		xor    %esi,%esi
		mov    %fs,%eax
		xor    %ecx,%ecx
		mov    %eax,%es
		mov    %edi,%eax

	_0879be_jump:
		cmpb   $0x000000,%es:(%eax)
		je     _0879de_jump
		mov    _0bf950_data,%edx
		mov    %ebx,(%ecx,%edx,1)

	_0879cd_jump:
		mov    %es:(%eax),%dl
		inc    %eax
		mov    %dl,(%ebx)
		inc    %ebx
		test   %dl,%dl
		jne    _0879cd_jump
		add    $0x000004,%ecx
		inc    %esi
		jmp    _0879be_jump

	_0879de_jump:
		mov    _0bf950_data,%edx
		movl   $0x000000,(%ecx,%edx,1)
		add    $0x000004,%ecx
		add    %ecx,%edx
		mov    %esi,%ebx
		mov    %edx,_0bf954_data
		mov    %edx,%eax
		xor    %edx,%edx
		call   _07c0b0_func
		jmp    _087a0a_jump

	_087a03_jump:
		mov    %edx,%eax
		call   _081a15_func

	_087a0a_jump:
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_087a14_func:
		push   %eax
		sub    $0x000076,%esp
		fstpt  0x00006c(%esp)
		fnsave (%esp)
		fldt   0x00001c(%esp)
		fldt   0x00006c(%esp)
		call   _087ec0_func
		fnstsw %ax
		fstpt  0x00001c(%esp)
		and    $0x0000ff,%ax
		or     0x000004(%esp),%ax
		mov    %ax,0x000004(%esp)
		frstor (%esp)
		add    $0x000076,%esp
		pop    %eax
		ret    



_087a48_func:
		sub    $0x000008,%esp
		mov    %edx,0x000004(%esp)
		mov    %eax,(%esp)
		mov    0x000006(%esp),%eax
		and    $0x007ff0,%eax
		and    $0x00ffff,%eax
		cmp    $0x007ff0,%eax
		jne    _087ac4_jump
		mov    0x000006(%esp),%edx
		xor    %dl,%dl
		mov    %ebx,%eax
		and    $0x000080,%dh
		and    $0x00ffff,%edx
		je     _087a80_jump
		lea    0x000001(%ebx),%eax
		movb   $0x00002d,(%ebx)

	_087a80_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000002(%esp),%dx
		mov    (%esp),%bx
		or     %edx,%ebx
		xor    %edx,%edx
		mov    0x000004(%esp),%dx
		or     %edx,%ebx
		mov    0x000006(%esp),%edx
		xor    %dh,%dh
		and    $0x00000f,%dl
		and    $0x00ffff,%edx
		or     %ebx,%edx
		jne    _087ab3_jump
		mov    _0c14c8_data,%edx
		jmp    _087ab9_jump

	_087ab3_jump:
		mov    _0c14cc_data,%edx

	_087ab9_jump:
		mov    %edx,(%eax)
		mov    $0x000001,%eax
		add    $0x000008,%esp
		ret    

	_087ac4_jump:
		xor    %eax,%eax
		add    $0x000008,%esp
		ret    



_087adc_func:
		push   %ebx
		push   %ecx
		test   %edx,%edx
		jg     _087aef_jump
		mov    $0x00000b,%ebx
		call   _0880c0_func
		pop    %ecx
		pop    %ebx
		ret    

	_087aef_jump:
		mov    $0x1526e50e,%ebx
		mov    $0x3fdbcb7b,%ecx
		call   _088102_func
		call   _07bb4f_func
		pop    %ecx
		pop    %ebx
		ret    



_087b06_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		sub    $0x000008,%esp
		lea    -0x000010(%ebp),%ebx
		call   _085164_func
		test   %edx,%edx
		jge    _087b32_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0xbff00000,%ecx
		xor    %ebx,%ebx
		call   _07b998_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)

	_087b32_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		lea    -0x000008(%ebp),%esp
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_087b3f_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		sub    $0x000008,%esp
		mov    0x000008(%ebp),%esi
		mov    %ebx,-0x00000c(%ebp)
		mov    %ecx,-0x000008(%ebp)
		mov    %edx,%ecx
		cmp    %edx,%eax
		je     _087b6a_jump
		mov    %edx,%ebx
		mov    -0x000008(%ebp),%edx
		sub    %eax,%ebx
		mov    -0x00000c(%ebp),%eax
		call   _087b85_func
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)

	_087b6a_jump:
		lea    -0x00000c(%ebp),%eax
		mov    %esi,%edx
		call   _0882de_func
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _0882a4_func
		lea    -0x000004(%ebp),%esp
		pop    %esi
		pop    %ebp
		ret    $0x000004



_087b85_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)
		mov    %ebx,(%esp)
		mov    _0c1650_data,%ebx
		mov    _0c1654_data,%ecx
		call   _081794_func
		jne    _087bb5_jump
		mov    _0c1664_data,%eax
		mov    _0c1660_data,%ebp
		jmp    _087bd9_jump

	_087bb5_jump:
		mov    0x000004(%esp),%edx
		mov    _0c1658_data,%ebx
		mov    _0c165c_data,%ecx
		mov    %ebp,%eax
		call   _081794_func
		jne    _087bdd_jump
		mov    _0c166c_data,%eax
		mov    _0c1668_data,%ebp

	_087bd9_jump:
		mov    %eax,0x000004(%esp)

	_087bdd_jump:
		mov    (%esp),%edx
		mov    $_0c16a8_data,%esi
		test   %edx,%edx
		jge    _087c14_jump
		mov    %edx,%edi
		neg    %edi
		cmp    $0x000134,%edi
		jle    _087c41_jump
		mov    0x000004(%esp),%edx
		mov    _0c16aa_data,%ebx
		mov    _0c16ae_data,%ecx
		mov    %ebp,%eax
		sub    $0x0000d8,%edi
		call   _07c4c8_func
		jmp    _087c3b_jump

	_087c14_jump:
		mov    %edx,%edi
		cmp    $0x000134,%edx
		jle    _087c41_jump
		mov    0x000004(%esp),%edx
		mov    _0c16aa_data,%ebx
		mov    _0c16ae_data,%ecx
		mov    %ebp,%eax
		sub    $0x0000d8,%edi
		call   _07bb4f_func

	_087c3b_jump:
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)

	_087c41_jump:
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx

	_087c48_jump:
		movswl (%esi),%eax
		cmp    %eax,%edi
		jl     _087c64_jump
		mov    %ecx,%edx
		sub    %eax,%edi
		mov    %ebx,%eax
		mov    0x000006(%esi),%ecx
		mov    0x000002(%esi),%ebx
		call   _07bb4f_func
		mov    %eax,%ebx
		mov    %edx,%ecx

	_087c64_jump:
		test   %edi,%edi
		je     _087c75_jump
		movswl (%esi),%eax
		cmp    $0x000001,%eax
		je     _087c48_jump
		add    $0x00000a,%esi
		jmp    _087c48_jump

	_087c75_jump:
		cmpl   $0x000000,(%esp)
		jge    _087c88_jump
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		call   _07c4c8_func
		jmp    _087c93_jump

	_087c88_jump:
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		call   _07bb4f_func

	_087c93_jump:
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_087ca7_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		push   %eax
		push   %edx
		mov    %ebx,%esi
		mov    %ecx,%edi
		mov    0x000008(%ebp),%eax
		mov    0x000010(%ebp),%ebx
		movl   $0x000000,(%eax)
		mov    -0x000038(%ebp),%eax
		movl   $0x000000,(%ecx)
		call   _087a48_func
		test   %eax,%eax
		je     _087cdb_jump
		mov    0x000010(%ebp),%eax
		jmp    _087e7f_jump

	_087cdb_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %dx,-0x000020(%ebp)
		mov    %bx,-0x00001e(%ebp)
		mov    %dx,-0x00001a(%ebp)
		mov    -0x00003c(%ebp),%edx
		mov    %cx,-0x00001c(%ebp)
		test   %edx,%edx
		je     _087e3a_jump
		jge    _087d15_jump
		mov    0x000008(%ebp),%eax
		movl   $0xffffffff,(%eax)
		mov    -0x000038(%ebp),%eax
		call   _07c6ce_func
		mov    %eax,-0x000038(%ebp)
		mov    %edx,-0x00003c(%ebp)

	_087d15_jump:
		mov    -0x000038(%ebp),%eax
		mov    -0x00003c(%ebp),%edx
		mov    %edi,%ebx
		call   _082dfc_func
		mov    (%edi),%eax
		mov    %eax,-0x000010(%ebp)
		test   %eax,%eax
		jge    _087d30_jump
		neg    %eax
		mov    %eax,-0x000010(%ebp)

	_087d30_jump:
		mov    -0x000010(%ebp),%edx
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		add    $0x000005,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    (%edi),%ecx
		mov    %eax,-0x000010(%ebp)
		test   %ecx,%ecx
		jge    _087d58_jump
		neg    %eax
		mov    %eax,-0x000010(%ebp)

	_087d58_jump:
		mov    -0x000010(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		mov    %eax,(%edi)
		cmp    $0x000046,%edx
		jne    _087d67_jump
		add    %eax,%esi

	_087d67_jump:
		test   %esi,%esi
		jl     _087e00_jump
		cmp    $0x000010,%esi
		jle    _087d79_jump
		mov    $0x000010,%esi

	_087d79_jump:
		lea    -0x000018(%ebp),%ebx
		xor    %ah,%ah
		mov    -0x00003c(%ebp),%edx
		mov    %ah,-0x00000c(%ebp)
		mov    -0x000038(%ebp),%eax
		call   _085164_func
		test   %edx,%edx
		jne    _087d9e_jump
		mov    -0x000010(%ebp),%ecx
		cmp    %ecx,%esi
		jle    _087d9e_jump
		mov    $0x000001,%dl
		mov    %ecx,%esi
		mov    %dl,-0x00000c(%ebp)

	_087d9e_jump:
		lea    -0x000020(%ebp),%eax
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%ecx
		push   %eax
		mov    %esi,%edx
		mov    (%edi),%eax
		call   _087b3f_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _087e00_jump
		mov    (%edi),%ebx
		add    %eax,%ebx
		mov    0x00000c(%ebp),%ecx
		mov    %ebx,(%edi)
		cmp    $0x000046,%ecx
		je     _087dcb_jump
		cmpb   $0x000000,-0x00000c(%ebp)
		je     _087dcd_jump

	_087dcb_jump:
		add    %edx,%esi

	_087dcd_jump:
		cmp    $0x000001,%esi
		jge    _087dd9_jump
		mov    $0x000001,%esi
		jmp    _087de3_jump

	_087dd9_jump:
		cmp    $0x000010,%esi
		jle    _087de3_jump
		mov    $0x000010,%esi

	_087de3_jump:
		lea    -0x000020(%ebp),%eax
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%ecx
		push   %eax
		mov    %esi,%edx
		mov    (%edi),%eax
		call   _087b3f_func
		test   %eax,%eax
		jle    _087e00_jump
		mov    (%edi),%eax
		inc    %eax
		inc    %esi
		mov    %eax,(%edi)

	_087e00_jump:
		mov    -0x000020(%ebp),%edx
		mov    -0x000022(%ebp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		or     %edx,%eax
		mov    -0x00001e(%ebp),%edx
		sar    $0x000010,%edx
		or     %edx,%eax
		mov    -0x00001c(%ebp),%edx
		sar    $0x000010,%edx
		or     %edx,%eax
		jne    _087e3a_jump
		mov    0x000008(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    0x00000c(%ebp),%edx
		movl   $0x000000,(%edi)
		cmp    $0x000046,%edx
		jne    _087e3a_jump
		sub    -0x000010(%ebp),%esi

	_087e3a_jump:
		cmp    $0x000001,%esi
		jge    _087e46_jump
		mov    $0x000001,%esi
		jmp    _087e50_jump

	_087e46_jump:
		cmp    $0x000011,%esi
		jle    _087e50_jump
		mov    $0x000011,%esi

	_087e50_jump:
		lea    -0x000034(%ebp),%edx
		lea    -0x000020(%ebp),%eax
		mov    0x000010(%ebp),%edi
		mov    %esi,%ebx
		lea    -0x000034(%ebp),%esi
		call   _088349_func
		push   %edi

	_087e64_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _087e7c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _087e64_jump

	_087e7c_jump:
		pop    %edi
		mov    %edi,%eax

	_087e7f_jump:
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    $0x00000c



_087e88_func:
		cmpb   $0x000000,_0bfa10_data
		je     _087eab_jump
		and    $0x00ffff,%edx
		push   %edx
		push   %eax
		int3   
		jmp    _087ea2_jump

	_087ea2_jump:
		mov    $0x000001,%eax
		add    $0x000008,%esp
		ret    

	_087eab_jump:
		xor    %eax,%eax
		ret    

	_087eae_jump:
		xor    %eax,%eax
		ret    



_087ec0_func:
		push   %eax
		push   %ecx
		push   %edx
		sub    $0x000024,%esp
		fstpt  0x00000c(%esp)
		fstpt  (%esp)
		mov    0x000004(%esp),%ecx
		add    %ecx,%ecx
		jae    _0880b0_jump
		mov    0x000010(%esp),%eax
		add    %eax,%eax
		jae    _0880b0_jump
		mov    0x000008(%esp),%ecx
		mov    0x000014(%esp),%eax
		and    $0x007fff,%ecx
		je     _0880b0_jump
		and    $0x007fff,%eax
		je     _0880b0_jump
		cmp    $0x007fff,%ecx
		je     _0880b0_jump
		cmp    $0x007fff,%eax
		je     _0880b0_jump
		fldt   0x00000c(%esp)
		fabs   
		fldt   (%esp)
		fabs   
		fnstcw 0x000018(%esp)
		mov    0x000018(%esp),%edx
		or     $0x00033f,%edx
		and    $0x00f3ff,%edx
		mov    %edx,0x00001c(%esp)
		fldcw  0x00001c(%esp)
		xor    %edx,%edx
		fcom   %st(1)
		push   %eax
		fnstsw %ax
		sahf   
		pop    %eax
		jb     _087f50_jump
		fxch   %st(1)
		inc    %edx

	_087f50_jump:
		push   %eax
		mov    $0x00000f,%eax
		call   _083277_func
		pop    %eax
		flds   _0c18a0_data
		fmul   %st(1),%st
		fistpl 0x000020(%esp)
		mov    0x000020(%esp),%ecx
		shl    $0x000004,%ecx
		fildl  0x000020(%esp)
		fmuls  _0c18a4_data
		fld    %st(1)
		fsub   %st(1),%st
		fxch   %st(1)
		fmulp  %st,%st(2)
		fldl   _0c185c_data
		faddp  %st,%st(2)
		push   %eax
		mov    $0x00000f,%eax
		call   _083277_func
		pop    %eax
		fld    %st(0)
		fmul   %st(1),%st
		fld    %st(0)
		fmul   %st(1),%st
		fld    %st(0)
		fmul   %st(1),%st
		fldt   _0c18da_data
		fldt   _0c18d0_data
		fxch   %st(1)
		fmul   %st(2),%st
		fldt   _0c18c6_data
		fxch   %st(2)
		fmul   %st(3),%st
		fldt   _0c18bc_data
		fxch   %st(2)
		fmul   %st(5),%st
		fxch   %st(3)
		fmulp  %st,%st(4)
		fldt   _0c18b2_data
		fxch   %st(3)
		faddp  %st,%st(4)
		mov    0x000014(%esp),%eax
		fldt   _0c18a8_data
		fxch   %st(1)
		shl    $0x000010,%eax
		fmul   %st(6),%st
		fxch   %st(2)
		add    %eax,%eax
		fmul   %st(5),%st
		fxch   %st(3)
		adc    %edx,%edx
		fmulp  %st,%st(5)
		fxch   %st(2)
		mov    0x000008(%esp),%eax
		fmul   %st(5),%st
		fxch   %st(2)
		shl    $0x000010,%eax
		fmulp  %st,%st(5)
		fxch   %st(2)
		faddp  %st,%st(3)
		add    %eax,%eax
		faddp  %st,%st(1)
		adc    %edx,%edx
		faddp  %st,%st(2)
		faddp  %st,%st(1)
		fmul   %st(1),%st
		faddp  %st,%st(1)
		fldt   _0c18e4_data(%ecx)
		faddp  %st,%st(1)
		jmp    *_0c186c_data(,%edx,4)



_088020_func:
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08802b_func:
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_088038_func:
		fldt   _0c188c_data
		fsubp  %st,%st(1)
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08804b_func:
		fldt   _0c188c_data
		fsubp  %st,%st(1)
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_088060_func:
		fldt   _0c1896_data
		fsubp  %st,%st(1)
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_088073_func:
		fldt   _0c1896_data
		fsubp  %st,%st(1)
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_088088_func:
		fldt   _0c1896_data
		faddp  %st,%st(1)
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08809b_func:
		fldt   _0c1896_data
		faddp  %st,%st(1)
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    

	_0880b0_jump:
		fldt   (%esp)
		fldt   0x00000c(%esp)
		fpatan 
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_0880c0_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		mov    %ebx,%eax
		and    $0x00001f,%eax
		cmp    $0x000008,%eax
		je     _0880e0_jump
		test   %edx,%edx
		jne    _0880e0_jump
		or     $0x001080,%ax
		jmp    _0880e4_jump

	_0880e0_jump:
		or     $0x001040,%ax

	_0880e4_jump:
		lea    -0x000008(%ebp),%edx
		call   _082ada_func
		mov    %ebp,%esp
		pop    %ebp
		ret    



_088102_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		test   %edx,%edx
		jg     _088123_jump
		mov    $0x00000a,%ebx
		call   _0880c0_func
		jmp    _088293_jump

	_088123_jump:
		cmpb   $0x000000,_0bd5b9_data
		je     _088138_jump
		mov    %edi,%eax
		call   _08846a_func
		jmp    _088293_jump

	_088138_jump:
		lea    -0x000024(%ebp),%ebx
		mov    %edi,%eax
		mov    $0xbfe00000,%ecx
		call   _082dfc_func
		mov    %eax,%edi
		xor    %ebx,%ebx
		mov    %edx,%esi
		call   _07b998_func
		mov    $0x667f3bcd,%ebx
		mov    $0x3fe6a09e,%ecx
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _081794_func
		jle    _088187_jump
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _07b998_func
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		jmp    _088194_jump

	_088187_jump:
		mov    -0x000024(%ebp),%edx
		mov    -0x000018(%ebp),%edi
		dec    %edx
		mov    -0x000014(%ebp),%esi
		mov    %edx,-0x000024(%ebp)

	_088194_jump:
		mov    $0x3fe00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _07bb4f_func
		mov    $0x3fe00000,%ecx
		xor    %ebx,%ebx
		call   _07b998_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		call   _07c4c8_func
		mov    %eax,-0x000018(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edx,-0x000014(%ebp)
		call   _07bb4f_func
		mov    %eax,%edi
		mov    %edx,%esi
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07bb4f_func
		mov    $0x000002,%ecx
		mov    $_0c1670_data,%ebx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _082f49_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _07bb4f_func
		mov    $0x000003,%ecx
		mov    $_0c1688_data,%ebx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _082f49_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _07c4c8_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		call   _07b998_func
		mov    -0x000024(%ebp),%ebx
		mov    %eax,%edi
		mov    %edx,%esi
		test   %ebx,%ebx
		je     _088297_jump
		mov    %ebx,%eax
		mov    $0xbf2bd010,%ecx
		call   _07b952_func
		mov    $0x5c610ca9,%ebx
		mov    %eax,-0x000020(%ebp)
		mov    %edx,-0x00001c(%ebp)
		call   _07bb4f_func
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07b998_func
		mov    $0x3fe63000,%ecx
		mov    %eax,%edi
		mov    %edx,%esi
		xor    %ebx,%ebx
		mov    -0x000020(%ebp),%eax
		mov    -0x00001c(%ebp),%edx
		call   _07bb4f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07b998_func

	_088293_jump:
		mov    %eax,%edi
		mov    %edx,%esi

	_088297_jump:
		mov    %edi,%eax
		mov    %esi,%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_0882a4_func:
		push   %edi
		push   %ecx
		call   _0883b3_data
		inc    %eax
		lea    (%edi,%eax,8),%edi
		mov    (%edx),%ecx
		mov    0x000004(%edx),%edx
		sub    %eax,%eax

	_0882b6_jump:
		cmp    %cs:(%edi),%edx
		jne    _0882bf_jump
		cmp    %cs:0x000004(%edi),%ecx

	_0882bf_jump:
		jb     _0882c7_jump
		add    $0x000008,%edi
		inc    %eax
		jmp    _0882b6_jump

	_0882c7_jump:
		sub    $0x000008,%edi

	_0882ca_jump:
		cmp    %cs:(%edi),%edx
		jne    _0882d3_jump
		cmp    %cs:0x000004(%edi),%ecx

	_0882d3_jump:
		jae    _0882db_jump
		sub    $0x000008,%edi
		dec    %eax
		jmp    _0882ca_jump

	_0882db_jump:
		pop    %ecx
		pop    %edi
		ret    



_0882de_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		push   %esi
		push   %edx
		mov    %eax,%ebp
		mov    0x000000(%ebp),%ecx
		mov    0x000004(%ebp),%ebx
		mov    %ebx,%ebp
		and    $0xfff00000,%ebp
		xor    %ebp,%ebx
		xor    $0x100000,%ebx
		shr    $0x000014,%ebp
		sub    $0x000433,%ebp
		je     _08833c_jump
		jbe    _088312_jump

	_088309_jump:
		shl    %ecx
		rcl    %ebx
		dec    %ebp
		jne    _088309_jump
		jmp    _08833c_jump

	_088312_jump:
		sub    %eax,%eax
		sub    %esi,%esi

	_088316_jump:
		shr    %ebx
		rcr    %ecx
		rcr    %eax
		adc    %esi,%esi
		inc    %ebp
		jne    _088316_jump
		cmp    $0x80000000,%eax
		jb     _08833c_jump
		jne    _088336_jump
		or     %esi,%esi
		jne    _088336_jump
		test   $0x000001,%ecx
		je     _08833c_jump

	_088336_jump:
		add    $0x000001,%ecx
		adc    $0x000000,%ebx

	_08833c_jump:
		pop    %ebp
		mov    %ecx,0x000000(%ebp)
		mov    %ebx,0x000004(%ebp)
		pop    %esi
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_088349_func:
		push   %ebp
		push   %edi
		push   %ecx
		push   %ebx
		mov    %eax,%ebp
		mov    0x000000(%ebp),%ecx
		mov    0x000004(%ebp),%eax
		mov    %edx,%ebp
		add    %ebx,%ebp
		movb   $0x000000,0x000000(%ebp)
		push   %eax

	_08835e_jump:
		pop    %eax
		mov    $0x002710,%edi
		sub    %edx,%edx
		or     %eax,%eax
		jne    _088371_jump
		or     %ecx,%ecx
		jne    _088373_jump
		push   %eax
		jmp    _088389_jump

	_088371_jump:
		div    %edi

	_088373_jump:
		xchg   %eax,%ecx
		div    %edi
		xchg   %eax,%ecx
		push   %eax
		mov    %edx,%eax
		mov    $0x000064,%dl
		div    %dl
		mov    %ah,%dl
		mov    $0x000000,%ah
		aam    $0x00000a
		xchg   %eax,%edx
		mov    $0x000000,%ah
		aam    $0x00000a

	_088389_jump:
		add    $0x003030,%ax
		add    $0x003030,%dx
		sub    $0x000004,%ebp
		mov    %al,0x000003(%ebp)
		dec    %ebx
		je     _0883ad_jump
		mov    %ah,0x000002(%ebp)
		dec    %ebx
		je     _0883ad_jump
		mov    %dl,0x000001(%ebp)
		dec    %ebx
		je     _0883ad_jump
		mov    %dh,0x000000(%ebp)
		dec    %ebx
		jne    _08835e_jump

	_0883ad_jump:
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %ebp
		ret    

.data

_0883b3_data:
		.ascii  "\xe8\xb0"
		.fill   0xf
		.ascii  "\x01"
		.fill   0x7
		.ascii  "\x0a"
		.fill   0x7
		.ascii  "\x64"
		.fill   0x7
		.ascii  "\xe8\x03"
		.fill   0x6
		.ascii  "\x10\x27"
		.fill   0x6
		.ascii  "\xa0\x86\x01"
		.fill   0x5
		.ascii  "\x40\x42\x0f"
		.fill   0x5

_0883fc_data:
		.ascii  "\x80\x96\x98"
		.fill   0x6
		.ascii  "\xe1\xf5\x05"
		.fill   0x5
		.ascii  "\xca\x9a\x3b\x02"
		.fill   0x4
		.ascii  "\xe4\x0b\x54\x17"
		.fill   0x4
		.ascii  "\xe8\x76\x48\xe8"
		.fill   0x4
		.ascii  "\x10\xa5\xd4\x18\x09\x00\x00\x00"
		.ascii  "\xa0\x72\x4e\xf3\x5a\x00\x00\x00"
		.ascii  "\x40\x7a\x10\x7e\x8d\x03\x00\x00"
		.ascii  "\x80\xc6\xa4\xf2\x86\x23\x00\x00"
		.ascii  "\x00\xc1"
		.ascii   "oxEc"
		.ascii  "\x01\x00\x00\x8a\x5d\xb3\xb6\xe0"
		.ascii  "\x0d\x00\x00\x64\xa7\x04\x23\xc7"
		.ascii  "\x8a\x00\x00\xe8\x89\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff"

_088468_data:
		.ascii  "\x5f\xc3"

.text



_08846a_func:
		fldln2 
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		fyl2x  
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    

.data

_090000_data:
		.ascii  "\x01\x01\x01"
		.fill   0xd

_090010_data:
		.fill   0x4

_090014_data:
		.ascii  "\xff\xff\x00\x00"

_090018_data:
		.fill   0x4

_09001c_data:
		.fill   0x4

_090020_data:
		.fill   0x4

_090024_data:
		.fill   0x4

_090028_data:
		.fill   0xc
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e

_091914_data:
		.fill   0xe

_091922_data:
		.fill   0xc

_09192e_data:
		.fill   0x4

_091932_data:
		.fill   0x4

_091936_data:
		.fill   0x4

_09193a_data:
		.fill   0x4

_09193e_data:
		.fill   0x4

_091942_data:
		.fill   0x4

_091946_data:
		.fill   0x4

_09194a_data:
		.fill   0x10

_09195a_data:
		.fill   0x4
		.ascii  "\x80\x3e\x00\x00\x00\x7d\x00\x00"
		.ascii  "\x80\xbb\x00\x00"

_09196a_data:
		.ascii  "\x00"

_09196b_data:
		.ascii  "\x00"

_09196c_data:
		.ascii  "\x00"

_09196d_data:
		.ascii  "\x00"

_09196e_data:
		.ascii  "\x00"

_09196f_data:
		.fill   0x191

_091b00_data:
		.fill   0x4
		.ascii  "\x40\x01\x00\x00\x80\x02\x00\x00"
		.ascii  "\xc0\x03\x00\x00\x00\x05\x00\x00"
		.ascii  "\x40\x06\x00\x00\x80\x07\x00\x00"
		.ascii  "\xc0\x08\x00\x00\x00\x0a\x00\x00"
		.ascii  "\x40\x0b\x00\x00\x80\x0c\x00\x00"
		.ascii  "\xc0\x0d\x00\x00\x00\x0f\x00\x00"
		.ascii  "\x40\x10\x00\x00\x80\x11\x00\x00"
		.ascii  "\xc0\x12\x00\x00\x00\x14\x00\x00"
		.ascii  "\x40\x15\x00\x00\x80\x16\x00\x00"
		.ascii  "\xc0\x17\x00\x00\x00\x19\x00\x00"
		.ascii  "\x40\x1a\x00\x00\x80\x1b\x00\x00"
		.ascii  "\xc0\x1c\x00\x00\x00\x1e\x00\x00"
		.ascii  "\x40\x1f\x00\x00\x80\x20\x00\x00"
		.ascii  "\xc0\x21\x00\x00\x00\x23\x00\x00"
		.ascii  "\x40\x24\x00\x00\x80\x25\x00\x00"
		.ascii  "\xc0\x26\x00\x00\x00\x28\x00\x00"
		.ascii  "\x40\x29\x00\x00\x80\x2a\x00\x00"
		.ascii  "\xc0\x2b\x00\x00\x00\x2d\x00\x00"
		.ascii  "\x40\x2e\x00\x00\x80\x2f\x00\x00"
		.ascii  "\xc0\x30\x00\x00\x00\x32\x00\x00"
		.ascii  "\x40\x33\x00\x00\x80\x34\x00\x00"
		.ascii  "\xc0\x35\x00\x00\x00\x37\x00\x00"
		.ascii  "\x40\x38\x00\x00\x80\x39\x00\x00"
		.ascii  "\xc0\x3a\x00\x00\x00\x3c\x00\x00"
		.ascii  "\x40\x3d\x00\x00\x80\x3e\x00\x00"
		.ascii  "\xc0\x3f\x00\x00\x00\x41\x00\x00"
		.ascii  "\x40\x42\x00\x00\x80\x43\x00\x00"
		.ascii  "\xc0\x44\x00\x00\x00\x46\x00\x00"
		.ascii  "\x40\x47\x00\x00\x80\x48\x00\x00"
		.ascii  "\xc0\x49\x00\x00\x00\x4b\x00\x00"
		.ascii  "\x40\x4c\x00\x00\x80\x4d\x00\x00"
		.ascii  "\xc0\x4e\x00\x00\x00\x50\x00\x00"
		.ascii  "\x40\x51\x00\x00\x80\x52\x00\x00"
		.ascii  "\xc0\x53\x00\x00\x00\x55\x00\x00"
		.ascii  "\x40\x56\x00\x00\x80\x57\x00\x00"
		.ascii  "\xc0\x58\x00\x00\x00\x5a\x00\x00"
		.ascii  "\x40\x5b\x00\x00\x80\x5c\x00\x00"
		.ascii  "\xc0\x5d\x00\x00\x00\x5f\x00\x00"
		.ascii  "\x40\x60\x00\x00\x80\x61\x00\x00"
		.ascii  "\xc0\x62\x00\x00\x00\x64\x00\x00"
		.ascii  "\x40\x65\x00\x00\x80\x66\x00\x00"
		.ascii  "\xc0\x67\x00\x00\x00\x69\x00\x00"
		.ascii  "\x40\x6a\x00\x00\x80\x6b\x00\x00"
		.ascii  "\xc0\x6c\x00\x00\x00\x6e\x00\x00"
		.ascii  "\x40\x6f\x00\x00\x80\x70\x00\x00"
		.ascii  "\xc0\x71\x00\x00\x00\x73\x00\x00"
		.ascii  "\x40\x74\x00\x00\x80\x75\x00\x00"
		.ascii  "\xc0\x76\x00\x00\x00\x78\x00\x00"
		.ascii  "\x40\x79\x00\x00\x80\x7a\x00\x00"
		.ascii  "\xc0\x7b\x00\x00\x00\x7d\x00\x00"
		.ascii  "\x40\x7e\x00\x00\x80\x7f\x00\x00"
		.ascii  "\xc0\x80\x00\x00\x00\x82\x00\x00"
		.ascii  "\x40\x83\x00\x00\x80\x84\x00\x00"
		.ascii  "\xc0\x85\x00\x00\x00\x87\x00\x00"
		.ascii  "\x40\x88\x00\x00\x80\x89\x00\x00"
		.ascii  "\xc0\x8a\x00\x00\x00\x8c\x00\x00"
		.ascii  "\x40\x8d\x00\x00\x80\x8e\x00\x00"
		.ascii  "\xc0\x8f\x00\x00\x00\x91\x00\x00"
		.ascii  "\x40\x92\x00\x00\x80\x93\x00\x00"
		.ascii  "\xc0\x94\x00\x00\x00\x96\x00\x00"
		.ascii  "\x40\x97\x00\x00\x80\x98\x00\x00"
		.ascii  "\xc0\x99\x00\x00\x00\x9b\x00\x00"
		.ascii  "\x40\x9c\x00\x00\x80\x9d\x00\x00"
		.ascii  "\xc0\x9e\x00\x00\x00\xa0\x00\x00"
		.ascii  "\x40\xa1\x00\x00\x80\xa2\x00\x00"
		.ascii  "\xc0\xa3\x00\x00\x00\xa5\x00\x00"
		.ascii  "\x40\xa6\x00\x00\x80\xa7\x00\x00"
		.ascii  "\xc0\xa8\x00\x00\x00\xaa\x00\x00"
		.ascii  "\x40\xab\x00\x00\x80\xac\x00\x00"
		.ascii  "\xc0\xad\x00\x00\x00\xaf\x00\x00"
		.ascii  "\x40\xb0\x00\x00\x80\xb1\x00\x00"
		.ascii  "\xc0\xb2\x00\x00\x00\xb4\x00\x00"
		.ascii  "\x40\xb5\x00\x00\x80\xb6\x00\x00"
		.ascii  "\xc0\xb7\x00\x00\x00\xb9\x00\x00"
		.ascii  "\x40\xba\x00\x00\x80\xbb\x00\x00"
		.ascii  "\xc0\xbc\x00\x00\x00\xbe\x00\x00"
		.ascii  "\x40\xbf\x00\x00\x80\xc0\x00\x00"
		.ascii  "\xc0\xc1\x00\x00\x00\xc3\x00\x00"
		.ascii  "\x40\xc4\x00\x00\x80\xc5\x00\x00"
		.ascii  "\xc0\xc6\x00\x00\x00\xc8\x00\x00"
		.ascii  "\x40\xc9\x00\x00\x80\xca\x00\x00"
		.ascii  "\xc0\xcb\x00\x00\x00\xcd\x00\x00"
		.ascii  "\x40\xce\x00\x00\x80\xcf\x00\x00"
		.ascii  "\xc0\xd0\x00\x00\x00\xd2\x00\x00"
		.ascii  "\x40\xd3\x00\x00\x80\xd4\x00\x00"
		.ascii  "\xc0\xd5\x00\x00\x00\xd7\x00\x00"
		.ascii  "\x40\xd8\x00\x00\x80\xd9\x00\x00"
		.ascii  "\xc0\xda\x00\x00\x00\xdc\x00\x00"
		.ascii  "\x40\xdd\x00\x00\x80\xde\x00\x00"
		.ascii  "\xc0\xdf\x00\x00\x00\xe1\x00\x00"
		.ascii  "\x40\xe2\x00\x00\x80\xe3\x00\x00"
		.ascii  "\xc0\xe4\x00\x00\x00\xe6\x00\x00"
		.ascii  "\x40\xe7\x00\x00\x80\xe8\x00\x00"
		.ascii  "\xc0\xe9\x00\x00\x00\xeb\x00\x00"
		.ascii  "\x40\xec\x00\x00\x80\xed\x00\x00"
		.ascii  "\xc0\xee\x00\x00\x00\xf0\x00\x00"
		.ascii  "\x40\xf1\x00\x00\x80\xf2\x00\x00"
		.ascii  "\xc0\xf3\x00\x00\x00\xf5\x00\x00"
		.ascii  "\x40\xf6\x00\x00\x80\xf7\x00\x00"
		.ascii  "\xc0\xf8\x00\x00"

_091e20_data:
		.fill   0x4
		.ascii  "\x50\x00\x00\x00\xa0\x00\x00\x00"
		.ascii  "\xf0\x00\x00\x00\x40\x01\x00\x00"
		.ascii  "\x90\x01\x00\x00\xe0\x01\x00\x00"
		.ascii  "\x30\x02\x00\x00\x80\x02\x00\x00"
		.ascii  "\xd0\x02\x00\x00\x20\x03\x00\x00"
		.ascii  "\x70\x03\x00\x00\xc0\x03\x00\x00"
		.ascii  "\x10\x04\x00\x00\x60\x04\x00\x00"
		.ascii  "\xb0\x04\x00\x00\x00\x05\x00\x00"
		.ascii  "\x50\x05\x00\x00\xa0\x05\x00\x00"
		.ascii  "\xf0\x05\x00\x00\x40\x06\x00\x00"
		.ascii  "\x90\x06\x00\x00\xe0\x06\x00\x00"
		.ascii  "\x30\x07\x00\x00\x80\x07\x00\x00"
		.ascii  "\xd0\x07\x00\x00\x20\x08\x00\x00"
		.ascii  "\x70\x08\x00\x00\xc0\x08\x00\x00"
		.ascii  "\x10\x09\x00\x00\x60\x09\x00\x00"
		.ascii  "\xb0\x09\x00\x00\x00\x0a\x00\x00"
		.ascii  "\x50\x0a\x00\x00\xa0\x0a\x00\x00"
		.ascii  "\xf0\x0a\x00\x00\x40\x0b\x00\x00"
		.ascii  "\x90\x0b\x00\x00\xe0\x0b\x00\x00"
		.ascii  "\x30\x0c\x00\x00\x80\x0c\x00\x00"
		.ascii  "\xd0\x0c\x00\x00\x20\x0d\x00\x00"
		.ascii  "\x70\x0d\x00\x00\xc0\x0d\x00\x00"
		.ascii  "\x10\x0e\x00\x00\x60\x0e\x00\x00"
		.ascii  "\xb0\x0e\x00\x00\x00\x0f\x00\x00"
		.ascii  "\x50\x0f\x00\x00\xa0\x0f\x00\x00"
		.ascii  "\xf0\x0f\x00\x00\x40\x10\x00\x00"
		.ascii  "\x90\x10\x00\x00\xe0\x10\x00\x00"
		.ascii  "\x30\x11\x00\x00\x80\x11\x00\x00"
		.ascii  "\xd0\x11\x00\x00\x20\x12\x00\x00"
		.ascii  "\x70\x12\x00\x00\xc0\x12\x00\x00"
		.ascii  "\x10\x13\x00\x00\x60\x13\x00\x00"
		.ascii  "\xb0\x13\x00\x00\x00\x14\x00\x00"
		.ascii  "\x50\x14\x00\x00\xa0\x14\x00\x00"
		.ascii  "\xf0\x14\x00\x00\x40\x15\x00\x00"
		.ascii  "\x90\x15\x00\x00\xe0\x15\x00\x00"
		.ascii  "\x30\x16\x00\x00\x80\x16\x00\x00"
		.ascii  "\xd0\x16\x00\x00\x20\x17\x00\x00"
		.ascii  "\x70\x17\x00\x00\xc0\x17\x00\x00"
		.ascii  "\x10\x18\x00\x00\x60\x18\x00\x00"
		.ascii  "\xb0\x18\x00\x00\x00\x19\x00\x00"
		.ascii  "\x50\x19\x00\x00\xa0\x19\x00\x00"
		.ascii  "\xf0\x19\x00\x00\x40\x1a\x00\x00"
		.ascii  "\x90\x1a\x00\x00\xe0\x1a\x00\x00"
		.ascii  "\x30\x1b\x00\x00\x80\x1b\x00\x00"
		.ascii  "\xd0\x1b\x00\x00\x20\x1c\x00\x00"
		.ascii  "\x70\x1c\x00\x00\xc0\x1c\x00\x00"
		.ascii  "\x10\x1d\x00\x00\x60\x1d\x00\x00"
		.ascii  "\xb0\x1d\x00\x00\x00\x1e\x00\x00"
		.ascii  "\x50\x1e\x00\x00\xa0\x1e\x00\x00"
		.ascii  "\xf0\x1e\x00\x00\x40\x1f\x00\x00"
		.ascii  "\x90\x1f\x00\x00\xe0\x1f\x00\x00"
		.ascii  "\x30\x20\x00\x00\x80\x20\x00\x00"
		.ascii  "\xd0\x20\x00\x00\x20\x21\x00\x00"
		.ascii  "\x70\x21\x00\x00\xc0\x21\x00\x00"
		.ascii  "\x10\x22\x00\x00\x60\x22\x00\x00"
		.ascii  "\xb0\x22\x00\x00\x00\x23\x00\x00"
		.ascii  "\x50\x23\x00\x00\xa0\x23\x00\x00"
		.ascii  "\xf0\x23\x00\x00\x40\x24\x00\x00"
		.ascii  "\x90\x24\x00\x00\xe0\x24\x00\x00"
		.ascii  "\x30\x25\x00\x00\x80\x25\x00\x00"
		.ascii  "\xd0\x25\x00\x00\x20\x26\x00\x00"
		.ascii  "\x70\x26\x00\x00\xc0\x26\x00\x00"
		.ascii  "\x10\x27\x00\x00\x60\x27\x00\x00"
		.ascii  "\xb0\x27\x00\x00\x00\x28\x00\x00"
		.ascii  "\x50\x28\x00\x00\xa0\x28\x00\x00"
		.ascii  "\xf0\x28\x00\x00\x40\x29\x00\x00"
		.ascii  "\x90\x29\x00\x00\xe0\x29\x00\x00"
		.ascii  "\x30\x2a\x00\x00\x80\x2a\x00\x00"
		.ascii  "\xd0\x2a\x00\x00\x20\x2b\x00\x00"
		.ascii  "\x70\x2b\x00\x00\xc0\x2b\x00\x00"
		.ascii  "\x10\x2c\x00\x00\x60\x2c\x00\x00"
		.ascii  "\xb0\x2c\x00\x00\x00\x2d\x00\x00"
		.ascii  "\x50\x2d\x00\x00\xa0\x2d\x00\x00"
		.ascii  "\xf0\x2d\x00\x00\x40\x2e\x00\x00"
		.ascii  "\x90\x2e\x00\x00\xe0\x2e\x00\x00"
		.ascii  "\x30\x2f\x00\x00\x80\x2f\x00\x00"
		.ascii  "\xd0\x2f\x00\x00\x20\x30\x00\x00"
		.ascii  "\x70\x30\x00\x00\xc0\x30\x00\x00"
		.ascii  "\x10\x31\x00\x00\x60\x31\x00\x00"
		.ascii  "\xb0\x31\x00\x00\x00\x32\x00\x00"
		.ascii  "\x50\x32\x00\x00\xa0\x32\x00\x00"
		.ascii  "\xf0\x32\x00\x00\x40\x33\x00\x00"
		.ascii  "\x90\x33\x00\x00\xe0\x33\x00\x00"
		.ascii  "\x30\x34\x00\x00\x80\x34\x00\x00"
		.ascii  "\xd0\x34\x00\x00\x20\x35\x00\x00"
		.ascii  "\x70\x35\x00\x00\xc0\x35\x00\x00"
		.ascii  "\x10\x36\x00\x00\x60\x36\x00\x00"
		.ascii  "\xb0\x36\x00\x00\x00\x37\x00\x00"
		.ascii  "\x50\x37\x00\x00\xa0\x37\x00\x00"
		.ascii  "\xf0\x37\x00\x00\x40\x38\x00\x00"
		.ascii  "\x90\x38\x00\x00\xe0\x38\x00\x00"
		.ascii  "\x30\x39\x00\x00\x80\x39\x00\x00"
		.ascii  "\xd0\x39\x00\x00\x20\x3a\x00\x00"
		.ascii  "\x70\x3a\x00\x00\xc0\x3a\x00\x00"
		.ascii  "\x10\x3b\x00\x00\x60\x3b\x00\x00"
		.ascii  "\xb0\x3b\x00\x00\x00\x3c\x00\x00"
		.ascii  "\x50\x3c\x00\x00\xa0\x3c\x00\x00"
		.ascii  "\xf0\x3c\x00\x00\x40\x3d\x00\x00"
		.ascii  "\x90\x3d\x00\x00\xe0\x3d\x00\x00"
		.ascii  "\x30\x3e\x00\x00"

_092140_data:
		.fill   0x4

_092144_data:
		.fill   0x4

_092148_data:
		.fill   0x8

_092150_data:
		.fill   0x4

_092154_data:
		.fill   0x4

_092158_data:
		.fill   0x4

_09215c_data:
		.fill   0x4

_092160_data:
		.ascii  "\x22\xc5\x00\x00"

_092164_data:
		.ascii  "\x71"

_092165_data:
		.ascii  "\xff\x00\x00\x22\xc5\x00\x00\x0c"
		.ascii  "\x58\x00\x00\x7f\x7f\x00\x00\x2e"
		.ascii  "\x1d\x01\x00\xd6\x81\x00\x00\xa0"
		.ascii  "\xbd\x00\x00\x04\x9f\x01\x00\xd3"
		.ascii  "\x69\x01\x00\x21\xcf\x00\x00\xd7"
		.ascii  "\x08\x03\x00\x32\xd5\x00\x00\x63"
		.ascii  "\x53\x00\x00\x09\xde\x03\x00\xd9"
		.ascii  "\x23\x00\x00\x87\x93\x00\x00\xe2"
		.ascii  "\x01\x04\x00\x33\x0a\x02\x00\x53"
		.ascii  "\xa4\x00\x00\x15\x0c\x06\x00\xc5"
		.ascii  "\xc6\x00\x00\x24\xcb\x00\x00\xda"
		.ascii  "\xd2\x06\x00\x2b\x5a\x00\x00\x03"
		.ascii  "\x93\x00\x00\x05\x2d\x07\x00\x09"
		.ascii  "\x68\x00\x00\x83\x09\x00\x00\x0e"
		.ascii  "\x95\x07\x00\xe0\x68\x00\x00\x4e"
		.ascii  "\xa1\x00\x00\xee\xfd\x07\x00\x46"
		.ascii  "\x68\x00\x00\xdd\x1e\x00\x00\x34"
		.ascii  "\x66\x08\x00\x35\x47\x00\x00\x30"
		.ascii  "\x85\x00\x00"

_0921f8_data:
		.fill   0x4

_0921fc_data:
		.ascii  "\x4f\x10\x00\x00"

_092200_data:
		.ascii  "\xe4"

_092201_data:
		.ascii  "\x68"

_092202_data:
		.ascii  "\x00\x00"

_092204_data:
		.ascii  "\x00\x00"

_092206_data:
		.ascii  "\x00\x00"

_092208_data:
		.ascii  "\x00\x00"

_09220a_data:
		.ascii  "\x00\x00"

_09220c_data:
		.ascii  "\x02\x01\x03\x00\x04\x07\x06\x05"
		.ascii  "\x01\x03\x02\x00\x04\x07\x06\x05"
		.ascii  "\x04\x01\x03\x02\x00\x07\x06\x05"

_092224_data:
		.ascii  "\x00\x20\x42\xc2\x42\x42\xc2\xc2"
		.ascii  "\x04\x0b"
		.fill   0x4
		.ascii  "\x03\x13\x00\x00\x4a\xca\x4a\x4a"
		.ascii  "\xca\xca"
		.fill   0x6
		.ascii  "\x0b\x00"
		.ascii   "                                "

_092264_data:
		.ascii  "\x28"

_092265_data:
		.ascii  "\x80"

_092266_data:
		.ascii  "\x03"

_092267_data:
		.ascii  "\x23\x04\x00\x03\x02\x00\x00\x02"
		.ascii  "\x42\x21\x80\x21\x42\x04\x00\x02"
		.ascii  "\x42\x20\x00\x02\x02\x08\x10\x47"
		.ascii  "\x26\x08\x00\x02\x02\x00\x11\x43"
		.ascii  "\x20\x28\x80\x03\x23\x18\x80\x01"
		.ascii  "\x02\x05\x00\x00\x4a\x28\x80\x02"
		.ascii  "\x03\x0b\x80\x22\x42\x28\x80\x02"
		.ascii  "\x03\x0b\x80\x22\x42\x04\x81\x02"
		.ascii  "\x02\x04\x81\x02\x02\x04\x80\x03"
		.ascii  "\x02\x01\x00\x20\x4a\x28\x91\x03"
		.ascii  "\x03\x20\x80\x02\x02\x00\x81\x03"
		.ascii  "\x02\x40\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x00\x02\x02\x00\x40\x02"
		.ascii  "\x02\x00\xc0\x02\x02\x00\x41\x02"
		.ascii  "\x02\x00\x40\x02\x02\x00\x00\x10"
		.ascii  "\x20\x01\x00\x00\x42\x08\x80\x02"
		.ascii  "\x02\x09\xb0\x22\x42\x00\x81\x03"
		.ascii  "\x02\x28\x80\x03\x03\x09\x90\x23"
		.ascii  "\x42\x00\x00\x03\x02\x01\x80\x03"
		.ascii  "\x42\x01\x80\x23\x42\x08\x90\x03"
		.ascii  "\x03\x08\x00\x02\x02\x00\x00\x12"
		.ascii  "\x02\x28\x80\x03\x03\x09\x80\x22"
		.ascii  "\x42\x08\x81\x02\x02\x98\x80\x03"
		.ascii  "\x03\x08\x10\x03\x22\x04\x80\x02"
		.ascii  "\x02\x00\x80\x02\x02\x98\xb0\x00"
		.ascii  "\x03\x09\x90\x23\x42\x19\x90\x23"
		.ascii  "\x42\x28\x90\x03\x02\x00\x80\x02"
		.ascii  "\x02\x20\x80\x02\x02\x28\x80\x03"
		.ascii  "\x03\x28\x80\x02\x03\x04\x02\x03"
		.ascii  "\x22\x05\x00\x23\x42\x28\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x09\x90\x23"
		.ascii  "\x42\x00\xb1\x02\x02\x00\x80\x00"
		.ascii  "\x42\x28\x80\x03\x03\x09\x80\x22"
		.ascii  "\x42\x04\x01\x02\x02\x00\xc0\x02"
		.ascii  "\x02\x08\x10\x03\x23\x28\x80\x03"
		.ascii  "\x03\x09\x80\x03\x43\x28\x00\x23"
		.ascii  "\x03\x09\xb0\x03\x42\x98\x80\x03"
		.ascii  "\x03\x05\x00\x20\x48\x00\x80\x03"
		.ascii  "\x02\x28\x00\x22\x03\x09\x90\x63"
		.ascii  "\x43\x09\x80\x23\x42\x00\x00\x03"
		.ascii  "\x02\x20\x88\x13\x03\x00\x00\x12"
		.ascii  "\x22\x09\x00\x20\x42\x00\x00\x02"
		.ascii  "\x02\x00\x00\x02\x03\x00\x81\x02"
		.ascii  "\x02\x00\x01\x02\x42\x00\x01\x02"
		.ascii  "\x42\x20\x80\x03\x02\x09\x80\x23"
		.ascii  "\x42\x09\x80\x23\x42\x09\x80\x23"
		.ascii  "\x42\x01\x80\x23\x42\x11\x00\x00"
		.ascii  "\x42\x00\x00\x02\x42\x00\x80\x02"
		.ascii  "\x03\x19\x80\x27\x43\x98\xb0\x03"
		.ascii  "\x03\x04\x00\x00\x42\x28\x80\x13"
		.ascii  "\x03\x08\x00\x02\x02\x09\x80\x23"
		.ascii  "\x42\x00\x80\x02\x02\x00\x80\x02"
		.ascii  "\x02\x08\x80\x02\x02\x08\x81\x03"
		.ascii  "\x02\x08\x00\x02\x02\x01\xb0\x12"
		.ascii  "\x42\x00\x00\x06\x32\x01\x00\x22"
		.ascii  "\x42\x00\x80\x02\x02\x09\x10\x23"
		.ascii  "\x43\x08\x80\x02\x02\x00\x80\x03"
		.ascii  "\x02\x01\xc0\x02\x42\x28\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x28\x80\x03"
		.ascii  "\x03\x09\x80\x23\x42\x38\x90\x03"
		.ascii  "\x03\x09\x80\x23\x42\x09\x90\x23"
		.ascii  "\x43\x28\x90\x0b\x23\x00\x00\x12"
		.ascii  "\x42\x00\x88\x03\x02\x08\x80\x03"
		.ascii  "\x02\x08\x80\x03\x02\x08\x80\x03"
		.ascii  "\x02\x08\x80\x07\x02\x05\x10\x63"
		.ascii  "\x42\x00\x80\x03\x02\x28\x80\x02"
		.ascii  "\x03\x00\x00\x03\x02\x00\x11\x43"
		.ascii  "\x20\x09\x80\x22\x42\x01\x00\x02"
		.ascii  "\x42\x00\x00\x12\x22\x00\x89\x03"
		.ascii  "\x02\x05\x00\x22\x42\x00\x81\x03"
		.ascii  "\x02\x00\x00\x13\x42\x00\x02\x12"
		.ascii  "\x22\x11\x00\x00\x4a\x00\x82\x01"
		.ascii  "\x42\x08\x80\x02\x02\x09\x00\x23"
		.ascii  "\x42\x28\x80\x03\x03\x00\x80\x03"
		.ascii  "\x42\x04\x00\x03\x02\xb8\x84\x02"
		.ascii  "\x03\x08\x80\x03\x22\x20\xc0\x03"
		.ascii  "\x03\x30\x80\x03\x03\x00\x89\x03"
		.ascii  "\x02\x00\x89\x03\x02\x08\x80\x03"
		.ascii  "\x03\x10\x00\x00\x02\x00\x00\x03"
		.ascii  "\x42\x00\x08\x03\x02\x00\x08\x03"
		.ascii  "\x02\x00\x00\x12\x42\x00\x01\x02"
		.ascii  "\x42\x00\x00\x02\x02\x00\x00\x12"
		.ascii  "\x02\x28\x80\x03\x23\x00\x00\x02"
		.ascii  "\x02\x00\x10\x43\x20\x00\xb0\x03"
		.ascii  "\x03\x00\xb8\x13\x03\x09\x80\x22"
		.ascii  "\x4a\x05\x00\x03\x42\x28\x80\x1b"
		.ascii  "\x03\x00\xb0\x23\x02\x28\x90\x02"
		.ascii  "\x03\x08\x00\x02\x02\x08\x00\x06"
		.ascii  "\x12\x00\x11\x47\x26\x08\x00\x06"
		.ascii  "\x12\x08\x00\x06\x12\x98\x80\x13"
		.ascii  "\x03\x20\x80\x03\x43\x08\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x28\x90\x02"
		.ascii  "\x03\x08\x80\x03\x03\x01\x00\x22"
		.ascii  "\x42\x98\x84\x03\x03\x08\x00\x02"
		.ascii  "\x02\x08\x81\x03\x02\x19\xf0\x03"
		.ascii  "\x42\x08\x00\x02\x02\x19\x90\x22"
		.ascii  "\x43\x09\xb0\x02\x43\x09\xb0\x22"
		.ascii  "\x43\x28\x10\x03\x03\x09\xb0\x22"
		.ascii  "\x42\x05\x00\x02\x42\x98\x84\x13"
		.ascii  "\x03\x20\x80\x03\x03\x08\x84\x13"
		.ascii  "\x03\x08\x80\x13\x03\x05\x00\x03"
		.ascii  "\x42\x09\x00\x03\x42\x19\x80\x02"
		.ascii  "\x42\x19\x80\x02\x42\x01\x00\x02"
		.ascii  "\x42\x00\x80\x01\x00\x01\x00\x02"
		.ascii  "\x4a\x09\x90\x13\x42\x09\x90\x13"
		.ascii  "\x42\x01\x00\x43\x42\x28\x80\x02"
		.ascii  "\x03\x98\xb0\x03\x03\x00\x10\x83"
		.ascii  "\x42\x11\x80\x22\x4a\x00\x80\x02"
		.ascii  "\x02\x08\x80\x03\x03\x08\x90\x03"
		.ascii  "\x03\x10\x80\x02\x02\x10\xa0\x02"
		.ascii  "\x02\x01\x00\x02\x42\x01\x00\x22"
		.ascii  "\x42\x08\x80\x02\x03\x09\x90\x02"
		.ascii  "\x43\x28\x90\x02\x03\x28\x90\x02"
		.ascii  "\x03\x98\xb0\x00\x02\x00\x80\x03"
		.ascii  "\x02\x08\x00\x02\x02\x08\x00\x02"
		.ascii  "\x02\x08\xa0\x02\x43\x08\xa0\x02"
		.ascii  "\x43\x09\x80\x22\x42\x08\x00\x02"
		.ascii  "\x42\x08\x00\x03\x02\x00\x00\x02"
		.ascii  "\x02\x00\xc0\x03\x02\x05\x00\x00"
		.ascii  "\x42\x28\x00\x23\x02\x08\x00\x06"
		.ascii  "\x12\x08\x00\x06\x12\x08\x00\x06"
		.ascii  "\x12\x08\xc0\x06\x02\x19\x90\x22"
		.ascii  "\x42\x00\x80\x02\x02\x00\x80\x03"
		.ascii  "\x42\x00\x80\x03\x02\x09\x90\x02"
		.ascii  "\x42\x04\xa0\x02\x42\x08\x00\x02"
		.ascii  "\x02\x04\x00\x02\x42\x04\x00\x02"
		.ascii  "\x42\x04\x00\x02\x42\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x01\xb0\x03"
		.ascii  "\x42\x00\xb0\x03\x02\x00\x88\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02"

_09267c_data:
		.ascii  "\x00\x00"

_09267e_data:
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x4
		.ascii  "\xb0\xff"
		.fill   0x6
		.ascii  "\xfa\x00\x00\x00\xfa\x00\x00\x00"
		.ascii  "\xc4\xff\xc4\xff"
		.fill   0x4
		.ascii  "\x3c"
		.fill   0xb
		.ascii  "\xc4\xff"
		.fill   0x8
		.ascii  "\xce\xff"
		.fill   0xc
		.ascii  "\xce\xff"
		.fill   0x6
		.ascii  "\xce\xff"
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x12
		.ascii  "\xce\xff"
		.fill   0x1c
		.ascii  "\x3c\x00\x00\x00\x96"
		.fill   0xd
		.ascii  "\xce\xff"
		.fill   0xc
		.ascii  "\xce\xff"
		.fill   0x8
		.ascii  "\xc2\x01\xce\xff\x00\x00\x64\x00"
		.ascii  "\x00\x00\xce\xff\xc8"
		.fill   0xf
		.ascii  "\x64"
		.fill   0x1d
		.ascii  "\x96\x00\xce\xff"
		.fill   0x12
		.ascii  "\xb0\xff"
		.fill   0xc
		.ascii  "\xce\xff\xce\xff"
		.fill   0x8
		.ascii  "\xc8"
		.fill   0x1d
		.ascii  "\xce\xff\xce\xff\xce\xff"
		.fill   0x4
		.ascii  "\xb0\xff"
		.fill   0x8
		.ascii  "\xc8\x00\x28\x00\xc8"
		.fill   0x7
		.ascii  "\xce\xff\xce\xff"
		.fill   0x8
		.ascii  "\xc8"
		.fill   0xf
		.ascii  "\x64"
		.fill   0xf
		.ascii  "\x28"
		.fill   0xb
		.ascii  "\xc2\x01"
		.fill   0xa
		.ascii  "\x28"
		.fill   0x19
		.ascii  "\xc8\x00\xc8\x00\x00\x00\xce\xff"
		.fill   0x16
		.ascii  "\xce\xff\xce\xff\xce\xff\x00\x00"
		.ascii  "\x64"
		.fill   0x23

_09288a_data:
		.fill   0x4c
		.ascii  "\xce\xff"
		.fill   0x6
		.ascii  "\xce\xff"
		.fill   0x12
		.ascii  "\x2c\x01"
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x2c
		.ascii  "\x78\x00\xce\xff\x00\x00\x96"
		.fill   0x5
		.ascii  "\xc8\x00\xc8"
		.fill   0xb
		.ascii  "\x5e\x01\xce\xff\x00\x00\x2c\x01"
		.fill   0x4
		.ascii  "\xc8\x00\x8c"
		.fill   0x29
		.ascii  "\x32\x00\x00\x00\xce\xff"
		.fill   0x1e
		.ascii  "\x78\x00\xce\xff\xce\xff"
		.fill   0x6
		.ascii  "\x64\x00\x2c\x01\x00\x00\xc8"
		.fill   0x5
		.ascii  "\x78"
		.fill   0xd
		.ascii  "\x96\x00\x96\x00\x00\x00\xce\xff"
		.ascii  "\xce\xff"
		.fill   0x8
		.ascii  "\x78\x00\x78"
		.fill   0x5
		.ascii  "\x78\x00\xc8\x00\xc8"
		.fill   0x7
		.ascii  "\x14\x00\x14"
		.fill   0x9
		.ascii  "\xc8"
		.fill   0x1b
		.ascii  "\x96\x00\x00\x00\x32"
		.fill   0xb
		.ascii  "\x5e\x01"
		.fill   0xa
		.ascii  "\x96"
		.fill   0xb
		.ascii  "\x32\x00\x64\x00\x96"
		.fill   0x9
		.ascii  "\xc8\x00\xc8"
		.fill   0x1d
		.ascii  "\x14\x00\x14"
		.fill   0xd
		.ascii  "\x32"
		.fill   0x19

_092a96_data:
		.ascii  "\x54\x00\x2c\x00\x0d\x11\x04\xff"
		.ascii  "\x03\x00\x04\x00\x03\x0d\x03\x00"
		.ascii  "\x0c\x00\x0b\x00\x10\x10\x03\x04"
		.ascii  "\x07\x00\x06\x00\x1a\x19\x01\xff"
		.ascii  "\x02\x00\x01\x00\x08\x0d\x03\x02"
		.ascii  "\x4c\x00\x3f\x00\x0a\x16\x01\xff"
		.ascii  "\x05\x00\x08\x00\x0c\x08\x03\x00"
		.ascii  "\x06\x00\xf6\xff\x0c\x23\x03\x02"
		.ascii  "\x01\x00\x07\x00\x15\x05\x03\x04"
		.ascii  "\x47\x00\x31\x00\x12\x06\x01\xff"
		.ascii  "\x06\x00\xf6\xff\x0c\x23\x03\x02"
		.ascii  "\x01\x00\x07\x00\x15\x05\x03\x04"
		.ascii  "\x47\x00\x31\x00\x12\x06\x01\xff"
		.ascii  "\xeb\xff\xed\xff\x40\x40\x03\x00"
		.ascii  "\x69\x00\xa8\x00\x30\x3c\x01\xff"
		.ascii  "\x61\x00\x81\x00\x02\x02\x01\xff"
		.ascii  "\x08\x00\x06\x00\x14\x14\x03\x00"
		.ascii  "\x06\x00\x05\x00\x0a\x0b\x03\x00"
		.ascii  "\x4a\x00\x49\x00\x0d\x0e\x01\xff"
		.ascii  "\x09\x00\x0a\x00\x10\x10\x03\x00"
		.ascii  "\x0e\x00\x01\x00\x0e\x2c\x03\x00"
		.ascii  "\x09\x00\x0a\x00\x10\x10\x03\x00"
		.ascii  "\x08\x00\x06\x00\x14\x14\x03\x00"
		.ascii  "\x40\x00\x30\x00\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x0b\x00\x0a\x00"
		.ascii  "\x10\x10\x03\x00\x10\x00\x1a\x00"
		.ascii  "\x30\x26\x03\x00\x0b\x00\x0b\x00"
		.ascii  "\x10\x10\x03\x00\x01\x00\xf9\xff"
		.ascii  "\x0c\x22\x03\x02\x08\x00\x06\x00"
		.ascii  "\x14\x14\x03\x00\x01\x00\xf8\xff"
		.ascii  "\x0d\x1e\x03\x00\x06\x00\x03\x00"
		.ascii  "\x0b\x02\x03\x00\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\x3f\x00\x4d\x00"
		.ascii  "\x15\x0a\x04\xff\x08\x00\x05\x00"
		.ascii  "\x12\x17\x03\x03\x07\x00\x0e\x00"
		.ascii  "\x06\x07\x03\x00\x00\x00\x02\x00"
		.ascii  "\xd0\x06\x03\x03\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x47\x00\x38\x00"
		.ascii  "\x13\x12\x01\xff\x47\x00\x38\x00"
		.ascii  "\x13\x12\x01\xff\x4b\x00\x3a\x00"
		.ascii  "\x0c\x0c\x01\xff\x06\x00\x04\x00"
		.ascii  "\x18\x19\x06\x04\x02\x00\x04\x00"
		.ascii  "\x12\x0e\x03\x05\x08\x00\x08\x00"
		.ascii  "\x31\x33\x03\x06\x12\x00\x09\x00"
		.ascii  "\x10\x10\x03\x01\x13\x00\x02\x00"
		.ascii  "\x0e\x44\x03\x03\xfd\xff\xfe\xff"
		.ascii  "\x0b\x07\x03\x0a\x0a\x00\x06\x00"
		.ascii  "\x10\x13\x03\x00\x0b\x00\x07\x00"
		.ascii  "\x0e\x11\x03\x01\x0a\x00\x08\x00"
		.ascii  "\x11\x10\x03\x02\x18\x00\x18\x00"
		.ascii  "\x36\x35\x03\x04\x4c\x00\x3c\x00"
		.ascii  "\x08\x09\x01\xff\x15\x00\x14\x00"
		.ascii  "\x38\x38\x03\x00\x3f\x00\x28\x00"
		.ascii  "\x2b\x2d\x01\xff\x7b\x00\x82\x00"
		.ascii  "\x2b\x2d\x01\xff\xa8\x00\x8c\x00"
		.ascii  "\x20\x30\x01\xff\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x0a\x00\x06\x00"
		.ascii  "\x13\x0b\x03\x00\x0a\x00\x06\x00"
		.ascii  "\x13\x0b\x03\x01\x02\x00\x14\x00"
		.ascii  "\x20\x25\x03\x02\x0b\x00\x0d\x00"
		.ascii  "\x3b\x0c\x03\x03\x12\x00\x0e\x00"
		.ascii  "\x29\x29\x03\x0e\x12\x00\x0e\x00"
		.ascii  "\x29\x29\x03\x0f"
		.fill   0x4
		.ascii  "\x13\x20\x06\x0a\x04\x00\x00\x00"
		.ascii  "\x13\x20\x06\x0b\x4a\x00\x49\x00"
		.ascii  "\x0d\x0e\x01\xff\x46\x00\x44\x00"
		.ascii  "\x0e\x0c\x01\xff\x0f\x00\x03\x00"
		.ascii  "\x0c\x2a\x03\x00\x6d\x00\x33\x00"
		.ascii  "\x36\x38\x01\xff\x6f\x00\x98\x00"
		.ascii  "\x33\x17\x01\xff\x4f\x00\x53\x00"
		.ascii  "\x74\x26\x01\xff\x32\x00\x72\x00"
		.ascii  "\x34\x0f\x01\xff\x47\x00\x8c\x00"
		.ascii  "\x36\x15\x01\xff\x47\x00\x8c\x00"
		.ascii  "\x36\x15\x01\x00\x07\x00\x06\x00"
		.ascii  "\x1a\x19\x01\xff\x44\x00\x35\x00"
		.ascii  "\x21\x22\x01\xff\x04\x00\x01\x00"
		.ascii  "\x10\x1c\x03\x02\x09\x00\x09\x00"
		.ascii  "\x24\x09\x03\x00\x40\x00\x30\x00"
		.ascii  "\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x03\x00\x03\x00"
		.ascii  "\x0c\x0c\x03\x04\x07\x00\x04\x00"
		.ascii  "\x0d\x0b\x03\x06\x04\x00\x03\x00"
		.ascii  "\x11\x11\x03\x07\x0c\x00\x0b\x00"
		.ascii  "\x1f\x1c\x03\x0b\x0f\x00\x14\x00"
		.ascii  "\x16\x2f\x03\x0c\x0d\x00\xfa\xff"
		.ascii  "\x35\x21\x03\x10\x06\x00\x07\x00"
		.ascii  "\x1e\x0e\x03\x11\x47\x00\x31\x00"
		.ascii  "\x12\x06\x01\xff"
		.fill   0x4
		.ascii  "\x4b\x50\x03\x02\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x07\x00\x05\x00"
		.ascii  "\x13\x13\x01\xff\x02\x00\x01\x00"
		.ascii  "\x08\x0d\x03\x02\x4c\x00\x3f\x00"
		.ascii  "\x0a\x16\x01\xff\x07\x00\x06\x00"
		.ascii  "\x1a\x19\x01\xff\x00\x00\x02\x00"
		.ascii  "\xd0\x06\x03\x03\x04\x00\x04\x00"
		.ascii  "\x10\x10\x03\x00\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x02\x00\xff\xff"
		.ascii  "\x02\x1b\x03\x01\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x12\x00\x07\x00"
		.ascii  "\x20\x1d\x03\x02\x07\x00\x00\x00"
		.ascii  "\x1a\x17\x03\x05\x09\x00\x0b\x00"
		.ascii  "\x21\x0d\x01\xff\x09\x00\x0b\x00"
		.ascii  "\x21\x0d\x01\xff\xfa\xff\x7f\xff"
		.ascii  "\x16\x8b\x03\x03\x10\x00\x04\x00"
		.ascii  "\x08\x08\x03\x00\xf8\xff\x04\x00"
		.ascii  "\x08\x08\x03\x01\x00\x00\x04\x00"
		.ascii  "\x08\x08\x03\x02\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x04\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x05\x04\x00\x0c\x00"
		.ascii  "\x17\x06\x03\x00\x07\x00\x0c\x00"
		.ascii  "\x18\x08\x03\x01\x04\x00\x0c\x00"
		.ascii  "\x17\x06\x03\x00\x07\x00\x0c\x00"
		.ascii  "\x18\x08\x03\x01\x0e\x00\x05\x00"
		.ascii  "\x5d\x0c\x03\x08\x03\x00\x02\x00"
		.ascii  "\x16\x05\x03\x01\x0c\x00\xd8\xff"
		.ascii  "\x3c\x99\x01\xff\x48\x00\xd8\xff"
		.ascii  "\x3c\x99\x01\xff\x69\x00\xa8\x00"
		.ascii  "\x30\x3c\x01\xff\xa8\x00\x8c\x00"
		.ascii  "\x20\x30\x01\xff\x0a\x00\x06\x00"
		.ascii  "\x15\x10\x03\x00\x05\x00\x04\x00"
		.ascii  "\x0c\x0c\x03\x03\x06\x00\x04\x00"
		.ascii  "\x0c\x0c\x03\x06\x0b\x00\x07\x00"
		.ascii  "\x17\x12\x03\x08\x07\x00\x02\x00"
		.ascii  "\x10\x09\x03\x02\x0c\x00\x07\x00"
		.ascii  "\x2f\x0f\x03\x04\x0f\x00\x07\x00"
		.ascii  "\x38\x11\x03\x05\x04\x00\x02\x00"
		.ascii  "\x06\x32\x03\x07\x0a\x00\x16\x00"
		.ascii  "\x38\x07\x03\x08\x16\x00\x12\x00"
		.ascii  "\x16\x32\x03\x06\x10\x00\x02\x00"
		.ascii  "\x2b\x1e\x03\x01\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x40\x00\x30\x00"
		.ascii  "\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x02\x00\x02\x00"
		.ascii  "\x02\x28\x03\x01\x01\x00\x01\x00"
		.ascii  "\x1f\x02\x03\x01\xf3\xff\xf3\xff"
		.ascii  "\x30\x2b\x03\x03\x05\x00\x02\x00"
		.ascii  "\x1e\x11\x03\x07\xf3\xff\xf3\xff"
		.ascii  "\x30\x2b\x03\x03\x05\x00\x02\x00"
		.ascii  "\x1e\x11\x03\x07\x0d\x00\x04\x00"
		.ascii  "\x07\x08\x03\x08\x00\x00\x50\x00"
		.ascii  "\x80\x01\x01\xff\x40\x00\x00\x00"
		.ascii  "\x20\x80\x01\xff\x06\x00\x05\x00"
		.ascii  "\x07\x11\x03\x01\x07\x00\xf8\xff"
		.ascii  "\x09\x22\x03\x03\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x54\x00\x2a\x00"
		.ascii  "\x0d\x62\x04\xff\x05\x00\x01\x00"
		.ascii  "\x02\x13\x03\x00\x10\x00\x04\x00"
		.ascii  "\x08\x08\x03\x00\xf8\xff\x04\x00"
		.ascii  "\x08\x08\x03\x01\x00\x00\x04\x00"
		.ascii  "\x08\x08\x03\x02\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x04\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x05\x0b\x00\xba\x00"
		.ascii  "\x38\x22\x01\xff\x10\x00\xe8\xff"
		.ascii  "\x02\x51\x03"
		.fill   0x79

_0930d6_data:
		.fill   0xd
		.ascii  "\x10\x02\x08\x03\x08\x04\x10\x06"
		.ascii  "\x08\x00\x00\x07\x10\x09\x08\x0a"
		.ascii  "\x10\x0c\x08"
		.fill   0x1c
		.ascii  "\x0d\x08\x00\x00\x0e\x08\x0f\x08"
		.fill   0x4
		.ascii  "\x10\x08\x11\x08"
		.fill   0x4
		.ascii  "\x12\x08\x13\x08\x14\x08"
		.fill   0x4
		.ascii  "\x15\x08\x00\x00\x16\x08"
		.fill   0x4
		.ascii  "\x17\x20\x1b\x08\x1c\x08\x1d\x08"
		.fill   0xe
		.ascii  "\x1e\x08"
		.fill   0xe
		.ascii  "\x1f\x08"
		.fill   0x4
		.ascii  "\x20\x08\x21\x08\x22\x10"
		.fill   0x4
		.ascii  "\x24\x10\x26\x08"
		.fill   0x4
		.ascii  "\x27\x08"
		.fill   0x10
		.ascii  "\x28\x08\x29\x08\x2a\x08"
		.fill   0x4
		.ascii  "\x2b\x08\x2c\x18\x00\x00\x2f\x18"
		.fill   0x4
		.ascii  "\x32\x20\x36\x08"
		.fill   0x8
		.ascii  "\x37\x08\x00\x00\x38\x08\x00\x00"
		.ascii  "\x39\x08\x3a\x08"
		.fill   0x6
		.ascii  "\x3b\x08\x3c\x08\x3d\x08\x00\x00"
		.ascii  "\x3e\x40\x00\x00\x46\x08\x47\x08"
		.ascii  "\x48\x08\x00\x00\x49\x08\x4a\x18"
		.ascii  "\x4d\x10"
		.fill   0xa
		.ascii  "\x4f\x08"
		.fill   0x4
		.ascii  "\x50\x08"
		.fill   0x4
		.ascii  "\x51\x08"
		.fill   0x8
		.ascii  "\x52\x08\x00\x00\x53\x20"
		.fill   0x4
		.ascii  "\x57\x38\x5e\x08\x5f\x08"
		.fill   0x6
		.ascii  "\x60\x08"
		.fill   0x8
		.ascii  "\x61\x08"
		.fill   0x6
		.ascii  "\x62\x10\x00\x00\x64\x08\x65\x08"
		.ascii  "\x00\x00\x66\x08"
		.fill   0x6
		.ascii  "\x67\x10\x69\x08\x6a\x10\x00\x00"
		.ascii  "\x6c\x10\x6e\x10\x70\x10\x00\x00"
		.ascii  "\x72\x08\x73\x10\x75\x10\x77\x08"
		.ascii  "\x00\x00\x78\x10\x7a\x08\x7b\x08"
		.ascii  "\x00\x00\x7c\x08\x7d\x28\x82\x10"
		.ascii  "\x84\x10"
		.fill   0x10
		.ascii  "\x86\x08"
		.fill   0x4
		.ascii  "\x87\x08"
		.fill   0x4
		.ascii  "\x88\x08\x89\x08\x00\x00\x8a\x08"
		.ascii  "\x8b\x08"
		.fill   0x8
		.ascii  "\x8c\x20"
		.fill   0x8
		.ascii  "\x90\x30\x96\x08\x97\x10\x99\x10"
		.ascii  "\x9b\x20\x00\x00\x9f\x08\xa0\x08"
		.ascii  "\xa1\x10\xa3\x10\xa5\x08\xa6\x08"
		.ascii  "\x00\x00\xa7\x08"
		.fill   0x4
		.ascii  "\xa8\x10\xaa\x10\xac\x10\xae\x10"
		.ascii  "\xb0\x10\xb2\x28"
		.fill   0x6
		.ascii  "\xb7\x08\x00\x00\xb8\x08"
		.fill   0x18

_0932e4_data:
		.long   _02f088_func

_0932e8_data:
		.long   _060638_func

_0932ec_data:
		.long   _02e7a4_func

_0932f0_data:
		.long   _060724_func
		.long   _05f100_func
		.long   _02f088_func
		.long   _061e8c_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05f984_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _028c34_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _028dfc_func
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _05f35c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _0310dc_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _031050_func
		.long   _0310dc_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _0604bc_func
		.long   _02e7a4_func
		.long   _0605b8_func
		.long   _05f100_func
		.long   _064f88_func
		.long   _0651ac_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _0603a4_func
		.long   _02e7a4_func
		.long   _06040c_func
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _0603a4_func
		.long   _02e7a4_func
		.long   _06040c_func
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _06013c_func
		.long   _060338_func
		.long   _02e7a4_func
		.long   _06039c_func
		.long   _05f100_func
		.long   _060b74_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _060d14_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _03ef80_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _03f928_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _07952c_func
		.long   _079e80_func
		.long   _02e7a4_func
		.long   _079fec_func
		.long   _05f100_func
		.long   _078a44_func
		.long   _07912c_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _05f378_func
		.long   _05f44c_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05fa04_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _078838_func
		.long   _0789e0_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05fc24_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _0795f8_func
		.long   _079e80_func
		.long   _02e7a4_func
		.long   _079fec_func
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _021208_func
		.long   _021cf0_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _078a44_func
		.long   _07912c_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _052c1c_func
		.long   _052f44_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05324c_func
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _0600cc_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _060128_func
		.long   _05f100_func
		.long   _078d60_func
		.long   _079f48_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _0608f4_func
		.long   _05f100_func
		.long   _0285d0_func
		.long   _028624_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _0285c0_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02abbc_func
		.long   _02e7a4_func
		.long   _02aca4_func
		.long   _05f100_func
		.long   _02f088_func
		.long   _02abbc_func
		.long   _02e7a4_func
		.long   _02aca4_func
		.long   _05f100_func
		.long   _030e60_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _01c874_func
		.long   _01ca00_func
		.long   _02e7a4_func
		.long   _01cac0_func
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _078a44_func
		.long   _07912c_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _07a110_func
		.long   _07a3ac_func
		.long   _02e7a4_func
		.long   _07a41c_func
		.long   _05f100_func
		.long   _07181c_func
		.long   _071ddc_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _05b7a4_func
		.long   _05bad0_func
		.long   _02e7a4_func
		.long   _05b774_func
		.long   _05f100_func
		.long   _05bb98_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _072324_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _03ca38_func
		.long   _03d218_func
		.long   _02e7a4_func
		.long   _03d334_func
		.long   _05f100_func
		.long   _03d3d0_func
		.long   _02d288_jump
		.long   _077080_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _078de0_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _031960_func
		.long   _02d288_jump
		.long   _032198_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05fb08_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f144_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02fa0c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _0609b4_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _060aa4_func
		.long   _05f100_func
		.long   _02f088_func
		.long   _071ddc_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _071ddc_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _07181c_func
		.long   _071ddc_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _07181c_func
		.long   _071ddc_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _064864_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05f894_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _01fe2c_func
		.long   _01fd90_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _020998_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _050670_func
		.long   _0508f4_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _0311c8_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _05122c_func
		.long   _051638_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _05f7f4_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _064bc0_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _040120_func
		.long   _02d288_jump
		.long   _0404b4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _079e10_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _079cf0_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f624_func
		.long   _02d288_jump
		.long   _02f694_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _022cac_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02a370_func
		.long   _02ac2c_func
		.long   _02e7a4_func
		.long   _02acd0_func
		.long   _05f100_func
		.long   _02a55c_func
		.long   _02ac2c_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02a5f8_func
		.long   _02ac2c_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _077080_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _01f8ec_func
		.long   _01fcbc_func
		.long   _02e7a4_func
		.long   _01fc8c_func
		.long   _05f100_func
		.long   _022b4c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _078838_func
		.long   _0789e0_func
		.long   _02e7a4_func
		.long   _07a02c_func
		.long   _05f100_func
		.long   _02316c_func
		.long   _02319c_func
		.long   _02e7a4_func
		.long   _023240_func
		.long   _022e5c_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _060010_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _05f718_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _05f6ec_func
		.long   _05f704_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _03117c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _064cb8_func
		.long   _064e40_func
		.long   _02e7a4_func
		.long   _0651fc_func
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05f9c8_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _031050_func
		.long   _0310dc_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _05fbc8_func
		.long   _02d288_jump
		.long   _05fbe8_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02ed2c_func
		.long   _02eda8_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05a23c_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _05f730_func
		.long   _05f768_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _030bf0_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _028c34_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f144_func
		.long   _02f3a8_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02fbd4_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _053030_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _0531e0_func
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05f838_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _075c74_func
		.long   _075f74_func
		.long   _02e7a4_func
		.long   _075eec_func
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _0607b8_func
		.long   _06084c_func
		.long   _02e7a4_func
		.long   _0608a8_func
		.long   _05f100_func
		.long   _038c40_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _038f80_func
		.long   _05f100_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02fc90_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02fec0_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05fa34_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _07a528_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _07a874_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05fba8_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _05f574_func
		.long   _0604bc_func
		.long   _02e7a4_func
		.long   _0605b8_func
		.long   _05f100_func
		.long   _02f088_func
		.long   _07a8a8_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _031050_func
		.long   _0310dc_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _031ce0_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _031ce0_func
		.long   _02d288_jump
		.long   _032198_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _078af4_func
		.long   _079f48_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _030c68_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _060e10_func
		.long   _0610e0_func
		.long   _02e7a4_func
		.long   _06121c_func
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _0310dc_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _0302ec_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _0302ec_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _072ec8_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _073404_func
		.long   _05f100_func
		.long   _07181c_func
		.long   _071ddc_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _073414_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _0735b4_func
		.long   _05f100_func
		.long   _060e10_func
		.long   _0610e0_func
		.long   _02e7a4_func
		.long   _06121c_func
		.long   _05f100_func
		.long   _02fc90_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _063860_func
		.long   _063d00_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _0635e0_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _050a54_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _050b10_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _01bdb0_func
		.long   _01c1d8_func
		.long   _02e7a4_func
		.long   _01c2f0_func
		.long   _05f100_func
		.long   _01c3ac_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _0286ac_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _021d34_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _02271c_func
		.long   _05f100_func
		.long   _02284c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _022a70_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _030368_func
		.long   _02d288_jump
		.long   _030644_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _030644_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _06dcc4_unknown
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _030658_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _03fdf8_func
		.long   _02d288_jump
		.long   _03fe24_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _03fdf8_func
		.long   _02d288_jump
		.long   _03fe24_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _032c5c_func
		.long   _033090_func
		.long   _02e7a4_func
		.long   _0330d0_func
		.long   _05f100_func
		.long   _050670_func
		.long   _0508f4_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _060b08_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _033128_func
		.long   _02d288_jump
		.long   _0333e0_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _060910_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _05167c_func
		.long   _051804_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _03de10_func
		.long   _03df74_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _030908_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _030ac0_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _030b58_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _03e068_func
		.long   _03e2bc_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _060e10_func
		.long   _0610e0_func
		.long   _02e7a4_func
		.long   _06121c_func
		.long   _05f100_func
		.long   _060e10_func
		.long   _0610e0_func
		.long   _02e7a4_func
		.long   _06121c_func
		.long   _05f100_func
		.long   _052c1c_func
		.long   _052f44_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _05f694_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _03e37c_func
		.long   _03e848_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _03e37c_func
		.long   _03e848_func
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _03ea2c_func
		.long   _02d288_jump
		.long   _03ec38_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _0335ac_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _03ca38_func
		.long   _03d218_func
		.long   _02e7a4_func
		.long   _03d334_func
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _0302ec_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _0302ec_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _050a54_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _033a84_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _060d1c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _0282f8_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _028258_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05609c_unknown
		.long   _05f100_func

_09475c_data:
		.ascii  "\x00\x16\x12\x0d\x0d\x0c"

_094762_data:
		.ascii  "\x04\x00\x00\x00\x03\x00\x07\x00"
		.ascii  "\x0a\x00\x0d\x00\x10\x00\x13\x00"
		.ascii  "\x16\x00\x19\x00\x1c\x00\x1f\x00"
		.ascii  "\x22\x00\x25\x00\x28\x00\x2a\x00"
		.ascii  "\x2d\x00"

_094784_data:
		.ascii  "\x08\x08\x08\x08\x08\x08\x08\x08"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x06\x06\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"

_094884_data:
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xc4\xff\xe6\xff"
		.ascii  "\x08\x00\x20\x00\x4b\x00\x20\x00"
		.ascii  "\x08\x00\xe6\xff\xc4\xff"

_0948aa_data:
		.ascii  "\xff\xff"
		.fill   0x14
		.ascii  "\x20\x00\x20\x00\x30\x00\x30\x00"
		.ascii  "\x30\x00\x30\x00\x30\x00\x20\x00"
		.ascii  "\x20\x00"

_0948d2_data:
		.ascii  "\x00\x00"

_0948d4_data:
		.fill   0x14
		.ascii  "\x20\x00\x20\x00\x30\x00\x30\x00"
		.ascii  "\x3c\x00\x30\x00\x30\x00\x20\x00"
		.ascii  "\x20\x00\x00\x00"

_0948fc_data:
		.ascii  "\x00\x00\x57\x03\x39\x03\x00\x00"
		.ascii  "\xff\xfc\x1a\xfd\xff\xff\xb2\x02"
		.ascii  "\x9a\x02\x00\x00\x93\xfd\xa9\xfd"
		.ascii  "\xff\xff\x2d\x02\x19\x02\x00\x00"
		.ascii  "\x0b\xfe\x1c\xfe\xff\xff\xc1\x01"
		.ascii  "\xb2\x01\x00\x00\x6b\xfe\x79\xfe"
		.ascii  "\xff\xff\x6b\x01\x5e\x01\x00\x00"
		.ascii  "\xb9\xfe\xc5\xfe\xff\xff\x24\x01"
		.ascii  "\x1a\x01\x00\x00\xf8\xfe\x01\xff"
		.ascii  "\xff\xff\xec\x00\xe4\x00\x00\x00"
		.ascii  "\x2b\xff\x32\xff\xff\xff\xbe\x00"
		.ascii  "\xb8\x00\x00\x00\x54\xff\x5a\xff"
		.ascii  "\xff\xff\x99\x00\x94\x00\x00\x00"
		.ascii  "\x75\xff\x7a\xff\xff\xff\x7c\x00"
		.ascii  "\x78\x00\x00\x00\x90\xff\x94\xff"
		.ascii  "\xff\xff\x50\x00\x80\x7f"

_09497a_data:
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"

_0949da_data:
		.ascii  "\xff\x00\x00\x00\xfd\xff\xfa\xff"
		.ascii  "\xf8\xff\xf7\xff\xf6\xff\xf7\xff"
		.ascii  "\xf9\xff\xfb\xff\xfe\xff\x02\x00"
		.ascii  "\x06\x00\x07\x00"

_0949f6_data:
		.ascii  "\x04\x00\x09\x00\x00\x00\x07\x00"
		.ascii  "\x05\x00"

_094a00_data:
		.ascii  "\x80"
		.string "~}|zyxwutsrponmljihgfecba`_^]\\[ZYXWVUTSRQPONNMLKJIIHGFFEDDCBAA@@"

_094a42_data:
		.ascii  "\x00\x00"

_094a44_data:
		.ascii  "\x1d\x00"

_094a46_data:
		.ascii  "\x08\x01"

_094a48_data:
		.ascii  "\x12"

_094a49_data:
		.ascii  "\x00"

_094a4a_data:
		.ascii  "\x00"

_094a4b_data:
		.ascii  "\x01"

_094a4c_data:
		.ascii  "\x01"

_094a4d_data:
		.ascii  "\x00"

_094a4e_data:
		.ascii  "\x01"

_094a4f_data:
		.ascii  "\x01"

_094a50_data:
		.ascii  "\x02\x00\x00\x00"

_094a54_data:
		.long   _0bfa14_data
		.ascii  "\x64\x00\xfe\x00\x02\x01\x00\x04"

_094a60_data:
		.ascii  "\x00\x00\x01\x05"
		.fill   0x4
		.long   _0bfa14_data
		.ascii  "\x5a\x00\xd4\x00\x02\x01\x03\x02"

_094a74_data:
		.ascii  "\x00\x00\x01\x09\x02\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\x2f\x00\xc8\x00\x03\x03\x03\x02"

_094a88_data:
		.ascii  "\x00\x00\x01\x0c\x01\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xb4\x00\xd7\x00\x05\x13\x01\x04"

_094a9c_data:
		.ascii  "\x00\x00\x02\x01\x02\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xb9\x00\xaf\x00\x08\x04\x06\x08"

_094ab0_data:
		.ascii  "\x00\x00\x02\x07"
		.fill   0x4
		.long   _0bfa14_data
		.ascii  "\x87\x00\xa0\x00\x14\x06\x07\x05"

_094ac4_data:
		.ascii  "\x00\x00\x02\x0c\x02\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\x5b\x00\x8f\x00\x07\x07\x07\x06"

_094ad8_data:
		.ascii  "\x00\x00\x02\x0e\x03\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xd4\x00\x85\x00\x09\x05\x05\x08"

_094aec_data:
		.ascii  "\x00\x00\x03\x01\x01\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xd1\x00\x5c\x00\x15\x08\x09\x0a"

_094b00_data:
		.ascii  "\x00\x00\x03\x03"
		.fill   0x4
		.long   _0bfa14_data
		.ascii  "\x01\x01\x50\x00\x0a\x0b\x09\x0a"

_094b14_data:
		.ascii  "\x00\x00\x03\x06\x01\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xea\x00\xeb\x00\x0a\x0b\x0b\x0c"

_094b28_data:
		.ascii  "\x00\x00\x04\x01\x01\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\x16\x01\xbe\x00\x0d\x0b\x0b\x0c"

_094b3c_data:
		.ascii  "\x00\x00\x04\x05\x05\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\x22\x01\x91\x00\x16\x0c\x0d\x0e"

_094b50_data:
		.ascii  "\x00\x00\x04\x08\x01\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\x4f\x01\xb4\x00\x0d\x0f\x0d\x0e"

_094b64_data:
		.ascii  "\x00\x00\x05\x01"
		.fill   0x4
		.long   _0bfa14_data
		.ascii  "\x38\x01\xe4\x00\x0e\x17\x0f\x10"

_094b78_data:
		.ascii  "\x00\x00\x05\x03\x05\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\x68\x01\xdc\x00\x11\x10\x0f\x10"

_094b8c_data:
		.ascii  "\x00\x00\x05\x09\x02\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\x65\x01\x50\x00\x11\x10\x11\x11"

_094ba0_data:
		.ascii  "\x00\x00\x06\x01\x02\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\x0a\x00\xd4\x00\x12\x00\x12\x12"

_094bb4_data:
		.ascii  "\x00\x00\x07\x14\x05\x00\x00\x00"

_094bbc_data:
		.long   _0bfa14_data
		.ascii  "\xb6\x00\x0a\x01\x04\x13\x13\x13"

_094bc8_data:
		.ascii  "\x00\x00\x07\x14\x03\x00\x00\x00"

_094bd0_data:
		.long   _0bfa14_data
		.ascii  "\x91\x00\x61\x00\x14\x06\x14\x14"

_094bdc_data:
		.ascii  "\x00\x00\x07\x14"
		.fill   0x4

_094be4_data:
		.long   _0bfa14_data
		.ascii  "\xbe\x00\x2d\x00\x15\x09\x15\x15"

_094bf0_data:
		.ascii  "\x00\x00\x07\x14\x02\x00\x00\x00"

_094bf8_data:
		.long   _0bfa14_data
		.ascii  "\x14\x01\x73\x00\x16\x0d\x16\x16"

_094c04_data:
		.ascii  "\x00\x00\x07\x14\x01\x00\x00\x00"

_094c0c_data:
		.long   _0bfa14_data
		.ascii  "\x32\x01\x0b\x01\x0f\x17\x17\x17"

_094c18_data:
		.ascii  "\x00\x00\x07\x14\x01\x00\x00\x00"

_094c20_data:
		.ascii  "\x14\xfa\x0b"

_094c23_data:
		.ascii  "\x00\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03"

_094ca4_data:
		.ascii  "\x03\x03\x03\x03\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00"

_094eb8_data:
		.fill   0x4

_094ebc_data:
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x6e\x00\x01\x04\x02\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x70\x00\x02\x66\x01\x00"
		.long   _0bfa18_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfa28_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x71\x00\x02\x66\x02\x00"
		.long   _0bfa3c_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x02\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x73\x00\x02\x66\x05\x00"
		.long   _0bfa18_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfa50_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x05\x00"
		.long   _0bfa60_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfa70_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfa84_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfa98_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfaa8_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x05\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x74\x00\x02\x66\x00\x00"
		.long   _0bfa3c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x00\x00"
		.long   _0bfac0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfad4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfae4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfaf8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfb0c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfb1c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfb34_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfb48_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfb5c_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x75\x00\x02\x66\x01\x00"
		.long   _0bfb74_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfb84_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x72\x00\x02\x66\x00\x00"
		.long   _0bfb98_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfbb8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfbc8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfbdc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfbf4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfc08_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfc1c_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x76\x00\x02\x66\x05\x00"
		.long   _0bfc30_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfc44_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfc58_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x05\x00"
		.long   _0bfc68_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfc7c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfc90_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfca4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfcb8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfccc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfce0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfa28_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfcf4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfd08_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfd20_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfd34_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfd44_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfd58_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfd6c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfd7c_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x05\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x77\x00\x02\x66\x00\x00"
		.long   _0bfd94_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfdac_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x00\x00"
		.long   _0bfdbc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfdd0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfde4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfdf8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfe0c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfe1c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfe2c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfe40_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfe58_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfe6c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfe80_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfe94_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfebc_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x78\x00\x02\x66\x01\x00"
		.long   _0bfecc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x01\x00"
		.long   _0bfee0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfef4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff04_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff18_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff28_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff3c_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x79\x00\x02\x66\x01\x00"
		.long   _0bfa50_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x01\x00"
		.long   _0bff50_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff60_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfbdc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfa60_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff74_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfa70_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfa84_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff8c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfa98_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff9c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bffac_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bffbc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfaa8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bffd4_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x7a\x00\x02\x66\x02\x00"
		.long   _0bffe8_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x02\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x7b\x00\x02\x66\x05\x00"
		.long   _0bfff8_data
		.ascii  "\xa0\x00\x00\x00\x02\x02\x05\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x7c\x00\x02\x66\x05\x00"
		.long   _0c0018_data
		.ascii  "\xa0\x00\x00\x00\x02\x02\x05\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x7d\x00\x02\x66\x05\x00"
		.long   _0c003c_data
		.ascii  "\xa0\x00\x00\x00\x02\x04\x05\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x7e\x00\x02\x00\x01\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x7f\x00\x02\x06\x01\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x80\x00\x01\x00\x01\x00"
		.long   _0c005c_data
		.ascii  "\xc8\x00\x00\x00\x02\xff\x02"
		.fill   0xf1

_095510_data:
		.ascii  "\x00\x29\x20\x08\x00\x13\x20\x1b"
		.ascii  "\x00\x1e\x04\x02\x00\x3c\x20\x0b"
		.ascii  "\x00\x10\x04\x0c\x00\x45\x04\x07"
		.ascii  "\x24\x14\x20\x1b\x00\x4a\x80\x2a"
		.ascii  "\xa0\x04\x20\x08\x24\x0b\x20\x7c"
		.ascii  "\x24\x13\x20\x3a\x00\x1c\x10\x2e"
		.ascii  "\x00\x0d\x80\x17\x90\x01\x10\x17"
		.ascii  "\x90\x01\x80\x1f\x90\x02\x10\x34"
		.ascii  "\x00\x21\x80\x03\x90\x01\x10\x17"
		.ascii  "\x90\x01\x80\x1b\x90\x03\x10\x4a"
		.ascii  "\x00\x44\x80\x1f\x90\x01\x10\x04"
		.ascii  "\x14\x0c\x10\x0e\x00\x08\xa0\x1d"
		.ascii  "\x80\x02\x90\x01\x80\xca\x90\x0d"
		.ascii  "\x10\x23\x00\x11\x20\x24\x00\x13"
		.ascii  "\x20\x0d\xa0\x01\x80\x16\xa0\x19"
		.ascii  "\x20\x26\x24\x0e\x20\x1d\x00\x10"
		.ascii  "\x80\x19\x90\x11\x80\x01\x90\x01"
		.ascii  "\x80\x0c\xa0"
		.ascii   "0 #$"
		.ascii  "\x04"
		.ascii   " u$\t "
		.ascii  "\x0f\x00\x55\x10\x02"
		.fill   0x61
		.ascii  "\x29\x20\x0c\x24\x13\x04\x02\x14"
		.ascii  "\x01\x10\x09\x14\x01\x04\x0c\x00"
		.ascii  "\x1a\x04\x05\x00\x2b\x10\x07\x00"
		.ascii  "\x07\x20\x07\x00\x02\x04\x03\x00"
		.ascii  "\x02\x10\x01\x50\x01\x10\x06\x00"
		.ascii  "\x07\x20\x08\x00\x4b\x04\x05\x00"
		.ascii  "\x3f\x10\x06\x00\x0e\x20\x09\x00"
		.ascii  "\x09\x04\x06\x00\x0c\x20\x37\x00"
		.ascii  "\x05\x10\x02\x50\x1c\x10\x01\x04"
		.ascii  "\x05\x00\x14\x10\x07\x00\x08\x20"
		.ascii  "\x05\x00\x38\x04\x04\x00\x0e\x10"
		.ascii  "\x08\x00\x22\x20\x06\x00\x19\x54"
		.ascii  "\x04\x50\x17\x10\x15\x00\x08\x20"
		.ascii  "\x16\x00\x0f\x20\x0b\x00\x01\x04"
		.ascii  "\x06\x00\x0d\x10\x06\x00\x52\x04"
		.ascii  "\x04\x00\x58\x20\x04\x24\x04\x20"
		.ascii  "\x2c\x00\x0a\x10\x02\x50\x17\x10"
		.ascii  "\x02\x00\x0d\x04\x04\x00\x0a\x10"
		.ascii  "\x03\x00\x0a\x20\x04\x00\x10\x10"
		.ascii  "\x05\x00\x34\x04\x04\x00\x33\x10"
		.ascii  "\x04\x00\x0d\x20\x03\x00\x1b\x04"
		.ascii  "\x05\x00\x47\x04\x04\x00\x51\x04"
		.ascii  "\x04\x00\x21\x10\x0c\x00\x13\x20"
		.ascii  "\x06\x00\x05\x04\x07\x00\x42"
		.fill   0x3b
		.ascii  "\x1d\x20\x32\x24\x08\x20\x0d\x21"
		.ascii  "\x05\x20\x08\x00\x0c\x20\x01\x24"
		.ascii  "\x08\x20\x07\x00\x09\x20\x06\x24"
		.ascii  "\x05\x20\x36\x24\x02\x04\x0a\x00"
		.ascii  "\x07\x20\x03\x00\x11\x20\x03\x22"
		.ascii  "\x03\x26\x01\x66\x06\x62\x01\x22"
		.ascii  "\x20\x02\x14\x22\x04\x26\x08\x22"
		.ascii  "\x0f\x26\x0a\x22\x16\x00\x18\x20"
		.ascii  "\x08\x00\x47\x20\x05\x24\x05\x20"
		.ascii  "\x1b\x00\x05\x04\x06\x00\x04\x04"
		.ascii  "\x07\x00\x0d\x22\x89\x26\x0d\x22"
		.ascii  "\x15\x02\x02\x00\x1c\x20\x08\x24"
		.ascii  "\x07\x20\x19\x00\x0c\x20\x03\x24"
		.ascii  "\x03\x20\x02\x00\x0c\x20\x17\x24"
		.ascii  "\x08\x20\x07\x24\x01\x04\x06\x00"
		.ascii  "\x16\x20\x09\x24\x0b\x20\x22\x24"
		.ascii  "\x03\x20\x15\x24\x0a\x20\x10\x00"
		.ascii  "\x1b\x20\x08\x24\x08\x20\x0c"
		.string "$\r K"
		.ascii  "\x46\x02\x27\x22\x05\x26\x06\x22"
		.ascii  "\x12\x26\x0e\x22\x2b\x02\x01\x00"
		.ascii  "\x10\x20\x06\x00\x2d\x04\x12\x00"
		.ascii  "\x09\x04\x12\x00\x15\x01\x57\x00"
		.ascii  "\x16\x04\x0b\x00\x0e\x04\x23\x00"
		.ascii  "\x2b\x01\x22\x00\x1b\x04\x0d\x00"
		.ascii  "\x1a\x04\x13"
		.fill   0x33
		.ascii  "\x28\x20\x4a\x00\x03\x20\x25\x24"
		.ascii  "\x0c\x20\x07\x00\x15\x01\x09\x00"
		.ascii  "\x0e\x80\x1d\x00\x1e\x20\x0a\x24"
		.ascii  "\x1a\x20\x0b\x00\x22\x20\x10\x24"
		.ascii  "\x09\x20\x13\x00\x10\x20\x10\x00"
		.ascii  "\x04\x01\x3d\x00\x1c\x80\x35\x00"
		.ascii  "\x0c\x01\x20\x81\x03\x80\x2f\x00"
		.ascii  "\x03\x01\x1b\x81\x04\x80\x34\x00"
		.ascii  "\x0f\x20\x09\x24\x08\x20\x17\x00"
		.ascii  "\x20\x20\x07\x00\x09\x04\x14\x00"
		.ascii  "\x11\x01\x07\x00\x11\x80\x24\x00"
		.ascii  "\x1d\x20\x01\x24\x0e\x20\x15\x00"
		.ascii  "\x1f\x20\x02\x24\x1e\x20\x09\x00"
		.ascii  "\x0f\x10\x08\x00\x04\x01\x29\x00"
		.ascii  "\x2c\x10\x0e\x14\x07\x10\x2c\x00"
		.ascii  "\x12\x04\x1f\x24\x07\x20\x22\x00"
		.ascii  "\x06\x20\x02\x24\x05\x20\x0f\x00"
		.ascii  "\x2e\x10\x18\x00\x0c\x20\x06\x00"
		.ascii  "\x21\x20\x05\x24\x05\x20\x14\x24"
		.ascii  "\x0e\x20\x10\x00\x34\x20\x10\x00"
		.ascii  "\x0e\x80\x0f\xa0\x13\xa4\xff\xa4"
		.ascii  "\x22\xa0\x28"
		.fill   0x4f
		.ascii  "\xbc\x20\x10\x00\xb0\x02\x0e\x00"
		.ascii  "\x2a\x04\x17\x00\x15\x04\x02\x24"
		.ascii  "\x11\x20\x02\x00\x1d\x04\x01\x24"
		.ascii  "\x08\x20\x02\x00\x25\x20\x0d\x00"
		.ascii  "\x0a\x02\x0b\x00\x76\x04\x0f\x00"
		.ascii  "\x2b\x04\x0a\x24\x04\x20\x02\x00"
		.ascii  "\x2b\x10\x14\x14\x13\x10\x27\x14"
		.ascii  "\x07\x10\x1f\x00\x15\x02\x0e\x00"
		.ascii  "\x29\x04\x18\x00\x13\x20\x05\x00"
		.ascii  "\x58\x04\x12\x24\x0c\x20\x01\x00"
		.ascii  "\x66\x04\x05\x24\x07\x20\x0b\x00"
		.ascii  "\x06\x20\x01\x00\x1a\x02\x0a\x00"
		.ascii  "\x34\x04\x0c\x00\x19\x10\x04\x00"
		.ascii  "\x17\x04\x02\x14\x02\x04\x06\x00"
		.ascii  "\x61\x04\x02\x14\x02\x54\x0a\x14"
		.ascii  "\x01\x10\x16\x00\x08\x01\x05\x00"
		.ascii  "\x1b\x10\x45\x00\x07\x20\x34\x00"
		.ascii  "\x0a\x02\x0a\x00\x2e\x04\x10\x00"
		.ascii  "\x10\x20\x09\x00\x0a\x04\x06\x24"
		.ascii  "\x0e\x20\x05\x00\x04\x10\x08\x00"
		.ascii  "\x02\x01\x06\x00\xa5\x20\x21\x00"
		.ascii  "\x05\x20\x14\x00\x0c\x02\x08\x00"
		.ascii  "\x26\x04\x11\x00\x19\x10\x04\x14"
		.ascii  "\x05\x04\x02\x00\x20\x14\x09\x10"
		.ascii  "\x08\x00\x1e\x10\x4a\x00\x80"
		.fill   0x33
		.ascii  "\x54\x10\x25\x00\x1a\x10\x03\x00"
		.ascii  "\x0a\x20\x06\x00\x3a\x10\x0d\x00"
		.ascii  "\x09\x20\x03\x00\xff\x00\x0b\x20"
		.ascii  "\x03\x24\x11\x20\x13\x00\x17\x10"
		.ascii  "\x07\x50\x02\x54\x1f\x50\x11\x10"
		.ascii  "\x01\x00\x11\x20\x03\x00\x8b\x20"
		.ascii  "\x04\x24\x0f\x20\x13\x00\x2d\x10"
		.ascii  "\x03\x50\x03"
		.ascii   "T P\t"
		.ascii  "\x10\x04\x00\x31\x20\x02\x00\x73"
		.ascii  "\x04\x18\x00\x35\x04\x18\x00\x4a"
		.ascii  "\x20\x08\x24\x1e\x20\x0b\x24\x12"
		.ascii  "\x20\x03\x00\x19\x20\x27\x00\x44"
		.ascii  "\x04\x0e\x00\x07\x20\x05\x00\x50"
		.ascii  "\x04\x13\x14\x09\x04\x01\x00\x20"
		.ascii  "\x10\x04\x00\x11\x20\x04\x00\x22"
		.fill   0x80

_095aea_data:
		.ascii  "\x00\x00\x9a\x00\xc0\x00\xc8\x00"
		.ascii  "\xac\x00\xc8\x00\x78\x00"

_095af8_data:
		.ascii  "\x02\x00\x03\x00\x04\x00\x05\x00"
		.ascii  "\x01\x00\x05\x00"

_095b04_data:
		.ascii  "\x07\x00\x07\x00\x01\x00\x04\x00"
		.ascii  "\x09\x00\x0a\x00"

_095b10_data:
		.ascii  "\x00\x00\x0a\x00"

_095b14_data:
		.ascii  "\xff"

_095b15_data:
		.ascii  "\xff\x00\x00"

_095b18_data:
		.fill   0x4

_095b1c_data:
		.fill   0x4

_095b20_data:
		.ascii  "\x4d"

_095b21_data:
		.ascii  "\x48"

_095b22_data:
		.ascii  "\x4b"

_095b23_data:
		.ascii  "\x50"

_095b24_data:
		.ascii  "\x38"

_095b25_data:
		.ascii  "\x1d"

_095b26_data:
		.ascii  "\x2d\x00"

_095b28_data:
		.long   _095b22_data

_095b2c_data:
		.long   _095b21_data

_095b30_data:
		.long   _095b20_data

_095b34_data:
		.long   _095b23_data

_095b38_data:
		.long   _095b25_data

_095b3c_data:
		.long   _095b24_data

_095b40_data:
		.long   _095b26_data

_095b44_data:
		.ascii   "KHMP"
		.ascii  "\x1d\x38\x2d"

_095b4b_data:
		.ascii  "\x00"

_095b4c_data:
		.ascii  "\x00\x00"

_095b4e_data:
		.ascii  "\x01\x00"

_095b50_data:
		.ascii  "\x00\x00"

_095b52_data:
		.ascii  "\x00\x00"

_095b54_data:
		.ascii  "\x00"

_095b55_data:
		.ascii  "\x01"

_095b56_data:
		.ascii  "\x01\x00"

_095b58_data:
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"

_095b68_data:
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"

_095b78_data:
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"

_095b88_data:
		.ascii  "\xff\x00\xff\x00"

_095b8c_data:
		.ascii  "\xff\x00\xff\x00"

_095b90_data:
		.ascii  "\xff\x00"

_095b92_data:
		.ascii  "\xff\x00\xff\x00\xff\x00"

_095b98_data:
		.ascii  "\x00"

_095b99_data:
		.ascii  "\x00"

_095b9a_data:
		.ascii  "\x00\x00"

_095b9c_data:
		.ascii  "\x01\x00"

_095b9e_data:
		.ascii  "\x01"
		.fill   0x9

_095ba8_data:
		.ascii  "\x01"

_095ba9_data:
		.ascii  "\x01\x00\x00"

_095bac_data:
		.ascii  "\x00\x00"

_095bae_data:
		.ascii  "\x00\x00"

_095bb0_data:
		.ascii  "\x02\x00\xff"
		.fill   0x19
		.ascii  "\x02\x00\x01\x00\x03\x00\xff"
		.fill   0x13
		.ascii  "\x06\x00\x02\x00\x02\x00\x02\x00"
		.ascii  "\x00\x00\x01\x00\x01\x00\x01"
		.fill   0x5
		.ascii  "\xff"
		.fill   0x7
		.ascii  "\x03"
		.fill   0x5
		.ascii  "\x01\x00\x01\x00\x01\x00\xff"
		.fill   0xf
		.ascii  "\x05\x00\x01\x00\x02\x00\x03"
		.fill   0x5
		.ascii  "\x03\x00\x01\x00\x04\x00\x00\x00"
		.ascii  "\xff"
		.fill   0x7
		.ascii  "\x07\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x06\x00\x00\x00\x03"
		.fill   0x5
		.ascii  "\x01\x00\x04\x00\x00\x00\xff"
		.fill   0x5

_095c58_data:
		.ascii  "\x20"

_095c59_data:
		.ascii  "\x07"

_095c5a_data:
		.ascii  "\x3f\x1f\x07\x3d\x20\x07\x3a\x21"
		.ascii  "\x07"
		.ascii   "8$\n5%"
		.ascii  "\x0c\x33\x2d\x0f\x30\x34\x11\x2e"
		.ascii  "\x2d\x0f\x30\x28\x0f\x33\x23\x0c"
		.ascii   "5#\n8 "
		.ascii  "\x07\x3a\x1e\x05\x3d\x1b\x05\x3d"
		.ascii  "\x20"

_095c86_data:
		.ascii  "\x07\x3f"

_095c88_data:
		.ascii  "\x00\x00"

_095c8a_data:
		.ascii  "\x00\x00"

_095c8c_data:
		.ascii  "\x00\x00"

_095c8e_data:
		.ascii  "\x00\x00"

_095c90_data:
		.ascii  "\x00\x00"

_095c92_data:
		.ascii  "\x00\x00"

_095c94_data:
		.ascii  "\x00\x00"

_095c96_data:
		.ascii  "\x00\x00"

_095c98_data:
		.ascii  "\x00\x00"

_095c9a_data:
		.ascii  "\x00"

_095c9b_data:
		.ascii  "\x00"

_095c9c_data:
		.ascii  "\x09\x0f\x05\x13\x14\x0a\x15\x19"
		.ascii  "\x0a\x22\x1e"
		.ascii   "\n$#\n'(\n)-\n)2\n.7\n1<\n3<\n6<\n8<\n;<\n=<\n?"

_095cca_data:
		.ascii  "\x00\x00"

_095ccc_data:
		.ascii  "\x00\x00"

_095cce_data:
		.ascii  "\x00"

_095ccf_data:
		.ascii  "\x00"

_095cd0_data:
		.ascii  "\x14"

_095cd1_data:
		.ascii  "\x00"

_095cd2_data:
		.ascii  "\x00"

_095cd3_data:
		.ascii  "\x00"

_095cd4_data:
		.fill   0x4
		.ascii  "\x06\x00\x02\x00\x05\x00\x04\x00"
		.ascii  "\x08\x00"

_095ce2_data:
		.ascii  "\x10\x00\x10\x00\x08\x00\x08\x00"
		.ascii  "\x10\x00\x10\x00\x08\x00"

_095cf0_data:
		.ascii  "\x14\x00"

_095cf2_data:
		.ascii  "\x00\x00"

_095cf4_data:
		.ascii  "\x00\x00"

_095cf6_data:
		.ascii  "\xf4\x01"

_095cf8_data:
		.ascii  "\x00\x00"

_095cfa_data:
		.ascii  "\x00\x00"

_095cfc_data:
		.ascii  "\x00\x00"

_095cfe_data:
		.fill   0x4

_095d02_data:
		.ascii  "\x40\x02"

_095d04_data:
		.ascii  "\x00\x00\x90\x02\x00\x00\xe0\x02"
		.ascii  "\x00\x00\x30\x03\x00\x00\x80\x03"
		.ascii  "\x00\x00\xd0\x03\x00\x00\x20\x04"
		.ascii  "\x00\x00\x70\x04\x00\x00\xd4\xff"
		.ascii  "\x3d\x02\xce\xff\x8d\x02\xc7\xff"
		.ascii  "\xdd\x02\xc0\xff\x2c\x03\xb9\xff"
		.ascii  "\x7c\x03\xb2\xff\xcc\x03\xab\xff"
		.ascii  "\x1b\x04\xa4\xff\x6b\x04\x9d\xff"
		.ascii  "\xa6\xff\x37\x02\x9c\xff\x86\x02"
		.ascii  "\x8f\xff\xd4\x02\x81\xff\x23\x03"
		.ascii  "\x73\xff\x72\x03\x65\xff\xc1\x03"
		.ascii  "\x57\xff\x0f\x04\x49\xff\x5e\x04"
		.ascii  "\x3b\xff\x77\xff\x2c\x02\x6b\xff"
		.ascii  "\x79\x02\x57\xff\xc6\x02\x42\xff"
		.ascii  "\x14\x03\x2d\xff\x61\x03\x19\xff"
		.ascii  "\xae\x03\x04\xff\xfc\x03\xef\xfe"
		.ascii  "\x49\x04\xda\xfe\x46\xff\x1d\x02"
		.ascii  "\x3b\xff\x68\x02\x20\xff\xb3\x02"
		.ascii  "\x05\xff\xfe\x02\xe9\xfe\x49\x03"
		.ascii  "\xce\xfe\x95\x03\xb3\xfe\xe0\x03"
		.ascii  "\x97\xfe\x2b\x04\x7c\xfe\x12\xff"
		.ascii  "\x0a\x02\x0d\xff\x52\x02\xeb\xfe"
		.ascii  "\x9b\x02\xc9\xfe\xe3\x02\xa8\xfe"
		.ascii  "\x2c\x03\x86\xfe\x74\x03\x64\xfe"
		.ascii  "\xbd\x03\x42\xfe\x05\x04\x20\xfe"
		.ascii  "\xd9\xfe\xf2\x01\xe1\xfe\x38\x02"
		.ascii  "\xb9\xfe\x7d\x02\x91\xfe\xc2\x02"
		.ascii  "\x69\xfe\x07\x03\x41\xfe\x4d\x03"
		.ascii  "\x19\xfe\x92\x03\xf1\xfd\xd7\x03"
		.ascii  "\xc9\xfd\x9a\xfe\xd7\x01\xb6\xfe"
		.ascii  "\x19\x02\x88\xfe\x5a\x02\x5a\xfe"
		.ascii  "\x9c\x02\x2c\xfe\xdd\x02\xff\xfd"
		.ascii  "\x1f\x03\xd1\xfd\x61\x03\xa3\xfd"
		.ascii  "\xa2\x03\x75\xfd\x53\xfe\xb9\x01"
		.ascii  "\x8e\xfe\xf6\x01\x5b\xfe\x33\x02"
		.ascii  "\x27\xfe\x71\x02\xf4\xfd\xae\x02"
		.ascii  "\xc1\xfd\xeb\x02\x8d\xfd\x28\x03"
		.ascii  "\x5a\xfd\x66\x03\x26\xfd\x01\xfe"
		.ascii  "\x97\x01\x69\xfe\xcf\x01\x31\xfe"
		.ascii  "\x08\x02\xf8\xfd\x40\x02\xc0\xfd"
		.ascii  "\x79\x02\x87\xfd\xb2\x02\x4e\xfd"
		.ascii  "\xea\x02\x16\xfd\x23\x03\xdd\xfc"
		.ascii  "\x9e\xfd\x72\x01\x47\xfe\xa5\x01"
		.ascii  "\x0a\xfe\xd9\x01\xcd\xfd\x0c\x02"
		.ascii  "\x8f\xfd\x3f\x02\x52\xfd\x73\x02"
		.ascii  "\x15\xfd\xa6\x02\xd8\xfc\xda\x02"
		.ascii  "\x9a\xfc\x25\xfd\x4a\x01\x29\xfe"
		.ascii  "\x78\x01\xe7\xfd\xa6\x01\xa6\xfd"
		.ascii  "\xd4\x01\x64\xfd\x01\x02\x23\xfd"
		.ascii  "\x2f\x02\xe1\xfc\x5d\x02\x9f\xfc"
		.ascii  "\x8b\x02\x5e\xfc\x8a\xfc\x20\x01"
		.ascii  "\x0e\xfe\x48\x01\xc8\xfd\x70\x01"
		.ascii  "\x83\xfd\x98\x01\x3e\xfd\xc0\x01"
		.ascii  "\xf9\xfc\xe8\x01\xb3\xfc\x10\x02"
		.ascii  "\x6e\xfc\x38\x02\x29\xfc\xb7\xfb"
		.ascii  "\xf3\x00\xf6\xfd\x15\x01\xae\xfd"
		.ascii  "\x37\x01\x65\xfd\x58\x01\x1d\xfd"
		.ascii  "\x7a\x01\xd4\xfc\x9c\x01\x8c\xfc"
		.ascii  "\xbe\x01\x43\xfc\xe0\x01\xfb\xfb"
		.ascii  "\x82\xfa\xc5\x00\xe3\xfd\xe0\x00"
		.ascii  "\x98\xfd\xfb\x00\x4d\xfd\x17\x01"
		.ascii  "\x02\xfd\x32\x01\xb7\xfc\x4d\x01"
		.ascii  "\x6b\xfc\x69\x01\x20\xfc\x84\x01"
		.ascii  "\xd5\xfb\x8a\xf8\x95\x00\xd4\xfd"
		.ascii  "\xa9\x00\x87\xfd\xbe\x00\x3a\xfd"
		.ascii  "\xd3\x00\xec\xfc\xe7\x00\x9f\xfc"
		.ascii  "\xfc\x00\x52\xfc\x11\x01\x04\xfc"
		.ascii  "\x26\x01\xb7\xfb\xa9\xf4\x64\x00"
		.ascii  "\xc9\xfd\x71\x00\x7a\xfd\x7f\x00"
		.ascii  "\x2c\xfd\x8d\x00\xdd\xfc\x9b\x00"
		.ascii  "\x8e\xfc\xa9\x00\x3f\xfc\xb7\x00"
		.ascii  "\xf1\xfb\xc5\x00\xa2\xfb\x24\xe9"
		.ascii  "\x32\x00\xc3\xfd\x39\x00\x73\xfd"
		.ascii  "\x40\x00\x23\xfd\x47\x00\xd4\xfc"
		.ascii  "\x4e\x00\x84\xfc\x55\x00\x34\xfc"
		.ascii  "\x5c\x00\xe5\xfb\x63\x00\x95\xfb"
		.fill   0x4
		.ascii  "\xc0\xfd\x00\x00\x70\xfd\x00\x00"
		.ascii  "\x20\xfd\x00\x00\xd0\xfc\x00\x00"
		.ascii  "\x80\xfc\x00\x00\x30\xfc\x00\x00"
		.ascii  "\xe0\xfb\x00\x00\x90\xfb"

_095f86_data:
		.ascii  "\x12\x00"

_095f88_data:
		.ascii  "\x00\x00"

_095f8a_data:
		.ascii  "\x00\x00"

_095f8c_data:
		.fill   0x4

_095f90_data:
		.fill   0x4

_095f94_data:
		.fill   0x4

_095f98_data:
		.ascii  "\xb9\x01\x00\x00"

_095f9c_data:
		.ascii  "\x00"

_095f9d_data:
		.ascii  "\x00"

_095f9e_data:
		.ascii  "\x00"

_095f9f_data:
		.ascii  "\x00"

_095fa0_data:
		.fill   0x4

_095fa4_data:
		.ascii  "\xfd\xff\xfe\xff\xff\xff\x00\x00"
		.ascii  "\x01\x00\x01\x00\x03\x00"

_095fb2_data:
		.ascii  "\xfd\xff\xfb\xff\xfc\xff\xfa\xff"
		.ascii  "\xfb\xff\xfd\xff\xfd\xff"
		.long   _0c0528_data
		.long   _0c0540_data
		.long   _0c0550_data
		.long   _0c0560_data
		.long   _0c0570_data
		.long   _0c057c_data
		.long   _0c05a0_data
		.long   _0c05ac_data
		.long   _0c05bc_data
		.long   _0c05d0_data
		.long   _0c05e8_data
		.long   _0c05f4_data
		.long   _0c0600_data
		.long   _0c0610_data
		.long   _0c0610_data
		.long   _0c061c_data

_096000_data:
		.fill   0x4
		.long   _0c064c_data

_096008_data:
		.ascii  "\x00"

_096009_data:
		.ascii  "\x53\x00\x00"

_09600c_data:
		.fill   0x4

_096010_data:
		.ascii  "\x00\x00"

_096012_data:
		.fill   0x4
		.ascii  "\x04\x00\x07\x00\x09\x00\x0a\x00"
		.ascii  "\x09\x00\x07\x00\x04\x00\x00\x00"
		.ascii  "\xfe\xff\xfc\xff\xfb\xff\xfa\xff"
		.ascii  "\xfb\xff\xfc\xff\xfe\xff\x00\x00"
		.ascii  "\x01\x00\x02\x00\x03\x00\x02\x00"
		.ascii  "\x01\x00\x00\x00\xff\xff\xfe\xff"
		.ascii  "\xff\xff\x00\x00\x01\x00\x00\x00"

_09604e_data:
		.ascii  "\x00\x01\x02"

_096051_data:
		.ascii  "\x00\x00\x02\x00\x02"

_096056_data:
		.ascii  "\x02\x00\x00\x02\x00"

_09605b_data:
		.ascii  "\x02\x02\x00\x00\x00"

_096060_data:
		.fill   0x5

_096065_data:
		.ascii  "\x00"

_096066_data:
		.ascii  "\x00\x00"

_096068_data:
		.fill   0x4
		.ascii  "\x98\xb0\x86\x83\x86\x85\xa6\xb8"
		.ascii  "\x99\x98\xb0\x88\x83\x88\x85\xa6"
		.ascii  "\xb8\x99\x98\xb0\x84\xb9\x84\xb0"
		.ascii  "\x86\x99\x98\xb0\x84\xb9\x84\xb0"
		.ascii  "\x88\x99\x89\xa7\x84\xb0\x89\xa7"
		.ascii  "\x84\xb0\x9d\x94\x88\x84\x85\xb7"
		.ascii  "\x9d\x94\x86\x84\x85\xb7\x9d\x9f"
		.ascii  "\x88\x84\x85\xb7\x9d\x9f\x86\x84"
		.ascii  "\x85\xb7\x98\x83\x86\x85\x84\xb9"
		.ascii  "\x8e\xb1\x99\x98\x83\x88\x85\x84"
		.ascii  "\xb9\x8e\xb1\x99\xb1\x9e\x83\x80"
		.ascii  "\xa7\x9f\x8f\xb7\xa4\x9e\x83\x80"
		.ascii  "\xa7\x9f\x8f\xb7\xb4\x88\x9c\x8e"
		.ascii  "\xb9\x87\x9f\xa7\xb4\x86\x9c\x8e"
		.ascii  "\xb9\xba\x9f\xa7\xb5\xb2\x8f\x80"
		.ascii  "\x82\xb5\xb2\x8f\x80\x82\xb2\xb6"
		.ascii  "\x8f\x9f\x88\xb2\xb6\x8f\x9f\x86"
		.ascii  "\xa7\xb0\xb3\xb2\xb9\xb7\xb6\x95"
		.ascii  "\xa7\xb0\xb3\xb2\xb9\xb7\xb6\x95"
		.ascii  "\x85\xb6\xb3\x91\xb1\x83\xb7\x92"
		.ascii  "\x85\xb6\xb3\x91\xa4\x83\xb7\x92"
		.ascii  "\x94\x91\x9d\x92\x91\x90\xa6\x85"
		.ascii  "\x94\x91\x9d\x92\x91\x90\xa6\x85"
		.ascii  "\xb3\x93\xb6\x91\x84\xb3\x93\xb6"
		.ascii  "\x91\x84\x85\x84\x81\xb9\x81\xb0"
		.ascii  "\x8e\x99\x85\x84\x81\xb9\x81\xb0"
		.ascii  "\x8e\x99\x89\x81\x8e\xb8\xa7\x86"
		.ascii  "\x85\xb7\x99\x89\x81\x8e\xb8\xa7"
		.ascii  "\x88\x85\xb7\x99\xb6\xa7\x86\x85"
		.ascii  "\x82\x85\x84\xa6\x99\xb6\xa7\x88"
		.ascii  "\x85\x82\x85\x84\xa6\x99\x82\x81"
		.ascii  "\x8e\xa7\x84\xa6\x99\x82\x81\x8e"
		.ascii  "\xa7\x84\xa6\x99\x82\x89\x81\x85"
		.ascii  "\xb5\xb8\x99\x82\x89\x81\x85\xb5"
		.ascii  "\xb8\x99\x84\xa7\x81\x8e\x82\xa7"
		.ascii  "\x86\x99\x84\xa7\x81\x8e\x82\xa7"
		.ascii  "\x88\x99\x8e\xb2\x8e\xb2\x99\x8e"
		.ascii  "\xb2\x8e\xb2\x99\xb0\x81\x85\x83"
		.ascii  "\xb8\x99\xb0\x81\x85\x83\xb8\x99"
		.ascii  "\xb1\x86\x85\xb4\x8e\x85\x8f\x99"
		.ascii  "\xa4\x88\x85\xb4\x8e\x85\x8f"

_0961b3_data:
		.ascii  "\x99"

_0961b4_data:
		.ascii  "\x00"

_0961b5_data:
		.ascii  "\x00"

_0961b6_data:
		.ascii  "\x01\x00"

_0961b8_data:
		.ascii  "\x00\x00"

_0961ba_data:
		.ascii  "\x00\x00"

_0961bc_data:
		.ascii  "\x00\x00"

_0961be_data:
		.ascii  "\x00\x00"

_0961c0_data:
		.fill   0x4

_0961c4_data:
		.ascii  "\x3c"

_0961c5_data:
		.ascii  "\x00"

_0961c6_data:
		.ascii  "\x00"

_0961c7_data:
		.ascii  "\x02"

_0961c8_data:
		.ascii  "\x00"

_0961c9_data:
		.ascii  "\x00\x00\x00"

_0961cc_data:
		.ascii  "\x00\x0f\x00\x00"

_0961d0_data:
		.ascii  "\x01\x00\x00\x00"

_0961d4_data:
		.ascii  "\xd7\x00\x00\x00"

_0961d8_data:
		.ascii  "\xdf"
		.fill   0x4
		.ascii  "\x1f\x00\x00\xdf\x00\x00\x00\x9c"
		.ascii  "\x01\x00\x00\xd4\x01\x00\x00\x28"
		.ascii  "\x01\x01\x00\xd4\x01\x00\x00\x7a"
		.ascii  "\x03\x00\x00\x98\x03\x00\x00\x00"
		.ascii  "\x14\x01\x00\x98\x03\x00\x00\x92"
		.ascii  "\x04\x00\x00\xab\x04\x00\x00\xff"
		.ascii  "\xff\xff\x00\xab\x04\x00\x00\x08"
		.ascii  "\x07\x00\x00\x0d\x07\x00\x00"

_09621c_data:
		.ascii  "\x3c"

_09621d_data:
		.ascii  "\x00"

_09621e_data:
		.ascii  "\x00\x00"

_096220_data:
		.fill   0x4

_096224_data:
		.ascii  "\x00\x01\x00\x00"

_096228_data:
		.fill   0x8

_096230_data:
		.fill   0x8

_096238_data:
		.fill   0x8

_096240_data:
		.fill   0x5
		.ascii  "\x08\x00\x00"

_096248_data:
		.ascii  "\x82"

_096249_data:
		.ascii  "\xaa\x00\x00"

_09624c_data:
		.fill   0x4

_096250_data:
		.ascii  "\xe8\x6d\x04\x00"

_096254_data:
		.ascii  "\xf6"

_096255_data:
		.ascii  "\xc3\x00\x00"

_096258_data:
		.ascii  "\x00\x20"
		.fill   0xa
		.ascii  "\x01\x00\x00\x00"

_096268_data:
		.fill   0xc

_096274_data:
		.fill   0x4

_096278_data:
		.fill   0x2c

_0962a4_data:
		.fill   0x6

_0962aa_data:
		.ascii  "\x00\x00\x0b\x00\x0c\x00\x0d\x00"
		.ascii  "\x0e\x00\x0f\x00\x10\x00\x10\x00"
		.ascii  "\x11\x00\x13\x00\x14\x00\x15\x00"
		.ascii  "\x16\x00\x17\x00\x19\x00\x1a\x00"
		.ascii  "\x1c\x00\x1e\x00\x20\x00\x21\x00"
		.ascii  "\x23\x00\x26\x00\x28\x00\x2a\x00"
		.ascii  "\x2d\x00\x2f\x00\x32\x00\x35\x00"
		.ascii  "\x39\x00\x3c\x00\x40\x00\x43\x00"
		.ascii  "\x47\x00\x4c\x00\x50\x00\x55\x00"
		.ascii  "\x5a\x00\x60\x00\x65\x00\x6b\x00"
		.ascii  "\x72\x00\x78\x00\x80\x00\x87\x00"
		.ascii  "\x8f\x00\x98\x00\xa1\x00\xaa\x00"
		.ascii  "\xb5\x00\xbf\x00\xcb\x00\xd7\x00"
		.ascii  "\xe4\x00\xf1\x00\x00\x01\x0f\x01"
		.ascii  "\x1f\x01\x30\x01\x42\x01\x55\x01"
		.ascii  "\x6a\x01\x7f\x01\x96\x01\xae\x01"
		.ascii  "\xc8\x01\xe3\x01\x00\x02\x1e\x02"
		.ascii  "\x3e\x02\x60\x02\x85\x02\xab\x02"
		.ascii  "\xd4\x02\xff\x02\x2c\x03\x5d\x03"
		.ascii  "\x90\x03\xc6\x03\x00\x04\x3c\x04"
		.ascii  "\x7d\x04\xc1\x04\x0a\x05\x56\x05"
		.ascii  "\xa8\x05\xfe\x05\x59\x06\xba\x06"
		.ascii  "\x20\x07\x8d\x07\x00\x08\x79\x08"
		.ascii  "\xfa\x08\x83\x09\x15\x0a\xad\x0a"
		.ascii  "\x50\x0b\xfc\x0b\xb2\x0c\x74\x0d"
		.ascii  "\x41\x0e\x1a\x0f\x00\x10\xf3\x10"
		.ascii  "\xf5\x11\x06\x13\x28\x14\x5b\x15"
		.ascii  "\xa0\x16\xf9\x17\x65\x19\xe8\x1a"
		.ascii  "\x82\x1c\x34\x1e\x00\x20\xe7\x21"
		.ascii  "\xeb"
		.ascii   "#\r&Q("
		.ascii  "\xb7\x2a\x41\x2d\xf2\x2f\xcb\x32"
		.ascii  "\xd1\x35\x04\x39\x68\x3c\x00\x40"
		.ascii  "\xce\x43\xd6\x47"

_0963ac_data:
		.fill   0x4

_0963b0_data:
		.long   _040778_jump

_0963b4_data:
		.long   _04078c_jump

_0963b8_data:
		.long   _0407a0_jump

_0963bc_data:
		.long   _0407a0_jump

_0963c0_data:
		.fill   0x4

_0963c4_data:
		.fill   0x4

_0963c8_data:
		.fill   0x4

_0963cc_data:
		.ascii  "\x2f"

_0963cd_data:
		.fill   0x63
		.long   _0c0c14_data
		.long   _0c0c1c_data
		.long   _0c0c24_data
		.ascii  "\x2c\x0c"

_09643e_data:
		.ascii  "\x0c\x00\x04\x00\x0c\x00\x14\x00"

_096446_data:
		.ascii  "\x18\x00\x40\x01\x38\x01\x30\x01"

_09644e_data:
		.ascii  "\x2c\x01\x00\x00\x08\x00\x10\x00"

_096456_data:
		.ascii  "\x14\x00\xc8\x00\xc0\x00\xb8\x00"
		.ascii  "\xb4\x00"
		.long   _0c0c34_data
		.long   _0c0c38_data
		.long   _0c0c3c_data
		.long   _0c0c40_data
		.long   _0c0c44_data

_096474_data:
		.ascii  "\x00"

_096475_data:
		.ascii  "\x00"

_096476_data:
		.ascii  "\x00"

_096477_data:
		.ascii  "\x00"

_096478_data:
		.ascii  "\x40\x00\x00\x00"

_09647c_data:
		.fill   0x8
		.long   _0c0c50_data
		.long   _0c0c54_data
		.long   _0c0c58_data
		.long   _0c0c5c_data
		.long   _0c0c60_data
		.long   _0c0c64_data
		.long   _0c0c68_data
		.long   _0c0c6c_data
		.long   _0c0c70_data
		.long   _0c0c74_data
		.fill   0x10
		.long   _0c0c78_data
		.long   _0c0c7c_data
		.long   _0c0c80_data
		.long   _0c0c84_data
		.long   _0c0c88_data
		.long   _0c0c8c_data
		.long   _0c0c90_data
		.long   _0c0c94_data
		.long   _0c0c98_data
		.long   _0c0c9c_data
		.fill   0x10
		.long   _0c0ca0_data
		.long   _0c0ca4_data
		.long   _0c0ca8_data
		.long   _0c0cac_data
		.long   _0c0cb0_data
		.long   _0c0cb4_data
		.long   _0c0cb8_data
		.long   _0c0cbc_data
		.long   _0c0cc0_data
		.long   _0c0cc4_data
		.fill   0x10
		.long   _0c0cc8_data
		.long   _0c0ccc_data
		.long   _0c0cd0_data
		.long   _0c0cd4_data
		.long   _0c0cd8_data
		.long   _0c0cdc_data
		.long   _0c0ce0_data
		.long   _0c0ce4_data
		.long   _0c0ce8_data
		.fill   0x5c
		.long   _0c0c60_data
		.fill   0xcc

_09667c_data:
		.fill   0x8
		.long   _0c0c50_data
		.long   _0c0c54_data
		.long   _0c0c58_data
		.long   _0c0c5c_data
		.long   _0c0c60_data
		.long   _0c0c64_data
		.long   _0c0c68_data
		.long   _0c0c6c_data
		.long   _0c0c70_data
		.long   _0c0c74_data
		.fill   0x10
		.long   _0c0ca0_data
		.long   _0c0cc8_data
		.long   _0c0c80_data
		.long   _0c0c84_data
		.long   _0c0c88_data
		.long   _0c0c8c_data
		.long   _0c0c90_data
		.long   _0c0c94_data
		.long   _0c0c98_data
		.long   _0c0c9c_data
		.fill   0x10
		.long   _0c0c78_data
		.long   _0c0ca4_data
		.long   _0c0ca8_data
		.long   _0c0cac_data
		.long   _0c0cb0_data
		.long   _0c0cb4_data
		.long   _0c0cb8_data
		.long   _0c0cbc_data
		.long   _0c0cc0_data
		.long   _0c0ce8_data
		.fill   0x10
		.long   _0c0c7c_data
		.long   _0c0ccc_data
		.long   _0c0cd0_data
		.long   _0c0cd4_data
		.long   _0c0cd8_data
		.long   _0c0cdc_data
		.long   _0c0cc4_data
		.fill   0x4
		.long   _0c0ce4_data
		.long   _0c0ce0_data
		.fill   0x5c
		.long   _0c0c60_data
		.fill   0xc8

_09687c_data:
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_09688c_data:
		.ascii  "\x02\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x06\x00"

_09689c_data:
		.fill   0x8
		.ascii  "\x08"
		.fill   0x7

_0968ac_data:
		.ascii  "\x07\x00\x08\x00\x08"
		.fill   0x5
		.ascii  "\x08\x00\x08\x00\x01\x00"

_0968bc_data:
		.ascii  "\x08\x00\x08\x00\x01\x00\x08\x00"
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"

_0968cc_data:
		.fill   0xe
		.ascii  "\x08\x00"

_0968dc_data:
		.fill   0xa
		.ascii  "\x08"
		.fill   0x5
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x01\x00\x08\x00"
		.ascii  "\x07\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x01\x00"

_09690c_data:
		.ascii  "\x07\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_09691c_data:
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_09692c_data:
		.ascii  "\x08\x00\x08\x00\x07\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_09693c_data:
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09688c_data

_09695c_data:
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _0968dc_data

_09697c_data:
		.long   _09687c_data
		.long   _09692c_data
		.long   _09687c_data
		.long   _09691c_data
		.long   _09687c_data
		.long   _09690c_data
		.long   _09687c_data
		.long   _09687c_data

_09699c_data:
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _0968ac_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data

_0969bc_data:
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _0968bc_data
		.long   _09687c_data
		.long   _09688c_data
		.long   _09687c_data

_0969dc_data:
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _0968cc_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data

_0969fc_data:
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09689c_data
		.long   _09687c_data

_096a1c_data:
		.long   _09693c_data
		.long   _09695c_data
		.long   _09697c_data
		.long   _09699c_data
		.long   _0969bc_data
		.long   _0969dc_data
		.long   _0969fc_data

_096a38_data:
		.ascii  "\x2a\x2e\x05"

_096a3b_data:
		.ascii  "\x2c\x02"

_096a3d_data:
		.ascii  "\x28\x02"

_096a3f_data:
		.ascii  "\x07\x08\x0c\x26\x0d\x0e\x00"

_096a46_data:
		.ascii  "\x29\x0f\x10\x29\x1a\x12\x13\x01"

_096a4e_data:
		.ascii  "\x15\x16\x2d\x18\x29\x1a\x12\x13"
		.ascii  "\x01"

_096a57_data:
		.ascii  "\x1b\x1c\x00\x00\x1d\x1c\x20\xfe"
		.ascii  "\x1d\x1c\x00\x01\x1d\x1c\x20\xfe"
		.ascii  "\x1d\x1c\x10\x02\x1d\x1c\x10\x02"
		.ascii  "\x1d\x1c\x30\x03\x1d\x1c\x00\x04"
		.ascii  "\x1d\x1c\x5c\x05\x1d\x1c\x36\x05"
		.ascii  "\x1d\x1c\x10\x05\x1d\x1c\x00\x06"
		.ascii  "\x1d\x1e\x18\x29\x1a\x12\x13\x00"

_096a8f_data:
		.ascii  "\x15\x16\x19\x1f\x00"

_096a94_data:
		.ascii  "\x24\x23\x2b\x01"
		.ascii   "\"$\"!"
		.ascii  "\x01"
		.ascii   "#$#+"
		.ascii  "\x01\x22\x22\x21\x01\x23\x23\x2b"
		.ascii  "\x02\x22\x22\x21\x01\x23\x23\x2b"
		.ascii  "\x02\x22\x20\x01\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x01\x22\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x01\x22\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x03\x22\x01"

_096ace_data:
		.ascii  "\x25\x27\x00"

_096ad1_data:
		.ascii  "\x2d\x18\x29\x1a\x12\x13\x1b\x1c"
		.ascii  "\x10\xff\x1d\x2d\x18\x29\x1a\x12"
		.ascii  "\x12\x13\x15\x16\x1c\x20\xfe\x1d"
		.ascii  "\x01\x00\x00"

_096aec_data:
		.long   _096a3f_data
		.long   _096a46_data
		.long   _096a4e_data
		.long   _096a57_data
		.long   _096a8f_data
		.long   _096a94_data
		.long   _096ace_data
		.long   _096ad1_data
		.long   _096a3d_data
		.long   _096a3b_data
		.long   _096a38_data

_096b18_data:
		.ascii  "\x10\x17\x18\x16\x19"

_096b1d_data:
		.ascii  "\x10\x11\x0f\x1a\x0b\x05"

_096b23_data:
		.ascii  "\x0d\x1a\x0e\x03"

_096b27_data:
		.ascii  "\x0d\x1a\x0e\x04\x13\x15\x04\x14"
		.ascii  "\x12\x15\x04\x14\x13\x15\x04\x14"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x04"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x04"
		.ascii  "\x13\x15\x04\x14\x0a\x1a\x0e\x02"

_096b4f_data:
		.ascii  "\x0d\x1a\x0e\x04\x07\x00\x07\x00"
		.ascii  "\x0a\x1a\x0e\x04\x03"

_096b5c_data:
		.ascii  "\x07\x04\x07\x08\x0a\x1a\x0e\x0d"
		.ascii  "\x1a\x0e\x04\x02"

_096b68_data:
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x04"
		.ascii  "\x12\x15\x04\x14\x13\x15\x04\x14"
		.ascii  "\x0a\x1a\x0e\x04\x02"

_096b7d_data:
		.ascii  "\x09\x00\x12\x15\x04\x14\x09\x04"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x0d"
		.ascii  "\x0e\x04\x02"

_096b90_data:
		.ascii  "\x07\x08\x08\x08\x09\x00\x13\x15"
		.ascii  "\x04\x14\x09\x08\x12\x15\x04\x14"
		.ascii  "\x0a\x1a\x0e\x04\x02\x00\x00\x00"

_096ba8_data:
		.long   _096b23_data

_096bac_data:
		.long   _096b27_data
		.long   _096b23_data
		.long   _096b4f_data
		.long   _096b5c_data
		.long   _096b68_data
		.long   _096b7d_data
		.long   _096b90_data
		.long   _096b1d_data
		.long   _096b18_data

_096bd0_data:
		.fill   0x4

_096bd4_data:
		.ascii  "\x00\x02\x00\x02\x00\x02\x00\x02"
		.ascii  "\x00\x02\x00\x02\xff\x01\xff\x01"
		.ascii  "\xfe\x01\xfd\x01\xfd\x01\xfc\x01"
		.ascii  "\xfb\x01\xfa\x01\xf9\x01\xf8\x01"
		.ascii  "\xf7\x01\xf5\x01\xf4\x01\xf3\x01"
		.ascii  "\xf1\x01\xf0\x01\xee\x01\xec\x01"
		.ascii  "\xea\x01\xe9\x01\xe7\x01\xe5\x01"
		.ascii  "\xe3\x01\xe0\x01\xde\x01\xdc\x01"
		.ascii  "\xda\x01\xd7\x01\xd5\x01\xd2\x01"
		.ascii  "\xcf\x01\xcd\x01\xca\x01\xc7\x01"
		.ascii  "\xc4\x01\xc1\x01\xbe\x01\xbb\x01"
		.ascii  "\xb8\x01\xb4\x01\xb1\x01\xae\x01"
		.ascii  "\xaa\x01\xa7\x01\xa3\x01\x9f\x01"
		.ascii  "\x9c\x01\x98\x01\x94\x01\x90\x01"
		.ascii  "\x8c\x01\x88\x01\x84\x01\x80\x01"
		.ascii  "\x7c\x01\x78\x01\x73\x01\x6f\x01"
		.ascii  "\x6b\x01\x66\x01\x62\x01\x5d\x01"
		.ascii  "\x58\x01\x54\x01\x4f\x01\x4a\x01"
		.ascii  "\x45\x01\x40\x01\x3c\x01\x37\x01"
		.ascii  "\x32\x01\x2c\x01\x27\x01\x22\x01"
		.ascii  "\x1d\x01\x18\x01\x12\x01\x0d\x01"
		.ascii  "\x08\x01\x02\x01\xfd\x00\xf7\x00"
		.ascii  "\xf2\x00\xec\x00\xe7\x00\xe1\x00"
		.ascii  "\xdb\x00\xd6\x00\xd0\x00\xca\x00"
		.ascii  "\xc4\x00\xbf\x00\xb9\x00\xb3\x00"
		.ascii  "\xad\x00\xa7\x00\xa1\x00\x9b\x00"
		.ascii  "\x95\x00\x8f\x00\x89\x00\x83\x00"
		.ascii  "\x7d\x00\x77\x00\x71\x00\x6b\x00"
		.ascii  "\x64\x00\x5e\x00\x58\x00\x52\x00"
		.ascii  "\x4c\x00\x45\x00\x3f\x00\x39\x00"
		.ascii  "\x33\x00\x2c\x00\x26\x00\x20\x00"
		.ascii  "\x1a\x00\x13\x00\x0d\x00\x07\x00"
		.ascii  "\x01\x00\x00\x00"

_096cd8_data:
		.long   _05e910_func

_096cdc_data:
		.long   _05ea34_jump

_096ce0_data:
		.long   _05ea6c_jump
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ea6c_jump
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ea6c_jump
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ea6c_jump
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ea6c_jump
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ec1c_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ec3c_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ea6c_jump
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ebfc_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ec60_func
		.long   _05e90c_jump
		.long   _05e90c_jump
		.long   _05eca0_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ea7c_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ebe4_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ec70_func
		.long   _05e90c_jump
		.long   _05e90c_jump
		.long   _05ec98_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ece0_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ed04_func
		.long   _05e930_func
		.long   _05ea3c_func
		.long   _05eda8_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ed80_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ea80_func
		.long   _05e9b8_func
		.long   _05ea64_func
		.long   _05ea6c_jump
		.long   _05e96c_func
		.long   _05ea5c_jump
		.long   _05eb8c_func
		.long   _05e96c_func
		.long   _05ea5c_jump
		.long   _05ebb8_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05eacc_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05eacc_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05eaa0_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05eaec_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05eb14_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05eb3c_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05eb64_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ea6c_jump
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ed28_func
		.long   _05e910_func
		.long   _05ea34_jump
		.long   _05ed54_func
		.long   _05ea24_func
		.long   _05ea70_func
		.long   _05ecd4_func

_096e70_data:
		.ascii  "\x03\x05\x05\x03\x03\x04"

_096e76_data:
		.ascii  "\x00\x03\x05\x00\x05\x01\x04\x02"

_096e7e_data:
		.ascii  "\x03\x04\x02\x03\x02\x00"

_096e84_data:
		.ascii  "\x01\x00\x15\x00\x9c\xff\x08\x00"
		.ascii  "\x01\x00\x00\x00\x12\x00\xa0\x00"
		.ascii  "\x08\x00\x03\x00\x2a\x00\x13\x00"
		.ascii  "\x0e\x00"

_096e9e_data:
		.ascii  "\x01\x00\x15\x00\x9c\xff\x08\x00"
		.ascii  "\x06\x00\x0f\x00\x12\x00\x4a\x01"
		.ascii  "\x0e\x00"

_096eb0_data:
		.ascii  "\x00\x00\x15\x00\x4a\x01\x08\x00"
		.ascii  "\x06\x00\x10\x00\x12\x00\x88\xff"
		.ascii  "\x0e\x00"

_096ec2_data:
		.ascii  "\x00\x00\x15\x00\x40\x01\x08\x00"
		.ascii  "\x01\x00\x00\x00\x12\x00\xf8\xff"
		.ascii  "\x08\x00\x03\x00\x29\x00\x13\x00"
		.ascii  "\x0e\x00"

_096edc_data:
		.ascii  "\x00\x00\x15\x00\x64\x00\x08\x00"
		.ascii  "\x03\x00\x2b\x00\x13\x00\x08\x00"
		.ascii  "\x03\x00\x2c\x00\x13\x00\x0e\x00"

_096ef4_data:
		.ascii  "\x00\x00\x15\x00\xc8\x00\x08\x00"
		.ascii  "\x03\x00\x2f\x00\x13\x00\x08\x00"
		.ascii  "\x03\x00\x30\x00\x13\x00\x11\x00"
		.ascii  "\x12\x00\x14\x00\xf8\xff\x11\x00"
		.ascii  "\x1e\x00\x14\x00\xf0\xff\x11\x00"
		.ascii  "\x2d\x00\x14\x00\xe0\xff\x11\x00"
		.ascii  "\x3c\x00\x14\x00\xc0\xff\x11\x00"
		.ascii  "\x41\x00\x14\x00\x00\x00\x13\x00"
		.ascii  "\x0e\x00"

_096f36_data:
		.ascii  "\x00\x00\x04\x00\x57\x01\x22\x00"
		.ascii  "\x6c\x01\xde\x00\x25\x02\xc8\x00"
		.ascii  "\xcd\x02\xcc\x03\x19\x01\xc6\x01"
		.ascii  "\x6f\x00\xca\x02\x41\x02\x2a\x00"
		.ascii  "\xa9\x00\x43\x03\xbd\x02\x0e\x03"
		.ascii  "\x4f\x03\xd6\x03\xe0\x00\xb5\x01"
		.ascii  "\xcf\x03\x5b\x03\xb1\x03\x3e\x03"
		.ascii  "\xcd\x01\x6b\x02\xa5\x02\x66\x02"
		.ascii  "\x32\x02\xe1\x02\x74\x00\x9f\x01"
		.ascii  "\x7c\x00\xaf\x02\xe6\x01\xf6\x01"
		.ascii  "\x41\x02\x60\x01\x79\x03\x0e\x01"
		.ascii  "\xb8\x00\xb1\x01\xc7\x02\xa7\x00"
		.ascii  "\x27\x02\x94\x02\x7e\x02\x03\x00"
		.ascii  "\x26\x03\x13\x01\xd8\x01\x8b\x01"
		.ascii  "\x81\x01\x53\x02\x69\x02\x1e\x01"
		.ascii  "\xae\x00\x38\x03\x2e\x01\x55\x01"
		.ascii  "\xa2\x01\xf6\x00\xa7\x01\x37\x00"
		.ascii  "\xf9\x01\xef\x03\x01\x00\xa3\x01"
		.ascii  "\x47\x00\x4b\x00\x04\x01\xe6\x03"
		.ascii  "\x6b\x01\x9e\x01\xc9\x00\xc9\x00"
		.ascii  "\xd8\x00\xff\x00\x08\x03\x8e\x03"
		.ascii  "\x9f\x03\xf1\x02\xd8\x01\x20\x02"
		.ascii  "\x24\x00\x85\x00\xd5\x01\xef\x01"
		.ascii  "\x63\x02\x03\x01\x75\x00\xce\x02"
		.ascii  "\x98\x02\x8b\x03\x80\x03\x2b\x00"
		.ascii  "\x36\x02\x0a\x02\x7b\x02\x15\x03"
		.ascii  "\x03\x01\xde\x00\xf1\x00\x57\x01"
		.ascii  "\x43\x02\x88\x00\x74\x02\x1f\x00"
		.ascii  "\xcb\x03\xd9\x00\x3b\x03\x84\x02"
		.ascii  "\xdc\x02\xed\x02\x35\x02\x49\x02"
		.ascii  "\xac\x00\x54\x01\x7a\x03\x4c\x03"
		.ascii  "\x75\x02\xd0\x03\xf7\x03\xed\x03"
		.ascii  "\xf3\x02\x0a\x02\x2e\x01\xdf\x02"
		.ascii  "\x24\x01\x8f\x02\xf8\x01\xb3\x00"
		.ascii  "\x3c\x02\x89\x01\x19\x03\x8e\x01"
		.ascii  "\x9a\x02\x82\x00\x94\x00\x58\x01"
		.ascii  "\xad\x03\x9e\x02\x98\x02\xd6\x02"
		.ascii  "\x9f\x02\xa5\x02\xe2\x02\xfd\x03"
		.ascii  "\xaf\x01\x3f\x02\x81\x01\xef\x03"
		.ascii  "\x0f\x00\xc4\x03\xcf\x01\xf3\x00"
		.ascii  "\x2f\x02\xfa\x01\x81\x02\xd4\x02"
		.ascii  "\x55\x02\x28\x03\xba\x01\x03\x00"
		.ascii  "\x57\x03\xdd\x02\xf2\x03\xd4\x01"
		.ascii  "\x69\x01\xc1\x03\x93\x02\x42\x02"
		.ascii  "\xcb\x02\xe4\x00\x3d\x01\x97\x03"
		.ascii  "\x49\x00\xd4\x03\x73\x02\x53\x00"
		.ascii  "\x63\x03\xe8\x02\xb2\x02\xb3\x03"
		.ascii  "\xf9\x01\x24\x01\xb9\x02\x3d\x01"
		.ascii  "\x6b\x01\x05\x03\xe8\x03\xaf\x03"
		.ascii  "\xfa\x00\xa4\x01\xa7\x03\xad\x01"
		.ascii  "\x5a\x01\x8b\x03\x95\x00\x94\x00"
		.ascii  "\x4a\x01\x9b\x00\x7f\x02\xcc\x03"
		.ascii  "\x13\x01\x66\x00\xeb\x03\xfb\x00"
		.ascii  "\xdd\x00\x57\x00\x1c\x02\x82\x03"
		.ascii  "\x9e\x03\x0f\x01\x75\x02\x93\x03"
		.ascii  "\x9f\x02\x55\x00\x10\x02\x4a\x03"
		.ascii  "\x64\x03\xf4\x02\x74\x02\x30\x02"
		.ascii  "\xe5\x03\xee\x03\x41\x00\x77\x01"
		.ascii  "\xeb\x02\x63\x00\xb9\x02\x5a\x01"
		.ascii  "\x76\x00\x84\x01\x02\x01\x04\x02"
		.ascii  "\x14\x00\xfc\x03\x01\x00\x54\x00"
		.ascii  "\xfd\x00\x2b\x02\xb0\x01\xe1\x00"
		.ascii  "\xd6\x01\x95\x00\xd1\x00\xa9\x01"
		.ascii  "\x09\x00\xdb\x01\xd2\x01\xba\x00"
		.ascii  "\x0a\x00"

_097138_data:
		.ascii  "\x07\x03\x1b\x07\x07\x03\x1b\x03"
		.ascii  "\x03\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x03\x07\x03\x03\x03\x0f"
		.ascii  "\x07\x07\x07\x03\x03\x03\x03\x0f"
		.ascii  "\x0b\x07\x03\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x03\x07\x03\x07\x07"
		.ascii  "\x1b\x07\x07\x03\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x07\x07\x0b\x0b"
		.ascii  "\x03\x07\x03\x03\x0b\x07\x03\x03"
		.ascii  "\x07\x07\x07\x07\x00\x07\x07\x07"
		.ascii  "\x0f\x07\x1f\x07\x07\x03\x03\x03"
		.ascii  "\x03\x03\x03\x1b\x03\x07\x03\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x1b\x03\x03\x03\x07\x0f"
		.ascii  "\x07\x07\x07\x07\x07\x1b\x03\x07"
		.ascii  "\x1b\x07\x07\x07\x07\x07\x07\x0b"
		.ascii  "\x03\x0b\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x07\x07\x07\x07\x07\x0f"
		.ascii  "\x07\x1b\x07\x07\x03\x03\x03\x03"
		.ascii  "\x07\x03\x03\x03\x03\x03\x03\x07"
		.ascii  "\x03\x07\x03\x07\x03\x03\x03\x03"
		.ascii  "\x04\x04\x07\x03\x07\x07\x03\x07"
		.ascii  "\x07\x1b\x07\x03\x00\x1f\x07\x07"
		.ascii  "\x03\x07\x07\x07\x03\x07\x07\x03"
		.ascii  "\x07\x07\x07\x03\x07\x1b\x1f\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x07\x03\x03\x03\x07\x07\x07\x0f"
		.ascii  "\x03\x03\x07\x07\x04\x1b\x04\x07"
		.ascii  "\x07\x07\x03\x03\x03\x03\x07\x07"

_097238_data:
		.ascii  "\x00\x00\x00\x02"
		.fill   0xb
		.ascii  "\x14\x1c\x00\x01\x02\x00\x00\x00"
		.ascii  "\x22"
		.fill   0x12
		.ascii  "\x01\x07\x02"
		.fill   0x5
		.ascii  "\x1e\x0f\x00\x02\x00\x00\x01"
		.fill   0xd
		.ascii  "\x28"
		.fill   0xb
		.ascii  "\x0a"
		.fill   0x5
		.ascii  "\x1e\x36"
		.fill   0xa
		.ascii  "\x28"
		.fill   0x4
		.ascii  "\x1e\x3c\x00\x3c\x28"
		.fill   0x7
		.ascii  "\x14\x00\x3c\x01"
		.fill   0x4
		.ascii  "\x09"
		.fill   0x9
		.ascii  "\x0a\x00\x0b"
		.fill   0x4
		.ascii  "\x1f\x19\x1e"
		.fill   0x6
		.ascii  "\x28\x00\x4b\x00\x00\x00\x32"
		.fill   0x9
		.ascii  "\x50"
		.fill   0x6
		.ascii  "\x3c"
		.fill   0x18
		.ascii  "\x01\x00\x00\x0c"
		.fill   0xf
		.ascii  "\x1e"
		.fill   0x7
		.ascii  "\x2d"
		.fill   0xb
		.ascii  "\x0f\x46"
		.fill   0xa
		.ascii  "\x07\x14"
		.fill   0x4

_097338_data:
		.fill   0x2a
		.ascii  "\x41"
		.fill   0xd
		.ascii  "\x28"
		.fill   0x3f
		.ascii  "\x23"
		.fill   0x10
		.ascii  "\x15"
		.fill   0x3d
		.ascii  "\x28"
		.fill   0x26
		.ascii  "\x1d\x0f"
		.fill   0xb
		.ascii  "\x14"
		.fill   0x4

_097438_data:
		.fill   0x54
		.ascii  "\x2a"
		.fill   0x1b
		.ascii  "\x38"
		.fill   0x7f
		.ascii  "\x78"
		.fill   0x21
		.ascii  "\x89"
		.fill   0x7b
		.ascii  "\xc7"
		.fill   0x4d
		.ascii  "\xee\x00\x17"
		.fill   0x17
		.ascii  "\x46"
		.fill   0x9

_097638_data:
		.ascii  "\x00"

_097639_data:
		.ascii  "\xff"

_09763a_data:
		.ascii  "\x00"

_09763b_data:
		.ascii  "\x7f\x35\x0f\x00\x50\x35\x00\x00"
		.ascii  "\x5a\x35\xff\x00\x5a\x3c\xff\x00"
		.ascii  "\x7f\x35\x05\x00\x73\x37\x03\x00"
		.ascii  "\x32\x35\xff\x00\x50\x35\x08\x00"
		.ascii  "\x37\x35\x0c\x00\x32\x35\xff\x00"
		.ascii  "\x50\x48\x06\x00\x5a\x35\x08\x00"
		.ascii  "\x3c\x41\x01\x00\x3c"

_097670_data:
		.ascii  "\x35"

_097671_data:
		.ascii  "\x07"

_097672_data:
		.ascii  "\x00\x50"

_097674_data:
		.ascii  "\x3a"

_097675_data:
		.ascii  "\x0d"

_097676_data:
		.ascii  "\x00\x50\x36\x04\x00\x50\x35\x1f"
		.ascii  "\x00\x50\x37\x1e\x00\x50"

_097684_data:
		.ascii  "\x3e"

_097685_data:
		.ascii  "\x10"

_097686_data:
		.ascii  "\x00\x50\x37\x15\x00\x41\x35\x16"
		.ascii  "\x00\x50\x31\x17\x00\x50\x3c\x19"
		.ascii  "\x00\x3c\x37\x18\x00\x4b\x35\x4c"
		.ascii  "\x00\x50\x35\xff\x00\x50\x38\xff"
		.ascii  "\x00\x50\x35\x47\x00\x3c\x35\x48"
		.ascii  "\x00\x41\x35\x49\x00\x50\x35\x4a"
		.ascii  "\x00\x50\x3c\x4b\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x35\x68\x00\x2d\x37\x4f"
		.ascii  "\x00\x3c\x36\x50\x00\x3c\x39\x51"
		.ascii  "\x00\x3c\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\x1a\x00\x50\x35\x55"
		.ascii  "\x00\x3c\x35\x5d\x00\x28\x35\x57"
		.ascii  "\x00\x50\x35\x58\x00\x50\x35\x59"
		.ascii  "\x00\x64\x35\x5a\x00\x50"

_0976f4_data:
		.ascii  "\x35"

_0976f5_data:
		.ascii  "\x5b"

_0976f6_data:
		.ascii  "\x00\x3c\x35\x5c\x00\x50\x35\x46"
		.ascii  "\x00\x46\x38\x1b\x00\x50\x33\x05"
		.ascii  "\x00\x50\x39\x60\x00\x50"

_09770c_data:
		.ascii  "\x35"

_09770d_data:
		.ascii  "\x01"

_09770e_data:
		.ascii  "\x00\x5a\x38\x56\x00\x50\x3c\x27"
		.ascii  "\x00\x50\x41\x27\x00\x50\x46\x27"
		.ascii  "\x00\x50\x35\x15\x00\x32\x35\x16"
		.ascii  "\x00\x3c\x35\x20\x00\x1e\x35\x21"
		.ascii  "\x00\x3c\x35\x6a\x00\x50\x35\x63"
		.ascii  "\x00\x50\x35\x6b\x00\x50\x35\x6b"
		.ascii  "\x00\x50\x35\x49\x00\x50\x35\x54"
		.ascii  "\x00\x46\x35\x0c\x00\x28\x35\x0b"
		.ascii  "\x00\x46\x3a\x5e\x00\x50\x33\x5f"
		.ascii  "\x00\x7f\x35\x60\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x35\xff\x00\x50\x35\x69"
		.ascii  "\x00\x2d\x35\x61\x00\x50\x35\x5f"
		.ascii  "\x00\x5f\x35\x15\x00\x50\x35\x16"
		.ascii  "\x00\x50"

_097778_data:
		.ascii  "\x35"

_097779_data:
		.ascii  "\x52"

_09777a_data:
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x54"
		.ascii  "\x00\x50\x35\x33\x00\x5f\x36\x34"
		.ascii  "\x00\x46\x35\x46\x00\x50\x35\x47"
		.ascii  "\x00\x28\x35\x48\x00\x3c\x38\x49"
		.ascii  "\x00\x7f\x35\x4a\x00\x50\x35\x4b"
		.ascii  "\x00\x50\x35\x3d\x00\x50\x35\x3e"
		.ascii  "\x00\x3c\x35\x36\x00\x50\x35\x37"
		.ascii  "\x00\x32\x30\x38\x00\x7f\x35\x4d"
		.ascii  "\x00\x50\x35\x4e\x00\x73\x35\x4f"
		.ascii  "\x00\x64\x35\x32\x00\x2d\x35\x50"
		.ascii  "\x00\x73\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x61"
		.ascii  "\x00\x7f\x35\x62\x00\x50\x35\x63"
		.ascii  "\x00\x50\x37\x64\x00\x50\x35\x65"
		.ascii  "\x00\x50\x35\x66\x00\x50\x35\x47"
		.ascii  "\x00\x46\x37\x46\x00\x46\x31\x47"
		.ascii  "\x00\x46\x35\x67\x00\x50\x35\x4b"
		.ascii  "\x00\x73\x32\x5e\x00\x7f\x33\x48"
		.ascii  "\x00\x50\x35\x49\x00\x50\x39\xff"
		.ascii  "\x00\x50\x35\x4b\x00\x78\x37\x4c"
		.ascii  "\x00\x7f\x35\x4d\x00\x6e\x35\x4e"
		.ascii  "\x00\x50\x35\x50\x00\x50\x38\x4f"
		.ascii  "\x00\x37\x37\x51\x00\x50\x3f\x52"
		.ascii  "\x00\x37\x35\xff\x00\x50\x3e\x54"
		.ascii  "\x00\x2d\x39\x55\x00\x50\x3c\x56"
		.ascii  "\x00\x50\x35\x57\x00\x5a\x35\x58"
		.ascii  "\x00\x7f\x35\xff\x00\x50\x35\x13"
		.ascii  "\x00\x25\x35\x0f\x00\x41\x35\x24"
		.ascii  "\x00\x5a\x35\x22\x00\x50\x35\x23"
		.ascii  "\x00\x50\x35\x62\x00\x2d\x37\x62"
		.ascii  "\x00\x2d\x35\xff\x00\x50\x35\x49"
		.ascii  "\x00\x50\x32\x4a\x00\x50\x41\x4b"
		.ascii  "\x00\x50\x35\x67\x00\x64\x37\x4c"
		.ascii  "\x00\x1e\x3b\x4d\x00\x28\x35\xff"
		.ascii  "\x00\x50\x35\x4f\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\x51\x00\x50\x35\xff"
		.ascii  "\x00\x50\x3d\x53\x00\x78\x35\x54"
		.ascii  "\x00\x2d\x35\x55\x00\x50\x35\x56"
		.ascii  "\x00\x50\x35\x33\x00\x5f\x35\x57"
		.ascii  "\x00\x50\x35\x58\x00\x50\x35\x59"
		.ascii  "\x00\x55\x35\x5a\x00\x37\x3c\x48"
		.ascii  "\x00\x46\x3c\x48\x00\x46\x35\x49"
		.ascii  "\x00\x50\x3c\x33\x00\x46\x35\xff"
		.ascii  "\x00\x50\x35\x3f\x00\x6e\x35\x4c"
		.ascii  "\x00\x50\x35\x4d\x00\x37"

_0978e0_data:
		.ascii  "\x35"

_0978e1_data:
		.ascii  "\x4e"

_0978e2_data:
		.ascii  "\x00\x50\x35\x4f\x00\x50\x35\x50"
		.ascii  "\x00\x50\x32\xff\x00\x50\x35\x52"
		.ascii  "\x00\x50\x37\x53\x00\x50\x30\x54"
		.ascii  "\x00\x5a\x2e\x55\x00\x50\x32\xff"
		.ascii  "\x00\x50\x35\x56\x00\x50\x35\x46"
		.ascii  "\x00\x28\x35\x47\x00\x28\x35\x48"
		.ascii  "\x00\x50\x35\x49\x00\x50\x35\x4a"
		.ascii  "\x00\x37\x35\x4b\x00\x50\x35\x4c"
		.ascii  "\x00\x50\x35\x4d\x00\x50\x35\x4e"
		.ascii  "\x00\x64\x35\x4f\x00\x7f\x35\x50"
		.ascii  "\x00\x50\x35\x51\x00\x50\x32\x25"
		.ascii  "\x00\x41\x35\x26\x00\x3c\x35\x0b"
		.ascii  "\x00\x50\x25\x68\x00\x1e\x3c\xff"
		.ascii  "\x00\x7f\x35\x08\x00\x50\x35\x64"
		.ascii  "\x00\x50\x38\x01\x00\x50\x35\x35"
		.ascii  "\x00\x32\x35\x3c\x00\x2d\x35\x4c"
		.ascii  "\x00\x50\x35\x62\x00\x64\x35\x29"
		.ascii  "\x00\x28\x35\x39\x00\x50\x35\x28"
		.ascii  "\x00\x64\x3c\x27\x00\x69\x35\x62"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x4c"
		.ascii  "\x00\x7f\x3c\x60\x00\x50\x35\x2a"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x2b"
		.ascii  "\x00\x50\x35\xff\x00\x50\x2e\x5a"
		.ascii  "\x00\x5a\x35\x5c\x00\x50\x35\x5f"
		.ascii  "\x00\x28\x35\x5e\x00\x32\x35\x5e"
		.ascii  "\x00\x50\x35\x52\x00\x50\x35\x53"
		.ascii  "\x00\x50\x32\x54\x00\x46\x34\x4d"
		.ascii  "\x00\x50\x38\x4a\x00\x50\x32\x4a"
		.ascii  "\x00\x50\x35\x5a\x00\x50\x35\x59"
		.ascii  "\x00\x50\x35\x55\x00\x50\x30\x56"
		.ascii  "\x00\x50\x35\x57\x00\x50\x39\x58"
		.ascii  "\x00\x50\x32\x4c\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x3c\xff\x00\x7f\x35\x33"
		.ascii  "\x00\x7f\x3c\x19\x00\x3c\x41\x15"
		.ascii  "\x00\x32\x41\x16\x00\x3c\x35\x5d"
		.ascii  "\x00\x37\x35\x5e\x00\x7f\x35\x5e"
		.ascii  "\x00\x7f"

_097a0c_data:
		.ascii  "\x35"

_097a0d_data:
		.ascii  "\x5c"

_097a0e_data:
		.ascii  "\x00\x28\x37\x5f\x00\x7f\x35\x37"
		.ascii  "\x00\x50\x46\x61\x00\x37\x3c\x61"
		.ascii  "\x00\x32\x3c\x67\x00\x50\x3a\x65"
		.ascii  "\x00\x50\x35\x66\x00\x50\x35\x13"
		.ascii  "\x00\x50\x3c\xff\x00\x7f\x3c\xff"
		.ascii  "\x00\x7f"

_097a38_data:
		.fill   0x4
		.ascii  "\x01"
		.fill   0x14
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x00"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x00\x00\x01\x00\x01"
		.fill   0x7
		.ascii  "\x01\x01\x01\x01\x01\x01\x00\x00"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x00"
		.ascii  "\x00\x00\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01"
		.fill   0x6
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01"
		.fill   0x6
		.ascii  "\x01\x01\x01\x01\x01\x01\x00\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01"
		.fill   0x4
		.ascii  "\x01\x00\x01\x00\x01\x01\x01\x01"
		.ascii  "\x00\x01\x00\x00\x01\x01\x01\x01"
		.ascii  "\x01\x00\x00\x01\x00\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01"
		.fill   0x4
		.ascii  "\x01\x01\x00\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x00\x01\x01"

_097b38_data:
		.fill   0x12

_097b4a_data:
		.fill   0xc

_097b56_data:
		.ascii  "\x00\x00"

_097b58_data:
		.ascii  "\x7f"
		.fill   0x5
		.ascii  "\x01"
		.fill   0x4
		.ascii  "\x02\x04\x05\x07\x09\x0b\x0c"

_097b6a_data:
		.ascii  "\x00\x00"

_097b6c_data:
		.ascii  "\x00"

_097b6d_data:
		.ascii  "\x00\x00\x00"

_097b70_data:
		.ascii  "\x00\x00"

_097b72_data:
		.ascii  "\x01\x00"

_097b74_data:
		.ascii  "\xff\xff"

_097b76_data:
		.fill   0x4
		.ascii  "\x01\x00\x01\x00\xfd\xff\x3c\x00"
		.ascii  "\x00\x00\x02\x00\x02\x00\xfe\xff"
		.fill   0x4
		.ascii  "\x01\x00\x03\x00\xfc\xff\x1e\x00"
		.ascii  "\x00\x00\x01\x00\x02\x00\xfc\xff"
		.ascii  "\x1e\x00\x00\x00\x01\x00\x02\x00"
		.ascii  "\xfd\xff\x2a\x00\x00\x00\x01\x00"
		.ascii  "\x01\x00\xfc\xff\x50\x00\x00\x00"

_097bb6_data:
		.ascii  "\x01\x01\x00\x00\x03\xff\x00\x00"
		.ascii  "\x01\x01"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x1d
		.ascii  "\x09\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x03\xff\x00\x00\x05"
		.fill   0x5
		.ascii  "\x01"
		.fill   0x19
		.ascii  "\x02\x01\x00\x00\x07\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x08\x00\x00\x00"
		.ascii  "\x01\xff"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x15
		.ascii  "\x03\xff\x00\x00\x04\xff\x00\x00"
		.ascii  "\x06\x01\x00\x00\x09\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x09"
		.fill   0x7
		.ascii  "\x09\x00\x01"
		.fill   0xb
		.ascii  "\x01\x00\x02\x00\x03\x00\x04\x00"
		.ascii  "\x00\x00\x06\x00\x06\x00\x00\x00"

_097c78_data:
		.ascii  "\x00\x00\x01\x02\x02\x00\x01\x02"
		.ascii  "\x02\x02\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x02\x02\x02\x00\x00\x01\x00"
		.ascii  "\x00\x01\x02\x00\x02\x02\x00\x00"
		.ascii  "\x02\x02"
		.fill   0x4
		.ascii  "\x02\x02"
		.fill   0x4
		.ascii  "\x02\x00\x02\x02\x02\x02\x00\x00"
		.ascii  "\x02\x00\x00\x02\x02\x02\x02\x02"

_097cb4_data:
		.ascii  "\x01\x01\x01\x01\x01\x04\x04\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x04"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x02\x0a\x01\x02\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x02\x04\x05\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x03\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x02\x03\x01"
		.ascii  "\x01\x01\x01\x01"

_097cf0_data:
		.ascii  "\x20\x01"

_097cf2_data:
		.ascii  "\x02\x00"

_097cf4_data:
		.ascii  "\x00\x00"

_097cf6_data:
		.fill   0x95a
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x40\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x58\x00\x04\x00\x04\x00\x04\x00"
		.ascii  "\x6e\x00\x04"
		.fill   0x5
		.ascii  "\x0f\x00\x03"
		.fill   0x5
		.ascii  "\x4b\x00\x02"
		.fill   0x94d
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\xc0\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x945
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xa8\x00\x04\x00\x04\x00\x05\x00"
		.ascii  "\x46\x00\x04"
		.fill   0x5
		.ascii  "\x32\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x40\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x01"
		.fill   0x95d
		.ascii  "\x9f\x00\x04"
		.fill   0x5
		.ascii  "\x81\x00\x02"
		.fill   0x955
		.ascii  "\x0c\x00\x06"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x38\x00\x06"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x1c\x00\x06"
		.fill   0x5
		.ascii  "\x10\x00\x08"
		.fill   0x915
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x54\x00\x04"
		.fill   0x5
		.ascii  "\xcc\x00\x02"
		.fill   0x955
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xb1\x00\x04"
		.fill   0x5
		.ascii  "\x6f\x00\x02"
		.fill   0x955
		.ascii  "\xb3"
		.fill   0x5
		.ascii  "\x03\x00\x14\x00\x00\x00\x10\x00"
		.ascii  "\x01\x00\x01\x00\x00\x00\x20\x00"
		.ascii  "\x01\x00\x28"
		.fill   0x5
		.ascii  "\x03"
		.fill   0x941
		.ascii  "\xb7\x00\x04\x00\x04\x00\x04\x00"
		.ascii  "\x05\x00\x08"
		.fill   0x5
		.ascii  "\x15\x00\x06"
		.fill   0x5
		.ascii  "\x4e\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x93d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x6d\x00\x06"
		.fill   0x5
		.ascii  "\xb2\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xd5\x00\x04"
		.fill   0x5
		.ascii  "\x4b\x00\x02"
		.fill   0x955
		.ascii  "\xc8\x00\x06"
		.fill   0x5
		.ascii  "\x57\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d

_0baf70_data:
		.fill   0x5
		.ascii  "\x0e\x09"
		.fill   0x8
		.ascii  "\x0f"
		.fill   0x8
		.ascii  "\x04\x00\x00\x02"
		.fill   0x7
		.ascii  "\x03\x0a\x0c"
		.fill   0x7
		.ascii  "\x0b"
		.fill   0x7
		.ascii  "\x06\x0d"
		.fill   0x5

_0bafac_data:
		.ascii  "\x00\x00"

_0bafae_data:
		.ascii  "\x00\x00"

_0bafb0_data:
		.fill   0x31e
		.ascii  "\x46\x00\x01\x00\x00\x00\x35\x00"
		.ascii  "\x40\x00\x01\x00\x00\x00\x59\x00"
		.ascii  "\x24\x00\x01\x00\x00\x00\x79\x00"
		.ascii  "\x31\x00\x01\x00\x00\x00\x95\x00"
		.ascii  "\x47\x00\x01\x00\x00\x00\xc3\x00"
		.ascii  "\x3b\x00\x01\x00\x00\x00\xef\x00"
		.ascii  "\x18\x00\x01\x00\x00\x00\x17\x01"
		.ascii  "\x00\x00\x01\x00\x00\x00\x48\x01"
		.ascii  "\x47\x00\x01\x00\x00\x00\x2b\x01"
		.ascii  "\xaf\x00\x02\x00\x00\x00\xaf\x00"
		.ascii  "\xaa\x00\x02\x00\x00\x00\x26\x00"
		.ascii  "\xae\x00\x02\x00\x00\x00\x06\x01"
		.ascii  "\xb9\x00\x03\x00\x00\x00\x6c\x01"
		.ascii  "\x94\x00\x03"
		.fill   0x33
		.ascii  "\x40\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x40\x00\x78\x00\x01\x00\x00\x00"
		.ascii  "\xc0\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\xc0\x00\x78\x00\x03"
		.fill   0xd
		.ascii  "\x99"
		.fill   0x5
		.ascii  "\x28\x01"
		.fill   0x6
		.ascii  "\x28\x01\x35"
		.fill   0x5
		.ascii  "\x28\x01\x8d"
		.fill   0x55d
		.ascii  "\xaa\x00\x61\x00\x01\x00\x00\x00"
		.ascii  "\xea\x00\x4b\x00\x01\x00\x00\x00"
		.ascii  "\x2a\x01\x88\x00\x01\x00\x00\x00"
		.ascii  "\x6a\x01\x88\x00\x01\x00\x00\x00"
		.ascii  "\x2a\x00\x79\x00\x01\x00\x00\x00"
		.ascii  "\x6a\x00\x75\x00\x01\x00\x00\x00"
		.ascii  "\xaa\x00\xe3\x00\x02\x00\x00\x00"
		.ascii  "\xd8\x00\xe5\x00\x02\x00\x00\x00"
		.ascii  "\x32\x01\xe1\x00\x02\x00\x00\x00"
		.ascii  "\x72\x01\x6b\x00\x02\x00\x00\x00"
		.ascii  "\x32\x00\x7f\x00\x02\x00\x00\x00"
		.ascii  "\x52\x00\xcd\x00\x02\x00\x00\x00"
		.ascii  "\x8a\x00\xdd\x00\x02\x00\x00\x00"
		.ascii  "\x68\x01\xe1\x00\x03\x00\x00\x00"
		.ascii  "\x28\x00\x0f\x01\x03"
		.fill   0x52b
		.ascii  "\x3f\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\x70\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\xff\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\x30\x01\x8f\x00\x01"
		.fill   0x1c3
		.ascii  "\x06\x00\x42\x00\x01\x00\x00\x00"
		.ascii  "\x08\x01\x39\x00\x01"
		.fill   0x4f3
		.ascii  "\x8a\x00\x8d\x00\x01\x00\x00\x00"
		.ascii  "\xca\x00\x93\x00\x01\x00\x00\x00"
		.ascii  "\x0a\x01\x97\x00\x01"
		.fill   0x8d
		.ascii  "\x7b\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\x89\x00\x01\x00\x00\x00\x80\x00"
		.ascii  "\x83\x00\x01\x00\x00\x00\xc0\x00"
		.ascii  "\x8d\x00\x01"
		.fill   0x4
		.ascii  "\x01\xa1\x00\x01"
		.fill   0x5
		.ascii  "\xb9\x00\x02\x00\x00\x00\x40\x00"
		.ascii  "\xa6\x00\x02\x00\x00\x00\x80\x00"
		.ascii  "\xa4\x00\x02\x00\x00\x00\xc0\x00"
		.ascii  "\xa4\x00\x02"
		.fill   0x4
		.ascii  "\x01\xb0\x00\x02"
		.fill   0x55
		.ascii  "\x93\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\xad\x00\x01\x00\x00\x00\x80\x00"
		.ascii  "\x84\x00\x01\x00\x00\x00\xc0\x00"
		.ascii  "\x70\x00\x01"
		.fill   0x4
		.ascii  "\x01\x72\x00\x01\x00\x00\x00\x40"
		.ascii  "\x01\x7f\x00\x01"
		.fill   0x5
		.ascii  "\xde\x00\x04\x00\x00\x00\x40\x00"
		.ascii  "\xec\x00\x04\x00\x00\x00\x80\x00"
		.ascii  "\xdb\x00\x04\x00\x00\x00\xc0\x00"
		.ascii  "\xe3\x00\x04"
		.fill   0x4
		.ascii  "\x01\xe9\x00\x04\x00\x00\x00\x40"
		.ascii  "\x01\xe7\x00\x04"
		.fill   0x4a5
		.ascii  "\x55\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\x52\x00\x01\x00\x00\x00\x93\x00"
		.ascii  "\x2c\x00\x01\x00\x00\x00\xd3\x00"
		.ascii  "\x2c\x00\x01\x00\x00\x00\x4c\x01"
		.ascii  "\x60\x00\x01"
		.fill   0x5
		.ascii  "\xd8\x00\x02\x00\x00\x00\x40\x00"
		.ascii  "\xd0\x00\x02\x00\x00\x00\x80\x00"
		.ascii  "\xd7\x00\x02\x00\x00\x00\xc0\x00"
		.ascii  "\xec\x00\x02"
		.fill   0x4
		.ascii  "\x01\xe3\x00\x02\x00\x00\x00\x40"
		.ascii  "\x01\xe1\x00\x02"
		.fill   0x4ab
		.ascii  "\x43\x00\xb9\x00\x01\x00\x00\x00"
		.ascii  "\x73\x00\xa2\x00\x01\x00\x00\x00"
		.ascii  "\xd3\x00\xa6\x00\x01\x00\x00\x00"
		.ascii  "\x03\x01\x75\x00\x01\x00\x00\x00"
		.ascii  "\x43\x01\x6f\x00\x01\x00\x00\x00"
		.ascii  "\x59\x01\xab\x00\x01"
		.fill   0x73
		.ascii  "\x19\x00\x69\x00\x01\x00\x00\x00"
		.ascii  "\xa2\x00\xb6\x00\x01\x00\x00\x00"
		.ascii  "\xd6\x00\xa8\x00\x01\x00\x00\x00"
		.ascii  "\x4a\x01\xad\x00\x01"
		.fill   0x5
		.ascii  "\x0a\x01\x02\x00\x00\x00\x20\x00"
		.ascii  "\xe3\x00\x02\x00\x00\x00\x41\x00"
		.ascii  "\x83\x00\x02\x00\x00\x00\x54\x00"
		.ascii  "\xfb\x00\x02\x00\x00\x00\xa4\x00"
		.ascii  "\xea\x00\x02\x00\x00\x00\xd8\x00"
		.ascii  "\x00\x01\x02\x00\x00\x00\xef\x00"
		.ascii  "\xad\x00\x02\x00\x00\x00\x1c\x01"
		.ascii  "\x10\x01\x02\x00\x00\x00\x58\x01"
		.ascii  "\xfe\x00\x02"
		.fill   0x35b

_0bd52c_data:
		.ascii  "\x00\x00\x00\x01\x03\x05\x07"
		.ascii   "\t\n\n\n\t"
		.ascii  "\x07\x05\x03\x01"

_0bd53c_data:
		.fill   0x4

_0bd540_data:
		.ascii  "\x04\x00\x02\x00\x00\x00\xfe\xff"
		.ascii  "\xfc\xff\x02\x00\x00\x00\xfe\xff"

_0bd550_data:
		.ascii  "\x00\x00\x02\x00\x04\x00\x02\x00"
		.ascii  "\x00\x00\xfe\xff\xfc\xff\xfe\xff"

_0bd560_data:
		.fill   0x4

_0bd564_data:
		.fill   0x4

_0bd568_data:
		.fill   0x4

_0bd56c_data:
		.ascii  "\x00\x00"

_0bd56e_data:
		.ascii  "\x00\x00"

_0bd570_data:
		.fill   0x4

_0bd574_data:
		.ascii  "\x00\x00"

_0bd576_data:
		.ascii  "\x00\x00"

_0bd578_data:
		.fill   0x4

_0bd57c_data:
		.ascii  "\x00\x00"

_0bd57e_data:
		.ascii  "\x00\x00"

_0bd580_data:
		.fill   0x4

_0bd584_data:
		.ascii  "\x00\x00"

_0bd586_data:
		.ascii  "\x00\x00"

_0bd588_data:
		.fill   0x4

_0bd58c_data:
		.long   _07bd0e_jump

_0bd590_data:
		.long   _07bd0e_jump

_0bd594_data:
		.long   _07bd0e_jump

_0bd598_data:
		.fill   0x4

_0bd59c_data:
		.ascii  "\x20\x00\x00\x00"

_0bd5a0_data:
		.fill   0x4

_0bd5a4_data:
		.fill   0x4

_0bd5a8_data:
		.ascii  "\x01\x00\x00\x00"

_0bd5ac_data:
		.fill   0x4

_0bd5b0_data:
		.fill   0x4

_0bd5b4_data:
		.fill   0x4

_0bd5b8_data:
		.ascii  "\x00"

_0bd5b9_data:
		.ascii  "\x00\x00\x00"

_0bd5bc_data:
		.fill   0xc
		.ascii  "\x01"
		.fill   0xd

_0bd5d6_data:
		.fill   0xc
		.ascii  "\x02\x00\x00\x00\x01"
		.fill   0x15
		.ascii  "\x02"

_0bd5fd_data:
		.ascii  "\x00\x00\x00\x02"
		.fill   0x15
		.ascii  "\x03\x00\x00\x00\x03"
		.fill   0x15
		.ascii  "\x02\x00\x00\x00\x04"
		.fill   0x9

_0bd63e_data:
		.fill   0x186

_0bd7c4_data:
		.ascii  "\x61"

_0bd7c5_data:
		.ascii  "\x00\x01\x00\x00"
		.long   _0e5f40_data

_0bd7cd_data:
		.fill   0x4
		.ascii  "\x09\x01\x01\x0b\x06\x04\x05\x05"
		.ascii  "\x05\x02\x03\xff\xff\x07\x08\x06"
		.ascii  "\x08\x01\xff"

_0bd7e4_data:
		.fill   0x4

_0bd7e8_data:
		.fill   0x4

_0bd7ec_data:
		.fill   0x4

_0bd7f0_data:
		.fill   0x4

_0bd7f4_data:
		.fill   0x4

_0bd7f8_data:
		.fill   0x4

_0bd7fc_data:
		.fill   0x4

_0bd800_data:
		.fill   0x4

_0bd804_data:
		.fill   0x4

_0bd808_data:
		.fill   0xc

_0bd814_data:
		.ascii  "\x00\x00"

_0bd816_data:
		.ascii  "\x00"

_0bd817_data:
		.ascii  "\x00"

_0bd818_data:
		.ascii  "\x00"

_0bd819_data:
		.fill   0x4

_0bd81d_data:
		.ascii  "\x00\x00"

_0bd81f_data:
		.ascii  "\x00"

_0bd820_data:
		.ascii  "\x00"

_0bd821_data:
		.ascii  "\x4e\x1d\x08"

_0bd824_data:
		.fill   0x4
		.long   _0c117c_data
		.long   _0c1181_data
		.long   _0c1186_data
		.long   _0c118b_data
		.long   _0c118f_data
		.long   _0c1194_data
		.long   _0c1199_data
		.long   _0c119d_data
		.long   _0c11a3_data
		.long   _0c11a8_data
		.long   _0c11ac_data
		.long   _0c11b2_data
		.long   _0c11b8_data
		.long   _0c11be_data
		.long   _0c11c3_data
		.long   _0c11c9_data
		.long   _0c11cd_data
		.long   _0c11d1_data
		.long   _0c11d5_data
		.long   _0c11d8_data
		.long   _0c11db_data
		.long   _0c11de_data
		.long   _0c11e2_data

_0bd884_data:
		.fill   0x4

_0bd888_data:
		.fill   0x4

_0bd88c_data:
		.ascii  "\x14\x00\x00\x00"

_0bd890_data:
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x02"
		.fill   0x3f

_0bd8e0_data:
		.long   _0bd890_data

_0bd8e4_data:
		.fill   0x4

_0bd8e8_data:
		.fill   0x14

_0bd8fc_data:
		.fill   0x14

_0bd910_data:
		.fill   0x4

_0bd914_data:
		.fill   0x1a

_0bd92e_data:
		.fill   0x4

_0bd932_data:
		.fill   0x1a

_0bd94c_data:
		.fill   0x14

_0bd960_data:
		.fill   0x14

_0bd974_data:
		.fill   0x4

_0bd978_data:
		.fill   0x1a

_0bd992_data:
		.fill   0x4

_0bd996_data:
		.fill   0x1a

_0bd9b0_data:
		.fill   0x14

_0bd9c4_data:
		.fill   0x14

_0bd9d8_data:
		.fill   0x14

_0bd9ec_data:
		.fill   0x14

_0bda00_data:
		.fill   0x14

_0bda14_data:
		.ascii  "\xf8\x2a\x00\x00\xf8\x2a\x00\x00"
		.ascii  "\xf8\x2a\x00\x00\xf8\x2a\x00\x00"
		.ascii  "\xe8\x03\x00\x00"

_0bda28_data:
		.fill   0x14

_0bda3c_data:
		.fill   0x4

_0bda40_data:
		.fill   0x1a

_0bda5a_data:
		.fill   0x14

_0bda6e_data:
		.fill   0x14

_0bda82_data:
		.fill   0x14

_0bda96_data:
		.fill   0x4

_0bda9a_data:
		.fill   0x1a

_0bdab4_data:
		.fill   0x4

_0bdab8_data:
		.fill   0x3bc

_0bde74_data:
		.fill   0x4

_0bde78_data:
		.fill   0x1e

_0bde96_data:
		.fill   0x18

_0bdeae_data:
		.fill   0x24

_0bded2_data:
		.fill   0x19

_0bdeeb_data:
		.fill   0x2b

_0bdf16_data:
		.fill   0x220

_0be136_data:
		.ascii  "\x01\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x05\x00\x00\x00\x07\x00\x00\x00"
		.ascii  "\xc2\x00\x00\x00\xc6\x00\x00\x00"
		.ascii  "\xca\x00\x00\x00\xce\x00\x00\x00"

_0be156_data:
		.fill   0x5

_0be15b_data:
		.fill   0x4

_0be15f_data:
		.fill   0x4

_0be163_data:
		.fill   0x4

_0be167_data:
		.fill   0x4

_0be16b_data:
		.fill   0x4

_0be16f_data:
		.fill   0x4

_0be173_data:
		.fill   0x4

_0be177_data:
		.fill   0x4

_0be17b_data:
		.fill   0x4

_0be17f_data:
		.fill   0x4

_0be183_data:
		.fill   0x4

_0be187_data:
		.fill   0x4

_0be18b_data:
		.fill   0x4

_0be18f_data:
		.fill   0x4

_0be193_data:
		.fill   0x4

_0be197_data:
		.fill   0x4

_0be19b_data:
		.fill   0x4

_0be19f_data:
		.fill   0x13c

_0be2db_data:
		.ascii  "\xff\xff\xff\xff"

_0be2df_data:
		.fill   0x4

_0be2e3_data:
		.fill   0x56

_0be339_data:
		.fill   0x4

_0be33d_data:
		.ascii  "\x00\x00"

_0be33f_data:
		.fill   0x3c

_0be37b_data:
		.fill   0x4

_0be37f_data:
		.fill   0x3c

_0be3bb_data:
		.fill   0x4

_0be3bf_data:
		.ascii  "\x00\x00"

_0be3c1_data:
		.fill   0x3e

_0be3ff_data:
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"

_0be40f_data:
		.ascii  "\x00"

_0be410_data:
		.fill   0xff

_0be50f_data:
		.fill   0xff

_0be60e_data:
		.fill   0x4

_0be612_data:
		.fill   0x20

_0be632_data:
		.fill   0x8

_0be63a_data:
		.fill   0x4

_0be63e_data:
		.fill   0x24

_0be662_data:
		.fill   0x4

_0be666_data:
		.fill   0x5

_0be66b_data:
		.ascii  "\x00\x00\x00"

_0be66e_data:
		.fill   0x4

_0be672_data:
		.fill   0x4

_0be676_data:
		.ascii  "\x00\x00"

_0be678_data:
		.fill   0x4

_0be67c_data:
		.ascii  "\x00\x00"

_0be67e_data:
		.fill   0x4

_0be682_data:
		.fill   0x4

_0be686_data:
		.fill   0x4

_0be68a_data:
		.fill   0x4

_0be68e_data:
		.fill   0x4

_0be692_data:
		.fill   0x4

_0be696_data:
		.ascii  "\x00\x00"

_0be698_data:
		.fill   0x3c

_0be6d4_data:
		.ascii  "\x00"

_0be6d5_data:
		.fill   0x2f

_0be704_data:
		.long   _0c11e8_data
		.long   _0c120e_data
		.long   _0c122d_data
		.long   _0c1247_data
		.long   _0c126f_data
		.long   _0c1281_data
		.long   _0c129b_data
		.long   _0c12ad_data
		.long   _0c12be_data
		.long   _0c12e7_data
		.long   _0c1314_data
		.long   _0c1323_data
		.long   _0c1338_data
		.long   _0c1350_data
		.long   _0c1364_data
		.long   _0c1376_data
		.long   _0c1391_data
		.long   _0c13a0_data
		.long   _0c13ae_data
		.long   _0c13bc_data

_0be754_data:
		.fill   0x14

_0be768_data:
		.fill   0x4

_0be76c_data:
		.fill   0xc

_0be778_data:
		.fill   0x4

_0be77c_data:
		.fill   0x4

_0be780_data:
		.fill   0x4

_0be784_data:
		.fill   0x4

_0be788_data:
		.fill   0x4

_0be78c_data:
		.fill   0x4

_0be790_data:
		.fill   0xc

_0be79c_data:
		.fill   0x20

_0be7bc_data:
		.fill   0xc

_0be7c8_data:
		.fill   0x24

_0be7ec_data:
		.fill   0x4

_0be7f0_data:
		.fill   0x5

_0be7f5_data:
		.ascii  "\x00\x00\x00"

_0be7f8_data:
		.fill   0x4

_0be7fc_data:
		.fill   0x4

_0be800_data:
		.fill   0x4

_0be804_data:
		.fill   0x4

_0be808_data:
		.fill   0x8

_0be810_data:
		.fill   0x4

_0be814_data:
		.fill   0x4

_0be818_data:
		.ascii  "\x00\x00"

_0be81a_data:
		.long   _0bf82a_data

_0be81e_data:
		.fill   0x4

_0be822_data:
		.fill   0x4

_0be826_data:
		.fill   0x1004

_0bf82a_data:
		.fill   0x4

_0bf82e_data:
		.fill   0x4

_0bf832_data:
		.ascii  "\x00\x00"

_0bf834_data:
		.fill   0x4

_0bf838_data:
		.fill   0x4

_0bf83c_data:
		.fill   0x4

_0bf840_data:
		.fill   0x4

_0bf844_data:
		.fill   0x50

_0bf894_data:
		.fill   0x4

_0bf898_data:
		.fill   0x4

_0bf89c_data:
		.fill   0x4

_0bf8a0_data:
		.fill   0x4

_0bf8a4_data:
		.fill   0x3c

_0bf8e0_data:
		.fill   0x50

_0bf930_data:
		.fill   0x4

_0bf934_data:
		.fill   0x4

_0bf938_data:
		.fill   0x4

_0bf93c_data:
		.fill   0x4

_0bf940_data:
		.fill   0x4

_0bf944_data:
		.long   _086322_func

_0bf948_data:
		.long   _086322_func

_0bf94c_data:
		.long   _0878a0_func

_0bf950_data:
		.fill   0x4

_0bf954_data:
		.fill   0x4

_0bf958_data:
		.fill   0x8
		.ascii  "\x02\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x03"
		.fill   0x13

_0bf97c_data:
		.fill   0x4

_0bf980_data:
		.fill   0x4

_0bf984_data:
		.ascii  "\x01\x00\x00\x00\x05\x00\x00\x00"
		.ascii  "\x09"
		.fill   0x13

_0bf9a0_data:
		.ascii  "\x50\x46\x00\x00"

_0bf9a4_data:
		.ascii  "\x10\x0e\x00\x00"

_0bf9a8_data:
		.ascii  "\x01\x00\x00\x00"

_0bf9ac_data:
		.ascii  "\x45\x53\x54"
		.fill   0x1c

_0bf9cb_data:
		.ascii  "\x45\x44\x54"
		.fill   0x1c
		.long   _0bf9ac_data

_0bf9ee_data:
		.long   _0bf9cb_data

_0bf9f2_data:
		.ascii  "\x01"
		.fill   0x5

_0bf9f8_data:
		.ascii  "\x01\x00\x00\x00"

_0bf9fc_data:
		.ascii  "\x10\x00\x00\x00"

_0bfa00_data:
		.long   _087292_jump

_0bfa04_data:
		.long   _087292_jump

_0bfa08_data:
		.ascii  "\x7f\x12\x00\x00"

_0bfa0c_data:
		.ascii  "\x11\x00\x00\x00"

_0bfa10_data:
		.fill   0x4

_0bfa14_data:
		.fill   0x4

_0bfa18_data:
		.string "/michel ancel/"
		.ascii  "\x00"

_0bfa28_data:
		.string "/frederic houde/"
		.ascii  "\x00\x00\x00"

_0bfa3c_data:
		.string "/alexandra steible/"

_0bfa50_data:
		.string "/serge hascoet/"

_0bfa60_data:
		.string "/bruno bouvret/"

_0bfa70_data:
		.string "/gunther galipot/"
		.ascii  "\x00\x00"

_0bfa84_data:
		.string "/sacha gentilhomme/"

_0bfa98_data:
		.string "/michael guez/"
		.ascii  "\x00"

_0bfaa8_data:
		.string "/christophe thibaut/"
		.ascii  "\x00\x00\x00"

_0bfac0_data:
		.string "/kamal aitmihoub/"
		.ascii  "\x00\x00"

_0bfad4_data:
		.string "/david gilson/"
		.ascii  "\x00"

_0bfae4_data:
		.string "/sophie esturgie/"
		.ascii  "\x00\x00"

_0bfaf8_data:
		.string "/jacques exertie/"
		.ascii  "\x00\x00"

_0bfb0c_data:
		.string "/gregoire pons/"

_0bfb1c_data:
		.string "/veronique rondello/"
		.ascii  "\x00\x00\x00"

_0bfb34_data:
		.string "/beatrice sauterau/"

_0bfb48_data:
		.string "/philippe vindolet"
		.ascii  "\x00"

_0bfb5c_data:
		.string "/christian volckman/"
		.ascii  "\x00\x00\x00"

_0bfb74_data:
		.string "/eric pelatan/"
		.ascii  "\x00"

_0bfb84_data:
		.string "/sylvaine jenny/"
		.ascii  "\x00\x00\x00"

_0bfb98_data:
		.string "/jean christophe alessandri/"
		.ascii  "\x00\x00\x00"

_0bfbb8_data:
		.string "/sophie ancel/"
		.ascii  "\x00"

_0bfbc8_data:
		.string "/olivier bechard/"
		.ascii  "\x00\x00"

_0bfbdc_data:
		.string "/nicolas bocquillon/"
		.ascii  "\x00\x00\x00"

_0bfbf4_data:
		.string "/jean marc geffroy/"

_0bfc08_data:
		.string "/laurent rettig/"
		.ascii  "\x00\x00\x00"

_0bfc1c_data:
		.string "/olivier soleil/"
		.ascii  "\x00\x00\x00"

_0bfc30_data:
		.string "/bertrand helias/"
		.ascii  "\x00\x00"

_0bfc44_data:
		.string "/yann le tensorer/"
		.ascii  "\x00"

_0bfc58_data:
		.string "/daniel palix/"
		.ascii  "\x00"

_0bfc68_data:
		.string "/cyril cauchois/"
		.ascii  "\x00\x00\x00"

_0bfc7c_data:
		.string "/olivier couvreur/"
		.ascii  "\x00"

_0bfc90_data:
		.string "/antoine dodens/"
		.ascii  "\x00\x00\x00"

_0bfca4_data:
		.string "/antonio ferreira/"
		.ascii  "\x00"

_0bfcb8_data:
		.string "/philippe fuentes/"
		.ascii  "\x00"

_0bfccc_data:
		.string "/benoit germain/"
		.ascii  "\x00\x00\x00"

_0bfce0_data:
		.string "/christophe giraud/"

_0bfcf4_data:
		.string "/francois mahieu/"
		.ascii  "\x00\x00"

_0bfd08_data:
		.string "/christian mihalache/"
		.ascii  "\x00\x00"

_0bfd20_data:
		.string "/sebastien morin/"
		.ascii  "\x00\x00"

_0bfd34_data:
		.string "/bogdan radusi/"

_0bfd44_data:
		.string "/daniel raviart/"
		.ascii  "\x00\x00\x00"

_0bfd58_data:
		.string "/olivier rozier/"
		.ascii  "\x00\x00\x00"

_0bfd6c_data:
		.string "/jozef skrabo/"
		.ascii  "\x00"

_0bfd7c_data:
		.string "/gilles vanwalleghem/"
		.ascii  "\x00\x00"

_0bfd94_data:
		.string "/stephane bellanger/"
		.ascii  "\x00\x00\x00"

_0bfdac_data:
		.string "/didier lord/"
		.ascii  "\x00\x00"

_0bfdbc_data:
		.string "/olivier amiaud/"
		.ascii  "\x00\x00\x00"

_0bfdd0_data:
		.string "/sylvain brunet/"
		.ascii  "\x00\x00\x00"

_0bfde4_data:
		.string "/nathalie drouet/"
		.ascii  "\x00\x00"

_0bfdf8_data:
		.string "/dominique dumont/"
		.ascii  "\x00"

_0bfe0c_data:
		.string "/kamel feunas/"
		.ascii  "\x00"

_0bfe1c_data:
		.string "/remy gazel/"
		.ascii  "\x00\x00\x00"

_0bfe2c_data:
		.string "/didier leglise/"
		.ascii  "\x00\x00\x00"

_0bfe40_data:
		.string "/jean marc litchmann/"
		.ascii  "\x00\x00"

_0bfe58_data:
		.string "/frederic louvre/"
		.ascii  "\x00\x00"

_0bfe6c_data:
		.string "/guillaume michel/"
		.ascii  "\x00"

_0bfe80_data:
		.string "/olivier mortier/"
		.ascii  "\x00\x00"

_0bfe94_data:
		.string "/frederic prados/"
		.ascii  "\x00\x00"

_0bfea8_data:
		.string "/stephane ronse/"
		.ascii  "\x00\x00\x00"

_0bfebc_data:
		.string "/rene de wael/"
		.ascii  "\x00"

_0bfecc_data:
		.string "/emmanuelle cosso/"
		.ascii  "\x00"

_0bfee0_data:
		.string "/mitsuyuki bando/"
		.ascii  "\x00\x00"

_0bfef4_data:
		.string "/chris benard/"
		.ascii  "\x00"

_0bff04_data:
		.string "/patrice dozier/"
		.ascii  "\x00\x00\x00"

_0bff18_data:
		.string "/douglas rand/"
		.ascii  "\x00"

_0bff28_data:
		.string "/steven perkinson/"
		.ascii  "\x00"

_0bff3c_data:
		.string "/christian stonner/"

_0bff50_data:
		.string "/bruno barone/"
		.ascii  "\x00"

_0bff60_data:
		.string "/thomas belmont/"
		.ascii  "\x00\x00\x00"

_0bff74_data:
		.string "/christophe cavelan/"
		.ascii  "\x00\x00\x00"

_0bff8c_data:
		.string "/marc gioan/"
		.ascii  "\x00\x00\x00"

_0bff9c_data:
		.string "/benoit macon/"
		.ascii  "\x00"

_0bffac_data:
		.string "/lionel rico/"
		.ascii  "\x00\x00"

_0bffbc_data:
		.string "/emmanuel texandier/"
		.ascii  "\x00\x00\x00"

_0bffd4_data:
		.string "/dorian thibaut/"
		.ascii  "\x00\x00\x00"

_0bffe8_data:
		.string "/agnes haegel/"
		.ascii  "\x00"

_0bfff8_data:
		.string "/ludimedia : gerard guillemot/"
		.ascii  "\x00"

_0c0018_data:
		.string "/ubi studios : michel guillemot/"
		.ascii  "\x00\x00\x00"

_0c003c_data:
		.string "/ubi soft :  yves guillemot/"
		.ascii  "\x00\x00\x00"

_0c005c_data:
		.string "rayman"
		.ascii  "\x00"

_0c0064_data:
		.ascii  "\x2e\x5c\x00\x00"

_0c0068_data:
		.string "SAVE"
		.ascii  "\x00\x00\x00"

_0c0070_data:
		.string "Missing = in rayman's argument (save=pathname).\n"
		.ascii  "\x00\x00\x00"

_0c00a4_data:
		.ascii  "\x5c\x00\x00\x00"

_0c00a8_data:
		.string "FREQ70"
		.ascii  "\x00"

_0c00b0_data:
		.string "\nLeft memory available = %.3f Mo.\n\n"

_0c00d4_data:
		.string "386 processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c00f0_data:
		.string "Rayman requires a 486 or more.\n"

_0c0110_data:
		.string "486 processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c012c_data:
		.string "Pentium processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c014c_data:
		.string "Pentium %1d processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c0170_data:
		.string "Unknown processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c0190_data:
		.string "No windows detected.\n"
		.ascii  "\x00\x00"

_0c01a8_data:
		.string "Windows real mode detected.\n"
		.ascii  "\x00\x00\x00"

_0c01c8_data:
		.string "Windows standard mode detected.\n"
		.ascii  "\x00\x00\x00"

_0c01ec_data:
		.string "Windows/386 V 2.x detected.\n"
		.ascii  "\x00\x00\x00"

_0c020c_data:
		.string "Windows 95 detected.\n"
		.ascii  "\x00\x00"

_0c0224_data:
		.string "Windows V %d.%d detected.\n"
		.ascii  "\x00"

_0c0240_data:
		.string "Not enough memory."
		.ascii  "\x00"

_0c0254_data:
		.string "\nTry to detect sound card.\n"

_0c0270_data:
		.string "Found a %s sound card.\n"

_0c0288_data:
		.string "   PORT = %d\n"
		.ascii  "\x00\x00"

_0c0298_data:
		.string "   IRQ  = %d\n"
		.ascii  "\x00\x00"

_0c02a8_data:
		.string "   DMA  = %d\n"
		.ascii  "\x00\x00"

_0c02b8_data:
		.string "Sorry, no sound card detected.\n"

_0c02d8_data:
		.ascii  "\x0a\x00\x00\x00"

_0c02dc_data:
		.string "Normal and X mode available.\n"
		.ascii  "\x00\x00"

_0c02fc_data:
		.string "Only X mode available.\n"

_0c0314_data:
		.string "Sound and CD music.\n"
		.ascii  "\x00\x00\x00"

_0c032c_data:
		.string "Only sound, no CD music.\n"
		.ascii  "\x00\x00"

_0c0348_data:
		.string "Only CD music, no sound.\n"
		.ascii  "\x00\x00"

_0c0364_data:
		.string "no CD music, no sound.\n"

_0c037c_data:
		.string "Background available.\n"
		.ascii  "\x00"

_0c0394_data:
		.string "No background.\n"

_0c03a4_data:
		.string "Allocation error in variables.\n"

_0c03c4_data:
		.string "Allocation error in variables.\n"

_0c03e4_data:
		.string "RAYMAN (EU) v1.00"
		.ascii  "\x00\x00"

_0c03f8_data:
		.string "(C) 1994-1995 UBI STUDIOS, FRANCE"
		.ascii  "\x00\x00"

_0c041c_data:
		.ascii  "\x0a\x0a\x00\x00"

_0c0420_data:
		.string "rayman.cfg"
		.ascii  "\x00"

_0c042c_data:
		.string "c:\\raytmp.tmp"
		.ascii  "\x00\x00"

_0c043c_data:
		.string "CD ROM's Initialization.\n"
		.ascii  "\x00\x00"

_0c0458_data:
		.string "/limited version/"
		.ascii  "\x00\x00"

_0c046c_data:
		.string "/install rayman with cdrom/"

_0c0488_data:
		.string "/hi master/"

_0c0494_data:
		.string "/happy to see you/"
		.ascii  "\x00"

_0c04a8_data:
		.ascii  "\x25\x00\x00\x00"

_0c04ac_data:
		.string "/go !/"
		.ascii  "\x00"

_0c04b4_data:
		.string "''game over''"
		.ascii  "\x00\x00"

_0c04c4_data:
		.string "game over"
		.ascii  "\x00\x00"

_0c04d0_data:
		.ascii  "\x3a\x00\x00\x00"

_0c04d4_data:
		.fill   0x4

_0c04d8_data:
		.string "Rayman says fatal error :\n%s\n"
		.ascii  "\x00\x00"

_0c04f8_data:
		.string "\nPress a key to exit.\n"
		.ascii  "\x00"

_0c0510_data:
		.string "/%2d : %02d/"
		.ascii  "\x00\x00\x00"

_0c0520_data:
		.string "/%s/"
		.ascii  "\x00\x00\x00"

_0c0528_data:
		.string "Write Protect Violation"

_0c0540_data:
		.string "Unknown unit"
		.ascii  "\x00\x00\x00"

_0c0550_data:
		.string "Drive not ready"

_0c0560_data:
		.string "Unknown command"

_0c0570_data:
		.string "CRC error"
		.ascii  "\x00\x00"

_0c057c_data:
		.string "Bad drive request structure length"
		.ascii  "\x00"

_0c05a0_data:
		.string "Seek error"
		.ascii  "\x00"

_0c05ac_data:
		.string "Unknown media"
		.ascii  "\x00\x00"

_0c05bc_data:
		.string "Sector not found"
		.ascii  "\x00\x00\x00"

_0c05d0_data:
		.string "Printer out of paper"
		.ascii  "\x00\x00\x00"

_0c05e8_data:
		.string "Write fault"

_0c05f4_data:
		.string "Read fault"
		.ascii  "\x00"

_0c0600_data:
		.string "General failure"

_0c0610_data:
		.string "Reserved"
		.ascii  "\x00\x00\x00"

_0c061c_data:
		.string "Invalid disk change"

_0c0630_data:
		.string "CD ROM drive found on %c:\n"
		.ascii  "\x00"

_0c064c_data:
		.string "Differential method"

_0c0660_data:
		.string "Source file checksum error\n"

_0c067c_data:
		.string "Corrupted source file\n"
		.ascii  "\x00"

_0c0694_data:
		.string "Fatal error: "
		.ascii  "\x00\x00"

_0c06a4_data:
		.fill   0x4

_0c06a8_data:
		.ascii  "\x7e\x00\x00\x00\x7a"

_0c06ad_data:
		.ascii  "\x00\x00\x00"

_0c06b0_data:
		.string "level "
		.ascii  "\x00"

_0c06b8_data:
		.string "conclu.dat"
		.ascii  "\x00"

_0c06c4_data:
		.string "Memory error in draw_buffer.\n"
		.ascii  "\x00\x00"

_0c06e4_data:
		.ascii  "\x52\x41\x59\x00"

_0c06e8_data:
		.string ".LEV"
		.ascii  "\x00\x00\x00"

_0c06f0_data:
		.string ".WLD"
		.ascii  "\x00\x00\x00"

_0c06f8_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c06fc_data:
		.string "RAYMAN"
		.ascii  "\x00"

_0c0704_data:
		.string ".SAV"
		.ascii  "\x00\x00\x00"

_0c070c_data:
		.string "\n%s\n"
		.ascii  "\x00\x00\x00"

_0c0714_data:
		.ascii  "\x0a\x00\x00\x00"

_0c0718_data:
		.string "    For more information about RAYMAN    \n"
		.ascii  "\x00"

_0c0744_data:
		.string "or our other CD-ROM products, contact us.\n"
		.ascii  "\x00"

_0c0770_data:
		.string "                Ubi Soft                 \n"
		.ascii  "\x00"

_0c079c_data:
		.string "   80 East Sir Francis Drake Boulevard   \n"
		.ascii  "\x00"

_0c07c8_data:
		.string "           Larkspur, CA 94939            \n"
		.ascii  "\x00"

_0c07f4_data:
		.string "             1-800-UBI-SOFT              \n"
		.ascii  "\x00"

_0c0820_data:
		.string "intro.dat"
		.ascii  "\x00\x00"

_0c082c_data:
		.ascii  "\x2e\x5c\x00\x00"

_0c0830_data:
		.ascii  "\x72\x62\x00\x00"

_0c0834_data:
		.string "Rayman sound says fatal error :\n%s\n"

_0c0858_data:
		.ascii  "\x72\x62\x00\x00"

_0c085c_data:
		.string "SNDH8B.DAT"
		.ascii  "\x00"

_0c0868_data:
		.string "Fichier header introuvable (SNDH8B.DAT).\n"
		.ascii  "\x00\x00"

_0c0894_data:
		.string "Load error in sndh8b.dat.\n"
		.ascii  "\x00"

_0c08b0_data:
		.string "SNDD8B.DAT"
		.ascii  "\x00"

_0c08bc_data:
		.string "Fichier data introuvable.\n"
		.ascii  "\x00"

_0c08d8_data:
		.ascii  "\x4d\x82"
		.string "moire insuffisante pour charger les samples.\n"

_0c0908_data:
		.string "Load error in sndd8b.dat.\n"
		.ascii  "\x00"

_0c0924_data:
		.string "FILE NOT FOUND: %s\n"

_0c0938_data:
		.string "DANY"
		.ascii  "\x00\x00\x00"

_0c0940_data:
		.string " tu veux voir comment y joue Monsieur Daniel ?\n"

_0c0970_data:
		.string " NaMe oF fILe ? (DEfAuLT:%s) \n"
		.ascii  "\x00"

_0c0990_data:
		.string ".REC"
		.ascii  "\x00\x00\x00"

_0c0998_data:
		.string "Pas de Jumelle"
		.ascii  "\x00"

_0c09a8_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c09ac_data:
		.string "PCMAP"
		.ascii  "\x00\x00"

_0c09b4_data:
		.ascii  "\x5c\x00\x00\x00"

_0c09b8_data:
		.ascii  "\x72\x62\x00\x00"

_0c09bc_data:
		.string "Can not open file %s (load_world).\n"

_0c09e0_data:
		.string "%s : File integrity fault.\n"

_0c09fc_data:
		.string "Can not open file %s (load_level).\n"

_0c0a20_data:
		.string "%s : File integrity fault (Block Normal).\n"
		.ascii  "\x00"

_0c0a4c_data:
		.string "bray.dat"
		.ascii  "\x00\x00\x00"

_0c0a58_data:
		.string "Can not open file %s (load_big_ray).\n"
		.ascii  "\x00\x00"

_0c0a80_data:
		.string "ALLFIX.DAT"
		.ascii  "\x00"

_0c0a8c_data:
		.string "Can not open file %s (load_all_fix).\n"
		.ascii  "\x00\x00"

_0c0ab4_data:
		.string "VIGNET.DAT"
		.ascii  "\x00"

_0c0ac0_data:
		.string "%s : Can not open.\n"

_0c0ad4_data:
		.string "%s : File integrity fault (%d).\n"
		.ascii  "\x00\x00\x00"

_0c0af8_data:
		.string "No memory allocated for it (load_pcx) !!"
		.ascii  "\x00\x00\x00"

_0c0b24_data:
		.string "%s : File integrity fault (%d).\n"
		.ascii  "\x00\x00\x00"

_0c0b48_data:
		.string "No memory allocated (load_plan0)."
		.ascii  "\x00\x00"

_0c0b6c_data:
		.string "No memory allocated (PLAN0FND_to_bits_planes)."
		.ascii  "\x00"

_0c0b9c_data:
		.string "RAY.LNG"

_0c0ba4_data:
		.string "Memory error in LoadLanguageTxt"

_0c0bc4_data:
		.string "%s : File integrity fault (%d).\n"
		.ascii  "\x00\x00\x00"

_0c0be8_data:
		.string "No memory allocated for it (load_pcx) !!"
		.ascii  "\x00\x00\x00"

_0c0c14_data:
		.string "320x200"

_0c0c1c_data:
		.string "312x196"

_0c0c24_data:
		.string "304x192"

_0c0c2c_data:
		.string "300x188"

_0c0c34_data:
		.ascii  "\x36\x30\x00\x00"

_0c0c38_data:
		.ascii  "\x35\x30\x00\x00"

_0c0c3c_data:
		.ascii  "\x33\x30\x00\x00"

_0c0c40_data:
		.ascii  "\x32\x35\x00\x00"

_0c0c44_data:
		.string "mode dieu"
		.ascii  "\x00\x00"

_0c0c50_data:
		.ascii  "\x31\x00\x00\x00"

_0c0c54_data:
		.ascii  "\x32\x00\x00\x00"

_0c0c58_data:
		.ascii  "\x33\x00\x00\x00"

_0c0c5c_data:
		.ascii  "\x34\x00\x00\x00"

_0c0c60_data:
		.ascii  "\x35\x00\x00\x00"

_0c0c64_data:
		.ascii  "\x36\x00\x00\x00"

_0c0c68_data:
		.ascii  "\x37\x00\x00\x00"

_0c0c6c_data:
		.ascii  "\x38\x00\x00\x00"

_0c0c70_data:
		.ascii  "\x39\x00\x00\x00"

_0c0c74_data:
		.ascii  "\x30\x00\x00\x00"

_0c0c78_data:
		.ascii  "\x61\x00\x00\x00"

_0c0c7c_data:
		.ascii  "\x7a\x00\x00\x00"

_0c0c80_data:
		.ascii  "\x65\x00\x00\x00"

_0c0c84_data:
		.ascii  "\x72\x00\x00\x00"

_0c0c88_data:
		.ascii  "\x74\x00\x00\x00"

_0c0c8c_data:
		.ascii  "\x79\x00\x00\x00"

_0c0c90_data:
		.ascii  "\x75\x00\x00\x00"

_0c0c94_data:
		.ascii  "\x69\x00\x00\x00"

_0c0c98_data:
		.ascii  "\x6f\x00\x00\x00"

_0c0c9c_data:
		.ascii  "\x70\x00\x00\x00"

_0c0ca0_data:
		.ascii  "\x71\x00\x00\x00"

_0c0ca4_data:
		.ascii  "\x73\x00\x00\x00"

_0c0ca8_data:
		.ascii  "\x64\x00\x00\x00"

_0c0cac_data:
		.ascii  "\x66\x00\x00\x00"

_0c0cb0_data:
		.ascii  "\x67\x00\x00\x00"

_0c0cb4_data:
		.ascii  "\x68\x00\x00\x00"

_0c0cb8_data:
		.ascii  "\x6a\x00\x00\x00"

_0c0cbc_data:
		.ascii  "\x6b\x00\x00\x00"

_0c0cc0_data:
		.ascii  "\x6c\x00\x00\x00"

_0c0cc4_data:
		.ascii  "\x6d\x00\x00\x00"

_0c0cc8_data:
		.ascii  "\x77\x00\x00\x00"

_0c0ccc_data:
		.ascii  "\x78\x00\x00\x00"

_0c0cd0_data:
		.ascii  "\x63\x00\x00\x00"

_0c0cd4_data:
		.ascii  "\x76\x00\x00\x00"

_0c0cd8_data:
		.ascii  "\x62\x00\x00\x00"

_0c0cdc_data:
		.ascii  "\x6e\x00\x00\x00"

_0c0ce0_data:
		.ascii  "\x3f\x00\x00\x00"

_0c0ce4_data:
		.ascii  "\x2e\x00\x00\x00"

_0c0ce8_data:
		.ascii  "\x3a\x00\x00\x00"

_0c0cec_data:
		.ascii  "\x61\x2f\x00\x00"

_0c0cf0_data:
		.ascii  "\x62\x2f\x00\x00"

_0c0cf4_data:
		.ascii  "\x63\x2f\x00\x00"

_0c0cf8_data:
		.ascii  "\x64\x2f\x00\x00"

_0c0cfc_data:
		.string "pci1"
		.ascii  "\x00\x00\x00"

_0c0d04_data:
		.string "pci2"
		.ascii  "\x00\x00\x00"

_0c0d0c_data:
		.string "vesa"
		.ascii  "\x00\x00\x00"

_0c0d14_data:
		.ascii  "\x7c\x00\x00\x00"

_0c0d18_data:
		.ascii  "\x6f\x6b\x00\x00"

_0c0d1c_data:
		.string "/......./"
		.ascii  "\x00\x00"

_0c0d28_data:
		.string "Error On MAX_ACTOBJ."
		.ascii  "\x00\x00\x00"

_0c0d40_data:
		.string "Augmenter MAX_NB_SCROLL_PER_MAP"

_0c0d60_data:
		.ascii  "\x2f\x00\x00\x00"

_0c0d64_data:
		.ascii  "\x61\x61\x61\x00"

_0c0d68_data:
		.ascii  "\x61\x00\x00\x00"

_0c0d6c_data:
		.ascii  "\x62\x00\x00\x00"

_0c0d70_data:
		.ascii  "\x64\x00\x00\x00"

_0c0d74_data:
		.ascii  "\x63\x00\x00\x00"

_0c0d78_data:
		.string "/you have done it !/"
		.ascii  "\x00\x00\x00"

_0c0d90_data:
		.string "/you have saved the world !/"
		.ascii  "\x00\x00\x00"

_0c0db0_data:
		.string "%c:\\"
		.ascii  "\x00\x00\x00"

_0c0db8_data:
		.ascii  "\x72\x00\x00\x00"

_0c0dbc_data:
		.string "Information sur le bloc_malloc.\n"
		.ascii  "\x00\x00\x00"

_0c0de0_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e fixes                           : %u\n"
		.ascii  "\x00\x00"

_0c0e1c_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e fixes   (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0c0e64_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e mondes                          : %u\n"
		.ascii  "\x00\x00"

_0c0ea0_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e mondes  (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0c0ee8_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e maps                            : %u\n"
		.ascii  "\x00\x00"

_0c0f24_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e maps    (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0c0f6c_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e sprites                         : %u\n"
		.ascii  "\x00\x00"

_0c0fa8_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e sprites (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0c0ff0_data:
		.ascii  "\x0a\x00\x00\x00"

_0c0ff4_data:
		.string "Information sur le temp_malloc.\n"
		.ascii  "\x00\x00\x00"

_0c1018_data:
		.ascii   "   - Taille de la m"
		.ascii  "\x82"
		.ascii   "moire allou"
		.ascii  "\x82"
		.string "e            : %u\n"
		.ascii  "\x00"

_0c104c_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e                 : %u (%u*1024L)\n"
		.ascii  "\x00\x00"

_0c108c_data:
		.string "Left memory = %d\n"
		.ascii  "\x00\x00"

_0c10a0_data:
		.ascii  "\x66\x69\x78\x00"

_0c10a4_data:
		.string "world"
		.ascii  "\x00\x00"

_0c10ac_data:
		.string "level"
		.ascii  "\x00\x00"

_0c10b4_data:
		.string "sprite"
		.ascii  "\x00"

_0c10bc_data:
		.string "unknown mem"

_0c10c8_data:
		.string "Memory error in block_malloc : %s = %p, size = %ul.\n"
		.ascii  "\x00\x00\x00"

_0c1100_data:
		.string "Can not allocate %d bytes in memory.\n"
		.ascii  "\x00\x00"

_0c1128_data:
		.string "not enough memory in pool.\nMemory error in tmp_malloc : size = %ul.\n"
		.ascii  "\x00\x00\x00"

_0c1170_data:
		.string "hmidet.386"
		.ascii  "\x00"

_0c117c_data:
		.string "acos"

_0c1181_data:
		.string "asin"

_0c1186_data:
		.string "sqrt"

_0c118b_data:
		.ascii  "\x65\x78\x70\x00"

_0c118f_data:
		.string "cosh"

_0c1194_data:
		.string "sinh"

_0c1199_data:
		.ascii  "\x70\x6f\x77\x00"

_0c119d_data:
		.string "acosh"

_0c11a3_data:
		.string "log2"

_0c11a8_data:
		.ascii  "\x6c\x6f\x67\x00"

_0c11ac_data:
		.string "log10"

_0c11b2_data:
		.string "atanh"

_0c11b8_data:
		.string "atan2"

_0c11be_data:
		.string "ipow"

_0c11c3_data:
		.string "dpowi"

_0c11c9_data:
		.ascii  "\x63\x6f\x73\x00"

_0c11cd_data:
		.ascii  "\x73\x69\x6e\x00"

_0c11d1_data:
		.ascii  "\x74\x61\x6e\x00"

_0c11d5_data:
		.ascii  "\x79\x30\x00"

_0c11d8_data:
		.ascii  "\x79\x31\x00"

_0c11db_data:
		.ascii  "\x79\x6e\x00"

_0c11de_data:
		.ascii  "\x6d\x6f\x64\x00"

_0c11e2_data:
		.string "cotan"

_0c11e8_data:
		.string "Error Code Does Not Indicate An Error"

_0c120e_data:
		.string "Specified Driver Is Not Loaded"

_0c122d_data:
		.string "Specified Pointer Is NULL"

_0c1247_data:
		.string "Detection System Is Already Initialized"

_0c126f_data:
		.string "File Open Failure"

_0c1281_data:
		.string "Memory Allocation Failure"

_0c129b_data:
		.string "Invalid Driver ID"

_0c12ad_data:
		.string "Driver Not Found"

_0c12be_data:
		.string "Detection System Failed To Find Hardware"

_0c12e7_data:
		.string "Driver Already Loaded Using Specified Handle"

_0c1314_data:
		.string "Invalid Handle"

_0c1323_data:
		.string "No Handles Available"

_0c1338_data:
		.string "Hardware Already Paused"

_0c1350_data:
		.string "Hardware Not Paused"

_0c1364_data:
		.string "Data Is Not Valid"

_0c1376_data:
		.string "HMI*.386 File Open Failure"

_0c1391_data:
		.string "Incorrect Port"

_0c13a0_data:
		.string "Incorrect IRQ"

_0c13ae_data:
		.string "Incorrect DMA"

_0c13bc_data:
		.string "Incorrect DMA/IRQ"
		.ascii  "\x00\x00"

_0c13d0_data:
		.string "hmidrv.386"
		.ascii  "\x00"

_0c13dc_data:
		.string "Floating-point support not loaded\r\n"

_0c1400_data:
		.string "Domain error"

_0c140d_data:
		.string "Argument singularity"

_0c1422_data:
		.string "Overflow range error"

_0c1437_data:
		.string "Underflow range error"

_0c144d_data:
		.string "Total loss of significance"

_0c1468_data:
		.string "Partial loss of significance"

_0c1485_data:
		.string " in "
		.ascii  "\x00\x00"

_0c148c_data:
		.ascii  "\x3a\x8c\x30\xe2\x8e\x79\x45\x3e"

_0c1494_data:
		.string "Not enough memory to allocate file structures\r\n"

_0c14c4_data:
		.ascii  "\x54\x5a\x00\x00"

_0c14c8_data:
		.ascii  "\x69\x6e\x66\x00"

_0c14cc_data:
		.ascii  "\x6e\x61\x6e\x00"

_0c14d0_data:
		.ascii  "\x49\xad\x30\x70\xc7\x52\xe9\x3c"
		.ascii  "\x1f\xb8\x33\xe7\xf3\xe7\x6a\xbd"
		.ascii  "\x08\x6d\xa8\x13\x46\x12\xe6\x3d"
		.ascii  "\xe5\x44\xf5\x67\x45\xe6\x5a\xbe"
		.ascii  "\x36\xc7\x56\xa5\xe3\x1d\xc7\x3e"
		.ascii  "\x1a\xa0\x01\x1a\xa0\x01\x2a\xbf"
		.ascii  "\x11\x11\x11\x11\x11\x11\x81"
		.ascii   "?SUUUUU"
		.ascii  "\xc5\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c1518_data:
		.ascii  "\x1f\xb8\x33\xe7\xf3\xe7\x2a\x3d"
		.ascii  "\x9a\x7c\xc0\xa8\x74\x39\xa9\xbd"
		.ascii  "\x98\xd8\xf8\xef\xd8\xee\x21\x3e"
		.ascii  "\x5c\x9f\x78\xb7\x4f\x7e\x92\xbe"
		.ascii  "\x1a\xa0\x01\x1a\xa0\x01\xfa\x3e"
		.ascii  "\x17\x6c\xc1\x16\x6c\xc1\x56\xbf"
		.ascii   "TUUUUU"
		.ascii  "\xa5\x3f"
		.fill   0x6
		.ascii  "\xe0\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c1560_data:
		.fill   0x4
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x03\x00\x00\x00\x04\x00\x00\x00"
		.ascii  "\x04\x00\x00\x00\x05\x00\x00\x00"
		.ascii  "\x05\x00\x00\x00\x06\x00\x00\x00"

_0c1584_data:
		.ascii  "\x11\x00\x00\x00\x12\x00\x00\x00"
		.ascii  "\x10\x00\x00\x00"

_0c1590_data:
		.ascii  "\x10\x89\xf9\x6c\x58\xb5\xf0"
		.ascii   "?|Q}<"
		.ascii  "\xb8\x72\xf1\x3f\x15\xb7\x31\x0a"
		.ascii  "\xfe\x06\xf3\x3f\xcc\x3b\x7f\x66"
		.ascii  "\x9e\xa0\xf6\x3f"

_0c15b0_data:
		.fill   0x4

_0c15b4_data:
		.ascii  "\x00\x00\xf0\x7f"

_0c15b8_data:
		.ascii  "\xc3\x1c\x98\xfc\x38\xba\xa6\x3f"
		.ascii  "\x21\x00\x01\x61\xd3\x98\xb0\xbf"
		.ascii  "\xa5\x98\xcd\x45\xc0\xa8\xb3\x3f"
		.ascii  "\x73\x4d\xa1\x33\x77\x45\xb7\xbf"
		.ascii  "\x62\xa5\xf2\xe4\xc4\x71\xbc\x3f"
		.ascii  "\x8b\xb3\x5b\x8e\x24\x49\xc2\xbf"
		.ascii  "\x76\x9d\x92\x99\x99\x99\xc9\x3f"
		.ascii  "\xf0"
		.ascii   "RUUUU"
		.ascii  "\xd5\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c1600_data:
		.fill   0x4
		.long   _0c1400_data
		.long   _0c140d_data
		.long   _0c1422_data
		.long   _0c1437_data
		.long   _0c144d_data
		.ascii  "\x68\x14"

_0c161a_data:
		.ascii  "\x0c\x00"

_0c161c_data:
		.ascii  "\x00\x00"

_0c161e_data:
		.ascii  "\x1f\x00\x3b\x00\x5a\x00\x78\x00"
		.ascii  "\x97\x00\xb5\x00\xd4\x00\xf3\x00"
		.ascii  "\x11\x01\x30\x01\x4e\x01"

_0c1634_data:
		.ascii  "\x6d\x01"

_0c1636_data:
		.ascii  "\x00\x00\x1f\x00\x3c\x00\x5b\x00"
		.ascii  "\x79\x00\x98\x00\xb6\x00\xd5\x00"
		.ascii  "\xf4\x00\x12\x01\x31\x01\x4f\x01"
		.ascii  "\x6e\x01"

_0c1650_data:
		.fill   0x4

_0c1654_data:
		.ascii  "\x00\x00\xf0\x7f"

_0c1658_data:
		.fill   0x4

_0c165c_data:
		.ascii  "\x00\x00\xf0\xff"

_0c1660_data:
		.ascii  "\xff\xff\xff\xff"

_0c1664_data:
		.ascii  "\xff\xff\xef\x7f"

_0c1668_data:
		.ascii  "\xff\xff\xff\xff"

_0c166c_data:
		.ascii  "\xff\xff\xef\xff"

_0c1670_data:
		.ascii  "\x29\xbd\x56\xb3\x15\x44\xe9\xbf"
		.ascii  "\xee\xaf\x16"
		.ascii   " Jb0@"
		.ascii  "\x9a\xb5\xb3\x12\xff\x07\x50\xc0"

_0c1688_data:
		.fill   0x6
		.ascii  "\xf0\x3f\x0e\xce\x67\x4b\x80\xd5"
		.ascii  "\x41\xc0\x7f\x26\x15\xfa\x83\x80"
		.ascii  "\x73\x40\x77\x90\x0d\x9c\xfe\x0b"
		.ascii  "\x88\xc0"

_0c16a8_data:
		.ascii  "\xd8\x00"

_0c16aa_data:
		.ascii  "\xc6\xf9\xc6\x40"

_0c16ae_data:
		.ascii  "\xe9\x34\xc7\x6c\x6c\x00\x12\x4e"
		.ascii  "\x83\xcc"
		.string "=@[V6"
		.ascii  "\xce\xc9\x14\x88\x87\xe1\x24\x4b"
		.ascii  "\x1b\x00\x02\x84\xfe\xe4\x71\xd9"
		.ascii  "\x89\x45\x0e\x00\x00\x00\x90\x1e"
		.ascii  "\xc4\xbc\xd6\x42\x08"
		.fill   0x5
		.ascii  "\x84\xd7\x97\x41\x04"
		.fill   0x6
		.ascii  "\x88\xc3\x40\x01"
		.fill   0x7
		.ascii  "\x24\x40"

_0c16f8_data:
		.ascii  "\x00\x20"
		.long   _081b81_func
		.ascii  "\x00\x20"
		.long   _081d4f_func
		.ascii  "\x00\x20"
		.long   _081d6a_func
		.ascii  "\x00\x02"
		.long   _086148_func
		.ascii  "\x00\x20"
		.long   _0864c6_func
		.ascii  "\x00\x03"
		.long   _086471_func
		.ascii  "\x00\x20"
		.long   _08793f_func

_0c1722_data:
		.ascii  "\x00\x20"
		.long   _08653d_func

_0c1728_data:
		.ascii  "\x00\x01\x00\x00\x04\x00\x00\x07"
		.ascii  "\x00\x00\x0a\x00\x00\x0d\x00\x00"

_0c1738_data:
		.ascii  "\x00\x00\x70\x3f"

_0c173c_data:
		.ascii  "\x00\x00\x88\x3f"

_0c1740_data:
		.ascii  "\x00\x00\x00\x5f"

_0c1744_data:
		.long   _083281_func
		.long   _083287_func
		.long   _08328c_jump
		.long   _083292_func
		.long   _083297_jump
		.long   _08329d_func
		.long   _0832a3_func
		.long   _0832a9_func
		.long   _0832af_func
		.long   _0832cb_func
		.long   _0832d0_jump
		.long   _0832e6_func
		.long   _0832eb_jump
		.long   _083307_func
		.long   _083317_func
		.long   _08332b_func
		.long   _08333b_func
		.long   _08335b_func
		.long   _083360_jump
		.long   _08337a_func
		.long   _08337f_jump
		.long   _08339f_func
		.long   _0833b3_func
		.long   _0833cb_func
		.long   _0833df_func
		.long   _0833ff_func
		.long   _083404_jump
		.long   _08341e_func
		.long   _083423_jump
		.long   _083443_func
		.long   _083457_func
		.long   _08346f_func
		.long   _083483_func
		.long   _0834a3_func
		.long   _0834a8_jump
		.long   _0834c2_func
		.long   _0834c7_jump
		.long   _0834e7_func
		.long   _0834fb_func
		.long   _083513_func
		.long   _083527_func
		.long   _083547_func
		.long   _08354c_jump
		.long   _083566_func
		.long   _08356b_jump
		.long   _08358b_func
		.long   _08359f_func
		.long   _0835b7_func
		.long   _0835cb_func
		.long   _0835eb_func
		.long   _0835f0_jump
		.long   _08360a_func
		.long   _08360f_jump
		.long   _08362f_func
		.long   _083643_func
		.long   _08365b_func
		.long   _08366f_func
		.long   _08368f_func
		.long   _083694_jump
		.long   _0836ae_func
		.long   _0836b3_jump
		.long   _0836d3_func
		.long   _0836e7_func
		.long   _0836ff_func

_0c1844_data:
		.ascii  "\x00\x01\x00\x00\x04\x00\x00\x07"
		.ascii  "\x00\x00\x0a\x00\x00\x0d\x00\x00"

_0c1854_data:
		.ascii  "\x00\x00\x70\x3f"

_0c1858_data:
		.ascii  "\x00\x00\x00\x5f"

_0c185c_data:
		.fill   0x6
		.ascii  "\xf0\x3f"
		.fill   0x6
		.ascii  "\xf0\xbf"

_0c186c_data:
		.long   _088020_func
		.long   _08802b_func
		.long   _088038_func
		.long   _08804b_func
		.long   _088060_func
		.long   _088073_func
		.long   _088088_func
		.long   _08809b_func

_0c188c_data:
		.ascii  "\x35\xc2\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\x00\x40"

_0c1896_data:
		.ascii  "\x35\xc2\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xff\x3f"

_0c18a0_data:
		.ascii  "\x00\x00\x80\x41"

_0c18a4_data:
		.ascii  "\x00\x00\x80\x3d"

_0c18a8_data:
		.ascii  "\xa8\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
		.ascii  "\xfd\xbf"

_0c18b2_data:
		.ascii  "\x6e\x2d\xcc\xcc\xcc\xcc\xcc\xcc"
		.ascii  "\xfc\x3f"

_0c18bc_data:
		.ascii  "\x92\x48\xf9\x41\x92\x24\x49\x92"
		.ascii  "\xfc\xbf"

_0c18c6_data:
		.ascii  "\x92\xc5\xec\xcd\x97\x38\x8e\xe3"
		.ascii  "\xfb\x3f"

_0c18d0_data:
		.ascii  "\xdd\x5d\x62\xc1\x7b\xc1\x2d\xba"
		.ascii  "\xfb\xbf"

_0c18da_data:
		.ascii  "\x54\x48\x8e\xc7\xc7\x77\x80\x9c"
		.ascii  "\xfb\x3f"

_0c18e4_data:
		.fill   0x10
		.ascii  "\x37\x4e\xef\x67\xb9\xdd\xaa\xff"
		.ascii  "\xfa\x3f"
		.fill   0x6
		.ascii   "3n{a"
		.ascii  "\xd5\xd4\xad\xfe\xfb\x3f"
		.fill   0x6
		.ascii  "\x35\x11\xd8\x72\x5e\xda\xcb\xbd"
		.ascii  "\xfc\x3f"
		.fill   0x6
		.ascii  "\x15\xeb\x06\x64\xc9\xaf\xdb\xfa"
		.ascii  "\xfc\x3f"
		.fill   0x6
		.ascii   "j^^?"
		.ascii  "\xb8\xb9\x13\x9b\xfd\x3f"
		.fill   0x6
		.ascii  "\x74\x84\xf7\x26\x0f\xca\xb0\xb7"
		.ascii  "\xfd\x3f"
		.fill   0x6
		.ascii  "\xb6\xe5\x1f\x61\x1e\x76\x27\xd3"
		.ascii  "\xfd\x3f"
		.fill   0x6
		.ascii  "\x45\x7b\xda"
		.ascii   "\r+8c"
		.ascii  "\xed\xfd\x3f"
		.fill   0x6
		.ascii  "\x2a\x7e\x86\xd9\xa6\xf4\x2b\x83"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x9b\x9f\xf5\xf7\x5e\x5d\x00\x8f"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x20\xda\xbd\x71\xe6\x80\x2f\x9a"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x24\x09\xf7\x34\x19\x7d\xbc\xa4"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x80\xc0\xd8\xb4\x38\x4c\xac\xae"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x74\x9e\x31\xc2\x2b\x3e\x05\xb8"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x41\x66\x52\xac\xb8\x85\xce\xc0"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x35\xc2\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f"
		.fill   0x12

_0c1a00_data:
		.fill   0x2e

_0c1a2e_data:
		.ascii  "\x00\x00"

_0c1a30_data:
		.ascii  "\x00\x00"

_0c1a32_data:
		.ascii  "\x00\x00"

_0c1a34_data:
		.fill   0x4

_0c1a38_data:
		.fill   0x4

_0c1a3c_data:
		.fill   0x4

_0c1a40_data:
		.fill   0x4

_0c1a44_data:
		.fill   0x4

_0c1a48_data:
		.fill   0x4

_0c1a4c_data:
		.fill   0x4c

_0c1a98_data:
		.fill   0x78

_0c1b10_data:
		.fill   0x20

_0c1b30_data:
		.fill   0x78

_0c1ba8_data:
		.fill   0x78

_0c1c20_data:
		.fill   0x78

_0c1c98_data:
		.fill   0xc8

_0c1d60_data:
		.fill   0xc8

_0c1e28_data:
		.fill   0xc8

_0c1ef0_data:
		.fill   0xc8

_0c1fb8_data:
		.fill   0x100

_0c20b8_data:
		.fill   0x100

_0c21b8_data:
		.fill   0x100

_0c22b8_data:
		.fill   0x100

_0c23b8_data:
		.fill   0x60

_0c2418_data:
		.fill   0x4

_0c241c_data:
		.fill   0x4

_0c2420_data:
		.fill   0x4

_0c2424_data:
		.fill   0x4

_0c2428_data:
		.fill   0x4

_0c242c_data:
		.fill   0x4

_0c2430_data:
		.fill   0x4

_0c2434_data:
		.fill   0x4

_0c2438_data:
		.fill   0x4

_0c243c_data:
		.fill   0x4

_0c2440_data:
		.fill   0x4

_0c2444_data:
		.fill   0x4

_0c2448_data:
		.fill   0x4

_0c244c_data:
		.fill   0x4

_0c2450_data:
		.fill   0x4

_0c2454_data:
		.fill   0x4

_0c2458_data:
		.fill   0x4

_0c245c_data:
		.fill   0x4

_0c2460_data:
		.fill   0x4

_0c2464_data:
		.fill   0x4

_0c2468_data:
		.fill   0x4

_0c246c_data:
		.fill   0x4

_0c2470_data:
		.fill   0x4

_0c2474_data:
		.fill   0x4

_0c2478_data:
		.fill   0x4

_0c247c_data:
		.fill   0x4

_0c2480_data:
		.fill   0x4

_0c2484_data:
		.fill   0x4

_0c2488_data:
		.fill   0x4

_0c248c_data:
		.fill   0x4

_0c2490_data:
		.fill   0x4

_0c2494_data:
		.fill   0x4

_0c2498_data:
		.fill   0x4

_0c249c_data:
		.fill   0x4

_0c24a0_data:
		.fill   0x4

_0c24a4_data:
		.fill   0x4

_0c24a8_data:
		.fill   0x4

_0c24ac_data:
		.fill   0x4

_0c24b0_data:
		.fill   0x4

_0c24b4_data:
		.fill   0x4

_0c24b8_data:
		.fill   0x4

_0c24bc_data:
		.fill   0x4

_0c24c0_data:
		.fill   0x4

_0c24c4_data:
		.fill   0x4

_0c24c8_data:
		.fill   0x4

_0c24cc_data:
		.fill   0x4

_0c24d0_data:
		.fill   0x4

_0c24d4_data:
		.fill   0x4

_0c24d8_data:
		.fill   0x4

_0c24dc_data:
		.fill   0x4

_0c24e0_data:
		.fill   0x4

_0c24e4_data:
		.fill   0x4

_0c24e8_data:
		.fill   0x4

_0c24ec_data:
		.fill   0x4

_0c24f0_data:
		.fill   0x4

_0c24f4_data:
		.fill   0x4

_0c24f8_data:
		.fill   0x4

_0c24fc_data:
		.fill   0x4

_0c2500_data:
		.fill   0x4

_0c2504_data:
		.fill   0x4

_0c2508_data:
		.fill   0x4

_0c250c_data:
		.fill   0x4

_0c2510_data:
		.fill   0x4

_0c2514_data:
		.fill   0x4

_0c2518_data:
		.fill   0x4

_0c251c_data:
		.fill   0x4

_0c2520_data:
		.fill   0x4

_0c2524_data:
		.fill   0x4

_0c2528_data:
		.fill   0x4

_0c252c_data:
		.fill   0x8

_0c2534_data:
		.fill   0x4

_0c2538_data:
		.fill   0x4

_0c253c_data:
		.fill   0x4

_0c2540_data:
		.fill   0x4

_0c2544_data:
		.fill   0x28

_0c256c_data:
		.fill   0x4

_0c2570_data:
		.fill   0x48

_0c25b8_data:
		.fill   0x4

_0c25bc_data:
		.fill   0x4

_0c25c0_data:
		.fill   0x4

_0c25c4_data:
		.fill   0x4

_0c25c8_data:
		.fill   0x4

_0c25cc_data:
		.fill   0x4

_0c25d0_data:
		.fill   0x4

_0c25d4_data:
		.fill   0x4

_0c25d8_data:
		.fill   0x2c

_0c2604_data:
		.fill   0x4

_0c2608_data:
		.fill   0x4

_0c260c_data:
		.fill   0x4

_0c2610_data:
		.fill   0x4

_0c2614_data:
		.fill   0x4

_0c2618_data:
		.fill   0x8

_0c2620_data:
		.fill   0x4

_0c2624_data:
		.fill   0x4

_0c2628_data:
		.fill   0x4

_0c262c_data:
		.fill   0x4

_0c2630_data:
		.fill   0x4

_0c2634_data:
		.fill   0x4

_0c2638_data:
		.fill   0x4

_0c263c_data:
		.fill   0x4c

_0c2688_data:
		.fill   0x4

_0c268c_data:
		.fill   0x4

_0c2690_data:
		.fill   0xc

_0c269c_data:
		.fill   0xc

_0c26a8_data:
		.fill   0x8

_0c26b0_data:
		.fill   0x8

_0c26b8_data:
		.fill   0x4

_0c26bc_data:
		.fill   0x4

_0c26c0_data:
		.fill   0x8

_0c26c8_data:
		.fill   0x1c

_0c26e4_data:
		.fill   0x4

_0c26e8_data:
		.fill   0x4

_0c26ec_data:
		.fill   0x4

_0c26f0_data:
		.fill   0x4

_0c26f4_data:
		.fill   0x4

_0c26f8_data:
		.fill   0x4

_0c26fc_data:
		.fill   0x4

_0c2700_data:
		.fill   0x4

_0c2704_data:
		.fill   0x4

_0c2708_data:
		.fill   0x4

_0c270c_data:
		.fill   0x4

_0c2710_data:
		.fill   0x4

_0c2714_data:
		.fill   0x4

_0c2718_data:
		.fill   0x4

_0c271c_data:
		.fill   0x4

_0c2720_data:
		.fill   0x4

_0c2724_data:
		.fill   0x4

_0c2728_data:
		.fill   0x4

_0c272c_data:
		.fill   0x4

_0c2730_data:
		.fill   0x4

_0c2734_data:
		.fill   0xc

_0c2740_data:
		.fill   0x10

_0c2750_data:
		.fill   0x4

_0c2754_data:
		.fill   0x74

_0c27c8_data:
		.fill   0x8

_0c27d0_data:
		.fill   0x4

_0c27d4_data:
		.fill   0x4

_0c27d8_data:
		.fill   0x12c0

_0c3a98_data:
		.fill   0x12c0

_0c4d58_data:
		.fill   0x20

_0c4d78_data:
		.fill   0x4

_0c4d7c_data:
		.fill   0x4

_0c4d80_data:
		.fill   0x4

_0c4d84_data:
		.ascii  "\x00\x00"

_0c4d86_data:
		.ascii  "\x00\x00"

_0c4d88_data:
		.ascii  "\x00\x00"

_0c4d8a_data:
		.ascii  "\x00\x00"

_0c4d8c_data:
		.ascii  "\x00\x00"

_0c4d8e_data:
		.ascii  "\x00\x00"

_0c4d90_data:
		.ascii  "\x00\x00"

_0c4d92_data:
		.ascii  "\x00\x00"

_0c4d94_data:
		.fill   0x4

_0c4d98_data:
		.fill   0x1500

_0c6298_data:
		.fill   0x300

_0c6598_data:
		.fill   0x300

_0c6898_data:
		.fill   0x5ff

_0c6e97_data:
		.ascii  "\x00"

_0c6e98_data:
		.ascii  "\x00"

_0c6e99_data:
		.fill   0x2ff

_0c7198_data:
		.ascii  "\x00"

_0c7199_data:
		.ascii  "\x00"

_0c719a_data:
		.fill   0x2fb

_0c7495_data:
		.ascii  "\x00"

_0c7496_data:
		.ascii  "\x00"

_0c7497_data:
		.ascii  "\x00"

_0c7498_data:
		.ascii  "\x00"

_0c7499_data:
		.ascii  "\x00"

_0c749a_data:
		.fill   0x8fe

_0c7d98_data:
		.fill   0x700

_0c8498_data:
		.fill   0x80

_0c8518_data:
		.fill   0x680

_0c8b98_data:
		.fill   0x4

_0c8b9c_data:
		.fill   0x4

_0c8ba0_data:
		.fill   0x160

_0c8d00_data:
		.ascii  "\x00\x00"

_0c8d02_data:
		.ascii  "\x00\x00"

_0c8d04_data:
		.ascii  "\x00\x00"

_0c8d06_data:
		.ascii  "\x00\x00"

_0c8d08_data:
		.ascii  "\x00\x00"

_0c8d0a_data:
		.fill   0x1fe

_0c8f08_data:
		.fill   0x78

_0c8f80_data:
		.fill   0x280

_0c9200_data:
		.fill   0x1190

_0ca390_data:
		.fill   0x80

_0ca410_data:
		.fill   0x4

_0ca414_data:
		.fill   0x4

_0ca418_data:
		.fill   0x4

_0ca41c_data:
		.fill   0x4

_0ca420_data:
		.fill   0x4

_0ca424_data:
		.ascii  "\x00"

_0ca425_data:
		.ascii  "\x00"

_0ca426_data:
		.ascii  "\x00\x00"

_0ca428_data:
		.fill   0x10

_0ca438_data:
		.fill   0x10

_0ca448_data:
		.fill   0x10

_0ca458_data:
		.fill   0x10

_0ca468_data:
		.ascii  "\x00\x00"

_0ca46a_data:
		.ascii  "\x00\x00"

_0ca46c_data:
		.ascii  "\x00\x00"

_0ca46e_data:
		.ascii  "\x00\x00"

_0ca470_data:
		.ascii  "\x00\x00"

_0ca472_data:
		.ascii  "\x00\x00"

_0ca474_data:
		.ascii  "\x00\x00"

_0ca476_data:
		.ascii  "\x00\x00"

_0ca478_data:
		.fill   0x10

_0ca488_data:
		.ascii  "\x00\x00"

_0ca48a_data:
		.ascii  "\x00\x00"

_0ca48c_data:
		.ascii  "\x00\x00"

_0ca48e_data:
		.ascii  "\x00\x00"

_0ca490_data:
		.ascii  "\x00\x00"

_0ca492_data:
		.ascii  "\x00\x00"

_0ca494_data:
		.ascii  "\x00\x00"

_0ca496_data:
		.ascii  "\x00\x00"

_0ca498_data:
		.fill   0x180

_0ca618_data:
		.fill   0x17

_0ca62f_data:
		.ascii  "\x00"

_0ca630_data:
		.fill   0x18

_0ca648_data:
		.fill   0xd0

_0ca718_data:
		.ascii  "\x00\x00"

_0ca71a_data:
		.ascii  "\x00\x00"

_0ca71c_data:
		.ascii  "\x00"

_0ca71d_data:
		.ascii  "\x00"

_0ca71e_data:
		.ascii  "\x00\x00"

_0ca720_data:
		.fill   0xd0

_0ca7f0_data:
		.ascii  "\x00\x00"

_0ca7f2_data:
		.ascii  "\x00\x00"

_0ca7f4_data:
		.ascii  "\x00"

_0ca7f5_data:
		.ascii  "\x00"

_0ca7f6_data:
		.ascii  "\x00\x00"

_0ca7f8_data:
		.fill   0xc8

_0ca8c0_data:
		.fill   0x6

_0ca8c6_data:
		.ascii  "\x00\x00"

_0ca8c8_data:
		.ascii  "\x00\x00"

_0ca8ca_data:
		.ascii  "\x00\x00"

_0ca8cc_data:
		.ascii  "\x00"

_0ca8cd_data:
		.ascii  "\x00"

_0ca8ce_data:
		.ascii  "\x00"

_0ca8cf_data:
		.fill   0x6bb

_0caf8a_data:
		.fill   0x6

_0caf90_data:
		.fill   0xd0

_0cb060_data:
		.ascii  "\x00\x00"

_0cb062_data:
		.ascii  "\x00\x00"

_0cb064_data:
		.ascii  "\x00"

_0cb065_data:
		.ascii  "\x00"

_0cb066_data:
		.ascii  "\x00"

_0cb067_data:
		.ascii  "\x00"

_0cb068_data:
		.fill   0x948

_0cb9b0_data:
		.fill   0xd5

_0cba85_data:
		.ascii  "\x00"

_0cba86_data:
		.ascii  "\x00\x00"

_0cba88_data:
		.fill   0xc6

_0cbb4e_data:
		.ascii  "\x00\x00"

_0cbb50_data:
		.ascii  "\x00\x00"

_0cbb52_data:
		.ascii  "\x00\x00"

_0cbb54_data:
		.ascii  "\x00\x00"

_0cbb56_data:
		.ascii  "\x00\x00"

_0cbb58_data:
		.ascii  "\x00\x00"

_0cbb5a_data:
		.ascii  "\x00\x00"

_0cbb5c_data:
		.ascii  "\x00"

_0cbb5d_data:
		.ascii  "\x00"

_0cbb5e_data:
		.ascii  "\x00"

_0cbb5f_data:
		.ascii  "\x00"

_0cbb60_data:
		.fill   0xc6

_0cbc26_data:
		.fill   0x4

_0cbc2a_data:
		.fill   0x4

_0cbc2e_data:
		.ascii  "\x00\x00"

_0cbc30_data:
		.ascii  "\x00\x00"

_0cbc32_data:
		.ascii  "\x00\x00"

_0cbc34_data:
		.ascii  "\x00"

_0cbc35_data:
		.ascii  "\x00"

_0cbc36_data:
		.ascii  "\x00"

_0cbc37_data:
		.ascii  "\x00"

_0cbc38_data:
		.fill   0xc6

_0cbcfe_data:
		.ascii  "\x00\x00"

_0cbd00_data:
		.ascii  "\x00\x00"

_0cbd02_data:
		.ascii  "\x00\x00"

_0cbd04_data:
		.ascii  "\x00\x00"

_0cbd06_data:
		.ascii  "\x00\x00"

_0cbd08_data:
		.ascii  "\x00\x00"

_0cbd0a_data:
		.ascii  "\x00\x00"

_0cbd0c_data:
		.ascii  "\x00"

_0cbd0d_data:
		.ascii  "\x00"

_0cbd0e_data:
		.ascii  "\x00"

_0cbd0f_data:
		.ascii  "\x00"

_0cbd10_data:
		.fill   0xc6

_0cbdd6_data:
		.fill   0x4

_0cbdda_data:
		.fill   0x4

_0cbdde_data:
		.ascii  "\x00\x00"

_0cbde0_data:
		.ascii  "\x00\x00"

_0cbde2_data:
		.ascii  "\x00\x00"

_0cbde4_data:
		.ascii  "\x00"

_0cbde5_data:
		.ascii  "\x00"

_0cbde6_data:
		.ascii  "\x00"

_0cbde7_data:
		.ascii  "\x00"

_0cbde8_data:
		.fill   0xd8

_0cbec0_data:
		.fill   0xd8

_0cbf98_data:
		.fill   0xd8

_0cc070_data:
		.fill   0xd8

_0cc148_data:
		.fill   0xd8

_0cc220_data:
		.fill   0xd0

_0cc2f0_data:
		.ascii  "\x00\x00"

_0cc2f2_data:
		.ascii  "\x00\x00"

_0cc2f4_data:
		.ascii  "\x00"

_0cc2f5_data:
		.ascii  "\x00"

_0cc2f6_data:
		.ascii  "\x00"

_0cc2f7_data:
		.ascii  "\x00"

_0cc2f8_data:
		.fill   0x4

_0cc2fc_data:
		.fill   0x4

_0cc300_data:
		.ascii  "\x00\x00"

_0cc302_data:
		.ascii  "\x00\x00"

_0cc304_data:
		.fill   0x4

_0cc308_data:
		.ascii  "\x00\x00"

_0cc30a_data:
		.ascii  "\x00\x00"

_0cc30c_data:
		.ascii  "\x00\x00\x00"

_0cc30f_data:
		.ascii  "\x00"

_0cc310_data:
		.ascii  "\x00"

_0cc311_data:
		.fill   0x7

_0cc318_data:
		.fill   0x190

_0cc4a8_data:
		.fill   0x40

_0cc4e8_data:
		.fill   0x4

_0cc4ec_data:
		.fill   0x64

_0cc550_data:
		.fill   0x4

_0cc554_data:
		.fill   0x4

_0cc558_data:
		.fill   0x4

_0cc55c_data:
		.fill   0x4

_0cc560_data:
		.fill   0x4

_0cc564_data:
		.fill   0x4

_0cc568_data:
		.fill   0x4

_0cc56c_data:
		.fill   0x4

_0cc570_data:
		.fill   0x4

_0cc574_data:
		.fill   0x4

_0cc578_data:
		.fill   0x4

_0cc57c_data:
		.fill   0x4

_0cc580_data:
		.fill   0x4

_0cc584_data:
		.fill   0x4

_0cc588_data:
		.fill   0x4

_0cc58c_data:
		.fill   0x4

_0cc590_data:
		.fill   0x4

_0cc594_data:
		.fill   0x4

_0cc598_data:
		.fill   0x4

_0cc59c_data:
		.fill   0x4

_0cc5a0_data:
		.fill   0x4

_0cc5a4_data:
		.ascii  "\x00\x00"

_0cc5a6_data:
		.ascii  "\x00\x00"

_0cc5a8_data:
		.ascii  "\x00\x00"

_0cc5aa_data:
		.ascii  "\x00\x00"

_0cc5ac_data:
		.ascii  "\x00\x00"

_0cc5ae_data:
		.ascii  "\x00\x00"

_0cc5b0_data:
		.ascii  "\x00\x00"

_0cc5b2_data:
		.ascii  "\x00\x00"

_0cc5b4_data:
		.fill   0x4

_0cc5b8_data:
		.fill   0x4

_0cc5bc_data:
		.fill   0x4

_0cc5c0_data:
		.fill   0x4

_0cc5c4_data:
		.fill   0x4

_0cc5c8_data:
		.fill   0x4

_0cc5cc_data:
		.fill   0x4

_0cc5d0_data:
		.fill   0x4

_0cc5d4_data:
		.fill   0x4

_0cc5d8_data:
		.fill   0x4

_0cc5dc_data:
		.fill   0x4

_0cc5e0_data:
		.fill   0x4

_0cc5e4_data:
		.fill   0x4

_0cc5e8_data:
		.fill   0x4

_0cc5ec_data:
		.fill   0x4

_0cc5f0_data:
		.fill   0x4

_0cc5f4_data:
		.fill   0x4

_0cc5f8_data:
		.fill   0x4

_0cc5fc_data:
		.fill   0x4

_0cc600_data:
		.fill   0x4

_0cc604_data:
		.fill   0x4

_0cc608_data:
		.fill   0x4

_0cc60c_data:
		.fill   0x4

_0cc610_data:
		.fill   0x4

_0cc614_data:
		.fill   0x4

_0cc618_data:
		.fill   0x4

_0cc61c_data:
		.fill   0x4

_0cc620_data:
		.fill   0x4

_0cc624_data:
		.fill   0x4

_0cc628_data:
		.fill   0x4

_0cc62c_data:
		.fill   0x4

_0cc630_data:
		.fill   0x4

_0cc634_data:
		.fill   0x4

_0cc638_data:
		.fill   0x4

_0cc63c_data:
		.fill   0x4

_0cc640_data:
		.fill   0x4

_0cc644_data:
		.fill   0x4

_0cc648_data:
		.ascii  "\x00\x00"

_0cc64a_data:
		.ascii  "\x00\x00"

_0cc64c_data:
		.ascii  "\x00\x00"

_0cc64e_data:
		.ascii  "\x00\x00"

_0cc650_data:
		.ascii  "\x00\x00"

_0cc652_data:
		.ascii  "\x00\x00"

_0cc654_data:
		.ascii  "\x00\x00"

_0cc656_data:
		.ascii  "\x00\x00"

_0cc658_data:
		.ascii  "\x00"

_0cc659_data:
		.fill   0x64a

_0ccca3_data:
		.ascii  "\x00"

_0ccca4_data:
		.fill   0x4

_0ccca8_data:
		.fill   0x4

_0cccac_data:
		.fill   0x4

_0cccb0_data:
		.fill   0x4

_0cccb4_data:
		.fill   0x4

_0cccb8_data:
		.ascii  "\x00\x00"

_0cccba_data:
		.ascii  "\x00\x00"

_0cccbc_data:
		.ascii  "\x00\x00"

_0cccbe_data:
		.ascii  "\x00\x00"

_0cccc0_data:
		.ascii  "\x00\x00"

_0cccc2_data:
		.ascii  "\x00\x00"

_0cccc4_data:
		.ascii  "\x00\x00"

_0cccc6_data:
		.ascii  "\x00\x00"

_0cccc8_data:
		.fill   0x8

_0cccd0_data:
		.fill   0x1c

_0cccec_data:
		.fill   0x1c

_0ccd08_data:
		.fill   0x4

_0ccd0c_data:
		.fill   0x4

_0ccd10_data:
		.fill   0x4

_0ccd14_data:
		.fill   0x4

_0ccd18_data:
		.fill   0x4

_0ccd1c_data:
		.fill   0x4

_0ccd20_data:
		.fill   0x4

_0ccd24_data:
		.fill   0x4

_0ccd28_data:
		.fill   0x4

_0ccd2c_data:
		.fill   0x4

_0ccd30_data:
		.fill   0x4

_0ccd34_data:
		.fill   0x4

_0ccd38_data:
		.fill   0x4

_0ccd3c_data:
		.fill   0x4

_0ccd40_data:
		.fill   0x4

_0ccd44_data:
		.fill   0x4

_0ccd48_data:
		.fill   0x4

_0ccd4c_data:
		.fill   0x4

_0ccd50_data:
		.fill   0x1c

_0ccd6c_data:
		.fill   0x4

_0ccd70_data:
		.fill   0x4

_0ccd74_data:
		.fill   0x14

_0ccd88_data:
		.fill   0x4

_0ccd8c_data:
		.fill   0x4

_0ccd90_data:
		.fill   0x14

_0ccda4_data:
		.fill   0x4

_0ccda8_data:
		.fill   0x4

_0ccdac_data:
		.fill   0x4

_0ccdb0_data:
		.fill   0x4

_0ccdb4_data:
		.fill   0x4

_0ccdb8_data:
		.fill   0x8

_0ccdc0_data:
		.fill   0x4

_0ccdc4_data:
		.fill   0x4

_0ccdc8_data:
		.fill   0x4

_0ccdcc_data:
		.fill   0x8

_0ccdd4_data:
		.fill   0x4

_0ccdd8_data:
		.fill   0x8

_0ccde0_data:
		.fill   0x4

_0ccde4_data:
		.fill   0x4

_0ccde8_data:
		.fill   0x4

_0ccdec_data:
		.fill   0x4

_0ccdf0_data:
		.fill   0x4

_0ccdf4_data:
		.fill   0x4

_0ccdf8_data:
		.fill   0x4

_0ccdfc_data:
		.fill   0x4

_0cce00_data:
		.fill   0xc

_0cce0c_data:
		.fill   0x4

_0cce10_data:
		.fill   0x4

_0cce14_data:
		.ascii  "\x00"

_0cce15_data:
		.ascii  "\x00"

_0cce16_data:
		.ascii  "\x00"

_0cce17_data:
		.ascii  "\x00"

_0cce18_data:
		.ascii  "\x00\x00"

_0cce1a_data:
		.ascii  "\x00"

_0cce1b_data:
		.fill   0x9

_0cce24_data:
		.fill   0x4

_0cce28_data:
		.fill   0x4

_0cce2c_data:
		.fill   0x36

_0cce62_data:
		.ascii  "\x00\x00"

_0cce64_data:
		.fill   0x30

_0cce94_data:
		.ascii  "\x00"

_0cce95_data:
		.fill   0x16

_0cceab_data:
		.ascii  "\x00\x00"

_0ccead_data:
		.fill   0xc63

_0cdb10_data:
		.fill   0x4

_0cdb14_data:
		.fill   0x4

_0cdb18_data:
		.ascii  "\x00\x00"

_0cdb1a_data:
		.ascii  "\x00\x00"

_0cdb1c_data:
		.ascii  "\x00\x00"

_0cdb1e_data:
		.fill   0x10

_0cdb2e_data:
		.ascii  "\x00\x00"

_0cdb30_data:
		.ascii  "\x00\x00"

_0cdb32_data:
		.ascii  "\x00\x00"

_0cdb34_data:
		.fill   0x62

_0cdb96_data:
		.ascii  "\x00\x00"

_0cdb98_data:
		.ascii  "\x00\x00"

_0cdb9a_data:
		.ascii  "\x00\x00"

_0cdb9c_data:
		.fill   0x4

_0cdba0_data:
		.fill   0x4

_0cdba4_data:
		.fill   0x4

_0cdba8_data:
		.fill   0x4

_0cdbac_data:
		.fill   0x4

_0cdbb0_data:
		.fill   0x18

_0cdbc8_data:
		.fill   0x4

_0cdbcc_data:
		.fill   0x4

_0cdbd0_data:
		.fill   0x8

_0cdbd8_data:
		.ascii  "\x00\x00"

_0cdbda_data:
		.ascii  "\x00\x00"

_0cdbdc_data:
		.fill   0x6

_0cdbe2_data:
		.ascii  "\x00\x00"

_0cdbe4_data:
		.ascii  "\x00\x00"

_0cdbe6_data:
		.ascii  "\x00\x00"

_0cdbe8_data:
		.fill   0x4

_0cdbec_data:
		.ascii  "\x00\x00"

_0cdbee_data:
		.fill   0x4

_0cdbf2_data:
		.ascii  "\x00\x00"

_0cdbf4_data:
		.ascii  "\x00\x00"

_0cdbf6_data:
		.ascii  "\x00\x00"

_0cdbf8_data:
		.ascii  "\x00\x00"

_0cdbfa_data:
		.ascii  "\x00\x00"

_0cdbfc_data:
		.ascii  "\x00\x00"

_0cdbfe_data:
		.fill   0x6

_0cdc04_data:
		.ascii  "\x00"

_0cdc05_data:
		.ascii  "\x00"

_0cdc06_data:
		.ascii  "\x00"

_0cdc07_data:
		.ascii  "\x00"

_0cdc08_data:
		.ascii  "\x00"

_0cdc09_data:
		.ascii  "\x00"

_0cdc0a_data:
		.ascii  "\x00\x00"

_0cdc0c_data:
		.ascii  "\x00"

_0cdc0d_data:
		.ascii  "\x00"

_0cdc0e_data:
		.ascii  "\x00"

_0cdc0f_data:
		.ascii  "\x00"

_0cdc10_data:
		.ascii  "\x00"

_0cdc11_data:
		.ascii  "\x00\x00\x00"

_0cdc14_data:
		.ascii  "\x00"

_0cdc15_data:
		.ascii  "\x00"

_0cdc16_data:
		.ascii  "\x00\x00"

_0cdc18_data:
		.ascii  "\x00\x00"

_0cdc1a_data:
		.ascii  "\x00"

_0cdc1b_data:
		.ascii  "\x00\x00"

_0cdc1d_data:
		.fill   0x4

_0cdc21_data:
		.ascii  "\x00\x00"

_0cdc23_data:
		.ascii  "\x00\x00"

_0cdc25_data:
		.ascii  "\x00\x00\x00"

_0cdc28_data:
		.fill   0x4

_0cdc2c_data:
		.fill   0x4

_0cdc30_data:
		.fill   0x4

_0cdc34_data:
		.fill   0x4

_0cdc38_data:
		.fill   0x4

_0cdc3c_data:
		.fill   0x4

_0cdc40_data:
		.fill   0x84

_0cdcc4_data:
		.fill   0x4

_0cdcc8_data:
		.ascii  "\x00\x00"

_0cdcca_data:
		.ascii  "\x00\x00"

_0cdccc_data:
		.ascii  "\x00\x00"

_0cdcce_data:
		.ascii  "\x00\x00"

_0cdcd0_data:
		.ascii  "\x00"

_0cdcd1_data:
		.ascii  "\x00"

_0cdcd2_data:
		.ascii  "\x00"

_0cdcd3_data:
		.ascii  "\x00"

_0cdcd4_data:
		.ascii  "\x00"

_0cdcd5_data:
		.ascii  "\x00\x00\x00"

_0cdcd8_data:
		.fill   0xc

_0cdce4_data:
		.fill   0x28

_0cdd0c_data:
		.ascii  "\x00\x00"

_0cdd0e_data:
		.ascii  "\x00\x00"

_0cdd10_data:
		.fill   0x8

_0cdd18_data:
		.fill   0x28

_0cdd40_data:
		.ascii  "\x00"

_0cdd41_data:
		.ascii  "\x00\x00"

_0cdd43_data:
		.ascii  "\x00"

_0cdd44_data:
		.ascii  "\x00"

_0cdd45_data:
		.ascii  "\x00\x00\x00"

_0cdd48_data:
		.fill   0xf

_0cdd57_data:
		.ascii  "\x00\x00"

_0cdd59_data:
		.ascii  "\x00\x00\x00"

_0cdd5c_data:
		.fill   0x8

_0cdd64_data:
		.fill   0x3c

_0cdda0_data:
		.fill   0x40

_0cdde0_data:
		.fill   0x44

_0cde24_data:
		.ascii  "\x00\x00"

_0cde26_data:
		.ascii  "\x00\x00"

_0cde28_data:
		.fill   0x20b

_0ce033_data:
		.ascii  "\x00"

_0ce034_data:
		.fill   0x5

_0ce039_data:
		.ascii  "\x00\x00\x00"

_0ce03c_data:
		.fill   0x25c

_0ce298_data:
		.fill   0x4

_0ce29c_data:
		.fill   0x28

_0ce2c4_data:
		.fill   0x4

_0ce2c8_data:
		.fill   0x58

_0ce320_data:
		.fill   0x4

_0ce324_data:
		.fill   0x4

_0ce328_data:
		.fill   0x4

_0ce32c_data:
		.fill   0x4

_0ce330_data:
		.fill   0x4

_0ce334_data:
		.fill   0x20

_0ce354_data:
		.fill   0x4

_0ce358_data:
		.fill   0xa

_0ce362_data:
		.ascii  "\x00\x00"

_0ce364_data:
		.fill   0x8

_0ce36c_data:
		.ascii  "\x00\x00"

_0ce36e_data:
		.fill   0x8

_0ce376_data:
		.fill   0x6

_0ce37c_data:
		.ascii  "\x00\x00"

_0ce37e_data:
		.fill   0x4

_0ce382_data:
		.fill   0x12

_0ce394_data:
		.ascii  "\x00"

_0ce395_data:
		.ascii  "\x00"

_0ce396_data:
		.ascii  "\x00"

_0ce397_data:
		.ascii  "\x00"

_0ce398_data:
		.ascii  "\x00"

_0ce399_data:
		.fill   0x7

_0ce3a0_data:
		.ascii  "\x00\x00"

_0ce3a2_data:
		.ascii  "\x00"

_0ce3a3_data:
		.ascii  "\x00\x00"

_0ce3a5_data:
		.fill   0x4

_0ce3a9_data:
		.ascii  "\x00\x00"

_0ce3ab_data:
		.ascii  "\x00\x00"

_0ce3ad_data:
		.ascii  "\x00\x00\x00"

_0ce3b0_data:
		.fill   0x8

_0ce3b8_data:
		.fill   0x3c

_0ce3f4_data:
		.fill   0x32

_0ce426_data:
		.ascii  "\x00"

_0ce427_data:
		.ascii  "\x00\x00"

_0ce429_data:
		.fill   0xb

_0ce434_data:
		.fill   0x4

_0ce438_data:
		.fill   0x14

_0ce44c_data:
		.fill   0x4

_0ce450_data:
		.fill   0x1e

_0ce46e_data:
		.fill   0x2f

_0ce49d_data:
		.ascii  "\x00\x00"

_0ce49f_data:
		.fill   0x9

_0ce4a8_data:
		.ascii  "\x00\x00"

_0ce4aa_data:
		.ascii  "\x00\x00"

_0ce4ac_data:
		.ascii  "\x00"

_0ce4ad_data:
		.ascii  "\x00"

_0ce4ae_data:
		.ascii  "\x00"

_0ce4af_data:
		.ascii  "\x00"

_0ce4b0_data:
		.ascii  "\x00"

_0ce4b1_data:
		.ascii  "\x00"

_0ce4b2_data:
		.ascii  "\x00"

_0ce4b3_data:
		.ascii  "\x00"

_0ce4b4_data:
		.ascii  "\x00\x00"

_0ce4b6_data:
		.fill   0xc4

_0ce57a_data:
		.ascii  "\x00\x00"

_0ce57c_data:
		.ascii  "\x00\x00"

_0ce57e_data:
		.fill   0x718

_0cec96_data:
		.ascii  "\x00\x00"

_0cec98_data:
		.ascii  "\x00\x00"

_0cec9a_data:
		.ascii  "\x00\x00"

_0cec9c_data:
		.ascii  "\x00\x00"

_0cec9e_data:
		.ascii  "\x00\x00"

_0ceca0_data:
		.ascii  "\x00\x00"

_0ceca2_data:
		.ascii  "\x00\x00"

_0ceca4_data:
		.ascii  "\x00\x00"

_0ceca6_data:
		.ascii  "\x00\x00"

_0ceca8_data:
		.ascii  "\x00\x00"

_0cecaa_data:
		.ascii  "\x00\x00"

_0cecac_data:
		.ascii  "\x00\x00"

_0cecae_data:
		.ascii  "\x00\x00"

_0cecb0_data:
		.ascii  "\x00\x00"

_0cecb2_data:
		.ascii  "\x00\x00"

_0cecb4_data:
		.ascii  "\x00\x00"

_0cecb6_data:
		.ascii  "\x00\x00"

_0cecb8_data:
		.ascii  "\x00\x00"

_0cecba_data:
		.ascii  "\x00\x00"

_0cecbc_data:
		.ascii  "\x00\x00"

_0cecbe_data:
		.ascii  "\x00\x00"

_0cecc0_data:
		.ascii  "\x00\x00"

_0cecc2_data:
		.ascii  "\x00\x00"

_0cecc4_data:
		.fill   0x4

_0cecc8_data:
		.ascii  "\x00\x00"

_0cecca_data:
		.ascii  "\x00\x00"

_0ceccc_data:
		.ascii  "\x00\x00"

_0cecce_data:
		.ascii  "\x00\x00"

_0cecd0_data:
		.ascii  "\x00\x00"

_0cecd2_data:
		.ascii  "\x00\x00"

_0cecd4_data:
		.ascii  "\x00\x00"

_0cecd6_data:
		.ascii  "\x00\x00"

_0cecd8_data:
		.ascii  "\x00\x00"

_0cecda_data:
		.ascii  "\x00\x00"

_0cecdc_data:
		.ascii  "\x00\x00"

_0cecde_data:
		.ascii  "\x00\x00"

_0cece0_data:
		.ascii  "\x00\x00"

_0cece2_data:
		.ascii  "\x00\x00"

_0cece4_data:
		.ascii  "\x00\x00"

_0cece6_data:
		.ascii  "\x00\x00"

_0cece8_data:
		.ascii  "\x00\x00"

_0cecea_data:
		.fill   0x4

_0cecee_data:
		.ascii  "\x00\x00"

_0cecf0_data:
		.ascii  "\x00\x00"

_0cecf2_data:
		.ascii  "\x00\x00"

_0cecf4_data:
		.ascii  "\x00\x00"

_0cecf6_data:
		.ascii  "\x00\x00"

_0cecf8_data:
		.ascii  "\x00\x00"

_0cecfa_data:
		.ascii  "\x00\x00"

_0cecfc_data:
		.ascii  "\x00\x00"

_0cecfe_data:
		.ascii  "\x00\x00"

_0ced00_data:
		.ascii  "\x00\x00"

_0ced02_data:
		.ascii  "\x00\x00"

_0ced04_data:
		.ascii  "\x00\x00"

_0ced06_data:
		.ascii  "\x00\x00"

_0ced08_data:
		.ascii  "\x00\x00"

_0ced0a_data:
		.ascii  "\x00\x00"

_0ced0c_data:
		.ascii  "\x00\x00"

_0ced0e_data:
		.ascii  "\x00\x00"

_0ced10_data:
		.ascii  "\x00\x00"

_0ced12_data:
		.ascii  "\x00\x00"

_0ced14_data:
		.ascii  "\x00\x00"

_0ced16_data:
		.ascii  "\x00\x00"

_0ced18_data:
		.ascii  "\x00\x00"

_0ced1a_data:
		.ascii  "\x00\x00"

_0ced1c_data:
		.ascii  "\x00\x00"

_0ced1e_data:
		.ascii  "\x00\x00"

_0ced20_data:
		.ascii  "\x00\x00"

_0ced22_data:
		.ascii  "\x00\x00"

_0ced24_data:
		.ascii  "\x00\x00"

_0ced26_data:
		.ascii  "\x00\x00"

_0ced28_data:
		.ascii  "\x00\x00"

_0ced2a_data:
		.ascii  "\x00\x00"

_0ced2c_data:
		.ascii  "\x00\x00"

_0ced2e_data:
		.ascii  "\x00\x00"

_0ced30_data:
		.ascii  "\x00\x00"

_0ced32_data:
		.ascii  "\x00\x00"

_0ced34_data:
		.ascii  "\x00\x00"

_0ced36_data:
		.ascii  "\x00\x00"

_0ced38_data:
		.ascii  "\x00\x00"

_0ced3a_data:
		.ascii  "\x00\x00"

_0ced3c_data:
		.ascii  "\x00\x00"

_0ced3e_data:
		.ascii  "\x00\x00"

_0ced40_data:
		.fill   0x4

_0ced44_data:
		.ascii  "\x00\x00"

_0ced46_data:
		.ascii  "\x00\x00"

_0ced48_data:
		.ascii  "\x00\x00"

_0ced4a_data:
		.ascii  "\x00\x00"

_0ced4c_data:
		.ascii  "\x00\x00"

_0ced4e_data:
		.ascii  "\x00\x00"

_0ced50_data:
		.ascii  "\x00\x00"

_0ced52_data:
		.ascii  "\x00\x00"

_0ced54_data:
		.ascii  "\x00\x00"

_0ced56_data:
		.ascii  "\x00\x00"

_0ced58_data:
		.ascii  "\x00\x00"

_0ced5a_data:
		.ascii  "\x00\x00"

_0ced5c_data:
		.ascii  "\x00\x00"

_0ced5e_data:
		.ascii  "\x00\x00"

_0ced60_data:
		.ascii  "\x00\x00"

_0ced62_data:
		.ascii  "\x00\x00"

_0ced64_data:
		.ascii  "\x00\x00"

_0ced66_data:
		.ascii  "\x00\x00"

_0ced68_data:
		.ascii  "\x00\x00"

_0ced6a_data:
		.ascii  "\x00\x00"

_0ced6c_data:
		.ascii  "\x00\x00"

_0ced6e_data:
		.ascii  "\x00\x00"

_0ced70_data:
		.ascii  "\x00\x00"

_0ced72_data:
		.ascii  "\x00\x00"

_0ced74_data:
		.ascii  "\x00\x00"

_0ced76_data:
		.ascii  "\x00\x00"

_0ced78_data:
		.ascii  "\x00\x00"

_0ced7a_data:
		.ascii  "\x00\x00"

_0ced7c_data:
		.ascii  "\x00\x00"

_0ced7e_data:
		.ascii  "\x00\x00"

_0ced80_data:
		.ascii  "\x00"

_0ced81_data:
		.ascii  "\x00"

_0ced82_data:
		.ascii  "\x00\x00"

_0ced84_data:
		.ascii  "\x00\x00"

_0ced86_data:
		.ascii  "\x00\x00"

_0ced88_data:
		.ascii  "\x00"

_0ced89_data:
		.ascii  "\x00"

_0ced8a_data:
		.ascii  "\x00\x00"

_0ced8c_data:
		.ascii  "\x00\x00"

_0ced8e_data:
		.ascii  "\x00\x00"

_0ced90_data:
		.ascii  "\x00\x00"

_0ced92_data:
		.ascii  "\x00\x00"

_0ced94_data:
		.ascii  "\x00\x00"

_0ced96_data:
		.ascii  "\x00\x00"

_0ced98_data:
		.ascii  "\x00\x00"

_0ced9a_data:
		.ascii  "\x00\x00"

_0ced9c_data:
		.ascii  "\x00\x00"

_0ced9e_data:
		.ascii  "\x00\x00"

_0ceda0_data:
		.ascii  "\x00\x00"

_0ceda2_data:
		.ascii  "\x00\x00"

_0ceda4_data:
		.ascii  "\x00\x00"

_0ceda6_data:
		.ascii  "\x00\x00"

_0ceda8_data:
		.ascii  "\x00\x00"

_0cedaa_data:
		.ascii  "\x00\x00"

_0cedac_data:
		.ascii  "\x00\x00"

_0cedae_data:
		.ascii  "\x00\x00"

_0cedb0_data:
		.ascii  "\x00\x00"

_0cedb2_data:
		.ascii  "\x00\x00"

_0cedb4_data:
		.ascii  "\x00\x00"

_0cedb6_data:
		.ascii  "\x00\x00"

_0cedb8_data:
		.ascii  "\x00\x00"

_0cedba_data:
		.ascii  "\x00\x00"

_0cedbc_data:
		.ascii  "\x00\x00"

_0cedbe_data:
		.ascii  "\x00\x00"

_0cedc0_data:
		.ascii  "\x00\x00"

_0cedc2_data:
		.ascii  "\x00\x00"

_0cedc4_data:
		.ascii  "\x00\x00"

_0cedc6_data:
		.ascii  "\x00\x00"

_0cedc8_data:
		.ascii  "\x00\x00"

_0cedca_data:
		.ascii  "\x00\x00"

_0cedcc_data:
		.ascii  "\x00\x00"

_0cedce_data:
		.ascii  "\x00\x00"

_0cedd0_data:
		.ascii  "\x00\x00"

_0cedd2_data:
		.ascii  "\x00\x00"

_0cedd4_data:
		.ascii  "\x00\x00"

_0cedd6_data:
		.ascii  "\x00\x00"

_0cedd8_data:
		.ascii  "\x00\x00"

_0cedda_data:
		.ascii  "\x00\x00"

_0ceddc_data:
		.ascii  "\x00\x00"

_0cedde_data:
		.ascii  "\x00\x00"

_0cede0_data:
		.ascii  "\x00\x00"

_0cede2_data:
		.ascii  "\x00\x00"

_0cede4_data:
		.ascii  "\x00\x00"

_0cede6_data:
		.ascii  "\x00\x00"

_0cede8_data:
		.ascii  "\x00\x00"

_0cedea_data:
		.ascii  "\x00\x00"

_0cedec_data:
		.ascii  "\x00\x00"

_0cedee_data:
		.ascii  "\x00\x00"

_0cedf0_data:
		.ascii  "\x00\x00"

_0cedf2_data:
		.ascii  "\x00\x00"

_0cedf4_data:
		.ascii  "\x00\x00"

_0cedf6_data:
		.ascii  "\x00\x00"

_0cedf8_data:
		.ascii  "\x00\x00"

_0cedfa_data:
		.ascii  "\x00\x00"

_0cedfc_data:
		.ascii  "\x00\x00"

_0cedfe_data:
		.ascii  "\x00\x00"

_0cee00_data:
		.ascii  "\x00\x00"

_0cee02_data:
		.ascii  "\x00\x00"

_0cee04_data:
		.ascii  "\x00\x00"

_0cee06_data:
		.ascii  "\x00\x00"

_0cee08_data:
		.ascii  "\x00\x00"

_0cee0a_data:
		.ascii  "\x00\x00"

_0cee0c_data:
		.ascii  "\x00\x00"

_0cee0e_data:
		.ascii  "\x00\x00"

_0cee10_data:
		.ascii  "\x00\x00"

_0cee12_data:
		.ascii  "\x00\x00"

_0cee14_data:
		.ascii  "\x00\x00"

_0cee16_data:
		.ascii  "\x00\x00"

_0cee18_data:
		.ascii  "\x00\x00"

_0cee1a_data:
		.ascii  "\x00\x00"

_0cee1c_data:
		.ascii  "\x00\x00"

_0cee1e_data:
		.ascii  "\x00\x00"

_0cee20_data:
		.ascii  "\x00\x00"

_0cee22_data:
		.ascii  "\x00\x00"

_0cee24_data:
		.ascii  "\x00\x00"

_0cee26_data:
		.ascii  "\x00\x00"

_0cee28_data:
		.ascii  "\x00\x00"

_0cee2a_data:
		.ascii  "\x00\x00"

_0cee2c_data:
		.ascii  "\x00\x00"

_0cee2e_data:
		.ascii  "\x00\x00"

_0cee30_data:
		.ascii  "\x00\x00"

_0cee32_data:
		.ascii  "\x00\x00"

_0cee34_data:
		.ascii  "\x00\x00"

_0cee36_data:
		.ascii  "\x00\x00"

_0cee38_data:
		.ascii  "\x00\x00"

_0cee3a_data:
		.ascii  "\x00\x00"

_0cee3c_data:
		.ascii  "\x00\x00"

_0cee3e_data:
		.ascii  "\x00\x00"

_0cee40_data:
		.ascii  "\x00\x00"

_0cee42_data:
		.ascii  "\x00\x00"

_0cee44_data:
		.ascii  "\x00\x00"

_0cee46_data:
		.ascii  "\x00\x00"

_0cee48_data:
		.ascii  "\x00\x00"

_0cee4a_data:
		.ascii  "\x00\x00"

_0cee4c_data:
		.ascii  "\x00\x00"

_0cee4e_data:
		.fill   0xff

_0cef4d_data:
		.ascii  "\x00"

_0cef4e_data:
		.ascii  "\x00"

_0cef4f_data:
		.ascii  "\x00"

_0cef50_data:
		.ascii  "\x00"

_0cef51_data:
		.ascii  "\x00"

_0cef52_data:
		.ascii  "\x00"

_0cef53_data:
		.ascii  "\x00\x00"

_0cef55_data:
		.ascii  "\x00\x00"

_0cef57_data:
		.fill   0xa

_0cef61_data:
		.fill   0x5

_0cef66_data:
		.ascii  "\x00"

_0cef67_data:
		.ascii  "\x00"

_0cef68_data:
		.ascii  "\x00\x00"

_0cef6a_data:
		.ascii  "\x00"

_0cef6b_data:
		.ascii  "\x00"

_0cef6c_data:
		.ascii  "\x00"

_0cef6d_data:
		.ascii  "\x00"

_0cef6e_data:
		.ascii  "\x00"

_0cef6f_data:
		.ascii  "\x00"

_0cef70_data:
		.ascii  "\x00"

_0cef71_data:
		.ascii  "\x00"

_0cef72_data:
		.ascii  "\x00"

_0cef73_data:
		.ascii  "\x00"

_0cef74_data:
		.ascii  "\x00\x00"

_0cef76_data:
		.ascii  "\x00\x00\x00"

_0cef79_data:
		.ascii  "\x00"

_0cef7a_data:
		.ascii  "\x00"

_0cef7b_data:
		.ascii  "\x00"

_0cef7c_data:
		.ascii  "\x00"

_0cef7d_data:
		.ascii  "\x00"

_0cef7e_data:
		.ascii  "\x00"

_0cef7f_data:
		.ascii  "\x00"

_0cef80_data:
		.ascii  "\x00"

_0cef81_data:
		.ascii  "\x00"

_0cef82_data:
		.ascii  "\x00"

_0cef83_data:
		.ascii  "\x00"

_0cef84_data:
		.ascii  "\x00"

_0cef85_data:
		.ascii  "\x00"

_0cef86_data:
		.ascii  "\x00"

_0cef87_data:
		.ascii  "\x00"

_0cef88_data:
		.ascii  "\x00"

_0cef89_data:
		.ascii  "\x00"

_0cef8a_data:
		.ascii  "\x00"

_0cef8b_data:
		.ascii  "\x00"

_0cef8c_data:
		.ascii  "\x00"

_0cef8d_data:
		.ascii  "\x00"

_0cef8e_data:
		.ascii  "\x00"

_0cef8f_data:
		.ascii  "\x00"

_0cef90_data:
		.ascii  "\x00"

_0cef91_data:
		.ascii  "\x00"

_0cef92_data:
		.ascii  "\x00"

_0cef93_data:
		.ascii  "\x00"

_0cef94_data:
		.ascii  "\x00"

_0cef95_data:
		.ascii  "\x00"

_0cef96_data:
		.ascii  "\x00"

_0cef97_data:
		.ascii  "\x00"

_0cef98_data:
		.ascii  "\x00"

_0cef99_data:
		.ascii  "\x00"

_0cef9a_data:
		.ascii  "\x00"

_0cef9b_data:
		.ascii  "\x00"

_0cef9c_data:
		.ascii  "\x00"

_0cef9d_data:
		.ascii  "\x00"

_0cef9e_data:
		.ascii  "\x00"

_0cef9f_data:
		.ascii  "\x00"

_0cefa0_data:
		.ascii  "\x00"

_0cefa1_data:
		.ascii  "\x00"

_0cefa2_data:
		.ascii  "\x00"

_0cefa3_data:
		.ascii  "\x00"

_0cefa4_data:
		.ascii  "\x00"

_0cefa5_data:
		.ascii  "\x00"

_0cefa6_data:
		.ascii  "\x00"

_0cefa7_data:
		.ascii  "\x00"

_0cefa8_data:
		.ascii  "\x00"

_0cefa9_data:
		.ascii  "\x00"

_0cefaa_data:
		.ascii  "\x00"

_0cefab_data:
		.ascii  "\x00"

_0cefac_data:
		.ascii  "\x00"

_0cefad_data:
		.ascii  "\x00"

_0cefae_data:
		.ascii  "\x00"

_0cefaf_data:
		.ascii  "\x00"

_0cefb0_data:
		.ascii  "\x00"

_0cefb1_data:
		.ascii  "\x00"

_0cefb2_data:
		.ascii  "\x00"

_0cefb3_data:
		.ascii  "\x00"

_0cefb4_data:
		.ascii  "\x00"

_0cefb5_data:
		.ascii  "\x00"

_0cefb6_data:
		.ascii  "\x00"

_0cefb7_data:
		.ascii  "\x00"

_0cefb8_data:
		.ascii  "\x00"

_0cefb9_data:
		.ascii  "\x00"

_0cefba_data:
		.ascii  "\x00"

_0cefbb_data:
		.ascii  "\x00"

_0cefbc_data:
		.ascii  "\x00"

_0cefbd_data:
		.ascii  "\x00"

_0cefbe_data:
		.ascii  "\x00"

_0cefbf_data:
		.ascii  "\x00"

_0cefc0_data:
		.ascii  "\x00"

_0cefc1_data:
		.ascii  "\x00"

_0cefc2_data:
		.ascii  "\x00"

_0cefc3_data:
		.ascii  "\x00"

_0cefc4_data:
		.ascii  "\x00"

_0cefc5_data:
		.ascii  "\x00"

_0cefc6_data:
		.ascii  "\x00"

_0cefc7_data:
		.ascii  "\x00"

_0cefc8_data:
		.ascii  "\x00"

_0cefc9_data:
		.ascii  "\x00"

_0cefca_data:
		.ascii  "\x00"

_0cefcb_data:
		.ascii  "\x00"

_0cefcc_data:
		.ascii  "\x00"

_0cefcd_data:
		.ascii  "\x00"

_0cefce_data:
		.ascii  "\x00"

_0cefcf_data:
		.ascii  "\x00"

_0cefd0_data:
		.ascii  "\x00"

_0cefd1_data:
		.ascii  "\x00"

_0cefd2_data:
		.ascii  "\x00"

_0cefd3_data:
		.ascii  "\x00"

_0cefd4_data:
		.ascii  "\x00"

_0cefd5_data:
		.ascii  "\x00"

_0cefd6_data:
		.ascii  "\x00"

_0cefd7_data:
		.ascii  "\x00"

_0cefd8_data:
		.ascii  "\x00"

_0cefd9_data:
		.ascii  "\x00"

_0cefda_data:
		.ascii  "\x00"

_0cefdb_data:
		.ascii  "\x00"

_0cefdc_data:
		.ascii  "\x00"

_0cefdd_data:
		.ascii  "\x00"

_0cefde_data:
		.ascii  "\x00"

_0cefdf_data:
		.ascii  "\x00"

_0cefe0_data:
		.ascii  "\x00"

_0cefe1_data:
		.ascii  "\x00"

_0cefe2_data:
		.ascii  "\x00"

_0cefe3_data:
		.ascii  "\x00"

_0cefe4_data:
		.ascii  "\x00"

_0cefe5_data:
		.ascii  "\x00"

_0cefe6_data:
		.ascii  "\x00"

_0cefe7_data:
		.ascii  "\x00"

_0cefe8_data:
		.ascii  "\x00"

_0cefe9_data:
		.ascii  "\x00"

_0cefea_data:
		.ascii  "\x00"

_0cefeb_data:
		.ascii  "\x00"

_0cefec_data:
		.ascii  "\x00"

_0cefed_data:
		.ascii  "\x00"

_0cefee_data:
		.ascii  "\x00"

_0cefef_data:
		.ascii  "\x00"

_0ceff0_data:
		.fill   0x4

_0ceff4_data:
		.fill   0x4

_0ceff8_data:
		.ascii  "\x00\x00"

_0ceffa_data:
		.ascii  "\x00\x00"

_0ceffc_data:
		.ascii  "\x00\x00"

_0ceffe_data:
		.ascii  "\x00\x00"

_0cf000_data:
		.ascii  "\x00"

_0cf001_data:
		.ascii  "\x00"

_0cf002_data:
		.ascii  "\x00\x00"

_0cf004_data:
		.ascii  "\x00\x00"

_0cf006_data:
		.ascii  "\x00\x00"

_0cf008_data:
		.ascii  "\x00\x00"

_0cf00a_data:
		.ascii  "\x00\x00"

_0cf00c_data:
		.ascii  "\x00\x00"

_0cf00e_data:
		.ascii  "\x00\x00"

_0cf010_data:
		.ascii  "\x00\x00"

_0cf012_data:
		.ascii  "\x00\x00"

_0cf014_data:
		.ascii  "\x00\x00"

_0cf016_data:
		.ascii  "\x00\x00"

_0cf018_data:
		.ascii  "\x00\x00"

_0cf01a_data:
		.ascii  "\x00\x00"

_0cf01c_data:
		.fill   0x14

_0cf030_data:
		.ascii  "\x00\x00"

_0cf032_data:
		.ascii  "\x00\x00"

_0cf034_data:
		.fill   0xa410

_0d9444_data:
		.fill   0x4000

_0dd444_data:
		.ascii  "\x00"

_0dd445_data:
		.ascii  "\x00"

_0dd446_data:
		.fill   0x5e

_0dd4a4_data:
		.ascii  "\x00"

_0dd4a5_data:
		.ascii  "\x00"

_0dd4a6_data:
		.fill   0x10

_0dd4b6_data:
		.ascii  "\x00"

_0dd4b7_data:
		.ascii  "\x00"

_0dd4b8_data:
		.fill   0x28c

_0dd744_data:
		.ascii  "\x00\x00"

_0dd746_data:
		.ascii  "\x00\x00"

_0dd748_data:
		.ascii  "\x00\x00"

_0dd74a_data:
		.ascii  "\x00\x00"

_0dd74c_data:
		.ascii  "\x00\x00"

_0dd74e_data:
		.ascii  "\x00\x00"

_0dd750_data:
		.ascii  "\x00\x00"

_0dd752_data:
		.ascii  "\x00\x00"

_0dd754_data:
		.fill   0xc

_0dd760_data:
		.ascii  "\x00\x00"

_0dd762_data:
		.ascii  "\x00\x00"

_0dd764_data:
		.ascii  "\x00\x00"

_0dd766_data:
		.ascii  "\x00\x00"

_0dd768_data:
		.ascii  "\x00\x00"

_0dd76a_data:
		.ascii  "\x00\x00"

_0dd76c_data:
		.ascii  "\x00\x00"

_0dd76e_data:
		.ascii  "\x00\x00"

_0dd770_data:
		.ascii  "\x00"

_0dd771_data:
		.ascii  "\x00"

_0dd772_data:
		.ascii  "\x00\x00"

_0dd774_data:
		.ascii  "\x00\x00"

_0dd776_data:
		.ascii  "\x00\x00"

_0dd778_data:
		.ascii  "\x00\x00"

_0dd77a_data:
		.fill   0x9c

_0dd816_data:
		.ascii  "\x00\x00"

_0dd818_data:
		.fill   0x8

_0dd820_data:
		.ascii  "\x00\x00"

_0dd822_data:
		.ascii  "\x00\x00"

_0dd824_data:
		.ascii  "\x00\x00"

_0dd826_data:
		.ascii  "\x00\x00"

_0dd828_data:
		.ascii  "\x00\x00"

_0dd82a_data:
		.ascii  "\x00\x00"

_0dd82c_data:
		.ascii  "\x00\x00"

_0dd82e_data:
		.ascii  "\x00\x00"

_0dd830_data:
		.ascii  "\x00\x00"

_0dd832_data:
		.ascii  "\x00\x00"

_0dd834_data:
		.fill   0xc

_0dd840_data:
		.fill   0x4

_0dd844_data:
		.fill   0x4

_0dd848_data:
		.fill   0x4

_0dd84c_data:
		.fill   0x4

_0dd850_data:
		.fill   0x4

_0dd854_data:
		.fill   0x4

_0dd858_data:
		.fill   0x4

_0dd85c_data:
		.fill   0x4

_0dd860_data:
		.fill   0x4

_0dd864_data:
		.fill   0x4

_0dd868_data:
		.fill   0x8

_0dd870_data:
		.fill   0x4

_0dd874_data:
		.ascii  "\x00\x00"

_0dd876_data:
		.fill   0x4

_0dd87a_data:
		.ascii  "\x00\x00"

_0dd87c_data:
		.fill   0x4

_0dd880_data:
		.ascii  "\x00\x00"

_0dd882_data:
		.fill   0x4

_0dd886_data:
		.ascii  "\x00\x00"

_0dd888_data:
		.fill   0x4

_0dd88c_data:
		.ascii  "\x00\x00"

_0dd88e_data:
		.fill   0x4

_0dd892_data:
		.ascii  "\x00\x00"

_0dd894_data:
		.fill   0x4

_0dd898_data:
		.ascii  "\x00\x00"

_0dd89a_data:
		.fill   0x4

_0dd89e_data:
		.ascii  "\x00\x00"

_0dd8a0_data:
		.fill   0x4

_0dd8a4_data:
		.ascii  "\x00\x00"

_0dd8a6_data:
		.fill   0x4

_0dd8aa_data:
		.ascii  "\x00\x00"

_0dd8ac_data:
		.fill   0x4

_0dd8b0_data:
		.ascii  "\x00\x00"

_0dd8b2_data:
		.ascii  "\x00\x00"

_0dd8b4_data:
		.ascii  "\x00\x00"

_0dd8b6_data:
		.fill   0xe

_0dd8c4_data:
		.fill   0x4

_0dd8c8_data:
		.ascii  "\x00\x00"

_0dd8ca_data:
		.ascii  "\x00\x00"

_0dd8cc_data:
		.fill   0x104

_0dd9d0_data:
		.ascii  "\x00"

_0dd9d1_data:
		.ascii  "\x00"

_0dd9d2_data:
		.ascii  "\x00"

_0dd9d3_data:
		.fill   0x4

_0dd9d7_data:
		.fill   0x4

_0dd9db_data:
		.fill   0x18c

_0ddb67_data:
		.fill   0x4

_0ddb6b_data:
		.fill   0x190

_0ddcfb_data:
		.fill   0x190

_0dde8b_data:
		.fill   0x64

_0ddeef_data:
		.ascii  "\x00"

_0ddef0_data:
		.fill   0x1a

_0ddf0a_data:
		.ascii  "\x00"

_0ddf0b_data:
		.ascii  "\x00"

_0ddf0c_data:
		.ascii  "\x00"

_0ddf0d_data:
		.ascii  "\x00"

_0ddf0e_data:
		.ascii  "\x00"

_0ddf0f_data:
		.ascii  "\x00"

_0ddf10_data:
		.ascii  "\x00"

_0ddf11_data:
		.ascii  "\x00\x00"

_0ddf13_data:
		.ascii  "\x00"

_0ddf14_data:
		.fill   0x7ff

_0de713_data:
		.ascii  "\x00"

_0de714_data:
		.fill   0x8

_0de71c_data:
		.fill   0x4

_0de720_data:
		.ascii  "\x00\x00"

_0de722_data:
		.ascii  "\x00\x00"

_0de724_data:
		.ascii  "\x00"

_0de725_data:
		.ascii  "\x00"

_0de726_data:
		.ascii  "\x00"

_0de727_data:
		.ascii  "\x00"

_0de728_data:
		.fill   0x28

_0de750_data:
		.ascii  "\x00\x00"

_0de752_data:
		.ascii  "\x00\x00"

_0de754_data:
		.ascii  "\x00\x00"

_0de756_data:
		.ascii  "\x00\x00"

_0de758_data:
		.ascii  "\x00\x00"

_0de75a_data:
		.ascii  "\x00\x00"

_0de75c_data:
		.ascii  "\x00\x00"

_0de75e_data:
		.ascii  "\x00\x00"

_0de760_data:
		.fill   0x6

_0de766_data:
		.ascii  "\x00"

_0de767_data:
		.fill   0x69

_0de7d0_data:
		.fill   0x4

_0de7d4_data:
		.fill   0x4

_0de7d8_data:
		.fill   0x4

_0de7dc_data:
		.fill   0x4

_0de7e0_data:
		.fill   0x4

_0de7e4_data:
		.fill   0x4

_0de7e8_data:
		.fill   0x4

_0de7ec_data:
		.ascii  "\x00\x00\x00"

_0de7ef_data:
		.ascii  "\x00"

_0de7f0_data:
		.ascii  "\x00"

_0de7f1_data:
		.ascii  "\x00"

_0de7f2_data:
		.fill   0x2fe

_0deaf0_data:
		.fill   0x4

_0deaf4_data:
		.fill   0x4

_0deaf8_data:
		.fill   0x4

_0deafc_data:
		.fill   0x4

_0deb00_data:
		.fill   0x4

_0deb04_data:
		.fill   0x4

_0deb08_data:
		.fill   0x4

_0deb0c_data:
		.fill   0x4

_0deb10_data:
		.fill   0x4

_0deb14_data:
		.fill   0xc

_0deb20_data:
		.ascii  "\x00"

_0deb21_data:
		.ascii  "\x00"

_0deb22_data:
		.ascii  "\x00"

_0deb23_data:
		.ascii  "\x00"

_0deb24_data:
		.ascii  "\x00"

_0deb25_data:
		.fill   0xb

_0deb30_data:
		.fill   0x4

_0deb34_data:
		.fill   0x4

_0deb38_data:
		.fill   0x4

_0deb3c_data:
		.fill   0x7f4

_0df330_data:
		.fill   0x4

_0df334_data:
		.fill   0x4

_0df338_data:
		.fill   0x4

_0df33c_data:
		.fill   0x4

_0df340_data:
		.fill   0x4

_0df344_data:
		.fill   0x4

_0df348_data:
		.fill   0x4

_0df34c_data:
		.fill   0x7fe

_0dfb4a_data:
		.fill   0x64

_0dfbae_data:
		.fill   0xa

_0dfbb8_data:
		.fill   0x4

_0dfbbc_data:
		.ascii  "\x00\x00"

_0dfbbe_data:
		.fill   0x6

_0dfbc4_data:
		.fill   0x4

_0dfbc8_data:
		.fill   0x64

_0dfc2c_data:
		.fill   0x4

_0dfc30_data:
		.fill   0x4

_0dfc34_data:
		.ascii  "\x00\x00"

_0dfc36_data:
		.ascii  "\x00\x00"

_0dfc38_data:
		.ascii  "\x00\x00"

_0dfc3a_data:
		.ascii  "\x00\x00"

_0dfc3c_data:
		.ascii  "\x00\x00"

_0dfc3e_data:
		.ascii  "\x00\x00"

_0dfc40_data:
		.ascii  "\x00\x00"

_0dfc42_data:
		.ascii  "\x00\x00"

_0dfc44_data:
		.ascii  "\x00\x00"

_0dfc46_data:
		.ascii  "\x00\x00"

_0dfc48_data:
		.ascii  "\x00\x00"

_0dfc4a_data:
		.ascii  "\x00\x00"

_0dfc4c_data:
		.ascii  "\x00\x00"

_0dfc4e_data:
		.ascii  "\x00\x00"

_0dfc50_data:
		.ascii  "\x00\x00"

_0dfc52_data:
		.ascii  "\x00\x00"

_0dfc54_data:
		.ascii  "\x00\x00"

_0dfc56_data:
		.ascii  "\x00\x00"

_0dfc58_data:
		.ascii  "\x00\x00"

_0dfc5a_data:
		.ascii  "\x00\x00"

_0dfc5c_data:
		.ascii  "\x00\x00"

_0dfc5e_data:
		.ascii  "\x00\x00"

_0dfc60_data:
		.ascii  "\x00\x00"

_0dfc62_data:
		.ascii  "\x00"

_0dfc63_data:
		.ascii  "\x00"

_0dfc64_data:
		.ascii  "\x00"

_0dfc65_data:
		.ascii  "\x00"

_0dfc66_data:
		.ascii  "\x00"

_0dfc67_data:
		.ascii  "\x00"

_0dfc68_data:
		.ascii  "\x00"

_0dfc69_data:
		.fill   0x7

_0dfc70_data:
		.fill   0x80

_0dfcf0_data:
		.fill   0x4

_0dfcf4_data:
		.fill   0x4

_0dfcf8_data:
		.ascii  "\x00\x00"

_0dfcfa_data:
		.ascii  "\x00\x00"

_0dfcfc_data:
		.ascii  "\x00\x00"

_0dfcfe_data:
		.ascii  "\x00\x00"

_0dfd00_data:
		.ascii  "\x00\x00"

_0dfd02_data:
		.ascii  "\x00\x00"

_0dfd04_data:
		.ascii  "\x00\x00"

_0dfd06_data:
		.ascii  "\x00\x00"

_0dfd08_data:
		.ascii  "\x00\x00"

_0dfd0a_data:
		.ascii  "\x00\x00"

_0dfd0c_data:
		.ascii  "\x00\x00"

_0dfd0e_data:
		.ascii  "\x00\x00"

_0dfd10_data:
		.ascii  "\x00\x00"

_0dfd12_data:
		.ascii  "\x00\x00"

_0dfd14_data:
		.ascii  "\x00\x00"

_0dfd16_data:
		.ascii  "\x00\x00"

_0dfd18_data:
		.fill   0x4

_0dfd1c_data:
		.fill   0x4

_0dfd20_data:
		.fill   0x4

_0dfd24_data:
		.fill   0x4

_0dfd28_data:
		.fill   0x4

_0dfd2c_data:
		.fill   0x4

_0dfd30_data:
		.fill   0x4

_0dfd34_data:
		.fill   0x4

_0dfd38_data:
		.fill   0x4

_0dfd3c_data:
		.fill   0x4

_0dfd40_data:
		.fill   0x4

_0dfd44_data:
		.fill   0x4

_0dfd48_data:
		.fill   0x4

_0dfd4c_data:
		.fill   0x4

_0dfd50_data:
		.fill   0x4

_0dfd54_data:
		.fill   0x4

_0dfd58_data:
		.fill   0x4

_0dfd5c_data:
		.fill   0x4

_0dfd60_data:
		.fill   0x4

_0dfd64_data:
		.fill   0x1c

_0dfd80_data:
		.fill   0x1c

_0dfd9c_data:
		.fill   0x3c

_0dfdd8_data:
		.fill   0x3311

_0e30e9_data:
		.ascii  "\x00\x00\x00"

_0e30ec_data:
		.ascii  "\x00"

_0e30ed_data:
		.ascii  "\x00"

_0e30ee_data:
		.fill   0x2fe

_0e33ec_data:
		.fill   0x300

_0e36ec_data:
		.fill   0x300

_0e39ec_data:
		.ascii  "\x00"

_0e39ed_data:
		.ascii  "\x00"

_0e39ee_data:
		.fill   0x2fe

_0e3cec_data:
		.fill   0x4

_0e3cf0_data:
		.fill   0x4

_0e3cf4_data:
		.fill   0x4

_0e3cf8_data:
		.fill   0x4

_0e3cfc_data:
		.fill   0x4

_0e3d00_data:
		.fill   0x4

_0e3d04_data:
		.fill   0x4

_0e3d08_data:
		.fill   0x4

_0e3d0c_data:
		.fill   0x4

_0e3d10_data:
		.fill   0x4

_0e3d14_data:
		.fill   0x4

_0e3d18_data:
		.ascii  "\x00"

_0e3d19_data:
		.fill   0x7

_0e3d20_data:
		.ascii  "\x00\x00"

_0e3d22_data:
		.ascii  "\x00\x00"

_0e3d24_data:
		.ascii  "\x00\x00"

_0e3d26_data:
		.ascii  "\x00\x00"

_0e3d28_data:
		.ascii  "\x00\x00"

_0e3d2a_data:
		.ascii  "\x00\x00"

_0e3d2c_data:
		.ascii  "\x00\x00"

_0e3d2e_data:
		.ascii  "\x00\x00"

_0e3d30_data:
		.ascii  "\x00\x00"

_0e3d32_data:
		.ascii  "\x00\x00"

_0e3d34_data:
		.ascii  "\x00\x00"

_0e3d36_data:
		.ascii  "\x00"

_0e3d37_data:
		.ascii  "\x00"

_0e3d38_data:
		.ascii  "\x00"

_0e3d39_data:
		.ascii  "\x00\x00"

_0e3d3b_data:
		.ascii  "\x00"

_0e3d3c_data:
		.ascii  "\x00"

_0e3d3d_data:
		.ascii  "\x00"

_0e3d3e_data:
		.ascii  "\x00"

_0e3d3f_data:
		.ascii  "\x00"

_0e3d40_data:
		.fill   0x80

_0e3dc0_data:
		.fill   0x8

_0e3dc8_data:
		.ascii  "\x00\x00"

_0e3dca_data:
		.ascii  "\x00\x00"

_0e3dcc_data:
		.ascii  "\x00\x00"

_0e3dce_data:
		.ascii  "\x00\x00"

_0e3dd0_data:
		.ascii  "\x00\x00"

_0e3dd2_data:
		.ascii  "\x00\x00"

_0e3dd4_data:
		.ascii  "\x00\x00"

_0e3dd6_data:
		.ascii  "\x00\x00"

_0e3dd8_data:
		.ascii  "\x00"

_0e3dd9_data:
		.ascii  "\x00"

_0e3dda_data:
		.ascii  "\x00"

_0e3ddb_data:
		.ascii  "\x00"

_0e3ddc_data:
		.fill   0x4

_0e3de0_data:
		.ascii  "\x00"

_0e3de1_data:
		.ascii  "\x00"

_0e3de2_data:
		.ascii  "\x00\x00"

_0e3de4_data:
		.ascii  "\x00\x00"

_0e3de6_data:
		.ascii  "\x00\x00"

_0e3de8_data:
		.ascii  "\x00\x00"

_0e3dea_data:
		.ascii  "\x00\x00"

_0e3dec_data:
		.ascii  "\x00\x00"

_0e3dee_data:
		.ascii  "\x00\x00"

_0e3df0_data:
		.ascii  "\x00\x00"

_0e3df2_data:
		.ascii  "\x00\x00"

_0e3df4_data:
		.ascii  "\x00\x00"

_0e3df6_data:
		.ascii  "\x00\x00"

_0e3df8_data:
		.ascii  "\x00\x00"

_0e3dfa_data:
		.ascii  "\x00\x00"

_0e3dfc_data:
		.ascii  "\x00"

_0e3dfd_data:
		.ascii  "\x00"

_0e3dfe_data:
		.fill   0x52

_0e3e50_data:
		.ascii  "\x00\x00"

_0e3e52_data:
		.ascii  "\x00\x00"

_0e3e54_data:
		.ascii  "\x00"

_0e3e55_data:
		.ascii  "\x00"

_0e3e56_data:
		.ascii  "\x00"

_0e3e57_data:
		.ascii  "\x00"

_0e3e58_data:
		.ascii  "\x00"

_0e3e59_data:
		.ascii  "\x00"

_0e3e5a_data:
		.ascii  "\x00\x00"

_0e3e5c_data:
		.fill   0x4

_0e3e60_data:
		.ascii  "\x00"

_0e3e61_data:
		.ascii  "\x00\x00\x00"

_0e3e64_data:
		.fill   0x4

_0e3e68_data:
		.fill   0x8

_0e3e70_data:
		.fill   0x4

_0e3e74_data:
		.fill   0x4

_0e3e78_data:
		.fill   0x4

_0e3e7c_data:
		.fill   0xc

_0e3e88_data:
		.fill   0x4

_0e3e8c_data:
		.fill   0x4

_0e3e90_data:
		.fill   0x4

_0e3e94_data:
		.fill   0x4

_0e3e98_data:
		.ascii  "\x00\x00"

_0e3e9a_data:
		.ascii  "\x00\x00"

_0e3e9c_data:
		.fill   0x8

_0e3ea4_data:
		.fill   0x4

_0e3ea8_data:
		.fill   0x4

_0e3eac_data:
		.fill   0xc

_0e3eb8_data:
		.fill   0x4

_0e3ebc_data:
		.ascii  "\x00\x00"

_0e3ebe_data:
		.ascii  "\x00\x00"

_0e3ec0_data:
		.fill   0x26

_0e3ee6_data:
		.ascii  "\x00\x00"

_0e3ee8_data:
		.fill   0x26

_0e3f0e_data:
		.ascii  "\x00\x00"

_0e3f10_data:
		.ascii  "\x00\x00"

_0e3f12_data:
		.ascii  "\x00\x00"

_0e3f14_data:
		.ascii  "\x00\x00"

_0e3f16_data:
		.ascii  "\x00\x00"

_0e3f18_data:
		.ascii  "\x00\x00"

_0e3f1a_data:
		.ascii  "\x00\x00"

_0e3f1c_data:
		.ascii  "\x00\x00"

_0e3f1e_data:
		.ascii  "\x00\x00"

_0e3f20_data:
		.fill   0x4

_0e3f24_data:
		.fill   0xd0

_0e3ff4_data:
		.fill   0xc

_0e4000_data:
		.ascii  "\x00\x00"

_0e4002_data:
		.ascii  "\x00\x00"

_0e4004_data:
		.ascii  "\x00\x00"

_0e4006_data:
		.fill   0x17a

_0e4180_data:
		.fill   0x4

_0e4184_data:
		.ascii  "\x00\x00"

_0e4186_data:
		.fill   0x4

_0e418a_data:
		.fill   0x6

_0e4190_data:
		.fill   0x4

_0e4194_data:
		.ascii  "\x00"

_0e4195_data:
		.ascii  "\x00"

_0e4196_data:
		.ascii  "\x00\x00"

_0e4198_data:
		.ascii  "\x00\x00"

_0e419a_data:
		.ascii  "\x00\x00"

_0e419c_data:
		.ascii  "\x00\x00"

_0e419e_data:
		.ascii  "\x00\x00"

_0e41a0_data:
		.ascii  "\x00\x00"

_0e41a2_data:
		.ascii  "\x00\x00"

_0e41a4_data:
		.ascii  "\x00"

_0e41a5_data:
		.ascii  "\x00"

_0e41a6_data:
		.ascii  "\x00"

_0e41a7_data:
		.ascii  "\x00"

_0e41a8_data:
		.ascii  "\x00\x00"

_0e41aa_data:
		.ascii  "\x00\x00"

_0e41ac_data:
		.ascii  "\x00\x00"

_0e41ae_data:
		.ascii  "\x00\x00"

_0e41b0_data:
		.ascii  "\x00\x00"

_0e41b2_data:
		.ascii  "\x00\x00"

_0e41b4_data:
		.ascii  "\x00\x00"

_0e41b6_data:
		.ascii  "\x00\x00"

_0e41b8_data:
		.fill   0x9c

_0e4254_data:
		.ascii  "\x00\x00"

_0e4256_data:
		.ascii  "\x00\x00"

_0e4258_data:
		.ascii  "\x00\x00"

_0e425a_data:
		.ascii  "\x00\x00"

_0e425c_data:
		.ascii  "\x00"

_0e425d_data:
		.ascii  "\x00\x00\x00"

_0e4260_data:
		.fill   0x4

_0e4264_data:
		.fill   0x4

_0e4268_data:
		.fill   0x1c0c

_0e5e74_data:
		.ascii  "\x00\x00"

_0e5e76_data:
		.ascii  "\x00\x00"

_0e5e78_data:
		.ascii  "\x00\x00"

_0e5e7a_data:
		.ascii  "\x00\x00"

_0e5e7c_data:
		.fill   0x4

_0e5e80_data:
		.fill   0x4

_0e5e84_data:
		.fill   0xc

_0e5e90_data:
		.fill   0x4

_0e5e94_data:
		.fill   0xc

_0e5ea0_data:
		.fill   0x4

_0e5ea4_data:
		.fill   0x4

_0e5ea8_data:
		.fill   0x80

_0e5f28_data:
		.fill   0x4

_0e5f2c_data:
		.fill   0x4

_0e5f30_data:
		.fill   0x4

_0e5f34_data:
		.fill   0x4

_0e5f38_data:
		.fill   0x4

_0e5f3c_data:
		.fill   0x4

_0e5f40_data:
		.fill   0x4

_0e5f44_data:
		.fill   0x4

_0e5f48_data:
		.fill   0x4

_0e5f4c_data:
		.fill   0x4

_0e5f50_data:
		.fill   0x24

_0e5f74_data:
		.ascii  "\x00\x00"

_0e5f76_data:
		.ascii  "\x00\x00"

_0e5f78_data:
		.fill   0x2008
